From pdftex-patches at sarovar.org  Sun Apr  5 23:56:44 2009
From: pdftex-patches at sarovar.org (pdftex-patches at sarovar.org)
Date: Mon, 06 Apr 2009 03:26:44 +0530
Subject: [NTG-pdftex] =?utf-8?q?=5Bpdftex-Patches=5D=5B2091=5D_bugfix_for_?=
	=?utf-8?q?=232090?=
Message-ID: <E1LqaKa-000248-4m@sarovar.org>

Patches item #2091, was opened at 2008-09-17 06:59
>Status: Closed
Priority: 3
Submitted By: The Thanh Han (hanthethanh)
Assigned to: Nobody (None)
Summary: bugfix for #2090 
Category: None
Group: None
>Resolution: Accepted


Initial Comment:
this patch is for 1.40.9 and the stable branch only.

----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2008-09-17 07:03

Message:
update: don't forget to rerun autoconf after applying the patch.

----------------------------------------------------------------------

You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=495&aid=2091&group_id=106

From pdftex-patches at sarovar.org  Mon Apr  6 00:01:07 2009
From: pdftex-patches at sarovar.org (pdftex-patches at sarovar.org)
Date: Mon, 06 Apr 2009 03:31:07 +0530
Subject: [NTG-pdftex] =?utf-8?q?=5Bpdftex-Patches=5D=5B469=5D_=5Ccurrentex?=
	=?utf-8?q?pansionmode_+_=5Cifalignscanning_-_=5Cifinedef?=
Message-ID: <E1LqaOp-00024r-P1@sarovar.org>

Patches item #469, was opened at 2006-01-12 01:39
>Status: Closed
Priority: 3
Submitted By: Morten H?gholm (morten)
Assigned to: The Thanh Han (hanthethanh)
Summary: \currentexpansionmode + \ifalignscanning - \ifinedef 
Category: Primitives
Group: v1.40.0
>Resolution: Rejected


Initial Comment:
Here's a patch made against pdftex-1.40.0-alpha-20060111.  It 
removes the \ifinedef primitive for a different primitive, namely 
\currentexpansionmode. This read-only register is 0 when doing 
regular typesetting, 1 when inside \edef or \xdef and 2 in other 
cases of full expansion with scan_toks. It could possibly be 
extended to distinguish between \marks and \write etc. Comments 
more than welcome on this one!

I have also added an \ifalignscanning test. It is true whenever TeX 
is looking for \noalign etc. so is most useful for a 
\stopalignscanning function defined as 
  \def\stopalignscanning{\ifalignscanning\relax\fi}


----------------------------------------------------------------------

Comment By: Frank Mittelbach (mittelbach)
Date: 2006-02-15 17:38

Message:
Logged In: YES 
user_id=3421

concerning register versus individual \if... primitves: I  
agree that numeric values are less easy to read but if the  
numeric codes are well chosen then they have the advantage  
of not cluttering the code, eg if you have to test for a  
number of different cases then a set of nested \if's is  
also not really helpful. Suppose for example you have to  
do different actions depending on the type of expansion.  
Then the register allows you to do this in a since \ifcase  
or in some \ifnum ...> . But of course this only works is  
the order is adjusted to typical usages.  
  
And non-numerical ones could still be implemented  
efficently at the macro level, eg  
  
 \def\ifinedef{\ifnum 1=\currentexpansionmode} 
 
as to \stopalignscanning: this is not identical to 
\protected as protection prevents expansion in all cases 
which is not necessarily what you need 
 
my 2 cents 
frank 

----------------------------------------------------------------------

Comment By: Hans Hagen (hagen)
Date: 2006-01-17 22:22

Message:
Logged In: YES 
user_id=927

concerning alignments: 

- how about adding \everyaligncell (in addition to \everycr) 

- how about the other iftests? 

- (and \nospan -) 

----------------------------------------------------------------------

Comment By: Morten H?gholm (morten)
Date: 2006-01-16 20:23

Message:
Logged In: YES 
user_id=3333

@None: An \ifalignscanning primitive can also help macros like LaTeX's 
\multicolumn and other code that relies on seeing \noalign or \omit to 
recover gracefully with a comprehensible error message.

----------------------------------------------------------------------

Comment By: Morten H?gholm (morten)
Date: 2006-01-13 04:50

Message:
Logged In: YES 
user_id=3333

Yes, just ideas here, which is why I asked for comments. We can discuss 
this on the list (once my subscription is accepted).

----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2006-01-12 10:22

Message:
Logged In: YES 
user_id=1608

Like Hans, I also prefer separate if primitives, mainly
because I do not want to have to remember the meanings 
of the possible integer values (for that reason, I'm not 
too happy about \currentgrouptype either). 

Taco

----------------------------------------------------------------------

Comment By: Nobody (None)
Date: 2006-01-12 09:14

Message:
Logged In: NO 

i wonder why we need \ifalignscanning or \stopalignscanner
at all when
eTeX already has this feature - any \protected macro stops the
scanning.


----------------------------------------------------------------------

Comment By: Hans Hagen (hagen)
Date: 2006-01-12 08:08

Message:
Logged In: YES 
user_id=927

somehow i think that if's are a better idea than a register
because in your case the register only registers one case at
the same time

(when i saw this patch the first time, i wondered why not a
complete set was implemented) 

- ifincsname
- ifinedef
- ifinwrite
- ifinspecial
- ifinpdfliteral 
- ifinannotbody
- ifinmessage (special case of write)
- ifinalign
- ifinmark 

probably some more (ok, normally all those conditions can
comfortably be catched in a macro package but if we add
them, we should be complete 

in addition to this there can be a register which keeps
track of the innermost one (we can have ifcsname inside an
edef inside an align 

concerning the \stopalignscanner i think it's better to have
something primitive like \crcr, say \endalign because using
if's can have its own problem 

(we should not worry to much about a name clash, since one
can always let it to another one); so, we should wait with
adding this patches till (1) we agree and (2) it is complete 

remark: also, it's dangerous to add patched before a decent
decission/interface is dediced upon; once it's in, we cannot
change it any more 


Hans 

----------------------------------------------------------------------

You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=495&aid=469&group_id=106

From pdftex-bugs at sarovar.org  Mon Apr  6 00:55:51 2009
From: pdftex-bugs at sarovar.org (pdftex-bugs at sarovar.org)
Date: Mon, 06 Apr 2009 04:25:51 +0530
Subject: [NTG-pdftex] =?utf-8?q?=5Bpdftex-Bugs=5D=5B993=5D_/Names_array_no?=
	=?utf-8?q?t_sorted_correctly?=
Message-ID: <E1LqbFn-00061u-FA@sarovar.org>

Bugs item #993, was opened at 2008-05-24 13:24
>Status: Closed
Priority: 3
Submitted By: Martin Schr?der (oneiros)
Assigned to: The Thanh Han (hanthethanh)
Summary: /Names array not sorted correctly 
Category: None
Group: v1.40.6
>Resolution: Wont Fix


Initial Comment:
Axel Berger and Heiko Oberdiek report an error with the sorting of the
/Names array:

/Names [(cite.Kr07) 44 0 R (cite.Li08) 45 0 R (cite.M\37403) 23 0 R
(cite.Mi00) 47 0 R (cite.Mi84) 48 0 R (cite.Mo04) 50 0 R]

"cite.M?03" (= "cite.M\37403") should come after "cite.Mo04".

A test file with output is attached.


----------------------------------------------------------------------

>Comment By: The Thanh Han (hanthethanh)
Date: 2009-04-05 22:55

Message:
since the beginning we chose not to parse pdf string of \pdf* commands. Fixing this now would mean a too big change in pdftex code. Sorry.

----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2008-05-27 16:48

Message:
ok then this should be fixed as the spec says. BTW, it doesn't really solve the reported problem (? will come after eg z).

----------------------------------------------------------------------

Comment By: Hans Hagen (hagen)
Date: 2008-05-27 16:03

Message:
the spec says: 

The Names entries in the leaf (or root) nodes contain the
tree?s keys and their associated values, arranged in
key-value pairs and sorted lexically in ascending order by
key. Shorter keys appear before longer ones beginning with
the same byte sequence. The encoding of the keys is
immaterial as long as it is self-consistent; keys are
compared for equality on a simple byte-by-byte basis. 

so, it's just bytes

----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2008-05-27 15:43

Message:
this is a problem, but it's not clear to me how it should be fixed. Assume that we translate "\374" to the corresponding charcode (0374 = 252) before sorting, then how we decide the lexicographic order of that char? it can be intepreted as ? but also can be eg ytilde or something different, depending on the encoding we use. Comments?

----------------------------------------------------------------------

You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=993&group_id=106

From pdftex-bugs at sarovar.org  Mon Apr  6 01:10:08 2009
From: pdftex-bugs at sarovar.org (pdftex-bugs at sarovar.org)
Date: Mon, 06 Apr 2009 04:40:08 +0530
Subject: [NTG-pdftex] =?utf-8?q?=5Bpdftex-Bugs=5D=5B2100=5D_colors_on_page?=
	=?utf-8?q?_influenced_by_included_pdf_image?=
Message-ID: <E1LqbTc-0006W0-2r@sarovar.org>

Bugs item #2100, was opened at 2008-10-08 22:18
>Status: Closed
Priority: 3
Submitted By: Stefan Becuwe  (sbecuwe)
Assigned to: Nobody (None)
Summary: colors on page influenced by included pdf image 
Category: PDF inclusion
Group: v1.40.8
>Resolution: Rejected


Initial Comment:
I've got a problem with defined colors on a page when I include a pdf image.
The original file (regression-org.pdf) is included on the second page: blue and red on that page are different from the blue and red on the other pages.  However, if I convert the included pdf image to ps via pdftops and back to pdf via pstopdf (regression.pdf), there's no problem as shown on the last page.  Is this a bug in pdftex, or am I using an "incorrectly" generated pdf image file, since a double conversion seems to produce the correct output?  (I'm using texlive's 2008 pdftex 1.40.9)

Best regards


Stefan  

----------------------------------------------------------------------

>Comment By: The Thanh Han (hanthethanh)
Date: 2009-04-05 23:10

Message:
I confirm the problem, but this doesn't seem a bug of pdftex. We will reopen this if more evidence is provided.  

----------------------------------------------------------------------

Comment By: Martin Schr?der (oneiros)
Date: 2008-10-10 08:56

Message:
I don't think the problem here is transparency (I don't find a /Group), but ICC, as regression-org.pdf uses an /ICCbased colorspace. Oh, and I get the same colours here with 1.40.9 and AR8 on Linux.

----------------------------------------------------------------------

Comment By: Heiko Oberdiek (oberdiek)
Date: 2008-10-10 08:13

Message:
It's a known problem of later AR versions if transparency
is involved. Then AR seems to be using a different
method for displaying the page and colors may change.
PostScript doesn't support transparency, thus converting
to PS and back to PDF gets rid of the transparency.

Tested with:
* AR7/Linux, AR8/Linux: wrong displayed colors
* AR5/Linux: correct colors
* xpdf3.00: correct colors
* gs8.54: correct colors, but warnings for second page:
  CS/cs (setcolorspace) operand not a name:
  [/ICCBased -dict-]
* gs8.62: fails on page two with /unknownerror.

Yours sincerely
  Heiko <oberdiek at uni-freiburg.de>

----------------------------------------------------------------------

You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=2100&group_id=106

From pdftex-bugs at sarovar.org  Mon Apr  6 01:23:10 2009
From: pdftex-bugs at sarovar.org (pdftex-bugs at sarovar.org)
Date: Mon, 06 Apr 2009 04:53:10 +0530
Subject: [NTG-pdftex] =?utf-8?q?=5Bpdftex-Bugs=5D=5B884=5D_Letterspacing_a?=
	=?utf-8?q?nd_non-autoexpanded_fonts?=
Message-ID: <E1LqbgE-0006y5-CE@sarovar.org>

Bugs item #884, was opened at 2007-11-27 09:53
>Status: Closed
Priority: 2
Submitted By: Robert (schlcht)
Assigned to: The Thanh Han (hanthethanh)
Summary: Letterspacing and non-autoexpanded fonts 
Category: hz
Group: v1.40.5
>Resolution: Wont Fix


Initial Comment:
While auto-expanding letterspaced fonts works fine now,
there still is a problem with non-automatic expansion.
The following will complain about a missing tfm file.

It doesn't make a difference whether the expanded font
instance is created from an mf file (like below), via
`ExtendFont' in the map file, or even whether it was
created from a MM font (ie., the expanded instance
actually exists as a pfb file).
The latter case is what bothers me the most.

\pdfadjustspacing2
\pdfmapline{ cmr10}
\pdfmapline{+cmr10+100}
\font\cmr=cmr10 \cmr
\letterspacefont\cmrls=\cmr 100
\pdffontexpand\cmrls 100 0 100 %autoexpand
\cmrls
Hamburgefonts\par
\parfillskip 0pt
Hamburgefonts
\bye

PS: what about the `invalid entry' complaint for the
map lines? Are they not legal?

----------------------------------------------------------------------

>Comment By: The Thanh Han (hanthethanh)
Date: 2009-04-05 23:23

Message:
Re: the invalid entry: it should be something like this:

\pdfmapline{+cmr10+100 <cmr10+100.pfa}

(the fontfile must be present, otherwise pdftex will complain)

Re: the problem with \pdffontexpand: what happens here is as follows:

\letterspacefont\cmrls=\cmr 100 => pdftex creates a font named cmr10+100ls in memory

\pdffontexpand\cmrls 100 0 100 autoexpand => pdftex creates another font from cmr10+100ls, and name it cmr10+100ls+100
 
without "autoexpand", pdftex would look for a tfm file named cmr10+100ls+100.tfm, and henc cmr10+100 would not be loaded.

yes this is a problem, however not a bug. And there is no easy way to get this work, I am sorry but have to close this as "won't fix".

----------------------------------------------------------------------

Comment By: Robert (schlcht)
Date: 2007-12-19 16:42

Message:
Logged In: YES 
user_id=2217

> A map line needs either a psname (for not-embedded fonts) 
> or the file name (for embedded fonts)

The manual seems to suggest otherwise (re scalable Type 3
fonts). Also, older pdftex versions wouldn't throw a
warning, but use the Type 3 font instead.

----------------------------------------------------------------------

Comment By: Martin Schr?der (oneiros)
Date: 2007-11-27 10:05

Message:
Logged In: YES 
user_id=421

A map line needs either a psname (for not-embedded fonts) or
the file name (for embedded fonts)

----------------------------------------------------------------------

You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=884&group_id=106

From pdftex-bugs at sarovar.org  Mon Apr  6 01:24:11 2009
From: pdftex-bugs at sarovar.org (pdftex-bugs at sarovar.org)
Date: Mon, 06 Apr 2009 04:54:11 +0530
Subject: [NTG-pdftex] =?utf-8?q?=5Bpdftex-Bugs=5D=5B3253=5D_Bug_in_Type1_f?=
	=?utf-8?q?ont_subsetting?=
Message-ID: <E1LqbhD-00070J-5Y@sarovar.org>

Bugs item #3253, was opened at 2009-03-23 22:39
>Status: Closed
Priority: 3
Submitted By: The Thanh Han (hanthethanh)
Assigned to: The Thanh Han (hanthethanh)
Summary: Bug in Type1 font subsetting 
Category: Fonts
Group: None
Resolution: Accepted


Initial Comment:
see http://tug.org/mailman/htdig/pdftex/2009-March/007975.html

----------------------------------------------------------------------

>Comment By: The Thanh Han (hanthethanh)
Date: 2009-04-05 23:24

Message:
this has been fixed in TL and pdftex (1.40.10)

----------------------------------------------------------------------

You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=3253&group_id=106

From pdftex-patches at sarovar.org  Mon Apr  6 05:38:16 2009
From: pdftex-patches at sarovar.org (pdftex-patches at sarovar.org)
Date: Mon, 06 Apr 2009 09:08:16 +0530
Subject: [NTG-pdftex] =?utf-8?q?=5Bpdftex-Patches=5D=5B3886=5D_Fix_for_str?=
	=?utf-8?b?X2xlc3Nfc3RyIChidWcgIzk5Myk=?=
Message-ID: <E1Lqff6-0004MD-G3@sarovar.org>

Patches item #3886, was opened at 2009-04-06 05:38
Status: Open
Priority: 3
Submitted By: Heiko Oberdiek (oberdiek)
Assigned to: Nobody (None)
Summary: Fix for str_less_str (bug #993) 
Category: None
Group: None
Resolution: None


Initial Comment:
The patch is based on pdftex-1.40.9.

It fixes the bug #993 `/Names array not sorted correctly'
by correcting function `str_less_str'.

In theory pdfTeX can still be fooled by
* invalid pdf strings and
* equal destination names that only differs
  in the way of escaping.

But both problems can be solved at macro level by passing
the name argument of \pdfdest through \pdfescapestring.

Yours sincerely
  Heiko <oberdiek at uni-freiburg.de>


----------------------------------------------------------------------

You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=495&aid=3886&group_id=106

From pdftex-bugs at sarovar.org  Mon Apr  6 05:49:53 2009
From: pdftex-bugs at sarovar.org (pdftex-bugs at sarovar.org)
Date: Mon, 06 Apr 2009 09:19:53 +0530
Subject: [NTG-pdftex] =?utf-8?q?=5Bpdftex-Bugs=5D=5B993=5D_/Names_array_no?=
	=?utf-8?q?t_sorted_correctly?=
Message-ID: <E1LqfqL-0005I3-2S@sarovar.org>

Bugs item #993, was opened at 2008-05-24 15:24
Status: Closed
Priority: 3
Submitted By: Martin Schr?der (oneiros)
Assigned to: The Thanh Han (hanthethanh)
Summary: /Names array not sorted correctly 
Category: None
Group: v1.40.6
Resolution: Wont Fix


Initial Comment:
Axel Berger and Heiko Oberdiek report an error with the sorting of the
/Names array:

/Names [(cite.Kr07) 44 0 R (cite.Li08) 45 0 R (cite.M\37403) 23 0 R
(cite.Mi00) 47 0 R (cite.Mi84) 48 0 R (cite.Mo04) 50 0 R]

"cite.M?03" (= "cite.M\37403") should come after "cite.Mo04".

A test file with output is attached.


----------------------------------------------------------------------

Comment By: Heiko Oberdiek (oberdiek)
Date: 2009-04-06 05:49

Message:
Sorry, I cannot accept the rejection, because the
problem cannot be fixed at macro level unless
* some characters (backslash, parentheses, ...)
  must be forbidden,
* octal escape sequences are used for *every* character
  of the destination name
  (otherwise a large amount of programming work is needed
  to prevent that the bug is triggered.)

Therefore I have written patch #3886 that fixes the
comparison function `str_less_str' that is used
for the sorting of destination names.

Yours sincerely
  Heiko <oberdiek at uni-freiburg.de>

----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2009-04-06 00:55

Message:
since the beginning we chose not to parse pdf string of \pdf* commands. Fixing this now would mean a too big change in pdftex code. Sorry.

----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2008-05-27 18:48

Message:
ok then this should be fixed as the spec says. BTW, it doesn't really solve the reported problem (? will come after eg z).

----------------------------------------------------------------------

Comment By: Hans Hagen (hagen)
Date: 2008-05-27 18:03

Message:
the spec says: 

The Names entries in the leaf (or root) nodes contain the
tree?s keys and their associated values, arranged in
key-value pairs and sorted lexically in ascending order by
key. Shorter keys appear before longer ones beginning with
the same byte sequence. The encoding of the keys is
immaterial as long as it is self-consistent; keys are
compared for equality on a simple byte-by-byte basis. 

so, it's just bytes

----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2008-05-27 17:43

Message:
this is a problem, but it's not clear to me how it should be fixed. Assume that we translate "\374" to the corresponding charcode (0374 = 252) before sorting, then how we decide the lexicographic order of that char? it can be intepreted as ? but also can be eg ytilde or something different, depending on the encoding we use. Comments?

----------------------------------------------------------------------

You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=993&group_id=106

From pdftex-patches at sarovar.org  Mon Apr  6 06:08:01 2009
From: pdftex-patches at sarovar.org (pdftex-patches at sarovar.org)
Date: Mon, 06 Apr 2009 09:38:01 +0530
Subject: [NTG-pdftex] =?utf-8?q?=5Bpdftex-Patches=5D=5B3886=5D_Fix_for_str?=
	=?utf-8?b?X2xlc3Nfc3RyIChidWcgIzk5Myk=?=
Message-ID: <E1Lqg7t-00062v-LZ@sarovar.org>

Patches item #3886, was opened at 2009-04-06 05:38
Status: Open
Priority: 3
Submitted By: Heiko Oberdiek (oberdiek)
Assigned to: Nobody (None)
Summary: Fix for str_less_str (bug #993) 
Category: None
Group: None
Resolution: None


Initial Comment:
The patch is based on pdftex-1.40.9.

It fixes the bug #993 `/Names array not sorted correctly'
by correcting function `str_less_str'.

In theory pdfTeX can still be fooled by
* invalid pdf strings and
* equal destination names that only differs
  in the way of escaping.

But both problems can be solved at macro level by passing
the name argument of \pdfdest through \pdfescapestring.

Yours sincerely
  Heiko <oberdiek at uni-freiburg.de>


----------------------------------------------------------------------

Comment By: Heiko Oberdiek (oberdiek)
Date: 2009-04-06 06:08

Message:
pdftex2.web.diff replaces pdftex.web.diff.
It handles the case correctly if the octal sequence
starts with a digit greater than three.


----------------------------------------------------------------------

You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=495&aid=3886&group_id=106

From pdftex-bugs at sarovar.org  Mon Apr  6 10:22:13 2009
From: pdftex-bugs at sarovar.org (pdftex-bugs at sarovar.org)
Date: Mon, 06 Apr 2009 13:52:13 +0530
Subject: [NTG-pdftex] =?utf-8?q?=5Bpdftex-Bugs=5D=5B993=5D_/Names_array_no?=
	=?utf-8?q?t_sorted_correctly?=
Message-ID: <E1Lqk5t-0004y9-N4@sarovar.org>

Bugs item #993, was opened at 2008-05-24 13:24
>Status: Open
Priority: 3
Submitted By: Martin Schr?der (oneiros)
Assigned to: The Thanh Han (hanthethanh)
Summary: /Names array not sorted correctly 
Category: None
Group: v1.40.6
>Resolution: Accepted


Initial Comment:
Axel Berger and Heiko Oberdiek report an error with the sorting of the
/Names array:

/Names [(cite.Kr07) 44 0 R (cite.Li08) 45 0 R (cite.M\37403) 23 0 R
(cite.Mi00) 47 0 R (cite.Mi84) 48 0 R (cite.Mo04) 50 0 R]

"cite.M?03" (= "cite.M\37403") should come after "cite.Mo04".

A test file with output is attached.


----------------------------------------------------------------------

>Comment By: The Thanh Han (hanthethanh)
Date: 2009-04-06 08:22

Message:
thanks Heiko for the patch, hence I reopened this bug report. 

----------------------------------------------------------------------

Comment By: Heiko Oberdiek (oberdiek)
Date: 2009-04-06 03:49

Message:
Sorry, I cannot accept the rejection, because the
problem cannot be fixed at macro level unless
* some characters (backslash, parentheses, ...)
  must be forbidden,
* octal escape sequences are used for *every* character
  of the destination name
  (otherwise a large amount of programming work is needed
  to prevent that the bug is triggered.)

Therefore I have written patch #3886 that fixes the
comparison function `str_less_str' that is used
for the sorting of destination names.

Yours sincerely
  Heiko <oberdiek at uni-freiburg.de>

----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2009-04-05 22:55

Message:
since the beginning we chose not to parse pdf string of \pdf* commands. Fixing this now would mean a too big change in pdftex code. Sorry.

----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2008-05-27 16:48

Message:
ok then this should be fixed as the spec says. BTW, it doesn't really solve the reported problem (? will come after eg z).

----------------------------------------------------------------------

Comment By: Hans Hagen (hagen)
Date: 2008-05-27 16:03

Message:
the spec says: 

The Names entries in the leaf (or root) nodes contain the
tree?s keys and their associated values, arranged in
key-value pairs and sorted lexically in ascending order by
key. Shorter keys appear before longer ones beginning with
the same byte sequence. The encoding of the keys is
immaterial as long as it is self-consistent; keys are
compared for equality on a simple byte-by-byte basis. 

so, it's just bytes

----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2008-05-27 15:43

Message:
this is a problem, but it's not clear to me how it should be fixed. Assume that we translate "\374" to the corresponding charcode (0374 = 252) before sorting, then how we decide the lexicographic order of that char? it can be intepreted as ? but also can be eg ytilde or something different, depending on the encoding we use. Comments?

----------------------------------------------------------------------

You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=993&group_id=106

From pdftex-patches at sarovar.org  Mon Apr  6 15:01:23 2009
From: pdftex-patches at sarovar.org (pdftex-patches at sarovar.org)
Date: Mon, 06 Apr 2009 18:31:23 +0530
Subject: [NTG-pdftex] =?utf-8?q?=5Bpdftex-Patches=5D=5B3886=5D_Fix_for_str?=
	=?utf-8?b?X2xlc3Nfc3RyIChidWcgIzk5Myk=?=
Message-ID: <E1LqoS3-0005Wx-Ng@sarovar.org>

Patches item #3886, was opened at 2009-04-06 03:38
Status: Open
Priority: 3
Submitted By: Heiko Oberdiek (oberdiek)
Assigned to: Nobody (None)
Summary: Fix for str_less_str (bug #993) 
Category: None
Group: None
Resolution: None


Initial Comment:
The patch is based on pdftex-1.40.9.

It fixes the bug #993 `/Names array not sorted correctly'
by correcting function `str_less_str'.

In theory pdfTeX can still be fooled by
* invalid pdf strings and
* equal destination names that only differs
  in the way of escaping.

But both problems can be solved at macro level by passing
the name argument of \pdfdest through \pdfescapestring.

Yours sincerely
  Heiko <oberdiek at uni-freiburg.de>


----------------------------------------------------------------------

>Comment By: The Thanh Han (hanthethanh)
Date: 2009-04-06 13:01

Message:
Heiko,

it seems the test (c2 < 32) is missing for the second string. I changed slightly your patch. It looks a bit ugly now but less redundant.


----------------------------------------------------------------------

Comment By: Heiko Oberdiek (oberdiek)
Date: 2009-04-06 04:08

Message:
pdftex2.web.diff replaces pdftex.web.diff.
It handles the case correctly if the octal sequence
starts with a digit greater than three.


----------------------------------------------------------------------

You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=495&aid=3886&group_id=106

From pdftex-patches at sarovar.org  Mon Apr  6 15:14:39 2009
From: pdftex-patches at sarovar.org (pdftex-patches at sarovar.org)
Date: Mon, 06 Apr 2009 18:44:39 +0530
Subject: [NTG-pdftex] =?utf-8?q?=5Bpdftex-Patches=5D=5B3886=5D_Fix_for_str?=
	=?utf-8?b?X2xlc3Nfc3RyIChidWcgIzk5Myk=?=
Message-ID: <E1Lqoet-0005ur-GL@sarovar.org>

Patches item #3886, was opened at 2009-04-06 05:38
Status: Open
Priority: 3
Submitted By: Heiko Oberdiek (oberdiek)
Assigned to: Nobody (None)
Summary: Fix for str_less_str (bug #993) 
Category: None
Group: None
Resolution: None


Initial Comment:
The patch is based on pdftex-1.40.9.

It fixes the bug #993 `/Names array not sorted correctly'
by correcting function `str_less_str'.

In theory pdfTeX can still be fooled by
* invalid pdf strings and
* equal destination names that only differs
  in the way of escaping.

But both problems can be solved at macro level by passing
the name argument of \pdfdest through \pdfescapestring.

Yours sincerely
  Heiko <oberdiek at uni-freiburg.de>


----------------------------------------------------------------------

Comment By: Heiko Oberdiek (oberdiek)
Date: 2009-04-06 15:14

Message:
Thanh,

I forgot. Thanks, also for removing the redundancy --
I am not too familiar with the "web" language.

Yours sincerely
  Heiko <oberdiek at uni-freiburg.de>

----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2009-04-06 15:01

Message:
Heiko,

it seems the test (c2 < 32) is missing for the second string. I changed slightly your patch. It looks a bit ugly now but less redundant.


----------------------------------------------------------------------

Comment By: Heiko Oberdiek (oberdiek)
Date: 2009-04-06 06:08

Message:
pdftex2.web.diff replaces pdftex.web.diff.
It handles the case correctly if the octal sequence
starts with a digit greater than three.


----------------------------------------------------------------------

You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=495&aid=3886&group_id=106

From pdftex-bugs at sarovar.org  Tue Apr  7 08:28:19 2009
From: pdftex-bugs at sarovar.org (pdftex-bugs at sarovar.org)
Date: Tue, 07 Apr 2009 11:58:19 +0530
Subject: [NTG-pdftex] =?utf-8?q?=5Bpdftex-Bugs=5D=5B606=5D_Forbidden_=2E?=
	=?utf-8?b?Li4gd2hpbGUgc2Nhbm5pbmcgPz8/?=
Message-ID: <E1Lr4nD-00058u-6P@sarovar.org>

Bugs item #606, was opened at 2006-09-16 22:28
Status: Open
Priority: 2
Submitted By: Hartmut Henkel (hhenkel)
Assigned to: Hartmut Henkel (hhenkel)
Summary: Forbidden ... while scanning ??? 
Category: Primitives
Group: v1.40.0
Resolution: Postponed


Initial Comment:
\pdftrailer {abc
\bye

gives

! Forbidden control sequence found while scanning text
of \pdftrailer.

but

\pdfximage {abc
\bye

or

\pdfliteral {abc
\bye

give

! Forbidden control sequence found while scanning text
of ???.

Instead of these three question marks there should be
the name of the primitive.




----------------------------------------------------------------------

>Comment By: Taco Hoekwater (taco)
Date: 2009-04-07 08:28

Message:
Attached is what I would do: patch scan_keyword() to restore
cur_cs in the 'false' case.

----------------------------------------------------------------------

Comment By: Martin Schr?der (oneiros)
Date: 2007-05-27 17:40

Message:
Logged In: YES 
user_id=421

Hartmut,
can you please check this again for 1.50?

----------------------------------------------------------------------

Comment By: Martin Schr?der (oneiros)
Date: 2006-09-21 14:22

Message:
Logged In: YES 
user_id=421

I've backed out the change; this is low priority and
probably needs more changes.

----------------------------------------------------------------------

Comment By: Hartmut Henkel (hhenkel)
Date: 2006-09-17 21:10

Message:
Logged In: YES 
user_id=929

yes, the patch works, thanks a lot! But there are in fact
many more \pdf... primitives that suffer from this problem,
actually any with a scan_keyword call before the
scan_pdf_ext_toks. After the way how it's done in
@<Implement \.{\\write}@>=, it seems that a new variable
save_cur_cs is not needed if one uses k for this purpose.
Needs change of a few k uses to j. But problematic is
\pdfoutline as it has another scan_pdf_ext_toks for the attr
keyword.

Wouldn't these many changes be too risky for 1.40.0?

----------------------------------------------------------------------

Comment By: Martin Schr?der (oneiros)
Date: 2006-09-17 18:34

Message:
Logged In: YES 
user_id=421

The patch was missing. Fixed.

----------------------------------------------------------------------

Comment By: Martin Schr?der (oneiros)
Date: 2006-09-17 16:30

Message:
Logged In: YES 
user_id=421

The cause seems to be that some scan_functions loose the
meaning of cur_cs, which leads to the ??? when reaching
<Tell the user what has run away...@>.

The attached (IMHO crude) patch fixes this for the cases you
mentioned, but there are probably other cases not found...

----------------------------------------------------------------------

You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=606&group_id=106

From pdftex-patches at sarovar.org  Tue Apr  7 16:59:44 2009
From: pdftex-patches at sarovar.org (pdftex-patches at sarovar.org)
Date: Tue, 07 Apr 2009 20:29:44 +0530
Subject: [NTG-pdftex] =?utf-8?q?=5Bpdftex-Patches=5D=5B2087=5D_Support_for?=
	=?utf-8?q?_CMap_namespaces?=
Message-ID: <E1LrCm8-00084n-QN@sarovar.org>

Patches item #2087, was opened at 2008-08-28 08:17
Status: Open
Priority: 3
Submitted By: Vasile Gaburici (vga)
Assigned to: Nobody (None)
Summary: Support for CMap namespaces 
Category: Fonts
Group: v1.40.0
Resolution: None


Initial Comment:
There are a couple of LaTeX packages out there (cmap and mmap) that provide CMaps. They don't work as well as \pdfglyphtounicode, i.e. virtual fonts
don't get CMaps at all (the CMap is included in the PDF but not
referenced), and otftotfm-installed fonts lack the CMap entries for
the ligatures that otftotfm sneaks in empty slots. As you know,
\pdfglyphtounicode fixes these problems.

On the other hand, these two packages let the user specify a CMap for
each LaTeX encoding, so the user ca give different Unicode values to
the same PS glyph name in different LaTeX encodings. Of course that
works properly only if the fonts invoked by the different LaTeX
encodings are different; otherwise only one can win the \pdffontattr.
A compelling application of this feature are CMaps that set math code
points (usually above BMP) for TeX math fonts; those glyphs have
exactly the same names as in text fonts /A etc. Adding namespaces to
\pdfglyphtounicode makes those two packages obsolete in their current
implementation.

Another advantage of namespaces is the ability to (reliably) fix
TrueType font CMaps. The troublesome glyphs are usually ligatures that
don't have a Unicode entry (Th, ti, tf, ffb, etc.), which otftotfm
writes as /indexZZZ in the enc file. Putting those in a per-font
namespace avoids any potential clashes.

So, I've patched pdftex to provide namespaces using the following
syntax extension: the first argument of \pdfglyphtounicode can now
take additional forms:
\pdfglyphtounicode{fnt:tex-font-name/ps-glyph-name}{...}
\pdfglyphtounicode{enc:ps-enc-name/ps-glyph-name}{...}

Since fonts for which the built-in encoding is used happen to be
exactly those that have multiple design sizes (cmr, stmary etc.),
using a separate ps-enc-name for each is not helpful. Instead, the
'enc' namespace for those is obtained by dropping any final digits
from the font name, e.g. cmr10 has PS encoding cmr (for CMap purposes
only).

The search policy is to first search the font namespce, then the
encoding, and finally the global namespace, for which the syntax
remains unchanged. All these namespace are implemented in the same avl
tree; just using the above strings as key names. In theory this makes
the search 3 times slower, but that particular phase of pdftex hardly
takes any time, so it seemed premature to implement any optimization.

Some usage examples:

% make the ti ligature searchable in Calibri regular
\pdfglyphtounicode{fnt:calibly1--base/index415}{0074 0069}
% go crazy with Unicode math; TeX math italic gives above-BMP math A
\pdfglyphtounicode{enc:cmmi/A}{D835 DC34} % UTF16BE required

Note that search behavior for math letters varies with pdf viewers.
Acrobat implements only canonical equivalence, so you need to enter
the exact code point, and copy/paste preserves the code points, so you
can paste into a LaTeX document if it's using utf8x input encoding.
Evince implements compatibility equivalence, so it's easier to find
those math As by searching for plain A, but they also copy/paste as
plain A. You can use pdftotext however, which uses the same poppler
backend, to have the code points are preserved. I'm not really
advocating Unicode math letters, but now they're easily supported in
pdftex -- no need for manual CMaps anymore.

BTW, \pdfglyphtounicode now really needs to be documented in the
manual, so people would stop writing (buggy) CMaps by hand. I
volunteer to do it if you accept the patch :)


----------------------------------------------------------------------

>Comment By: The Thanh Han (hanthethanh)
Date: 2009-04-07 14:59

Message:
this patch is indeed very useful, however adding tfm namespace support is enough since it can cover the other case. I have changed the patch slightly to:
- drop the enc: case 
- use "tfm:" instead of "fnt:" as the tfm namespace prefix

And added a small test file.

----------------------------------------------------------------------

You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=495&aid=2087&group_id=106

From pdftex-bugs at sarovar.org  Wed Apr  8 19:24:58 2009
From: pdftex-bugs at sarovar.org (pdftex-bugs at sarovar.org)
Date: Wed, 08 Apr 2009 22:54:58 +0530
Subject: [NTG-pdftex] =?utf-8?q?=5Bpdftex-Bugs=5D=5B4014=5D_Drops_characte?=
	=?utf-8?q?rs_from_included_pdf_figure?=
Message-ID: <E1LrbWE-0005IH-8l@sarovar.org>

Bugs item #4014, was opened at 2009-04-08 21:24
Status: Open
Priority: 3
Submitted By: Andrey Paramonov (pent)
Assigned to: Nobody (None)
Summary: Drops characters from included pdf figure 
Category: PDF inclusion
Group: None
Resolution: None


Initial Comment:
To reproduce:

1) Download attached file. It is a pdf figure containing some non-latin characters. Note that the used font subset is embedded.

2) Create the following minimal LaTeX document:

\documentclass{article}

\usepackage[T2A]{fontenc}
\usepackage[utf8]{inputenc}
\usepackage[russian]{babel}

\usepackage{graphicx}

\begin{document}
\includegraphics{fig}
\end{document}

3) pdflatex it. Open the resulting pdf file and note that all non-latin characters have disappeared.

My pdflatex says:

--------- 
Running `LaTeX' on `test' with ``pdflatex  "\nonstopmode\input
{test.tex}"''
This is pdfTeXk, Version 3.141592-1.40.3 (Web2C 7.5.6)
 %&-line parsing enabled.
entering extended mode
LaTeX2e <2005/12/01>
Babel <v3.8h> and hyphenation patterns for english, usenglishmax,
dumylang, noh
yphenation, ukrainian, russian, bulgarian, loaded.

(./test.tex (/usr/share/texmf-texlive/tex/latex/base/article.cls
Document Class: article 2005/09/16 v1.4f Standard LaTeX document class
(/usr/share/texmf-texlive/tex/latex/base/size10.clo))
(/usr/share/texmf-texlive/tex/latex/base/fontenc.sty
(/usr/share/texmf-texlive/tex/latex/cyrillic/t2aenc.def)
(/usr/share/texmf-texlive/tex/latex/cyrillic/t2acmr.fd))
(/usr/share/texmf-texlive/tex/latex/base/inputenc.sty
(/usr/share/texmf-texlive/tex/latex/base/utf8.def
(/usr/share/texmf-texlive/tex/latex/base/t1enc.dfu)
(/usr/share/texmf-texlive/tex/latex/base/ot1enc.dfu)
(/usr/share/texmf-texlive/tex/latex/base/omsenc.dfu)
(/usr/share/texmf-texlive/tex/latex/base/t2aenc.dfu)))
(/usr/share/texmf-texlive/tex/generic/babel/babel.sty
(/usr/share/texmf-texlive/tex/generic/babel/russianb.ldf
(/usr/share/texmf-texlive/tex/generic/babel/babel.def)))
(/usr/share/texmf-texlive/tex/latex/graphics/graphicx.sty
(/usr/share/texmf-texlive/tex/latex/graphics/keyval.sty)
(/usr/share/texmf-texlive/tex/latex/graphics/graphics.sty
(/usr/share/texmf-texlive/tex/latex/graphics/trig.sty)
(/etc/texmf/tex/latex/config/graphics.cfg)
(/usr/share/texmf-texlive/tex/latex/pdftex-def/pdftex.def))) (./
test.aux)
<fig.pdf, id=1, 578.16pt x 289.08pt> <use fig.pdf>
Overfull \hbox (248.15858pt too wide) in paragraph at lines 10--11
[][]
[1{/var/lib/texmf/fonts/map/pdftex/updmap/pdftex.map} <./fig.pdf>] (./
test.aux)
 )
(see the transcript file for additional information){/usr/share/texmf/
fonts/enc
/dvips/cm-super/cm-super-t2a.enc}</usr/share/texmf/fonts/type1/public/
cm-super/
sfrm1000.pfb></usr/share/texmf-texlive/fonts/type1/urw/times/
utmr8a.pfb

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10019' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10021' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10026' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10028' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10030' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10031' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10032' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10033' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10035' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10049' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10065' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10067' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10070' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10075' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10077' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10079' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10080' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10082' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10084' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10096' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10097' undefined

Output written on test.pdf (1 page, 19327 bytes).
Transcript written on test.log.

LaTeX finished at Wed Apr  8 00:01:45
--------- 

My pdftex --version says:

--------- 
pdfTeX using libpoppler 3.141592-1.40.3-2.2 (Web2C 7.5.6)
kpathsea version 3.5.6
Copyright 2007 Peter Breitenlohner (eTeX)/Han The Thanh (pdfTeX).
Kpathsea is copyright 2007 Karl Berry and Olaf Weber.
There is NO warranty.  Redistribution of this software is
covered by the terms of both the pdfTeX using libpoppler copyright and
the Lesser GNU General Public License.
For more information about these matters, see the file
named COPYING and the pdfTeX using libpoppler source.
Primary author of pdfTeX using libpoppler: Peter Breitenlohner (eTeX)/Han The Thanh (pdfTeX).
Kpathsea written by Karl Berry, Olaf Weber, and others.

Compiled with libpng 1.2.35; using libpng 1.2.35
Compiled with zlib 1.2.3.3; using zlib 1.2.3.3
Compiled with libpoppler version 0.10.4
--------- 

I'm ready to provide any additional info,
Andrey Paramonov


----------------------------------------------------------------------

You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=4014&group_id=106

From pdftex-bugs at sarovar.org  Wed Apr  8 20:59:16 2009
From: pdftex-bugs at sarovar.org (pdftex-bugs at sarovar.org)
Date: Thu, 09 Apr 2009 00:29:16 +0530
Subject: [NTG-pdftex] =?utf-8?q?=5Bpdftex-Bugs=5D=5B4014=5D_Drops_characte?=
	=?utf-8?q?rs_from_included_pdf_figure?=
Message-ID: <E1LrczU-00065q-Jo@sarovar.org>

Bugs item #4014, was opened at 2009-04-08 17:24
Status: Open
Priority: 3
Submitted By: Andrey Paramonov (pent)
Assigned to: Nobody (None)
Summary: Drops characters from included pdf figure 
Category: PDF inclusion
Group: None
>Resolution: Wont Fix


Initial Comment:
To reproduce:

1) Download attached file. It is a pdf figure containing some non-latin characters. Note that the used font subset is embedded.

2) Create the following minimal LaTeX document:

\documentclass{article}

\usepackage[T2A]{fontenc}
\usepackage[utf8]{inputenc}
\usepackage[russian]{babel}

\usepackage{graphicx}

\begin{document}
\includegraphics{fig}
\end{document}

3) pdflatex it. Open the resulting pdf file and note that all non-latin characters have disappeared.

My pdflatex says:

--------- 
Running `LaTeX' on `test' with ``pdflatex  "\nonstopmode\input
{test.tex}"''
This is pdfTeXk, Version 3.141592-1.40.3 (Web2C 7.5.6)
 %&-line parsing enabled.
entering extended mode
LaTeX2e <2005/12/01>
Babel <v3.8h> and hyphenation patterns for english, usenglishmax,
dumylang, noh
yphenation, ukrainian, russian, bulgarian, loaded.

(./test.tex (/usr/share/texmf-texlive/tex/latex/base/article.cls
Document Class: article 2005/09/16 v1.4f Standard LaTeX document class
(/usr/share/texmf-texlive/tex/latex/base/size10.clo))
(/usr/share/texmf-texlive/tex/latex/base/fontenc.sty
(/usr/share/texmf-texlive/tex/latex/cyrillic/t2aenc.def)
(/usr/share/texmf-texlive/tex/latex/cyrillic/t2acmr.fd))
(/usr/share/texmf-texlive/tex/latex/base/inputenc.sty
(/usr/share/texmf-texlive/tex/latex/base/utf8.def
(/usr/share/texmf-texlive/tex/latex/base/t1enc.dfu)
(/usr/share/texmf-texlive/tex/latex/base/ot1enc.dfu)
(/usr/share/texmf-texlive/tex/latex/base/omsenc.dfu)
(/usr/share/texmf-texlive/tex/latex/base/t2aenc.dfu)))
(/usr/share/texmf-texlive/tex/generic/babel/babel.sty
(/usr/share/texmf-texlive/tex/generic/babel/russianb.ldf
(/usr/share/texmf-texlive/tex/generic/babel/babel.def)))
(/usr/share/texmf-texlive/tex/latex/graphics/graphicx.sty
(/usr/share/texmf-texlive/tex/latex/graphics/keyval.sty)
(/usr/share/texmf-texlive/tex/latex/graphics/graphics.sty
(/usr/share/texmf-texlive/tex/latex/graphics/trig.sty)
(/etc/texmf/tex/latex/config/graphics.cfg)
(/usr/share/texmf-texlive/tex/latex/pdftex-def/pdftex.def))) (./
test.aux)
<fig.pdf, id=1, 578.16pt x 289.08pt> <use fig.pdf>
Overfull \hbox (248.15858pt too wide) in paragraph at lines 10--11
[][]
[1{/var/lib/texmf/fonts/map/pdftex/updmap/pdftex.map} <./fig.pdf>] (./
test.aux)
 )
(see the transcript file for additional information){/usr/share/texmf/
fonts/enc
/dvips/cm-super/cm-super-t2a.enc}</usr/share/texmf/fonts/type1/public/
cm-super/
sfrm1000.pfb></usr/share/texmf-texlive/fonts/type1/urw/times/
utmr8a.pfb

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10019' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10021' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10026' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10028' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10030' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10031' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10032' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10033' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10035' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10049' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10065' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10067' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10070' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10075' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10077' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10079' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10080' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10082' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10084' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10096' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10097' undefined

Output written on test.pdf (1 page, 19327 bytes).
Transcript written on test.log.

LaTeX finished at Wed Apr  8 00:01:45
--------- 

My pdftex --version says:

--------- 
pdfTeX using libpoppler 3.141592-1.40.3-2.2 (Web2C 7.5.6)
kpathsea version 3.5.6
Copyright 2007 Peter Breitenlohner (eTeX)/Han The Thanh (pdfTeX).
Kpathsea is copyright 2007 Karl Berry and Olaf Weber.
There is NO warranty.  Redistribution of this software is
covered by the terms of both the pdfTeX using libpoppler copyright and
the Lesser GNU General Public License.
For more information about these matters, see the file
named COPYING and the pdfTeX using libpoppler source.
Primary author of pdfTeX using libpoppler: Peter Breitenlohner (eTeX)/Han The Thanh (pdfTeX).
Kpathsea written by Karl Berry, Olaf Weber, and others.

Compiled with libpng 1.2.35; using libpng 1.2.35
Compiled with zlib 1.2.3.3; using zlib 1.2.3.3
Compiled with libpoppler version 0.10.4
--------- 

I'm ready to provide any additional info,
Andrey Paramonov


----------------------------------------------------------------------

>Comment By: The Thanh Han (hanthethanh)
Date: 2009-04-08 18:59

Message:
I guess the figure was created with a modified version of utmr8a.pfb (NimbusRomNo9L-Regu), since the original utmr8a.pfb doesn't have non-latin glyphs. This is not a bug of pdftex. For a workaround, please see
http://sarovar.org/tracker/index.php?func=detail&aid=2092&group_id=106&atid=493

----------------------------------------------------------------------

You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=4014&group_id=106

From pdftex-bugs at sarovar.org  Wed Apr  8 21:02:15 2009
From: pdftex-bugs at sarovar.org (pdftex-bugs at sarovar.org)
Date: Thu, 09 Apr 2009 00:32:15 +0530
Subject: [NTG-pdftex] =?utf-8?q?=5Bpdftex-Bugs=5D=5B4014=5D_Drops_characte?=
	=?utf-8?q?rs_from_included_pdf_figure?=
Message-ID: <E1Lrd2N-00066O-DF@sarovar.org>

Bugs item #4014, was opened at 2009-04-08 17:24
Status: Open
Priority: 3
Submitted By: Andrey Paramonov (pent)
Assigned to: Nobody (None)
Summary: Drops characters from included pdf figure 
Category: PDF inclusion
Group: None
Resolution: Wont Fix


Initial Comment:
To reproduce:

1) Download attached file. It is a pdf figure containing some non-latin characters. Note that the used font subset is embedded.

2) Create the following minimal LaTeX document:

\documentclass{article}

\usepackage[T2A]{fontenc}
\usepackage[utf8]{inputenc}
\usepackage[russian]{babel}

\usepackage{graphicx}

\begin{document}
\includegraphics{fig}
\end{document}

3) pdflatex it. Open the resulting pdf file and note that all non-latin characters have disappeared.

My pdflatex says:

--------- 
Running `LaTeX' on `test' with ``pdflatex  "\nonstopmode\input
{test.tex}"''
This is pdfTeXk, Version 3.141592-1.40.3 (Web2C 7.5.6)
 %&-line parsing enabled.
entering extended mode
LaTeX2e <2005/12/01>
Babel <v3.8h> and hyphenation patterns for english, usenglishmax,
dumylang, noh
yphenation, ukrainian, russian, bulgarian, loaded.

(./test.tex (/usr/share/texmf-texlive/tex/latex/base/article.cls
Document Class: article 2005/09/16 v1.4f Standard LaTeX document class
(/usr/share/texmf-texlive/tex/latex/base/size10.clo))
(/usr/share/texmf-texlive/tex/latex/base/fontenc.sty
(/usr/share/texmf-texlive/tex/latex/cyrillic/t2aenc.def)
(/usr/share/texmf-texlive/tex/latex/cyrillic/t2acmr.fd))
(/usr/share/texmf-texlive/tex/latex/base/inputenc.sty
(/usr/share/texmf-texlive/tex/latex/base/utf8.def
(/usr/share/texmf-texlive/tex/latex/base/t1enc.dfu)
(/usr/share/texmf-texlive/tex/latex/base/ot1enc.dfu)
(/usr/share/texmf-texlive/tex/latex/base/omsenc.dfu)
(/usr/share/texmf-texlive/tex/latex/base/t2aenc.dfu)))
(/usr/share/texmf-texlive/tex/generic/babel/babel.sty
(/usr/share/texmf-texlive/tex/generic/babel/russianb.ldf
(/usr/share/texmf-texlive/tex/generic/babel/babel.def)))
(/usr/share/texmf-texlive/tex/latex/graphics/graphicx.sty
(/usr/share/texmf-texlive/tex/latex/graphics/keyval.sty)
(/usr/share/texmf-texlive/tex/latex/graphics/graphics.sty
(/usr/share/texmf-texlive/tex/latex/graphics/trig.sty)
(/etc/texmf/tex/latex/config/graphics.cfg)
(/usr/share/texmf-texlive/tex/latex/pdftex-def/pdftex.def))) (./
test.aux)
<fig.pdf, id=1, 578.16pt x 289.08pt> <use fig.pdf>
Overfull \hbox (248.15858pt too wide) in paragraph at lines 10--11
[][]
[1{/var/lib/texmf/fonts/map/pdftex/updmap/pdftex.map} <./fig.pdf>] (./
test.aux)
 )
(see the transcript file for additional information){/usr/share/texmf/
fonts/enc
/dvips/cm-super/cm-super-t2a.enc}</usr/share/texmf/fonts/type1/public/
cm-super/
sfrm1000.pfb></usr/share/texmf-texlive/fonts/type1/urw/times/
utmr8a.pfb

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10019' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10021' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10026' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10028' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10030' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10031' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10032' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10033' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10035' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10049' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10065' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10067' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10070' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10075' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10077' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10079' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10080' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10082' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10084' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10096' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10097' undefined

Output written on test.pdf (1 page, 19327 bytes).
Transcript written on test.log.

LaTeX finished at Wed Apr  8 00:01:45
--------- 

My pdftex --version says:

--------- 
pdfTeX using libpoppler 3.141592-1.40.3-2.2 (Web2C 7.5.6)
kpathsea version 3.5.6
Copyright 2007 Peter Breitenlohner (eTeX)/Han The Thanh (pdfTeX).
Kpathsea is copyright 2007 Karl Berry and Olaf Weber.
There is NO warranty.  Redistribution of this software is
covered by the terms of both the pdfTeX using libpoppler copyright and
the Lesser GNU General Public License.
For more information about these matters, see the file
named COPYING and the pdfTeX using libpoppler source.
Primary author of pdfTeX using libpoppler: Peter Breitenlohner (eTeX)/Han The Thanh (pdfTeX).
Kpathsea written by Karl Berry, Olaf Weber, and others.

Compiled with libpng 1.2.35; using libpng 1.2.35
Compiled with zlib 1.2.3.3; using zlib 1.2.3.3
Compiled with libpoppler version 0.10.4
--------- 

I'm ready to provide any additional info,
Andrey Paramonov


----------------------------------------------------------------------

>Comment By: The Thanh Han (hanthethanh)
Date: 2009-04-08 19:02

Message:
update: the previous link was broken, correction:
http://sarovar.org/tracker/index.php?func=detail&aid=2092&group_id=106&atid=493

----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2009-04-08 18:59

Message:
I guess the figure was created with a modified version of utmr8a.pfb (NimbusRomNo9L-Regu), since the original utmr8a.pfb doesn't have non-latin glyphs. This is not a bug of pdftex. For a workaround, please see
http://sarovar.org/tracker/index.php?func=detail&aid=2092&group_id=106&atid=493

----------------------------------------------------------------------

You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=4014&group_id=106

From pdftex-bugs at sarovar.org  Wed Apr  8 21:05:16 2009
From: pdftex-bugs at sarovar.org (pdftex-bugs at sarovar.org)
Date: Thu, 09 Apr 2009 00:35:16 +0530
Subject: [NTG-pdftex] =?utf-8?q?=5Bpdftex-Bugs=5D=5B4014=5D_Drops_characte?=
	=?utf-8?q?rs_from_included_pdf_figure?=
Message-ID: <E1Lrd5I-00066p-0r@sarovar.org>

Bugs item #4014, was opened at 2009-04-08 17:24
Status: Open
Priority: 3
Submitted By: Andrey Paramonov (pent)
Assigned to: Nobody (None)
Summary: Drops characters from included pdf figure 
Category: PDF inclusion
Group: None
Resolution: Wont Fix


Initial Comment:
To reproduce:

1) Download attached file. It is a pdf figure containing some non-latin characters. Note that the used font subset is embedded.

2) Create the following minimal LaTeX document:

\documentclass{article}

\usepackage[T2A]{fontenc}
\usepackage[utf8]{inputenc}
\usepackage[russian]{babel}

\usepackage{graphicx}

\begin{document}
\includegraphics{fig}
\end{document}

3) pdflatex it. Open the resulting pdf file and note that all non-latin characters have disappeared.

My pdflatex says:

--------- 
Running `LaTeX' on `test' with ``pdflatex  "\nonstopmode\input
{test.tex}"''
This is pdfTeXk, Version 3.141592-1.40.3 (Web2C 7.5.6)
 %&-line parsing enabled.
entering extended mode
LaTeX2e <2005/12/01>
Babel <v3.8h> and hyphenation patterns for english, usenglishmax,
dumylang, noh
yphenation, ukrainian, russian, bulgarian, loaded.

(./test.tex (/usr/share/texmf-texlive/tex/latex/base/article.cls
Document Class: article 2005/09/16 v1.4f Standard LaTeX document class
(/usr/share/texmf-texlive/tex/latex/base/size10.clo))
(/usr/share/texmf-texlive/tex/latex/base/fontenc.sty
(/usr/share/texmf-texlive/tex/latex/cyrillic/t2aenc.def)
(/usr/share/texmf-texlive/tex/latex/cyrillic/t2acmr.fd))
(/usr/share/texmf-texlive/tex/latex/base/inputenc.sty
(/usr/share/texmf-texlive/tex/latex/base/utf8.def
(/usr/share/texmf-texlive/tex/latex/base/t1enc.dfu)
(/usr/share/texmf-texlive/tex/latex/base/ot1enc.dfu)
(/usr/share/texmf-texlive/tex/latex/base/omsenc.dfu)
(/usr/share/texmf-texlive/tex/latex/base/t2aenc.dfu)))
(/usr/share/texmf-texlive/tex/generic/babel/babel.sty
(/usr/share/texmf-texlive/tex/generic/babel/russianb.ldf
(/usr/share/texmf-texlive/tex/generic/babel/babel.def)))
(/usr/share/texmf-texlive/tex/latex/graphics/graphicx.sty
(/usr/share/texmf-texlive/tex/latex/graphics/keyval.sty)
(/usr/share/texmf-texlive/tex/latex/graphics/graphics.sty
(/usr/share/texmf-texlive/tex/latex/graphics/trig.sty)
(/etc/texmf/tex/latex/config/graphics.cfg)
(/usr/share/texmf-texlive/tex/latex/pdftex-def/pdftex.def))) (./
test.aux)
<fig.pdf, id=1, 578.16pt x 289.08pt> <use fig.pdf>
Overfull \hbox (248.15858pt too wide) in paragraph at lines 10--11
[][]
[1{/var/lib/texmf/fonts/map/pdftex/updmap/pdftex.map} <./fig.pdf>] (./
test.aux)
 )
(see the transcript file for additional information){/usr/share/texmf/
fonts/enc
/dvips/cm-super/cm-super-t2a.enc}</usr/share/texmf/fonts/type1/public/
cm-super/
sfrm1000.pfb></usr/share/texmf-texlive/fonts/type1/urw/times/
utmr8a.pfb

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10019' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10021' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10026' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10028' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10030' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10031' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10032' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10033' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10035' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10049' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10065' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10067' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10070' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10075' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10077' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10079' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10080' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10082' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10084' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10096' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10097' undefined

Output written on test.pdf (1 page, 19327 bytes).
Transcript written on test.log.

LaTeX finished at Wed Apr  8 00:01:45
--------- 

My pdftex --version says:

--------- 
pdfTeX using libpoppler 3.141592-1.40.3-2.2 (Web2C 7.5.6)
kpathsea version 3.5.6
Copyright 2007 Peter Breitenlohner (eTeX)/Han The Thanh (pdfTeX).
Kpathsea is copyright 2007 Karl Berry and Olaf Weber.
There is NO warranty.  Redistribution of this software is
covered by the terms of both the pdfTeX using libpoppler copyright and
the Lesser GNU General Public License.
For more information about these matters, see the file
named COPYING and the pdfTeX using libpoppler source.
Primary author of pdfTeX using libpoppler: Peter Breitenlohner (eTeX)/Han The Thanh (pdfTeX).
Kpathsea written by Karl Berry, Olaf Weber, and others.

Compiled with libpng 1.2.35; using libpng 1.2.35
Compiled with zlib 1.2.3.3; using zlib 1.2.3.3
Compiled with libpoppler version 0.10.4
--------- 

I'm ready to provide any additional info,
Andrey Paramonov


----------------------------------------------------------------------

>Comment By: The Thanh Han (hanthethanh)
Date: 2009-04-08 19:05

Message:
update: the link was wrong again; somehow a ';' was automatically inserted to the link. 

Please see bug #2092 for a similar problem and workaround.

----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2009-04-08 19:02

Message:
update: the previous link was broken, correction:
http://sarovar.org/tracker/index.php?func=detail&aid=2092&group_id=106&atid=493

----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2009-04-08 18:59

Message:
I guess the figure was created with a modified version of utmr8a.pfb (NimbusRomNo9L-Regu), since the original utmr8a.pfb doesn't have non-latin glyphs. This is not a bug of pdftex. For a workaround, please see
http://sarovar.org/tracker/index.php?func=detail&aid=2092&group_id=106&atid=493

----------------------------------------------------------------------

You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=4014&group_id=106

From pdftex-bugs at sarovar.org  Thu Apr  9 06:13:54 2009
From: pdftex-bugs at sarovar.org (pdftex-bugs at sarovar.org)
Date: Thu, 09 Apr 2009 09:43:54 +0530
Subject: [NTG-pdftex] =?utf-8?q?=5Bpdftex-Bugs=5D=5B4014=5D_Drops_characte?=
	=?utf-8?q?rs_from_included_pdf_figure?=
Message-ID: <E1LrleE-0004D0-I9@sarovar.org>

Bugs item #4014, was opened at 2009-04-08 21:24
Status: Open
Priority: 3
Submitted By: Andrey Paramonov (pent)
Assigned to: Nobody (None)
Summary: Drops characters from included pdf figure 
Category: PDF inclusion
Group: None
Resolution: Wont Fix


Initial Comment:
To reproduce:

1) Download attached file. It is a pdf figure containing some non-latin characters. Note that the used font subset is embedded.

2) Create the following minimal LaTeX document:

\documentclass{article}

\usepackage[T2A]{fontenc}
\usepackage[utf8]{inputenc}
\usepackage[russian]{babel}

\usepackage{graphicx}

\begin{document}
\includegraphics{fig}
\end{document}

3) pdflatex it. Open the resulting pdf file and note that all non-latin characters have disappeared.

My pdflatex says:

--------- 
Running `LaTeX' on `test' with ``pdflatex  "\nonstopmode\input
{test.tex}"''
This is pdfTeXk, Version 3.141592-1.40.3 (Web2C 7.5.6)
 %&-line parsing enabled.
entering extended mode
LaTeX2e <2005/12/01>
Babel <v3.8h> and hyphenation patterns for english, usenglishmax,
dumylang, noh
yphenation, ukrainian, russian, bulgarian, loaded.

(./test.tex (/usr/share/texmf-texlive/tex/latex/base/article.cls
Document Class: article 2005/09/16 v1.4f Standard LaTeX document class
(/usr/share/texmf-texlive/tex/latex/base/size10.clo))
(/usr/share/texmf-texlive/tex/latex/base/fontenc.sty
(/usr/share/texmf-texlive/tex/latex/cyrillic/t2aenc.def)
(/usr/share/texmf-texlive/tex/latex/cyrillic/t2acmr.fd))
(/usr/share/texmf-texlive/tex/latex/base/inputenc.sty
(/usr/share/texmf-texlive/tex/latex/base/utf8.def
(/usr/share/texmf-texlive/tex/latex/base/t1enc.dfu)
(/usr/share/texmf-texlive/tex/latex/base/ot1enc.dfu)
(/usr/share/texmf-texlive/tex/latex/base/omsenc.dfu)
(/usr/share/texmf-texlive/tex/latex/base/t2aenc.dfu)))
(/usr/share/texmf-texlive/tex/generic/babel/babel.sty
(/usr/share/texmf-texlive/tex/generic/babel/russianb.ldf
(/usr/share/texmf-texlive/tex/generic/babel/babel.def)))
(/usr/share/texmf-texlive/tex/latex/graphics/graphicx.sty
(/usr/share/texmf-texlive/tex/latex/graphics/keyval.sty)
(/usr/share/texmf-texlive/tex/latex/graphics/graphics.sty
(/usr/share/texmf-texlive/tex/latex/graphics/trig.sty)
(/etc/texmf/tex/latex/config/graphics.cfg)
(/usr/share/texmf-texlive/tex/latex/pdftex-def/pdftex.def))) (./
test.aux)
<fig.pdf, id=1, 578.16pt x 289.08pt> <use fig.pdf>
Overfull \hbox (248.15858pt too wide) in paragraph at lines 10--11
[][]
[1{/var/lib/texmf/fonts/map/pdftex/updmap/pdftex.map} <./fig.pdf>] (./
test.aux)
 )
(see the transcript file for additional information){/usr/share/texmf/
fonts/enc
/dvips/cm-super/cm-super-t2a.enc}</usr/share/texmf/fonts/type1/public/
cm-super/
sfrm1000.pfb></usr/share/texmf-texlive/fonts/type1/urw/times/
utmr8a.pfb

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10019' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10021' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10026' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10028' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10030' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10031' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10032' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10033' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10035' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10049' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10065' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10067' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10070' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10075' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10077' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10079' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10080' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10082' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10084' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10096' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10097' undefined

Output written on test.pdf (1 page, 19327 bytes).
Transcript written on test.log.

LaTeX finished at Wed Apr  8 00:01:45
--------- 

My pdftex --version says:

--------- 
pdfTeX using libpoppler 3.141592-1.40.3-2.2 (Web2C 7.5.6)
kpathsea version 3.5.6
Copyright 2007 Peter Breitenlohner (eTeX)/Han The Thanh (pdfTeX).
Kpathsea is copyright 2007 Karl Berry and Olaf Weber.
There is NO warranty.  Redistribution of this software is
covered by the terms of both the pdfTeX using libpoppler copyright and
the Lesser GNU General Public License.
For more information about these matters, see the file
named COPYING and the pdfTeX using libpoppler source.
Primary author of pdfTeX using libpoppler: Peter Breitenlohner (eTeX)/Han The Thanh (pdfTeX).
Kpathsea written by Karl Berry, Olaf Weber, and others.

Compiled with libpng 1.2.35; using libpng 1.2.35
Compiled with zlib 1.2.3.3; using zlib 1.2.3.3
Compiled with libpoppler version 0.10.4
--------- 

I'm ready to provide any additional info,
Andrey Paramonov


----------------------------------------------------------------------

Comment By: Andrey Paramonov (pent)
Date: 2009-04-09 08:13

Message:
Yes, probably a different version of the font was used to create the figure. I don't see however why it is forbidden.

The font embedding feature has been *designed* to resolve the problems with different version of the fonts. If pdftex ignores the feature, and does so consciously, I see the problem is in pdftex.

The discussion and workarounds mentioned in #2092 suggest that by default, pdftex tries to be clever and drops embedded fonts that would later be included anyway. In this case however pdftex becomes overconfident and drops fonts it cannot later restore. To me, this is a clear optimization bug.

Andrey Paramonov


----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2009-04-08 23:05

Message:
update: the link was wrong again; somehow a ';' was automatically inserted to the link. 

Please see bug #2092 for a similar problem and workaround.

----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2009-04-08 23:02

Message:
update: the previous link was broken, correction:
http://sarovar.org/tracker/index.php?func=detail&aid=2092&group_id=106&atid=493

----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2009-04-08 22:59

Message:
I guess the figure was created with a modified version of utmr8a.pfb (NimbusRomNo9L-Regu), since the original utmr8a.pfb doesn't have non-latin glyphs. This is not a bug of pdftex. For a workaround, please see
http://sarovar.org/tracker/index.php?func=detail&aid=2092&group_id=106&atid=493

----------------------------------------------------------------------

You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=4014&group_id=106

From pdftex-bugs at sarovar.org  Thu Apr  9 07:41:25 2009
From: pdftex-bugs at sarovar.org (pdftex-bugs at sarovar.org)
Date: Thu, 09 Apr 2009 11:11:25 +0530
Subject: [NTG-pdftex] =?utf-8?q?=5Bpdftex-Bugs=5D=5B4014=5D_Drops_characte?=
	=?utf-8?q?rs_from_included_pdf_figure?=
Message-ID: <E1Lrn0v-0006Ot-LP@sarovar.org>

Bugs item #4014, was opened at 2009-04-08 17:24
>Status: Closed
Priority: 3
Submitted By: Andrey Paramonov (pent)
Assigned to: Nobody (None)
Summary: Drops characters from included pdf figure 
Category: PDF inclusion
Group: None
Resolution: Wont Fix


Initial Comment:
To reproduce:

1) Download attached file. It is a pdf figure containing some non-latin characters. Note that the used font subset is embedded.

2) Create the following minimal LaTeX document:

\documentclass{article}

\usepackage[T2A]{fontenc}
\usepackage[utf8]{inputenc}
\usepackage[russian]{babel}

\usepackage{graphicx}

\begin{document}
\includegraphics{fig}
\end{document}

3) pdflatex it. Open the resulting pdf file and note that all non-latin characters have disappeared.

My pdflatex says:

--------- 
Running `LaTeX' on `test' with ``pdflatex  "\nonstopmode\input
{test.tex}"''
This is pdfTeXk, Version 3.141592-1.40.3 (Web2C 7.5.6)
 %&-line parsing enabled.
entering extended mode
LaTeX2e <2005/12/01>
Babel <v3.8h> and hyphenation patterns for english, usenglishmax,
dumylang, noh
yphenation, ukrainian, russian, bulgarian, loaded.

(./test.tex (/usr/share/texmf-texlive/tex/latex/base/article.cls
Document Class: article 2005/09/16 v1.4f Standard LaTeX document class
(/usr/share/texmf-texlive/tex/latex/base/size10.clo))
(/usr/share/texmf-texlive/tex/latex/base/fontenc.sty
(/usr/share/texmf-texlive/tex/latex/cyrillic/t2aenc.def)
(/usr/share/texmf-texlive/tex/latex/cyrillic/t2acmr.fd))
(/usr/share/texmf-texlive/tex/latex/base/inputenc.sty
(/usr/share/texmf-texlive/tex/latex/base/utf8.def
(/usr/share/texmf-texlive/tex/latex/base/t1enc.dfu)
(/usr/share/texmf-texlive/tex/latex/base/ot1enc.dfu)
(/usr/share/texmf-texlive/tex/latex/base/omsenc.dfu)
(/usr/share/texmf-texlive/tex/latex/base/t2aenc.dfu)))
(/usr/share/texmf-texlive/tex/generic/babel/babel.sty
(/usr/share/texmf-texlive/tex/generic/babel/russianb.ldf
(/usr/share/texmf-texlive/tex/generic/babel/babel.def)))
(/usr/share/texmf-texlive/tex/latex/graphics/graphicx.sty
(/usr/share/texmf-texlive/tex/latex/graphics/keyval.sty)
(/usr/share/texmf-texlive/tex/latex/graphics/graphics.sty
(/usr/share/texmf-texlive/tex/latex/graphics/trig.sty)
(/etc/texmf/tex/latex/config/graphics.cfg)
(/usr/share/texmf-texlive/tex/latex/pdftex-def/pdftex.def))) (./
test.aux)
<fig.pdf, id=1, 578.16pt x 289.08pt> <use fig.pdf>
Overfull \hbox (248.15858pt too wide) in paragraph at lines 10--11
[][]
[1{/var/lib/texmf/fonts/map/pdftex/updmap/pdftex.map} <./fig.pdf>] (./
test.aux)
 )
(see the transcript file for additional information){/usr/share/texmf/
fonts/enc
/dvips/cm-super/cm-super-t2a.enc}</usr/share/texmf/fonts/type1/public/
cm-super/
sfrm1000.pfb></usr/share/texmf-texlive/fonts/type1/urw/times/
utmr8a.pfb

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10019' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10021' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10026' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10028' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10030' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10031' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10032' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10033' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10035' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10049' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10065' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10067' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10070' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10075' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10077' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10079' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10080' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10082' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10084' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10096' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10097' undefined

Output written on test.pdf (1 page, 19327 bytes).
Transcript written on test.log.

LaTeX finished at Wed Apr  8 00:01:45
--------- 

My pdftex --version says:

--------- 
pdfTeX using libpoppler 3.141592-1.40.3-2.2 (Web2C 7.5.6)
kpathsea version 3.5.6
Copyright 2007 Peter Breitenlohner (eTeX)/Han The Thanh (pdfTeX).
Kpathsea is copyright 2007 Karl Berry and Olaf Weber.
There is NO warranty.  Redistribution of this software is
covered by the terms of both the pdfTeX using libpoppler copyright and
the Lesser GNU General Public License.
For more information about these matters, see the file
named COPYING and the pdfTeX using libpoppler source.
Primary author of pdfTeX using libpoppler: Peter Breitenlohner (eTeX)/Han The Thanh (pdfTeX).
Kpathsea written by Karl Berry, Olaf Weber, and others.

Compiled with libpng 1.2.35; using libpng 1.2.35
Compiled with zlib 1.2.3.3; using zlib 1.2.3.3
Compiled with libpoppler version 0.10.4
--------- 

I'm ready to provide any additional info,
Andrey Paramonov


----------------------------------------------------------------------

>Comment By: The Thanh Han (hanthethanh)
Date: 2009-04-09 05:41

Message:
if the font has been changed, the font name should have be changed too.

----------------------------------------------------------------------

Comment By: Andrey Paramonov (pent)
Date: 2009-04-09 04:13

Message:
Yes, probably a different version of the font was used to create the figure. I don't see however why it is forbidden.

The font embedding feature has been *designed* to resolve the problems with different version of the fonts. If pdftex ignores the feature, and does so consciously, I see the problem is in pdftex.

The discussion and workarounds mentioned in #2092 suggest that by default, pdftex tries to be clever and drops embedded fonts that would later be included anyway. In this case however pdftex becomes overconfident and drops fonts it cannot later restore. To me, this is a clear optimization bug.

Andrey Paramonov


----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2009-04-08 19:05

Message:
update: the link was wrong again; somehow a ';' was automatically inserted to the link. 

Please see bug #2092 for a similar problem and workaround.

----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2009-04-08 19:02

Message:
update: the previous link was broken, correction:
http://sarovar.org/tracker/index.php?func=detail&aid=2092&group_id=106&atid=493

----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2009-04-08 18:59

Message:
I guess the figure was created with a modified version of utmr8a.pfb (NimbusRomNo9L-Regu), since the original utmr8a.pfb doesn't have non-latin glyphs. This is not a bug of pdftex. For a workaround, please see
http://sarovar.org/tracker/index.php?func=detail&aid=2092&group_id=106&atid=493

----------------------------------------------------------------------

You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=4014&group_id=106

From pdftex-bugs at sarovar.org  Thu Apr  9 23:28:13 2009
From: pdftex-bugs at sarovar.org (pdftex-bugs at sarovar.org)
Date: Fri, 10 Apr 2009 02:58:13 +0530
Subject: [NTG-pdftex] =?utf-8?q?=5Bpdftex-Bugs=5D=5B4014=5D_Drops_characte?=
	=?utf-8?q?rs_from_included_pdf_figure?=
Message-ID: <E1Ls1nA-0003oK-Vg@sarovar.org>

Bugs item #4014, was opened at 2009-04-08 17:24
Status: Closed
Priority: 3
Submitted By: Andrey Paramonov (pent)
Assigned to: Nobody (None)
Summary: Drops characters from included pdf figure 
Category: PDF inclusion
Group: None
Resolution: Wont Fix


Initial Comment:
To reproduce:

1) Download attached file. It is a pdf figure containing some non-latin characters. Note that the used font subset is embedded.

2) Create the following minimal LaTeX document:

\documentclass{article}

\usepackage[T2A]{fontenc}
\usepackage[utf8]{inputenc}
\usepackage[russian]{babel}

\usepackage{graphicx}

\begin{document}
\includegraphics{fig}
\end{document}

3) pdflatex it. Open the resulting pdf file and note that all non-latin characters have disappeared.

My pdflatex says:

--------- 
Running `LaTeX' on `test' with ``pdflatex  "\nonstopmode\input
{test.tex}"''
This is pdfTeXk, Version 3.141592-1.40.3 (Web2C 7.5.6)
 %&-line parsing enabled.
entering extended mode
LaTeX2e <2005/12/01>
Babel <v3.8h> and hyphenation patterns for english, usenglishmax,
dumylang, noh
yphenation, ukrainian, russian, bulgarian, loaded.

(./test.tex (/usr/share/texmf-texlive/tex/latex/base/article.cls
Document Class: article 2005/09/16 v1.4f Standard LaTeX document class
(/usr/share/texmf-texlive/tex/latex/base/size10.clo))
(/usr/share/texmf-texlive/tex/latex/base/fontenc.sty
(/usr/share/texmf-texlive/tex/latex/cyrillic/t2aenc.def)
(/usr/share/texmf-texlive/tex/latex/cyrillic/t2acmr.fd))
(/usr/share/texmf-texlive/tex/latex/base/inputenc.sty
(/usr/share/texmf-texlive/tex/latex/base/utf8.def
(/usr/share/texmf-texlive/tex/latex/base/t1enc.dfu)
(/usr/share/texmf-texlive/tex/latex/base/ot1enc.dfu)
(/usr/share/texmf-texlive/tex/latex/base/omsenc.dfu)
(/usr/share/texmf-texlive/tex/latex/base/t2aenc.dfu)))
(/usr/share/texmf-texlive/tex/generic/babel/babel.sty
(/usr/share/texmf-texlive/tex/generic/babel/russianb.ldf
(/usr/share/texmf-texlive/tex/generic/babel/babel.def)))
(/usr/share/texmf-texlive/tex/latex/graphics/graphicx.sty
(/usr/share/texmf-texlive/tex/latex/graphics/keyval.sty)
(/usr/share/texmf-texlive/tex/latex/graphics/graphics.sty
(/usr/share/texmf-texlive/tex/latex/graphics/trig.sty)
(/etc/texmf/tex/latex/config/graphics.cfg)
(/usr/share/texmf-texlive/tex/latex/pdftex-def/pdftex.def))) (./
test.aux)
<fig.pdf, id=1, 578.16pt x 289.08pt> <use fig.pdf>
Overfull \hbox (248.15858pt too wide) in paragraph at lines 10--11
[][]
[1{/var/lib/texmf/fonts/map/pdftex/updmap/pdftex.map} <./fig.pdf>] (./
test.aux)
 )
(see the transcript file for additional information){/usr/share/texmf/
fonts/enc
/dvips/cm-super/cm-super-t2a.enc}</usr/share/texmf/fonts/type1/public/
cm-super/
sfrm1000.pfb></usr/share/texmf-texlive/fonts/type1/urw/times/
utmr8a.pfb

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10019' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10021' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10026' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10028' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10030' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10031' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10032' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10033' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10035' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10049' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10065' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10067' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10070' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10075' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10077' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10079' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10080' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10082' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10084' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10096' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10097' undefined

Output written on test.pdf (1 page, 19327 bytes).
Transcript written on test.log.

LaTeX finished at Wed Apr  8 00:01:45
--------- 

My pdftex --version says:

--------- 
pdfTeX using libpoppler 3.141592-1.40.3-2.2 (Web2C 7.5.6)
kpathsea version 3.5.6
Copyright 2007 Peter Breitenlohner (eTeX)/Han The Thanh (pdfTeX).
Kpathsea is copyright 2007 Karl Berry and Olaf Weber.
There is NO warranty.  Redistribution of this software is
covered by the terms of both the pdfTeX using libpoppler copyright and
the Lesser GNU General Public License.
For more information about these matters, see the file
named COPYING and the pdfTeX using libpoppler source.
Primary author of pdfTeX using libpoppler: Peter Breitenlohner (eTeX)/Han The Thanh (pdfTeX).
Kpathsea written by Karl Berry, Olaf Weber, and others.

Compiled with libpng 1.2.35; using libpng 1.2.35
Compiled with zlib 1.2.3.3; using zlib 1.2.3.3
Compiled with libpoppler version 0.10.4
--------- 

I'm ready to provide any additional info,
Andrey Paramonov


----------------------------------------------------------------------

>Comment By: The Thanh Han (hanthethanh)
Date: 2009-04-09 21:28

Message:
I think it's useful to have a summary of the problem for further reference:

- fig.pdf contains a font named NimbusRomNo9L-Regu
- pdftex sees that it has the same font on disk and tries to use the font on disk instead of copying the font from fig.pdf. (Reason: if we have eg fig.pdf & fig2.pdf, the font would be included once instead of twice)
- however these 2 fonts are different: the one embedded in fig.pdf has extra glyphs that the font on disk doesn't have. pdftex cannot know this, since the font names are the same.
- hence the output pdf doesn't have those glyphs, too.

workarounds/solutions:
- if you are in hurry, just say: \pdfinclusioncopyfonts=1 
- for more detailed info, see bug report #2092
- the proper solution IMO is to change the font name to denote that it differ from the original NimbusRomNo9L-Regu

It's questionable whether pdftex should use the font on disk instead of copying the font from fig.pdf by default. There are 2 main arguments for this behavior:

- that behavior was the default since the beginning, and it's not wise to change it; it can break pdf inclusion in existing documents
- if this behavior is not desired, it can be changed easily (\pdfinclusioncopyfonts=1)

btw, if you think this is a bug, please describe what should be the correct behavior in your opinion.

----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2009-04-09 05:41

Message:
if the font has been changed, the font name should have be changed too.

----------------------------------------------------------------------

Comment By: Andrey Paramonov (pent)
Date: 2009-04-09 04:13

Message:
Yes, probably a different version of the font was used to create the figure. I don't see however why it is forbidden.

The font embedding feature has been *designed* to resolve the problems with different version of the fonts. If pdftex ignores the feature, and does so consciously, I see the problem is in pdftex.

The discussion and workarounds mentioned in #2092 suggest that by default, pdftex tries to be clever and drops embedded fonts that would later be included anyway. In this case however pdftex becomes overconfident and drops fonts it cannot later restore. To me, this is a clear optimization bug.

Andrey Paramonov


----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2009-04-08 19:05

Message:
update: the link was wrong again; somehow a ';' was automatically inserted to the link. 

Please see bug #2092 for a similar problem and workaround.

----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2009-04-08 19:02

Message:
update: the previous link was broken, correction:
http://sarovar.org/tracker/index.php?func=detail&aid=2092&group_id=106&atid=493

----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2009-04-08 18:59

Message:
I guess the figure was created with a modified version of utmr8a.pfb (NimbusRomNo9L-Regu), since the original utmr8a.pfb doesn't have non-latin glyphs. This is not a bug of pdftex. For a workaround, please see
http://sarovar.org/tracker/index.php?func=detail&aid=2092&group_id=106&atid=493

----------------------------------------------------------------------

You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=4014&group_id=106

From oberdiek at uni-freiburg.de  Fri Apr 10 00:52:17 2009
From: oberdiek at uni-freiburg.de (Heiko Oberdiek)
Date: Fri, 10 Apr 2009 00:52:17 +0200
Subject: [NTG-pdftex] \primitive\pdfoutput cannot be queried
Message-ID: <20090409225216.GA9842@irwin.vpn.uni-freiburg.de>

Hello,

AFAIK, an expression with \primitive will become expandable
if and only if the primitive is expandable.
(pdfTeX: \pdfprimitive)

The problem arises with \pdfoutput, a kind of count register.
Therefore it isn't expandable. This doesn't hurt, if \pdfoutput
is set. However it cannot get its value anymore:

  \gdef\pdfoutput{\primitive\pdfoutput}

a) \ifcase\pdfoutput
   fails with
     ! Missing number, treated as zero.
     <to be read again> 
                        \primitive 

b) \ifcase\the\pdfoutput
   fails with
     ! You can't use `\primitive' after \the.

c) \ifcase\number\pdfoutput
   fails with
     ! Missing number, treated as zero.
     <to be read again> 
                        \primitive 

d) \count0=\pdfoutput
   fails with
     ! Missing number, treated as zero.
     <to be read again> 
                        \primitive 

Yours sincerely
  Heiko <oberdiek at uni-freiburg.de>

From taco at elvenkind.com  Fri Apr 10 09:06:36 2009
From: taco at elvenkind.com (Taco Hoekwater)
Date: Fri, 10 Apr 2009 09:06:36 +0200
Subject: [NTG-pdftex] [Dev-luatex] \primitive\pdfoutput cannot be queried
In-Reply-To: <20090409225216.GA9842@irwin.vpn.uni-freiburg.de>
References: <20090409225216.GA9842@irwin.vpn.uni-freiburg.de>
Message-ID: <49DEEFFC.1070407@elvenkind.com>

Heiko Oberdiek wrote:
> Hello,
> 
> AFAIK, an expression with \primitive will become expandable
> if and only if the primitive is expandable.
> (pdfTeX: \pdfprimitive)

I am thinking about this bug.

Best wishes,
Taco

From pdftex-bugs at sarovar.org  Fri Apr 10 21:50:17 2009
From: pdftex-bugs at sarovar.org (pdftex-bugs at sarovar.org)
Date: Sat, 11 Apr 2009 01:20:17 +0530
Subject: [NTG-pdftex] =?utf-8?q?=5Bpdftex-Bugs=5D=5B4014=5D_Drops_characte?=
	=?utf-8?q?rs_from_included_pdf_figure?=
Message-ID: <E1LsMjx-0006lz-TH@sarovar.org>

Bugs item #4014, was opened at 2009-04-08 21:24
Status: Closed
Priority: 3
Submitted By: Andrey Paramonov (pent)
Assigned to: Nobody (None)
Summary: Drops characters from included pdf figure 
Category: PDF inclusion
Group: None
Resolution: Wont Fix


Initial Comment:
To reproduce:

1) Download attached file. It is a pdf figure containing some non-latin characters. Note that the used font subset is embedded.

2) Create the following minimal LaTeX document:

\documentclass{article}

\usepackage[T2A]{fontenc}
\usepackage[utf8]{inputenc}
\usepackage[russian]{babel}

\usepackage{graphicx}

\begin{document}
\includegraphics{fig}
\end{document}

3) pdflatex it. Open the resulting pdf file and note that all non-latin characters have disappeared.

My pdflatex says:

--------- 
Running `LaTeX' on `test' with ``pdflatex  "\nonstopmode\input
{test.tex}"''
This is pdfTeXk, Version 3.141592-1.40.3 (Web2C 7.5.6)
 %&-line parsing enabled.
entering extended mode
LaTeX2e <2005/12/01>
Babel <v3.8h> and hyphenation patterns for english, usenglishmax,
dumylang, noh
yphenation, ukrainian, russian, bulgarian, loaded.

(./test.tex (/usr/share/texmf-texlive/tex/latex/base/article.cls
Document Class: article 2005/09/16 v1.4f Standard LaTeX document class
(/usr/share/texmf-texlive/tex/latex/base/size10.clo))
(/usr/share/texmf-texlive/tex/latex/base/fontenc.sty
(/usr/share/texmf-texlive/tex/latex/cyrillic/t2aenc.def)
(/usr/share/texmf-texlive/tex/latex/cyrillic/t2acmr.fd))
(/usr/share/texmf-texlive/tex/latex/base/inputenc.sty
(/usr/share/texmf-texlive/tex/latex/base/utf8.def
(/usr/share/texmf-texlive/tex/latex/base/t1enc.dfu)
(/usr/share/texmf-texlive/tex/latex/base/ot1enc.dfu)
(/usr/share/texmf-texlive/tex/latex/base/omsenc.dfu)
(/usr/share/texmf-texlive/tex/latex/base/t2aenc.dfu)))
(/usr/share/texmf-texlive/tex/generic/babel/babel.sty
(/usr/share/texmf-texlive/tex/generic/babel/russianb.ldf
(/usr/share/texmf-texlive/tex/generic/babel/babel.def)))
(/usr/share/texmf-texlive/tex/latex/graphics/graphicx.sty
(/usr/share/texmf-texlive/tex/latex/graphics/keyval.sty)
(/usr/share/texmf-texlive/tex/latex/graphics/graphics.sty
(/usr/share/texmf-texlive/tex/latex/graphics/trig.sty)
(/etc/texmf/tex/latex/config/graphics.cfg)
(/usr/share/texmf-texlive/tex/latex/pdftex-def/pdftex.def))) (./
test.aux)
<fig.pdf, id=1, 578.16pt x 289.08pt> <use fig.pdf>
Overfull \hbox (248.15858pt too wide) in paragraph at lines 10--11
[][]
[1{/var/lib/texmf/fonts/map/pdftex/updmap/pdftex.map} <./fig.pdf>] (./
test.aux)
 )
(see the transcript file for additional information){/usr/share/texmf/
fonts/enc
/dvips/cm-super/cm-super-t2a.enc}</usr/share/texmf/fonts/type1/public/
cm-super/
sfrm1000.pfb></usr/share/texmf-texlive/fonts/type1/urw/times/
utmr8a.pfb

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10019' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10021' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10026' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10028' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10030' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10031' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10032' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10033' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10035' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10049' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10065' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10067' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10070' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10075' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10077' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10079' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10080' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10082' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10084' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10096' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10097' undefined

Output written on test.pdf (1 page, 19327 bytes).
Transcript written on test.log.

LaTeX finished at Wed Apr  8 00:01:45
--------- 

My pdftex --version says:

--------- 
pdfTeX using libpoppler 3.141592-1.40.3-2.2 (Web2C 7.5.6)
kpathsea version 3.5.6
Copyright 2007 Peter Breitenlohner (eTeX)/Han The Thanh (pdfTeX).
Kpathsea is copyright 2007 Karl Berry and Olaf Weber.
There is NO warranty.  Redistribution of this software is
covered by the terms of both the pdfTeX using libpoppler copyright and
the Lesser GNU General Public License.
For more information about these matters, see the file
named COPYING and the pdfTeX using libpoppler source.
Primary author of pdfTeX using libpoppler: Peter Breitenlohner (eTeX)/Han The Thanh (pdfTeX).
Kpathsea written by Karl Berry, Olaf Weber, and others.

Compiled with libpng 1.2.35; using libpng 1.2.35
Compiled with zlib 1.2.3.3; using zlib 1.2.3.3
Compiled with libpoppler version 0.10.4
--------- 

I'm ready to provide any additional info,
Andrey Paramonov


----------------------------------------------------------------------

Comment By: Andrey Paramonov (pent)
Date: 2009-04-10 23:50

Message:
Hello!

Thanks for the detailed explanations.

I've dug a bit deeper and indeed, there are two versions of NimbusRomNo9L-Regu in my system:

/usr/share/fonts/type1/gsfonts/n021003l.pfb (v.1.0.6, dated 08/02/2007, Debian package gsfonts)

/usr/share/texmf-texlive/fonts/type1/urw/times/utmr8a.pfb (v.1.0.5, dated 01/10/2006, Debian package texlive-fonts-recommended)

The workarounds you suggest are helpful, but I still think the problem must be eliminated completely, if there is a way to do so.

Probably you are right that different fonts should always have different names. But such an assertion only works in the ideal world. In reality, if user A sends a figure to user B, there is a (rather high) chance that their versions of the font do not match. Even on my local system I'm not sure which of the packages to blame: gsfonts for not renaming font after major upgrade, or texlive-fonts-recommended for providing an old version of the font (or myself for using Debian at all ;-).

In my opinion, we should be more tolerant to what we receive. If there is a way to detect "glyph xxx undefined" situation beforehand, pdftex should do so and act as if \pdfmapline{-l7x-utmr NimbusRomNo9L-Regu} (for my example) is present in the document. Is there a way to implement such a behavior?

Thanks for your effort,
Andrey


----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2009-04-10 01:28

Message:
I think it's useful to have a summary of the problem for further reference:

- fig.pdf contains a font named NimbusRomNo9L-Regu
- pdftex sees that it has the same font on disk and tries to use the font on disk instead of copying the font from fig.pdf. (Reason: if we have eg fig.pdf & fig2.pdf, the font would be included once instead of twice)
- however these 2 fonts are different: the one embedded in fig.pdf has extra glyphs that the font on disk doesn't have. pdftex cannot know this, since the font names are the same.
- hence the output pdf doesn't have those glyphs, too.

workarounds/solutions:
- if you are in hurry, just say: \pdfinclusioncopyfonts=1 
- for more detailed info, see bug report #2092
- the proper solution IMO is to change the font name to denote that it differ from the original NimbusRomNo9L-Regu

It's questionable whether pdftex should use the font on disk instead of copying the font from fig.pdf by default. There are 2 main arguments for this behavior:

- that behavior was the default since the beginning, and it's not wise to change it; it can break pdf inclusion in existing documents
- if this behavior is not desired, it can be changed easily (\pdfinclusioncopyfonts=1)

btw, if you think this is a bug, please describe what should be the correct behavior in your opinion.

----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2009-04-09 09:41

Message:
if the font has been changed, the font name should have be changed too.

----------------------------------------------------------------------

Comment By: Andrey Paramonov (pent)
Date: 2009-04-09 08:13

Message:
Yes, probably a different version of the font was used to create the figure. I don't see however why it is forbidden.

The font embedding feature has been *designed* to resolve the problems with different version of the fonts. If pdftex ignores the feature, and does so consciously, I see the problem is in pdftex.

The discussion and workarounds mentioned in #2092 suggest that by default, pdftex tries to be clever and drops embedded fonts that would later be included anyway. In this case however pdftex becomes overconfident and drops fonts it cannot later restore. To me, this is a clear optimization bug.

Andrey Paramonov


----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2009-04-08 23:05

Message:
update: the link was wrong again; somehow a ';' was automatically inserted to the link. 

Please see bug #2092 for a similar problem and workaround.

----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2009-04-08 23:02

Message:
update: the previous link was broken, correction:
http://sarovar.org/tracker/index.php?func=detail&aid=2092&group_id=106&atid=493

----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2009-04-08 22:59

Message:
I guess the figure was created with a modified version of utmr8a.pfb (NimbusRomNo9L-Regu), since the original utmr8a.pfb doesn't have non-latin glyphs. This is not a bug of pdftex. For a workaround, please see
http://sarovar.org/tracker/index.php?func=detail&aid=2092&group_id=106&atid=493

----------------------------------------------------------------------

You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=4014&group_id=106

From taco at elvenkind.com  Sat Apr 11 16:18:41 2009
From: taco at elvenkind.com (Taco Hoekwater)
Date: Sat, 11 Apr 2009 16:18:41 +0200
Subject: [NTG-pdftex] [Dev-luatex] \primitive\pdfoutput cannot be queried
In-Reply-To: <49DEEFFC.1070407@elvenkind.com>
References: <20090409225216.GA9842@irwin.vpn.uni-freiburg.de>
	<49DEEFFC.1070407@elvenkind.com>
Message-ID: <49E0A6C1.3000602@elvenkind.com>


Hi Heiko,

Taco Hoekwater wrote:
> Heiko Oberdiek wrote:
>> Hello,
>>
>> AFAIK, an expression with \primitive will become expandable
>> if and only if the primitive is expandable.
>> (pdfTeX: \pdfprimitive)
> 
> I am thinking about this bug.

Please look at the attached patch against pdftex trunk. I have a similar
patch in luatex now, and it works ok for your example file as well as
some other stuff I tried.

The patch makes scan_something_internal (for \number and the other 
convert commands) and scan_int (other places where numbers are needed)
skip over the unexpandable version of \primitive so that it looks at
the next token, and if that token is a primitive, it uses this instead.

If the next token is not a primitive at all, then a frozen \relax is
inserted, as that is probably the best thing to do. I have considered
reporting an error, but that is too unpredictable for my taste (and a
"Missing number" error will likely follow anyway).

Please check against any other tests you may have.

Best wishes,
Taco

-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: scan_primitive.patch
URL: <http://www.ntg.nl/pipermail/ntg-pdftex/attachments/20090411/31c0c011/attachment.asc>

From pdftex-bugs at sarovar.org  Sun Apr 12 16:27:26 2009
From: pdftex-bugs at sarovar.org (pdftex-bugs at sarovar.org)
Date: Sun, 12 Apr 2009 19:57:26 +0530
Subject: [NTG-pdftex] =?utf-8?q?=5Bpdftex-Bugs=5D=5B4014=5D_Drops_characte?=
	=?utf-8?q?rs_from_included_pdf_figure?=
Message-ID: <E1Lt0ec-0007fX-OU@sarovar.org>

Bugs item #4014, was opened at 2009-04-08 17:24
Status: Closed
Priority: 3
Submitted By: Andrey Paramonov (pent)
Assigned to: Nobody (None)
Summary: Drops characters from included pdf figure 
Category: PDF inclusion
Group: None
Resolution: Wont Fix


Initial Comment:
To reproduce:

1) Download attached file. It is a pdf figure containing some non-latin characters. Note that the used font subset is embedded.

2) Create the following minimal LaTeX document:

\documentclass{article}

\usepackage[T2A]{fontenc}
\usepackage[utf8]{inputenc}
\usepackage[russian]{babel}

\usepackage{graphicx}

\begin{document}
\includegraphics{fig}
\end{document}

3) pdflatex it. Open the resulting pdf file and note that all non-latin characters have disappeared.

My pdflatex says:

--------- 
Running `LaTeX' on `test' with ``pdflatex  "\nonstopmode\input
{test.tex}"''
This is pdfTeXk, Version 3.141592-1.40.3 (Web2C 7.5.6)
 %&-line parsing enabled.
entering extended mode
LaTeX2e <2005/12/01>
Babel <v3.8h> and hyphenation patterns for english, usenglishmax,
dumylang, noh
yphenation, ukrainian, russian, bulgarian, loaded.

(./test.tex (/usr/share/texmf-texlive/tex/latex/base/article.cls
Document Class: article 2005/09/16 v1.4f Standard LaTeX document class
(/usr/share/texmf-texlive/tex/latex/base/size10.clo))
(/usr/share/texmf-texlive/tex/latex/base/fontenc.sty
(/usr/share/texmf-texlive/tex/latex/cyrillic/t2aenc.def)
(/usr/share/texmf-texlive/tex/latex/cyrillic/t2acmr.fd))
(/usr/share/texmf-texlive/tex/latex/base/inputenc.sty
(/usr/share/texmf-texlive/tex/latex/base/utf8.def
(/usr/share/texmf-texlive/tex/latex/base/t1enc.dfu)
(/usr/share/texmf-texlive/tex/latex/base/ot1enc.dfu)
(/usr/share/texmf-texlive/tex/latex/base/omsenc.dfu)
(/usr/share/texmf-texlive/tex/latex/base/t2aenc.dfu)))
(/usr/share/texmf-texlive/tex/generic/babel/babel.sty
(/usr/share/texmf-texlive/tex/generic/babel/russianb.ldf
(/usr/share/texmf-texlive/tex/generic/babel/babel.def)))
(/usr/share/texmf-texlive/tex/latex/graphics/graphicx.sty
(/usr/share/texmf-texlive/tex/latex/graphics/keyval.sty)
(/usr/share/texmf-texlive/tex/latex/graphics/graphics.sty
(/usr/share/texmf-texlive/tex/latex/graphics/trig.sty)
(/etc/texmf/tex/latex/config/graphics.cfg)
(/usr/share/texmf-texlive/tex/latex/pdftex-def/pdftex.def))) (./
test.aux)
<fig.pdf, id=1, 578.16pt x 289.08pt> <use fig.pdf>
Overfull \hbox (248.15858pt too wide) in paragraph at lines 10--11
[][]
[1{/var/lib/texmf/fonts/map/pdftex/updmap/pdftex.map} <./fig.pdf>] (./
test.aux)
 )
(see the transcript file for additional information){/usr/share/texmf/
fonts/enc
/dvips/cm-super/cm-super-t2a.enc}</usr/share/texmf/fonts/type1/public/
cm-super/
sfrm1000.pfb></usr/share/texmf-texlive/fonts/type1/urw/times/
utmr8a.pfb

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10019' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10021' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10026' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10028' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10030' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10031' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10032' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10033' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10035' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10049' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10065' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10067' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10070' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10075' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10077' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10079' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10080' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10082' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10084' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10096' undefined

pdfTeX warning: pdflatex (file /usr/share/texmf-texlive/fonts/type1/
urw/times/u
tmr8a.pfb): glyph `afii10097' undefined

Output written on test.pdf (1 page, 19327 bytes).
Transcript written on test.log.

LaTeX finished at Wed Apr  8 00:01:45
--------- 

My pdftex --version says:

--------- 
pdfTeX using libpoppler 3.141592-1.40.3-2.2 (Web2C 7.5.6)
kpathsea version 3.5.6
Copyright 2007 Peter Breitenlohner (eTeX)/Han The Thanh (pdfTeX).
Kpathsea is copyright 2007 Karl Berry and Olaf Weber.
There is NO warranty.  Redistribution of this software is
covered by the terms of both the pdfTeX using libpoppler copyright and
the Lesser GNU General Public License.
For more information about these matters, see the file
named COPYING and the pdfTeX using libpoppler source.
Primary author of pdfTeX using libpoppler: Peter Breitenlohner (eTeX)/Han The Thanh (pdfTeX).
Kpathsea written by Karl Berry, Olaf Weber, and others.

Compiled with libpng 1.2.35; using libpng 1.2.35
Compiled with zlib 1.2.3.3; using zlib 1.2.3.3
Compiled with libpoppler version 0.10.4
--------- 

I'm ready to provide any additional info,
Andrey Paramonov


----------------------------------------------------------------------

>Comment By: The Thanh Han (hanthethanh)
Date: 2009-04-12 14:27

Message:
the problem we have is basically this: we have fontA in fig.pdf and fontB on disk. They have the same name. How pdftex can detect whether fontB is a superset of fontA, so that fontA will be replaced by fontB only when it is safe to do so.

This sounds simple, but it's not easy to do for some reasons:
- pdftex parses fontB at the end, not during pdf inclusion. At this phase it's too late to change the decision whether to copy fontA.
- telling whether "fontB is a superset of fontA" is difficult. They might differ in various ways, not only in glyph set.
- fontA might be in Type1C format, which pdftex cannot parse.


----------------------------------------------------------------------

Comment By: Andrey Paramonov (pent)
Date: 2009-04-10 19:50

Message:
Hello!

Thanks for the detailed explanations.

I've dug a bit deeper and indeed, there are two versions of NimbusRomNo9L-Regu in my system:

/usr/share/fonts/type1/gsfonts/n021003l.pfb (v.1.0.6, dated 08/02/2007, Debian package gsfonts)

/usr/share/texmf-texlive/fonts/type1/urw/times/utmr8a.pfb (v.1.0.5, dated 01/10/2006, Debian package texlive-fonts-recommended)

The workarounds you suggest are helpful, but I still think the problem must be eliminated completely, if there is a way to do so.

Probably you are right that different fonts should always have different names. But such an assertion only works in the ideal world. In reality, if user A sends a figure to user B, there is a (rather high) chance that their versions of the font do not match. Even on my local system I'm not sure which of the packages to blame: gsfonts for not renaming font after major upgrade, or texlive-fonts-recommended for providing an old version of the font (or myself for using Debian at all ;-).

In my opinion, we should be more tolerant to what we receive. If there is a way to detect "glyph xxx undefined" situation beforehand, pdftex should do so and act as if \pdfmapline{-l7x-utmr NimbusRomNo9L-Regu} (for my example) is present in the document. Is there a way to implement such a behavior?

Thanks for your effort,
Andrey


----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2009-04-09 21:28

Message:
I think it's useful to have a summary of the problem for further reference:

- fig.pdf contains a font named NimbusRomNo9L-Regu
- pdftex sees that it has the same font on disk and tries to use the font on disk instead of copying the font from fig.pdf. (Reason: if we have eg fig.pdf & fig2.pdf, the font would be included once instead of twice)
- however these 2 fonts are different: the one embedded in fig.pdf has extra glyphs that the font on disk doesn't have. pdftex cannot know this, since the font names are the same.
- hence the output pdf doesn't have those glyphs, too.

workarounds/solutions:
- if you are in hurry, just say: \pdfinclusioncopyfonts=1 
- for more detailed info, see bug report #2092
- the proper solution IMO is to change the font name to denote that it differ from the original NimbusRomNo9L-Regu

It's questionable whether pdftex should use the font on disk instead of copying the font from fig.pdf by default. There are 2 main arguments for this behavior:

- that behavior was the default since the beginning, and it's not wise to change it; it can break pdf inclusion in existing documents
- if this behavior is not desired, it can be changed easily (\pdfinclusioncopyfonts=1)

btw, if you think this is a bug, please describe what should be the correct behavior in your opinion.

----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2009-04-09 05:41

Message:
if the font has been changed, the font name should have be changed too.

----------------------------------------------------------------------

Comment By: Andrey Paramonov (pent)
Date: 2009-04-09 04:13

Message:
Yes, probably a different version of the font was used to create the figure. I don't see however why it is forbidden.

The font embedding feature has been *designed* to resolve the problems with different version of the fonts. If pdftex ignores the feature, and does so consciously, I see the problem is in pdftex.

The discussion and workarounds mentioned in #2092 suggest that by default, pdftex tries to be clever and drops embedded fonts that would later be included anyway. In this case however pdftex becomes overconfident and drops fonts it cannot later restore. To me, this is a clear optimization bug.

Andrey Paramonov


----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2009-04-08 19:05

Message:
update: the link was wrong again; somehow a ';' was automatically inserted to the link. 

Please see bug #2092 for a similar problem and workaround.

----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2009-04-08 19:02

Message:
update: the previous link was broken, correction:
http://sarovar.org/tracker/index.php?func=detail&aid=2092&group_id=106&atid=493

----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2009-04-08 18:59

Message:
I guess the figure was created with a modified version of utmr8a.pfb (NimbusRomNo9L-Regu), since the original utmr8a.pfb doesn't have non-latin glyphs. This is not a bug of pdftex. For a workaround, please see
http://sarovar.org/tracker/index.php?func=detail&aid=2092&group_id=106&atid=493

----------------------------------------------------------------------

You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=4014&group_id=106

From oberdiek at uni-freiburg.de  Wed Apr 15 19:13:46 2009
From: oberdiek at uni-freiburg.de (Heiko Oberdiek)
Date: Wed, 15 Apr 2009 19:13:46 +0200
Subject: [NTG-pdftex] [Dev-luatex] \primitive\pdfoutput cannot be queried
In-Reply-To: <49E0A6C1.3000602@elvenkind.com>
References: <20090409225216.GA9842@irwin.vpn.uni-freiburg.de>
	<49DEEFFC.1070407@elvenkind.com> <49E0A6C1.3000602@elvenkind.com>
Message-ID: <20090415171346.GA18525@irwin.vpn.uni-freiburg.de>

Hello Taco,

On Sat, Apr 11, 2009 at 04:18:41PM +0200, Taco Hoekwater wrote:

> Taco Hoekwater wrote:
> >Heiko Oberdiek wrote:
> >>
> >>AFAIK, an expression with \primitive will become expandable
> >>if and only if the primitive is expandable.
> >>(pdfTeX: \pdfprimitive)
> >
> >I am thinking about this bug.
> 
> Please look at the attached patch against pdftex trunk. I have a similar
> patch in luatex now, and it works ok for your example file as well as
> some other stuff I tried.

Yes, many thanks.

> The patch makes scan_something_internal (for \number and the other 
> convert commands) and scan_int (other places where numbers are needed)
> skip over the unexpandable version of \primitive so that it looks at
> the next token, and if that token is a primitive, it uses this instead.
> 
> If the next token is not a primitive at all, then a frozen \relax is
> inserted, as that is probably the best thing to do. I have considered
> reporting an error, but that is too unpredictable for my taste (and a
> "Missing number" error will likely follow anyway).
> 
> Please check against any other tests you may have.

If the next token is not a primitive, then it vanishes:

\def\sx{\immediate\write16{[\meaning\x]}}

% ok:

\edef\x{\pdfprimitive\pdfoutput}
\sx % [macro:->\pdfprimitive \pdfoutput ]

% token vanishes in the next cases:

\edef\x{\pdfprimitive0}
\sx % [macro:->]

\edef\x{\pdfprimitive123}
\sx % [macro:->23]

\expandafter\def\expandafter\x\expandafter{\pdfprimitive0}
\sx % [macro:->]

\edef\x{\pdfprimitive\Undefined}
\sx % [macro:->]

\edef\x{\pdfprimitive $}
\sx % [macro:->]

[\pdfprimitive 0] % []

% An error message I could trigger by:

\chardef\a=10 %
\pdfprimitive\a X

! Missing control sequence inserted.
<inserted text> 
                \inaccessible 
<to be read again> 
                   X
l.70 \pdfprimitive\a X

Yours sincerely
  Heiko <oberdiek at uni-freiburg.de>
-- 

From taco at elvenkind.com  Wed Apr 15 20:02:42 2009
From: taco at elvenkind.com (Taco Hoekwater)
Date: Wed, 15 Apr 2009 20:02:42 +0200
Subject: [NTG-pdftex] [Dev-luatex] \primitive\pdfoutput cannot be queried
In-Reply-To: <20090415171346.GA18525@irwin.vpn.uni-freiburg.de>
References: <20090409225216.GA9842@irwin.vpn.uni-freiburg.de>	<49DEEFFC.1070407@elvenkind.com>
	<49E0A6C1.3000602@elvenkind.com>
	<20090415171346.GA18525@irwin.vpn.uni-freiburg.de>
Message-ID: <49E62142.90408@elvenkind.com>

Heiko Oberdiek wrote:
> 
> If the next token is not a primitive, then it vanishes:

Behaviour in that case is undefined at the moment. Perhaps I should just
generate an error if the next token is not a primitive?

Best wishes,
Taco

From oberdiek at uni-freiburg.de  Wed Apr 15 21:13:58 2009
From: oberdiek at uni-freiburg.de (Heiko Oberdiek)
Date: Wed, 15 Apr 2009 21:13:58 +0200
Subject: [NTG-pdftex] [Dev-luatex] \primitive\pdfoutput cannot be queried
In-Reply-To: <49E62142.90408@elvenkind.com>
References: <20090409225216.GA9842@irwin.vpn.uni-freiburg.de>
	<49DEEFFC.1070407@elvenkind.com> <49E0A6C1.3000602@elvenkind.com>
	<20090415171346.GA18525@irwin.vpn.uni-freiburg.de>
	<49E62142.90408@elvenkind.com>
Message-ID: <20090415191357.GA19558@irwin.vpn.uni-freiburg.de>

On Wed, Apr 15, 2009 at 08:02:42PM +0200, Taco Hoekwater wrote:

> Heiko Oberdiek wrote:
> >
> >If the next token is not a primitive, then it vanishes:
> 
> Behaviour in that case is undefined at the moment. Perhaps I should just
> generate an error if the next token is not a primitive?

Yes, IMHO error message and ignoring itself (\pdfprimitive,
not the next token) as error recovery.

First I was unsure in the case of a command token. But if someone
uses \pdfprimitive\foobar, then his intention would be that
\foobar is a primitive of the engine. Otherwise \pdfprimitive
doesn't documentate or specify a useful behaviour.
Therefore the error message makes clear that his assumption
was wrong and he gets the error message at an earlier stage.

Yours sincerely
  Heiko <oberdiek at uni-freiburg.de>
-- 

From taco at elvenkind.com  Wed Apr 15 21:53:22 2009
From: taco at elvenkind.com (Taco Hoekwater)
Date: Wed, 15 Apr 2009 21:53:22 +0200
Subject: [NTG-pdftex] [Dev-luatex] \primitive\pdfoutput cannot be queried
In-Reply-To: <20090415191357.GA19558@irwin.vpn.uni-freiburg.de>
References: <20090409225216.GA9842@irwin.vpn.uni-freiburg.de>	<49DEEFFC.1070407@elvenkind.com>
	<49E0A6C1.3000602@elvenkind.com>	<20090415171346.GA18525@irwin.vpn.uni-freiburg.de>	<49E62142.90408@elvenkind.com>
	<20090415191357.GA19558@irwin.vpn.uni-freiburg.de>
Message-ID: <49E63B32.1090704@elvenkind.com>

Heiko Oberdiek wrote:
> On Wed, Apr 15, 2009 at 08:02:42PM +0200, Taco Hoekwater wrote:
> 
>> Heiko Oberdiek wrote:
>>> If the next token is not a primitive, then it vanishes:
>> Behaviour in that case is undefined at the moment. Perhaps I should just
>> generate an error if the next token is not a primitive?
> 
> Yes, IMHO error message and ignoring itself (\pdfprimitive,
> not the next token) as error recovery.

Updated patch attached.

Best wishes,
Taco
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: scan_primitive_v2.patch
URL: <http://www.ntg.nl/pipermail/ntg-pdftex/attachments/20090415/735c8490/attachment.asc>

From oberdiek at uni-freiburg.de  Thu Apr 16 00:54:48 2009
From: oberdiek at uni-freiburg.de (Heiko Oberdiek)
Date: Thu, 16 Apr 2009 00:54:48 +0200
Subject: [NTG-pdftex] [Dev-luatex] \primitive\pdfoutput cannot be queried
In-Reply-To: <49E63B32.1090704@elvenkind.com>
References: <20090409225216.GA9842@irwin.vpn.uni-freiburg.de>
	<49DEEFFC.1070407@elvenkind.com> <49E0A6C1.3000602@elvenkind.com>
	<20090415171346.GA18525@irwin.vpn.uni-freiburg.de>
	<49E62142.90408@elvenkind.com>
	<20090415191357.GA19558@irwin.vpn.uni-freiburg.de>
	<49E63B32.1090704@elvenkind.com>
Message-ID: <20090415225447.GA4176@irwin.vpn.uni-freiburg.de>

On Wed, Apr 15, 2009 at 09:53:22PM +0200, Taco Hoekwater wrote:

> Heiko Oberdiek wrote:
> >On Wed, Apr 15, 2009 at 08:02:42PM +0200, Taco Hoekwater wrote:
> >
> >>Heiko Oberdiek wrote:
> >>>If the next token is not a primitive, then it vanishes:
> >>Behaviour in that case is undefined at the moment. Perhaps I should just
> >>generate an error if the next token is not a primitive?
> >
> >Yes, IMHO error message and ignoring itself (\pdfprimitive,
> >not the next token) as error recovery.
> 
> Updated patch attached.

Many thanks, my test file now runs fine with the expected error messages.

Yours sincerely
  Heiko <oberdiek at uni-freiburg.de>
-- 

From P.Taylor at Rhul.Ac.Uk  Wed Apr 22 12:55:56 2009
From: P.Taylor at Rhul.Ac.Uk (Philip TAYLOR)
Date: Wed, 22 Apr 2009 11:55:56 +0100
Subject: [NTG-pdftex] Urgent help needed (Document open settings)
Message-ID: <49EEF7BC.7020007@Rhul.Ac.Uk>

Dear Colleagues -- I am being driven to distraction
by my inability to persuade PdfTeX to set the default
"Document open" option to "Fit Visible".  I know
that Hyperref can accomplish this, but I am working
in TeX, not LaTeX.  I assume that an appropriate
incantation to \pdfliteral will be all that is
required, but so far Google has failed to throw
up any useful hints as to what to pass to \pdfliteral
to accomplish this.  Your help will be much appreciated.

Philip Taylor

From taco at elvenkind.com  Wed Apr 22 13:06:26 2009
From: taco at elvenkind.com (Taco Hoekwater)
Date: Wed, 22 Apr 2009 13:06:26 +0200
Subject: [NTG-pdftex] Urgent help needed (Document open settings)
In-Reply-To: <49EEF7BC.7020007@Rhul.Ac.Uk>
References: <49EEF7BC.7020007@Rhul.Ac.Uk>
Message-ID: <49EEFA32.5090609@elvenkind.com>

Philip TAYLOR wrote:
> Dear Colleagues -- I am being driven to distraction
> by my inability to persuade PdfTeX to set the default
> "Document open" option to "Fit Visible".  I know
> that Hyperref can accomplish this, but I am working
> in TeX, not LaTeX.  I assume that an appropriate
> incantation to \pdfliteral will be all that is
> required, but so far Google has failed to throw
> up any useful hints as to what to pass to \pdfliteral
> to accomplish this.  Your help will be much appreciated.

 From the context mailing list:

\pdfcatalog{
   /PageLayout /SinglePage %
   /PageMode /UseNone %
   /OpenAction [0 /FitBH 900] %
}

Best wishes,
Taco


From P.Taylor at Rhul.Ac.Uk  Wed Apr 22 13:27:33 2009
From: P.Taylor at Rhul.Ac.Uk (Philip TAYLOR)
Date: Wed, 22 Apr 2009 12:27:33 +0100
Subject: [NTG-pdftex] Urgent help needed (Document open settings)
In-Reply-To: <49EEFA32.5090609@elvenkind.com>
References: <49EEF7BC.7020007@Rhul.Ac.Uk> <49EEFA32.5090609@elvenkind.com>
Message-ID: <49EEFF25.6080304@Rhul.Ac.Uk>

Thank you, Taco : it has /an/ effect, but sadly
not the desired one (the page opens shewing the
first part of the headline filling much of the screen,
so it is several tens of times too large).  I will
play the example and see if I can get it to converge
on what I need ...

** Phil.
--------
Taco Hoekwater wrote:
> Philip TAYLOR wrote:
>> Dear Colleagues -- I am being driven to distraction
>> by my inability to persuade PdfTeX to set the default
>> "Document open" option to "Fit Visible".  I know
>> that Hyperref can accomplish this, but I am working
>> in TeX, not LaTeX.  I assume that an appropriate
>> incantation to \pdfliteral will be all that is
>> required, but so far Google has failed to throw
>> up any useful hints as to what to pass to \pdfliteral
>> to accomplish this.  Your help will be much appreciated.
> 
>  From the context mailing list:
> 
> \pdfcatalog{
>   /PageLayout /SinglePage %
>   /PageMode /UseNone %
>   /OpenAction [0 /FitBH 900] %
> }
> 
> Best wishes,
> Taco
> 

