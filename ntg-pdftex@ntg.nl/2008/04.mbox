From pdftex-bugs at sarovar.org  Wed Apr  9 00:40:35 2008
From: pdftex-bugs at sarovar.org (pdftex-bugs at sarovar.org)
Date: Wed, 09 Apr 2008 04:10:35 +0530
Subject: [NTG-pdftex] =?utf-8?q?=5Bpdftex-Bugs=5D=5B936=5D_PDF_image_vpos_?=
	=?utf-8?q?wrong_when_PDF_origin_!=3D_0?=
Message-ID: <E1JjMUV-0004Vg-H4@sarovar.org>

Bugs item #936, was opened at 2008-04-09 00:40
Status: Open
Priority: 3
Submitted By: Hartmut Henkel (hhenkel)
Assigned to: Nobody (None)
Summary: PDF image vpos wrong when PDF origin != 0 
Resolution: None
Group: v1.50.0-alpha
Category: PDF inclusion


Initial Comment:
When a PDF image is embedded, and its /MediaBox contains a negative lly value, and if a depth != 0 is assigned with \pdfximage, the PDF image will be placed wrong vertically. the attached file cow1.pdf has a tweaked /MediaBox to force this effect. if this is a bug, it seems to be a rather longstanding one. see trivial patch to cure this.

----------------------------------------------------------------------

You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=936&group_id=106

From pdftex-bugs at sarovar.org  Wed Apr  9 01:03:06 2008
From: pdftex-bugs at sarovar.org (pdftex-bugs at sarovar.org)
Date: Wed, 09 Apr 2008 04:33:06 +0530
Subject: [NTG-pdftex] =?utf-8?q?=5Bpdftex-Bugs=5D=5B936=5D_PDF_image_vpos_?=
	=?utf-8?q?wrong_when_PDF_origin_!=3D_0?=
Message-ID: <E1JjMqI-0004i7-Ss@sarovar.org>

Bugs item #936, was opened at 2008-04-09 00:40
Status: Open
Priority: 3
Submitted By: Hartmut Henkel (hhenkel)
>Assigned to: Martin Schr?der (oneiros)
Summary: PDF image vpos wrong when PDF origin != 0 
Resolution: None
Group: v1.50.0-alpha
Category: PDF inclusion


Initial Comment:
When a PDF image is embedded, and its /MediaBox contains a negative lly value, and if a depth != 0 is assigned with \pdfximage, the PDF image will be placed wrong vertically. the attached file cow1.pdf has a tweaked /MediaBox to force this effect. if this is a bug, it seems to be a rather longstanding one. see trivial patch to cure this.

----------------------------------------------------------------------

>Comment By: Martin Schr?der (oneiros)
Date: 2008-04-09 01:03

Message:
Please attach a tex input file demonstrating the problem.

----------------------------------------------------------------------

You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=936&group_id=106

From pdftex-bugs at sarovar.org  Wed Apr  9 22:23:34 2008
From: pdftex-bugs at sarovar.org (pdftex-bugs at sarovar.org)
Date: Thu, 10 Apr 2008 01:53:34 +0530
Subject: [NTG-pdftex] =?utf-8?q?=5Bpdftex-Bugs=5D=5B936=5D_PDF_image_vpos_?=
	=?utf-8?q?wrong_when_PDF_origin_!=3D_0?=
Message-ID: <E1JjgpS-0006j6-TB@sarovar.org>

Bugs item #936, was opened at 2008-04-09 00:40
Status: Open
Priority: 3
Submitted By: Hartmut Henkel (hhenkel)
Assigned to: Martin Schr?der (oneiros)
Summary: PDF image vpos wrong when PDF origin != 0 
Resolution: None
Group: v1.50.0-alpha
Category: PDF inclusion


Initial Comment:
When a PDF image is embedded, and its /MediaBox contains a negative lly value, and if a depth != 0 is assigned with \pdfximage, the PDF image will be placed wrong vertically. the attached file cow1.pdf has a tweaked /MediaBox to force this effect. if this is a bug, it seems to be a rather longstanding one. see trivial patch to cure this.

----------------------------------------------------------------------

>Comment By: Hartmut Henkel (hhenkel)
Date: 2008-04-09 22:23

Message:
see PDF output for unpatched and patched pdftex in
bug-936.zip. The bug appears e. g., if one uses \pdfximage
with a non-zero depth parameter (pos. or neg.) together with
option "artbox". It happens only very seldom for "mediabox"
(default), as most MediaBoxes have 0 0 as their lower left
corner (i guess), and not many people are using \pdfximage
with a depth parameter anyway.

Regards, Hartmut

----------------------------------------------------------------------

Comment By: Martin Schr?der (oneiros)
Date: 2008-04-09 01:03

Message:
Please attach a tex input file demonstrating the problem.

----------------------------------------------------------------------

You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=936&group_id=106

From pdftex-bugs at sarovar.org  Thu Apr 10 00:44:43 2008
From: pdftex-bugs at sarovar.org (pdftex-bugs at sarovar.org)
Date: Thu, 10 Apr 2008 04:14:43 +0530
Subject: [NTG-pdftex] =?utf-8?q?=5Bpdftex-Bugs=5D=5B936=5D_PDF_image_vpos_?=
	=?utf-8?q?wrong_when_PDF_origin_!=3D_0?=
Message-ID: <E1Jjj23-0007Gg-HJ@sarovar.org>

Bugs item #936, was opened at 2008-04-09 00:40
Status: Open
Priority: 3
Submitted By: Hartmut Henkel (hhenkel)
Assigned to: Martin Schr?der (oneiros)
Summary: PDF image vpos wrong when PDF origin != 0 
>Resolution: Accepted
Group: v1.50.0-alpha
Category: PDF inclusion


Initial Comment:
When a PDF image is embedded, and its /MediaBox contains a negative lly value, and if a depth != 0 is assigned with \pdfximage, the PDF image will be placed wrong vertically. the attached file cow1.pdf has a tweaked /MediaBox to force this effect. if this is a bug, it seems to be a rather longstanding one. see trivial patch to cure this.

----------------------------------------------------------------------

Comment By: Hartmut Henkel (hhenkel)
Date: 2008-04-09 22:23

Message:
see PDF output for unpatched and patched pdftex in
bug-936.zip. The bug appears e. g., if one uses \pdfximage
with a non-zero depth parameter (pos. or neg.) together with
option "artbox". It happens only very seldom for "mediabox"
(default), as most MediaBoxes have 0 0 as their lower left
corner (i guess), and not many people are using \pdfximage
with a depth parameter anyway.

Regards, Hartmut

----------------------------------------------------------------------

Comment By: Martin Schr?der (oneiros)
Date: 2008-04-09 01:03

Message:
Please attach a tex input file demonstrating the problem.

----------------------------------------------------------------------

You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=936&group_id=106

From pdftex-bugs at sarovar.org  Mon Apr 14 11:08:40 2008
From: pdftex-bugs at sarovar.org (pdftex-bugs at sarovar.org)
Date: Mon, 14 Apr 2008 14:38:40 +0530
Subject: [NTG-pdftex] =?utf-8?q?=5Bpdftex-Bugs=5D=5B936=5D_PDF_image_vpos_?=
	=?utf-8?q?wrong_when_PDF_origin_!=3D_0?=
Message-ID: <E1JlKg4-0000HM-T0@sarovar.org>

Bugs item #936, was opened at 2008-04-09 00:40
>Status: Closed
Priority: 3
Submitted By: Hartmut Henkel (hhenkel)
Assigned to: Martin Schr?der (oneiros)
Summary: PDF image vpos wrong when PDF origin != 0 
>Resolution: Fixed
Group: v1.50.0-alpha
Category: PDF inclusion


Initial Comment:
When a PDF image is embedded, and its /MediaBox contains a negative lly value, and if a depth != 0 is assigned with \pdfximage, the PDF image will be placed wrong vertically. the attached file cow1.pdf has a tweaked /MediaBox to force this effect. if this is a bug, it seems to be a rather longstanding one. see trivial patch to cure this.

----------------------------------------------------------------------

>Comment By: Martin Schr?der (oneiros)
Date: 2008-04-14 11:08

Message:
Fixed

----------------------------------------------------------------------

Comment By: Hartmut Henkel (hhenkel)
Date: 2008-04-09 22:23

Message:
see PDF output for unpatched and patched pdftex in
bug-936.zip. The bug appears e. g., if one uses \pdfximage
with a non-zero depth parameter (pos. or neg.) together with
option "artbox". It happens only very seldom for "mediabox"
(default), as most MediaBoxes have 0 0 as their lower left
corner (i guess), and not many people are using \pdfximage
with a depth parameter anyway.

Regards, Hartmut

----------------------------------------------------------------------

Comment By: Martin Schr?der (oneiros)
Date: 2008-04-09 01:03

Message:
Please attach a tex input file demonstrating the problem.

----------------------------------------------------------------------

You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=936&group_id=106

From pdftex-bugs at sarovar.org  Sat Apr 19 23:42:23 2008
From: pdftex-bugs at sarovar.org (pdftex-bugs at sarovar.org)
Date: Sun, 20 Apr 2008 03:12:23 +0530
Subject: [NTG-pdftex] =?utf-8?q?=5Bpdftex-Bugs=5D=5B939=5D_=5Cpdfximagebbo?=
	=?utf-8?q?x_wrong_for_PDF_files_with_/Rotate_!=3D_0?=
Message-ID: <E1JnKpD-0007FP-2T@sarovar.org>

Bugs item #939, was opened at 2008-04-19 23:42
Status: Open
Priority: 3
Submitted By: Hartmut Henkel (hhenkel)
Assigned to: Nobody (None)
Summary: \pdfximagebbox wrong for PDF files with /Rotate != 0 
Resolution: None
Group: v1.50.0-alpha
Category: PDF inclusion


Initial Comment:
The primitive \pdfximagebbox gives a wrong boundingbox info for PDF files that contain a /Rotate key with value 90 or 270 [degrees].

Reason is that in pdftoepdf.cc the values epdf_height and epdf_width are swapped in 90 and 270 degree cases (but the epdf_orig_x and epdf_orig_y are not swapped, which makes it even more inconsistent).

The proposal is that \pdfximagebbox should always deliver the unchanged original values for the actually used boundingbox (e. g. "artbox", "cropbox"...), as read from the appropriate /...Box[] array in the embedded PDF file. The epdf_height and epdf_width values should _not_ be swapped for \pdfximagebbox.

----------------------------------------------------------------------

You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=939&group_id=106

From pdftex-bugs at sarovar.org  Mon Apr 21 11:26:14 2008
From: pdftex-bugs at sarovar.org (pdftex-bugs at sarovar.org)
Date: Mon, 21 Apr 2008 14:56:14 +0530
Subject: [NTG-pdftex] =?utf-8?q?=5Bpdftex-Bugs=5D=5B940=5D_PDflatex_draws_?=
	=?utf-8?q?large_call_graphs_over_the_page?=
Message-ID: <E1JnsHu-0007Z6-JI@sarovar.org>

Bugs item #940, was opened at 2008-04-21 09:26
Status: Open
Priority: 3
Submitted By: Anand R (anandraichur)
Assigned to: Nobody (None)
Summary: PDflatex draws large call graphs over the page 
Resolution: None
Group: v1.40.6
Category: PDF inclusion


Initial Comment:
iam using pdflatex version 1.40.7 with miktex 2.7 , while converting the large callgrapha to PDF the graph is drawn over the page.
The size of the PDF is (7.61*32.44inches)
the graphn is getting truncated in the final output to (8.27*11.69inches) only the first 11.69 inches of the graph is visible.


----------------------------------------------------------------------

You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=940&group_id=106

From martin at oneiros.de  Mon Apr 21 13:39:16 2008
From: martin at oneiros.de (=?ISO-8859-1?Q?Martin_Schr=F6der?=)
Date: Mon, 21 Apr 2008 13:39:16 +0200
Subject: [NTG-pdftex] LFS on powerpc-apple-darwin
Message-ID: <68c491a60804210439vbc790b6o3f0923a562500c0f@mail.gmail.com>

Hi,
I need help with Large File Support on powerpc-apple-darwin; it's
broken in pdftex-stable and -trunk.

With a binary from -stable pdf inclusion is currently broken on
powerpc-apple-darwin 8.11; when trying to include any pdf (I'm testing
with the output of sample2e.tex) I get this error: "No space left on
device" and sure, when I fire up gdb it shows this:
-------------------
(gdb) bt
#0  0x90014ba8 in write ()
#1  0x90015cbc in _swrite ()
#2  0x900055f8 in __sflush ()
#3  0x9006abe0 in fseeko ()
#4  0x001c9aac in xfseeko (f=0xa000dbe4, offset=64656437686498,
wherefrom=0, filename=0x232ae80 "test-inc") at
../../../src/texk/kpathsea/xfseeko.c:28
#5  0x000cfe80 in writestreamlength (length=3909,
offset=64656437682547) at
../../../../src/texk/web2c/pdftexdir/utils.c:412
#6  0x00061a88 in pdfendstream () at pdftex1.c:8395
-------------------
The offset is a bit large.:-{

This is regardless of --disable-largefile.

When compiling -stable I get these nice warnings:
-------------------
gcc -DHAVE_CONFIG_H  -I. -I../../../src/texk/web2c -I..
-I../../../src/texk/web2c/..  -I../../libs/obsdcompat -I
../../libs/obsdcompat/..
-I../../../src/texk/web2c/../../libs/obsdcompat
-I../../../src/texk/web2c/../../libs/ob
sdcompat/.. -g3 -Wall -Wno-write-strings -std=c99  -c pdftex0.c -o pdftex0.o
In file included from
../../../src/texk/web2c/../../libs/obsdcompat/includes.h:27,
                 from
../../../src/texk/web2c/../../libs/obsdcompat/openbsd-compat.h:37,
                 from ../../../src/texk/web2c/pdftexdir/ptexlib.h:41,
                 from ../../../src/texk/web2c/pdftexdir/pdftex.h:67,
                 from pdftexcoerce.h:1605,
                 from pdftexd.h:789,
                 from pdftex0.c:2:
../../libs/obsdcompat/../obsdcompat/config.h:219:1: warning:
"WORDS_BIGENDIAN" redefined
In file included from pdftexd.h:11,
                 from pdftex0.c:2:
../../../src/texk/web2c/texmfmp.h:31:1: warning: this is the location
of the previous definition
-------------------
And sure enough obsdcompat/config.h has this:
-------------------
/* Define to 1 if your processor stores words with the most significant byte
   first (like Motorola and SPARC, unlike Intel and VAX). */
#define WORDS_BIGENDIAN 1
-------------------
while texmfmp.h has this:
/* If we have these macros, use them, as they provide a better guide to
   the endianess when cross-compiling. */
-------------------
#if defined (BYTE_ORDER) && defined (BIG_ENDIAN) && defined (LITTLE_ENDIAN)
#ifdef WORDS_BIGENDIAN
#undef WORDS_BIGENDIAN
#endif
#if BYTE_ORDER == BIG_ENDIAN
#define WORDS_BIGENDIAN
#endif
#endif
/* More of the same, but now NeXT-specific. */
#ifdef NeXT
#ifdef WORDS_BIGENDIAN
#undef WORDS_BIGENDIAN
#endif
#ifdef __BIG_ENDIAN__
#define WORDS_BIGENDIAN
#endif
#endif
-------------------
Might this be the reason?

Best
   Martin

From martin at oneiros.de  Mon Apr 21 15:03:19 2008
From: martin at oneiros.de (=?ISO-8859-1?Q?Martin_Schr=F6der?=)
Date: Mon, 21 Apr 2008 15:03:19 +0200
Subject: [NTG-pdftex] LFS on powerpc-apple-darwin
In-Reply-To: <68c491a60804210439vbc790b6o3f0923a562500c0f@mail.gmail.com>
References: <68c491a60804210439vbc790b6o3f0923a562500c0f@mail.gmail.com>
Message-ID: <68c491a60804210603v71b823b5x54e8f00a98a229b2@mail.gmail.com>

2008/4/21, Martin Schr?der <martin at oneiros.de>:
>  device" and sure, when I fire up gdb it shows this:
>  -------------------
>  (gdb) bt
>  #0  0x90014ba8 in write ()
>  #1  0x90015cbc in _swrite ()
>  #2  0x900055f8 in __sflush ()
>  #3  0x9006abe0 in fseeko ()
>  #4  0x001c9aac in xfseeko (f=0xa000dbe4, offset=64656437686498,
>  wherefrom=0, filename=0x232ae80 "test-inc") at
>  ../../../src/texk/kpathsea/xfseeko.c:28
>  #5  0x000cfe80 in writestreamlength (length=3909,
>  offset=64656437682547) at
>  ../../../../src/texk/web2c/pdftexdir/utils.c:412
>  #6  0x00061a88 in pdfendstream () at pdftex1.c:8395
>  -------------------
>  The offset is a bit large.:-{

I've traced it to this:
------- pdftoepdf.cc ------
static void copyName(char *s)
{
    pdf_puts("/");
    for (; *s != 0; s++) {
        if (isdigit(*s) || isupper(*s) || islower(*s) || *s == '_' ||
            *s == '.' || *s == '-' || *s == '+') {
                do {
                  pdfroom(1);
                  pdfbuf[pdfptr++] = c;
                } while (0);
        else
            pdf_printf("#%.2X", *s & 0xFF);
    }
}
--------------------------
debugging this I get
--------------------------
Breakpoint 1, copyName (s=0x2329380 "F15") at
../../../../src/texk/web2c/pdftexdir/pdftoepdf.cc:286
286         pdf_puts("/");
(gdb) n
Current language:  auto; currently c++
287         for (; *s != 0; s++) {
(gdb) display pdfptr
1: pdfptr = 302
(gdb) n
288             if (isdigit(*s) || isupper(*s) || islower(*s) || *s == '_' ||
1: pdfptr = 302
(gdb)
291         pdfroom(1);
1: pdfptr = 302
(gdb)
292         pdfbuf[pdfptr++] = *s;
1: pdfptr = 302
(gdb)
287         for (; *s != 0; s++) {
1: pdfptr = 4294967598
(gdb)
--------------------------
What's going on?

Best
   Martin

From pdftex-bugs at sarovar.org  Tue Apr 22 10:32:53 2008
From: pdftex-bugs at sarovar.org (pdftex-bugs at sarovar.org)
Date: Tue, 22 Apr 2008 14:02:53 +0530
Subject: [NTG-pdftex] =?utf-8?q?=5Bpdftex-Bugs=5D=5B941=5D_pdf_inclusion_b?=
	=?utf-8?q?roken_on_ppc-linux?=
Message-ID: <E1JoDvp-0005KZ-U2@sarovar.org>

Bugs item #941, was opened at 2008-04-22 10:32
Status: Open
Priority: 5
Submitted By: Martin Schr?der (oneiros)
Assigned to: Martin Schr?der (oneiros)
Summary: pdf inclusion broken on ppc-linux 
Resolution: None
Group: v1.50.0-alpha
Category: PDF inclusion


Initial Comment:
pdf inclusion is currently broken on ppc-linux (see http://www.ntg.nl/pipermail/ntg-pdftex/2008-April/003500.html ).

----------------------------------------------------------------------

You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=941&group_id=106

From pdftex-bugs at sarovar.org  Tue Apr 22 10:35:37 2008
From: pdftex-bugs at sarovar.org (pdftex-bugs at sarovar.org)
Date: Tue, 22 Apr 2008 14:05:37 +0530
Subject: [NTG-pdftex] =?utf-8?q?=5Bpdftex-Bugs=5D=5B939=5D_=5Cpdfximagebbo?=
	=?utf-8?q?x_wrong_for_PDF_files_with_/Rotate_!=3D_0?=
Message-ID: <E1JoDyT-0005hN-8A@sarovar.org>

Bugs item #939, was opened at 2008-04-19 23:42
Status: Open
Priority: 3
Submitted By: Hartmut Henkel (hhenkel)
>Assigned to: Hartmut Henkel (hhenkel)
Summary: \pdfximagebbox wrong for PDF files with /Rotate != 0 
>Resolution: Accepted
Group: v1.50.0-alpha
Category: PDF inclusion


Initial Comment:
The primitive \pdfximagebbox gives a wrong boundingbox info for PDF files that contain a /Rotate key with value 90 or 270 [degrees].

Reason is that in pdftoepdf.cc the values epdf_height and epdf_width are swapped in 90 and 270 degree cases (but the epdf_orig_x and epdf_orig_y are not swapped, which makes it even more inconsistent).

The proposal is that \pdfximagebbox should always deliver the unchanged original values for the actually used boundingbox (e. g. "artbox", "cropbox"...), as read from the appropriate /...Box[] array in the embedded PDF file. The epdf_height and epdf_width values should _not_ be swapped for \pdfximagebbox.

----------------------------------------------------------------------

>Comment By: Martin Schr?der (oneiros)
Date: 2008-04-22 10:35

Message:
Hrm. Is \pdfximagebbox actually used? And if it's used, is it enough when /Rotate is present or do we need a way to enquire about /Rotate?

----------------------------------------------------------------------

You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=939&group_id=106

From pdftex-bugs at sarovar.org  Tue Apr 22 10:31:05 2008
From: pdftex-bugs at sarovar.org (pdftex-bugs at sarovar.org)
Date: Tue, 22 Apr 2008 14:01:05 +0530
Subject: [NTG-pdftex] =?utf-8?q?=5Bpdftex-Bugs=5D=5B940=5D_PDflatex_draws_?=
	=?utf-8?q?large_call_graphs_over_the_page?=
Message-ID: <E1JoDu5-0005KP-2J@sarovar.org>

Bugs item #940, was opened at 2008-04-21 11:26
>Status: Closed
>Priority: 1
Submitted By: Anand R (anandraichur)
Assigned to: Nobody (None)
Summary: PDflatex draws large call graphs over the page 
>Resolution: Invalid
Group: v1.40.6
Category: PDF inclusion


Initial Comment:
iam using pdflatex version 1.40.7 with miktex 2.7 , while converting the large callgrapha to PDF the graph is drawn over the page.
The size of the PDF is (7.61*32.44inches)
the graphn is getting truncated in the final output to (8.27*11.69inches) only the first 11.69 inches of the graph is visible.


----------------------------------------------------------------------

>Comment By: Martin Schr?der (oneiros)
Date: 2008-04-22 10:31

Message:
So either scale down the image or increase the page size, e.g. with the geometry page.

But this is NOT a pdfTeX bug.

----------------------------------------------------------------------

You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=940&group_id=106

From P.Taylor at Rhul.Ac.Uk  Fri Apr 25 20:02:53 2008
From: P.Taylor at Rhul.Ac.Uk (Philip TAYLOR (Ret'd))
Date: Fri, 25 Apr 2008 19:02:53 +0100
Subject: [NTG-pdftex] PDF images : any limit to their number in PdfTeX
 (Win-32, TeX Live 2007)
Message-ID: <48121CCD.3050508@Rhul.Ac.Uk>

I am endeavouring to typeset a book which will include
between four and five thousand PDF images (included
using \includeimage from package "Graphicx"); PdfTeX
(Win-32, TeX Live 2007) is bombing out with no
error message, and I am concerned it may be hitting
some limit.  Is there any known limit, and if not,
does four to five thousand seem reasonable ?

I should add that each of these images forms
a part of one row of an \halign ...

Philip TAYLOR

From pragma at wxs.nl  Fri Apr 25 22:37:37 2008
From: pragma at wxs.nl (Hans Hagen)
Date: Fri, 25 Apr 2008 22:37:37 +0200
Subject: [NTG-pdftex] PDF images : any limit to their number in PdfTeX
 (Win-32, TeX Live 2007)
In-Reply-To: <48121CCD.3050508@Rhul.Ac.Uk>
References: <48121CCD.3050508@Rhul.Ac.Uk>
Message-ID: <48124111.3010409@wxs.nl>

Philip TAYLOR (Ret'd) wrote:
> I am endeavouring to typeset a book which will include
> between four and five thousand PDF images (included
> using \includeimage from package "Graphicx"); PdfTeX
> (Win-32, TeX Live 2007) is bombing out with no
> error message, and I am concerned it may be hitting
> some limit.  Is there any known limit, and if not,
> does four to five thousand seem reasonable ?
> 
> I should add that each of these images forms
> a part of one row of an \halign ...

just do \immediate\pdfximage's

if needed, do something

\let\normalpdfximage\pdfximage

\def\pdfximage{\immediate\normalpdfximage]

Hans

-----------------------------------------------------------------
                                           Hans Hagen | PRAGMA ADE
               Ridderstraat 27 | 8061 GH Hasselt | The Netherlands
      tel: 038 477 53 69 | fax: 038 477 53 74 | www.pragma-ade.com
                                              | www.pragma-pod.nl
-----------------------------------------------------------------

From P.Taylor at Rhul.Ac.Uk  Fri Apr 25 23:49:37 2008
From: P.Taylor at Rhul.Ac.Uk (Philip TAYLOR (Ret'd))
Date: Fri, 25 Apr 2008 22:49:37 +0100
Subject: [NTG-pdftex] PDF images : any limit to their number in PdfTeX
 (Win-32, TeX Live 2007)
In-Reply-To: <48124111.3010409@wxs.nl>
References: <48121CCD.3050508@Rhul.Ac.Uk> <48124111.3010409@wxs.nl>
Message-ID: <481251F1.1000907@Rhul.Ac.Uk>

OK, thanks for the suggestion Hans.  Following
some regression testing, I now believe that the
\halign is at least partially to blame, but
what really concerns me is that PdfTeX just
stops, with no error message and nothing
at end-of-log, which looks like this :

> <use images/pdf/abr-exahmeron.pdf>
> <images/pdf/abr-exahmeros.pdf, id=502, 951.555pt x 421.575pt>
> File: images/pdf/abr-exahmeros.pdf Graphic file (type pdf)
> 
> <use images/pdf/abr-exahmeros.pdf>
> <images/pdf/abr-examhnou1.pdf, id=503, 766.865pt x 542.025pt>
> File: images/pdf/abr-examhnou1.pdf Graphic file (type pdf)
> 
> <use images/pdf/abr-examhnou1.pdf>

** Phil.

From kakuto at fuk.kindai.ac.jp  Sat Apr 26 00:40:11 2008
From: kakuto at fuk.kindai.ac.jp (Akira Kakuto)
Date: Sat, 26 Apr 2008 07:40:11 +0900
Subject: [NTG-pdftex] PDF images : any limit to their number in PdfTeX
 (Win-32, TeX Live 2007)
In-Reply-To: Your message of "Fri, 25 Apr 2008 19:02:53 +0100"
References: <48121CCD.3050508@Rhul.Ac.Uk>
Message-ID: <200804252240.m3PMeDEs015499@jupiter>

... ...
> Is there any known limit, and if not,
> does four to five thousand seem reasonable ?

I don't remember the limit on the number of open files
in pdfTeX-w32 in TL-2007.
The limit will be 2048, including stdin etc., in TL-2008.
The total file size can be over 2GB in TL-2008.

Best,
Akira

From hartmut_henkel at gmx.de  Sat Apr 26 01:23:46 2008
From: hartmut_henkel at gmx.de (Hartmut Henkel)
Date: Sat, 26 Apr 2008 01:23:46 +0200 (CEST)
Subject: [NTG-pdftex] PDF images : any limit to their number in PdfTeX
 (Win-32, TeX Live 2007)
In-Reply-To: <481251F1.1000907@Rhul.Ac.Uk>
References: <48121CCD.3050508@Rhul.Ac.Uk> <48124111.3010409@wxs.nl>
	<481251F1.1000907@Rhul.Ac.Uk>
Message-ID: <alpine.DEB.1.00.0804260121310.11650@hahepc1.hahe>

On Fri, 25 Apr 2008, Philip TAYLOR (Ret'd) wrote:

> OK, thanks for the suggestion Hans.  Following some regression
> testing, I now believe that the \halign is at least partially to
> blame, but what really concerns me is that PdfTeX just stops, with no
> error message and nothing at end-of-log, which looks like this :
>
> > <use images/pdf/abr-exahmeron.pdf>
> > <images/pdf/abr-exahmeros.pdf, id=502, 951.555pt x 421.575pt>
> > File: images/pdf/abr-exahmeros.pdf Graphic file (type pdf)

looks like output from graphics.sty, so it could be a LaTeX graphics
package problem as well.

Regards, Hartmut

From P.Taylor at Rhul.Ac.Uk  Sat Apr 26 09:00:41 2008
From: P.Taylor at Rhul.Ac.Uk (Philip TAYLOR (Ret'd))
Date: Sat, 26 Apr 2008 08:00:41 +0100
Subject: [NTG-pdftex] Re : PDF images : any limit to their number in PdfTeX
 (Win-32, TeX Live 2007)
Message-ID: <4812D319.2000109@Rhul.Ac.Uk>

My sincere thanks to all who responded;
I have reverted to an earlier version
which did not use \halign, and I can
once again process all images.  I think
that in retrospect, expecting PdfTeX to
buffer all 4500 images while it computed
the widths of the columns of an \halign
was probably expecting too much.

** Phil.

From pdftex-featurerequests at sarovar.org  Sun Apr 27 12:22:23 2008
From: pdftex-featurerequests at sarovar.org (pdftex-featurerequests at sarovar.org)
Date: Sun, 27 Apr 2008 15:52:23 +0530
Subject: [NTG-pdftex] =?utf-8?q?=5Bpdftex-Feature_Requests=5D=5B429=5D_Gen?=
	=?utf-8?q?erate_Tagged_PDF?=
Message-ID: <E1Jq41X-0005RL-OJ@sarovar.org>

Feature Requests item #429, was opened at 2005-09-11 22:37
Status: Open
Priority: 2
Submitted By: Timothy O'Brien (oberon101)
Assigned to: Martin Schr?der (oneiros)
Summary: Generate Tagged PDF 
Resolution: None
Group: None
Category: None


Initial Comment:
Adobe Reader has a'reflow' feature that allows 
visually impaired users to zoom into properly 
formatted documents and read them without having to 
move the viewable area back and forth across the 
page.  PDFs made in MikteX eith pdfte are not properly 
formatted and reflow without interword spacing, 
redering them unreadable. I contacted the MikteX 
people and they referred me here. I beleive Scientific 
Word also uses pdftex with the same result.

Any chance this could be fixed?

----------------------------------------------------------------------

>Comment By: The Thanh Han (hanthethanh)
Date: 2008-04-27 10:22

Message:
here is an attempt:

http://sarovar.org/tracker/index.php?func=detail&aid=945&group_id=106&atid=495

----------------------------------------------------------------------

Comment By: Nobody (None)
Date: 2006-05-16 11:49

Message:
Logged In: NO 

"
The main problem with reflowing is not the missing tags but
that pdftex writes interword spaces as a kern (since there
is no "space" in TeX, of course).
"
No, the main problem is that Adobe Reader dropped
recognition of "words" based on *spacing* and resorted to
the the simplistic approach to use *spaces* instead. This is
simply ignorance of Adobe about TeX.
Instead of whining about this one can do something for a
practical cure: add dummy spaces at the end of every word of
zero width which consist of a *space* and a kern
-\wd(space). space could come from any font producing
explicit spaces in the output (e.g. cmtt).
It is most easily done with VF's.

As far as I remember a real implementation is already there
in Vtex (with some option).

"
non-trivial:
- first pdfTeX would have to be extended with primites for a
structure tree (and classes and packages would have to use
these primitives)
- then primitives for tagging the content are needed and
must be used
"
i)
when generating PS-code and distilling via Adobe Distiller
there should be no problem to take care of pdfmarks created
by classes & packages...

ii) I consider the major problem is page building and page
dependency of marked contents. It is just like the
difficulty to get consistent color in TeX: one can consider
color as sort of a "tag". 

E.g. a marked TeX paragraph is broken accross pages with
(tagged) headers and the structure should in general kept
linked also under the condition of reordered pages.

I suggest first to define what functionality is required at
the side of the PDF-Reader (text extraction, save as XML or
audio output via screen reader).
The packages should then be able to save Latex macro
structure as pdfmarks for pdf tags as a prerequisite.

Support of pagebreaking of tagged objects will require some
assistance from pdftex like linebreaking of weblinks.

HS



----------------------------------------------------------------------

Comment By: Robert (schlcht)
Date: 2006-05-06 15:20

Message:
Logged In: YES 
user_id=2217

The main problem with reflowing is not the missing tags but
that pdftex writes interword spaces as a kern (since there
is no "space" in TeX, of course). A rather simple but
effective way would be to write the interword spaces in a
different font (e.g. non-embedded Times-Roman), and then
compensate for the difference between Times's width of space
and the width of the glue calculated by TeX. (At least, this
is what Distiller does, if you select "Advanced ->
Accessibility -> Add Tags to Document".)

 So that

 (This)-419(is)-420(an)-419(example)

 will be turned into:

 /T1_0 1 Tf
 (This)Tj
 /T1_1 1 Tf
 ( )Tj
 /T1_0 1 Tf
 2.369 0 Td
 (is)Tj
 /T1_1 1 Tf
 ( )Tj
 /T1_0 1 Tf
 1.092 0 Td
 (an)Tj
 /T1_1 1 Tf
 ( )Tj
 /T1_0 1 Tf
 1.475 0 Td
 (example)Tj

where T1_0 is cmr10 and T1_1 is Times-Roman.

This would be already a major enhancement with respect to
accessibility without any packages being required.


----------------------------------------------------------------------

Comment By: Nobody (None)
Date: 2006-04-14 11:33

Message:
Logged In: NO 

Maybe a first version can use a very low-level solution,
just with a single tagging primitive; there is such a command
already (I think it is called pdfliteral) . And the tree can come
later. So one could start with little work, assuming one knows
tagging.

CS

----------------------------------------------------------------------

Comment By: Martin Schr?der (oneiros)
Date: 2006-04-14 11:12

Message:
Logged In: YES 
user_id=421

I'm changing the summary. Yes, we are aware that tagged pdf
is an often requested feature, but implementing it would be
non-trivial:
- first pdfTeX would have to be extended with primites for a
structure tree (and classes and packages would have to use
these primitives)
- then primitives for tagging the content are needed and
must be used

----------------------------------------------------------------------

Comment By: Nobody (None)
Date: 2005-11-04 19:58

Message:
Logged In: NO 


I would volonteer to test the feature. I am writing
a rather long pdf produced with pdftex that is 
downloadable for free ( http://www.motionmountain.net )
and readers regularly ask why it cannot be read aloud.
Pdftex probably would only need to be extended
with a single command - something like 
\writetaghere{tagtype} - and all the rest could 
be done by extensions to the latex cls and sty files.

CS

----------------------------------------------------------------------

You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=496&aid=429&group_id=106

From pdftex-patches at sarovar.org  Sun Apr 27 12:19:48 2008
From: pdftex-patches at sarovar.org (pdftex-patches at sarovar.org)
Date: Sun, 27 Apr 2008 15:49:48 +0530
Subject: [NTG-pdftex] =?utf-8?q?=5Bpdftex-Patches=5D=5B945=5D_experimental?=
	=?utf-8?q?_support_for_tagged_PDF?=
Message-ID: <E1Jq3z2-0005Pv-J2@sarovar.org>

Patches item #945, was opened at 2008-04-27 10:19
Status: Open
Priority: 3
Submitted By: The Thanh Han (hanthethanh)
Assigned to: Hans Hagen (hagen)
Summary: experimental support for tagged PDF 
Resolution: None
Group: v1.40.0
Category: Primitives


Initial Comment:
This is a patch to experiment with tagged PDF. The example passes
PDF/A-1a check in Acrobat Pro 8. Most of the work is done manually at macro
level; we want to provide only unavoidable low-level support and new
primitives. 

This is in very alpha stage and is intended for those who are
willing to experiment with tagged PDF: you need to know about tagged
PDF at low level (chapter 10 from PDF specification), about the
\pdfobj primitive of pdftex and some macro programing experience.
Please don't try it yet if you want an out-of-the-box solution, since
it's not clear yet if it is possible at all.

- apply the patch:
    - unpack pdftex-1.40.4.tar.bz2
    - cd /path/to/pdftex.1.40.4
    - patch -p1 </path/to/tagged-pdf-1.diff

- build pdftex & generate new format

- run "pdflatex -shell-escape f.tex" to compile the test file
                                                                                                                

----------------------------------------------------------------------

You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=495&aid=945&group_id=106

From pdftex-patches at sarovar.org  Wed Apr 30 12:18:35 2008
From: pdftex-patches at sarovar.org (pdftex-patches at sarovar.org)
Date: Wed, 30 Apr 2008 15:48:35 +0530
Subject: [NTG-pdftex] =?utf-8?q?=5Bpdftex-Patches=5D=5B945=5D_experimental?=
	=?utf-8?q?_support_for_tagged_PDF?=
Message-ID: <E1Jr9OV-0007bT-AY@sarovar.org>

Patches item #945, was opened at 2008-04-27 10:19
Status: Open
Priority: 3
Submitted By: The Thanh Han (hanthethanh)
Assigned to: Hans Hagen (hagen)
Summary: experimental support for tagged PDF 
Resolution: None
Group: v1.40.0
Category: Primitives


Initial Comment:
This is a patch to experiment with tagged PDF. The example passes
PDF/A-1a check in Acrobat Pro 8. Most of the work is done manually at macro
level; we want to provide only unavoidable low-level support and new
primitives. 

This is in very alpha stage and is intended for those who are
willing to experiment with tagged PDF: you need to know about tagged
PDF at low level (chapter 10 from PDF specification), about the
\pdfobj primitive of pdftex and some macro programing experience.
Please don't try it yet if you want an out-of-the-box solution, since
it's not clear yet if it is possible at all.

- apply the patch:
    - unpack pdftex-1.40.4.tar.bz2
    - cd /path/to/pdftex.1.40.4
    - patch -p1 </path/to/tagged-pdf-1.diff

- build pdftex & generate new format

- run "pdflatex -shell-escape f.tex" to compile the test file
                                                                                                                

----------------------------------------------------------------------

>Comment By: The Thanh Han (hanthethanh)
Date: 2008-04-30 10:18

Message:
added a little less trivial example f2.tex which closely mimics example 10.15 from pdf1.7 spec.

----------------------------------------------------------------------

You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=495&aid=945&group_id=106

