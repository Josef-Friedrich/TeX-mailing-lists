From pdftex-bugs at sarovar.org  Mon Jan 18 17:32:49 2010
From: pdftex-bugs at sarovar.org (pdftex-bugs at sarovar.org)
Date: Mon, 18 Jan 2010 22:02:49 +0530
Subject: [NTG-pdftex] =?utf-8?q?=5Bpdftex-Bugs=5D=5B4302=5D_transparency_b?=
	=?utf-8?q?ug=3A_missing_/ExtGState_in_Resources_of_Form_XObject?=
Message-ID: <E1NWuX3-0001L6-Vr@sarovar.org>

Bugs item #4302, was opened at 2010-01-18 17:32
Status: Open
Priority: 3
Submitted By: Alexander Grahn (grahn)
Assigned to: Nobody (None)
Summary: transparency bug: missing /ExtGState in Resources of Form XObject 
Category: None
Group: None
Resolution: None


Initial Comment:
In the attached example a Form XObject is created from a savebox containing transparent objects. The Form XObject is later used by \pdfrefxform\pdflastxform. When loaded in AR-7, the resulting PDF cannot be displayed but causes the error message:
                                             
  Could not find the Extended Graphics State named 'pgf at CA0.5'.

(AR-7 is more verbose with regard to PDF errors.)                                       

The reason is that the XObject produced is broken. At some point in the content stream of the XObject, the graphics state is modified to set the transparency of subsequent fills and strokes:

/pgf at CA0.5 gs                                                                   /pgf at ca0.5 gs                                                                           

Although the operands pgf at CA0.5 and pgf at ca0.5 are defined in an ExtGState Dictionary as 

1 0 obj                                                                            
<< /pgf at CA0.5 << /CA 0.5 >> /pgf at ca0.5 << /ca 0.5 >>>>                                  
endobj                                                                                        
the corresponding /ExtGState key is missing in the Resources dictionary of the XObject. Instead, it is put to the Resources dictionary of the Page object.  But there it is useless, because it is not used in the content stream of the page.

pdfTeX-Version: 1.40.10

----------------------------------------------------------------------

You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=4302&group_id=106

From pdftex-bugs at sarovar.org  Wed Jan 20 10:44:01 2010
From: pdftex-bugs at sarovar.org (pdftex-bugs at sarovar.org)
Date: Wed, 20 Jan 2010 15:14:01 +0530
Subject: [NTG-pdftex] =?utf-8?q?=5Bpdftex-Bugs=5D=5B4302=5D_transparency_b?=
	=?utf-8?q?ug=3A_missing_/ExtGState_in_Resources_of_Form_XObject?=
Message-ID: <E1NXX6X-0000ub-1K@sarovar.org>

Bugs item #4302, was opened at 2010-01-18 17:32
Status: Open
Priority: 3
Submitted By: Alexander Grahn (grahn)
Assigned to: Nobody (None)
Summary: transparency bug: missing /ExtGState in Resources of Form XObject 
Category: None
Group: None
Resolution: None


Initial Comment:
In the attached example a Form XObject is created from a savebox containing transparent objects. The Form XObject is later used by \pdfrefxform\pdflastxform. When loaded in AR-7, the resulting PDF cannot be displayed but causes the error message:
                                             
  Could not find the Extended Graphics State named 'pgf at CA0.5'.

(AR-7 is more verbose with regard to PDF errors.)                                       

The reason is that the XObject produced is broken. At some point in the content stream of the XObject, the graphics state is modified to set the transparency of subsequent fills and strokes:

/pgf at CA0.5 gs                                                                   /pgf at ca0.5 gs                                                                           

Although the operands pgf at CA0.5 and pgf at ca0.5 are defined in an ExtGState Dictionary as 

1 0 obj                                                                            
<< /pgf at CA0.5 << /CA 0.5 >> /pgf at ca0.5 << /ca 0.5 >>>>                                  
endobj                                                                                        
the corresponding /ExtGState key is missing in the Resources dictionary of the XObject. Instead, it is put to the Resources dictionary of the Page object.  But there it is useless, because it is not used in the content stream of the page.

pdfTeX-Version: 1.40.10

----------------------------------------------------------------------

Comment By: Alexander Grahn (grahn)
Date: 2010-01-20 10:44

Message:
After all, it is not a pdftex bug. I found out that PGF/TikZ adds resources such as /ExtGState and /Pattern, used in the graphics, to the /Resources dict of the /Page object. In order to make such resources accessible to the graphics encapsulated in a Form XObject too, one has to once more add a reference to the /Resources dict, this time to the Form XObject to be created, by means of the `resources {...}' argument of \pdfxform. See the attached example file `transs_ok.tex'.

I think this bug can be closed. Sorry for the noise.

----------------------------------------------------------------------

You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=4302&group_id=106

From pdftex-bugs at sarovar.org  Wed Jan 20 10:46:46 2010
From: pdftex-bugs at sarovar.org (pdftex-bugs at sarovar.org)
Date: Wed, 20 Jan 2010 15:16:46 +0530
Subject: [NTG-pdftex] =?utf-8?q?=5Bpdftex-Bugs=5D=5B4302=5D_transparency_b?=
	=?utf-8?q?ug=3A_missing_/ExtGState_in_Resources_of_Form_XObject?=
Message-ID: <E1NXX9C-0000ve-9v@sarovar.org>

Bugs item #4302, was opened at 2010-01-18 16:32
>Status: Closed
Priority: 3
Submitted By: Alexander Grahn (grahn)
Assigned to: Nobody (None)
Summary: transparency bug: missing /ExtGState in Resources of Form XObject 
Category: None
Group: None
>Resolution: Invalid


Initial Comment:
In the attached example a Form XObject is created from a savebox containing transparent objects. The Form XObject is later used by \pdfrefxform\pdflastxform. When loaded in AR-7, the resulting PDF cannot be displayed but causes the error message:
                                             
  Could not find the Extended Graphics State named 'pgf at CA0.5'.

(AR-7 is more verbose with regard to PDF errors.)                                       

The reason is that the XObject produced is broken. At some point in the content stream of the XObject, the graphics state is modified to set the transparency of subsequent fills and strokes:

/pgf at CA0.5 gs                                                                   /pgf at ca0.5 gs                                                                           

Although the operands pgf at CA0.5 and pgf at ca0.5 are defined in an ExtGState Dictionary as 

1 0 obj                                                                            
<< /pgf at CA0.5 << /CA 0.5 >> /pgf at ca0.5 << /ca 0.5 >>>>                                  
endobj                                                                                        
the corresponding /ExtGState key is missing in the Resources dictionary of the XObject. Instead, it is put to the Resources dictionary of the Page object.  But there it is useless, because it is not used in the content stream of the page.

pdfTeX-Version: 1.40.10

----------------------------------------------------------------------

>Comment By: The Thanh Han (hanthethanh)
Date: 2010-01-20 09:46

Message:
thanks for confirming.

----------------------------------------------------------------------

Comment By: Alexander Grahn (grahn)
Date: 2010-01-20 09:44

Message:
After all, it is not a pdftex bug. I found out that PGF/TikZ adds resources such as /ExtGState and /Pattern, used in the graphics, to the /Resources dict of the /Page object. In order to make such resources accessible to the graphics encapsulated in a Form XObject too, one has to once more add a reference to the /Resources dict, this time to the Form XObject to be created, by means of the `resources {...}' argument of \pdfxform. See the attached example file `transs_ok.tex'.

I think this bug can be closed. Sorry for the noise.

----------------------------------------------------------------------

You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=4302&group_id=106

From jerome.laurens at u-bourgogne.fr  Fri Jan 22 13:31:12 2010
From: jerome.laurens at u-bourgogne.fr (=?iso-8859-1?Q?J=E9rome_Laurens?=)
Date: Fri, 22 Jan 2010 13:31:12 +0100
Subject: [NTG-pdftex] About SyncTeX and output-directory option
Message-ID: <23F76915-9BFA-41CB-877F-F86255D926AF@u-bourgogne.fr>

Hi fellows,

I have just subscribed to the list in order to give, as the SyncTeX developer,  more informations about
the question raised earlier by Martin Reinders titled "...SyncTeX and output-directory option"
and brought to my attention by Karl Berry.

(BTW, sorry for breaking the message thread)

As noticed by Martin, since TeXLive 09 the .synctex file is always created in the same directory as the pdf output.
This is the only way to tell a pdf viewer that there exists some synctex information around.

But, as pointed out in Martin's mail, the problem is that all the input file names are recorded relative to the current directory according to pdftex,
which is not the current directory according to the pdf viewer.
The consequence is that the relative file names recorded in the .synctex file are broken and useless if we do not know the original input directory.

We can consider that this is a limitation in synctex code.
However, this is (partly) intentional due to the following reasons
1) I don't know for sure how to deal with paths in a OS independent way (actually synctex code already contain parts dedicated to windows OS)
2) I have not made my mind on how to manage this problem properly
3) There is a poor man's workaround implemented in frontends like iTeXMac2 AFAIR

Martin proposed to apply a post processing perl script to change in the .synctex.gz file the relative paths to the "appropriate" values.
Unfortunately, this breaks forwards synchronization and will certainly break backwards synchronization too
if we further move the pdf output file and its synctex.gz companion to another directory.
So this solution is not satisfying.

Let me explain what is point 3) above when the main input file is main.tex
First we can assume that output-directory is - by pdftex design - a subdirectory of the folder containing main.tex
If the full path of the output file is /foo/bar/main.pdf,
then synchronization from view to source may work as follow

if /foo/bar/main.tex exists then
	assume that all relative input file names in the .synctex file are relative to /foo/bar
else if /foo/main.tex exists then
	assume that all relative input file names in the .synctex file are relative to /foo
else if /main.tex exists then
	assume that all relative input file names in the .synctex file are relative to /
else
	no synchronization info is available

No need to modify the .synctex file, this will solve -in general- the problem when implemented in the synctex aware pdf/dvi viewer.


BTW, I tend to use "Factory" as output directory name:

pdflatex --output-directory "Factory" main.tex

Adopting such a rule would render document sharing more friendly:
frontends could use something like

if there exists a "Factory" folder then
	pdflatex --output-directory "Factory" main.tex
else
	pdflatex --whatsover main.tex

Also, when trying to synchronize forward from ./main.tex, a front could do something like

if ./main.pdf exists
	use if
else if ./Factory/main.pdf exists
	use it
else
	no forward synchronization is available

Moreover, when intermediate tools are used to create input material,
like for example graphic charts form statistical data,
the graphic file can go to this Factory folder such that
the front end just has to launch

pdflatex --output-directory "Factory" --input-directory "Factory" main.tex

In short, my suggestion would be to somehow hard code "Factory" (or any appropriate name) as output directory name.


regards

Jerome Laurens, temporarily listening to pdftex


From hartmut_henkel at gmx.de  Sat Jan 23 11:26:16 2010
From: hartmut_henkel at gmx.de (Hartmut Henkel)
Date: Sat, 23 Jan 2010 11:26:16 +0100 (CET)
Subject: [NTG-pdftex] About SyncTeX and output-directory option
In-Reply-To: <23F76915-9BFA-41CB-877F-F86255D926AF@u-bourgogne.fr>
References: <23F76915-9BFA-41CB-877F-F86255D926AF@u-bourgogne.fr>
Message-ID: <alpine.DEB.1.00.1001231117550.3772@hahepc1.hahe>

Hi,

On Fri, 22 Jan 2010, J?rome Laurens wrote:

> As noticed by Martin, since TeXLive 09 the .synctex file is always
> created in the same directory as the pdf output. This is the only way
> to tell a pdf viewer that there exists some synctex information
> around.

but it must be a special viewer knowing about synctex. Couldn't one then
put the required path info into the PDF file, e. g., as some special
comment, or even as /PTEX_SYNCTEX_PATH key into the info dir or catalog?

> In short, my suggestion would be to somehow hard code "Factory" (or
> any appropriate name) as output directory name.

i guess this would make the overall system rather inflexible.

Regards, Hartmut

From Jerome.Laurens at u-bourgogne.fr  Sat Jan 23 14:20:11 2010
From: Jerome.Laurens at u-bourgogne.fr (Jerome Laurens)
Date: Sat, 23 Jan 2010 14:20:11 +0100
Subject: [NTG-pdftex] About SyncTeX and output-directory option
In-Reply-To: <alpine.DEB.1.00.1001231117550.3772@hahepc1.hahe>
References: <23F76915-9BFA-41CB-877F-F86255D926AF@u-bourgogne.fr>
	<alpine.DEB.1.00.1001231117550.3772@hahepc1.hahe>
Message-ID: <20100123142011.15876ydp7gbcpdc8@webmail.u-bourgogne.fr>

Hartmut Henkel <hartmut_henkel at gmx.de> a ?crit?:

> Hi,
>
> On Fri, 22 Jan 2010, J?rome Laurens wrote:
>
>> As noticed by Martin, since TeXLive 09 the .synctex file is always
>> created in the same directory as the pdf output. This is the only way
>> to tell a pdf viewer that there exists some synctex information
>> around.
>
> but it must be a special viewer knowing about synctex. Couldn't one then
> put the required path info into the PDF file, e. g., as some special
> comment, or even as /PTEX_SYNCTEX_PATH key into the info dir or catalog?

Yes, my comment was a bit short.
In fact, SyncTeX also works with dvi such that some equivalent to  
/PTEX_SYNCTEX_PATH should be defined for dvi and xdv files.
Moreover, all the dvi2pdf and xdv2pdf tools should also support this  
kind of enhancement. It would be perfectly possible but this is not  
really something I'd like to do myself.

>
>> In short, my suggestion would be to somehow hard code "Factory" (or
>> any appropriate name) as output directory name.
>
> i guess this would make the overall system rather inflexible.

Not really. This is just a matter of convention:
if someone wants to use the pdftex output directory option and
does not really know what name to choose, he can simply use "Factory".
That would make life easier when sharing documents as folders.
And that would give a better UI experience for newcomers or beginners.
Anyway, that is out of topic on this list.

Cordialement,

Jerome




From thanh at river-valley.org  Mon Jan 25 14:58:37 2010
From: thanh at river-valley.org (Thanh Han The)
Date: Mon, 25 Jan 2010 13:58:37 +0000
Subject: [NTG-pdftex] About SyncTeX and output-directory option
In-Reply-To: <20100123142011.15876ydp7gbcpdc8@webmail.u-bourgogne.fr>
References: <23F76915-9BFA-41CB-877F-F86255D926AF@u-bourgogne.fr>
	<alpine.DEB.1.00.1001231117550.3772@hahepc1.hahe>
	<20100123142011.15876ydp7gbcpdc8@webmail.u-bourgogne.fr>
Message-ID: <f830226f1001250558r2ba0eac8k8d12c463546a7258@mail.gmail.com>

On 1/23/10, Jerome Laurens <Jerome.Laurens at u-bourgogne.fr> wrote:
> Hartmut Henkel <hartmut_henkel at gmx.de> a ?crit :
>
>
> > Hi,
> >
> > On Fri, 22 Jan 2010, J?rome Laurens wrote:
> >
> >
> > > As noticed by Martin, since TeXLive 09 the .synctex file is always
> > > created in the same directory as the pdf output. This is the only way
> > > to tell a pdf viewer that there exists some synctex information
> > > around.
> > >
> >
> > but it must be a special viewer knowing about synctex. Couldn't one then
> > put the required path info into the PDF file, e. g., as some special
> > comment, or even as /PTEX_SYNCTEX_PATH key into the info dir or catalog?
> >
>
>  Yes, my comment was a bit short.
>  In fact, SyncTeX also works with dvi such that some equivalent to
> /PTEX_SYNCTEX_PATH should be defined for dvi and xdv files.
>  Moreover, all the dvi2pdf and xdv2pdf tools should also support this kind
> of enhancement. It would be perfectly possible but this is not really
> something I'd like to do myself.
>
>
> >
> >
> > > In short, my suggestion would be to somehow hard code "Factory" (or
> > > any appropriate name) as output directory name.
> > >
> >
> > i guess this would make the overall system rather inflexible.
> >
>
>  Not really. This is just a matter of convention:
>  if someone wants to use the pdftex output directory option and
>  does not really know what name to choose, he can simply use "Factory".
>  That would make life easier when sharing documents as folders.
>  And that would give a better UI experience for newcomers or beginners.
>  Anyway, that is out of topic on this list.

Karl will be looking into the output directory option. If he
thinks a default value like "Factory" would be helpful, then
probably he could add that.

IMO this change is backward-incompatible; until now giving
no output dir means using the current dir. If we change the
default to "Factory", users who don't use this option might
be surprised since they will not get the output in the current
dir as expected.

Regards,
Thanh

From karl at freefriends.org  Tue Jan 26 00:37:08 2010
From: karl at freefriends.org (Karl Berry)
Date: Mon, 25 Jan 2010 23:37:08 GMT
Subject: [NTG-pdftex] About SyncTeX and output-directory option
In-Reply-To: <f830226f1001250558r2ba0eac8k8d12c463546a7258@mail.gmail.com>
Message-ID: <201001252337.o0PNb86E014419@f7.net>

Sorry, ntg-pdftex is one list I'm not on, and I can't follow all the
details of the problem or solution from the quote.

What I can say is that it would certainly be untenable to change *tex to
output anywhere except the cwd by default, if that's being suggested.
Every script and user in the world expects that.

    Karl will be looking into the output directory option. 

That previous report that I said I'd look into was only about the
limited question of why foo.tex and foo behave differently wrt
--output-directory.

Thanks,
k

From Jerome.Laurens at u-bourgogne.fr  Tue Jan 26 11:08:46 2010
From: Jerome.Laurens at u-bourgogne.fr (=?iso-8859-1?Q?J=E9rome_Laurens?=)
Date: Tue, 26 Jan 2010 11:08:46 +0100
Subject: [NTG-pdftex] About SyncTeX and output-directory option
In-Reply-To: <f830226f1001250558r2ba0eac8k8d12c463546a7258@mail.gmail.com>
References: <23F76915-9BFA-41CB-877F-F86255D926AF@u-bourgogne.fr>
	<alpine.DEB.1.00.1001231117550.3772@hahepc1.hahe>
	<20100123142011.15876ydp7gbcpdc8@webmail.u-bourgogne.fr>
	<f830226f1001250558r2ba0eac8k8d12c463546a7258@mail.gmail.com>
Message-ID: <809F6389-0EE1-434D-9DB2-46A4613A16A3@u-bourgogne.fr>


Le 25 janv. 2010 ? 14:58, Thanh Han The a ?crit :

> On 1/23/10, Jerome Laurens <Jerome.Laurens at u-bourgogne.fr> wrote:
>>> 
>> 
>> Not really. This is just a matter of convention:
>> if someone wants to use the pdftex output directory option and
>> does not really know what name to choose, he can simply use "Factory".
>> That would make life easier when sharing documents as folders.
>> And that would give a better UI experience for newcomers or beginners.
>> Anyway, that is out of topic on this list.
> 
> Karl will be looking into the output directory option. If he
> thinks a default value like "Factory" would be helpful, then
> probably he could add that.
> 
> IMO this change is backward-incompatible; until now giving
> no output dir means using the current dir. If we change the
> default to "Factory", users who don't use this option might
> be surprised since they will not get the output in the current
> dir as expected.

Absolutely.
This "Factory" feature should not be managed at the pdftex level, only supported eventually.
In my mind, this is more an option for wrapper tools like texexec or latexmk and all the TeX frontends.

However, the name "Factory" can at least be suggested as a reasonable value of --output-directory in the pdftex man page.
Maybe we can go just a small step further with an optional parameter

pdftex --factory foo.tex

that would be equivalent to

pdftex --output-directory=Factory foo.tex

A wrapper tool like latexmk would support the "Factory" design as follows:
the command "latexmk --factory foo.tex"
would call "pdftex --output-directory=Factory foo.tex"
for backwards compatibility with older pdftex versions

A more clever behavior for pdftex is perfectly possible but is by no means desirable (at least IMO).
For example, latexmk could guess that "Factory" should be used even if no --factory option was given,
by first testing whether some Factory/foo.* file exists.
This "clever" behaviour can be overriden by the --output-directory="." option.

I don't know if many people would use this --factory from the command line,
but the fact that it exists would suggest both users, teachers and frontend developers that
it might be good practice to use it or support it.

Regards

J?r?me





