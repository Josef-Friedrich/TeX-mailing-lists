From noreply at sarovar.org  Mon Oct  2 22:45:31 2006
From: noreply at sarovar.org (noreply at sarovar.org)
Date: Tue, 03 Oct 2006 02:15:31 +0530
Subject: [NTG-pdftex] [ pdftex-Bugs-611 ] Bug of pdftex beta upon reading
	some truetype
Message-ID: <E1GUUfL-0005VH-00@sarovar.org>

Bugs item #611, was opened at 2006-09-30 00:17
You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=611&group_id=106

Category: Fonts
Group: v1.40.0
Status: Open
Resolution: Accepted
Priority: 5
Submitted By: Dohyun Kim (nomos)
Assigned to: The Thanh Han (hanthethanh)
Summary: Bug of pdftex beta upon reading some truetype

Initial Comment:
I have recently installed pdftex beta on my Linux box. 
But I am puzzled by a strange behavior of newly 
installed pdftex. For your test, I've put a minimal 
tarball (1.6M) to a server:

http://210.94.201.157/~nomos/KTUG/truetypetest.tar.gz

On my i686 Linux machine, compiling the following file 
(which is included in the tarball above) with pdftex 
beta version 20060906 fails with Segmentation Fault.

====================
%\pdfmapline{+oungtb4e <oungtb4e.enc <UnDotumBold.ttf}
%%% it works.
\pdfmapline{+oungtb at Unicode@ <UnDotumBold.ttf}        
%%% it segfaults.
\font\mytt=oungtb4e\relax
\mytt
\char0
\char1
\bye
====================

PDFTeX beta 20060928, the most recent version at the
time of this reporting, crashes too.
Please inspect the problem.

----------------------------------------------------------------------

>Comment By: The Thanh Han (hanthethanh)
Date: 2006-10-02 20:45

Message:
Logged In: YES 
user_id=710

here is my attempt to fix the bug. Please apply the attached
patch as follows:

,--------
| cd /path/to/pdftex-1.40.0-beta-20060928/src
| cat /path/to/the/patch | patch -p1
| ./configure
| cd texk/web2c
| make pdfetex
`--------


----------------------------------------------------------------------

Comment By: Martin Schr?der (oneiros)
Date: 2006-09-30 17:30

Message:
Logged In: YES 
user_id=421

Just FTR: I've tried to attach the file from nomos to this
bug, but this fails silently; probably some size limit. :-(

----------------------------------------------------------------------

You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=611&group_id=106

From noreply at sarovar.org  Mon Oct  2 22:47:59 2006
From: noreply at sarovar.org (noreply at sarovar.org)
Date: Tue, 03 Oct 2006 02:17:59 +0530
Subject: [NTG-pdftex] [ pdftex-Bugs-611 ] Bug of pdftex beta upon reading
	some truetype
Message-ID: <E1GUUhj-0005e6-00@sarovar.org>

Bugs item #611, was opened at 2006-09-30 00:17
You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=611&group_id=106

Category: Fonts
Group: v1.40.0
Status: Open
Resolution: Accepted
Priority: 5
Submitted By: Dohyun Kim (nomos)
Assigned to: The Thanh Han (hanthethanh)
Summary: Bug of pdftex beta upon reading some truetype

Initial Comment:
I have recently installed pdftex beta on my Linux box. 
But I am puzzled by a strange behavior of newly 
installed pdftex. For your test, I've put a minimal 
tarball (1.6M) to a server:

http://210.94.201.157/~nomos/KTUG/truetypetest.tar.gz

On my i686 Linux machine, compiling the following file 
(which is included in the tarball above) with pdftex 
beta version 20060906 fails with Segmentation Fault.

====================
%\pdfmapline{+oungtb4e <oungtb4e.enc <UnDotumBold.ttf}
%%% it works.
\pdfmapline{+oungtb at Unicode@ <UnDotumBold.ttf}        
%%% it segfaults.
\font\mytt=oungtb4e\relax
\mytt
\char0
\char1
\bye
====================

PDFTeX beta 20060928, the most recent version at the
time of this reporting, crashes too.
Please inspect the problem.

----------------------------------------------------------------------

>Comment By: The Thanh Han (hanthethanh)
Date: 2006-10-02 20:47

Message:
Logged In: YES 
user_id=710

sorry, 

----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2006-10-02 20:45

Message:
Logged In: YES 
user_id=710

here is my attempt to fix the bug. Please apply the attached
patch as follows:

,--------
| cd /path/to/pdftex-1.40.0-beta-20060928/src
| cat /path/to/the/patch | patch -p1
| ./configure
| cd texk/web2c
| make pdfetex
`--------


----------------------------------------------------------------------

Comment By: Martin Schr?der (oneiros)
Date: 2006-09-30 17:30

Message:
Logged In: YES 
user_id=421

Just FTR: I've tried to attach the file from nomos to this
bug, but this fails silently; probably some size limit. :-(

----------------------------------------------------------------------

You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=611&group_id=106

From noreply at sarovar.org  Mon Oct  2 22:53:16 2006
From: noreply at sarovar.org (noreply at sarovar.org)
Date: Tue, 03 Oct 2006 02:23:16 +0530
Subject: [NTG-pdftex] [ pdftex-Bugs-611 ] Bug of pdftex beta upon reading
	some truetype
Message-ID: <E1GUUmq-00067h-00@sarovar.org>

Bugs item #611, was opened at 2006-09-30 00:17
You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=611&group_id=106

Category: Fonts
Group: v1.40.0
Status: Open
Resolution: Accepted
Priority: 5
Submitted By: Dohyun Kim (nomos)
Assigned to: The Thanh Han (hanthethanh)
Summary: Bug of pdftex beta upon reading some truetype

Initial Comment:
I have recently installed pdftex beta on my Linux box. 
But I am puzzled by a strange behavior of newly 
installed pdftex. For your test, I've put a minimal 
tarball (1.6M) to a server:

http://210.94.201.157/~nomos/KTUG/truetypetest.tar.gz

On my i686 Linux machine, compiling the following file 
(which is included in the tarball above) with pdftex 
beta version 20060906 fails with Segmentation Fault.

====================
%\pdfmapline{+oungtb4e <oungtb4e.enc <UnDotumBold.ttf}
%%% it works.
\pdfmapline{+oungtb at Unicode@ <UnDotumBold.ttf}        
%%% it segfaults.
\font\mytt=oungtb4e\relax
\mytt
\char0
\char1
\bye
====================

PDFTeX beta 20060928, the most recent version at the
time of this reporting, crashes too.
Please inspect the problem.

----------------------------------------------------------------------

>Comment By: The Thanh Han (hanthethanh)
Date: 2006-10-02 20:53

Message:
Logged In: YES 
user_id=710

sorry for the mess -- I forgot to attach the patch

----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2006-10-02 20:47

Message:
Logged In: YES 
user_id=710

sorry, 

----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2006-10-02 20:45

Message:
Logged In: YES 
user_id=710

here is my attempt to fix the bug. Please apply the attached
patch as follows:

,--------
| cd /path/to/pdftex-1.40.0-beta-20060928/src
| cat /path/to/the/patch | patch -p1
| ./configure
| cd texk/web2c
| make pdfetex
`--------


----------------------------------------------------------------------

Comment By: Martin Schr?der (oneiros)
Date: 2006-09-30 17:30

Message:
Logged In: YES 
user_id=421

Just FTR: I've tried to attach the file from nomos to this
bug, but this fails silently; probably some size limit. :-(

----------------------------------------------------------------------

You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=611&group_id=106

From noreply at sarovar.org  Mon Oct  2 23:12:36 2006
From: noreply at sarovar.org (noreply at sarovar.org)
Date: Tue, 03 Oct 2006 02:42:36 +0530
Subject: [NTG-pdftex] [ pdftex-Bugs-611 ] Bug of pdftex beta upon reading
	some truetype
Message-ID: <E1GUV5Y-0000pC-00@sarovar.org>

Bugs item #611, was opened at 2006-09-30 02:17
You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=611&group_id=106

Category: Fonts
Group: v1.40.0
>Status: Closed
>Resolution: Fixed
Priority: 5
Submitted By: Dohyun Kim (nomos)
Assigned to: The Thanh Han (hanthethanh)
Summary: Bug of pdftex beta upon reading some truetype

Initial Comment:
I have recently installed pdftex beta on my Linux box. 
But I am puzzled by a strange behavior of newly 
installed pdftex. For your test, I've put a minimal 
tarball (1.6M) to a server:

http://210.94.201.157/~nomos/KTUG/truetypetest.tar.gz

On my i686 Linux machine, compiling the following file 
(which is included in the tarball above) with pdftex 
beta version 20060906 fails with Segmentation Fault.

====================
%\pdfmapline{+oungtb4e <oungtb4e.enc <UnDotumBold.ttf}
%%% it works.
\pdfmapline{+oungtb at Unicode@ <UnDotumBold.ttf}        
%%% it segfaults.
\font\mytt=oungtb4e\relax
\mytt
\char0
\char1
\bye
====================

PDFTeX beta 20060928, the most recent version at the
time of this reporting, crashes too.
Please inspect the problem.

----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2006-10-02 22:53

Message:
Logged In: YES 
user_id=710

sorry for the mess -- I forgot to attach the patch

----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2006-10-02 22:47

Message:
Logged In: YES 
user_id=710

sorry, 

----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2006-10-02 22:45

Message:
Logged In: YES 
user_id=710

here is my attempt to fix the bug. Please apply the attached
patch as follows:

,--------
| cd /path/to/pdftex-1.40.0-beta-20060928/src
| cat /path/to/the/patch | patch -p1
| ./configure
| cd texk/web2c
| make pdfetex
`--------


----------------------------------------------------------------------

Comment By: Martin Schr?der (oneiros)
Date: 2006-09-30 19:30

Message:
Logged In: YES 
user_id=421

Just FTR: I've tried to attach the file from nomos to this
bug, but this fails silently; probably some size limit. :-(

----------------------------------------------------------------------

You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=611&group_id=106

From noreply at sarovar.org  Wed Oct  4 16:43:47 2006
From: noreply at sarovar.org (noreply at sarovar.org)
Date: Wed, 04 Oct 2006 20:13:47 +0530
Subject: [NTG-pdftex] [ pdftex-Bugs-609 ] Pdf "convert" primitives bug
Message-ID: <E1GV7yN-0005q5-00@sarovar.org>

Bugs item #609, was opened at 2006-09-28 18:50
You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=609&group_id=106

Category: Primitives
Group: v1.40.0
Status: Open
Resolution: Accepted
Priority: 5
Submitted By: Taco Hoekwater (taco)
Assigned to: Taco Hoekwater (taco)
>Summary: Pdf "convert" primitives bug

Initial Comment:
The problem:

   When tex calls `conv_toks()' to execute `convert'
commands, a string
   may already be being built. A call to scan_toks
(pdf_scan_ext_toks)
   at that moment will incorporate that partial string
to the argument
   of the `convert' primitive, and erase it from the
output.

Example code:

   \message{\pdfmdfivesum{knuth}}
   \input knuth\pdfmdfivesum{}
   \bye

Affected primitives:

   \pdfescapestring
   \pdfescapename
   \pdfescapehex
   \pdfunescapehex
   \pdffilemoddate
   \pdffilesize
   \pdffiledump
   \pdfmdfivesum
   \pdfstrcmp

The needed fix:

   Somewhen before calling scan_pdf_ext_toks, you have
to store the
   partial string as a true tex string, then its
`partialness' has to
   be restored sometime later before leaving conv_toks().




----------------------------------------------------------------------

>Comment By: Taco Hoekwater (taco)
Date: 2006-10-04 16:43

Message:
Logged In: YES 
user_id=1608

patch against pdftex.web from 20060928 attached.

----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2006-09-28 18:52

Message:
Logged In: YES 
user_id=1608

sorry, it is a bug, of course 

----------------------------------------------------------------------

You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=609&group_id=106

From noreply at sarovar.org  Fri Oct  6 13:34:01 2006
From: noreply at sarovar.org (noreply at sarovar.org)
Date: Fri, 06 Oct 2006 17:04:01 +0530
Subject: [NTG-pdftex] [ pdftex-Patches-580 ] Patch to make ToUnicode for
	Type1 fonts
Message-ID: <E1GVnxp-0006KR-00@sarovar.org>

Patches item #580, was opened at 2006-07-14 20:57
You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=495&aid=580&group_id=106

Category: None
Group: None
Status: Open
Resolution: None
Priority: 5
Submitted By: The Thanh Han (hanthethanh)
Assigned to: Nobody (None)
Summary: Patch to make ToUnicode for Type1 fonts

Initial Comment:
This is a patch to pdftex so that it can create
ToUnicode entries for Type1
fonts. The main purpose is to make ligatures and some
other glyphs like
smallcap letters or oldstyle digits from OpenType fonts
searchable. This
patch also contains a minor fix that allows use of
fonts without embedding,
for example MinionPro or MyriadPro (which are
distributed with Acrobat
Reader >= 7.0 but from their use is restricted with
Acrobat Reader only).

How to apply:
~~~~~~~~~~~~~
- this patch applies to the pristine
pdftex-1.40.0-beta-20060213 sources
  only; if you have applied another patch(es) to the
sources, please
  discard them and start from the fresh ones.

- how to apply:

,--------
| cd /path/to/pdftex-1.40.0-beta-20060213/src
| cat /path/to/the/patch | patch -p1
| ./configure
| cd texk/web2c
| make pdfetex
`--------

If you want to be careful, try the patch with the
option '--dry-run' first to
see whether the patch can be applied without problems.


Usage:
~~~~~~
add the following lines into your document, somewhere
at the beginning:

,--------
| \input glyphtounicode.tex
| \pdfgentounicode=1
`--------

Customization:
~~~~~~~~~~~~~
If pdftex cannot generate the right ToUnicode value for
some glyphs
(probably because the glyph name is not ``known'' to
pdftex), it's possible
to add further entries so pdftex can learn how to
generate unicode for such
``unknown'' glyphs.

The syntax is simple:

\pdfglyphtounicode{<glyph-name>}{<unicode-value>}

Example:

\pdfglyphtounicode{A}{0041}

says that glyph 'A' has its unicode U+0041

The entries in glyphtounicode.tex cover Adobe Glyph
List (glyphlist.txt
version 2.0) and some addtional glyphs
(texglyphlist.txt version 2.33,
coming from from lcdf-typetools), plus some additional
entries for
ligatures.

If some glyph name cannot be found, pdftex does some
simple name
translations:

- remove any ".xxx" suffix from glyph name, where "xxx"
is a string
  consisting of alphabetic characters. For example
"A.sc" => "A"

- remove suffix like "small", "oldstyle", "inferior"
and "superior" from
  glyph name. For example "Asmall" => "A"

The result name then is looked up again to find a unicode.

Ligatures require a special form of ToUnicode. Example:

\pdfglyphtounicode{ff}{00660066}

here '0066' is the unicode string for 'f'. Some
ligatures have their name
like 'f_f_i', in such case the command should be

\pdfglyphtounicode{f_f_i}{006600660069}

ie '_' is removed from the glyph name, and then all
letters are translated
to their unicode string.


----------------------------------------------------------------------

>Comment By: The Thanh Han (hanthethanh)
Date: 2006-10-06 11:34

Message:
Logged In: YES 
user_id=710

This is a patch to pdftex that includes:
  - a fix for bug #611
  - some changes to ToUnicode support (patch #580) to make the
    implementation follow guidelines at
   
http://partners.adobe.com/public/developer/opentype/index_glyph.html


How to apply:
~~~~~~~~~~~~~
- this patch applies to the pristine
pdftex-1.40.0-beta-20060928 sources
  only; if you have applied another patch(es) to the
sources, please
  discard them and start from the fresh ones.

- how to apply:

,--------
| cd /path/to/pdftex-1.40.0-beta-20060928/src
| cat /path/to/the/patch | patch -p1
| ./configure
| cd texk/web2c
| make pdftex
`--------

If you want to be careful, try the patch with the option
'--dry-run' first to
see whether the patch can be applied without problems.


Usage:
~~~~~~
add the following lines into your document, somewhere at the
beginning:

,--------
| \input glyphtounicode.tex
| \pdfgentounicode=1
`--------

Customization:
~~~~~~~~~~~~~
If pdftex cannot generate the right ToUnicode value for some
glyphs
(probably because the glyph name is not ``known'' to
pdftex), it's possible
to add further entries so pdftex can learn how to generate
unicode for such
``unknown'' glyphs.

The syntax is simple:

,--------
| \pdfglyphtounicode{<glyph-name>}{<unicode-value>}
`--------

Example:

,--------
| \pdfglyphtounicode{A}{0041}
`--------

says that glyph 'A' has its unicode U+0041. 

\pdfglyphtounicode requires that the second parameter
consists of uppercase
hexadecimal digits (0..9, A..F) and spaces. If this is not
the case the
entry is simply discarded (with a warning). Later entries
overwrite
previous entries with the same name (1st arg).

The entries in glyphtounicode.tex cover:
  - glyphlist.txt       (Adobe Glyph List v2.0)
  - zapfdingbats.txt    (ITC Zapf Dingbats Glyph List v2.0)
  - texglyphlist.txt    (lcdf-typetools texglyphlist.txt v2.33)
  - additional.tex      (additional entries)

Ligatures require a special form of ToUnicode. Example:

,--------
| \pdfglyphtounicode{ff}{00660066}
`--------

here '0066' is the unicode string for 'f'. Spaces are
ignored in the second
parameter of \pdfglyphtounicode, hence it is possible to
write the above
command as

,--------
| \pdfglyphtounicode{ff}{0066 0066}
`--------

which is easier to read and understand IMO.


----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2006-07-19 06:08

Message:
Logged In: YES 
user_id=710

patch updated to fix a bug reported by Dohyun Kim

----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2006-07-16 11:19

Message:
Logged In: YES 
user_id=710

patch updated by a bug fix from Akira

----------------------------------------------------------------------

You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=495&aid=580&group_id=106

From noreply at sarovar.org  Sat Oct  7 11:44:01 2006
From: noreply at sarovar.org (noreply at sarovar.org)
Date: Sat, 07 Oct 2006 15:14:01 +0530
Subject: [NTG-pdftex] [ pdftex-Patches-580 ] Patch to make ToUnicode for
	Type1 fonts
Message-ID: <E1GW8iv-0000VR-00@sarovar.org>

Patches item #580, was opened at 2006-07-14 20:57
You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=495&aid=580&group_id=106

Category: None
Group: None
Status: Open
Resolution: None
Priority: 5
Submitted By: The Thanh Han (hanthethanh)
Assigned to: Nobody (None)
Summary: Patch to make ToUnicode for Type1 fonts

Initial Comment:
This is a patch to pdftex so that it can create
ToUnicode entries for Type1
fonts. The main purpose is to make ligatures and some
other glyphs like
smallcap letters or oldstyle digits from OpenType fonts
searchable. This
patch also contains a minor fix that allows use of
fonts without embedding,
for example MinionPro or MyriadPro (which are
distributed with Acrobat
Reader >= 7.0 but from their use is restricted with
Acrobat Reader only).

How to apply:
~~~~~~~~~~~~~
- this patch applies to the pristine
pdftex-1.40.0-beta-20060213 sources
  only; if you have applied another patch(es) to the
sources, please
  discard them and start from the fresh ones.

- how to apply:

,--------
| cd /path/to/pdftex-1.40.0-beta-20060213/src
| cat /path/to/the/patch | patch -p1
| ./configure
| cd texk/web2c
| make pdfetex
`--------

If you want to be careful, try the patch with the
option '--dry-run' first to
see whether the patch can be applied without problems.


Usage:
~~~~~~
add the following lines into your document, somewhere
at the beginning:

,--------
| \input glyphtounicode.tex
| \pdfgentounicode=1
`--------

Customization:
~~~~~~~~~~~~~
If pdftex cannot generate the right ToUnicode value for
some glyphs
(probably because the glyph name is not ``known'' to
pdftex), it's possible
to add further entries so pdftex can learn how to
generate unicode for such
``unknown'' glyphs.

The syntax is simple:

\pdfglyphtounicode{<glyph-name>}{<unicode-value>}

Example:

\pdfglyphtounicode{A}{0041}

says that glyph 'A' has its unicode U+0041

The entries in glyphtounicode.tex cover Adobe Glyph
List (glyphlist.txt
version 2.0) and some addtional glyphs
(texglyphlist.txt version 2.33,
coming from from lcdf-typetools), plus some additional
entries for
ligatures.

If some glyph name cannot be found, pdftex does some
simple name
translations:

- remove any ".xxx" suffix from glyph name, where "xxx"
is a string
  consisting of alphabetic characters. For example
"A.sc" => "A"

- remove suffix like "small", "oldstyle", "inferior"
and "superior" from
  glyph name. For example "Asmall" => "A"

The result name then is looked up again to find a unicode.

Ligatures require a special form of ToUnicode. Example:

\pdfglyphtounicode{ff}{00660066}

here '0066' is the unicode string for 'f'. Some
ligatures have their name
like 'f_f_i', in such case the command should be

\pdfglyphtounicode{f_f_i}{006600660069}

ie '_' is removed from the glyph name, and then all
letters are translated
to their unicode string.


----------------------------------------------------------------------

>Comment By: The Thanh Han (hanthethanh)
Date: 2006-10-07 09:44

Message:
Logged In: YES 
user_id=710

Patch updated to fix a bug reported by Akira.

----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2006-10-06 11:34

Message:
Logged In: YES 
user_id=710

This is a patch to pdftex that includes:
  - a fix for bug #611
  - some changes to ToUnicode support (patch #580) to make the
    implementation follow guidelines at
   
http://partners.adobe.com/public/developer/opentype/index_glyph.html


How to apply:
~~~~~~~~~~~~~
- this patch applies to the pristine
pdftex-1.40.0-beta-20060928 sources
  only; if you have applied another patch(es) to the
sources, please
  discard them and start from the fresh ones.

- how to apply:

,--------
| cd /path/to/pdftex-1.40.0-beta-20060928/src
| cat /path/to/the/patch | patch -p1
| ./configure
| cd texk/web2c
| make pdftex
`--------

If you want to be careful, try the patch with the option
'--dry-run' first to
see whether the patch can be applied without problems.


Usage:
~~~~~~
add the following lines into your document, somewhere at the
beginning:

,--------
| \input glyphtounicode.tex
| \pdfgentounicode=1
`--------

Customization:
~~~~~~~~~~~~~
If pdftex cannot generate the right ToUnicode value for some
glyphs
(probably because the glyph name is not ``known'' to
pdftex), it's possible
to add further entries so pdftex can learn how to generate
unicode for such
``unknown'' glyphs.

The syntax is simple:

,--------
| \pdfglyphtounicode{<glyph-name>}{<unicode-value>}
`--------

Example:

,--------
| \pdfglyphtounicode{A}{0041}
`--------

says that glyph 'A' has its unicode U+0041. 

\pdfglyphtounicode requires that the second parameter
consists of uppercase
hexadecimal digits (0..9, A..F) and spaces. If this is not
the case the
entry is simply discarded (with a warning). Later entries
overwrite
previous entries with the same name (1st arg).

The entries in glyphtounicode.tex cover:
  - glyphlist.txt       (Adobe Glyph List v2.0)
  - zapfdingbats.txt    (ITC Zapf Dingbats Glyph List v2.0)
  - texglyphlist.txt    (lcdf-typetools texglyphlist.txt v2.33)
  - additional.tex      (additional entries)

Ligatures require a special form of ToUnicode. Example:

,--------
| \pdfglyphtounicode{ff}{00660066}
`--------

here '0066' is the unicode string for 'f'. Spaces are
ignored in the second
parameter of \pdfglyphtounicode, hence it is possible to
write the above
command as

,--------
| \pdfglyphtounicode{ff}{0066 0066}
`--------

which is easier to read and understand IMO.


----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2006-07-19 06:08

Message:
Logged In: YES 
user_id=710

patch updated to fix a bug reported by Dohyun Kim

----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2006-07-16 11:19

Message:
Logged In: YES 
user_id=710

patch updated by a bug fix from Akira

----------------------------------------------------------------------

You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=495&aid=580&group_id=106

From noreply at sarovar.org  Wed Oct 11 11:21:02 2006
From: noreply at sarovar.org (noreply at sarovar.org)
Date: Wed, 11 Oct 2006 14:51:02 +0530
Subject: [NTG-pdftex] [ pdftex-Bugs-479 ] Nested links
Message-ID: <E1GXaGs-0001ID-00@sarovar.org>

Bugs item #479, was opened at 2006-02-09 17:08
You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=479&group_id=106

Category: Annotations
Group: v1.30.0
Status: Open
Resolution: Accepted
Priority: 5
Submitted By: Heiko Oberdiek (oberdiek)
Assigned to: Hartmut Henkel (hhenkel)
Summary: Nested links

Initial Comment:
Hello,

Dario Teixeira reported a problem on the pdfTeX
mailing list:

> I have come across an interesting issue with hyperref
> and pdftex.  Whenever one hyperlink is nested inside 
> another, the entire remainder of the line is shown
> as an hyperlink.
> 
> If you are wondering why on earth would someone want
> to have nested hyperlinks, please take a look at this
> sample document I created; it also displays the
"feature":
> http://www.dse.nl/~dario/misc/nestedlinks.pdf  [50KB]

I consider this as bug in pdfTeX and have
generated a small test file (plain format):

\showboxbreadth=\maxdimen
\showboxdepth=\maxdimen
[part before]
\pdfstartlink goto name{Hello}
[hello start
  \pdfstartlink attr{/C[1 0 0]} goto name{World}
  [inside world]%
  \pdfendlink\space
stop]%
\pdfendlink\space
[part after]\par
\showlists  

\vfill\eject
\pdfdest name{Hello}XYZ\relax
Hello
\vfill\eject
\pdfdest name{World}XYZ\relax
World
\end

Three annotations are generated by pdfTeX 1.30.4:

7 0 obj <<
/Type /Annot
/Rect [148.989 757.436 540 767.399]
/Subtype /Link
/A << /S /GoTo /D (Hello) >>
>> endobj
8 0 obj <<
/Type /Annot
/C[1 0 0] 
/Rect [199.439 757.436 257.361 767.399]
/Subtype /Link
/A << /S /GoTo /D (World) >>
>> endobj
9 0 obj <<
/Type /Annot
/Rect [257.361 757.436 281.769 767.399]
/Subtype /Link
/A << /S /GoTo /D (Hello) >>
>> endobj

Either there should be two overlapping
annotations or three distinct ones.
At any case "540" in the first rect is too large.

As workaround, the outer/enclosing annotation
can put into a box (\hbox in plain TeX, \mbox
in LaTeX). But it does not solve the problem,
because now the link cannot be broken across
lines.

Therefore the algorithm for annotations needs
to be reviewed and corrected.

Yours sincerely
  Heiko <oberdiek at uni-freiburg.de>

----------------------------------------------------------------------

>Comment By: The Thanh Han (hanthethanh)
Date: 2006-10-11 09:21

Message:
Logged In: YES 
user_id=710

This is an attempt to fix bug #479

- This patch applies to the pristine
pdftex-1.40.0-beta-20060928 sources
  only; if you have applied another patch(es) to the
sources, please
  discard them and start from the fresh ones.

- How to apply:

,--------
| cd /path/to/pdftex-1.40.0-beta-20060928/src
| cat /path/to/the/patch | patch -p1
| ./configure
| cd texk/web2c
| make pdftex
`--------

- Example is included in the zip archive.


----------------------------------------------------------------------

Comment By: Martin Schr?der (oneiros)
Date: 2006-02-12 23:07

Message:
Logged In: YES 
user_id=421

Confirmed with the latest beta.

_Can_ links be nested? And if they can, is there a limit on
the nesting depth?

----------------------------------------------------------------------

You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=479&group_id=106

From noreply at sarovar.org  Wed Oct 11 15:35:02 2006
From: noreply at sarovar.org (noreply at sarovar.org)
Date: Wed, 11 Oct 2006 19:05:02 +0530
Subject: [NTG-pdftex] [ pdftex-Bugs-479 ] Nested links
Message-ID: <E1GXeEg-0007DB-00@sarovar.org>

Bugs item #479, was opened at 2006-02-09 18:08
You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=479&group_id=106

Category: Annotations
Group: v1.30.0
>Status: Closed
>Resolution: Fixed
Priority: 5
Submitted By: Heiko Oberdiek (oberdiek)
Assigned to: Hartmut Henkel (hhenkel)
Summary: Nested links

Initial Comment:
Hello,

Dario Teixeira reported a problem on the pdfTeX
mailing list:

> I have come across an interesting issue with hyperref
> and pdftex.  Whenever one hyperlink is nested inside 
> another, the entire remainder of the line is shown
> as an hyperlink.
> 
> If you are wondering why on earth would someone want
> to have nested hyperlinks, please take a look at this
> sample document I created; it also displays the
"feature":
> http://www.dse.nl/~dario/misc/nestedlinks.pdf  [50KB]

I consider this as bug in pdfTeX and have
generated a small test file (plain format):

\showboxbreadth=\maxdimen
\showboxdepth=\maxdimen
[part before]
\pdfstartlink goto name{Hello}
[hello start
  \pdfstartlink attr{/C[1 0 0]} goto name{World}
  [inside world]%
  \pdfendlink\space
stop]%
\pdfendlink\space
[part after]\par
\showlists  

\vfill\eject
\pdfdest name{Hello}XYZ\relax
Hello
\vfill\eject
\pdfdest name{World}XYZ\relax
World
\end

Three annotations are generated by pdfTeX 1.30.4:

7 0 obj <<
/Type /Annot
/Rect [148.989 757.436 540 767.399]
/Subtype /Link
/A << /S /GoTo /D (Hello) >>
>> endobj
8 0 obj <<
/Type /Annot
/C[1 0 0] 
/Rect [199.439 757.436 257.361 767.399]
/Subtype /Link
/A << /S /GoTo /D (World) >>
>> endobj
9 0 obj <<
/Type /Annot
/Rect [257.361 757.436 281.769 767.399]
/Subtype /Link
/A << /S /GoTo /D (Hello) >>
>> endobj

Either there should be two overlapping
annotations or three distinct ones.
At any case "540" in the first rect is too large.

As workaround, the outer/enclosing annotation
can put into a box (\hbox in plain TeX, \mbox
in LaTeX). But it does not solve the problem,
because now the link cannot be broken across
lines.

Therefore the algorithm for annotations needs
to be reviewed and corrected.

Yours sincerely
  Heiko <oberdiek at uni-freiburg.de>

----------------------------------------------------------------------

Comment By: Martin Schr?der (oneiros)
Date: 2006-10-11 15:35

Message:
Logged In: YES 
user_id=421

A patch for this will be included in the next version (1.40).

----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2006-10-11 11:21

Message:
Logged In: YES 
user_id=710

This is an attempt to fix bug #479

- This patch applies to the pristine
pdftex-1.40.0-beta-20060928 sources
  only; if you have applied another patch(es) to the
sources, please
  discard them and start from the fresh ones.

- How to apply:

,--------
| cd /path/to/pdftex-1.40.0-beta-20060928/src
| cat /path/to/the/patch | patch -p1
| ./configure
| cd texk/web2c
| make pdftex
`--------

- Example is included in the zip archive.


----------------------------------------------------------------------

Comment By: Martin Schr?der (oneiros)
Date: 2006-02-13 00:07

Message:
Logged In: YES 
user_id=421

Confirmed with the latest beta.

_Can_ links be nested? And if they can, is there a limit on
the nesting depth?

----------------------------------------------------------------------

You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=479&group_id=106

From taco at elvenkind.com  Tue Oct 17 09:45:31 2006
From: taco at elvenkind.com (Taco Hoekwater)
Date: Tue, 17 Oct 2006 09:45:31 +0200
Subject: [NTG-pdftex] why is TeX breaking the line?
In-Reply-To: <Pine.GSO.4.63.0610152231420.16738@kempelen.iit.bme.hu>
References: <Pine.GSO.4.63.0610152231420.16738@kempelen.iit.bme.hu>
Message-ID: <45348A1B.3020201@elvenkind.com>


Hi P?ter,

Szabo Peter wrote:
> Dear Taco,
> 
> Do you have an idea why TeX is breaking the line at the \discretionary 
> in the source file below, thus producing an Overfull \hbox -- but if it 
> hadn't broken the line there, there would be no overfull boxes?
> 
> If you don't know the answer, could you please recommend a forum or 
> mailing list?


CC the pdftex mailing list, perhaps Thanh or Bernd knows, even though
it is not really a pdfTeX question. To me, it looks like it may even
be a bug.

Greetings, Taco


-------------- next part --------------
A non-text attachment was scrubbed...
Name: peter.tex
Type: text/x-tex
Size: 349 bytes
Desc: not available
Url : http://www.ntg.nl/pipermail/ntg-pdftex/attachments/20061017/56811aba/attachment.bin 

From taco at elvenkind.com  Tue Oct 17 09:49:45 2006
From: taco at elvenkind.com (Taco Hoekwater)
Date: Tue, 17 Oct 2006 09:49:45 +0200
Subject: [NTG-pdftex] why is TeX breaking the line? (updated)
In-Reply-To: <45348A1B.3020201@elvenkind.com>
References: <Pine.GSO.4.63.0610152231420.16738@kempelen.iit.bme.hu>
	<45348A1B.3020201@elvenkind.com>
Message-ID: <45348B19.1070205@elvenkind.com>


Oops, sorry, I sent the wrong file.

Taco
-------------- next part --------------
A non-text attachment was scrubbed...
Name: peter-orig.tex
Type: text/x-tex
Size: 354 bytes
Desc: not available
Url : http://www.ntg.nl/pipermail/ntg-pdftex/attachments/20061017/e1338443/attachment.bin 

From noreply at sarovar.org  Tue Oct 17 15:01:59 2006
From: noreply at sarovar.org (noreply at sarovar.org)
Date: Tue, 17 Oct 2006 18:31:59 +0530
Subject: [NTG-pdftex] [ pdftex-Patches-466 ] \primitive and \ifprimitive
Message-ID: <E1GZoZz-0001Pt-00@sarovar.org>

Patches item #466, was opened at 2006-01-07 17:22
You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=495&aid=466&group_id=106

Category: Primitives
Group: v1.30.0
>Status: Closed
Resolution: Accepted
Priority: 4
Submitted By: Taco Hoekwater (taco)
Assigned to: Martin Schr?der (oneiros)
Summary: \primitive and \ifprimitive

Initial Comment:
This patch implements two new primitives:

  \primitive \par

This will run the 'primitive' command \par, even if it 
has been re- or undefined in the meantime. \primitive
is not expandable, because it may be asked to execute
unexpandable primitives as well as expandable ones.

If you supply a nonexistant primitive, it will be 
ignored (no error is raised).

The second primitive is a new type of \if:

  \ifprimitive \par ... \else .. \fi

returns true if the current meaning of \par is the
'primitive' command \par.


The patch is against alpha-20051226, i hope that is not 
too old (?). I expect to do at least one minor update 
during the beta cycle, after the pdftex code is 
flattened. It was quite a struggle to make this 
change file work ok, and as a result, there are 
a few ugly web hacks.


----------------------------------------------------------------------

Comment By: Martin Schr?der (oneiros)
Date: 2006-07-26 12:27

Message:
Logged In: YES 
user_id=421

This has been included in version 1.40

----------------------------------------------------------------------

Comment By: Bernd Raichle (bernd)
Date: 2006-02-14 08:17

Message:
Logged In: YES 
user_id=3344

IMHO it would be better to rephrase the above to (and change
the implementation accordingly :-():

<quote mode="changed">
\primitive is expandable, because it may asked to execute
expandable primitives as well as unexpandable ones.

\primitive<cs> will expand to one token, the original TeX
primitive.  This token will then be processed further as usual.
</quote>


If \primitive is left unexpandable, a lot of programming
techniques seems to be unavailable, e.g., all redefined
expandable primitives in expandable-only context.

Or any assignment to the get the original primitive, like

\edef\orignumber{\expandafter\noexpand\primitive\number}

\expandafter\let\expandafter\orignumber\primitive\number


Sidenote: The new \primitive seems to implement a subset of
a full-blown namespace mechanism.  If (pdf)TeX would have
namespaces, one simply has to access the appropriate token
within the "primitive" namespace (e.g. \primitive::number to
 access the original \number primitive, assuming the
notation \<namespace>::<csname>).  How about choosing an
appropriate namespace mechanism for (pdf)TeX and
implementing it instead?

----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2006-02-13 18:56

Message:
Logged In: YES 
user_id=1608

We need to think about this. 

I see your point, but making \primitive expandable forces
the introduction of un-redefinable tokens, and that has its
own problematic side-effects (like slowing down each and
every definition). I welcome third opinions on whether the 
benefits outweigh that downside.

At one point I tried making the expandability depend on the
referred primitive, but that gave me headaches at the
implementation stage (a pity, because that would have been
nice).

Yet another solution is to have an expandable command as
well as an unexpandable command (two primitives instead of
just the single \primitive).

On the side note: I will happily write an implementation ...
but only if someone comes up with a specification that works
under all conditions instead of only under specific
programming styles :-)



----------------------------------------------------------------------

Comment By: Bernd Raichle (bernd)
Date: 2006-02-13 17:40

Message:
Logged In: YES 
user_id=3344

IMHO it would be better to rephrase the above to (and change
the implementation accordingly :-():

<quote mode="changed">
\primitive is expandable, because it may asked to execute
expandable primitives as well as unexpandable ones.

\primitive<cs> will expand to one token, the original TeX
primitive.  This token will then be processed further as usual.
</quote>


If \primitive is left unexpandable, a lot of programming
techniques seems to be unavailable, e.g., all redefined
expandable primitives in expandable-only context.

Or any assignment to the get the original primitive, like

\edef\orignumber{\expandafter\noexpand\primitive\number}

\expandafter\let\expandafter\orignumber\primitive\number


Sidenote: The new \primitive seems to implement a subset of
a full-blown namespace mechanism.  If (pdf)TeX would have
namespaces, one simply has to access the appropriate token
within the "primitive" namespace (e.g. \primitive::number to
 access the original \number primitive, assuming the
notation \<namespace>::<csname>).  How about choosing an
appropriate namespace mechanism for (pdf)TeX and
implementing it instead?

----------------------------------------------------------------------

You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=495&aid=466&group_id=106

From noreply at sarovar.org  Tue Oct 17 15:03:03 2006
From: noreply at sarovar.org (noreply at sarovar.org)
Date: Tue, 17 Oct 2006 18:33:03 +0530
Subject: [NTG-pdftex] [ pdftex-Patches-473 ] \ifabsnum and \ifabsdim
Message-ID: <E1GZob1-0001WJ-00@sarovar.org>

Patches item #473, was opened at 2006-01-27 15:20
You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=495&aid=473&group_id=106

Category: Primitives
>Group: v1.40.0
Status: Closed
Resolution: Accepted
Priority: 4
Submitted By: Taco Hoekwater (taco)
Assigned to: Martin Schr?der (oneiros)
Summary: \ifabsnum and \ifabsdim

Initial Comment:
Here is a small change file that implements two new
etex primitives :
  \ifabsnum 
  \ifabsdim 
Usage is the same as \ifnum and \ifdim. The only 
difference is that they negate the values if they are
negative before comparing.

----------------------------------------------------------------------

Comment By: Martin Schr?der (oneiros)
Date: 2006-07-26 12:28

Message:
Logged In: YES 
user_id=421

This has been included in version 1.40

----------------------------------------------------------------------

Comment By: Hans Hagen (hagen)
Date: 2006-01-27 15:31

Message:
Logged In: YES 
user_id=927

intended usage: 

\ifabsdim \dimexpr \maxheight - \currentheight \relax < .5pt 
  assume that we're done 
\fi 

it can also be used to handle rounding errors when doing
roundtrip calculations 


----------------------------------------------------------------------

You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=495&aid=473&group_id=106

From noreply at sarovar.org  Tue Oct 17 15:03:16 2006
From: noreply at sarovar.org (noreply at sarovar.org)
Date: Tue, 17 Oct 2006 18:33:16 +0530
Subject: [NTG-pdftex] [ pdftex-Patches-466 ] \primitive and \ifprimitive
Message-ID: <E1GZobE-0001Wm-00@sarovar.org>

Patches item #466, was opened at 2006-01-07 17:22
You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=495&aid=466&group_id=106

Category: Primitives
>Group: v1.40.0
Status: Closed
Resolution: Accepted
Priority: 4
Submitted By: Taco Hoekwater (taco)
Assigned to: Martin Schr?der (oneiros)
Summary: \primitive and \ifprimitive

Initial Comment:
This patch implements two new primitives:

  \primitive \par

This will run the 'primitive' command \par, even if it 
has been re- or undefined in the meantime. \primitive
is not expandable, because it may be asked to execute
unexpandable primitives as well as expandable ones.

If you supply a nonexistant primitive, it will be 
ignored (no error is raised).

The second primitive is a new type of \if:

  \ifprimitive \par ... \else .. \fi

returns true if the current meaning of \par is the
'primitive' command \par.


The patch is against alpha-20051226, i hope that is not 
too old (?). I expect to do at least one minor update 
during the beta cycle, after the pdftex code is 
flattened. It was quite a struggle to make this 
change file work ok, and as a result, there are 
a few ugly web hacks.


----------------------------------------------------------------------

Comment By: Martin Schr?der (oneiros)
Date: 2006-07-26 12:27

Message:
Logged In: YES 
user_id=421

This has been included in version 1.40

----------------------------------------------------------------------

Comment By: Bernd Raichle (bernd)
Date: 2006-02-14 08:17

Message:
Logged In: YES 
user_id=3344

IMHO it would be better to rephrase the above to (and change
the implementation accordingly :-():

<quote mode="changed">
\primitive is expandable, because it may asked to execute
expandable primitives as well as unexpandable ones.

\primitive<cs> will expand to one token, the original TeX
primitive.  This token will then be processed further as usual.
</quote>


If \primitive is left unexpandable, a lot of programming
techniques seems to be unavailable, e.g., all redefined
expandable primitives in expandable-only context.

Or any assignment to the get the original primitive, like

\edef\orignumber{\expandafter\noexpand\primitive\number}

\expandafter\let\expandafter\orignumber\primitive\number


Sidenote: The new \primitive seems to implement a subset of
a full-blown namespace mechanism.  If (pdf)TeX would have
namespaces, one simply has to access the appropriate token
within the "primitive" namespace (e.g. \primitive::number to
 access the original \number primitive, assuming the
notation \<namespace>::<csname>).  How about choosing an
appropriate namespace mechanism for (pdf)TeX and
implementing it instead?

----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2006-02-13 18:56

Message:
Logged In: YES 
user_id=1608

We need to think about this. 

I see your point, but making \primitive expandable forces
the introduction of un-redefinable tokens, and that has its
own problematic side-effects (like slowing down each and
every definition). I welcome third opinions on whether the 
benefits outweigh that downside.

At one point I tried making the expandability depend on the
referred primitive, but that gave me headaches at the
implementation stage (a pity, because that would have been
nice).

Yet another solution is to have an expandable command as
well as an unexpandable command (two primitives instead of
just the single \primitive).

On the side note: I will happily write an implementation ...
but only if someone comes up with a specification that works
under all conditions instead of only under specific
programming styles :-)



----------------------------------------------------------------------

Comment By: Bernd Raichle (bernd)
Date: 2006-02-13 17:40

Message:
Logged In: YES 
user_id=3344

IMHO it would be better to rephrase the above to (and change
the implementation accordingly :-():

<quote mode="changed">
\primitive is expandable, because it may asked to execute
expandable primitives as well as unexpandable ones.

\primitive<cs> will expand to one token, the original TeX
primitive.  This token will then be processed further as usual.
</quote>


If \primitive is left unexpandable, a lot of programming
techniques seems to be unavailable, e.g., all redefined
expandable primitives in expandable-only context.

Or any assignment to the get the original primitive, like

\edef\orignumber{\expandafter\noexpand\primitive\number}

\expandafter\let\expandafter\orignumber\primitive\number


Sidenote: The new \primitive seems to implement a subset of
a full-blown namespace mechanism.  If (pdf)TeX would have
namespaces, one simply has to access the appropriate token
within the "primitive" namespace (e.g. \primitive::number to
 access the original \number primitive, assuming the
notation \<namespace>::<csname>).  How about choosing an
appropriate namespace mechanism for (pdf)TeX and
implementing it instead?

----------------------------------------------------------------------

You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=495&aid=466&group_id=106

From noreply at sarovar.org  Tue Oct 17 15:06:47 2006
From: noreply at sarovar.org (noreply at sarovar.org)
Date: Tue, 17 Oct 2006 18:36:47 +0530
Subject: [NTG-pdftex] [ pdftex-Patches-453 ] Object Streams for PDF-1.5
Message-ID: <E1GZoed-0001d0-00@sarovar.org>

Patches item #453, was opened at 2005-11-26 18:05
You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=495&aid=453&group_id=106

Category: Object Streams
>Group: v1.40.0
Status: Closed
Resolution: Accepted
Priority: 5
Submitted By: Hartmut Henkel (hhenkel)
Assigned to: Martin Schr?der (oneiros)
Summary: Object Streams for PDF-1.5

Initial Comment:
Rough early patch, work in progress, produces PDF-1.5
object streams and cross reference streams. With the
patch, and enabled by \pdfminorversion=5, and with
luck, pdfetex produces e. g. from its WEB source a PDF
file with size 5.97 MByte instead of 11.2 MByte without
object streams.

Regards, Hartmut

----------------------------------------------------------------------

Comment By: Martin Schr?der (oneiros)
Date: 2006-07-26 12:23

Message:
Logged In: YES 
user_id=421

This has been included in version 1.40

----------------------------------------------------------------------

Comment By: Hartmut Henkel (hhenkel)
Date: 2006-01-07 01:06

Message:
Logged In: YES 
user_id=929

objstream.ch updated: 1. object stream statistics added. 2.
maximum allocation values are added in brackets. Example:

PDF statistics:
 630 PDF objects out of 1000 (max. 8388607)
 577 compressed objects within 6 object streams
 113 named destinations out of 1000 (max. 131072)
 8353 words of extra memory for PDF output out of 10000
(max. 10000000)

Regards, Hartmut

----------------------------------------------------------------------

Comment By: Hartmut Henkel (hhenkel)
Date: 2005-12-26 20:21

Message:
Logged In: YES 
user_id=929

Patch update. Object stream writing is now controlled by
primitive \pdfobjcompresslevel = 0...3 (/pdfobjectstreams
primitive removed). 0 = no object streams at all, 1 =
compress objects excluding the ones from embedded PDF files
(for handling of problematic PDF files) and /Info dictionary
(for legibility), 2 = also compress objects from embedded
PDF files, but leave /Info uncompressed, 3 = compress
everything.

Testing welcome.

Regards, Hartmut

----------------------------------------------------------------------

You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=495&aid=453&group_id=106

From noreply at sarovar.org  Tue Oct 17 15:16:26 2006
From: noreply at sarovar.org (noreply at sarovar.org)
Date: Tue, 17 Oct 2006 18:46:26 +0530
Subject: [NTG-pdftex] [ pdftex-Patches-466 ] \primitive and \ifprimitive
Message-ID: <E1GZony-0005AN-00@sarovar.org>

Patches item #466, was opened at 2006-01-07 21:52
You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=495&aid=466&group_id=106

Category: Primitives
Group: v1.40.0
Status: Closed
Resolution: Accepted
Priority: 4
Submitted By: Taco Hoekwater (taco)
Assigned to: Martin Schr?der (oneiros)
Summary: \primitive and \ifprimitive

Initial Comment:
This patch implements two new primitives:

  \primitive \par

This will run the 'primitive' command \par, even if it 
has been re- or undefined in the meantime. \primitive
is not expandable, because it may be asked to execute
unexpandable primitives as well as expandable ones.

If you supply a nonexistant primitive, it will be 
ignored (no error is raised).

The second primitive is a new type of \if:

  \ifprimitive \par ... \else .. \fi

returns true if the current meaning of \par is the
'primitive' command \par.


The patch is against alpha-20051226, i hope that is not 
too old (?). I expect to do at least one minor update 
during the beta cycle, after the pdftex code is 
flattened. It was quite a struggle to make this 
change file work ok, and as a result, there are 
a few ugly web hacks.


----------------------------------------------------------------------

Comment By: Nobody (None)
Date: 2006-10-17 18:46

Message:
Logged In: NO 

> This patch implements two new primitives:
> \primitive \par 

This wording is very misleading : \par is not a new
primitive, and should not be mentioned here.  Its place (if
it has one) should be under examples of possible usage. 
Presumably the second new primitive is \ifprimitive, which
occurs much later in the prose.

Regarding the expandability or otherwise of \primitive, the
very worst of all worlds would be "making the expandability
depend on the referred primitive"; a primitive should either
be expandable or not expandable, not vary its behaviour
according to the phase of the moon !

----------------------------------------------------------------------

Comment By: Martin Schr?der (oneiros)
Date: 2006-07-26 15:57

Message:
Logged In: YES 
user_id=421

This has been included in version 1.40

----------------------------------------------------------------------

Comment By: Bernd Raichle (bernd)
Date: 2006-02-14 12:47

Message:
Logged In: YES 
user_id=3344

IMHO it would be better to rephrase the above to (and change
the implementation accordingly :-():

<quote mode="changed">
\primitive is expandable, because it may asked to execute
expandable primitives as well as unexpandable ones.

\primitive<cs> will expand to one token, the original TeX
primitive.  This token will then be processed further as usual.
</quote>


If \primitive is left unexpandable, a lot of programming
techniques seems to be unavailable, e.g., all redefined
expandable primitives in expandable-only context.

Or any assignment to the get the original primitive, like

\edef\orignumber{\expandafter\noexpand\primitive\number}

\expandafter\let\expandafter\orignumber\primitive\number


Sidenote: The new \primitive seems to implement a subset of
a full-blown namespace mechanism.  If (pdf)TeX would have
namespaces, one simply has to access the appropriate token
within the "primitive" namespace (e.g. \primitive::number to
 access the original \number primitive, assuming the
notation \<namespace>::<csname>).  How about choosing an
appropriate namespace mechanism for (pdf)TeX and
implementing it instead?

----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2006-02-13 23:26

Message:
Logged In: YES 
user_id=1608

We need to think about this. 

I see your point, but making \primitive expandable forces
the introduction of un-redefinable tokens, and that has its
own problematic side-effects (like slowing down each and
every definition). I welcome third opinions on whether the 
benefits outweigh that downside.

At one point I tried making the expandability depend on the
referred primitive, but that gave me headaches at the
implementation stage (a pity, because that would have been
nice).

Yet another solution is to have an expandable command as
well as an unexpandable command (two primitives instead of
just the single \primitive).

On the side note: I will happily write an implementation ...
but only if someone comes up with a specification that works
under all conditions instead of only under specific
programming styles :-)



----------------------------------------------------------------------

Comment By: Bernd Raichle (bernd)
Date: 2006-02-13 22:10

Message:
Logged In: YES 
user_id=3344

IMHO it would be better to rephrase the above to (and change
the implementation accordingly :-():

<quote mode="changed">
\primitive is expandable, because it may asked to execute
expandable primitives as well as unexpandable ones.

\primitive<cs> will expand to one token, the original TeX
primitive.  This token will then be processed further as usual.
</quote>


If \primitive is left unexpandable, a lot of programming
techniques seems to be unavailable, e.g., all redefined
expandable primitives in expandable-only context.

Or any assignment to the get the original primitive, like

\edef\orignumber{\expandafter\noexpand\primitive\number}

\expandafter\let\expandafter\orignumber\primitive\number


Sidenote: The new \primitive seems to implement a subset of
a full-blown namespace mechanism.  If (pdf)TeX would have
namespaces, one simply has to access the appropriate token
within the "primitive" namespace (e.g. \primitive::number to
 access the original \number primitive, assuming the
notation \<namespace>::<csname>).  How about choosing an
appropriate namespace mechanism for (pdf)TeX and
implementing it instead?

----------------------------------------------------------------------

You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=495&aid=466&group_id=106

From noreply at sarovar.org  Tue Oct 17 15:39:33 2006
From: noreply at sarovar.org (noreply at sarovar.org)
Date: Tue, 17 Oct 2006 19:09:33 +0530
Subject: [NTG-pdftex] [ pdftex-Patches-580 ] Patch to make ToUnicode for
	Type1 fonts
Message-ID: <E1GZpAL-0001cA-00@sarovar.org>

Patches item #580, was opened at 2006-07-14 22:57
You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=495&aid=580&group_id=106

Category: None
>Group: v1.40.0
Status: Open
>Resolution: Accepted
Priority: 5
Submitted By: The Thanh Han (hanthethanh)
Assigned to: Nobody (None)
Summary: Patch to make ToUnicode for Type1 fonts

Initial Comment:
This is a patch to pdftex so that it can create
ToUnicode entries for Type1
fonts. The main purpose is to make ligatures and some
other glyphs like
smallcap letters or oldstyle digits from OpenType fonts
searchable. This
patch also contains a minor fix that allows use of
fonts without embedding,
for example MinionPro or MyriadPro (which are
distributed with Acrobat
Reader >= 7.0 but from their use is restricted with
Acrobat Reader only).

How to apply:
~~~~~~~~~~~~~
- this patch applies to the pristine
pdftex-1.40.0-beta-20060213 sources
  only; if you have applied another patch(es) to the
sources, please
  discard them and start from the fresh ones.

- how to apply:

,--------
| cd /path/to/pdftex-1.40.0-beta-20060213/src
| cat /path/to/the/patch | patch -p1
| ./configure
| cd texk/web2c
| make pdfetex
`--------

If you want to be careful, try the patch with the
option '--dry-run' first to
see whether the patch can be applied without problems.


Usage:
~~~~~~
add the following lines into your document, somewhere
at the beginning:

,--------
| \input glyphtounicode.tex
| \pdfgentounicode=1
`--------

Customization:
~~~~~~~~~~~~~
If pdftex cannot generate the right ToUnicode value for
some glyphs
(probably because the glyph name is not ``known'' to
pdftex), it's possible
to add further entries so pdftex can learn how to
generate unicode for such
``unknown'' glyphs.

The syntax is simple:

\pdfglyphtounicode{<glyph-name>}{<unicode-value>}

Example:

\pdfglyphtounicode{A}{0041}

says that glyph 'A' has its unicode U+0041

The entries in glyphtounicode.tex cover Adobe Glyph
List (glyphlist.txt
version 2.0) and some addtional glyphs
(texglyphlist.txt version 2.33,
coming from from lcdf-typetools), plus some additional
entries for
ligatures.

If some glyph name cannot be found, pdftex does some
simple name
translations:

- remove any ".xxx" suffix from glyph name, where "xxx"
is a string
  consisting of alphabetic characters. For example
"A.sc" => "A"

- remove suffix like "small", "oldstyle", "inferior"
and "superior" from
  glyph name. For example "Asmall" => "A"

The result name then is looked up again to find a unicode.

Ligatures require a special form of ToUnicode. Example:

\pdfglyphtounicode{ff}{00660066}

here '0066' is the unicode string for 'f'. Some
ligatures have their name
like 'f_f_i', in such case the command should be

\pdfglyphtounicode{f_f_i}{006600660069}

ie '_' is removed from the glyph name, and then all
letters are translated
to their unicode string.


----------------------------------------------------------------------

Comment By: Martin Schr?der (oneiros)
Date: 2006-10-17 15:39

Message:
Logged In: YES 
user_id=421

This has been included in version 1.40

----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2006-10-07 11:44

Message:
Logged In: YES 
user_id=710

Patch updated to fix a bug reported by Akira.

----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2006-10-06 13:34

Message:
Logged In: YES 
user_id=710

This is a patch to pdftex that includes:
  - a fix for bug #611
  - some changes to ToUnicode support (patch #580) to make the
    implementation follow guidelines at
   
http://partners.adobe.com/public/developer/opentype/index_glyph.html


How to apply:
~~~~~~~~~~~~~
- this patch applies to the pristine
pdftex-1.40.0-beta-20060928 sources
  only; if you have applied another patch(es) to the
sources, please
  discard them and start from the fresh ones.

- how to apply:

,--------
| cd /path/to/pdftex-1.40.0-beta-20060928/src
| cat /path/to/the/patch | patch -p1
| ./configure
| cd texk/web2c
| make pdftex
`--------

If you want to be careful, try the patch with the option
'--dry-run' first to
see whether the patch can be applied without problems.


Usage:
~~~~~~
add the following lines into your document, somewhere at the
beginning:

,--------
| \input glyphtounicode.tex
| \pdfgentounicode=1
`--------

Customization:
~~~~~~~~~~~~~
If pdftex cannot generate the right ToUnicode value for some
glyphs
(probably because the glyph name is not ``known'' to
pdftex), it's possible
to add further entries so pdftex can learn how to generate
unicode for such
``unknown'' glyphs.

The syntax is simple:

,--------
| \pdfglyphtounicode{<glyph-name>}{<unicode-value>}
`--------

Example:

,--------
| \pdfglyphtounicode{A}{0041}
`--------

says that glyph 'A' has its unicode U+0041. 

\pdfglyphtounicode requires that the second parameter
consists of uppercase
hexadecimal digits (0..9, A..F) and spaces. If this is not
the case the
entry is simply discarded (with a warning). Later entries
overwrite
previous entries with the same name (1st arg).

The entries in glyphtounicode.tex cover:
  - glyphlist.txt       (Adobe Glyph List v2.0)
  - zapfdingbats.txt    (ITC Zapf Dingbats Glyph List v2.0)
  - texglyphlist.txt    (lcdf-typetools texglyphlist.txt v2.33)
  - additional.tex      (additional entries)

Ligatures require a special form of ToUnicode. Example:

,--------
| \pdfglyphtounicode{ff}{00660066}
`--------

here '0066' is the unicode string for 'f'. Spaces are
ignored in the second
parameter of \pdfglyphtounicode, hence it is possible to
write the above
command as

,--------
| \pdfglyphtounicode{ff}{0066 0066}
`--------

which is easier to read and understand IMO.


----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2006-07-19 08:08

Message:
Logged In: YES 
user_id=710

patch updated to fix a bug reported by Dohyun Kim

----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2006-07-16 13:19

Message:
Logged In: YES 
user_id=710

patch updated by a bug fix from Akira

----------------------------------------------------------------------

You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=495&aid=580&group_id=106

From noreply at sarovar.org  Tue Oct 17 15:08:27 2006
From: noreply at sarovar.org (noreply at sarovar.org)
Date: Tue, 17 Oct 2006 18:38:27 +0530
Subject: [NTG-pdftex] [ pdftex-Patches-603 ] Patch ColorStackTransformMatrix
Message-ID: <E1GZogF-0001vN-00@sarovar.org>

Patches item #603, was opened at 2006-09-07 10:35
You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=495&aid=603&group_id=106

Category: Primitives
Group: v1.40.0
Status: Open
>Resolution: Accepted
Priority: 8
Submitted By: Heiko Oberdiek (oberdiek)
Assigned to: Martin Schr?der (oneiros)
Summary: Patch ColorStackTransformMatrix

Initial Comment:
Subject: Patch ColorStackTransformMatrix
Date: 2006/09/07
Author: Heiko Oberdiek

The patch is based on pdftex-1.40.0-beta-20060906

It tries to solve two FAQ problems:
* missing color stack
* wrong annotation rectangles (links, anchors)
  if the material was scaled or rotated.

Files:
  ColorStackTransformMatrix.patch
    The patch, apply it in src/texk/web2c/pdftexdir:
    patch <ColorStackTransformMatrix.patch
  pdftex.def
    A modified version that uses the patch if the
    new primitives are found.

A short test file:

\documentclass{article}
\usepackage{color}
\usepackage{pdflscape}
\usepackage{hyperref}
\begin{document}
\tableofcontents
\section{Hello World}
\label{sec:hello}
\textcolor{blue}{Blue\newpage Blue}
\begin{landscape}
See \autoref{sec:hello}.
\end{landscape}
\end{document}

Without the patch:
* Text on first page before "Blue" is blue instead of
black.
* Text on second page is black instead of blue.
* The link frame on page three is misplaced.
With the patch and modified pdftex.def these things are
fixed.

New commands
  % color stack
    * \pdfcolorstackinit
    * \pdfcolorstack
  % matrix transformations
    * \pdfsetmatrix
    * \pdfsave
    * \pdfrestore

Syntax:

  %% expandable commands:
  \pdfcolorstackinit [page] [direct] <general text>

  %% general commands:
  \pdfcolorstack <stack number> <stack action> <general
text>
  \pdfsetmatrix
  \pdfsave
  \pdfrestore

  <stack action> ::= set | push | pop | current
Description for color stack:

  This color stack implementation allows several
  independent stacks (upto 32686):
  * Stacks can be used for other properties than color,
    especially other graphics state parameters.
  * Several "text flows across pages" can be supported
    by color stacks.
    Example: footnotes.

  \pdfcolorstackinit [page] [direct] {<initial value>}
    A stack is initialized by \pdfcolorstackinit. It
    expands to the number of the new stack. The common
    case, the traditinal color stack is already
    initialized as first stack:
      \pdfcolorstackinit page direct {0 g 0 G}
    The keyword "page" means, that this stack is page
    based. At the start of the new page, the current
    stack value is automatically set:
      \textcolor{blue}{A\newpage B}
    The second page with "B" will start with blue
    setting.
    The keyword "direct" has the same meaning as
    "direct" for \pdfliteral.
    If the stack value is set, it is done by an
    equivalent of
      \pdfliteral direct {...}.
    The mandatory argument is the initial value on the
    stack. It should be the default at page start for
    the property, see PDF documentation.

  \pdfcolorstack <stack number> push {<new color>}
    pushes the current value on the stack and sets the
    <new color>.
  \pdfcolorstack <stack number> pop
    pops and sets the current stack value.
  \pdfcolorstack <stack number> current   
    sets the current stack value without changing the
    stack. This is useful for stacks that are
    initialized without keyword "page".
    Thus the page start setting can be set manually.
  \pdfcolorstack <stack number> set {<new color>}   
    The current value is set to <new color>.

  Example (changed pdftex.def):

  \chardef\GPT at colorstack=0 %
  \def\set at color{%
    \pdfcolorstack\GPT at colorstack push{\current at color}%
    \aftergroup\reset at color
  }%
  \def\reset at color{%
    \pdfcolorstack\GPT at colorstack pop\relax
  }%

  If someone wants to add color stack support for
  footnotes, the principle would be:
    \edef\stackfootnote{\pdfcolorstackinit direct{0 g 0
G}}%
    % Then at begin of the footnote area on the page:
    \pdfcolorstack\stackfoonote current\relax
    % During footnote processing the footnote stack is
used:
    \let\GPT at colorstack\stackfoonote

Description for matrix transformations:

  Currently matrix changes are done and hidden inside
  \pdfliteral nodes; pdfTeX doesn't parse its contents
  and does not know the new settings of the transform
  matrix. Thus the patch adds new primitives to save
  pdfTeX from parsing \pdfliteral contents and to
  notify pdfTeX about matrix changes to use them in
  calculating link and anchor positions.

  \pdfsetmatrix{<a> <b> <c> <d>}
    is the equivalent to
    \pdfliteral{<a> <b> <c> <d> 0 0 cm}
  \pdfsave
    is the equivalent to \pdfliteral{q}
  \pdfrestore
    is the equivalent to \pdfliteral{Q}

  Some remarks:
  * TeX already supports translations, thus the matrix
    is limited to four values for scaling and rotating.
  * There are some restrictions about \pdfsave and
    \pdfrestore:
    * They must be properly nested.
    * A pair must start and end in the same group at
      the same level.
    * A pair must start and end at the same position.
    Happily these restrictions are satisfied by the
    graphics package.

  Example (changed pdftex.def):
    \def\Grot at start{%
      \pdfsave
      \pdfsetmatrix{%
        \Grot at cos\space\Grot at sin\space
        \if-\Grot at sin\else-\Grot at sin\fi\space\Grot at cos
      }%
      \wd\z@\z@
    }%
    \def\Grot at end{\pdfrestore}
    \def\Gscale at start{%
      \pdfsave
      \pdfsetmatrix{%
        \Gscale at x\space0 0 \Gscale at y
      }%
    }%  

Have fun
  Heiko <oberdiek at uni-freiburg.de>


----------------------------------------------------------------------

>Comment By: Martin Schr?der (oneiros)
Date: 2006-10-17 15:08

Message:
Logged In: YES 
user_id=421

I still get the warning in utils.c :-{

Can you update the pdfTeX manual on this?

----------------------------------------------------------------------

Comment By: Heiko Oberdiek (oberdiek)
Date: 2006-09-12 16:38

Message:
Logged In: YES 
user_id=1276

| Two questions come to mind:
| - how does this patch interact with existing documents,

The design principle is that the patch does not have an
effect if the new primitives are not used (modulo bugs).

| i.e.
| what must be changed when using this patch? Obviously the
| use of \pdfliteral must be checked. Anything else?

LaTeX's color/graphics: pdftex.def that support the
new primitives.

| - does this collide with pdftex's use of the cm? The only
| use of the transformation matrix by pdftex I could find
| concerns magnifications, so that's most likely not a 
| problem.

I had played a little with magnification, but not too
intensively.

| Btw: gcc with -Wall -std=c99 gives this warning:
| ../../../../src/texk/web2c/pdftexdir/utils.c: In function
| ?newcolorstack?:
| ../../../../src/texk/web2c/pdftexdir/utils.c:1366: 
| warning:
| operation on ?colstacks? may be undefined

Assignments to colstacks are controlled by colstack_size,
thus the warnung can be gnored. To avoid the warning
replace
  static colstack_type *colstacks;
by
  static colstack_type *colstacks = NULL;

Yours sincerely
  Heiko <oberdiek at uni-freiburg.de>

----------------------------------------------------------------------

Comment By: Martin Schr?der (oneiros)
Date: 2006-09-12 16:06

Message:
Logged In: YES 
user_id=421

Heiko,
thank you very much for your patch. 

Two questions come to mind:
- how does this patch interact with existing documents, i.e.
what must be changed when using this patch? Obviously the
use of \pdfliteral must be checked. Anything else?
- does this collide with pdftex's use of the cm? The only
use of the transformation matrix by pdftex I could find
concerns magnifications, so that's most likely not a problem.

Btw: gcc with -Wall -std=c99 gives this warning:
../../../../src/texk/web2c/pdftexdir/utils.c: In function
?newcolorstack?:
../../../../src/texk/web2c/pdftexdir/utils.c:1366: warning:
operation on ?colstacks? may be undefined

----------------------------------------------------------------------

You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=495&aid=603&group_id=106

From P.Taylor at Rhul.Ac.Uk  Tue Oct 17 18:18:23 2006
From: P.Taylor at Rhul.Ac.Uk (Philip TAYLOR)
Date: Tue, 17 Oct 2006 17:18:23 +0100
Subject: [NTG-pdftex] why is TeX breaking the line? (updated)
In-Reply-To: <45348B19.1070205@elvenkind.com>
References: <Pine.GSO.4.63.0610152231420.16738@kempelen.iit.bme.hu>	<45348A1B.3020201@elvenkind.com>
	<45348B19.1070205@elvenkind.com>
Message-ID: <4535024F.8080401@Rhul.Ac.Uk>

An early Pascal reference implementation of TeX (V3.1415b)
demonstrates exactly the same behaviour, and the behaviour
can be demonstrated using a simpler example :


> \vbox
> \bgroup \hsize=100 pt
> \noindent ............................ . {C} z z z\par
> \noindent ............................ . \discretionary {AAAAAA}{BBBBBBBBB}{C} z z z\par
> \egroup
> \end

I am as much at a loss as Taco to explain this.

Philip Taylor
--------
Taco Hoekwater wrote:
> 
> Oops, sorry, I sent the wrong file.
> 
> Taco
> 
> 
> ------------------------------------------------------------------------
> 
> %\hyphenpenalty=-1000
> %\exhyphenpenalty=-1000
> 
> \vbox{\hsize=100pt
> \hrule width\hsize
> \noindent....................................\par
> \noindent............................... \discretionary{A}{B}{CCCCCC}\par
> \noindent............................ . \discretionary{AAAAAA}{BBBBBBBBB}{C} z z z\par
> \noindent............................ . C z z z\par
> }
> \end

From oberdiek at uni-freiburg.de  Tue Oct 17 22:44:18 2006
From: oberdiek at uni-freiburg.de (Heiko Oberdiek)
Date: Tue, 17 Oct 2006 22:44:18 +0200
Subject: [NTG-pdftex] why is TeX breaking the line? (updated)
In-Reply-To: <4535024F.8080401@Rhul.Ac.Uk>
References: <Pine.GSO.4.63.0610152231420.16738@kempelen.iit.bme.hu>
	<45348A1B.3020201@elvenkind.com>
	<45348B19.1070205@elvenkind.com> <4535024F.8080401@Rhul.Ac.Uk>
Message-ID: <20061017204417.GA30391@irwin.vpn.uni-freiburg.de>

On Tue, Oct 17, 2006 at 05:18:23PM +0100, Philip TAYLOR wrote:

> > \vbox
> > \bgroup \hsize=100 pt
> > \noindent ............................ . {C} z z z\par
> > \noindent ............................ . \discretionary {AAAAAA}{BBBBBBBBB}{C} z z z\par
> > \egroup
> > \end
> 
> I am as much at a loss as Taco to explain this.

At least a smaller example (without different
spacefactors -- \discretionary does not change the spacefactor):

\tracingparagraphs=1
\nopagenumbers
\parindent=0pt
\setbox0=\hbox{C}
\hsize=\wd0

C\par

\discretionary{AA}{BB}{C}\par

\bye

Or

\tracingparagraphs=1
\nopagenumbers
\parindent=0pt
\setbox0=\hbox{ff}
\hsize=\wd0

ff\par

\discretionary{f-}{f}{ff}\par

\bye

Also \pretolerance=10000 doesn't help.

Yours sincerely
  Heiko <oberdiek at uni-freiburg.de>
-- 

From hartmut_henkel at gmx.de  Tue Oct 17 23:02:44 2006
From: hartmut_henkel at gmx.de (Hartmut Henkel)
Date: Tue, 17 Oct 2006 23:02:44 +0200 (CEST)
Subject: [NTG-pdftex] why is TeX breaking the line? (updated)
In-Reply-To: <20061017204417.GA30391@irwin.vpn.uni-freiburg.de>
References: <Pine.GSO.4.63.0610152231420.16738@kempelen.iit.bme.hu>
	<45348A1B.3020201@elvenkind.com> <45348B19.1070205@elvenkind.com>
	<4535024F.8080401@Rhul.Ac.Uk>
	<20061017204417.GA30391@irwin.vpn.uni-freiburg.de>
Message-ID: <Pine.LNX.4.64.0610172301300.18420@hahepc1.hahe>

On Tue, 17 Oct 2006, Heiko Oberdiek wrote:

> At least a smaller example (without different
> spacefactors -- \discretionary does not change the spacefactor):
>
> \tracingparagraphs=1
> \nopagenumbers
> \parindent=0pt
> \setbox0=\hbox{C}
> \hsize=\wd0
>
> C\par
>
> \discretionary{AA}{BB}{C}\par
>
> \bye

yet another one (but not any idea):

\tracingparagraphs=1
\nopagenumbers
\parindent=0pt
\setbox0=\hbox{C}
\hsize=\wd0

C\par

\discretionary{I}{W}{C}\par

\discretionary{W}{I}{C}\par

\bye

Regards, Hartmut

From gene at gerd-neugebauer.de  Wed Oct 18 21:48:14 2006
From: gene at gerd-neugebauer.de (Gerd Neugebauer)
Date: Wed, 18 Oct 2006 21:48:14 +0200
Subject: [NTG-pdftex] why is TeX breaking the line? (updated)
In-Reply-To: <20061017204417.GA30391@irwin.vpn.uni-freiburg.de>
References: <Pine.GSO.4.63.0610152231420.16738@kempelen.iit.bme.hu>	<45348A1B.3020201@elvenkind.com>	<45348B19.1070205@elvenkind.com>
	<4535024F.8080401@Rhul.Ac.Uk>
	<20061017204417.GA30391@irwin.vpn.uni-freiburg.de>
Message-ID: <453684FE.8080907@gerd-neugebauer.de>

Heiko Oberdiek wrote:

> At least a smaller example (without different
> spacefactors -- \discretionary does not change the spacefactor):
> 
> \tracingparagraphs=1
> \nopagenumbers
> \parindent=0pt
> \setbox0=\hbox{C}
> \hsize=\wd0
> 
> C\par
> 
> \discretionary{AA}{BB}{C}\par
> 
> \bye

Hi,

I have made a variant of the example:

\parindent=0pt
\setbox0=\hbox{C}
\hsize=\wd0%\advance\hsize7.8pt

C\par

\discretionary{AA}{BBB}{C}\par

\bye

TeX reports an overfull box of 7.7778pt for the AAs. If I advance the
hsize by something less than this then the effect remains. If I advance
the hsize by more (as included in comments above) the effect disappears
and C is typeset.

I concluded that in the handling of discretionaries the comparison is
made against a width containing the width of pre_break instead of the
replacement text. This seems to be a bug in TeX.

I have traced it down to section 869. There the sum of the width of the
nodes of pre_break is added to act_width. If I replace the first loop
with a construction similar to the second loop the problem seems to
disappear.

I do not claim that I have completely understood what's going on. I just
wanted to share my insights.

Ciao
	Gerd





From noreply at sarovar.org  Fri Oct 20 13:57:23 2006
From: noreply at sarovar.org (noreply at sarovar.org)
Date: Fri, 20 Oct 2006 17:27:23 +0530
Subject: [NTG-pdftex] [ pdftex-Feature Requests-662 ] avoid creating "fixed
	destination"
Message-ID: <E1Gat07-0002eB-00@sarovar.org>

Feature Requests item #662, was opened at 2006-10-20 11:57
You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=496&aid=662&group_id=106

Category: None
Group: None
Status: Open
Resolution: None
Priority: 5
Submitted By: Ulrich Diez (ulrichdiez)
Assigned to: Nobody (None)
Summary: avoid creating "fixed destination"

Initial Comment:
When referencing a non-existing destination, you get 
this warning:

! pdfTeX warning (dest): name{<something>} has been 
referenced but
  does not exist, replaced by a fixed one

I always like the warning about non-existing 
destinations, but sometimes  I'd prefer pdfTeX not to 
take action besides issuing a warning-message/I'd 
prefer pdfTeX not to create a "fixed" destination. 
E.g., when creating several separate pdf-files with 
pdfTeX (for later merging them together by means of 
external software like "pdftk" or "pdfcat") whereby 
the named destination is not known/available when 
compiling file A but is available/provided in file B 
so that in the result from merging these files, 
everything will be fine.

Does it make sense/is it possible to implement some 
mechanism for forking if creation of fixed destination 
shall be avoided or not?
(Either a new token/primitive similar to \globaldefs 
which can be used within TeX source or some command-
line-option which can be specified at the command-line 
when running pdfTeX ?)

Sincerely

Ulrich

----------------------------------------------------------------------

You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=496&aid=662&group_id=106

From noreply at sarovar.org  Fri Oct 20 16:59:08 2006
From: noreply at sarovar.org (noreply at sarovar.org)
Date: Fri, 20 Oct 2006 20:29:08 +0530
Subject: [NTG-pdftex] [ pdftex-Feature Requests-662 ] avoid creating "fixed
	destination"
Message-ID: <E1Gavq0-0008DB-00@sarovar.org>

Feature Requests item #662, was opened at 2006-10-20 13:57
You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=496&aid=662&group_id=106

Category: None
>Group: v1.50
Status: Open
Resolution: None
Priority: 5
Submitted By: Ulrich Diez (ulrichdiez)
>Assigned to: The Thanh Han (hanthethanh)
>Summary: avoid creating "fixed destination"

Initial Comment:
When referencing a non-existing destination, you get 
this warning:

! pdfTeX warning (dest): name{<something>} has been 
referenced but
  does not exist, replaced by a fixed one

I always like the warning about non-existing 
destinations, but sometimes  I'd prefer pdfTeX not to 
take action besides issuing a warning-message/I'd 
prefer pdfTeX not to create a "fixed" destination. 
E.g., when creating several separate pdf-files with 
pdfTeX (for later merging them together by means of 
external software like "pdftk" or "pdfcat") whereby 
the named destination is not known/available when 
compiling file A but is available/provided in file B 
so that in the result from merging these files, 
everything will be fine.

Does it make sense/is it possible to implement some 
mechanism for forking if creation of fixed destination 
shall be avoided or not?
(Either a new token/primitive similar to \globaldefs 
which can be used within TeX source or some command-
line-option which can be specified at the command-line 
when running pdfTeX ?)

Sincerely

Ulrich

----------------------------------------------------------------------

You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=496&aid=662&group_id=106

From noreply at sarovar.org  Sat Oct 21 14:29:31 2006
From: noreply at sarovar.org (noreply at sarovar.org)
Date: Sat, 21 Oct 2006 17:59:31 +0530
Subject: [NTG-pdftex] [ pdftex-Patches-663 ] fix for bugs #481--483
Message-ID: <E1GbFyl-0002qX-00@sarovar.org>

Patches item #663, was opened at 2006-10-21 12:29
You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=495&aid=663&group_id=106

Category: None
Group: None
Status: Open
Resolution: None
Priority: 5
Submitted By: The Thanh Han (hanthethanh)
Assigned to: Nobody (None)
Summary: fix for bugs #481--483

Initial Comment:
This is an attempt to fix bug #481--483

- This patch applies to the pristine
pdftex-1.40.0-beta-20061017 sources
  only; if you have applied another patch(es) to the
sources, please
  discard them and start from the fresh ones.

- How to apply:

,--------
| cd /path/to/pdftex-1.40.0-beta-20061017/src
| cat /path/to/the/patch | patch -p1
| ./configure
| cd texk/web2c
| make pdftex
`--------


----------------------------------------------------------------------

You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=495&aid=663&group_id=106

From noreply at sarovar.org  Sat Oct 21 15:52:53 2006
From: noreply at sarovar.org (noreply at sarovar.org)
Date: Sat, 21 Oct 2006 19:22:53 +0530
Subject: [NTG-pdftex] [ pdftex-Bugs-483 ] extra kerning inhibits extra
	spacing
Message-ID: <E1GbHHR-00061p-00@sarovar.org>

Bugs item #483, was opened at 2006-02-13 19:04
You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=483&group_id=106

Category: hz
Group: v1.40.0
>Status: Closed
>Resolution: Fixed
Priority: 5
Submitted By: Robert (schlcht)
Assigned to: The Thanh Han (hanthethanh)
Summary: extra kerning inhibits extra spacing

Initial Comment:
The new extension don't work together:

\pdfadjustinterwordglue=1
\knbscode\font`\e=1000

The test

\pdfappendkern=1
\knaccode\font`\e=1

The test
\bye


----------------------------------------------------------------------

>Comment By: Martin Schr?der (oneiros)
Date: 2006-10-21 15:52

Message:
Logged In: YES 
user_id=421

Fixed; see patch 663.

----------------------------------------------------------------------

You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=483&group_id=106

From noreply at sarovar.org  Sat Oct 21 15:52:28 2006
From: noreply at sarovar.org (noreply at sarovar.org)
Date: Sat, 21 Oct 2006 19:22:28 +0530
Subject: [NTG-pdftex] [ pdftex-Bugs-482 ] extra kerning does not work with
	ligatures
Message-ID: <E1GbHH2-00061a-00@sarovar.org>

Bugs item #482, was opened at 2006-02-13 19:04
You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=482&group_id=106

Category: hz
Group: v1.40.0
>Status: Closed
>Resolution: Fixed
Priority: 5
Submitted By: Robert (schlcht)
Assigned to: The Thanh Han (hanthethanh)
Summary: extra kerning does not work with ligatures

Initial Comment:
Appending or prepending kerns with the new primitives
does not work with ligatures. It works, though, when
the ligatures are accessed via \char:

\pdfprependkern=1
\pdfappendkern=1
\def\setkn#1{%
  \knbccode\font #1 = 200\relax
  \knaccode\font #1 = 200\relax
}
\setkn{`a}
\setkn{11} % ff
\setkn{12} % fi
\setkn{`z}

afffiz\par
a\char11 \char12 z
\bye


----------------------------------------------------------------------

>Comment By: Martin Schr?der (oneiros)
Date: 2006-10-21 15:52

Message:
Logged In: YES 
user_id=421

Fixed; see patch 663.

----------------------------------------------------------------------

You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=482&group_id=106

From noreply at sarovar.org  Sat Oct 21 15:51:59 2006
From: noreply at sarovar.org (noreply at sarovar.org)
Date: Sat, 21 Oct 2006 19:21:59 +0530
Subject: [NTG-pdftex] [ pdftex-Bugs-481 ] "This can't happen (flushing)"
	with extra kerning+expansion+ligatures
Message-ID: <E1GbHGZ-00061K-00@sarovar.org>

Bugs item #481, was opened at 2006-02-13 19:04
You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=481&group_id=106

Category: hz
Group: v1.40.0
>Status: Closed
>Resolution: Fixed
Priority: 5
Submitted By: Robert (schlcht)
Assigned to: The Thanh Han (hanthethanh)
>Summary: "This can't happen (flushing)" with extra kerning+expansion+ligatures

Initial Comment:
With the following test file, pdftex will abort with
"This can't happen (flushing)":

\pdfadjustspacing=1
\pdffontexpand\font 20 20 4 autoexpand
\pdfappendkern=1
\knaccode\font`i=100

\hsize10em
foo fii foo foo foo foo
% but this works:
%foo f{}ii foo foo foo foo
\bye


Hartmut's analysis was:

-----------------------------------
FWIW, this happens in function do_subst_font(). But it
starts with
auto_expand_kern(), where the given kern indeed is
appended to the i of
"fi" and also to the 2nd "i". It seems as if at this
time "fi" is not
yet seen as a ligature. Then in do_subst_font() the
"fi" is somehow
already a ligature, and now the kern is part of the
lig_ptr list (which
is wrong). Then font(r) is recursively changed to 51,
the expanded font
number, and so the kern, which should not be in this
list, gets the 51
as its type. But it must be 11 for a kern. Maybe a
change should be that
the kern does not end up in the lig_ptr list, but
should come after the
"fi" ligature. No idea, how.
-----------------------------------


----------------------------------------------------------------------

>Comment By: Martin Schr?der (oneiros)
Date: 2006-10-21 15:51

Message:
Logged In: YES 
user_id=421

Fixed, see patch 663.

----------------------------------------------------------------------

Comment By: Martin Schr?der (oneiros)
Date: 2006-09-01 12:43

Message:
Logged In: YES 
user_id=421

Is anybody working on this?

----------------------------------------------------------------------

Comment By: Hartmut Henkel (hhenkel)
Date: 2006-02-13 21:25

Message:
Logged In: YES 
user_id=929

My text above had a typo, sorry. Before you start
searching... it's auto_append_kern(), not auto_expand_kern().

Regards, Hartmut

----------------------------------------------------------------------

You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=481&group_id=106

From noreply at sarovar.org  Sat Oct 21 15:54:26 2006
From: noreply at sarovar.org (noreply at sarovar.org)
Date: Sat, 21 Oct 2006 19:24:26 +0530
Subject: [NTG-pdftex] [ pdftex-Patches-663 ] fix for bugs #481--483
Message-ID: <E1GbHIw-0006bZ-00@sarovar.org>

Patches item #663, was opened at 2006-10-21 14:29
You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=495&aid=663&group_id=106

>Category: hz
>Group: v1.40.0
>Status: Closed
>Resolution: Accepted
Priority: 5
Submitted By: The Thanh Han (hanthethanh)
>Assigned to: Hartmut Henkel (hhenkel)
Summary: fix for bugs #481--483

Initial Comment:
This is an attempt to fix bug #481--483

- This patch applies to the pristine
pdftex-1.40.0-beta-20061017 sources
  only; if you have applied another patch(es) to the
sources, please
  discard them and start from the fresh ones.

- How to apply:

,--------
| cd /path/to/pdftex-1.40.0-beta-20061017/src
| cat /path/to/the/patch | patch -p1
| ./configure
| cd texk/web2c
| make pdftex
`--------


----------------------------------------------------------------------

>Comment By: Martin Schr?der (oneiros)
Date: 2006-10-21 15:54

Message:
Logged In: YES 
user_id=421

Thanks! Any idea for 484? :-)

----------------------------------------------------------------------

You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=495&aid=663&group_id=106

From noreply at sarovar.org  Sat Oct 21 15:57:40 2006
From: noreply at sarovar.org (noreply at sarovar.org)
Date: Sat, 21 Oct 2006 19:27:40 +0530
Subject: [NTG-pdftex] [ pdftex-Bugs-609 ] Pdf "convert" primitives bug
Message-ID: <E1GbHM4-0006vz-00@sarovar.org>

Bugs item #609, was opened at 2006-09-28 18:50
You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=609&group_id=106

Category: Primitives
Group: v1.40.0
>Status: Closed
Resolution: Fixed
Priority: 5
Submitted By: Taco Hoekwater (taco)
Assigned to: Taco Hoekwater (taco)
>Summary: Pdf "convert" primitives bug

Initial Comment:
The problem:

   When tex calls `conv_toks()' to execute `convert'
commands, a string
   may already be being built. A call to scan_toks
(pdf_scan_ext_toks)
   at that moment will incorporate that partial string
to the argument
   of the `convert' primitive, and erase it from the
output.

Example code:

   \message{\pdfmdfivesum{knuth}}
   \input knuth\pdfmdfivesum{}
   \bye

Affected primitives:

   \pdfescapestring
   \pdfescapename
   \pdfescapehex
   \pdfunescapehex
   \pdffilemoddate
   \pdffilesize
   \pdffiledump
   \pdfmdfivesum
   \pdfstrcmp

The needed fix:

   Somewhen before calling scan_pdf_ext_toks, you have
to store the
   partial string as a true tex string, then its
`partialness' has to
   be restored sometime later before leaving conv_toks().




----------------------------------------------------------------------

Comment By: Martin Schr?der (oneiros)
Date: 2006-10-21 15:57

Message:
Logged In: YES 
user_id=421

A patch for this will be included in the next version (1.40).

----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2006-10-04 16:43

Message:
Logged In: YES 
user_id=1608

patch against pdftex.web from 20060928 attached.

----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2006-09-28 18:52

Message:
Logged In: YES 
user_id=1608

sorry, it is a bug, of course 

----------------------------------------------------------------------

You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=609&group_id=106

From noreply at sarovar.org  Sat Oct 21 15:57:28 2006
From: noreply at sarovar.org (noreply at sarovar.org)
Date: Sat, 21 Oct 2006 19:27:28 +0530
Subject: [NTG-pdftex] [ pdftex-Bugs-609 ] Pdf "convert" primitives bug
Message-ID: <E1GbHLs-0006vJ-00@sarovar.org>

Bugs item #609, was opened at 2006-09-28 18:50
You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=609&group_id=106

Category: Primitives
Group: v1.40.0
Status: Open
>Resolution: Fixed
Priority: 5
Submitted By: Taco Hoekwater (taco)
Assigned to: Taco Hoekwater (taco)
>Summary: Pdf "convert" primitives bug

Initial Comment:
The problem:

   When tex calls `conv_toks()' to execute `convert'
commands, a string
   may already be being built. A call to scan_toks
(pdf_scan_ext_toks)
   at that moment will incorporate that partial string
to the argument
   of the `convert' primitive, and erase it from the
output.

Example code:

   \message{\pdfmdfivesum{knuth}}
   \input knuth\pdfmdfivesum{}
   \bye

Affected primitives:

   \pdfescapestring
   \pdfescapename
   \pdfescapehex
   \pdfunescapehex
   \pdffilemoddate
   \pdffilesize
   \pdffiledump
   \pdfmdfivesum
   \pdfstrcmp

The needed fix:

   Somewhen before calling scan_pdf_ext_toks, you have
to store the
   partial string as a true tex string, then its
`partialness' has to
   be restored sometime later before leaving conv_toks().




----------------------------------------------------------------------

Comment By: Martin Schr?der (oneiros)
Date: 2006-10-21 15:57

Message:
Logged In: YES 
user_id=421

A patch for this will be included in the next version (1.40).

----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2006-10-04 16:43

Message:
Logged In: YES 
user_id=1608

patch against pdftex.web from 20060928 attached.

----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2006-09-28 18:52

Message:
Logged In: YES 
user_id=1608

sorry, it is a bug, of course 

----------------------------------------------------------------------

You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=609&group_id=106

From martin at oneiros.de  Sat Oct 21 19:48:00 2006
From: martin at oneiros.de (=?ISO-8859-1?Q?Martin_Schr=F6der?=)
Date: Sat, 21 Oct 2006 19:48:00 +0200
Subject: [NTG-pdftex] pdftex 1.40 and active characters in French
In-Reply-To: <453A5962.9030506@univ-lille1.fr>
References: <453A5962.9030506@univ-lille1.fr>
Message-ID: <68c491a60610211048j30fa48cfw68742878e811fa42@mail.gmail.com>

---------- Forwarded message ----------
From: Daniel Flipo <daniel.flipo at univ-lille1.fr>
Date: 21.10.2006 19:31
Subject: pdftex 1.40 and active characters in French
To: Martin Schr?der <martin at oneiros.de>, Hans Hagen <pragma at wxs.nl>
Cc: Robert Schlicht <w.m.l at gmx.net>


Hi Martin and Hans,

I have heard about new kerning facilities coming with pdftex 1.40 and
started playing with them (through the microtype interface, latest
version 1.37 2006-09-09 with \betatrue).  I would love to get rid of the
four active characters (:;!?) in babel/frenchb.

Unfortunately, after discussing with Robert (in copy), it appears that
these new kerning facilities do not quite fulfil what would be needed
for French.  I'd like to make a summary of the required specifications
in case you can think of a possible solution for future developments of
pdftex.

1) People who type correctly in French, are used to type a (normal)
space before ';:!?'. pdftex 1.40 can add a kern before them, but cannot
do an '\unskip' to remove the typed space.  It is hopeless to try to
convince French writers to change their habits and refrain from entering
a space before ';:!?' ;-)

frenchb currently handles the four (active) punctuation chars ;:!? in
two different ways:

-- with option \NoAutoSpaceBeforeFDP, frenchb _replaces_ the normal
space with an unbreakable one of the correct width, _if and only if_ a
space (normal or '~') is present before ';:!?'.  If no space is typed,
frenchb does nothing and lets the punctuation mark stick to the
preceding word.  This avoids to get a spurious space in URLs
(http://...), Windows paths (C:/path), etc.

-- with option \AutoSpaceBeforeFDP (the default), you can type
carelessly "bonjour!", "bonjour !" or even "bonjour~!", frenchb will
always output it correctly, but then you cannot complain if you get a
spurious space in URLs...

2) Another (minor) issue occurs with ':'.  Again, there are currently
two different options in frenchb:

-- Most people agree with our ? Imprimerie nationale ? that ':' should
be surrounded by two spaces of the same length, the first one being
unbreakable, the other three (;!?) getting a thin space (kern in TeX)
before and a normal one (glue) after.  That's what frenchb does by default.

-- Some typographers argue that ':' should be treated like the other
three, so an option is provided in frenchb to satisfy them.

AFAIK pdftex 1.40 can add a kern before a character but not a glue, so
the spaces around ':' might look unsymmetrical in the first case if TeX
stretches the second one...

3) Guillemets are less problematic because they are currently entered
with commands (\og and \og), not as characters. Spaces after the opening
'?' and before the closing '?' should be unbreakable but stretchable
(currently .8\fontdimen2 plus .3\fontdimen3 minus .8\fontdimen4).
Moreover, a kern after '?' breaks hyphenation of the following word as
Robert already already pointed out on the pdftex bug list.

Feel free to forward this mail to other pdftex developers if it can be
useful, I would have wished to send it to Than also but I could not find
his current mail address.

Best wishes and thanks for your attention,
--
Daniel Flipo

From hanthethanh at gmail.com  Sun Oct 22 21:23:11 2006
From: hanthethanh at gmail.com (Thanh Han The)
Date: Sun, 22 Oct 2006 21:23:11 +0200
Subject: [NTG-pdftex] vim syntax for web files?
Message-ID: <74f506dc0610221223w7f9f5219l857824c254025aaa@mail.gmail.com>

Hi,

does anyone here use vim for editing web (knuthian web)
files? Sometimes I got wrong highlighting with tex.web or
pdftex.web, but I am not good enough to correct the vim
syntax file, so I turn off syntax highlighting for *.web
files. The web syntax file coming with vim is made for
CWEB files but it is used for web too. If here is some vim
guru who can fix that, it would be great.

Thanh

From noreply at sarovar.org  Sun Oct 22 23:38:41 2006
From: noreply at sarovar.org (noreply at sarovar.org)
Date: Mon, 23 Oct 2006 03:08:41 +0530
Subject: [NTG-pdftex] [ pdftex-Patches-663 ] fix for bugs #481--483
Message-ID: <E1Gbl1l-00067M-00@sarovar.org>

Patches item #663, was opened at 2006-10-21 12:29
You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=495&aid=663&group_id=106

Category: hz
Group: v1.40.0
Status: Closed
Resolution: Accepted
Priority: 5
Submitted By: The Thanh Han (hanthethanh)
Assigned to: Hartmut Henkel (hhenkel)
Summary: fix for bugs #481--483

Initial Comment:
This is an attempt to fix bug #481--483

- This patch applies to the pristine
pdftex-1.40.0-beta-20061017 sources
  only; if you have applied another patch(es) to the
sources, please
  discard them and start from the fresh ones.

- How to apply:

,--------
| cd /path/to/pdftex-1.40.0-beta-20061017/src
| cat /path/to/the/patch | patch -p1
| ./configure
| cd texk/web2c
| make pdftex
`--------


----------------------------------------------------------------------

>Comment By: The Thanh Han (hanthethanh)
Date: 2006-10-22 21:38

Message:
Logged In: YES 
user_id=710

This is an update of the previous patch, which attemps to
solve problem #484 as well (I would not call #484 a bug but
a limitation -- a bug would mean that the behaviour is
inconsistent with the specification).

This patch is *very different* from the previous one, since
now kerns inserted by the new primitives are treated as
implicit kerns (they were treated as explicit kerns before
this patch). This can lead to a very different behaviour, so
be prepared :)



----------------------------------------------------------------------

Comment By: Martin Schr?der (oneiros)
Date: 2006-10-21 13:54

Message:
Logged In: YES 
user_id=421

Thanks! Any idea for 484? :-)

----------------------------------------------------------------------

You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=495&aid=663&group_id=106

From hanthethanh at gmail.com  Mon Oct 23 10:30:08 2006
From: hanthethanh at gmail.com (Thanh Han The)
Date: Mon, 23 Oct 2006 10:30:08 +0200
Subject: [NTG-pdftex] pdftex 1.40 and active characters in French
Message-ID: <74f506dc0610230130md6c954fqdfff9e7d9865d532@mail.gmail.com>

Hi,

it seems that pdftex cannot do anything to improve the below
issues. Sorry.

Regards,
Thanh

On Sat, Oct 21, 2006 at 07:48:00PM +0200, Martin Schroeder wrote:
> ---------- Forwarded message ----------
> From: Daniel Flipo <daniel.flipo at univ-lille1.fr>
> Date: 21.10.2006 19:31
> Subject: pdftex 1.40 and active characters in French
> To: Martin Schr?der <martin at oneiros.de>, Hans Hagen <pragma at wxs.nl>
> Cc: Robert Schlicht <w.m.l at gmx.net>
>
>
> Hi Martin and Hans,
>
> I have heard about new kerning facilities coming with pdftex 1.40 and
> started playing with them (through the microtype interface, latest
> version 1.37 2006-09-09 with \betatrue).  I would love to get rid of the
> four active characters (:;!?) in babel/frenchb.
>
> Unfortunately, after discussing with Robert (in copy), it appears that
> these new kerning facilities do not quite fulfil what would be needed
> for French.  I'd like to make a summary of the required specifications
> in case you can think of a possible solution for future developments of
> pdftex.
>
> 1) People who type correctly in French, are used to type a (normal)
> space before ';:!?'. pdftex 1.40 can add a kern before them, but cannot
> do an '\unskip' to remove the typed space.  It is hopeless to try to
> convince French writers to change their habits and refrain from entering
> a space before ';:!?' ;-)
>
> frenchb currently handles the four (active) punctuation chars ;:!? in
> two different ways:
>
> -- with option \NoAutoSpaceBeforeFDP, frenchb _replaces_ the normal
> space with an unbreakable one of the correct width, _if and only if_ a
> space (normal or '~') is present before ';:!?'.  If no space is typed,
> frenchb does nothing and lets the punctuation mark stick to the
> preceding word.  This avoids to get a spurious space in URLs
> (http://...), Windows paths (C:/path), etc.
>
> -- with option \AutoSpaceBeforeFDP (the default), you can type
> carelessly "bonjour!", "bonjour !" or even "bonjour~!", frenchb will
> always output it correctly, but then you cannot complain if you get a
> spurious space in URLs...
>
> 2) Another (minor) issue occurs with ':'.  Again, there are currently
> two different options in frenchb:
>
> -- Most people agree with our ? Imprimerie nationale ? that ':' should
> be surrounded by two spaces of the same length, the first one being
> unbreakable, the other three (;!?) getting a thin space (kern in TeX)
> before and a normal one (glue) after.  That's what frenchb does by default.
>
> -- Some typographers argue that ':' should be treated like the other
> three, so an option is provided in frenchb to satisfy them.
>
> AFAIK pdftex 1.40 can add a kern before a character but not a glue, so
> the spaces around ':' might look unsymmetrical in the first case if TeX
> stretches the second one...
>
> 3) Guillemets are less problematic because they are currently entered
> with commands (\og and \og), not as characters. Spaces after the opening
> '?' and before the closing '?' should be unbreakable but stretchable
> (currently .8\fontdimen2 plus .3\fontdimen3 minus .8\fontdimen4).
> Moreover, a kern after '?' breaks hyphenation of the following word as
> Robert already already pointed out on the pdftex bug list.
>
> Feel free to forward this mail to other pdftex developers if it can be
> useful, I would have wished to send it to Than also but I could not find
> his current mail address.
>
> Best wishes and thanks for your attention,
> --
> Daniel Flipo
> _______________________________________________
> ntg-pdftex mailing list
> ntg-pdftex at ntg.nl
> http://www.ntg.nl/mailman/listinfo/ntg-pdftex

From noreply at sarovar.org  Mon Oct 23 11:00:58 2006
From: noreply at sarovar.org (noreply at sarovar.org)
Date: Mon, 23 Oct 2006 14:30:58 +0530
Subject: [NTG-pdftex] [ pdftex-Bugs-565 ] ttf2afm fails to include
	characters specified with uniXXXX
Message-ID: <E1Gbvg2-0001rW-00@sarovar.org>

Bugs item #565, was opened at 2006-05-29 14:37
You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=565&group_id=106

Category: ttf2afm
Group: v1.30.0
Status: Open
Resolution: None
Priority: 5
Submitted By: Mike Spivey (spivey)
Assigned to: The Thanh Han (hanthethanh)
Summary: ttf2afm fails to include characters specified with uniXXXX

Initial Comment:
If characters are specified in an encoding vector as
uniXXXX (with XXXX a hexadecimal unicode value), then
these characters are not included in the AFM output,
unlike characters that are specified by name.  The same
goes for characters specifed by position.

A suggested patch is attached.

----------------------------------------------------------------------

>Comment By: The Thanh Han (hanthethanh)
Date: 2006-10-23 09:00

Message:
Logged In: YES 
user_id=710

the patch looks good to me. Martin, call you include this in
next release?

----------------------------------------------------------------------

Comment By: Martin Schr?der (oneiros)
Date: 2006-07-25 17:46

Message:
Logged In: YES 
user_id=421

Thanh, ttf2afm is your baby. :-) 
Pleae check.

----------------------------------------------------------------------

You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=565&group_id=106

From noreply at sarovar.org  Mon Oct 23 12:23:57 2006
From: noreply at sarovar.org (noreply at sarovar.org)
Date: Mon, 23 Oct 2006 15:53:57 +0530
Subject: [NTG-pdftex] [ pdftex-Bugs-304 ] Names of expanded fonts not in log
	output
Message-ID: <E1GbwyL-0004BZ-00@sarovar.org>

Bugs item #304, was opened at 2005-03-02 17:25
You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=304&group_id=106

Category: Fonts
Group: v1.21a
Status: Open
Resolution: Accepted
Priority: 5
Submitted By: Robert (schlcht)
Assigned to: Hartmut Henkel (hhenkel)
Summary: Names of expanded fonts not in log output

Initial Comment:
When using font expansion, the log output will not
contain the names of the expanded fonts but the null
character instead (resp. ^^@).

%-------------------------------------
\pdfadjustspacing=2
\pdffontexpand\font 20 20 5 autoexpand
\tracingoutput=1
test

\parfillskip 0pt
test
\bye
%-------------------------------------

Regards,
Robert.


----------------------------------------------------------------------

>Comment By: The Thanh Han (hanthethanh)
Date: 2006-10-23 10:23

Message:
Logged In: YES 
user_id=710

Here is an attempt to fix this problem (reversed patch
attached).

----------------------------------------------------------------------

Comment By: Robert (schlcht)
Date: 2006-09-03 17:30

Message:
Logged In: YES 
user_id=2217

I've attached an example using Kepler MM (tfm+pfb included,
please delete after testing).

MM fonts are probably the only case where one would not want
to use the autoexpand feature.

At first sight, saying "autoexpand" or not doesn't seem to
make a difference, since pdftex will always prefer existing
expanded fonts (pfb) over autoexpanding them, anyway.
However, there are some slight differences in the pdf. This
is probably because the provided tfm file is different from
the metrics that pdf calculates itself in the case of
autoexpand. That is, autoexpand may result in a mismatch
between the provided pfb and the calculated tfm, is that
correct?


----------------------------------------------------------------------

Comment By: Hartmut Henkel (hhenkel)
Date: 2006-09-01 19:02

Message:
Logged In: YES 
user_id=929

currently i even can't get a test file do expansion at all
without "autoexpand". E. g. Robert's example above, without
"autoexpand", doesn't use expanded fonts. Maybe that's the
reason for the missing expand parameter in the log? Can
anybody provide a test file for this case?

Regards, Hartmut

----------------------------------------------------------------------

Comment By: Martin Schr?der (oneiros)
Date: 2006-09-01 10:47

Message:
Logged In: YES 
user_id=421

Is this really a problem, i.e. is there a reason _not_ to
use the autoexpand feature in new documents?

Hartmut, did you look into this bug?

----------------------------------------------------------------------

Comment By: Robert (schlcht)
Date: 2005-10-15 22:24

Message:
Logged In: YES 
user_id=2217

If the font is not autoexpand'ed, its name will still not be
written to the log file.

(pdftex 1.30.3; same test file, without "autoexpand")

Regards,
Robert.

----------------------------------------------------------------------

Comment By: Martin Schr?der (oneiros)
Date: 2005-05-12 15:05

Message:
Logged In: YES 
user_id=421

This has been fixed in 1.30.0

----------------------------------------------------------------------

Comment By: Hartmut Henkel (hhenkel)
Date: 2005-03-30 20:16

Message:
Logged In: YES 
user_id=929

This patch is based of Thanh's change file showfont.ch,
which he gave me during EuroTeX2005 (it's also included,
renamed here to showfont-thanh.ch). Use showfont.ch for the
patch.

There is now a new integer variable \pdftracingfonts. It is
zero by default, then we get a log like this (see
robert050302.log):

...\tenrm t

...\tenrm (+20) e

Without font expansion, this default should be compatible
with TeX's original log output.

If \pdftracingfonts is set to 1 (or greater), we get a more
verbose log (see tst-304.log):

...\xivtt (cmtt10 at 14.0pt) t

.\xivtt (cmtt10+20 at 14.0pt) e

Seems to work with change file showfont.ch coming directly
after after hz.ch.

Patch only roughly tested with pdfetex, likely to give
problems with pdfxtex, as the variable numbering might
differ. Log format to be agreed upon...

Regards, Hartmut


----------------------------------------------------------------------

You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=304&group_id=106

From noreply at sarovar.org  Mon Oct 23 12:37:07 2006
From: noreply at sarovar.org (noreply at sarovar.org)
Date: Mon, 23 Oct 2006 16:07:07 +0530
Subject: [NTG-pdftex] [ pdftex-Bugs-480 ] pdftex offset incorrect with
	\magnification. Patch included.
Message-ID: <E1GbxB5-0004Vc-00@sarovar.org>

Bugs item #480, was opened at 2006-02-12 17:12
You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=480&group_id=106

Category: None
Group: None
Status: Open
Resolution: None
Priority: 5
Submitted By: Ian Hutchinson (ihutch)
Assigned to: Nobody (None)
Summary: pdftex offset incorrect with \magnification. Patch included.

Initial Comment:
 Any plain tex file that uses
\magnification gives incorrect text placement in pdf.
This bug is present
in the latest pdftex version 1.21a. It apparently was
caused by the
introduction of the new variables \pdfvoffset and
\pdfhoffset. This bug
was not present in older pdftex, e.g. version
3.14159-1.10b, which was
part of tetex-2...

A simple illustration of the problem is with the
trivial file:

\magnification \magstep3
%The following parindent and offset changes are not the
cause of errors.
%They are merely to illustrate them clearly by writing
at top left.
%Anything other than \magstep0 gives a placement error
with pdftex 1.21a.
\parindent 0pt
\hoffset -1 truein
\voffset -1 truein
The top.
\end

With tex and xdvi, the words "The top." are placed at
the immediate top
left. With pdftex 1.21a and xpdf (or acroread) they are
not. With earlier
pdftex 1.10b (e.g.) they are.

I had an extensive discussion on comp.text.tex with
Heiko Oberdiek, most
of which is at
http://www.codecomments.com/Tex/message784423.html

The gist of it is that backward compatibility with
plain tex files is very
important. As far as possible, it should be preserved
transparently.
Authors should not be required to hack their files in
order for them to
render the same in pdf as in dvi. Moreover there is a
simple way to
provide this compatibility.

A reasonable way to fix the bug is to change pdftex.ini
and hence
pdftex.fmt. (The corresponding pdfetex files ought also
to be fixed.)

A proposed patched pdftex.ini file is attached. It
consists simply of

% Thomas Esser, 1998, 2004. public domain.
\ifx\pdfoutput\undefined
\else
  \ifx\pdfoutput\relax
  \else
    \input pdftexconfig
    \pdfoutput=1
  \fi
\fi

\input plain

\ifx\pdfoutput\undefined
\else
  \ifx\pdfoutput\relax
  \else
\catcode`@=11
\def\m at g{%
\mag\count@
\hsize6.5truein\vsize8.9truein\dimen\footins8truein
%These commands fix the pdf sizes to be in true units.
\mag at fix\pdfhorigin \mag at fix\pdfvorigin
\mag at fix\pdfpagewidth \mag at fix\pdfpageheight
}
\def\mag at fix#1{%
 #1=\expandafter\convert at truept\the#1\relax
}
\begingroup
\catcode`P=12
\catcode`T=12
\lowercase{%
\endgroup
\def\convert at truept#1PT{%
#1truept%
}%
}%
\catcode`@=12
  \fi
\fi

\dump
\endinput

I don't know who takes responsibility for pdftex.ini.
But clearly this
ought to be fixed for all distributions. I care most
about tetex, because
it is what I use. Thanks,

        Ian Hutchinson


----------------------------------------------------------------------

>Comment By: The Thanh Han (hanthethanh)
Date: 2006-10-23 10:37

Message:
Logged In: YES 
user_id=710

I propose that if someone changes magnification then he/she
is suppposed to say

\pdfhorigin=1in
\pdfvorigin=1in

or something similar.

An undocumented trick is that if \pdfhorigin or \pdfvorigin
is not set (or set to 0) when the first page is shipped out,
then they will get 1in as the default value. To get zero
origin(s), use 1sp instead of 0.


----------------------------------------------------------------------

You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=480&group_id=106

From noreply at sarovar.org  Mon Oct 23 12:51:30 2006
From: noreply at sarovar.org (noreply at sarovar.org)
Date: Mon, 23 Oct 2006 16:21:30 +0530
Subject: [NTG-pdftex] [ pdftex-Bugs-565 ] ttf2afm fails to include
	characters specified with uniXXXX
Message-ID: <E1GbxP0-0001Y5-00@sarovar.org>

Bugs item #565, was opened at 2006-05-29 16:37
You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=565&group_id=106

Category: ttf2afm
Group: v1.30.0
Status: Open
>Resolution: Fixed
Priority: 5
Submitted By: Mike Spivey (spivey)
Assigned to: The Thanh Han (hanthethanh)
Summary: ttf2afm fails to include characters specified with uniXXXX

Initial Comment:
If characters are specified in an encoding vector as
uniXXXX (with XXXX a hexadecimal unicode value), then
these characters are not included in the AFM output,
unlike characters that are specified by name.  The same
goes for characters specifed by position.

A suggested patch is attached.

----------------------------------------------------------------------

Comment By: Martin Schr?der (oneiros)
Date: 2006-10-23 12:51

Message:
Logged In: YES 
user_id=421

A patch for this will be included in the next version (1.40).

----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2006-10-23 11:00

Message:
Logged In: YES 
user_id=710

the patch looks good to me. Martin, call you include this in
next release?

----------------------------------------------------------------------

Comment By: Martin Schr?der (oneiros)
Date: 2006-07-25 19:46

Message:
Logged In: YES 
user_id=421

Thanh, ttf2afm is your baby. :-) 
Pleae check.

----------------------------------------------------------------------

You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=565&group_id=106

From pragma at wxs.nl  Mon Oct 23 14:33:49 2006
From: pragma at wxs.nl (Hans Hagen)
Date: Mon, 23 Oct 2006 14:33:49 +0200
Subject: [NTG-pdftex] pdftex 1.40 and active characters in French
In-Reply-To: <74f506dc0610230130md6c954fqdfff9e7d9865d532@mail.gmail.com>
References: <74f506dc0610230130md6c954fqdfff9e7d9865d532@mail.gmail.com>
Message-ID: <453CB6AD.7080200@wxs.nl>

Thanh Han The wrote:
> Hi,
>
> it seems that pdftex cannot do anything to improve the below
> issues. Sorry.
>   
indeed. this has to wait till we have input parsing in luatex 

Hans 


-----------------------------------------------------------------
                                          Hans Hagen | PRAGMA ADE
              Ridderstraat 27 | 8061 GH Hasselt | The Netherlands
     tel: 038 477 53 69 | fax: 038 477 53 74 | www.pragma-ade.com
                                             | www.pragma-pod.nl
-----------------------------------------------------------------


From noreply at sarovar.org  Mon Oct 23 19:49:56 2006
From: noreply at sarovar.org (noreply at sarovar.org)
Date: Mon, 23 Oct 2006 23:19:56 +0530
Subject: [NTG-pdftex] [ pdftex-Bugs-480 ] pdftex offset incorrect with
	\magnification. Patch included.
Message-ID: <E1Gc3vw-0006sI-00@sarovar.org>

Bugs item #480, was opened at 2006-02-12 17:12
You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=480&group_id=106

Category: None
Group: None
Status: Open
Resolution: None
Priority: 5
Submitted By: Ian Hutchinson (ihutch)
Assigned to: Nobody (None)
Summary: pdftex offset incorrect with \magnification. Patch included.

Initial Comment:
 Any plain tex file that uses
\magnification gives incorrect text placement in pdf.
This bug is present
in the latest pdftex version 1.21a. It apparently was
caused by the
introduction of the new variables \pdfvoffset and
\pdfhoffset. This bug
was not present in older pdftex, e.g. version
3.14159-1.10b, which was
part of tetex-2...

A simple illustration of the problem is with the
trivial file:

\magnification \magstep3
%The following parindent and offset changes are not the
cause of errors.
%They are merely to illustrate them clearly by writing
at top left.
%Anything other than \magstep0 gives a placement error
with pdftex 1.21a.
\parindent 0pt
\hoffset -1 truein
\voffset -1 truein
The top.
\end

With tex and xdvi, the words "The top." are placed at
the immediate top
left. With pdftex 1.21a and xpdf (or acroread) they are
not. With earlier
pdftex 1.10b (e.g.) they are.

I had an extensive discussion on comp.text.tex with
Heiko Oberdiek, most
of which is at
http://www.codecomments.com/Tex/message784423.html

The gist of it is that backward compatibility with
plain tex files is very
important. As far as possible, it should be preserved
transparently.
Authors should not be required to hack their files in
order for them to
render the same in pdf as in dvi. Moreover there is a
simple way to
provide this compatibility.

A reasonable way to fix the bug is to change pdftex.ini
and hence
pdftex.fmt. (The corresponding pdfetex files ought also
to be fixed.)

A proposed patched pdftex.ini file is attached. It
consists simply of

% Thomas Esser, 1998, 2004. public domain.
\ifx\pdfoutput\undefined
\else
  \ifx\pdfoutput\relax
  \else
    \input pdftexconfig
    \pdfoutput=1
  \fi
\fi

\input plain

\ifx\pdfoutput\undefined
\else
  \ifx\pdfoutput\relax
  \else
\catcode`@=11
\def\m at g{%
\mag\count@
\hsize6.5truein\vsize8.9truein\dimen\footins8truein
%These commands fix the pdf sizes to be in true units.
\mag at fix\pdfhorigin \mag at fix\pdfvorigin
\mag at fix\pdfpagewidth \mag at fix\pdfpageheight
}
\def\mag at fix#1{%
 #1=\expandafter\convert at truept\the#1\relax
}
\begingroup
\catcode`P=12
\catcode`T=12
\lowercase{%
\endgroup
\def\convert at truept#1PT{%
#1truept%
}%
}%
\catcode`@=12
  \fi
\fi

\dump
\endinput

I don't know who takes responsibility for pdftex.ini.
But clearly this
ought to be fixed for all distributions. I care most
about tetex, because
it is what I use. Thanks,

        Ian Hutchinson


----------------------------------------------------------------------

>Comment By: Ian Hutchinson (ihutch)
Date: 2006-10-23 17:49

Message:
Logged In: YES 
user_id=3410

In response to hanthethanh, let me explain once again that
the point is that TeX ought always to work the same with
both dvi output and pdf output. The latest pdftex breaks
that for all documents, old or new, that use \magnification.
Of course there are many ways the authors can fix those
documents by adding new commands. BUT THEY SHOULD NOT HAVE
TO. TeX's archival integrity is far too valuable for us to
accept it being broken by this incompatibility. I've shown
how it can be transparently fixed. The correction just needs
to be incorporated into the distributions

----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2006-10-23 10:37

Message:
Logged In: YES 
user_id=710

I propose that if someone changes magnification then he/she
is suppposed to say

\pdfhorigin=1in
\pdfvorigin=1in

or something similar.

An undocumented trick is that if \pdfhorigin or \pdfvorigin
is not set (or set to 0) when the first page is shipped out,
then they will get 1in as the default value. To get zero
origin(s), use 1sp instead of 0.


----------------------------------------------------------------------

You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=480&group_id=106

From noreply at sarovar.org  Mon Oct 23 20:21:27 2006
From: noreply at sarovar.org (noreply at sarovar.org)
Date: Mon, 23 Oct 2006 23:51:27 +0530
Subject: [NTG-pdftex] [ pdftex-Bugs-480 ] pdftex offset incorrect with
	\magnification. Patch included.
Message-ID: <E1Gc4QR-0005bG-00@sarovar.org>

Bugs item #480, was opened at 2006-02-12 17:12
You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=480&group_id=106

Category: None
Group: None
Status: Open
Resolution: None
Priority: 5
Submitted By: Ian Hutchinson (ihutch)
Assigned to: Nobody (None)
Summary: pdftex offset incorrect with \magnification. Patch included.

Initial Comment:
 Any plain tex file that uses
\magnification gives incorrect text placement in pdf.
This bug is present
in the latest pdftex version 1.21a. It apparently was
caused by the
introduction of the new variables \pdfvoffset and
\pdfhoffset. This bug
was not present in older pdftex, e.g. version
3.14159-1.10b, which was
part of tetex-2...

A simple illustration of the problem is with the
trivial file:

\magnification \magstep3
%The following parindent and offset changes are not the
cause of errors.
%They are merely to illustrate them clearly by writing
at top left.
%Anything other than \magstep0 gives a placement error
with pdftex 1.21a.
\parindent 0pt
\hoffset -1 truein
\voffset -1 truein
The top.
\end

With tex and xdvi, the words "The top." are placed at
the immediate top
left. With pdftex 1.21a and xpdf (or acroread) they are
not. With earlier
pdftex 1.10b (e.g.) they are.

I had an extensive discussion on comp.text.tex with
Heiko Oberdiek, most
of which is at
http://www.codecomments.com/Tex/message784423.html

The gist of it is that backward compatibility with
plain tex files is very
important. As far as possible, it should be preserved
transparently.
Authors should not be required to hack their files in
order for them to
render the same in pdf as in dvi. Moreover there is a
simple way to
provide this compatibility.

A reasonable way to fix the bug is to change pdftex.ini
and hence
pdftex.fmt. (The corresponding pdfetex files ought also
to be fixed.)

A proposed patched pdftex.ini file is attached. It
consists simply of

% Thomas Esser, 1998, 2004. public domain.
\ifx\pdfoutput\undefined
\else
  \ifx\pdfoutput\relax
  \else
    \input pdftexconfig
    \pdfoutput=1
  \fi
\fi

\input plain

\ifx\pdfoutput\undefined
\else
  \ifx\pdfoutput\relax
  \else
\catcode`@=11
\def\m at g{%
\mag\count@
\hsize6.5truein\vsize8.9truein\dimen\footins8truein
%These commands fix the pdf sizes to be in true units.
\mag at fix\pdfhorigin \mag at fix\pdfvorigin
\mag at fix\pdfpagewidth \mag at fix\pdfpageheight
}
\def\mag at fix#1{%
 #1=\expandafter\convert at truept\the#1\relax
}
\begingroup
\catcode`P=12
\catcode`T=12
\lowercase{%
\endgroup
\def\convert at truept#1PT{%
#1truept%
}%
}%
\catcode`@=12
  \fi
\fi

\dump
\endinput

I don't know who takes responsibility for pdftex.ini.
But clearly this
ought to be fixed for all distributions. I care most
about tetex, because
it is what I use. Thanks,

        Ian Hutchinson


----------------------------------------------------------------------

Comment By: Philip TAYLOR (chaa006)
Date: 2006-10-23 18:21

Message:
Logged In: YES 
user_id=3040

Thanh wrote :

I propose that if someone changes magnification then he/she
is suppposed to say

\pdfhorigin=1in
\pdfvorigin=1in

Surely they should write

\pdfhorigin = 1 true in
\pdfvorigin = 1 true in

should they not ?  I always do,
and it certainly has the intended
effect.

** Phil.


----------------------------------------------------------------------

Comment By: Ian Hutchinson (ihutch)
Date: 2006-10-23 17:49

Message:
Logged In: YES 
user_id=3410

In response to hanthethanh, let me explain once again that
the point is that TeX ought always to work the same with
both dvi output and pdf output. The latest pdftex breaks
that for all documents, old or new, that use \magnification.
Of course there are many ways the authors can fix those
documents by adding new commands. BUT THEY SHOULD NOT HAVE
TO. TeX's archival integrity is far too valuable for us to
accept it being broken by this incompatibility. I've shown
how it can be transparently fixed. The correction just needs
to be incorporated into the distributions

----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2006-10-23 10:37

Message:
Logged In: YES 
user_id=710

I propose that if someone changes magnification then he/she
is suppposed to say

\pdfhorigin=1in
\pdfvorigin=1in

or something similar.

An undocumented trick is that if \pdfhorigin or \pdfvorigin
is not set (or set to 0) when the first page is shipped out,
then they will get 1in as the default value. To get zero
origin(s), use 1sp instead of 0.


----------------------------------------------------------------------

You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=480&group_id=106

From noreply at sarovar.org  Mon Oct 23 20:49:49 2006
From: noreply at sarovar.org (noreply at sarovar.org)
Date: Tue, 24 Oct 2006 00:19:49 +0530
Subject: [NTG-pdftex] [ pdftex-Bugs-480 ] pdftex offset incorrect with
	\magnification. Patch included.
Message-ID: <E1Gc4rt-0003Sm-00@sarovar.org>

Bugs item #480, was opened at 2006-02-12 17:12
You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=480&group_id=106

Category: None
Group: None
Status: Open
Resolution: None
Priority: 5
Submitted By: Ian Hutchinson (ihutch)
Assigned to: Nobody (None)
Summary: pdftex offset incorrect with \magnification. Patch included.

Initial Comment:
 Any plain tex file that uses
\magnification gives incorrect text placement in pdf.
This bug is present
in the latest pdftex version 1.21a. It apparently was
caused by the
introduction of the new variables \pdfvoffset and
\pdfhoffset. This bug
was not present in older pdftex, e.g. version
3.14159-1.10b, which was
part of tetex-2...

A simple illustration of the problem is with the
trivial file:

\magnification \magstep3
%The following parindent and offset changes are not the
cause of errors.
%They are merely to illustrate them clearly by writing
at top left.
%Anything other than \magstep0 gives a placement error
with pdftex 1.21a.
\parindent 0pt
\hoffset -1 truein
\voffset -1 truein
The top.
\end

With tex and xdvi, the words "The top." are placed at
the immediate top
left. With pdftex 1.21a and xpdf (or acroread) they are
not. With earlier
pdftex 1.10b (e.g.) they are.

I had an extensive discussion on comp.text.tex with
Heiko Oberdiek, most
of which is at
http://www.codecomments.com/Tex/message784423.html

The gist of it is that backward compatibility with
plain tex files is very
important. As far as possible, it should be preserved
transparently.
Authors should not be required to hack their files in
order for them to
render the same in pdf as in dvi. Moreover there is a
simple way to
provide this compatibility.

A reasonable way to fix the bug is to change pdftex.ini
and hence
pdftex.fmt. (The corresponding pdfetex files ought also
to be fixed.)

A proposed patched pdftex.ini file is attached. It
consists simply of

% Thomas Esser, 1998, 2004. public domain.
\ifx\pdfoutput\undefined
\else
  \ifx\pdfoutput\relax
  \else
    \input pdftexconfig
    \pdfoutput=1
  \fi
\fi

\input plain

\ifx\pdfoutput\undefined
\else
  \ifx\pdfoutput\relax
  \else
\catcode`@=11
\def\m at g{%
\mag\count@
\hsize6.5truein\vsize8.9truein\dimen\footins8truein
%These commands fix the pdf sizes to be in true units.
\mag at fix\pdfhorigin \mag at fix\pdfvorigin
\mag at fix\pdfpagewidth \mag at fix\pdfpageheight
}
\def\mag at fix#1{%
 #1=\expandafter\convert at truept\the#1\relax
}
\begingroup
\catcode`P=12
\catcode`T=12
\lowercase{%
\endgroup
\def\convert at truept#1PT{%
#1truept%
}%
}%
\catcode`@=12
  \fi
\fi

\dump
\endinput

I don't know who takes responsibility for pdftex.ini.
But clearly this
ought to be fixed for all distributions. I care most
about tetex, because
it is what I use. Thanks,

        Ian Hutchinson


----------------------------------------------------------------------

>Comment By: The Thanh Han (hanthethanh)
Date: 2006-10-23 18:49

Message:
Logged In: YES 
user_id=710

oh yes, thanks Phil for the correction.

In response to Ian Hutchinson: I am the maintainer of
neither pdftex.ini nor pdftex, so I feel that someone else
must make the decision.

----------------------------------------------------------------------

Comment By: Philip TAYLOR (chaa006)
Date: 2006-10-23 18:21

Message:
Logged In: YES 
user_id=3040

Thanh wrote :

I propose that if someone changes magnification then he/she
is suppposed to say

\pdfhorigin=1in
\pdfvorigin=1in

Surely they should write

\pdfhorigin = 1 true in
\pdfvorigin = 1 true in

should they not ?  I always do,
and it certainly has the intended
effect.

** Phil.


----------------------------------------------------------------------

Comment By: Ian Hutchinson (ihutch)
Date: 2006-10-23 17:49

Message:
Logged In: YES 
user_id=3410

In response to hanthethanh, let me explain once again that
the point is that TeX ought always to work the same with
both dvi output and pdf output. The latest pdftex breaks
that for all documents, old or new, that use \magnification.
Of course there are many ways the authors can fix those
documents by adding new commands. BUT THEY SHOULD NOT HAVE
TO. TeX's archival integrity is far too valuable for us to
accept it being broken by this incompatibility. I've shown
how it can be transparently fixed. The correction just needs
to be incorporated into the distributions

----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2006-10-23 10:37

Message:
Logged In: YES 
user_id=710

I propose that if someone changes magnification then he/she
is suppposed to say

\pdfhorigin=1in
\pdfvorigin=1in

or something similar.

An undocumented trick is that if \pdfhorigin or \pdfvorigin
is not set (or set to 0) when the first page is shipped out,
then they will get 1in as the default value. To get zero
origin(s), use 1sp instead of 0.


----------------------------------------------------------------------

You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=480&group_id=106

From javier at digi21.net  Mon Oct 23 21:11:48 2006
From: javier at digi21.net (=?ISO-8859-1?Q?Javier_M=FAgica_de_Rivera?=)
Date: Mon, 23 Oct 2006 21:11:48 +0200
Subject: [NTG-pdftex] Adding a \cscode
Message-ID: <453D13F4.7050207@digi21.net>

This is a copy of a message I sent to the Latex3 list some time before and I got no answer (something not rare in that list). So I post it here, where it also belongs.

There have been in the past many discussions about how to create a really
multilingual program. One of the points was to allow typeseting control sequences (cs) in
Russian (say), but we cannot simply make the \catcode equal to 11
because then the character would be transparently passed to the dvi
(ie., the font), which only works if input and output encondings match.
Can we simply add in pdftex a \cscode? Such a \cscode would be equal to 1 or 0, 
accordingly to whether the characert is allowed in the name of a cs or not 
(more precisely, a character with \cscode 0 would make the previous one the last 
of the cs, or if it is the first one it would be the only one in the name of the cs). 
In Latex, the setting of the cscodes would be done when selecting the input encoding.

In order not to break tons of existing code, we should still allow catcode 11 characters to 
form control names. Thus, whenever now we have (approximately, I have not yet read the sources)

if(catcode=11)

we change it with

if(catcode=11 or cscode=1)	%If cscode=1 then, even if catcode=active, the character works as a letter when building the name of a control word

We initialy set all cscodes equal to 0, so for the existing code nothing changes, while form now on we will be able to type control sequences with our alphabet (cyrilic, greek, ...), even if those characters are active ones.


--
Javier A.



From P.Taylor at Rhul.Ac.Uk  Mon Oct 23 22:19:20 2006
From: P.Taylor at Rhul.Ac.Uk (Disgusted of Tunbridge Wells)
Date: Mon, 23 Oct 2006 21:19:20 +0100
Subject: [NTG-pdftex] Adding a \cscode
In-Reply-To: <453D13F4.7050207@digi21.net>
References: <453D13F4.7050207@digi21.net>
Message-ID: <453D23C8.5060907@Rhul.Ac.Uk>

Dear Javier, copy all --

Because it is difficult for me to think in Russian (or
even in Greek), would it be possible for you to give
an example of your desired behaviour using (say)
French.  I /imagine/ that what you are saying
is that if we take ? (<e-acute>) as an example of
a character that could not normally form a part
of a control sequence, you would like to be able
to do the following :

	\cscode `\? = 1
	\catcode `\? = \active
	\def ?{\'e}
	\def \n?e {born}

and that this solution is preferred to

	\catcode `\? = \catcode `\e
	\def \n?e {born}

because the latter does not allow the

	\catcode `\? = \active
	\def ?{\'e}

functionality that \cscode does.  Is this correct ?

** Phil.
--------
because the latter has implications

Javier M?gica de Rivera wrote:

> This is a copy of a message I sent to the Latex3 list some time before and I got no answer (something not rare in that list). So I post it here, where it also belongs.
> 
> There have been in the past many discussions about how to create a really
> multilingual program. One of the points was to allow typeseting control sequences (cs) in
> Russian (say), but we cannot simply make the \catcode equal to 11
> because then the character would be transparently passed to the dvi
> (ie., the font), which only works if input and output encondings match.
> Can we simply add in pdftex a \cscode? Such a \cscode would be equal to 1 or 0, 
> accordingly to whether the characert is allowed in the name of a cs or not 
> (more precisely, a character with \cscode 0 would make the previous one the last 
> of the cs, or if it is the first one it would be the only one in the name of the cs). 
> In Latex, the setting of the cscodes would be done when selecting the input encoding.
> 
> In order not to break tons of existing code, we should still allow catcode 11 characters to 
> form control names. Thus, whenever now we have (approximately, I have not yet read the sources)
> 
> if(catcode=11)
> 
> we change it with
> 
> if(catcode=11 or cscode=1)	%If cscode=1 then, even if catcode=active, the character works as a letter when building the name of a control word
> 
> We initialy set all cscodes equal to 0, so for the existing code nothing changes, while form now on we will be able to type control sequences with our alphabet (cyrilic, greek, ...), even if those characters are active ones.
> 
> 
> --
> Javier A.
> 
> 
> _______________________________________________
> ntg-pdftex mailing list
> ntg-pdftex at ntg.nl
> http://www.ntg.nl/mailman/listinfo/ntg-pdftex

From noreply at sarovar.org  Tue Oct 24 12:20:29 2006
From: noreply at sarovar.org (noreply at sarovar.org)
Date: Tue, 24 Oct 2006 15:50:29 +0530
Subject: [NTG-pdftex] [ pdftex-Bugs-465 ] font expansion & \lastlinefit
Message-ID: <E1GcJOX-0000MZ-00@sarovar.org>

Bugs item #465, was opened at 2006-01-03 19:05
You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=465&group_id=106

Category: hz
Group: v1.40.0
Status: Open
Resolution: None
Priority: 5
Submitted By: Robert (schlcht)
Assigned to: The Thanh Han (hanthethanh)
Summary: font expansion & \lastlinefit

Initial Comment:
With \lastlinefit > 0, the last line will always be 
expanded to the maximum (except if it doesn't contain a 
glue).

Furthermore, I wonder whether \lastlinefit should ideally
also effect the expansion amount (ie., the last line of 
the first paragraph should be set in cmr10-25, since the 
preceding one is set in cmr10-50)?

\tracingoutput1
\showboxbreadth\maxdimen
\pdftracingfonts1
\pdfadjustspacing2
\pdffontexpand\font 50 50 10 autoexpand
\lastlinefit500
\hsize=16cm
\input tufte\par
\bye,

Robert


----------------------------------------------------------------------

>Comment By: The Thanh Han (hanthethanh)
Date: 2006-10-24 10:20

Message:
Logged In: YES 
user_id=710

I spent quite some time on this, but it's unlikely that I am
able to fix this bug. Probably we have to wait until some
expert finds time to fix this.

----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2006-09-01 11:55

Message:
Logged In: YES 
user_id=710

I should work on it and other bugs related to hz stuff, but
I haven't found the time to reread relevant codes yet.
Please be patient with me. 

----------------------------------------------------------------------

Comment By: Martin Schr?der (oneiros)
Date: 2006-09-01 10:48

Message:
Logged In: YES 
user_id=421

Hartmut? Thanh? Anybody working on this?

----------------------------------------------------------------------

You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=465&group_id=106

From noreply at sarovar.org  Tue Oct 24 12:39:28 2006
From: noreply at sarovar.org (noreply at sarovar.org)
Date: Tue, 24 Oct 2006 16:09:28 +0530
Subject: [NTG-pdftex] [ pdftex-Bugs-465 ] font expansion & \lastlinefit
Message-ID: <E1GcJgu-0004t8-00@sarovar.org>

Bugs item #465, was opened at 2006-01-03 20:05
You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=465&group_id=106

Category: hz
Group: v1.40.0
Status: Open
>Resolution: Postponed
Priority: 5
Submitted By: Robert (schlcht)
Assigned to: The Thanh Han (hanthethanh)
Summary: font expansion & \lastlinefit

Initial Comment:
With \lastlinefit > 0, the last line will always be 
expanded to the maximum (except if it doesn't contain a 
glue).

Furthermore, I wonder whether \lastlinefit should ideally
also effect the expansion amount (ie., the last line of 
the first paragraph should be set in cmr10-25, since the 
preceding one is set in cmr10-50)?

\tracingoutput1
\showboxbreadth\maxdimen
\pdftracingfonts1
\pdfadjustspacing2
\pdffontexpand\font 50 50 10 autoexpand
\lastlinefit500
\hsize=16cm
\input tufte\par
\bye,

Robert


----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2006-10-24 12:20

Message:
Logged In: YES 
user_id=710

I spent quite some time on this, but it's unlikely that I am
able to fix this bug. Probably we have to wait until some
expert finds time to fix this.

----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2006-09-01 13:55

Message:
Logged In: YES 
user_id=710

I should work on it and other bugs related to hz stuff, but
I haven't found the time to reread relevant codes yet.
Please be patient with me. 

----------------------------------------------------------------------

Comment By: Martin Schr?der (oneiros)
Date: 2006-09-01 12:48

Message:
Logged In: YES 
user_id=421

Hartmut? Thanh? Anybody working on this?

----------------------------------------------------------------------

You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=465&group_id=106

From javier at digi21.net  Tue Oct 24 20:36:50 2006
From: javier at digi21.net (=?ISO-8859-1?Q?Javier_M=FAgica_de_Rivera?=)
Date: Tue, 24 Oct 2006 20:36:50 +0200
Subject: [NTG-pdftex] Adding a \cscode
In-Reply-To: <453D23C8.5060907@Rhul.Ac.Uk>
References: <453D13F4.7050207@digi21.net> <453D23C8.5060907@Rhul.Ac.Uk>
Message-ID: <453E5D42.3040206@digi21.net>

Disgusted of Tunbridge Wells escribi?:
> Dear Javier, copy all --
>
> Because it is difficult for me to think in Russian (or
> even in Greek), would it be possible for you to give
> an example of your desired behaviour using (say)
> French.  I /imagine/ that what you are saying
> is that if we take ? (<e-acute>) as an example of
> a character that could not normally form a part
> of a control sequence, you would like to be able
> to do the following :
>
>     \cscode `\? = 1
>     \catcode `\? = \active
>     \def ?{\'e}
>     \def \n?e {born}
>
> and that this solution is preferred to
>
>     \catcode `\? = \catcode `\e
>     \def \n?e {born}
>
> because the latter does not allow the
>
>     \catcode `\? = \active
>     \def ?{\'e}
>
> functionality that \cscode does.  Is this correct ?
>
> ** Phil.
> --------
> because the latter has implications
>
Yes, I mean exactly that. I chose the example of Russian because in a
language that uses the Latin script, as is the case of French or
Spanish, it really isn't that annoying not to be able to use accented
leters or some particular letter of the alphabet (\~n, \c c, ...), but
if you are using another script it is very likely that you need all the
letters of your alphabet to be active, and so you are forced to use the
latin alphabet to build the names of control sequences. You said that it
is difficult for you to think in Russian. Well, neither can I, but
people using TeX in those countries **must** think in another alphabet,
and it would be really an improvement if they were able to write control
sequences using their natural script.

--
Javier A.



From taco at elvenkind.com  Wed Oct 25 09:14:38 2006
From: taco at elvenkind.com (Taco Hoekwater)
Date: Wed, 25 Oct 2006 09:14:38 +0200
Subject: [NTG-pdftex] Adding a \cscode
In-Reply-To: <453E5D42.3040206@digi21.net>
References: <453D13F4.7050207@digi21.net> <453D23C8.5060907@Rhul.Ac.Uk>
	<453E5D42.3040206@digi21.net>
Message-ID: <453F0EDE.7000606@elvenkind.com>


Hi Javier,

Javier M?gica de Rivera wrote:
> 
> Yes, I mean exactly that. I chose the example of Russian because in a
> language that uses the Latin script, as is the case of French or
> Spanish, it really isn't that annoying not to be able to use accented
> leters or some particular letter of the alphabet (\~n, \c c, ...), but
> if you are using another script it is very likely that you need all the
> letters of your alphabet to be active, and so you are forced to use the

Let me start by saying this: If your font is set up correctly for your
language, not all characters really 'have to' be active. Inputenc.sty
makes them active so that it can support many encodings, but there is
no real need for that.

If (for instance) ? is in slot 233 of your input encoding, and you use
a font encoding that has it in slot 233 as well, then it can simply be
a 'letter', and you could happily use it in a control sequence.

In the future, even with a different font encoding, the need for all
these characters to be active will disappear completely because future
versions of pdfTeX will have a separation between characters and font
glyphs, with a tunable remapping stage inbetween.

Adding a \cscode primitive may be interesting nonetheless, but like
Phil said: there will be implications. The next release (1.40) of pdftex
is in feature freeze so there is no chance of adding it in there, but
I'll do some experiments in LuaTeX to see just how many implications
there are and if they can be overcome without breaking compatibility.

Cheers,
Taco

From Eric.Brunet at lps.ens.fr  Wed Oct 25 13:21:40 2006
From: Eric.Brunet at lps.ens.fr (Eric.Brunet at lps.ens.fr)
Date: Wed, 25 Oct 2006 13:21:40 +0200
Subject: [NTG-pdftex] pdftex in dvi mode and reading JPEG files
Message-ID: <20061025112140.GB14989@platane.lps.ens.fr>

Hi,

I have always found annoying that pdftex and latex don't accept the same
formats of image files (jpg,png,pdf versus eps). It doesn't really make
sense, as including a JPEG into a postscript file is a very easy operation
since postscript 2.0.

It annoys me so much that I am trying to change that. So far, I have
written a patch for dvips (the version in the texlive) which makes dvips
able to read and embed JPEG files into a postscript. The next step is
adding LaTeX support. As it stands, one can use my patched dvips with a
LaTeX file looking like
	...
	\usepackage{graphicx}
	\DeclareGraphicsRule{.jpg}{eps}{}{}
	...
	\includegraphics[bb=0 0 width height]{bla.jpg}
	...
where width and height are the dimension (in bp) of bla.jpg.

It works, but it is not very ergonomic. It would be much nicer if LaTeX
were able to read by itself the size of the picture. It should be very
easy to do, as in modern TeX distributions, latex is simply pdfetex
working in dvi mode, and pdfetex knows how to read jpg files.

I tried to print the size of my picture with the following LaTeX code

	{\setbox0=\hbox{\pdfximage{bla.jpg}\pdfrefximage\pdflastximage}
	 \the\wd0\the\ht0}

but it doesn't work in dvi mode, as the executable complains that I dared
to use pdfximage in dvi mode, and exits.

It seems to me, however, that the previous code should be allowed in dvi
mode, as nothing weird for a dvi file arrives on the output list. In
other words, I suggest that \pdfximage should be allowed a priori in
dvi mode, and that an error should only occur if the program actually
tries to write the image on the output file. In that way, it would become
possible to patch the graphics package in order to include JPEG files in
dvi mode and produce a valid postscript file with my patched dvips.

Another possibility, of course, would be to introduce one or two new
primitives in pdfetex which would give the size of a picture file.

What do you think ? Is either of my suggestions acceptable ?

My patch is available on http://tudia.nerim.net/tex/

Thanks,

	?ric Brunet

From oberdiek at uni-freiburg.de  Wed Oct 25 14:07:59 2006
From: oberdiek at uni-freiburg.de (Heiko Oberdiek)
Date: Wed, 25 Oct 2006 14:07:59 +0200
Subject: [NTG-pdftex] pdftex in dvi mode and reading JPEG files
In-Reply-To: <20061025112140.GB14989@platane.lps.ens.fr>
References: <20061025112140.GB14989@platane.lps.ens.fr>
Message-ID: <20061025120759.GA16754@irwin.vpn.uni-freiburg.de>

On Wed, Oct 25, 2006 at 01:21:40PM +0200, Eric.Brunet at lps.ens.fr wrote:

> I have always found annoying that pdftex and latex don't accept the same
> formats of image files (jpg,png,pdf versus eps). It doesn't really make
> sense, as including a JPEG into a postscript file is a very easy operation
> since postscript 2.0.

But there are lots of different drivers: dvips, dvipsone, VTeX, ...
The main problem is a missing standard for graphics inclusion and other
things that extends the DVI format specification.

> It annoys me so much that I am trying to change that. So far, I have
> written a patch for dvips (the version in the texlive) which makes dvips
> able to read and embed JPEG files into a postscript.

There is no need to patch, dvips already can convert and embed
files on the fly. (See the last argument of \DeclareGraphicsRule,
check dvips (configuration) options for enabling the feature,
if it is disabled.)

> The next step is
> adding LaTeX support. As it stands, one can use my patched dvips with a
> LaTeX file looking like
> 	...
> 	\usepackage{graphicx}
> 	\DeclareGraphicsRule{.jpg}{eps}{}{}
> 	...
> 	\includegraphics[bb=0 0 width height]{bla.jpg}
> 	...
> where width and height are the dimension (in bp) of bla.jpg.

No need for this, look at package bmpsize!

> It works, but it is not very ergonomic. It would be much nicer if LaTeX
> were able to read by itself the size of the picture.

pdfTeX >= 1.30 and package bmpsize.

Yours sincerely
  Heiko <oberdiek at uni-freiburg.de>
-- 

From pragma at wxs.nl  Wed Oct 25 15:15:35 2006
From: pragma at wxs.nl (Hans Hagen)
Date: Wed, 25 Oct 2006 15:15:35 +0200
Subject: [NTG-pdftex] pdftex in dvi mode and reading JPEG files
In-Reply-To: <20061025112140.GB14989@platane.lps.ens.fr>
References: <20061025112140.GB14989@platane.lps.ens.fr>
Message-ID: <453F6377.9000608@wxs.nl>

Eric.Brunet at lps.ens.fr wrote:
> Another possibility, of course, would be to introduce one or two new
> primitives in pdfetex which would give the size of a picture file.
>   
this has also been discussed with the author of dvipdfmx (chof) during tug 2005 in wuhan; there we've put it on Hartmuts plate -) 

Hans 
 

-----------------------------------------------------------------
                                          Hans Hagen | PRAGMA ADE
              Ridderstraat 27 | 8061 GH Hasselt | The Netherlands
     tel: 038 477 53 69 | fax: 038 477 53 74 | www.pragma-ade.com
                                             | www.pragma-pod.nl
-----------------------------------------------------------------


From Eric.Brunet at lps.ens.fr  Wed Oct 25 16:27:12 2006
From: Eric.Brunet at lps.ens.fr (Eric.Brunet at lps.ens.fr)
Date: Wed, 25 Oct 2006 16:27:12 +0200
Subject: [NTG-pdftex] pdftex in dvi mode and reading JPEG files
In-Reply-To: <20061025112140.GB14989@platane.lps.ens.fr>
References: <20061025112140.GB14989@platane.lps.ens.fr>
Message-ID: <20061025142712.GA17150@platane.lps.ens.fr>

Hi,

Thank you for your answer,

> Heiko Oberdiek Wrote:
> > I have always found annoying that pdftex and latex don't accept the same
> > formats of image files (jpg,png,pdf versus eps). It doesn't really make
> 
> But there are lots of different drivers: dvips, dvipsone, VTeX, ...
> The main problem is a missing standard for graphics inclusion and other
> things that extends the DVI format specification.

I agree, doing things perfectly is a huge task. But, hey, one needs to
start somewhere. Having dvips working would already be something...

> There is no need to patch, dvips already can convert and embed
> files on the fly. (See the last argument of \DeclareGraphicsRule,
> check dvips (configuration) options for enabling the feature,
> if it is disabled.)

Well, solutions such as
	\DeclareGraphicsRule{.jpg}{eps}{}{`jpeg2ps -r0 #1}
are not really satisfactory: even if your correspondants use the same
driver as you do, they need to have an extra program installed, and they need
to have a very unsecure option enabled. (Do you really like the idea that
``latex foobar && dvips foobar -o'' might erase all your files if foobar
was written with bad intentions ?)

The most important problem is that if you want to be compatible with what
pdflatex does wehn including a jpeg file without specifying its size, you
need to invoke ``jpeg2ps -r0'' for jpg files with a resolution in the
JFIF segment, and ``jpeg2ps -r72'' for jpg files without a resolution, so
you cannot have everything working correctly with a simple
\DeclareGraphicsRule invocation. That is very annoying ! Is there a
better programm than jpeg2ps out there ?

Of course, my patch simply does the same thing as jpeg2ps from within
dvips, but without the senseless rescaling. The only difference is that
it is more robust (no problem fiddling with the options of jpeg2ps), and
no need for the unsecure shell-escapes.
> 
> No need for this, look at package bmpsize!
> 
That is great. I didn't know that wonderfull package. Unfortunately, I
cannot test it right now because my pdftex is too old, but I'll remember
it exists.

Thanks !

	?ric Brunet

From oberdiek at uni-freiburg.de  Wed Oct 25 17:07:50 2006
From: oberdiek at uni-freiburg.de (Heiko Oberdiek)
Date: Wed, 25 Oct 2006 17:07:50 +0200
Subject: [NTG-pdftex] pdftex in dvi mode and reading JPEG files
In-Reply-To: <20061025142712.GA17150@platane.lps.ens.fr>
References: <20061025112140.GB14989@platane.lps.ens.fr>
	<20061025142712.GA17150@platane.lps.ens.fr>
Message-ID: <20061025150750.GA20173@irwin.vpn.uni-freiburg.de>

On Wed, Oct 25, 2006 at 04:27:12PM +0200, Eric.Brunet at lps.ens.fr wrote:

> > Heiko Oberdiek Wrote:
> > > I have always found annoying that pdftex and latex don't accept the same
> > > formats of image files (jpg,png,pdf versus eps). It doesn't really make
> > 
> > But there are lots of different drivers: dvips, dvipsone, VTeX, ...
> > The main problem is a missing standard for graphics inclusion and other
> > things that extends the DVI format specification.
> 
> I agree, doing things perfectly is a huge task. But, hey, one needs to
> start somewhere. Having dvips working would already be something...
> 
> > There is no need to patch, dvips already can convert and embed
> > files on the fly. (See the last argument of \DeclareGraphicsRule,
> > check dvips (configuration) options for enabling the feature,
> > if it is disabled.)
> 
> Well, solutions such as
> 	\DeclareGraphicsRule{.jpg}{eps}{}{`jpeg2ps -r0 #1}
> are not really satisfactory: even if your correspondants use the same
> driver as you do, they need to have an extra program installed,

Otherwise you would need uptodate programs, that is also a problem,
see below.

> and they need
> to have a very unsecure option enabled. (Do you really like the idea that
> ``latex foobar && dvips foobar -o'' might erase all your files if foobar
> was written with bad intentions ?)

The insecure option can be avoided by a small dvi filter program.
It analyzes the \special texts, performs secure conversions
and replaces the conversion commands in the \special text
by the converted output file.

> The most important problem is that if you want to be compatible with what
> pdflatex does wehn including a jpeg file without specifying its size, you
> need to invoke ``jpeg2ps -r0'' for jpg files with a resolution in the
> JFIF segment, and ``jpeg2ps -r72'' for jpg files without a resolution, so
> you cannot have everything working correctly with a simple
> \DeclareGraphicsRule invocation. That is very annoying ! Is there a
> better programm than jpeg2ps out there ?

You can inspect the resolution using bmpsize.

> Of course, my patch simply does the same thing as jpeg2ps from within
> dvips, but without the senseless rescaling. The only difference is that
> it is more robust (no problem fiddling with the options of jpeg2ps), and
> no need for the unsecure shell-escapes.

There are lots of image formats (n):
  BMP, GIF, JPEG, MSP, PAM, PCX, PNG, PNM, SGI, TGA, TIFF,
  WMF, XPM, ...
And there are lots of dvi drivers (m):
  dvips, dvipsone, dvipdfm, pdfTeX, VTeX, ...

Thus the work is O(n \times m), I would prefer a
solution with O(n + m).

> > No need for this, look at package bmpsize!
> > 
> That is great. I didn't know that wonderfull package. Unfortunately, I
> cannot test it right now because my pdftex is too old, but I'll remember
> it exists.

It uses \pdffiledump, available since pdfTeX 1.30.

Yours sincerely
  Heiko <oberdiek at uni-freiburg.de>
-- 

From javier at digi21.net  Wed Oct 25 18:15:52 2006
From: javier at digi21.net (=?ISO-8859-1?Q?Javier_M=FAgica_de_Rivera?=)
Date: Wed, 25 Oct 2006 18:15:52 +0200
Subject: [NTG-pdftex] Adding a \cscode
In-Reply-To: <453F0EDE.7000606@elvenkind.com>
References: <453D13F4.7050207@digi21.net> <453D23C8.5060907@Rhul.Ac.Uk>
	<453E5D42.3040206@digi21.net> <453F0EDE.7000606@elvenkind.com>
Message-ID: <453F8DB8.30705@digi21.net>

Taco Hoekwater escribi?:
>
> Hi Javier,
>
> Let me start by saying this: If your font is set up correctly for your
> language, not all characters really 'have to' be active. Inputenc.sty
> makes them active so that it can support many encodings, but there is
> no real need for that.
>
> If (for instance) ? is in slot 233 of your input encoding, and you use
> a font encoding that has it in slot 233 as well, then it can simply be
> a 'letter', and you could happily use it in a control sequence.
Yes, I know that, but it is very likeky, specialy in some non-latin 
scripts, that your input encoding does not match the font encoding. You 
may argue that you can remap fonts, but be realistic, how many people 
actually now how to do that (and besides, it is still much simpler if 
you let the inputenc/fontenc packages do the thing).
> In the future, even with a different font encoding, the need for all
> these characters to be active will disappear completely because future
> versions of pdfTeX will have a separation between characters and font
> glyphs, with a tunable remapping stage inbetween.
That is really good news.

Cheers,
Javier A.



From frank at debian.org  Fri Oct 27 14:37:16 2006
From: frank at debian.org (Frank =?iso-8859-1?Q?K=FCster?=)
Date: Fri, 27 Oct 2006 14:37:16 +0200
Subject: [NTG-pdftex] xpdf/poppler usage: Movements on the poppler side,
	and a request for help
Message-ID: <86vem6rl37.fsf@alhambra.kuesterei.ch>

Dear all,

recently more projects that do not need any of the fancy graphical
interfaces are considering using poppler, e.g. CUPS.  However, the
poppler developers plan to make unavailable the old, undocumented, never
planned and unmaintainable API of "plain libpoppler".  

These two wishes together give us a fair chance that someone will
actually do the work and develop a clean API for a plain C-only poppler,
without any graphics payload.  Therefore it would be nice if someone
among the pdfTeX developers would take part in the discussion, in
particular help answer the question in 

http://lists.freedesktop.org/archives/poppler/2006-October/002260.html

,----
| What functionality would the tetex people need exported from such an
| API?
`----

At a short glance over pdftoepdf.cc and pdftosrc.cc, I only found these
symbols:

Ref
GfxFont
GBool
PDFDoc
GString
LinkDest
Stream

But in fact there may be more - and you may also have some wishes about
PDF parsing and manipulation that need to be added yet.

Is there anyone who would take up this task?

TIA, Frank

P.S. For those who don't remember what this is about: 

The frequent security bugs in xpdf code, sometimes exploitable with
hand-crafted pdf files, are considered to be also a security problem in
pdfTeX and other software that embeds such code, by the security teams
of different Linux distributions.  And it causes major headaches, since
each embedded xpdf version needs a slightly changed patch.  The goal is
to replace the xpdf code with a poppler copy, so that static linking
would still be possible, but distributions could also link dynamically
and fix security problems with just one new package for libpoppler.

-- 
Dr. Frank K?ster
Single Molecule Spectroscopy, Protein Folding @ Inst. f. Biochemie, Univ. Z?rich
Debian Developer (teTeX/TeXLive)

From pragma at wxs.nl  Fri Oct 27 16:39:04 2006
From: pragma at wxs.nl (Hans Hagen)
Date: Fri, 27 Oct 2006 16:39:04 +0200
Subject: [NTG-pdftex] xpdf/poppler usage: Movements on the poppler side,
 and a request for help
In-Reply-To: <86vem6rl37.fsf@alhambra.kuesterei.ch>
References: <86vem6rl37.fsf@alhambra.kuesterei.ch>
Message-ID: <45421A08.7060900@wxs.nl>

it makes more sense then to look into

http://ccxvii.net/apparition/

because "However, the poppler developers plan to make unavailable the old, undocumented, never planned and unmaintainable API of "plain libpoppler" is not something you want to repeat again

or alternatively, try to maintain a healthy relationship with Derek and stick to xpdf 

Hans 

-----------------------------------------------------------------
                                          Hans Hagen | PRAGMA ADE
              Ridderstraat 27 | 8061 GH Hasselt | The Netherlands
     tel: 038 477 53 69 | fax: 038 477 53 74 | www.pragma-ade.com
                                             | www.pragma-pod.nl
-----------------------------------------------------------------


From frank at debian.org  Fri Oct 27 17:10:34 2006
From: frank at debian.org (Frank =?iso-8859-1?Q?K=FCster?=)
Date: Fri, 27 Oct 2006 17:10:34 +0200
Subject: [NTG-pdftex] xpdf/poppler usage: Movements on the poppler side,
	and a request for help
In-Reply-To: <45421A08.7060900@wxs.nl> (Hans Hagen's message of "Fri\,
	27 Oct 2006 16\:39\:04 +0200")
References: <86vem6rl37.fsf@alhambra.kuesterei.ch> <45421A08.7060900@wxs.nl>
Message-ID: <86wt6lrdzp.fsf@alhambra.kuesterei.ch>

Hans Hagen <pragma at wxs.nl> wrote:

> it makes more sense then to look into
>
> http://ccxvii.net/apparition/
>
> because "However, the poppler developers plan to make unavailable the
> old, undocumented, never planned and unmaintainable API of "plain
> libpoppler" is not something you want to repeat again

I am not the one to judge whether MuPDF or xpdf/poppler is the better
choice.  But I don't understand your argument about "is not something
you want to repeat again".  There never existed a clean API for xpdf,
people just used things they needed from different parts of the code.

poppler has forked xpdf to create a shared library, which is a move I
fully support.  poppler has built libraries with a well-defined,
reliable API on top of that, but has also provided the undefined "API"
that xpdf code-users are used to, and therefore poppler can currently be
used as a (nearly, one data type is renamed) drop-in replacement for
xpdf.

If the poppler developers now consider to no longer provide this
unreliable "API", but offer to create one more library with a
well-defined, reliable API for non-display uses - then I would say this
is something that speaks *for* poppler.  It seems to indicate that they
care for their users (and don't try to hide the problems with using an
undocumented API).

If it turns out that the poppler people are not willing to listen to
pdfTeX developers when it is about creating a non-display library
version: Then we can still decide that we should not switch to poppler
(or rather, for sure we will, since we don't want pdfTeX to be linked to
qt or gtk or such).

But I think we should not miss the opportunity to tell them our wishes.

> or alternatively, try to maintain a healthy relationship with Derek
> and stick to xpdf

I don't see why a healthy relationship with Derek is needed just to use
the code, but the point is that

a) there are valid reasons not to use the code as long as it can only be
   linked statically (note that at least Debian and Ubuntu Linux already
   link pdfTeX against libpoppler for those reasons)

b) people who have tried to maintain or build up a relationship to Derek
   have not been able to convince him to provide a shared library.


So while I have nothing against MuPDF, I still think some pdfTeX
developer should get in touch with the poppler peopler and communicate
with them.  They have asked, and after all I expect that it will be much
easier to switch to a poppler library that has been taylored along our
wishes, than to MuPDF which exists independently and doesn't seem to
have any relationship to the xpdf code we currently use.

Regards, Frank

-- 
Dr. Frank K?ster
Single Molecule Spectroscopy, Protein Folding @ Inst. f. Biochemie, Univ. Z?rich
Debian Developer (teTeX/TeXLive)

From pragma at wxs.nl  Fri Oct 27 19:44:20 2006
From: pragma at wxs.nl (Hans Hagen)
Date: Fri, 27 Oct 2006 19:44:20 +0200
Subject: [NTG-pdftex] xpdf/poppler usage: Movements on the poppler side,
 and a request for help
In-Reply-To: <86wt6lrdzp.fsf@alhambra.kuesterei.ch>
References: <86vem6rl37.fsf@alhambra.kuesterei.ch> <45421A08.7060900@wxs.nl>
	<86wt6lrdzp.fsf@alhambra.kuesterei.ch>
Message-ID: <45424574.2090708@wxs.nl>

Frank ? wrote:
>
> If the poppler developers now consider to no longer provide this
> unreliable "API", but offer to create one more library with a
> well-defined, reliable API for non-display uses - then I would say this
> is something that speaks *for* poppler.  It seems to indicate that they
> care for their users (and don't try to hide the problems with using an
> undocumented API).
>   
ok, i misunderstood that part; i was under the impression that it were 
another group who had to take up that api
> If it turns out that the poppler people are not willing to listen to
> pdfTeX developers when it is about creating a non-display library
> version: Then we can still decide that we should not switch to poppler
> (or rather, for sure we will, since we don't want pdfTeX to be linked to
> qt or gtk or such).
>   
it all depends on how portable to other platforms the library is; i 
assume that it is the intention to have it running on each platform then;

concerning an api ... i think that the main question is to what extend 
we want to be able to manipulate the content of to-be-embedded objects 
(for instance in the perspective of merging annotations, changing 
colors, etc); i think that currently only font related objects are 
somehow manipulated; maybe martin/thanh can tell how much additional 
code is written for that on top of xpdf; maybe they have a kind of api 
spec already (i never looked into the source in detail) 
> b) people who have tried to maintain or build up a relationship to Derek
>    have not been able to convince him to provide a shared library.
>   
hm, i like static binaries (having only bad experiences with libs when 
updating but that's another story)
>
> So while I have nothing against MuPDF, I still think some pdfTeX
> developer should get in touch with the poppler peopler and communicate
> with them.  They have asked, and after all I expect that it will be much
> easier to switch to a poppler library that has been taylored along our
> wishes, than to MuPDF which exists independently and doesn't seem to
> have any relationship to the xpdf code we currently use.
>   
it depends if mupdf will provide some manipulation features (hard to 
maintain independently)

i happily leave cooking up a spec to the pdftex code wizzards, as long as they can guarantee that pdftex produces the same output on each platform; that's the part that worries me most because in general tex development has a rather bad history of cross platform code development (those os-wars). 


Hans 


-----------------------------------------------------------------
                                          Hans Hagen | PRAGMA ADE
              Ridderstraat 27 | 8061 GH Hasselt | The Netherlands
     tel: 038 477 53 69 | fax: 038 477 53 74 | www.pragma-ade.com
                                             | www.pragma-pod.nl
-----------------------------------------------------------------


From martin at oneiros.de  Fri Oct 27 21:44:54 2006
From: martin at oneiros.de (=?ISO-8859-1?Q?Martin_Schr=F6der?=)
Date: Fri, 27 Oct 2006 21:44:54 +0200
Subject: [NTG-pdftex] xpdf/poppler usage: Movements on the poppler side,
	and a request for help
In-Reply-To: <86vem6rl37.fsf@alhambra.kuesterei.ch>
References: <86vem6rl37.fsf@alhambra.kuesterei.ch>
Message-ID: <68c491a60610271244x5c0461eeo27ed28caa96c0fd5@mail.gmail.com>

2006/10/27, Frank K?ster <frank at debian.org>:
> recently more projects that do not need any of the fancy graphical
> interfaces are considering using poppler, e.g. CUPS.  However, the
> poppler developers plan to make unavailable the old, undocumented, never
> planned and unmaintainable API of "plain libpoppler".

Whatever that is.

> These two wishes together give us a fair chance that someone will
> actually do the work and develop a clean API for a plain C-only poppler,
> without any graphics payload.  Therefore it would be nice if someone
> among the pdfTeX developers would take part in the discussion, in
> particular help answer the question in
>
> http://lists.freedesktop.org/archives/poppler/2006-October/002260.html
>
> ,----
> | What functionality would the tetex people need exported from such an
> | API?
> `----

I just did.

> At a short glance over pdftoepdf.cc and pdftosrc.cc, I only found these
> symbols:
>
> Ref
> GfxFont
> GBool
> PDFDoc
> GString
> LinkDest
> Stream
>
> But in fact there may be more - and you may also have some wishes about
> PDF parsing and manipulation that need to be added yet.

If we would start pdfTeX now, we would probably use much more (Taco,
are you listening? :-). E.g. pdfTeX has a complete machinery for
parsing font files, while poppler probably also has code for that. And
the code for writing objects is also duplicated and quite low-level in
pdfTeX.
So there is definitely duplicate functionality.

A very short term goal (i.e. 1.40) would be to have code in
utils.c:initversionstring to handle the case where poppler is used
instead of xpdf. And to have the patches you already distribute for
using poppler in pdfTeX.

Best
   Martin

From taco at elvenkind.com  Fri Oct 27 22:15:04 2006
From: taco at elvenkind.com (Taco Hoekwater)
Date: Fri, 27 Oct 2006 22:15:04 +0200
Subject: [NTG-pdftex] xpdf/poppler usage: Movements on the poppler side,
 and a request for help
In-Reply-To: <68c491a60610271244x5c0461eeo27ed28caa96c0fd5@mail.gmail.com>
References: <86vem6rl37.fsf@alhambra.kuesterei.ch>
	<68c491a60610271244x5c0461eeo27ed28caa96c0fd5@mail.gmail.com>
Message-ID: <454268C8.6030604@elvenkind.com>

Martin Schr?der wrote:
>>
>>But in fact there may be more - and you may also have some wishes about
>>PDF parsing and manipulation that need to be added yet.
> 
> 
> If we would start pdfTeX now, we would probably use much more (Taco,
> are you listening? :-). E.g. pdfTeX has a complete machinery for
> parsing font files, while poppler probably also has code for that. And
> the code for writing objects is also duplicated and quite low-level in
> pdfTeX.
> So there is definitely duplicate functionality.

If poppler is just using fontconfig + freetype2 for local font 
discovery for to-be-opened pdf docs (this is my current understanding),
then that would be only about as useful for pdfTeX as that same code
in xetex already is. And that is not very much, I am afraid.

OTOH, if poppler is not only a pdf rendering library but also a pdf
creation library (or aspires to become that, then it is quite likely
that there will be some overlap that could possibly be merged one
way or the other.

I do not know enough about poppler (or about pdf in general, for
that matter) to say something definate about this, sorry. I never
have had to anything with the pdf image inclusion, so I am not a
suited person to respond about that part, at all.

Best,
Taco

From P.Taylor at Rhul.Ac.Uk  Sat Oct 28 01:56:09 2006
From: P.Taylor at Rhul.Ac.Uk (Disgusted of Tunbridge Wells)
Date: Sat, 28 Oct 2006 00:56:09 +0100
Subject: [NTG-pdftex] xpdf/poppler usage: Movements on the poppler sid e,
 and a request for help
In-Reply-To: <45424574.2090708@wxs.nl>
References: <86vem6rl37.fsf@alhambra.kuesterei.ch> <45421A08.7060900@wxs.nl>
	<86wt6lrdzp.fsf@alhambra.kuesterei.ch> <45424574.2090708@wxs.nl>
Message-ID: <45429C99.1030507@Rhul.Ac.Uk>



Hans Hagen wrote:

 > [...] that's the part that worries me most because in general tex
> development has a rather bad history of cross platform code development

W H A A A T ? ? ! ! ! ! !

TeX is surely /the/ program, /par excellence/, that is guaranteed
to produce identical results on every platform.  I genuinely don't
understand to what "rather bad history of cross platform code
development" you refer, Hans.  BNB cc'd, because I suspect she
may want to comment on this.

** Phil.

From taco at elvenkind.com  Sat Oct 28 10:07:20 2006
From: taco at elvenkind.com (Taco Hoekwater)
Date: Sat, 28 Oct 2006 10:07:20 +0200
Subject: [NTG-pdftex] xpdf/poppler usage: Movements on the poppler sid e,
 and a request for help
In-Reply-To: <45429C99.1030507@Rhul.Ac.Uk>
References: <86vem6rl37.fsf@alhambra.kuesterei.ch>
	<45421A08.7060900@wxs.nl>	<86wt6lrdzp.fsf@alhambra.kuesterei.ch>
	<45424574.2090708@wxs.nl> <45429C99.1030507@Rhul.Ac.Uk>
Message-ID: <45430FB8.10909@elvenkind.com>

Disgusted of Tunbridge Wells wrote:
> 
> Hans Hagen wrote:
> 
>  > [...] that's the part that worries me most because in general tex
> 
>>development has a rather bad history of cross platform code development
> 
> 
> W H A A A T ? ? ! ! ! ! !

If I was a windows or traditional macintosh user, I would have
said precisely the same thing.

Taco

From pragma at wxs.nl  Sat Oct 28 10:48:39 2006
From: pragma at wxs.nl (Hans Hagen)
Date: Sat, 28 Oct 2006 10:48:39 +0200
Subject: [NTG-pdftex] xpdf/poppler usage: Movements on the poppler sid e,
 and a request for help
In-Reply-To: <45429C99.1030507@Rhul.Ac.Uk>
References: <86vem6rl37.fsf@alhambra.kuesterei.ch> <45421A08.7060900@wxs.nl>
	<86wt6lrdzp.fsf@alhambra.kuesterei.ch>
	<45424574.2090708@wxs.nl> <45429C99.1030507@Rhul.Ac.Uk>
Message-ID: <45431967.4020107@wxs.nl>

Disgusted of Tunbridge Wells wrote:
> Hans Hagen wrote:
>
>  > [...] that's the part that worries me most because in general tex
>   
>> development has a rather bad history of cross platform code development
>>     
>
> W H A A A T ? ? ! ! ! ! !
>
> TeX is surely /the/ program, /par excellence/, that is guaranteed
> to produce identical results on every platform.  I genuinely don't
> understand to what "rather bad history of cross platform code
> development" you refer, Hans.  BNB cc'd, because I suspect she
> may want to comment on this.
>   
that's another matter; the fact that it does produce identical results 
is related to the tex kernel, not to the actual binary that goed beyond 
tex by being integrated in a  cross platform tex environment (say web2c);

https://xemtex.groups.foundry.supelec.fr/xemtex-web-gb-2-5.html

summarizes this nicely; anyhow, it has been discussed frequently at recent user group meetings

Hans 


-----------------------------------------------------------------
                                          Hans Hagen | PRAGMA ADE
              Ridderstraat 27 | 8061 GH Hasselt | The Netherlands
     tel: 038 477 53 69 | fax: 038 477 53 74 | www.pragma-ade.com
                                             | www.pragma-pod.nl
-----------------------------------------------------------------


From P.Taylor at Rhul.Ac.Uk  Sat Oct 28 11:14:23 2006
From: P.Taylor at Rhul.Ac.Uk (Disgusted of Tunbridge Wells)
Date: Sat, 28 Oct 2006 10:14:23 +0100
Subject: [NTG-pdftex] xpdf/poppler usage: Movements on the poppler sid e,
 and a request for help
In-Reply-To: <45431967.4020107@wxs.nl>
References: <86vem6rl37.fsf@alhambra.kuesterei.ch> <45421A08.7060900@wxs.nl>
	<86wt6lrdzp.fsf@alhambra.kuesterei.ch>
	<45424574.2090708@wxs.nl> <45429C99.1030507@Rhul.Ac.Uk>
	<45431967.4020107@wxs.nl>
Message-ID: <45431F6F.8080704@Rhul.Ac.Uk>



Hans Hagen wrote:

> that's another matter; the fact that it does produce identical results 
> is related to the tex kernel, not to the actual binary that goed beyond 
> tex by being integrated in a  cross platform tex environment (say
> web2c);
> 
> https://xemtex.groups.foundry.supelec.fr/xemtex-web-gb-2-5.html
> 
> summarizes this nicely.

Yes, I read Fabrice's remarks some time ago, and they saddened
me enormously (just as I am saddened every time licensing issues,
or open-source considerations, or whatever, get in the way of
making useful software generally available).  But the fact remains
that TeX itself is probably the most reliable large piece of
software in the world when it comes to reproducibility between
platforms : the can of worms that was introduced when Pascal ceased
to be regarded as a viable source language for direct code generation
is surely another issue completely.  I confess to remaining baffled
as to why no-one has ever attempted a Delphi port for Windows, given
that Delphi is actually a rather radically re-engineered Pascal
derivative ...

** Phil.

From frank at debian.org  Sat Oct 28 14:38:31 2006
From: frank at debian.org (Frank =?iso-8859-1?Q?K=FCster?=)
Date: Sat, 28 Oct 2006 14:38:31 +0200
Subject: [NTG-pdftex] xpdf/poppler usage: Movements on the poppler side,
	and a request for help
In-Reply-To: <454268C8.6030604@elvenkind.com> (Taco Hoekwater's message of
	"Fri\, 27 Oct 2006 22\:15\:04 +0200")
References: <86vem6rl37.fsf@alhambra.kuesterei.ch>
	<68c491a60610271244x5c0461eeo27ed28caa96c0fd5@mail.gmail.com>
	<454268C8.6030604@elvenkind.com>
Message-ID: <86bqnwobso.fsf@alhambra.kuesterei.ch>

Taco Hoekwater <taco at elvenkind.com> wrote:

> I do not know enough about poppler (or about pdf in general, for
> that matter) to say something definate about this, sorry. 

Me neither, except that I know that very basically and non-technically
poppler is "xpdf as a shared library, plus better displaying
capabilities".  

Regards, Frank
-- 
Dr. Frank K?ster
Single Molecule Spectroscopy, Protein Folding @ Inst. f. Biochemie, Univ. Z?rich
Debian Developer (teTeX/TeXLive)

From noreply at sarovar.org  Sat Oct 28 18:01:03 2006
From: noreply at sarovar.org (noreply at sarovar.org)
Date: Sat, 28 Oct 2006 21:31:03 +0530
Subject: [NTG-pdftex] [ pdftex-Patches-663 ] fix for bugs #481--483
Message-ID: <E1GdqcJ-0001zk-00@sarovar.org>

Patches item #663, was opened at 2006-10-21 12:29
You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=495&aid=663&group_id=106

Category: hz
Group: v1.40.0
Status: Closed
Resolution: Accepted
Priority: 5
Submitted By: The Thanh Han (hanthethanh)
Assigned to: Hartmut Henkel (hhenkel)
Summary: fix for bugs #481--483

Initial Comment:
This is an attempt to fix bug #481--483

- This patch applies to the pristine
pdftex-1.40.0-beta-20061017 sources
  only; if you have applied another patch(es) to the
sources, please
  discard them and start from the fresh ones.

- How to apply:

,--------
| cd /path/to/pdftex-1.40.0-beta-20061017/src
| cat /path/to/the/patch | patch -p1
| ./configure
| cd texk/web2c
| make pdftex
`--------


----------------------------------------------------------------------

>Comment By: The Thanh Han (hanthethanh)
Date: 2006-10-28 16:01

Message:
Logged In: YES 
user_id=710

Martin, have you looked at this patch? What do you think of it?

----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2006-10-22 21:38

Message:
Logged In: YES 
user_id=710

This is an update of the previous patch, which attemps to
solve problem #484 as well (I would not call #484 a bug but
a limitation -- a bug would mean that the behaviour is
inconsistent with the specification).

This patch is *very different* from the previous one, since
now kerns inserted by the new primitives are treated as
implicit kerns (they were treated as explicit kerns before
this patch). This can lead to a very different behaviour, so
be prepared :)



----------------------------------------------------------------------

Comment By: Martin Schr?der (oneiros)
Date: 2006-10-21 13:54

Message:
Logged In: YES 
user_id=421

Thanks! Any idea for 484? :-)

----------------------------------------------------------------------

You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=495&aid=663&group_id=106

From pragma at wxs.nl  Sat Oct 28 19:59:00 2006
From: pragma at wxs.nl (Hans Hagen)
Date: Sat, 28 Oct 2006 19:59:00 +0200
Subject: [NTG-pdftex] xpdf/poppler usage: Movements on the poppler side,
 and a request for help
In-Reply-To: <86bqnwobso.fsf@alhambra.kuesterei.ch>
References: <86vem6rl37.fsf@alhambra.kuesterei.ch>
	<68c491a60610271244x5c0461eeo27ed28caa96c0fd5@mail.gmail.com>
	<454268C8.6030604@elvenkind.com>
	<86bqnwobso.fsf@alhambra.kuesterei.ch>
Message-ID: <45439A64.4000802@wxs.nl>

Frank ? wrote:
> Taco Hoekwater <taco at elvenkind.com> wrote:
>
>   
>> I do not know enough about poppler (or about pdf in general, for
>> that matter) to say something definate about this, sorry. 
>>     
>
> Me neither, except that I know that very basically and non-technically
> poppler is "xpdf as a shared library, plus better displaying
> capabilities".  
>   
i know enogh of pdf and needs to comment on an api proposal once it's there, but i think that thank/martin/hartmut need to cook up the first specs 

Hans 

-----------------------------------------------------------------
                                          Hans Hagen | PRAGMA ADE
              Ridderstraat 27 | 8061 GH Hasselt | The Netherlands
     tel: 038 477 53 69 | fax: 038 477 53 74 | www.pragma-ade.com
                                             | www.pragma-pod.nl
-----------------------------------------------------------------


