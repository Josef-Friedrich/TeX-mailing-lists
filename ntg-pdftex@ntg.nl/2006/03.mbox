From vvv at vsu.ru  Wed Mar  1 19:04:33 2006
From: vvv at vsu.ru (Vladimir Volovich)
Date: Wed, 01 Mar 2006 21:04:33 +0300
Subject: [NTG-pdftex] making links work in rotated text
Message-ID: <87hd6i6nym.fsf@vsu.ru>

Hi!

if i typeset e.g. a table in LaTeX's landscape environment,
and there are some links in the table, they become not clickable
because of rotation.

it is a known problem, as far as i can tell (searching in google shows
that; the reason seems to be that the clickable areas links remain
where they were before the rotation, i.e. they are not affected by the
rotation, unlike the text)...

is there any hope that this problem is going to be solved in not too
distant future? :)

Best,
v.


From P.Jackowski at gust.org.pl  Thu Mar  2 08:03:16 2006
From: P.Jackowski at gust.org.pl (=?UTF-8?B?UGF3ZcWCIEphY2tvd3NraQ==?=)
Date: Thu, 02 Mar 2006 08:03:16 +0100
Subject: [NTG-pdftex] making links work in rotated text
In-Reply-To: <87hd6i6nym.fsf@vsu.ru>
References: <87hd6i6nym.fsf@vsu.ru>
Message-ID: <440698B4.1000302@gust.org.pl>

Hi Vladimir,

> if i typeset e.g. a table in LaTeX's landscape environment,
> and there are some links in the table, they become not clickable
> because of rotation.
> 
> it is a known problem, as far as i can tell (searching in google shows
> that; the reason seems to be that the clickable areas links remain
> where they were before the rotation, i.e. they are not affected by the
> rotation, unlike the text)...

Annotations position is absolute. pdfman says that is for sake of speed 
and don't think anybody will touch it in 'not too distant future' -) You 
can make any geometrical transformations on boxes, and once the box is 
tranformed in the way you want, put it into the link.

BR,
-- 
Pawe/l Jackowski
P.Jackowski at gust.org.pl

From oberdiek at uni-freiburg.de  Thu Mar  2 09:40:16 2006
From: oberdiek at uni-freiburg.de (Heiko Oberdiek)
Date: Thu, 2 Mar 2006 09:40:16 +0100
Subject: [NTG-pdftex] making links work in rotated text
In-Reply-To: <440698B4.1000302@gust.org.pl>
References: <87hd6i6nym.fsf@vsu.ru> <440698B4.1000302@gust.org.pl>
Message-ID: <20060302084015.GA31030@irwin.vpn.uni-freiburg.de>

On Thu, Mar 02, 2006 at 08:03:16AM +0100, Pawe?? Jackowski wrote:

> Hi Vladimir,
> 
> > if i typeset e.g. a table in LaTeX's landscape environment,
> > and there are some links in the table, they become not clickable
> > because of rotation.
> > 
> > it is a known problem, as far as i can tell (searching in google shows
> > that; the reason seems to be that the clickable areas links remain
> > where they were before the rotation, i.e. they are not affected by the
> > rotation, unlike the text)...
> 
> Annotations position is absolute. pdfman says that is for sake of speed 
> and don't think anybody will touch it in 'not too distant future' -) You 
> can make any geometrical transformations on boxes, and once the box is 
> tranformed in the way you want, put it into the link.

The problem is not a transformation of stuff inside a link,
but of transformations of stuff that contain the link.
Transformations (scaling, rotating) is done by \pdfliteral.
pdfTeX doesn't interpret the contents of \pdfliteral, thus it
misses the transformations.
  Probably transformations should be performed by a new primititive
to pdfTeX that changes the current transfer matrix. And pdfTeX is
notified about the transformation and can use correct link and
anchor rectangles then.

The problem is known *many* years. But appearently nobody wants
to implement a solution. :-(

Yours sincerely
  Heiko <oberdiek at uni-freiburg.de>
-- 

From vvv at vsu.ru  Thu Mar  2 11:46:15 2006
From: vvv at vsu.ru (Vladimir Volovich)
Date: Thu, 02 Mar 2006 13:46:15 +0300
Subject: [NTG-pdftex] making links work in rotated text
In-Reply-To: <440698B4.1000302@gust.org.pl> (=?iso-8859-2?Q?Pawe=B3?=
	Jackowski's message of "Thu, 02 Mar 2006 08:03:16 +0100")
References: <87hd6i6nym.fsf@vsu.ru> <440698B4.1000302@gust.org.pl>
Message-ID: <874q2ht98o.fsf@vvv.vsu.ru>

Hi Pawe?,

"PJ" == Pawe? Jackowski writes:

 PJ> Annotations position is absolute. pdfman says that is for sake of
 PJ> speed and don't think anybody will touch it in 'not too distant
 PJ> future' -)

sad. currect situation is simply *broken*.

 PJ> You can make any geometrical transformations on boxes, and once
 PJ> the box is tranformed in the way you want, put it into the link.

could you give an example on how to do that?

Best,
v.


From P.Jackowski at gust.org.pl  Thu Mar  2 12:54:57 2006
From: P.Jackowski at gust.org.pl (=?UTF-8?B?UGF3ZcWCIEphY2tvd3NraQ==?=)
Date: Thu, 02 Mar 2006 12:54:57 +0100
Subject: [NTG-pdftex] making links work in rotated text
In-Reply-To: <20060302084015.GA31030@irwin.vpn.uni-freiburg.de>
References: <87hd6i6nym.fsf@vsu.ru> <440698B4.1000302@gust.org.pl>
	<20060302084015.GA31030@irwin.vpn.uni-freiburg.de>
Message-ID: <4406DD11.3050402@gust.org.pl>

Heiko:
> The problem is not a transformation of stuff inside a link,
> but of transformations of stuff that contain the link.
> Transformations (scaling, rotating) is done by \pdfliteral.
> pdfTeX doesn't interpret the contents of \pdfliteral, thus it
> misses the transformations[...]

Yes, and this is one of pdfTeX liitations. The only workaround is to 
make links after geometry transformation... That could be not trivial, 
if one need to have rotated and still linked list of contents or 
something -)

Regards,
-- 
Pawe/l Jackowski
P.Jackowski at gust.org.pl

From oberdiek at uni-freiburg.de  Thu Mar  2 13:32:49 2006
From: oberdiek at uni-freiburg.de (Heiko Oberdiek)
Date: Thu, 2 Mar 2006 13:32:49 +0100
Subject: [NTG-pdftex] making links work in rotated text
In-Reply-To: <4406DD11.3050402@gust.org.pl>
References: <87hd6i6nym.fsf@vsu.ru> <440698B4.1000302@gust.org.pl>
	<20060302084015.GA31030@irwin.vpn.uni-freiburg.de>
	<4406DD11.3050402@gust.org.pl>
Message-ID: <20060302123248.GA1999@irwin.vpn.uni-freiburg.de>

On Thu, Mar 02, 2006 at 12:54:57PM +0100, Pawe?? Jackowski wrote:

> Heiko:
> > The problem is not a transformation of stuff inside a link,
> > but of transformations of stuff that contain the link.
> > Transformations (scaling, rotating) is done by \pdfliteral.
> > pdfTeX doesn't interpret the contents of \pdfliteral, thus it
> > misses the transformations[...]
> 
> Yes, and this is one of pdfTeX liitations. The only workaround is to 
> make links after geometry transformation... That could be not trivial, 
> if one need to have rotated and still linked list of contents or 
> something -)

In my option the time is better invested in fixing pdfTeX
than trying difficult incomplete workarounds at TeX macro level.

Yours sincerely
  Heiko <oberdiek at uni-freiburg.de>
-- 

From P.Jackowski at gust.org.pl  Thu Mar  2 14:15:47 2006
From: P.Jackowski at gust.org.pl (=?UTF-8?B?UGF3ZcWCIEphY2tvd3NraQ==?=)
Date: Thu, 02 Mar 2006 14:15:47 +0100
Subject: [NTG-pdftex] making links work in rotated text
In-Reply-To: <20060302123248.GA1999@irwin.vpn.uni-freiburg.de>
References: <87hd6i6nym.fsf@vsu.ru>
	<440698B4.1000302@gust.org.pl>	<20060302084015.GA31030@irwin.vpn.uni-freiburg.de>	<4406DD11.3050402@gust.org.pl>
	<20060302123248.GA1999@irwin.vpn.uni-freiburg.de>
Message-ID: <4406F003.9040900@gust.org.pl>


> In my option the time is better invested in fixing pdfTeX
> than trying difficult incomplete workarounds at TeX macro level.

Ye, but how do you imageine such fix? New primitives for transformations?
-- 
Pawe/l Jackowski
P.Jackowski at gust.org.pl

From martin at oneiros.de  Thu Mar  2 14:25:41 2006
From: martin at oneiros.de (Martin =?iso-8859-1?Q?Schr=F6der?=)
Date: Thu, 2 Mar 2006 14:25:41 +0100
Subject: [NTG-pdftex] making links work in rotated text
In-Reply-To: <4406F003.9040900@gust.org.pl>
References: <87hd6i6nym.fsf@vsu.ru> <440698B4.1000302@gust.org.pl>
	<20060302084015.GA31030@irwin.vpn.uni-freiburg.de>
	<4406DD11.3050402@gust.org.pl>
	<20060302123248.GA1999@irwin.vpn.uni-freiburg.de>
	<4406F003.9040900@gust.org.pl>
Message-ID: <20060302132541.GA2899@lucien.oneiros.kn-bremen.de>

On 2006-03-02 14:15:47 +0100, Pawel Jackowski wrote:
> Ye, but how do you imageine such fix? New primitives for transformations?

Seems to be the way. pdfTeX has to know of these transformations.

Best
    Martin
-- 
                    http://www.tm.oneiros.de

From oberdiek at uni-freiburg.de  Thu Mar  2 14:48:17 2006
From: oberdiek at uni-freiburg.de (Heiko Oberdiek)
Date: Thu, 2 Mar 2006 14:48:17 +0100
Subject: [NTG-pdftex] making links work in rotated text
In-Reply-To: <4406F003.9040900@gust.org.pl>
References: <87hd6i6nym.fsf@vsu.ru> <440698B4.1000302@gust.org.pl>
	<20060302084015.GA31030@irwin.vpn.uni-freiburg.de>
	<4406DD11.3050402@gust.org.pl>
	<20060302123248.GA1999@irwin.vpn.uni-freiburg.de>
	<4406F003.9040900@gust.org.pl>
Message-ID: <20060302134817.GA3107@irwin.vpn.uni-freiburg.de>

On Thu, Mar 02, 2006 at 02:15:47PM +0100, Pawe?? Jackowski wrote:

> 
> > In my option the time is better invested in fixing pdfTeX
> > than trying difficult incomplete workarounds at TeX macro level.
> 
> Ye, but how do you imageine such fix? New primitives for transformations?

Yes, for changing the CTM, perhaps similar to \pdfliteral,
but with a syntax that saves parsing of code in \pdfliteral.
With the CTM the rotate and scale transformations can be
expressed (would go to pdftex.def).
  Probably we also need something for the save and restore
operators, because these operators can have affect the CTM
also. This is more work to implement, because a stack is
necessary.

Yours sincerely
  Heiko <oberdiek at uni-freiburg.de>
-- 

From pragma at wxs.nl  Thu Mar  2 16:43:17 2006
From: pragma at wxs.nl (Hans Hagen)
Date: Thu, 02 Mar 2006 16:43:17 +0100
Subject: [NTG-pdftex] making links work in rotated text
In-Reply-To: <874q2ht98o.fsf@vvv.vsu.ru>
References: <87hd6i6nym.fsf@vsu.ru> <440698B4.1000302@gust.org.pl>
	<874q2ht98o.fsf@vvv.vsu.ru>
Message-ID: <44071295.4080002@wxs.nl>

Vladimir Volovich wrote:
> Hi Pawe?,
>
> "PJ" == Pawe? Jackowski writes:
>
>  PJ> Annotations position is absolute. pdfman says that is for sake of
>  PJ> speed and don't think anybody will touch it in 'not too distant
>  PJ> future' -)
>
> sad. currect situation is simply *broken*.
>   
not broken, it's just not supported and this is a known limitation; 
annotations have their own layer in pdf and one could as well consider 
it a limitation of the pdf format that it has annotations not as part of 
the text stream

in order to support this properly we need something

  \pdfcm set|reset|push|pop num num num num num num

the tricky thing is that

- pdftex needs to apply the values to the annots dimensions directly 
(not delayed to shipout)
- because sometimes we need to add info to objects (resources, annot 
dicts) we also need

  \pdfcmdimen <dimen> which returns the dimen with the applied current cm

so that we can do things like [0 0  \the\pdfcmdimen\wd0 \space 
\the\pdfcmdimen\ht0] and alike

and this should cooperate nicely with the already present cm stuff in 
pdftex (recently cleaned up by hartmut, so maybe he can foresee where 
things may fail

one should be careful with annotation anyway, annotation based 
multimedia features sometimes fail to scale/rotate, but that's a biewer 
problem; nowadays one can at least specify that annotation follow the 
page rotation (in the viewer; NoZoom NoRotate flags)

Hans



-----------------------------------------------------------------
                                          Hans Hagen | PRAGMA ADE
              Ridderstraat 27 | 8061 GH Hasselt | The Netherlands
     tel: 038 477 53 69 | fax: 038 477 53 74 | www.pragma-ade.com
                                             | www.pragma-pod.nl
-----------------------------------------------------------------


From oberdiek at uni-freiburg.de  Thu Mar  2 16:59:35 2006
From: oberdiek at uni-freiburg.de (Heiko Oberdiek)
Date: Thu, 2 Mar 2006 16:59:35 +0100
Subject: [NTG-pdftex] making links work in rotated text
In-Reply-To: <44071295.4080002@wxs.nl>
References: <87hd6i6nym.fsf@vsu.ru> <440698B4.1000302@gust.org.pl>
	<874q2ht98o.fsf@vvv.vsu.ru> <44071295.4080002@wxs.nl>
Message-ID: <20060302155935.GA6317@irwin.vpn.uni-freiburg.de>

On Thu, Mar 02, 2006 at 04:43:17PM +0100, Hans Hagen wrote:

> in order to support this properly we need something
> 
>   \pdfcm set|reset|push|pop num num num num num num
> 
> the tricky thing is that
> 
> - pdftex needs to apply the values to the annots dimensions directly 
> (not delayed to shipout)
> - because sometimes we need to add info to objects (resources, annot 
> dicts) we also need

Quite impossible, because the final location of the boxes
is not known before shipout time.

>   \pdfcmdimen <dimen> which returns the dimen with the applied current cm

But why not using the same method that is used for the current
position? \pdfsavepos, \pdflast(x,y)pos?

> so that we can do things like [0 0  \the\pdfcmdimen\wd0 \space 
> \the\pdfcmdimen\ht0] and alike

In the second run this would be correct then.

Yours sincerely
  Heiko <oberdiek at uni-freiburg.de>
-- 

From hartmut_henkel at gmx.de  Thu Mar  2 20:32:21 2006
From: hartmut_henkel at gmx.de (Hartmut Henkel)
Date: Thu, 2 Mar 2006 20:32:21 +0100 (CET)
Subject: [NTG-pdftex] making links work in rotated text
In-Reply-To: <20060302155935.GA6317@irwin.vpn.uni-freiburg.de>
References: <87hd6i6nym.fsf@vsu.ru> <440698B4.1000302@gust.org.pl>
	<874q2ht98o.fsf@vvv.vsu.ru> <44071295.4080002@wxs.nl>
	<20060302155935.GA6317@irwin.vpn.uni-freiburg.de>
Message-ID: <Pine.LNX.4.64.0603022019470.3204@hahepc1.hahe>

On Thu, 2 Mar 2006, Heiko Oberdiek wrote:

> On Thu, Mar 02, 2006 at 04:43:17PM +0100, Hans Hagen wrote:
>
> > in order to support this properly we need something
> >
> >   \pdfcm set|reset|push|pop num num num num num num
> >
> > the tricky thing is that
> >
> > - pdftex needs to apply the values to the annots dimensions directly
> > (not delayed to shipout)
> > - because sometimes we need to add info to objects (resources, annot
> > dicts) we also need
>
> Quite impossible, because the final location of the boxes
> is not known before shipout time.
>
> >   \pdfcmdimen <dimen> which returns the dimen with the applied current cm
>
> But why not using the same method that is used for the current
> position? \pdfsavepos, \pdflast(x,y)pos?

in principle similar to letting TeX make nested x/y position transforms
for \pdfsavepos through boxes, one step later xpdf should be able to
resolve nested cm transforms, as it can display ready pages. So if one
somehow feeds the positions of the rectangle corners from TeX into the
page stream, maybe as 4 characters in some special font, perhaps there
is some way that one can get the final transformed rectangle coordinates
from the xpdf display engine? Derek knows for sure...

Regards, Hartmut

From pragma at wxs.nl  Fri Mar  3 00:14:40 2006
From: pragma at wxs.nl (Hans Hagen)
Date: Fri, 03 Mar 2006 00:14:40 +0100
Subject: [NTG-pdftex] making links work in rotated text
In-Reply-To: <20060302155935.GA6317@irwin.vpn.uni-freiburg.de>
References: <87hd6i6nym.fsf@vsu.ru> <440698B4.1000302@gust.org.pl>
	<874q2ht98o.fsf@vvv.vsu.ru> <44071295.4080002@wxs.nl>
	<20060302155935.GA6317@irwin.vpn.uni-freiburg.de>
Message-ID: <44077C60.6070105@wxs.nl>

Heiko Oberdiek wrote:
> On Thu, Mar 02, 2006 at 04:43:17PM +0100, Hans Hagen wrote:
>
>   
>> in order to support this properly we need something
>>
>>   \pdfcm set|reset|push|pop num num num num num num
>>
>> the tricky thing is that
>>
>> - pdftex needs to apply the values to the annots dimensions directly 
>> (not delayed to shipout)
>> - because sometimes we need to add info to objects (resources, annot 
>> dicts) we also need
>>     
>
> Quite impossible, because the final location of the boxes
> is not known before shipout time.
>   
sure, but there could be information stored (the accumulated cm) with 
the annotation node that is resolved later (just before the shipout); of 
course a problem is that such thingies can be out in boxes and moved around
>   
>>   \pdfcmdimen <dimen> which returns the dimen with the applied current cm
>>     
>
> But why not using the same method that is used for the current
> position? \pdfsavepos, \pdflast(x,y)pos?
>   
something like that indeed
>   
>> so that we can do things like [0 0  \the\pdfcmdimen\wd0 \space 
>> \the\pdfcmdimen\ht0] and alike
>>     
>
> In the second run this would be correct then.
>   
hm, for this to work, we need a one-pass solution, since there can be many annotations (btw, positions already can put a big burden on a second pass).  

Hans 

-----------------------------------------------------------------
                                          Hans Hagen | PRAGMA ADE
              Ridderstraat 27 | 8061 GH Hasselt | The Netherlands
     tel: 038 477 53 69 | fax: 038 477 53 74 | www.pragma-ade.com
                                             | www.pragma-pod.nl
-----------------------------------------------------------------


From oberdiek at uni-freiburg.de  Fri Mar  3 00:36:34 2006
From: oberdiek at uni-freiburg.de (Heiko Oberdiek)
Date: Fri, 3 Mar 2006 00:36:34 +0100
Subject: [NTG-pdftex] making links work in rotated text
In-Reply-To: <44077C60.6070105@wxs.nl>
References: <87hd6i6nym.fsf@vsu.ru> <440698B4.1000302@gust.org.pl>
	<874q2ht98o.fsf@vvv.vsu.ru> <44071295.4080002@wxs.nl>
	<20060302155935.GA6317@irwin.vpn.uni-freiburg.de>
	<44077C60.6070105@wxs.nl>
Message-ID: <20060302233634.GA29477@irwin.vpn.uni-freiburg.de>

On Fri, Mar 03, 2006 at 12:14:40AM +0100, Hans Hagen wrote:

> Heiko Oberdiek wrote:

> > But why not using the same method that is used for the current
> > position? \pdfsavepos, \pdflast(x,y)pos?
> >   
> something like that indeed
> >   
> >> so that we can do things like [0 0  \the\pdfcmdimen\wd0 \space 
> >> \the\pdfcmdimen\ht0] and alike
> >>     
> >
> > In the second run this would be correct then.
> >   
> hm, for this to work, we need a one-pass solution, since there can be many annotations (btw, positions already can put a big burden on a second pass).  

The automatically added rectangles are available in one-pass.
Only if interaction is needed with TeX macro level, then there
is a need for a second pass. Or have I misunderstood something?

Yours sincerely
  Heiko <oberdiek at uni-freiburg.de>
-- 

From martin at oneiros.de  Fri Mar  3 16:28:12 2006
From: martin at oneiros.de (Martin =?iso-8859-1?Q?Schr=F6der?=)
Date: Fri, 3 Mar 2006 16:28:12 +0100
Subject: [NTG-pdftex] Reminder: \pdfretval exists
Message-ID: <20060303152812.GG22515@lucien.oneiros.kn-bremen.de>

Hi,
just a reminder: \pdfretval exists. Currently it's only used with
\pdfobj useobjnum. I'm sure there are more uses. :-)

Best
    Martin
-- 
                    http://www.tm.oneiros.de

From reinhard.kotucha at web.de  Sat Mar 11 22:35:09 2006
From: reinhard.kotucha at web.de (Reinhard Kotucha)
Date: Sat, 11 Mar 2006 22:35:09 +0100
Subject: [NTG-pdftex] DANTE 2006
Message-ID: <17427.17037.822293.370619@zarniwoop.ms25.local>

Hi,
for all of you who had not the opportunity to come to Berlin, here is
a short summary of pdfTeX related talks.

Till Tantau, the author of beamer, held a talk about TikZ (a frontend
to pgf, the portable graphics format) which is a very powerful macro
package to prepare inline graphics in latex/plain/context documents.

Currently pgf does all calculations in tex, which is quite limited.
He is looking forward to make use of LuaTeX in the future.  He expects
that trigonometric functions will be about hundred times faster then,
and TikZ will be more powerful as it is today.

Jonathan Kew gave an impressive demonstration of XeTeX.  Though it
runs on Mac OS/X systems at the moment only, he plans to port it to
Linux and maybe Windows so that it can be part of TeXLive-2006.

He said that both, XeTeX and pdfTeX, are moving targets at the moment,
but he is thinking about merging them in the future. 

Yannis Haralambous held a talk with the title "Implementing OpenType
and textemes into Omega".  He already talked about it in
Pont-a-Mousson, see:

  http://www.dante.de/dante/events/eurotex/papers/MOT02.pdf

The good news is that he intends to present the pre-processor as a
stand-alone program providing XML output at the EuroTeX 2006.

Martin held a talk with the title "pdfTeX - gestern, heute, morgen"
("pdfTeX - yesterday, today, tomorrow") but I think there is no need
to go into detail on this mailing list.

Martin and Hartmut will hopefully tell you everything I forgot.

Regards,
  Reinhard

-- 
----------------------------------------------------------------------------
Reinhard Kotucha			              Phone: +49-511-4592165
Marschnerstr. 25
D-30167 Hannover	                      mailto:reinhard.kotucha at web.de
----------------------------------------------------------------------------
Microsoft isn't the answer. Microsoft is the question, and the answer is NO.
----------------------------------------------------------------------------



From P.Jackowski at gust.org.pl  Mon Mar 13 15:23:09 2006
From: P.Jackowski at gust.org.pl (=?UTF-8?B?UGF3ZcWCIEphY2tvd3NraQ==?=)
Date: Mon, 13 Mar 2006 15:23:09 +0100
Subject: [NTG-pdftex] DANTE 2006
In-Reply-To: <17427.17037.822293.370619@zarniwoop.ms25.local>
References: <17427.17037.822293.370619@zarniwoop.ms25.local>
Message-ID: <4415804D.8090004@gust.org.pl>

Thanks Reinchardt for this summary.

Regards,
-- 
Pawe/l Jackowski
P.Jackowski at gust.org.pl

From reinhard.kotucha at web.de  Tue Mar 14 00:06:41 2006
From: reinhard.kotucha at web.de (Reinhard Kotucha)
Date: Tue, 14 Mar 2006 00:06:41 +0100
Subject: [NTG-pdftex] /cwm
Message-ID: <17429.64257.692982.936258@zarniwoop.ms25.local>

Hi,
/cwm (compwordmark) in AGL or #200C in Unicode, see:

     http://www.unicode.org/charts

(ZERO WIDTH NON JOINER) is a glyph with zero width which is intended
to mark word boundaries.

In German, the word "Auflage" should not contain an "fl"-ligature
because it is composed from two words.  There is a macro which allows
for breaking such ligatures in german.sty and babel[german].

The glyph /cwm has never been used by TeX but Walter considers to make
use of it in the future.  The advantage would be that the behaviour of
the TeX macro which breaks ligatures at word boundaries will depend on
the font, while it is unaware of the font currently in use now.

If I understood Walter correctly, he wants to add kerning at such word
boundaries in a way that the amount of kerning depends on the current
font.  Currently the same amount of kerning is applied to all fonts.

However, I'm sure that the glyph /cwm is missing in many fonts.

On the other hand, if we need kerning, we do not need a special glyph
from a font, create a virtual font with modified metrics, and so on.

When we have OTF support some day, I assume that we need some new
primitives anyway which support additional metrics derived from OTF
files which are not supported by \fontdimen.

As far as I can see, it's reasonable to add a new primitive so that
you can write

   \font\myfont=xyz
   \myfont
   \compwordkern\font = .2em

The TeX macro which breaks ligatures then can insert \compwordkern for
the current font.

This way we can have different kernings for different fonts and we are
completey independ of the fonts we use.

And, of course, I assume that microtype.sty will hide all the low-level
stuff...

Regards,
  Reinhard

-- 
----------------------------------------------------------------------------
Reinhard Kotucha			              Phone: +49-511-4592165
Marschnerstr. 25
D-30167 Hannover	                      mailto:reinhard.kotucha at web.de
----------------------------------------------------------------------------
Microsoft isn't the answer. Microsoft is the question, and the answer is NO.
----------------------------------------------------------------------------



From vvv at vsu.ru  Tue Mar 14 00:20:53 2006
From: vvv at vsu.ru (Vladimir Volovich)
Date: Tue, 14 Mar 2006 02:20:53 +0300
Subject: [NTG-pdftex] /cwm
In-Reply-To: <17429.64257.692982.936258@zarniwoop.ms25.local> (Reinhard
	Kotucha's message of "Tue, 14 Mar 2006 00:06:41 +0100")
References: <17429.64257.692982.936258@zarniwoop.ms25.local>
Message-ID: <87bqwand7u.fsf@vvv.vsu.ru>

"RK" == Reinhard Kotucha writes:

 RK> As far as I can see, it's reasonable to add a new primitive so
 RK> that you can write

 RK>    \font\myfont=xyz \myfont \compwordkern\font = .2em

 RK> The TeX macro which breaks ligatures then can insert
 RK> \compwordkern for the current font.

 RK> This way we can have different kernings for different fonts and
 RK> we are completey independ of the fonts we use.

i think that you may utilize fontdimen for that - no need for a new
macro...  after loading a font, you are allowed to modify the
fontdimen registers (or you may decide to store the compwordkern in
the fontdimen directly in the TFM). as an advantage, it will also be
automatically scaled depending on the "magnification" of the font.

Best,
v.


From reinhard.kotucha at web.de  Tue Mar 14 00:38:04 2006
From: reinhard.kotucha at web.de (Reinhard Kotucha)
Date: Tue, 14 Mar 2006 00:38:04 +0100
Subject: [NTG-pdftex] /cwm
In-Reply-To: <87bqwand7u.fsf@vvv.vsu.ru>
References: <17429.64257.692982.936258@zarniwoop.ms25.local>
	<87bqwand7u.fsf@vvv.vsu.ru>
Message-ID: <17430.604.751380.654602@zarniwoop.ms25.local>

>>>>> "Vladimir" == Vladimir Volovich <vvv at vsu.ru> writes:

  > "RK" == Reinhard Kotucha writes:
  RK> As far as I can see, it's reasonable to add a new primitive so
  RK> that you can write

  RK> \font\myfont=xyz \myfont \compwordkern\font = .2em

  RK> The TeX macro which breaks ligatures then can insert
  RK> \compwordkern for the current font.

  RK> This way we can have different kernings for different fonts and
  RK> we are completey independ of the fonts we use.

  > i think that you may utilize fontdimen for that - no need for a
  > new macro...  after loading a font, you are allowed to modify the
  > fontdimen registers (or you may decide to store the compwordkern
  > in the fontdimen directly in the TFM). as an advantage, it will
  > also be automatically scaled depending on the "magnification" of
  > the font.

Yes, but isn't the number of fontdimen registers quite limited?

Regards,
  Reinhard

-- 
----------------------------------------------------------------------------
Reinhard Kotucha			              Phone: +49-511-4592165
Marschnerstr. 25
D-30167 Hannover	                      mailto:reinhard.kotucha at web.de
----------------------------------------------------------------------------
Microsoft isn't the answer. Microsoft is the question, and the answer is NO.
----------------------------------------------------------------------------



From vvv at vsu.ru  Tue Mar 14 00:49:25 2006
From: vvv at vsu.ru (Vladimir Volovich)
Date: Tue, 14 Mar 2006 02:49:25 +0300
Subject: [NTG-pdftex] /cwm
In-Reply-To: <17430.604.751380.654602@zarniwoop.ms25.local> (Reinhard
	Kotucha's message of "Tue, 14 Mar 2006 00:38:04 +0100")
References: <17429.64257.692982.936258@zarniwoop.ms25.local>
	<87bqwand7u.fsf@vvv.vsu.ru>
	<17430.604.751380.654602@zarniwoop.ms25.local>
Message-ID: <873bhloqgq.fsf@vvv.vsu.ru>

"RK" == Reinhard Kotucha writes:

 >> i think that you may utilize fontdimen for that - no need for a
 >> new macro...  after loading a font, you are allowed to modify the
 >> fontdimen registers (or you may decide to store the compwordkern
 >> in the fontdimen directly in the TFM). as an advantage, it will
 >> also be automatically scaled depending on the "magnification" of
 >> the font.

 RK> Yes, but isn't the number of fontdimen registers quite limited?

on the contrary - it is pretty-much unlimited...

Best,
v.


From frank at debian.org  Wed Mar 15 14:07:16 2006
From: frank at debian.org (=?iso-8859-1?q?Frank_K=FCster?=)
Date: Wed, 15 Mar 2006 14:07:16 +0100
Subject: [NTG-pdftex] Creating identical PDF files with different pdfTeX runs
Message-ID: <86bqw7g8l7.fsf@alhambra.kuesterei.ch>

Hi,

we (i.e. a couple of Debian developers, taking up old ideas of each
individual and the tests in
http://tug.org/svn/texlive/trunk/Master/support/tests/) are trying to
implement some automated testing of pdf and dvi creation by pdftex.
Possible applications are regression tests for the binary, for
distributions (changed font setup etc.), or for package authors ("does
the new version still cooperate with hyperref?").

For this, it would be great if it were possible to create identical pdf
files in subsequent runs of pdfTeX.  With 

\pdfinfo{/CreationDate (1980-09-09)}
\year=1980 \month=9 \day=9 \time=10
\pdfcompresslevel0

I get pdf files that can be compared, but only after some grepping:

	egrep -a -v '/BaseFont|/FontName|/UniqueID|/ID|/CreationDate' $< > $@

With dvipdfmx (and perhaps with newer pdfTeX versions than the one in
teTeX) /CMap or something like this needs to be excluded, too.


Is it possible to achieve identical pdf files directly, by adding the
proper commands, or would it be possible to add this feature?

TIA, Frank
-- 
Frank K?ster
Single Molecule Spectroscopy, Protein Folding @ Inst. f. Biochemie, Univ. Z?rich
Debian Developer (teTeX)


From pragma at wxs.nl  Wed Mar 15 14:21:57 2006
From: pragma at wxs.nl (Hans Hagen)
Date: Wed, 15 Mar 2006 14:21:57 +0100
Subject: [NTG-pdftex] Creating identical PDF files with different pdfTeX
 runs
In-Reply-To: <86bqw7g8l7.fsf@alhambra.kuesterei.ch>
References: <86bqw7g8l7.fsf@alhambra.kuesterei.ch>
Message-ID: <441814F5.9030203@wxs.nl>

? wrote:
> Hi,
>
> we (i.e. a couple of Debian developers, taking up old ideas of each
> individual and the tests in
> http://tug.org/svn/texlive/trunk/Master/support/tests/) are trying to
> implement some automated testing of pdf and dvi creation by pdftex.
> Possible applications are regression tests for the binary, for
> distributions (changed font setup etc.), or for package authors ("does
> the new version still cooperate with hyperref?").
>
> For this, it would be great if it were possible to create identical pdf
> files in subsequent runs of pdfTeX.  With 
>
> \pdfinfo{/CreationDate (1980-09-09)}
> \year=1980 \month=9 \day=9 \time=10
> \pdfcompresslevel0
>
> I get pdf files that can be compared, but only after some grepping:
>
> 	egrep -a -v '/BaseFont|/FontName|/UniqueID|/ID|/CreationDate' $< > $@
>
> With dvipdfmx (and perhaps with newer pdfTeX versions than the one in
> teTeX) /CMap or something like this needs to be excluded, too.
>
>
> Is it possible to achieve identical pdf files directly, by adding the
> proper commands, or would it be possible to add this feature?
>   
i think that the changes are nil

- pdf itself is moving which may demand additional of different resources being added 
- the pdftex stream depends on for instance cm directives and font references and there has been changes in this area over time (improvements like collapsing, removing redundant code) 
- macro packages may change their implementations of annotations, color, graphics and such, which results in different object ordering, numbering and content
- macro packages may add/support new features which in turn may result in differences between pdf files; 
- macro packages may improve/change/patch special things (hz metrics and such)
- font resources may change (metrics are normally stable, but the rest may change) 

the best you can do is not to look at the pdf file, but to parse the log for errors, like overfull boxes which can be signals of old/new code doing weird things, missing fonts, map files, encodings and characters.

Hans 

-----------------------------------------------------------------
                                          Hans Hagen | PRAGMA ADE
              Ridderstraat 27 | 8061 GH Hasselt | The Netherlands
     tel: 038 477 53 69 | fax: 038 477 53 74 | www.pragma-ade.com
                                             | www.pragma-pod.nl
-----------------------------------------------------------------


From martin at oneiros.de  Wed Mar 15 14:25:04 2006
From: martin at oneiros.de (Martin =?iso-8859-1?Q?Schr=F6der?=)
Date: Wed, 15 Mar 2006 14:25:04 +0100
Subject: [NTG-pdftex] Creating identical PDF files with different pdfTeX
	runs
In-Reply-To: <86bqw7g8l7.fsf@alhambra.kuesterei.ch>
References: <86bqw7g8l7.fsf@alhambra.kuesterei.ch>
Message-ID: <20060315132504.GE13098@lucien.oneiros.kn-bremen.de>

On 2006-03-15 14:07:16 +0100, Frank K?ster wrote:
> we (i.e. a couple of Debian developers, taking up old ideas of each
> individual and the tests in
> http://tug.org/svn/texlive/trunk/Master/support/tests/) are trying to
> implement some automated testing of pdf and dvi creation by pdftex.
> Possible applications are regression tests for the binary, for
> distributions (changed font setup etc.), or for package authors ("does
> the new version still cooperate with hyperref?").

Good idea.

> For this, it would be great if it were possible to create identical pdf
> files in subsequent runs of pdfTeX.  With 

This will only get you so far. If you want to compare PDFs, you
should not test for identical files, but for identical output:
Render the PDF to a bitmap (e.g. with ghostscript) and compare
the generated bitmaps. Otherwise your test will fail whenever the
output of pdfTeX is changed in any way. Even then your tests will
fail when we improve the typesetting of pdfTeX. :-}

> \pdfinfo{/CreationDate (1980-09-09)}
> \year=1980 \month=9 \day=9 \time=10
> \pdfcompresslevel0
> 
> I get pdf files that can be compared, but only after some grepping:
> 
> 	egrep -a -v '/BaseFont|/FontName|/UniqueID|/ID|/CreationDate' $< > $@

A start would be setting the system date -- this would seed /ID
and /CreationDate. Note that /ID also includes the filename.

> Is it possible to achieve identical pdf files directly, by adding the
> proper commands, or would it be possible to add this feature?

Currently it's impossible (and that's a feature :). Adding the
feature can't be that hard, though.

Best
    Martin
-- 
                    http://www.tm.oneiros.de

From frank at debian.org  Wed Mar 15 14:39:13 2006
From: frank at debian.org (=?iso-8859-1?q?Frank_K=FCster?=)
Date: Wed, 15 Mar 2006 14:39:13 +0100
Subject: [NTG-pdftex] Creating identical PDF files with different pdfTeX
 runs
In-Reply-To: <441814F5.9030203@wxs.nl> (Hans Hagen's message of "Wed, 15 Mar
	2006 14:21:57 +0100")
References: <86bqw7g8l7.fsf@alhambra.kuesterei.ch> <441814F5.9030203@wxs.nl>
Message-ID: <86veufesji.fsf@alhambra.kuesterei.ch>

Hans Hagen <pragma at wxs.nl> wrote:

> - pdf itself is moving which may demand additional of different
> resources being added - the pdftex stream depends on for instance cm
> directives and font references and there has been changes in this area
> over time (improvements like collapsing, removing redundant code) -
> macro packages may change their implementations of annotations, color,
> graphics and such, which results in different object ordering,
> numbering and content
> - macro packages may add/support new features which in turn may result
> in differences between pdf files; - macro packages may
> improve/change/patch special things (hz metrics and such)
> - font resources may change (metrics are normally stable, but the rest
> may change)

I don't think that these arguments make such tests unuseful.  If such
changes occur, the tests will fail, and the known-good documents need to
be regenerated and manually checked.  However, most of the time this
will *not* happen, and then the tests would be very helpful.

> the best you can do is not to look at the pdf file, but to parse the
> log for errors, like overfull boxes which can be signals of old/new
> code doing weird things, missing fonts, map files, encodings and
> characters.

I don't think the log helps.

The log files contain absolute paths, so they would need lots of
replacements before you can even start comparing.  They contain version
information for the packages - but checking whether a new version gives
identical results is one of our goals.  And renamed files, or splitting
a package into different input files loaded by the "master" file, would
completely break when we would try to automatically parse the log file.

Regards, Frank
-- 
Frank K?ster
Single Molecule Spectroscopy, Protein Folding @ Inst. f. Biochemie, Univ. Z?rich
Debian Developer (teTeX)


From frank at debian.org  Wed Mar 15 15:06:43 2006
From: frank at debian.org (=?iso-8859-1?q?Frank_K=FCster?=)
Date: Wed, 15 Mar 2006 15:06:43 +0100
Subject: [NTG-pdftex] Creating identical PDF files with different pdfTeX
 runs
In-Reply-To: <20060315132504.GE13098@lucien.oneiros.kn-bremen.de> (
	=?iso-8859-1?q?Martin_Schr=F6der's_message_of?= "Wed,
	15 Mar 2006 14:25:04 +0100")
References: <86bqw7g8l7.fsf@alhambra.kuesterei.ch>
	<20060315132504.GE13098@lucien.oneiros.kn-bremen.de>
Message-ID: <86lkvber9o.fsf@alhambra.kuesterei.ch>

Martin Schr?der <martin at oneiros.de> wrote:

> On 2006-03-15 14:07:16 +0100, Frank K?ster wrote:
>> we (i.e. a couple of Debian developers, taking up old ideas of each
>> individual and the tests in
>> http://tug.org/svn/texlive/trunk/Master/support/tests/) are trying to
>> implement some automated testing of pdf and dvi creation by pdftex.
>> Possible applications are regression tests for the binary, for
>> distributions (changed font setup etc.), or for package authors ("does
>> the new version still cooperate with hyperref?").
>
> Good idea.
>
>> For this, it would be great if it were possible to create identical pdf
>> files in subsequent runs of pdfTeX.  With 
>
> This will only get you so far. If you want to compare PDFs, you
> should not test for identical files, but for identical output:
> Render the PDF to a bitmap (e.g. with ghostscript) and compare
> the generated bitmaps. Otherwise your test will fail whenever the
> output of pdfTeX is changed in any way. 

That's a point; on the other hand, all I get then is glyphs on a page,
but the information about the internal structure is lost: hyperlinks,
character information (will a search for "fl" find the fl ligature, or
will "?" be pasted correctly?), etc.

> Even then your tests will
> fail when we improve the typesetting of pdfTeX. :-}

I don't expect those tests, or rather the known-good documents, to be
carved in stone.  There will be chances on occasion which require manual
checking of the new document.

I guess it's best to have both kinds of test:  Comparing the bitmaps
gives information about the actual typesetting (and about the
differences you wouldn't spot when checking by eye), comparing the pdf
files gives additional information about the document structure.

> A start would be setting the system date -- this would seed /ID
> and /CreationDate. Note that /ID also includes the filename.

The system date?  You need to be root to do that, or is there a way to
fake the system date in the local environment?

>> Is it possible to achieve identical pdf files directly, by adding the
>> proper commands, or would it be possible to add this feature?
>
> Currently it's impossible (and that's a feature :). Adding the
> feature can't be that hard, though.

I would very much appreciate this.

Regards, Frank
-- 
Frank K?ster
Single Molecule Spectroscopy, Protein Folding @ Inst. f. Biochemie, Univ. Z?rich
Debian Developer (teTeX)


From pragma at wxs.nl  Wed Mar 15 15:41:44 2006
From: pragma at wxs.nl (Hans Hagen)
Date: Wed, 15 Mar 2006 15:41:44 +0100
Subject: [NTG-pdftex] Creating identical PDF files with different pdfTeX
 runs
In-Reply-To: <86veufesji.fsf@alhambra.kuesterei.ch>
References: <86bqw7g8l7.fsf@alhambra.kuesterei.ch> <441814F5.9030203@wxs.nl>
	<86veufesji.fsf@alhambra.kuesterei.ch>
Message-ID: <441827A8.9010004@wxs.nl>

? wrote:
> I don't think the log helps.
>
> The log files contain absolute paths, so they would need lots of
> replacements before you can even start comparing.  They contain version
> information for the packages - but checking whether a new version gives
> identical results is one of our goals.  And renamed files, or splitting
> a package into different input files loaded by the "master" file, would
> completely break when we would try to automatically parse the log file.
>   
i had the impression that you wanted to test if teh pdf files were ok and then you don;t need to compare with older files; just analyze the log for anomalities (like missing resources which point to a problem in the font setup - which is the most probable source of problems); 

regression tests at the macro package (output) level is something else; afaik latex already has regression tests; as said: analyzing the page stream or objects is non trivial, and even simple changes in pdftex or in annot/object/literal support will make a comparison nearly impossible 

Hans 

-----------------------------------------------------------------
                                          Hans Hagen | PRAGMA ADE
              Ridderstraat 27 | 8061 GH Hasselt | The Netherlands
     tel: 038 477 53 69 | fax: 038 477 53 74 | www.pragma-ade.com
                                             | www.pragma-pod.nl
-----------------------------------------------------------------


From martin at oneiros.de  Wed Mar 15 15:49:59 2006
From: martin at oneiros.de (Martin =?iso-8859-1?Q?Schr=F6der?=)
Date: Wed, 15 Mar 2006 15:49:59 +0100
Subject: [NTG-pdftex] Creating identical PDF files with different pdfTeX
	runs
In-Reply-To: <86lkvber9o.fsf@alhambra.kuesterei.ch>
References: <86bqw7g8l7.fsf@alhambra.kuesterei.ch>
	<20060315132504.GE13098@lucien.oneiros.kn-bremen.de>
	<86lkvber9o.fsf@alhambra.kuesterei.ch>
Message-ID: <20060315144959.GG13098@lucien.oneiros.kn-bremen.de>

On 2006-03-15 15:06:43 +0100, Frank K?ster wrote:
> Martin Schr?der <martin at oneiros.de> wrote:
> > This will only get you so far. If you want to compare PDFs, you
> > should not test for identical files, but for identical output:
> > Render the PDF to a bitmap (e.g. with ghostscript) and compare
> > the generated bitmaps. Otherwise your test will fail whenever the
> > output of pdfTeX is changed in any way. 
> 
> That's a point; on the other hand, all I get then is glyphs on a page,
> but the information about the internal structure is lost: hyperlinks,
> character information (will a search for "fl" find the fl ligature, or
> will "?" be pasted correctly?), etc.

How far will you get with the logfile with a suitable combination
of \tracingoutput etc.?

> > Even then your tests will
> > fail when we improve the typesetting of pdfTeX. :-}
> 
> I don't expect those tests, or rather the known-good documents, to be
> carved in stone.  There will be chances on occasion which require manual
> checking of the new document.

Agreed.

> I guess it's best to have both kinds of test:  Comparing the bitmaps
> gives information about the actual typesetting (and about the
> differences you wouldn't spot when checking by eye), comparing the pdf
> files gives additional information about the document structure.

Agreed.

> > A start would be setting the system date -- this would seed /ID
> > and /CreationDate. Note that /ID also includes the filename.
> 
> The system date?  You need to be root to do that, or is there a way to
> fake the system date in the local environment?

I don't know. What you would probably need is a way to dump und
set all run-specific settings of pdfTeX (seeds for various random
numbers, date etc).

> >> Is it possible to achieve identical pdf files directly, by adding the
> >> proper commands, or would it be possible to add this feature?
> >
> > Currently it's impossible (and that's a feature :). Adding the
> > feature can't be that hard, though.
> 
> I would very much appreciate this.

File a feature request, please. :-)

Best
    Martin
-- 
                    http://www.tm.oneiros.de

From frank at debian.org  Wed Mar 15 16:57:30 2006
From: frank at debian.org (=?iso-8859-1?q?Frank_K=FCster?=)
Date: Wed, 15 Mar 2006 16:57:30 +0100
Subject: [NTG-pdftex] Creating identical PDF files with different pdfTeX
 runs
In-Reply-To: <441827A8.9010004@wxs.nl> (Hans Hagen's message of "Wed, 15 Mar
	2006 15:41:44 +0100")
References: <86bqw7g8l7.fsf@alhambra.kuesterei.ch> <441814F5.9030203@wxs.nl>
	<86veufesji.fsf@alhambra.kuesterei.ch> <441827A8.9010004@wxs.nl>
Message-ID: <868xrbem51.fsf@alhambra.kuesterei.ch>

Hans Hagen <pragma at wxs.nl> wrote:

> regression tests at the macro package (output) level is something
> else; afaik latex already has regression tests

Oh, very interesting - where are these?

>; as said: analyzing the
> page stream or objects is non trivial, and even simple changes in
> pdftex or in annot/object/literal support will make a comparison
> nearly impossible

So maybe for pdfTeX development mainly the bitmap-based tests are
useful;  but for macro packages, based on a given pdfTeX version, I
think the PDF based tests make sense, too.

Regards, Frank
-- 
Frank K?ster
Single Molecule Spectroscopy, Protein Folding @ Inst. f. Biochemie, Univ. Z?rich
Debian Developer (teTeX)


From reinhard.kotucha at web.de  Thu Mar 16 00:02:58 2006
From: reinhard.kotucha at web.de (Reinhard Kotucha)
Date: Thu, 16 Mar 2006 00:02:58 +0100
Subject: [NTG-pdftex] Creating identical PDF files with different pdfTeX
	runs
In-Reply-To: <86bqw7g8l7.fsf@alhambra.kuesterei.ch>
References: <86bqw7g8l7.fsf@alhambra.kuesterei.ch>
Message-ID: <17432.40226.4156.995469@zarniwoop.ms25.local>

>>>>> "Frank" == Frank K?ster <frank at debian.org> writes:

  > Is it possible to achieve identical pdf files directly, by adding
  > the proper commands, or would it be possible to add this feature?

This would be useful for package authors who want to compare the
output of different versions of their macro packages using the same
version of pdftex.

If you want to compare different versions of pdftex, your tests will
hopefully always fail and it is sufficient to compare file sizes.

For some time Hartmut is trying to convince pdftex to produce
significantly smaller pdf files, especially if font expansion is used.
The current version includes the same font with a modified FontMatrix
for each expasion factor, while the next version will embed each font
only once.

There are a few other things which will not provide such a large
improvement and hence might be postponed for future versions.

As an example, the width of glyphs can be specified by setting a
variable or by providing an array.  pdftex always provides arrays but
for monospaced fonts it is sufficient to set the variable and omit the
array.

Comparing bitmaps, as some people already suggested, is a good thing.

It shouldn't be too difficult to write a script which produces a
bitmap file for each page (using ghostscript) and then creates a file
which consists of lines like

<pagenumber> <md5sum of the bitmap file>

The bitmap files can be removed by the script when it is finished and
standard UNIX tools can be used to examine the output files.

Particularly, diff(1) can be used efficiently.  It will tell you the
numbers of the pages which are different.

However, it would be nice if the pdftex version number could be
retrieved more easily.  At the moment the options "-v" and "--version"
are both quite verbose and provide copyright stuff.

Maybe one of these options should provide the pdftex version
("1.30.7-beta" for example) only and nothing else.  A script might
want to insert the pdftex version number into its output filename, but
at the moment it can only be done using something like sed|awk|perl.

And maybe the output of pdftex {-v,--version} will change in the
future, which will break such scripts.


-- 
----------------------------------------------------------------------------
Reinhard Kotucha			              Phone: +49-511-4592165
Marschnerstr. 25
D-30167 Hannover	                      mailto:reinhard.kotucha at web.de
----------------------------------------------------------------------------
Microsoft isn't the answer. Microsoft is the question, and the answer is NO.
----------------------------------------------------------------------------



From reinhard.kotucha at web.de  Thu Mar 16 01:05:34 2006
From: reinhard.kotucha at web.de (Reinhard Kotucha)
Date: Thu, 16 Mar 2006 01:05:34 +0100
Subject: [NTG-pdftex] Creating identical PDF files with different
	pdfTeX	runs
In-Reply-To: <17432.40226.4156.995469@zarniwoop.ms25.local>
References: <86bqw7g8l7.fsf@alhambra.kuesterei.ch>
	<17432.40226.4156.995469@zarniwoop.ms25.local>
Message-ID: <17432.43982.685574.486178@zarniwoop.ms25.local>

Sorry, I accidentally sent the previous mail before it was ready.

There is another point I'd like to put on my wish list.

When Knuth developed TeX, he obviously did not take into account that
people want to pipe STDOUT into other programs.

It would be nice to have an option "-q" or "--quiet" which instructs
TeX to suppress any output except what is reqested implicitly by
\write16, for instance.

If you want to determine the number of pages in a particular pdf file,
you can say

 pdftex '\pdfximage page 1 {file.pdf}\write16{\the\pdflastximagepages}\end'

but you get a lot of more or less useless messages and have to filter
the output somehow.

Regards,
  Reinhard
 
-- 
----------------------------------------------------------------------------
Reinhard Kotucha			              Phone: +49-511-4592165
Marschnerstr. 25
D-30167 Hannover	                      mailto:reinhard.kotucha at web.de
----------------------------------------------------------------------------
Microsoft isn't the answer. Microsoft is the question, and the answer is NO.
----------------------------------------------------------------------------



From hanthethanh at gmail.com  Thu Mar 16 04:42:25 2006
From: hanthethanh at gmail.com (The Thanh Han)
Date: Thu, 16 Mar 2006 10:42:25 +0700
Subject: [NTG-pdftex] Creating identical PDF files with different pdfTeX
	runs
In-Reply-To: <86bqw7g8l7.fsf@alhambra.kuesterei.ch>
References: <86bqw7g8l7.fsf@alhambra.kuesterei.ch>
Message-ID: <20060316034225.GH27955@monty.localnet>

there are a few places where pdftex takes the current time
into account to generate certain tags. Implementing a
primitive to leave out date-related things is not difficult.
Can you please give some further explain what it would be useful
for? 
    
Also note that even when such a primitive is available, the
chance you get the same output for a given input file is
rather low. You need to ensure that *all* relevant files
(like font-related stuff, macro, figure etc.) are also the
same.

Thanh

On Wed, Mar 15, 2006 at 02:07:16PM +0100, Frank K?ster wrote:
> Hi,
> 
> we (i.e. a couple of Debian developers, taking up old ideas of each
> individual and the tests in
> http://tug.org/svn/texlive/trunk/Master/support/tests/) are trying to
> implement some automated testing of pdf and dvi creation by pdftex.
> Possible applications are regression tests for the binary, for
> distributions (changed font setup etc.), or for package authors ("does
> the new version still cooperate with hyperref?").
> 
> For this, it would be great if it were possible to create identical pdf
> files in subsequent runs of pdfTeX.  With 
> 
> \pdfinfo{/CreationDate (1980-09-09)}
> \year=1980 \month=9 \day=9 \time=10
> \pdfcompresslevel0
> 
> I get pdf files that can be compared, but only after some grepping:
> 
> 	egrep -a -v '/BaseFont|/FontName|/UniqueID|/ID|/CreationDate' $< > $@
> 
> With dvipdfmx (and perhaps with newer pdfTeX versions than the one in
> teTeX) /CMap or something like this needs to be excluded, too.
> 
> 
> Is it possible to achieve identical pdf files directly, by adding the
> proper commands, or would it be possible to add this feature?
> 
> TIA, Frank
> -- 
> Frank K?ster
> Single Molecule Spectroscopy, Protein Folding @ Inst. f. Biochemie, Univ. Z?rich
> Debian Developer (teTeX)
> 
> _______________________________________________
> ntg-pdftex mailing list
> ntg-pdftex at ntg.nl
> http://www.ntg.nl/mailman/listinfo/ntg-pdftex

From hartmut_henkel at gmx.de  Thu Mar 16 08:37:16 2006
From: hartmut_henkel at gmx.de (Hartmut Henkel)
Date: Thu, 16 Mar 2006 08:37:16 +0100 (CET)
Subject: [NTG-pdftex] Creating identical PDF files with different pdfTeX
 runs
In-Reply-To: <20060316034225.GH27955@monty.localnet>
References: <86bqw7g8l7.fsf@alhambra.kuesterei.ch>
	<20060316034225.GH27955@monty.localnet>
Message-ID: <Pine.LNX.4.64.0603160829580.3042@hahepc1.hahe>

On Thu, 16 Mar 2006, The Thanh Han wrote:

> You need to ensure that *all* relevant files (like font-related stuff,
> macro, figure etc.) are also the same.

...which also means in case of embedded PDFs, that they come from the
same path, see e. g.:

/PTEX.FileName (./example.pdf)

Regards, Hartmut

From frank at debian.org  Thu Mar 16 09:48:35 2006
From: frank at debian.org (=?iso-8859-1?q?Frank_K=FCster?=)
Date: Thu, 16 Mar 2006 09:48:35 +0100
Subject: [NTG-pdftex] Creating identical PDF files with different pdfTeX
 runs
In-Reply-To: <17432.40226.4156.995469@zarniwoop.ms25.local> (Reinhard
	Kotucha's message of "Thu, 16 Mar 2006 00:02:58 +0100")
References: <86bqw7g8l7.fsf@alhambra.kuesterei.ch>
	<17432.40226.4156.995469@zarniwoop.ms25.local>
Message-ID: <86u09yg4gs.fsf@alhambra.kuesterei.ch>

Reinhard Kotucha <reinhard.kotucha at web.de> wrote:

> Comparing bitmaps, as some people already suggested, is a good thing.
>
> It shouldn't be too difficult to write a script which produces a
> bitmap file for each page (using ghostscript) and then creates a file
> which consists of lines like
>
> <pagenumber> <md5sum of the bitmap file>
>
> The bitmap files can be removed by the script when it is finished and
> standard UNIX tools can be used to examine the output files.
>
> Particularly, diff(1) can be used efficiently.  It will tell you the
> numbers of the pages which are different.

That's a very good suggestion, thanks!

Regards, Frank
-- 
Frank K?ster
Single Molecule Spectroscopy, Protein Folding @ Inst. f. Biochemie, Univ. Z?rich
Debian Developer (teTeX)


From hartmut_henkel at gmx.de  Thu Mar 16 19:34:21 2006
From: hartmut_henkel at gmx.de (Hartmut Henkel)
Date: Thu, 16 Mar 2006 19:34:21 +0100 (CET)
Subject: [NTG-pdftex] Creating identical PDF files with different pdfTeX
 runs
In-Reply-To: <86u09yg4gs.fsf@alhambra.kuesterei.ch>
References: <86bqw7g8l7.fsf@alhambra.kuesterei.ch>
	<17432.40226.4156.995469@zarniwoop.ms25.local>
	<86u09yg4gs.fsf@alhambra.kuesterei.ch>
Message-ID: <Pine.LNX.4.64.0603161927450.9587@hahepc1.hahe>

On Thu, 16 Mar 2006, Frank K?ster wrote:

> Reinhard Kotucha <reinhard.kotucha at web.de> wrote:
> >
> > <pagenumber> <md5sum of the bitmap file>
> >
> > The bitmap files can be removed by the script when it is finished and
> > standard UNIX tools can be used to examine the output files.
> >
> > Particularly, diff(1) can be used efficiently.  It will tell you the
> > numbers of the pages which are different.
>
> That's a very good suggestion, thanks!

this looks pretty fragile to me. Characters will end up in bitmaps with
interpolated gray pixels, and so it depends not only on pdftex but also
on any subtlety of the rendering engine. And if the md5sum doesn't
match, you know nothing without the original file. Maybe some
crosscorrelation between images with some given tolerance limit would be
safer.

Regards, Hartmut

From frank at debian.org  Thu Mar 16 19:53:08 2006
From: frank at debian.org (=?iso-8859-1?q?Frank_K=FCster?=)
Date: Thu, 16 Mar 2006 19:53:08 +0100
Subject: [NTG-pdftex] Creating identical PDF files with different pdfTeX
 runs
In-Reply-To: <Pine.LNX.4.64.0603161927450.9587@hahepc1.hahe> (Hartmut
	Henkel's message of "Thu, 16 Mar 2006 19:34:21 +0100 (CET)")
References: <86bqw7g8l7.fsf@alhambra.kuesterei.ch>
	<17432.40226.4156.995469@zarniwoop.ms25.local>
	<86u09yg4gs.fsf@alhambra.kuesterei.ch>
	<Pine.LNX.4.64.0603161927450.9587@hahepc1.hahe>
Message-ID: <86u09y5ii3.fsf@alhambra.kuesterei.ch>

Hartmut Henkel <hartmut_henkel at gmx.de> wrote:

> On Thu, 16 Mar 2006, Frank K?ster wrote:
>
>> Reinhard Kotucha <reinhard.kotucha at web.de> wrote:
>> >
>> > <pagenumber> <md5sum of the bitmap file>
>> >
>> > The bitmap files can be removed by the script when it is finished and
>> > standard UNIX tools can be used to examine the output files.
>> >
>> > Particularly, diff(1) can be used efficiently.  It will tell you the
>> > numbers of the pages which are different.
>>
>> That's a very good suggestion, thanks!
>
> this looks pretty fragile to me. Characters will end up in bitmaps with
> interpolated gray pixels, and so it depends not only on pdftex but also
> on any subtlety of the rendering engine. And if the md5sum doesn't
> match, you know nothing without the original file. 

Yes, we definitely need the original file.

> Maybe some
> crosscorrelation between images with some given tolerance limit would be
> safer.

Any hints what I could use for such a purpose?  

Regards, Frank
-- 
Frank K?ster
Single Molecule Spectroscopy, Protein Folding @ Inst. f. Biochemie, Univ. Z?rich
Debian Developer (teTeX)


From hartmut_henkel at gmx.de  Thu Mar 16 20:08:02 2006
From: hartmut_henkel at gmx.de (Hartmut Henkel)
Date: Thu, 16 Mar 2006 20:08:02 +0100 (CET)
Subject: [NTG-pdftex] Creating identical PDF files with different pdfTeX
 runs
In-Reply-To: <86u09y5ii3.fsf@alhambra.kuesterei.ch>
References: <86bqw7g8l7.fsf@alhambra.kuesterei.ch>
	<17432.40226.4156.995469@zarniwoop.ms25.local>
	<86u09yg4gs.fsf@alhambra.kuesterei.ch>
	<Pine.LNX.4.64.0603161927450.9587@hahepc1.hahe>
	<86u09y5ii3.fsf@alhambra.kuesterei.ch>
Message-ID: <Pine.LNX.4.64.0603162001380.16354@hahepc1.hahe>

On Thu, 16 Mar 2006, Frank K?ster wrote:

> Hartmut Henkel <hartmut_henkel at gmx.de> wrote:
>
> Yes, we definitely need the original file.
>
> > Maybe some crosscorrelation between images with some given tolerance
> > limit would be safer.
>
> Any hints what I could use for such a purpose?

just found from Netpbm:

NAME
       pnmpsnr - compute the difference between two portable anymaps

SYNOPSIS
       pnmpsnr [pnmfile1] [pnmfile2]

DESCRIPTION

       Reads two PBM, PGM, or PPM files, or PAM equivalents, as input.
       Prints the peak  signal-to-noise  ratio  (PSNR)  difference
       between the two images. This  metric is typically used in image
       compression papers to rate the distortion between original and
       decoded image.

And in ImageMagick there is a -compose operator with Difference and
Multiply option.

Regards, Hartmut

From hartmut_henkel at gmx.de  Thu Mar 16 20:23:34 2006
From: hartmut_henkel at gmx.de (Hartmut Henkel)
Date: Thu, 16 Mar 2006 20:23:34 +0100 (CET)
Subject: [NTG-pdftex] Creating identical PDF files with different pdfTeX
 runs
In-Reply-To: <Pine.LNX.4.64.0603162001380.16354@hahepc1.hahe>
References: <86bqw7g8l7.fsf@alhambra.kuesterei.ch>
	<17432.40226.4156.995469@zarniwoop.ms25.local>
	<86u09yg4gs.fsf@alhambra.kuesterei.ch>
	<Pine.LNX.4.64.0603161927450.9587@hahepc1.hahe>
	<86u09y5ii3.fsf@alhambra.kuesterei.ch>
	<Pine.LNX.4.64.0603162001380.16354@hahepc1.hahe>
Message-ID: <Pine.LNX.4.64.0603162019180.16598@hahepc1.hahe>

pnmpsnr seems to work quite nicely, e. g. with some file xx.tex:

  \input tufte \input tufte \input tufte

  \hbox{\kern 0.1pt a}

  \input tufte \input tufte
  \bye

against another file with 0pt instead of 0.1pt kern one gets:

$ pdftoppm -r 1200 xx.pdf xx
$ pdftoppm -r 1200 yy.pdf yy
$ pnmpsnr xx-000001.ppm yy-000001.ppm
pnmpsnr: PSNR between xx-000001.ppm and yy-000001.ppm:
pnmpsnr: Y  color component: 59.18 dB
pnmpsnr: Cb color component  doesn't differ.
pnmpsnr: Cr color component doesn't differ.

(seems there is a spurious blank in the output :-) but such a tiny
displacement needs rendering at 1200 dpi which gives large files and is
slow...

Regards, Hartmut



From frank at debian.org  Thu Mar 16 21:48:22 2006
From: frank at debian.org (=?iso-8859-1?q?Frank_K=FCster?=)
Date: Thu, 16 Mar 2006 21:48:22 +0100
Subject: [NTG-pdftex] Creating identical PDF files with different pdfTeX
 runs
In-Reply-To: <20060315144959.GG13098@lucien.oneiros.kn-bremen.de> (
	=?iso-8859-1?q?Martin_Schr=F6der's_message_of?= "Wed,
	15 Mar 2006 15:49:59 +0100")
References: <86bqw7g8l7.fsf@alhambra.kuesterei.ch>
	<20060315132504.GE13098@lucien.oneiros.kn-bremen.de>
	<86lkvber9o.fsf@alhambra.kuesterei.ch>
	<20060315144959.GG13098@lucien.oneiros.kn-bremen.de>
Message-ID: <86k6au86ax.fsf@alhambra.kuesterei.ch>

Martin Schr?der <martin at oneiros.de> wrote:

> On 2006-03-15 15:06:43 +0100, Frank K?ster wrote:
>> Martin Schr?der <martin at oneiros.de> wrote:
>> > This will only get you so far. If you want to compare PDFs, you
>> > should not test for identical files, but for identical output:
>> > Render the PDF to a bitmap (e.g. with ghostscript) and compare
>> > the generated bitmaps. Otherwise your test will fail whenever the
>> > output of pdfTeX is changed in any way. 
>> 
>> That's a point; on the other hand, all I get then is glyphs on a page,
>> but the information about the internal structure is lost: hyperlinks,
>> character information (will a search for "fl" find the fl ligature, or
>> will "?" be pasted correctly?), etc.
>
> How far will you get with the logfile with a suitable combination
> of \tracingoutput etc.?

I don't know; I have never delved into font tracing commands.  I'm also
not sure that this is the best approach, because when we develop a
testing framework, we want it to be extensible and easy to use, even for
e.g. package authors.  If they have a version of their package that
produces a particular pdf feature (like a special internal hyperlink
pointing to exactly the right place), they want to make sure that future
versions don't loose that feature.  For this, a suitable pdf file
comparison is all that's needed.  Parsing the log file might
additionally be helpful to find out what's wrong, but it only works if
the testing framework already considered this feature.  

Also, in case I'm one of the developers of this testing framework, I'd
rather concentrate on implementing it cleanly, extensible, maintainable,
etc., and not so much on learning about pdf internals I didn't need up
to now, or pdfTeX-special tracing possibilities.

Regards, Frank
-- 
Frank K?ster
Single Molecule Spectroscopy, Protein Folding @ Inst. f. Biochemie, Univ. Z?rich
Debian Developer (teTeX)


From reinhard.kotucha at web.de  Thu Mar 16 22:09:51 2006
From: reinhard.kotucha at web.de (Reinhard Kotucha)
Date: Thu, 16 Mar 2006 22:09:51 +0100
Subject: [NTG-pdftex] Creating identical PDF files with different pdfTeX
 runs
In-Reply-To: <Pine.LNX.4.64.0603161927450.9587@hahepc1.hahe>
References: <86bqw7g8l7.fsf@alhambra.kuesterei.ch>
	<17432.40226.4156.995469@zarniwoop.ms25.local>
	<86u09yg4gs.fsf@alhambra.kuesterei.ch>
	<Pine.LNX.4.64.0603161927450.9587@hahepc1.hahe>
Message-ID: <17433.54303.898624.349606@zarniwoop.ms25.local>

>>>>> "Hartmut" == Hartmut Henkel <hartmut_henkel at gmx.de> writes:

  > On Thu, 16 Mar 2006, Frank K?ster wrote:
  >> Reinhard Kotucha <reinhard.kotucha at web.de> wrote:
  >> >
  >> > <pagenumber> <md5sum of the bitmap file>
  >> >
  >> > The bitmap files can be removed by the script when it is
  >> finished and > standard UNIX tools can be used to examine the
  >> output files.
  >> >
  >> > Particularly, diff(1) can be used efficiently.  It will tell
  >> you the > numbers of the pages which are different.
  >> 
  >> That's a very good suggestion, thanks!

  > this looks pretty fragile to me. Characters will end up in bitmaps
  > with interpolated gray pixels, and so it depends not only on
  > pdftex but also on any subtlety of the rendering engine.

No, not every ghostscript output device does antialiasing.  Usually
antialiasing is done for screen rendering only.  And even there you
can use -sDEVICE=x11 instead of x11alpha.  You can try faxg3 or
pcxmono or something like that.

  > And if the md5sum doesn't match, you know nothing without the
  > original file. Maybe some crosscorrelation between images with
  > some given tolerance limit would be safer.

...and you don't know anything either.

The question was whether files are identical, not similar.  This can
be achieved as I described, given that the bitmaps are produced with a
reasonable high resolution (and it does not matter whether antialiasing
is turned on).  Of course, you have to use the same version of the
program which produces the bitmaps invariably.

If you want to see the differences you need a program which displays
all pixels which are different in two bitmap files.  But I suppose
that you want to check whether two bitmaps are different before you
use such a tool.

  > pnmpsnr: Y  color component: 59.18 dB

Well, it just tells you that the files are different, the actual value
does not provide any useful information.

I think two tools are needed, one which tells you which pages are
different and one which makes the changes visible.

Regards,
  Reinhard

-- 
----------------------------------------------------------------------------
Reinhard Kotucha			              Phone: +49-511-4592165
Marschnerstr. 25
D-30167 Hannover	                      mailto:reinhard.kotucha at web.de
----------------------------------------------------------------------------
Microsoft isn't the answer. Microsoft is the question, and the answer is NO.
----------------------------------------------------------------------------



From frank at debian.org  Thu Mar 16 22:24:59 2006
From: frank at debian.org (=?iso-8859-1?q?Frank_K=FCster?=)
Date: Thu, 16 Mar 2006 22:24:59 +0100
Subject: [NTG-pdftex] Creating identical PDF files with different pdfTeX
 runs
In-Reply-To: <20060316034225.GH27955@monty.localnet> (The Thanh Han's
	message of "Thu, 16 Mar 2006 10:42:25 +0700")
References: <86bqw7g8l7.fsf@alhambra.kuesterei.ch>
	<20060316034225.GH27955@monty.localnet>
Message-ID: <86fyli84lw.fsf@alhambra.kuesterei.ch>

The Thanh Han <hanthethanh at gmail.com> wrote:

> there are a few places where pdftex takes the current time
> into account to generate certain tags. Implementing a
> primitive to leave out date-related things is not difficult.
> Can you please give some further explain what it would be useful
> for? 

1. Regression tests for package writers.  I already have set a simple
   setup in one or two LaTeX packages of mine, and it was very helpful
   when I decided to make big changes to the implementation without
   changing the interface.

   I always wanted to generalize this, but never came to it.

2. Regression testing for TeX distributions or, e.g., rpm or deb
   packages of texlive or teTeX for some Linux distribution.  When
   internals change (like rearranging TEXMF trees, putting fonts in
   other packages, changing dependencies, etc.), the documents should
   not change.

   This is actually the reason why we are now talking about this:
   There are a couple of Debian developers who invest a lot of effort in
   automated package tests, and one of them asked whether such thing was
   possible in teTeX.  We started discussing, now I'm here.

3. Regression testing in pdfTeX: A change that only aims at
   e.g. performance enhancements should not alter the document.  Many
   other changes of course will change it.

> Also note that even when such a primitive is available, the
> chance you get the same output for a given input file is
> rather low. You need to ensure that *all* relevant files
> (like font-related stuff, macro, figure etc.) are also the
> same.

That means that such tests would have to be done in a "controlled
environment".  That's easy for application 2, and probably not too hard
for 1.  For 3, it's not trivial - I don't think you can run the tests
after compiling, like other programs, e.g. perl, do, and hope they will
succeed on any system.  But if you recreate the known-good data on
*your* system just before applying a problematic patch, and test
afterwards, that should work.

Regards, Frank

-- 
Frank K?ster
Single Molecule Spectroscopy, Protein Folding @ Inst. f. Biochemie, Univ. Z?rich
Debian Developer (teTeX)


From pragma at wxs.nl  Thu Mar 16 22:39:10 2006
From: pragma at wxs.nl (Hans Hagen)
Date: Thu, 16 Mar 2006 22:39:10 +0100
Subject: [NTG-pdftex] Creating identical PDF files with different pdfTeX
 runs
In-Reply-To: <86fyli84lw.fsf@alhambra.kuesterei.ch>
References: <86bqw7g8l7.fsf@alhambra.kuesterei.ch>
	<20060316034225.GH27955@monty.localnet>
	<86fyli84lw.fsf@alhambra.kuesterei.ch>
Message-ID: <4419DAFE.1070502@wxs.nl>

>
> 3. Regression testing in pdfTeX: A change that only aims at
>    e.g. performance enhancements should not alter the document.  Many
>    other changes of course will change it.
>   
i think that you must define different levels of similarity:

- pure text: in that case a bitmap as already discussed is needed
- functionality (annotations and such): that need to take place at the 
pdf level, i.e. filtering resources and descriptions and compare them 
(e.g. annotation names, rectangles, etc)
- font resources

i can imagine that your test of text similarity is run with disabled 
interactive features

the second one could be an add=on for pdftex: a special log mode, where 
pdftex writes a file with all annotations (name, page, rectangle, maybe 
also the while dict) and a second one which lists all the used fonts, 
encoding files, map lines and glyphs (encoding subset)

Hans

 

-----------------------------------------------------------------
                                          Hans Hagen | PRAGMA ADE
              Ridderstraat 27 | 8061 GH Hasselt | The Netherlands
     tel: 038 477 53 69 | fax: 038 477 53 74 | www.pragma-ade.com
                                             | www.pragma-pod.nl
-----------------------------------------------------------------


From martin at oneiros.de  Thu Mar 16 23:06:57 2006
From: martin at oneiros.de (Martin =?iso-8859-1?Q?Schr=F6der?=)
Date: Thu, 16 Mar 2006 23:06:57 +0100
Subject: [NTG-pdftex] Creating identical PDF files with different pdfTeX
	runs
In-Reply-To: <4419DAFE.1070502@wxs.nl>
References: <86bqw7g8l7.fsf@alhambra.kuesterei.ch>
	<20060316034225.GH27955@monty.localnet>
	<86fyli84lw.fsf@alhambra.kuesterei.ch> <4419DAFE.1070502@wxs.nl>
Message-ID: <20060316220657.GG5107@lucien.oneiros.kn-bremen.de>

On 2006-03-16 22:39:10 +0100, Hans Hagen wrote:
> the second one could be an add=on for pdftex: a special log mode, where 
> pdftex writes a file with all annotations (name, page, rectangle, maybe 
> also the while dict) and a second one which lists all the used fonts, 
> encoding files, map lines and glyphs (encoding subset)

I still think that this information can be found with
\tracingoutput etc.

Best
    Martin
-- 
                    http://www.tm.oneiros.de

From oberdiek at uni-freiburg.de  Fri Mar 17 00:06:47 2006
From: oberdiek at uni-freiburg.de (Heiko Oberdiek)
Date: Fri, 17 Mar 2006 00:06:47 +0100
Subject: [NTG-pdftex] Creating identical PDF files with different pdfTeX
	runs
In-Reply-To: <20060316220657.GG5107@lucien.oneiros.kn-bremen.de>
References: <86bqw7g8l7.fsf@alhambra.kuesterei.ch>
	<20060316034225.GH27955@monty.localnet>
	<86fyli84lw.fsf@alhambra.kuesterei.ch> <4419DAFE.1070502@wxs.nl>
	<20060316220657.GG5107@lucien.oneiros.kn-bremen.de>
Message-ID: <20060316230647.GA2746@m0A023293.vpn.uni-freiburg.de>

On Thu, Mar 16, 2006 at 11:06:57PM +0100, Martin Schr?der wrote:

> On 2006-03-16 22:39:10 +0100, Hans Hagen wrote:
> > the second one could be an add=on for pdftex: a special log mode, where 
> > pdftex writes a file with all annotations (name, page, rectangle, maybe 
> > also the while dict) and a second one which lists all the used fonts, 
> > encoding files, map lines and glyphs (encoding subset)
> 
> I still think that this information can be found with
> \tracingoutput etc.

TeX's \tracing output is a very bad source for automatical comparisons:
TeX just prints the formatted result as text:
* Funny linebreaks.
* Sometimes the output is limited and marked by "etc.".
* Information is lost, the .log file doesn't tell the catcode
  of character tokens, even you cannot see what a token is:
    \def\msg#{\immediate\write16}
    \def\testA{\foobar}
    \msg{\string\testA: [\meaning\testA]}
    \edef\testB{\string\foobar\space}
    \msg{\string\testB: [\meaning\testB]}
    \msg{%
      \noexpand\testA and \noexpand\testB
      \ifx\testA\testB
        are equal%
      \else
        differ%
      \fi
      .%
    }
    \end
  \testA expands to one command token, the expansion of
  \testB consists of seven other token and one space token,
  But the output in the .log file is equal in both cases.
* Semantics is lost. The .log file must be analyzed to get
  some of the semantics back, what is a box listing, what is
  a macro expansion, ...

Thus it would be nice to have a debug/tracing file, where
the output is written as XML with semantics.
Then macro definitions, box contents, ... could be easier
compared and also the differences could easier be detected
and marked.

For debugging, analyzing packages it would be useful to
have a command that generates a kind of snapshot, e.g.
all macros with their meanings or the status of registers.
Then two stages, e.g before, after package loading or 
some action could be compared: which macros or registers
are differnt, ... This could be used to show the wanted
effect and to deteced unwanted side effects, ...

To retain compatibility the tracing/debug output could go
in a separate debug file with additional commands,
the counterparts of the \tracingcommands that write into the
new debug file and additional commands, such as the snapshot
commands, e.g.

\xtracingoutputfile{\jobname-debug.xml}
\xtracingmacros=1
\xtracing...
\xsnapshot{count}% all count registers <> 0
\xsnapshot{macro}% all defined command tokens with meaning
...

The result would be written to \jobname-debug.xml and can
then further processed: filtering, statistics, displaying
comparisons, displaying, ...

Yours sincerely
  Heiko <oberdiek at uni-freiburg.de>
-- 

From martin at oneiros.de  Fri Mar 17 13:12:37 2006
From: martin at oneiros.de (Martin =?iso-8859-1?Q?Schr=F6der?=)
Date: Fri, 17 Mar 2006 13:12:37 +0100
Subject: [NTG-pdftex] Creating identical PDF files with different pdfTeX
	runs
In-Reply-To: <Pine.LNX.4.64.0603162001380.16354@hahepc1.hahe>
References: <86bqw7g8l7.fsf@alhambra.kuesterei.ch>
	<17432.40226.4156.995469@zarniwoop.ms25.local>
	<86u09yg4gs.fsf@alhambra.kuesterei.ch>
	<Pine.LNX.4.64.0603161927450.9587@hahepc1.hahe>
	<86u09y5ii3.fsf@alhambra.kuesterei.ch>
	<Pine.LNX.4.64.0603162001380.16354@hahepc1.hahe>
Message-ID: <20060317121237.GD20869@lucien.oneiros.kn-bremen.de>

On 2006-03-16 20:08:02 +0100, Hartmut Henkel wrote:
> And in ImageMagick there is a -compose operator with Difference and
> Multiply option.

This is exactly what's needed.

I tried this (compare sample2e with sample2e & lm):
- render the pdfs with gs to png
  the resulting pngs are not large (ca. 150k/page for sample2e)
  and can be tested with cmp/md5sum for identity
- generate diff images with "composite -compose difference -negate"
  this eats memory (1G at 600dpi), but produces what's needed.

A pointer: http://jpdfunit.sourceforge.net/
"JpdfUnit is a framework for testing a generated pdf document
with the JUnit test framework so JPdfUnit is a high level api."

Best
    Martin
-- 
                    http://www.tm.oneiros.de

From aa056 at chebucto.ns.ca  Mon Mar 20 13:43:41 2006
From: aa056 at chebucto.ns.ca (George N. White III)
Date: Mon, 20 Mar 2006 08:43:41 -0400
Subject: [NTG-pdftex] Creating identical PDF files with different pdfTeX
	runs
In-Reply-To: <4419DAFE.1070502@wxs.nl>
References: <86bqw7g8l7.fsf@alhambra.kuesterei.ch>
	<20060316034225.GH27955@monty.localnet>
	<86fyli84lw.fsf@alhambra.kuesterei.ch> <4419DAFE.1070502@wxs.nl>
Message-ID: <22af238a0603200443g50594848yd21fd53a098bb370@mail.gmail.com>

On 3/16/06, Hans Hagen <pragma at wxs.nl> wrote:
> >
> > 3. Regression testing in pdfTeX: A change that only aims at
> >    e.g. performance enhancements should not alter the document.  Many
> >    other changes of course will change it.
> >
> i think that you must define different levels of similarity:
>
> - pure text: in that case a bitmap as already discussed is needed
> - functionality (annotations and such): that need to take place at the
> pdf level, i.e. filtering resources and descriptions and compare them
> (e.g. annotation names, rectangles, etc)
> - font resources

If we focus on differences between pdf documents and forget for the
moment that we are using pdftex, these levels apply to a much wider
class of documents.   I suspect it is too early to know what sort of
differences will occur, so the first step is to find tools to analyze
differences between PDF documents.  Many people who have never heard
of pdftex would like to be able to compare PDF's and analyze the
contents, so if you create a good initial framework there will be lots
of help.  I've never used the commercial preflight tools, but based on
the 4th hand reports I get (printer operator --> cust. service -->
editor --> me)  I gather that the commercial tools can provide pretty
detailed reports (e.g., figure on page N has yellow in the "black"
annotation text).  I'm not sure that rasterizing is the best approach.
 What about a ghostscript device that generates various debugging
summaries.  Some things that would be useful:

1. list of objects with md5sums and page numbers where the object is
used -- this would be used to focus in on areas where documents
differ.   If files differ on a small number of pages then comparing
bitmaps might be useful and economical of resources.

2.  human readable summary of a specified object

We already have tools to pull out specified pages and extract text.

> i can imagine that your test of text similarity is run with disabled
> interactive features
>
> the second one could be an add=on for pdftex: a special log mode, where
> pdftex writes a file with all annotations (name, page, rectangle, maybe
> also the while dict) and a second one which lists all the used fonts,
> encoding files, map lines and glyphs (encoding subset)

It would be better to focus on things that can be used with other pdf
generating applications.  Many pdftex documents have pdf's from
sources other than pdftex embedded.  It would be worth thinking about
ways to add metadata to pdf's to help the analyzers, but if we rely on
the pdftex logs then we have to develop all the tools ourselves and if
the difference is in an input pdf our tools may not work.  If we
produce a good framework I suspect the larger community of pdf users
will become engaged and accomplish much more than the pdftex
community can afford.

--
George N. White III <aa056 at chebucto.ns.ca>
Head of St. Margarets Bay, Nova Scotia

From frank at debian.org  Fri Mar 24 09:57:33 2006
From: frank at debian.org (=?iso-8859-1?q?Frank_K=FCster?=)
Date: Fri, 24 Mar 2006 09:57:33 +0100
Subject: [NTG-pdftex] Changing the pdfTeX banner for Debian-specific changes
In-Reply-To: <20060323192514.GA20111@burnside> (Julian Gilbey's message of
	"Thu, 23 Mar 2006 19:25:14 +0000")
References: <86irq6wn0o.fsf@alhambra.kuesterei.ch>
	<20060322234753.GB24321@burnside>
	<86slp9eh9u.fsf@alhambra.kuesterei.ch>
	<20060323192514.GA20111@burnside>
Message-ID: <86veu4usn6.fsf_-_@alhambra.kuesterei.ch>

Hi,

this might already be resolved - we're still dealing with pdfTeX 1.21a
in teTeX -, but also not, and therefore interest you.

Julian Gilbey <jdg at polya.uklinux.net> wrote:

>> >> as requested by Martin Schr?der, the pdfTeX maintainer, I'd like to add
>> >> something about libpoppler to the "pdeftex --version" output or the
>> >> general banner, but I don't manage.  According to him, it should be
>> >> sufficient to change texk/web2c/pdfetexdir/pdfetexextra.in, but that
>> >> doesn't have any effect here - probably we have such an ancient version
>> >> (1.20 instead of 1.40 in which he is thinking...).
>> >
>> > Just modifying the #define BANNER=... line in that file does it for
>> > me.
>> 
>> Strange - I tried and got funny results, e.g. after changing
>> 
>> #define BANNER "This is pdfeTeX, Version 3.141592-PDFTEX-VERSION-ETEX-VERSION"
>> 
>> to 
>> 
>> #define BANNER "This is not pdfeTeX, Version 3.141592-PDFTEX-VERSION-ETEX-VERSION"
>> 
>> it printed "not pdfeTeX..." instead of "This is pdfeTeX..."
>
> With the normal version, compare:
>
> burnside:~ $ pdfetex --version
> pdfeTeX 3.141592-1.21a-2.2 (Web2C 7.5.4)
> kpathsea version 3.5.4
> Copyright (C) 1997-2004 Peter Breitenlohner (eTeX)/Han The Thanh (pdfTeX).
> Kpathsea is copyright (C) 1997-2004 Free Software Foundation, Inc.
> [...]
>
> with:
>
> burnside:~ $ pdfetex
> This is pdfeTeX, Version 3.141592-1.21a-2.2 (Web2C 7.5.4)
> **
>
> It turns out that when producing the version string for --version in
> lib/printversion.c, function printversionandexit, the leading prefix
> "This is " is stripped off from the banner name.  Furthermore, the
> banner string is parsed like this:
>
> "This is pdfeTeX, Version 3.141592-PDFTEX-VERSION-ETEX-VERSION"
>  ^^^^^^^^-------          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>  stripped name            progversion
>
> where "This is " is stripped, the prog name goes up to the first
> comma, and the progversion is everything after the final space; then
> the first line of the --version output is:
>
> name progversion (Web2C-version)

Therefore it is indeed hard to add information about local changes,
which naturally would be at the end (after an additional space).

> So if all is wanted is to tweak the banner line, there are two ways to
> do it:
>
> (1) Hackish: define BANNER to be something like:
>     "This is pdfeTeX with Debian tweaks, Version 3.141592-PDFTEX-VERSION-ETEX-VERSION"

I'll go that way, but I'd appreciate if in future versions it would be
possible to just add a "local_changes_remark" at an appropriate place
(either the end of the line, or an additional line.

> (2) Actually modify the printversionandexit code in lib/printversion.c
>     to output something like:
>
>   string debianversion = "(Debian version blah)";
>
>   len = prog_name_end - banner - sizeof ("This is") + sizeof(debianversion);
>   prog_name = (string)xmalloc (len + 1);
>   strncpy (prog_name, banner + sizeof ("This is"), len);
>   prog_name[len] = 0;
>
>   /* The Web2c version string starts with a space.  */
>   printf ("%s %s%s %s\n", prog_name, prog_version, versionstring, debianversion);
>
>     and a similar change in one of the change files.
>
> But the latter seems like hard work :/

Should I open a feature request?


Regards, Frank
-- 
Frank K?ster
Single Molecule Spectroscopy, Protein Folding @ Inst. f. Biochemie, Univ. Z?rich
Debian Developer (teTeX)


From vvv at vsu.ru  Sun Mar 26 23:30:20 2006
From: vvv at vsu.ru (Vladimir Volovich)
Date: Mon, 27 Mar 2006 01:30:20 +0400
Subject: [NTG-pdftex] possible bug with non-closing files
Message-ID: <874q1kc2s3.fsf@vvv.vsu.ru>

Hi!

i'm reporting a bug discovered by Tigran Aivazian:

He got this message:

pdflatex: ./1016.pdf: Too many open files

by running pdflatex on this simple source:

\documentclass[pdftex,a5paper]{book}
\usepackage[papersize={8.5in,11in}]{geometry}
\usepackage{pdfpages}

\begin{document}
\newcount\i
\i=2
\loop
  \ifnum\i<1725
    \includepdf[pages={-}]{\number\i.pdf}%
  \advance\i by1
\repeat

\end{document}

It appears that this is due to the "ulimit" on the number of
simultaneously opened files which was 1024 by default. Increasing
"ulimit" allowed to process the file.

But it looks like a bug in pdftex: it seems that it keeps all the
files which were \includepdf'ed opened, thus causing this limit to be
reached. Instead, it seems, it should close the included files.

WDYT?

Best,
v.


From martin at oneiros.de  Mon Mar 27 00:01:57 2006
From: martin at oneiros.de (Martin =?iso-8859-1?Q?Schr=F6der?=)
Date: Mon, 27 Mar 2006 00:01:57 +0200
Subject: [NTG-pdftex] possible bug with non-closing files
In-Reply-To: <874q1kc2s3.fsf@vvv.vsu.ru>
References: <874q1kc2s3.fsf@vvv.vsu.ru>
Message-ID: <20060326220157.GA12669@lucien.oneiros.kn-bremen.de>

On 2006-03-27 01:30:20 +0400, Vladimir Volovich wrote:
> It appears that this is due to the "ulimit" on the number of
> simultaneously opened files which was 1024 by default. Increasing
> "ulimit" allowed to process the file.

Acknowleged: This also happens with the latest beta. Also the
resulting damaged file is not deleted.

> But it looks like a bug in pdftex: it seems that it keeps all the
> files which were \includepdf'ed opened, thus causing this limit to be
> reached. Instead, it seems, it should close the included files.
> 
> WDYT?

Please file a bug at sarovar so we can track this.

Best
    Martin
-- 
                    http://www.tm.oneiros.de

From noreply at sarovar.org  Sun Mar 26 23:57:49 2006
From: noreply at sarovar.org (noreply at sarovar.org)
Date: Mon, 27 Mar 2006 03:27:49 +0530
Subject: [NTG-pdftex] [ pdftex-Bugs-498 ] pdftex leaves included files
	opened thus overflowing the ulimit
Message-ID: <E1FNdF7-0002bo-00@sarovar.org>

Bugs item #498, was opened at 2006-03-27 01:57
You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=498&group_id=106

Category: PDF inclusion
Group: None
Status: Open
Resolution: None
Priority: 5
Submitted By: Vladimir Volovich (vvv)
Assigned to: Martin Schr?der (oneiros)
Summary: pdftex leaves included files opened thus overflowing the ulimit

Initial Comment:
[re-sending through sarovar bug reporting form]

i'm reporting a bug discovered by Tigran Aivazian:

He got this message:

pdflatex: ./1016.pdf: Too many open files

by running pdflatex on this simple source:

\documentclass[pdftex,a5paper]{book}
\usepackage[papersize={8.5in,11in}]{geometry}
\usepackage{pdfpages}

\begin{document}
\newcount\i
\i=2
\loop
  \ifnum\i<1725
    \includepdf[pages={-}]{\number\i.pdf}%
  \advance\i by1
\repeat

\end{document}

It appears that this is due to the "ulimit" on the
number of
simultaneously opened files which was 1024 by default.
Increasing
"ulimit" allowed to process the file.

But it looks like a bug in pdftex: it seems that it
keeps all the
files which were \includepdf'ed opened, thus causing
this limit to be
reached. Instead, it seems, it should close the
included files.

WDYT?


----------------------------------------------------------------------

You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=498&group_id=106

From noreply at sarovar.org  Mon Mar 27 00:43:28 2006
From: noreply at sarovar.org (noreply at sarovar.org)
Date: Mon, 27 Mar 2006 04:13:28 +0530
Subject: [NTG-pdftex] [ pdftex-Bugs-498 ] pdftex leaves included files
	opened thus overflowing the ulimit
Message-ID: <E1FNdxI-0008Pd-00@sarovar.org>

Bugs item #498, was opened at 2006-03-26 23:57
You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=498&group_id=106

Category: PDF inclusion
>Group: v1.30.0
Status: Open
>Resolution: Accepted
>Priority: 7
Submitted By: Vladimir Volovich (vvv)
Assigned to: Martin Schr?der (oneiros)
Summary: pdftex leaves included files opened thus overflowing the ulimit

Initial Comment:
[re-sending through sarovar bug reporting form]

i'm reporting a bug discovered by Tigran Aivazian:

He got this message:

pdflatex: ./1016.pdf: Too many open files

by running pdflatex on this simple source:

\documentclass[pdftex,a5paper]{book}
\usepackage[papersize={8.5in,11in}]{geometry}
\usepackage{pdfpages}

\begin{document}
\newcount\i
\i=2
\loop
  \ifnum\i<1725
    \includepdf[pages={-}]{\number\i.pdf}%
  \advance\i by1
\repeat

\end{document}

It appears that this is due to the "ulimit" on the
number of
simultaneously opened files which was 1024 by default.
Increasing
"ulimit" allowed to process the file.

But it looks like a bug in pdftex: it seems that it
keeps all the
files which were \includepdf'ed opened, thus causing
this limit to be
reached. Instead, it seems, it should close the
included files.

WDYT?


----------------------------------------------------------------------

>Comment By: Martin Schr?der (oneiros)
Date: 2006-03-27 00:43

Message:
Logged In: YES 
user_id=421

I at least found why the resulting file is not deleted (i.e.
where pdfTeX actually crashes):

The callstack is thus:
- pdftex.web:scan_image
- writeimg.c:readimage
- writeimg.c:checktypebyheader
- kpathsea/xfopen.c:xfopen, which calls FATAL_PERROR

So we should register our error handler through atexit (3)

----------------------------------------------------------------------

You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=498&group_id=106

From noreply at sarovar.org  Mon Mar 27 02:58:52 2006
From: noreply at sarovar.org (noreply at sarovar.org)
Date: Mon, 27 Mar 2006 06:28:52 +0530
Subject: [NTG-pdftex] [ pdftex-Bugs-498 ] pdftex leaves included files
	opened thus overflowing the ulimit
Message-ID: <E1FNg4K-0007ZL-00@sarovar.org>

Bugs item #498, was opened at 2006-03-26 23:57
You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=498&group_id=106

Category: PDF inclusion
Group: v1.30.0
>Status: Closed
>Resolution: Works For Me
>Priority: 3
Submitted By: Vladimir Volovich (vvv)
Assigned to: Martin Schr?der (oneiros)
Summary: pdftex leaves included files opened thus overflowing the ulimit

Initial Comment:
[re-sending through sarovar bug reporting form]

i'm reporting a bug discovered by Tigran Aivazian:

He got this message:

pdflatex: ./1016.pdf: Too many open files

by running pdflatex on this simple source:

\documentclass[pdftex,a5paper]{book}
\usepackage[papersize={8.5in,11in}]{geometry}
\usepackage{pdfpages}

\begin{document}
\newcount\i
\i=2
\loop
  \ifnum\i<1725
    \includepdf[pages={-}]{\number\i.pdf}%
  \advance\i by1
\repeat

\end{document}

It appears that this is due to the "ulimit" on the
number of
simultaneously opened files which was 1024 by default.
Increasing
"ulimit" allowed to process the file.

But it looks like a bug in pdftex: it seems that it
keeps all the
files which were \includepdf'ed opened, thus causing
this limit to be
reached. Instead, it seems, it should close the
included files.

WDYT?


----------------------------------------------------------------------

>Comment By: Martin Schr?der (oneiros)
Date: 2006-03-27 02:58

Message:
Logged In: YES 
user_id=421

The "problem" here is that \pdfximage normally is not
immediate. If you make it immediate by e.g. inserting

\let\mypdfximage\pdfximage
\def\pdfximage{\immediate\mypdfximage}

everything works fine. So maybe pdfpages should work use an
\immediate.

We still need to fix the problem with the remaining broken
file, but that is another bug.

----------------------------------------------------------------------

Comment By: Martin Schr?der (oneiros)
Date: 2006-03-27 00:43

Message:
Logged In: YES 
user_id=421

I at least found why the resulting file is not deleted (i.e.
where pdfTeX actually crashes):

The callstack is thus:
- pdftex.web:scan_image
- writeimg.c:readimage
- writeimg.c:checktypebyheader
- kpathsea/xfopen.c:xfopen, which calls FATAL_PERROR

So we should register our error handler through atexit (3)

----------------------------------------------------------------------

You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=498&group_id=106

From noreply at sarovar.org  Mon Mar 27 03:00:26 2006
From: noreply at sarovar.org (noreply at sarovar.org)
Date: Mon, 27 Mar 2006 06:30:26 +0530
Subject: [NTG-pdftex] [ pdftex-Feature Requests-87 ] In case of fatal errors,
	delete the output file
Message-ID: <E1FNg5q-0007bX-00@sarovar.org>

Feature Requests item #87, was opened at 2004-07-02 11:13
You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=496&aid=87&group_id=106

Category: None
Group: v1.21
Status: Open
Resolution: None
Priority: 5
Submitted By: Martin Schr?der (oneiros)
Assigned to: Martin Schr?der (oneiros)
Summary: In case of fatal errors, delete the output file

Initial Comment:
When pdfTeX currently encounters a fatal error, it
closes it's output file, which leads to
incomplete/corrupt files.

pdfTeX should produce only valid files, and in case of
fatal errors the output should be deleted.

----------------------------------------------------------------------

>Comment By: Martin Schr?der (oneiros)
Date: 2006-03-27 03:00

Message:
Logged In: YES 
user_id=421

Currently we only handle exits through pdf_fail. But we also
need to trap other exits; this must be done through atexit(3).

----------------------------------------------------------------------

Comment By: Martin Schr?der (oneiros)
Date: 2005-12-19 00:38

Message:
Logged In: YES 
user_id=421

The attached patch unlinks the current file, if a fatal
error happens. Currently this is done without any checks,
and may be a security problem.

----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2004-07-02 14:35

Message:
Logged In: YES 
user_id=1608

When you truncate a file, the result is an empty file. From
a user's viewpoint, that is not the same thing as a corrupt
PDF. 
The distinction is small, but the advantage of an empty file is
that it is not likely to be confused for a correct PDF.

If it is possible, then deleting the PDF file is definately
better, but file deletion doesn't always work. Truncation
almost always does work, and it's only two syscalls extra,
so why not?


----------------------------------------------------------------------

Comment By: Martin Schr?der (oneiros)
Date: 2004-07-02 14:21

Message:
Logged In: YES 
user_id=421

Simply truncating a pdf still makes it invalid (because the
file structure is incomplete). Producing a valid truncated
output file in case of fatal errors will be tricky and not
always possible. Deleting the corrupt output is much easier.

----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2004-07-02 13:50

Message:
Logged In: YES 
user_id=1608

If deleting the file doesnt work, truncation is probably
still better than nothing. (?)

----------------------------------------------------------------------

You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=496&aid=87&group_id=106

From noreply at sarovar.org  Mon Mar 27 09:39:30 2006
From: noreply at sarovar.org (noreply at sarovar.org)
Date: Mon, 27 Mar 2006 13:09:30 +0530
Subject: [NTG-pdftex] [ pdftex-Bugs-498 ] pdftex leaves included files
	opened thus overflowing the ulimit
Message-ID: <E1FNmK2-0006jU-00@sarovar.org>

Bugs item #498, was opened at 2006-03-27 01:57
You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=498&group_id=106

Category: PDF inclusion
Group: v1.30.0
Status: Closed
Resolution: Works For Me
Priority: 3
Submitted By: Vladimir Volovich (vvv)
Assigned to: Martin Schr?der (oneiros)
Summary: pdftex leaves included files opened thus overflowing the ulimit

Initial Comment:
[re-sending through sarovar bug reporting form]

i'm reporting a bug discovered by Tigran Aivazian:

He got this message:

pdflatex: ./1016.pdf: Too many open files

by running pdflatex on this simple source:

\documentclass[pdftex,a5paper]{book}
\usepackage[papersize={8.5in,11in}]{geometry}
\usepackage{pdfpages}

\begin{document}
\newcount\i
\i=2
\loop
  \ifnum\i<1725
    \includepdf[pages={-}]{\number\i.pdf}%
  \advance\i by1
\repeat

\end{document}

It appears that this is due to the "ulimit" on the
number of
simultaneously opened files which was 1024 by default.
Increasing
"ulimit" allowed to process the file.

But it looks like a bug in pdftex: it seems that it
keeps all the
files which were \includepdf'ed opened, thus causing
this limit to be
reached. Instead, it seems, it should close the
included files.

WDYT?


----------------------------------------------------------------------

>Comment By: Vladimir Volovich (vvv)
Date: 2006-03-27 11:39

Message:
Logged In: YES 
user_id=2086

please clarify why non-\immediate \pdfximage
is still allowed to leave the included files opened.
(i.e. why the current behavior is considered normal,
when the files are left opened and the ulimit eventually
overflows).


----------------------------------------------------------------------

Comment By: Martin Schr?der (oneiros)
Date: 2006-03-27 04:58

Message:
Logged In: YES 
user_id=421

The "problem" here is that \pdfximage normally is not
immediate. If you make it immediate by e.g. inserting

\let\mypdfximage\pdfximage
\def\pdfximage{\immediate\mypdfximage}

everything works fine. So maybe pdfpages should work use an
\immediate.

We still need to fix the problem with the remaining broken
file, but that is another bug.

----------------------------------------------------------------------

Comment By: Martin Schr?der (oneiros)
Date: 2006-03-27 02:43

Message:
Logged In: YES 
user_id=421

I at least found why the resulting file is not deleted (i.e.
where pdfTeX actually crashes):

The callstack is thus:
- pdftex.web:scan_image
- writeimg.c:readimage
- writeimg.c:checktypebyheader
- kpathsea/xfopen.c:xfopen, which calls FATAL_PERROR

So we should register our error handler through atexit (3)

----------------------------------------------------------------------

You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=498&group_id=106

From noreply at sarovar.org  Mon Mar 27 09:52:15 2006
From: noreply at sarovar.org (noreply at sarovar.org)
Date: Mon, 27 Mar 2006 13:22:15 +0530
Subject: [NTG-pdftex] [ pdftex-Bugs-498 ] pdftex leaves included files
	opened thus overflowing the ulimit
Message-ID: <E1FNmWN-0007Fw-00@sarovar.org>

Bugs item #498, was opened at 2006-03-26 21:57
You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=498&group_id=106

Category: PDF inclusion
Group: v1.30.0
Status: Closed
Resolution: Works For Me
Priority: 3
Submitted By: Vladimir Volovich (vvv)
Assigned to: Martin Schr?der (oneiros)
Summary: pdftex leaves included files opened thus overflowing the ulimit

Initial Comment:
[re-sending through sarovar bug reporting form]

i'm reporting a bug discovered by Tigran Aivazian:

He got this message:

pdflatex: ./1016.pdf: Too many open files

by running pdflatex on this simple source:

\documentclass[pdftex,a5paper]{book}
\usepackage[papersize={8.5in,11in}]{geometry}
\usepackage{pdfpages}

\begin{document}
\newcount\i
\i=2
\loop
  \ifnum\i<1725
    \includepdf[pages={-}]{\number\i.pdf}%
  \advance\i by1
\repeat

\end{document}

It appears that this is due to the "ulimit" on the
number of
simultaneously opened files which was 1024 by default.
Increasing
"ulimit" allowed to process the file.

But it looks like a bug in pdftex: it seems that it
keeps all the
files which were \includepdf'ed opened, thus causing
this limit to be
reached. Instead, it seems, it should close the
included files.

WDYT?


----------------------------------------------------------------------

>Comment By: Hans Hagen (hagen)
Date: 2006-03-27 07:52

Message:
Logged In: YES 
user_id=927

(this problem does not occur on windows; i remember that
fabrice looked into it long ago) 

there is a relationship between open files and using
\immediate and/or the page key and/or re-use; using
immediate solves the open file problems but may lead to
bigger files; i asume that opening a file twice is taken
care of 

since there was a request from choff (tug conference china)
with respect to splitting the 'get dimensions' code (also
needed for dvi mode) from the inclusion code it may make
sense to look into that direction [for instance, provide a
primitive to determine the dimensions and then always delay
inclusion of the objects]

there is also the matter of efficiently embedding fonts in
included files (sharing with parent document) so that's
another pitfall 

keeping files open has to do with sharing objects so
patching this code in order to overcome the open file limits
may turn out to be tricky 


----------------------------------------------------------------------

Comment By: Vladimir Volovich (vvv)
Date: 2006-03-27 07:39

Message:
Logged In: YES 
user_id=2086

please clarify why non-\immediate \pdfximage
is still allowed to leave the included files opened.
(i.e. why the current behavior is considered normal,
when the files are left opened and the ulimit eventually
overflows).


----------------------------------------------------------------------

Comment By: Martin Schr?der (oneiros)
Date: 2006-03-27 00:58

Message:
Logged In: YES 
user_id=421

The "problem" here is that \pdfximage normally is not
immediate. If you make it immediate by e.g. inserting

\let\mypdfximage\pdfximage
\def\pdfximage{\immediate\mypdfximage}

everything works fine. So maybe pdfpages should work use an
\immediate.

We still need to fix the problem with the remaining broken
file, but that is another bug.

----------------------------------------------------------------------

Comment By: Martin Schr?der (oneiros)
Date: 2006-03-26 22:43

Message:
Logged In: YES 
user_id=421

I at least found why the resulting file is not deleted (i.e.
where pdfTeX actually crashes):

The callstack is thus:
- pdftex.web:scan_image
- writeimg.c:readimage
- writeimg.c:checktypebyheader
- kpathsea/xfopen.c:xfopen, which calls FATAL_PERROR

So we should register our error handler through atexit (3)

----------------------------------------------------------------------

You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=498&group_id=106

From noreply at sarovar.org  Mon Mar 27 14:51:46 2006
From: noreply at sarovar.org (noreply at sarovar.org)
Date: Mon, 27 Mar 2006 18:21:46 +0530
Subject: [NTG-pdftex] [ pdftex-Bugs-498 ] pdftex leaves included files
	opened thus overflowing the ulimit
Message-ID: <E1FNrCE-0001E7-00@sarovar.org>

Bugs item #498, was opened at 2006-03-26 23:57
You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=498&group_id=106

Category: PDF inclusion
Group: v1.30.0
Status: Closed
Resolution: Works For Me
Priority: 3
Submitted By: Vladimir Volovich (vvv)
Assigned to: Martin Schr?der (oneiros)
Summary: pdftex leaves included files opened thus overflowing the ulimit

Initial Comment:
[re-sending through sarovar bug reporting form]

i'm reporting a bug discovered by Tigran Aivazian:

He got this message:

pdflatex: ./1016.pdf: Too many open files

by running pdflatex on this simple source:

\documentclass[pdftex,a5paper]{book}
\usepackage[papersize={8.5in,11in}]{geometry}
\usepackage{pdfpages}

\begin{document}
\newcount\i
\i=2
\loop
  \ifnum\i<1725
    \includepdf[pages={-}]{\number\i.pdf}%
  \advance\i by1
\repeat

\end{document}

It appears that this is due to the "ulimit" on the
number of
simultaneously opened files which was 1024 by default.
Increasing
"ulimit" allowed to process the file.

But it looks like a bug in pdftex: it seems that it
keeps all the
files which were \includepdf'ed opened, thus causing
this limit to be
reached. Instead, it seems, it should close the
included files.

WDYT?


----------------------------------------------------------------------

>Comment By: Martin Schr?der (oneiros)
Date: 2006-03-27 14:51

Message:
Logged In: YES 
user_id=421

Hans, please try it on Windows -- if it doesn't fail there,
I'd be surprised.

IIRC Fabrice' fix was for the \immediate version which also
ran out of filedescriptors some years ago.

----------------------------------------------------------------------

Comment By: Hans Hagen (hagen)
Date: 2006-03-27 09:52

Message:
Logged In: YES 
user_id=927

(this problem does not occur on windows; i remember that
fabrice looked into it long ago) 

there is a relationship between open files and using
\immediate and/or the page key and/or re-use; using
immediate solves the open file problems but may lead to
bigger files; i asume that opening a file twice is taken
care of 

since there was a request from choff (tug conference china)
with respect to splitting the 'get dimensions' code (also
needed for dvi mode) from the inclusion code it may make
sense to look into that direction [for instance, provide a
primitive to determine the dimensions and then always delay
inclusion of the objects]

there is also the matter of efficiently embedding fonts in
included files (sharing with parent document) so that's
another pitfall 

keeping files open has to do with sharing objects so
patching this code in order to overcome the open file limits
may turn out to be tricky 


----------------------------------------------------------------------

Comment By: Vladimir Volovich (vvv)
Date: 2006-03-27 09:39

Message:
Logged In: YES 
user_id=2086

please clarify why non-\immediate \pdfximage
is still allowed to leave the included files opened.
(i.e. why the current behavior is considered normal,
when the files are left opened and the ulimit eventually
overflows).


----------------------------------------------------------------------

Comment By: Martin Schr?der (oneiros)
Date: 2006-03-27 02:58

Message:
Logged In: YES 
user_id=421

The "problem" here is that \pdfximage normally is not
immediate. If you make it immediate by e.g. inserting

\let\mypdfximage\pdfximage
\def\pdfximage{\immediate\mypdfximage}

everything works fine. So maybe pdfpages should work use an
\immediate.

We still need to fix the problem with the remaining broken
file, but that is another bug.

----------------------------------------------------------------------

Comment By: Martin Schr?der (oneiros)
Date: 2006-03-27 00:43

Message:
Logged In: YES 
user_id=421

I at least found why the resulting file is not deleted (i.e.
where pdfTeX actually crashes):

The callstack is thus:
- pdftex.web:scan_image
- writeimg.c:readimage
- writeimg.c:checktypebyheader
- kpathsea/xfopen.c:xfopen, which calls FATAL_PERROR

So we should register our error handler through atexit (3)

----------------------------------------------------------------------

You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=498&group_id=106

