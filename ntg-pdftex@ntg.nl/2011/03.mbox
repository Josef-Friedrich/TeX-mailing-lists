From pdftex-featurerequests at sarovar.org  Thu Mar 10 14:24:17 2011
From: pdftex-featurerequests at sarovar.org (pdftex-featurerequests at sarovar.org)
Date: Thu, 10 Mar 2011 18:54:17 +0530
Subject: [NTG-pdftex] =?utf-8?q?=5Bpdftex-Feature_Requests=5D=5B4328=5D_Av?=
	=?utf-8?q?oid_the_generation_of_/ID_optionally?=
Message-ID: <E1Pxfqj-0002dz-5X@sarovar.org>

Feature Requests item #4328, was opened at 2011-03-10 13:24
Status: Open
Priority: 3
Submitted By: Jens Mueller (jens)
Assigned to: Nobody (None)
Summary: Avoid the generation of /ID optionally 
Category: PDF generation
Group: v1.40
Resolution: None


Initial Comment:
pdftex will always set /ID in the file trailer. But setting it is optional, if /Encrypt is not set (see section 7.5.5 in ISO 32000-1; can be obtained here
http://www.adobe.com/content/dam/Adobe/en/devnet/pdf/pdfs/PDF32000_2008.pdf)

Because /ID is always set it will change for each run because the current time is used for generating it. This can be annoying because it makes regeneration of the very same PDF (looking at the file contents) very difficult (see e.g. http://superuser.com/questions/130347/how-do-i-produce-bytewise-consistent-documents-with-pdflatex).

I suggest to add a flag to pdftex that allows to disable the generation of \ID. Something like
[-no]-id=<value>
to disable the generation of \ID or specifying the value on command line.

----------------------------------------------------------------------

You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=496&aid=4328&group_id=106

From pdftex-bugs at sarovar.org  Fri Mar 18 14:28:40 2011
From: pdftex-bugs at sarovar.org (pdftex-bugs at sarovar.org)
Date: Fri, 18 Mar 2011 18:58:40 +0530
Subject: [NTG-pdftex] =?utf-8?q?=5Bpdftex-Bugs=5D=5B4332=5D_pdflatex_enter?=
	=?utf-8?q?s_endless_loop_on_malformed_align-environment_in_nonstop?=
	=?utf-8?q?mode?=
Message-ID: <E1Q0ZjM-0007qJ-Pp@sarovar.org>

Bugs item #4332, was opened at 2011-03-18 13:28
Status: Open
Priority: 3
Submitted By: Mike Rofone (mikerofone)
Assigned to: Nobody (None)
Summary: pdflatex enters endless loop on malformed align-environment in nonstopmode 
Category: Build process
Group: v1.40.1
Resolution: None


Initial Comment:
On compiling the attached minimal example containing a malformed "align" environment, pdftex seems to enter an endless loop (does not terminate and 100% CPU load) if invoked as

pdftex \nonstopmode \input{test.tex}

which is how rubber seems to invoke pdftex. If run without nonstopmode, compilation immediately stops at an error prompt (as expected).

I do not know if this is an error with the amsmath-package defining the align-environment, but as it looks a little similar to bug #909 ( http://sarovar.org/tracker/?func=detail&atid=493&aid=909&group_id=106 ) I hope that it does fit here. I do not have another LaTeX compiler to test with.

Further detail:
[mikerofone at ente ~/Desktop]$ pdflatex --version
pdfTeX 3.1415926-1.40.11-2.2 (TeX Live 2010/Arch Linux)
kpathsea version 6.0.0
Copyright 2010 Peter Breitenlohner (eTeX)/Han The Thanh (pdfTeX).
There is NO warranty.  Redistribution of this software is
covered by the terms of both the pdfTeX copyright and
the Lesser GNU General Public License.
For more information about these matters, see the file
named COPYING and the pdfTeX source.
Primary author of pdfTeX: Peter Breitenlohner (eTeX)/Han The Thanh (pdfTeX).
Compiled with libpng 1.4.5; using libpng 1.4.5
Compiled with zlib 1.2.5; using zlib 1.2.5
Compiled with poppler version 0.16.2


----------------------------------------------------------------------

You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=4332&group_id=106

From pdftex-featurerequests at sarovar.org  Fri Mar 18 20:15:16 2011
From: pdftex-featurerequests at sarovar.org (pdftex-featurerequests at sarovar.org)
Date: Sat, 19 Mar 2011 00:45:16 +0530
Subject: [NTG-pdftex] =?utf-8?q?=5Bpdftex-Feature_Requests=5D=5B4333=5D_Pr?=
	=?utf-8?q?ovide_information_about_=5Cwrite18_calls?=
Message-ID: <E1Q0f8m-0000jk-5V@sarovar.org>

Feature Requests item #4333, was opened at 2011-03-18 19:15
Status: Open
Priority: 3
Submitted By: Martin Scharrer (martin_scharrer)
Assigned to: Nobody (None)
Summary: Provide information about \write18 calls 
Category: Interface Improvements (example)
Group: None
Resolution: None


Initial Comment:
Further information about \write18 calls should be provided.
At the moment \pdfshellescape tells if shell escape is disabled, enabled or restricted in general but no status information is provided for specific \write18 calls.

It would be very useful to be able to access the following information:

 * Was the program executed or disallowed because of restricted mode. In other words: Is the program listed as trusted or not.
 * Can the program be found?
 * Return code of the program that is executed.
 * Quoting specification for the command call.


Using this information a package could test if the external program was really successfully executed or not and why and provide appropriate information to the user.


References:
This topic has been discussed as "Testing success of \write18" on comp.text.tex (http://groups.google.com/group/comp.text.tex/tree/browse_frm/thread/eee73e762d969fe5/9c3f2f6c61e0eb55?rnum=1&_done=%2Fgroup%2Fcomp.text.tex%2Fbrowse_frm%2Fthread%2Feee73e762d969fe5%3F#doc_9c3f2f6c61e0eb55) and TeX.SX (http://tex.stackexchange.com/questions/13226/test-success-of-write18).

----------------------------------------------------------------------

You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=496&aid=4333&group_id=106

From martin at oneiros.de  Fri Mar 25 14:40:09 2011
From: martin at oneiros.de (=?ISO-8859-1?Q?Martin_Schr=F6der?=)
Date: Fri, 25 Mar 2011 14:40:09 +0100
Subject: [NTG-pdftex] Fwd: [poppler] [PATCH] Fixup LaTeX composed characters
In-Reply-To: <EMEW3|ef8a0cbb7f222020a70f97eaf31bcf2dn2ODSA04tdb2|ecs.soton.ac.uk|5d89ed1cf89e3eeef7fba8f005b6c3c0@ecs.soton.ac.uk>
References: <5d89ed1cf89e3eeef7fba8f005b6c3c0@ecs.soton.ac.uk>
	<EMEW3|ef8a0cbb7f222020a70f97eaf31bcf2dn2ODSA04tdb2|ecs.soton.ac.uk|5d89ed1cf89e3eeef7fba8f005b6c3c0@ecs.soton.ac.uk>
Message-ID: <AANLkTi=6_Omavx0bST=Xecd_A6_pOBomVVTJ1QZ9wkHj@mail.gmail.com>

FYI.
Don't ask me what's the problem with our PDF seems to be...

---------- Forwarded message ----------
From: Tim Brody <tdb2 at ecs.soton.ac.uk>
Date: 2011/3/25
Subject: [poppler] [PATCH] Fixup LaTeX composed characters
To: poppler at lists.freedesktop.org


Hi All,

Attached is a patch to address the previous problem I wrote about with
pdflatex-produced PDFs that contain overlapping-diacritics/accents.

This patch contains:
?- a table of diacritic to Unicode combining character code-points
?- if an overlapping character is detected checks whether the first (in
stream-sequence) character is in the table
?- pops the diacritic off the word
?- appends the diacritic to the character as a Unicode combining character

This does not fix \b{o} or \d{o} because TeX places them on the next line
(so aren't detected as overlapping).

Yes, this is an issue with pdflatex but there are 100,000s of TeX-produced
PDFs for which we don't have source for ...

--
All the best,
Tim.
_______________________________________________
poppler mailing list
poppler at lists.freedesktop.org
http://lists.freedesktop.org/mailman/listinfo/poppler
-------------- next part --------------
From f4f70a49c42905d1e249a750ec9c68cd469586f8 Mon Sep 17 00:00:00 2001
From: Tim Brody <tdb2 at ecs.soton.ac.uk>
Date: Fri, 25 Mar 2011 13:02:18 +0000
Subject: [PATCH] Turn TeX-style composed characters into Unicode combining characters during text conversion.

---
 poppler/TextOutputDev.cc         |   39 +++++++++++++++++++++++----
 poppler/UnicodeCompEquivTables.h |   54 ++++++++++++++++++++++++++++++++++++++
 poppler/UnicodeTypeTable.cc      |   21 ++++++++++++++
 poppler/UnicodeTypeTable.h       |    2 +
 4 files changed, 110 insertions(+), 6 deletions(-)
 create mode 100644 poppler/UnicodeCompEquivTables.h

diff --git a/poppler/TextOutputDev.cc b/poppler/TextOutputDev.cc
index 13c67c6..b949986 100644
--- a/poppler/TextOutputDev.cc
+++ b/poppler/TextOutputDev.cc
@@ -2161,6 +2161,7 @@ void TextPage::addChar(GfxState *state, double x, double y,
   double x1, y1, w1, h1, dx2, dy2, base, sp, delta;
   GBool overlap;
   int i;
+  Unicode *uc = NULL; // u + combining character
 
   // subtract char and word spacing from the dx,dy values
   sp = state->getCharSpace();
@@ -2236,12 +2237,35 @@ void TextPage::addChar(GfxState *state, double x, double y,
     }
     overlap = fabs(delta) < dupMaxPriDelta * curWord->fontSize &&
               fabs(base - curWord->base) < dupMaxSecDelta * curWord->fontSize;
-    if (overlap || lastCharOverlap ||
-	sp < -minDupBreakOverlap * curWord->fontSize ||
-	sp > minWordBreakSpace * curWord->fontSize ||
-	fabs(base - curWord->base) > 0.5 ||
-	curFontSize != curWord->fontSize) {
-      endWord();
+    // whitespace caused by delta
+    if (sp > minWordBreakSpace * curWord->fontSize) {
+        endWord();
+    }
+    // font size changed
+    else if (curFontSize != curWord->fontSize) {
+        endWord();
+    }
+    // vertical whitespace
+	else if (fabs(base - curWord->base) > 0.5 ) {
+        endWord();
+    }
+    // overlapping characters
+    else if (overlap || lastCharOverlap ||
+            sp < -minDupBreakOverlap * curWord->fontSize ) {
+      // "u => ?, as seen in pdflatex output
+      Unicode uu;
+      if (unicodeCombineEquiv (curWord->text[curWord->len - 1], &uu)) {
+          curWord->len--;
+          curWord->charLen--;
+          overlap = gFalse;
+          uc = (Unicode *) gmallocn (uLen, sizeof (Unicode));
+          memcpy (uc, u, uLen * sizeof (Unicode));
+          uc[uLen++] = uu;
+          u = uc;
+      }
+      else {
+        endWord();
+      }
     }
     lastCharOverlap = overlap;
   } else {
@@ -2293,6 +2317,9 @@ void TextPage::addChar(GfxState *state, double x, double y,
       }
     }
   }
+  if (uc) {
+      gfree (uc);
+  }
   if (curWord) {
     curWord->charLen += nBytes;
   }
diff --git a/poppler/UnicodeCompEquivTables.h b/poppler/UnicodeCompEquivTables.h
new file mode 100644
index 0000000..7b28ea1
--- /dev/null
+++ b/poppler/UnicodeCompEquivTables.h
@@ -0,0 +1,54 @@
+// Generated by combining.pl at Thu Mar 24 11:44:21 2011
+
+typedef struct {
+	Unicode character;
+	Unicode combining;
+} combine_equiv;
+
+#define COMBINE_EQUIV_TABLE_LENGTH 43
+
+static const combine_equiv combine_equiv_table[] = {
+    { 0x0022, 0x030e },
+    { 0x0027, 0x0301 },
+    { 0x005e, 0x0302 },
+    { 0x005f, 0x0332 },
+    { 0x0060, 0x0300 },
+    { 0x007e, 0x0303 },
+    { 0x00a8, 0x0308 },
+    { 0x00af, 0x0305 },
+    { 0x00b0, 0x030a },
+    { 0x00b4, 0x0301 },
+    { 0x00b8, 0x0327 },
+    { 0x02b1, 0x0324 },
+    { 0x02b2, 0x0321 },
+    { 0x02b7, 0x032b },
+    { 0x02b9, 0x0301 },
+    { 0x02ba, 0x030b },
+    { 0x02bb, 0x0312 },
+    { 0x02bc, 0x0315 },
+    { 0x02bd, 0x0314 },
+    { 0x02c0, 0x0309 },
+    { 0x02c6, 0x0302 },
+    { 0x02c7, 0x030c },
+    { 0x02c8, 0x030d },
+    { 0x02c9, 0x0304 },
+    { 0x02ca, 0x0301 },
+    { 0x02cb, 0x0300 },
+    { 0x02cc, 0x0329 },
+    { 0x02cd, 0x0331 },
+    { 0x02d4, 0x0323 },
+    { 0x02d5, 0x031e },
+    { 0x02d6, 0x031f },
+    { 0x02d7, 0x0320 },
+    { 0x02d8, 0x0306 },
+    { 0x02d9, 0x0307 },
+    { 0x02da, 0x030a },
+    { 0x02db, 0x0328 },
+    { 0x02dc, 0x0303 },
+    { 0x02dd, 0x030b },
+    { 0x0384, 0x0301 },
+    { 0x0559, 0x0314 },
+    { 0x055a, 0x0313 },
+    { 0x0901, 0x0310 },
+    { 0x2017, 0x0333 },
+};
diff --git a/poppler/UnicodeTypeTable.cc b/poppler/UnicodeTypeTable.cc
index c0483a5..cf4c762 100644
--- a/poppler/UnicodeTypeTable.cc
+++ b/poppler/UnicodeTypeTable.cc
@@ -22,6 +22,7 @@
 #include <stdlib.h>
 #include "CharTypes.h"
 #include "UnicodeTypeTable.h"
+#include "UnicodeCompEquivTables.h"
 #include "goo/gmem.h"
 
 struct UnicodeMapTableEntry {
@@ -1095,6 +1096,26 @@ static GBool combine(Unicode base, Unicode add, Unicode *out) {
       (((v) - HANGUL_V_BASE) + (HANGUL_V_COUNT * ((l) - HANGUL_L_BASE)))))
 #define HANGUL_COMPOSE_LV_T(lv, t) ((lv) + ((t) - HANGUL_T_BASE))
 
+GBool unicodeCombineEquiv(Unicode in, Unicode *out) {
+    int start = 0, end = COMBINE_EQUIV_TABLE_LENGTH;
+
+    while (gTrue) {
+        int midpoint = (start+end) / 2;
+        if (combine_equiv_table[midpoint].character == in) {
+            *out = combine_equiv_table[midpoint].combining;
+            return gTrue;
+        }
+        else if (start == midpoint)
+            break;
+        else if (in > combine_equiv_table[midpoint].character)
+            start = midpoint;
+        else
+            end = midpoint;
+    }
+
+    return gFalse;
+}
+
 // Converts Unicode string @in of length @len to its normalization in form 
 // NFKC (compatibility decomposition + canonical composition). The length of
 // the resulting Unicode string is returned in @out_len. If non-NULL, @indices
diff --git a/poppler/UnicodeTypeTable.h b/poppler/UnicodeTypeTable.h
index 939e916..cabe80e 100644
--- a/poppler/UnicodeTypeTable.h
+++ b/poppler/UnicodeTypeTable.h
@@ -28,6 +28,8 @@ extern GBool unicodeTypeR(Unicode c);
 
 extern Unicode unicodeToUpper(Unicode c);
 
+extern GBool unicodeCombineEquiv(Unicode in, Unicode *out);
+
 extern Unicode *unicodeNormalizeNFKC(Unicode *in, int len, 
 				     int *out_len, int **offsets);
 
-- 
1.7.2.3

From pragma at wxs.nl  Fri Mar 25 16:51:02 2011
From: pragma at wxs.nl (Hans Hagen)
Date: Fri, 25 Mar 2011 16:51:02 +0100
Subject: [NTG-pdftex] [Dev-luatex] Fwd: [poppler] [PATCH] Fixup LaTeX
	composed characters
In-Reply-To: <AANLkTi=6_Omavx0bST=Xecd_A6_pOBomVVTJ1QZ9wkHj@mail.gmail.com>
References: <5d89ed1cf89e3eeef7fba8f005b6c3c0@ecs.soton.ac.uk>	<EMEW3|ef8a0cbb7f222020a70f97eaf31bcf2dn2ODSA04tdb2|ecs.soton.ac.uk|5d89ed1cf89e3eeef7fba8f005b6c3c0@ecs.soton.ac.uk>
	<AANLkTi=6_Omavx0bST=Xecd_A6_pOBomVVTJ1QZ9wkHj@mail.gmail.com>
Message-ID: <4D8CB9E6.6050505@wxs.nl>

On 25-3-2011 2:40, Martin Schr?der wrote:
> FYI.
> Don't ask me what's the problem with our PDF seems to be...

indeed.

if we even consider this for luatex, it should be an option that is not 
applied by default ... tweaking an included pdf file should never happen 
automatically as overlapping can be intentional ...

personally I think that this is more something to plug into (for 
instance) qpdf i.e. repair the problematic file using independent tools

(actually, if it is added to pdftex one could use pdftex to copy the 
document into a another one that then gets the latex accents corrected)

Hans


> ---------- Forwarded message ----------
> From: Tim Brody<tdb2 at ecs.soton.ac.uk>
> Date: 2011/3/25
> Subject: [poppler] [PATCH] Fixup LaTeX composed characters
> To: poppler at lists.freedesktop.org
>
>
> Hi All,
>
> Attached is a patch to address the previous problem I wrote about with
> pdflatex-produced PDFs that contain overlapping-diacritics/accents.
>
> This patch contains:
>   - a table of diacritic to Unicode combining character code-points
>   - if an overlapping character is detected checks whether the first (in
> stream-sequence) character is in the table
>   - pops the diacritic off the word
>   - appends the diacritic to the character as a Unicode combining character
>
> This does not fix \b{o} or \d{o} because TeX places them on the next line
> (so aren't detected as overlapping).
>
> Yes, this is an issue with pdflatex but there are 100,000s of TeX-produced
> PDFs for which we don't have source for ...


-----------------------------------------------------------------
                                           Hans Hagen | PRAGMA ADE
               Ridderstraat 27 | 8061 GH Hasselt | The Netherlands
     tel: 038 477 53 69 | voip: 087 875 68 74 | www.pragma-ade.com
                                              | www.pragma-pod.nl
-----------------------------------------------------------------

From lev.bishop at gmail.com  Wed Mar 30 16:06:47 2011
From: lev.bishop at gmail.com (Lev Bishop)
Date: Wed, 30 Mar 2011 10:06:47 -0400
Subject: [NTG-pdftex] Fwd: [poppler] [PATCH] Fixup LaTeX composed characters
Message-ID: <AANLkTikAb6=Qj0uuowaL7p5sZ+40NBP7Am+-TW9feE1f@mail.gmail.com>

> On 25-3-2011 2:40, Martin Schr?der wrote:
> > FYI.
> > Don't ask me what's the problem with our PDF seems to be...
>
> indeed.
>
> if we even consider this for luatex, it should be an option that is not
> applied by default ... tweaking an included pdf file should never happen
> automatically as overlapping can be intentional ...

I think the point of the message was not that pdftex should be fixing
included files, but that pdftex should not be doing something that the
pdf viewers then have to work around.

As far as I understand it, the poppler people are complaining that
copying accented text out of the pdf doesn't work right, because
instead of an "?" character, the file contains "a" and the accent as
separate glyphs, correctly positioned to look like if it was an "?",
which is fine for viewing, but not for text-extraction. I suspect that
this behaviour is too deeply embedded in tex to be easily fixable.

Lev

-- 
Lev Bishop
Joint Quantum Institute

