From noreply at sarovar.org  Sun Jul  1 02:14:41 2007
From: noreply at sarovar.org (noreply at sarovar.org)
Date: Sun, 01 Jul 2007 05:44:41 +0530
Subject: [NTG-pdftex] [ pdftex-Patches-828 ] Make /XObject /Form coordinates
	independent from PDF page dimensions
Message-ID: <E1I4n5N-00070H-00@sarovar.org>

Patches item #828, was opened at 2007-06-30 17:14
You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=495&aid=828&group_id=106

Category: Positioning
Group: v1.30.0
Status: Open
Resolution: None
Priority: 5
Submitted By: Hartmut Henkel (hhenkel)
Assigned to: Nobody (None)
Summary: Make /XObject /Form coordinates independent from PDF page dimensions

Initial Comment:
Experimental patch for pdftex-1.40.3/luatex

In pdftex-1.30.4 \pdfpageheight spills over into
coordinate transforms inside /XObject /Form objects.
This isn't an error, but it complicates coordinate
transforms. This tiny patch should tidy up the web
source a little, making coordinate transforms inside
/Form objects relative to their inner lower left
position, independently from the PDF page dimensions.

Testing welcome.


----------------------------------------------------------------------

>Comment By: Hartmut Henkel (hhenkel)
Date: 2007-07-01 02:14

Message:
Logged In: YES 
user_id=929

more simplified, few variables removed.

----------------------------------------------------------------------

Comment By: Hartmut Henkel (hhenkel)
Date: 2007-06-30 18:29

Message:
Logged In: YES 
user_id=929

annotations were positioned wrongly. patch corrected.

----------------------------------------------------------------------

Comment By: Hartmut Henkel (hhenkel)
Date: 2007-06-30 17:35

Message:
Logged In: YES 
user_id=929

seems it can be further simplified, new patch. Testing welcome.

----------------------------------------------------------------------

You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=495&aid=828&group_id=106

From hartmut_henkel at gmx.de  Sun Jul  1 16:48:36 2007
From: hartmut_henkel at gmx.de (Hartmut Henkel)
Date: Sun, 1 Jul 2007 16:48:36 +0200 (CEST)
Subject: [NTG-pdftex] \pagebox documentation
Message-ID: <alpine.DEB.0.999.0707011643190.13965@hahepc1.hahe>

Hi,

the pdftex manual writes that \pdfpagebox (integer) globally overrides
the pdf-box-spec option given to \pdfximage. But in pdftex.web
\pdfpagebox seems to be only a fall-back value, if no such option is
given to \pdfximage. Should the docu be corrected, or the code?

Regards, Hartmut

From pragma at wxs.nl  Sun Jul  1 18:21:58 2007
From: pragma at wxs.nl (Hans Hagen)
Date: Sun, 01 Jul 2007 18:21:58 +0200
Subject: [NTG-pdftex] \pagebox documentation
In-Reply-To: <alpine.DEB.0.999.0707011643190.13965@hahepc1.hahe>
References: <alpine.DEB.0.999.0707011643190.13965@hahepc1.hahe>
Message-ID: <4687D4A6.9070407@wxs.nl>

Hartmut Henkel wrote:
> Hi,
> 
> the pdftex manual writes that \pdfpagebox (integer) globally overrides
> the pdf-box-spec option given to \pdfximage. But in pdftex.web
> \pdfpagebox seems to be only a fall-back value, if no such option is
> given to \pdfximage. Should the docu be corrected, or the code?

if it's an option to pdfximage then it best cannot be a global override, 
so the docu is wrong then

Hans

-----------------------------------------------------------------
                                           Hans Hagen | PRAGMA ADE
               Ridderstraat 27 | 8061 GH Hasselt | The Netherlands
      tel: 038 477 53 69 | fax: 038 477 53 74 | www.pragma-ade.com
                                              | www.pragma-pod.nl
-----------------------------------------------------------------

From martin at oneiros.de  Sun Jul  1 19:25:10 2007
From: martin at oneiros.de (=?ISO-8859-1?Q?Martin_Schr=F6der?=)
Date: Sun, 1 Jul 2007 19:25:10 +0200
Subject: [NTG-pdftex] \pagebox documentation
In-Reply-To: <4687D4A6.9070407@wxs.nl>
References: <alpine.DEB.0.999.0707011643190.13965@hahepc1.hahe>
	<4687D4A6.9070407@wxs.nl>
Message-ID: <68c491a60707011025t2b285a6ek9815870bf249ac70@mail.gmail.com>

2007/7/1, Hans Hagen <pragma at wxs.nl>:
> Hartmut Henkel wrote:
> > the pdftex manual writes that \pdfpagebox (integer) globally overrides
> > the pdf-box-spec option given to \pdfximage. But in pdftex.web
> > \pdfpagebox seems to be only a fall-back value, if no such option is
> > given to \pdfximage. Should the docu be corrected, or the code?
>
> if it's an option to pdfximage then it best cannot be a global override,
> so the docu is wrong then

Are we talking about the primitive formerly known as
\pdfoptionalwaysusepdfpagebox? If so, then yes, that was meant as a
global override, so pdftex.web would be wrong.

Best
   Martin

From hanthethanh at gmail.com  Sun Jul  1 20:15:13 2007
From: hanthethanh at gmail.com (Thanh Han The)
Date: Sun, 1 Jul 2007 20:15:13 +0200
Subject: [NTG-pdftex] \pagebox documentation
Message-ID: <74f506dc0707011115l1109ab43tb1f15cd8702645e4@mail.gmail.com>

On Sun, Jul 01, 2007 at 06:21:58PM +0200, Hans Hagen wrote:
> Hartmut Henkel wrote:
> > Hi,
> >
> > the pdftex manual writes that \pdfpagebox (integer) globally overrides
> > the pdf-box-spec option given to \pdfximage. But in pdftex.web
> > \pdfpagebox seems to be only a fall-back value, if no such option is
> > given to \pdfximage. Should the docu be corrected, or the code?
>
> if it's an option to pdfximage then it best cannot be a global override,
> so the docu is wrong then

indeed.

ref: http://www.ntg.nl/pipermail/ntg-pdftex/2005-September/001666.html

Thanh

From noreply at sarovar.org  Mon Jul  2 09:10:47 2007
From: noreply at sarovar.org (noreply at sarovar.org)
Date: Mon, 02 Jul 2007 12:40:47 +0530
Subject: [NTG-pdftex] [ pdftex-Bugs-824 ] Bus error caused by loading an
	image into a format file
Message-ID: <E1I5G3b-0000zK-00@sarovar.org>

Bugs item #824, was opened at 2007-06-26 00:22
You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=824&group_id=106

Category: Image inclusion
Group: v1.40.3
Status: Open
Resolution: Accepted
Priority: 5
Submitted By: Robin Houston (robinhouston)
Assigned to: Martin Schr?der (oneiros)
Summary: Bus error caused by loading an image into a format file

Initial Comment:
I have written a tool that speeds up repeated
compilation of a source file, by generating a format
from the preamble of the document, and then using it to
compile the body.

One user reported a crash when using this tool with a
custom letterhead class; the class in question may be
found at
http://www.soe.ucsc.edu/~elm/LaTeX/ucletter.cls (though
note that a simpler demonstration is attached to this
report).

The bug is triggered by the fact that this class loads
an image during the processing of the preamble (i.e.
during the processing of the .ini file) and saves it in
a box. When this box is used, during the compilation of
the body, pdftex crashes.

This does work with ordinary (non-PDF) TeX, so the
problem is specific to PDFTeX.

The attachment contains a simple demonstration of the
problem. Unpack it and run 'make'.


----------------------------------------------------------------------

>Comment By: Taco Hoekwater (taco)
Date: 2007-07-02 09:10

Message:
Logged In: YES 
user_id=1608

I got an example from Hartmut Henkel that needs
head_tab[pdf_obj_ximage], it is test2 in attached tar. I
tried a quick test and it indeed seems to work ok if I dump
*only* that head_tab entry. 

But, you have to solve another problem as well. If you use
the image in the initex-dumped pdf, then the image wil not
be included in the runtime pdf (its state is 'written').
Somehow this state needs to be reset.

Taco


----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-06-30 18:56

Message:
Logged In: YES 
user_id=4579

The attached patch (initex-objects.patch) implements the
suggestions made below, together with a few other
improvements. It incorporates Taco Hoekwater's code, so
should be applied to a clean source tree.

In particular, it reinstates the ability to produce both a
PDF document and a memory dump in the same run. I've tested
it with \pdfxform as well as \pdfximage.

Comments? Counterexamples?

Robin

----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-06-30 14:38

Message:
Logged In: YES 
user_id=4579

Fortunately the "two picture" problem (demonstrated in the
attachment twopic.tar.gz) is trivial to solve: simply dump
and undump the variable pdf_ximage_count.

Presumably the same should be done for pdf_obj_count and
pdf_xform_count. Whether this is sufficient, I have no idea:
none of us have tested forms or raw objects, have we?


----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-06-30 12:08

Message:
Logged In: YES 
user_id=4579

A minor bug in the initex-refximage-dump.patch: the test for
fixed_pdfoutput=1 ought to be fixed_pdfoutput>0, otherwise
it will fail with \pdfoutput=2, say.

Another unrelated problem is that, if you load an image from
the .ini file, and then load and display another image from
the .tex file, the first image will appear where the second
one ought to be. I'll try and find out why this is happening.

(Incidentally, I haven't (yet?) discovered any problems
stemming from not (un)dumping the linked list headers.)

----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-06-29 20:08

Message:
Logged In: YES 
user_id=4579

Argh! Interesting, thanks.

Clearly my understanding of the pdftex code is patchy at
best. That said, what is gained by dumping and restoring the
head_tab? If I remove the parts of your code that dump and
undump the head_tab, then your example works (and mine
continue to work).

Robin

----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-06-29 18:32

Message:
Logged In: YES 
user_id=1608

Try a document that contains items besides a single image.
Many of the auxiliary tables are not dumped, resulting in
assertion failures in the non-ini run.

You don't even need to save or reuse boxes for those
crashes, just make a pair of:

% test.ini
\input plain
\pdfoutput=1
hello
\dump


% test.tex
world!
\end




----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-06-29 17:24

Message:
Logged In: YES 
user_id=4579

PS. I have just attached a new tar file, containing some
simple tests that create PDF from the IniTeX run. They all
appear to work, when my patch is applied.

----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-06-29 17:19

Message:
Logged In: YES 
user_id=4579

I don't think creating a PDF file from the IniTeX run is a
real problem. The attached tiny patch (to be applied on top
of Taco Hoekwater's first patch) seems to make it work.

Am I missing something?

----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-06-29 12:34

Message:
Logged In: YES 
user_id=1608

Here is the promised extra patch. No error is generated,
just a simple warning. Pdftex continues executing as if \end
was given instead.

----------------------------------------------------------------------

Comment By: Nobody (None)
Date: 2007-06-28 22:33

Message:
Logged In: NO 

Hi, the inability to _both_ dump a format _and_ produce
output in the same iniTeX run is probably tolerable as long
as no crashes occur.  I don't know the workings of WhizzyTeX
in detail: it is conceivable that their in-document dump
would be affected.  However, it is unlikely that WhizzyTeX
will indeed require both the output as well as the dump (the
dump may well contain pictures, for example from floats that
are going to be placed later), so there is at least a
reasonable way to tackle this from the macro level (divert
\shipout in the manner of the everyshi.sty package).

At least mylatex.ltx (and consequently preview-latex) should
work fine: \shipout before \begin{document} would be
extremely unusual and would result in strange results, anyway.

David

----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-06-28 21:09

Message:
Logged In: YES 
user_id=1608

Small limitation that I have yet to implement: the ability
to move stuff over from the initex run means that if initex
actually creates a pdf file, dumping a format should be
disallowed, or silently ignored. Attempting to keep track of
two disjunct pdf documents is just too hard for me. 

Note that I do not want to prohibit pdf creation from
initex. Just that you can't create a pdf document _as well
as_ perform a \dump.



----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-06-28 17:01

Message:
Logged In: YES 
user_id=4579

Bravo!

I was ready to embark on this myself, so I'm delighted to be
spared the trouble. It passes all the tests I've tried so far.

----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-06-28 12:57

Message:
Logged In: YES 
user_id=1608

Here is a patch that fixes the problem by dumping and
restoring the image _meta information_ to/from any generated
format. 

The image _data_ is not included (that would be really hard
to do in a portable way), and therefore the undumping
routines have to redo most of the work of \pdfximage, but
this is transparent to the user except that the tests
for \pdfminorversion and \pdfinclusionerrorlevel tests are
re-done.

The patch also saves some pdftex arrays that are needed to
rediscover the object. This could eventually be extended to
 make sure \refxform et al work as well. As of now, that is
untested due to lack of example.

Comments and testing welcome, as always.



----------------------------------------------------------------------

Comment By: Martin Schr?der (oneiros)
Date: 2007-06-26 23:01

Message:
Logged In: YES 
user_id=421

Sorry, pdf things work different then dvi, so we can not
make \pdfximage etc. in ini mode without a lot of work; we
will probably disable a bunch of primitives.

----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-06-26 15:49

Message:
Logged In: YES 
user_id=4579

Simplifying the example by eliminating the graphics package:

==> foo.ini <==
\documentclass{minimal}

\newbox\picbox
\pdfximage{pic.pdf}
\setbox\picbox\hbox{\pdfrefximage\pdflastximage}

\dump

==> foo.tex <==
\begin{document}
        \box\picbox
\end{document}


Also, I see now that my comparison with dvi-mode is indeed a
false one, because the mechanisms are quite different, and
the DVI graphics driver only has to include a \special,
rather than the graphic itself.

A simple solution, I suppose, would be to make \pdfrefximage
(and, presumably, the other \pdfrefx commands) invalid in
IniTeX mode. Perhaps this is too brutal, since it forbids
certain harmless activities such as finding the dimensions
of an image from an .ini file; and of course I would be
delighted if it were made to work instead.


----------------------------------------------------------------------

Comment By: Reinhard Kotucha (reinhard)
Date: 2007-06-26 01:26

Message:
Logged In: YES 
user_id=4195

Martin,
you probably can't do everything in a format file.  However,
it would be nice to be able to put graphics to a format file
at least.  Suppose that a web server has to generate PDF
files on-the-fly, each contains a company logo.  The best
place place for the logo is the format file if speed
matters.  It would be nice if there are no restrictions.

Regards,
  Reinhard



----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-06-26 00:42

Message:
Logged In: YES 
user_id=4579

I'm impressed by the speed of your response! Thanks.

If you replace the PDF image by an EPS file, and use
-output-format dvi, then it does work. That suggests to me
that the problem is not fundamentally caused by a limitation
of IniTeX. But I don't know enough about the inner workings
of the \includegraphics command to be sure about that.
(Perhaps PDF graphics are handled in a sufficiently
different way for this to be a false comparison?)

In any case, as you say, it shouldn't crash!

----------------------------------------------------------------------

Comment By: Martin Schr?der (oneiros)
Date: 2007-06-26 00:30

Message:
Logged In: YES 
user_id=421

I can reproduce it, and it obviously shouldn't crash, but
I'm really not shure if it's supposed to work, as the format
of course will not save the picture. You can't do everything
in IniTeX...

----------------------------------------------------------------------

You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=824&group_id=106

From noreply at sarovar.org  Mon Jul  2 09:11:25 2007
From: noreply at sarovar.org (noreply at sarovar.org)
Date: Mon, 02 Jul 2007 12:41:25 +0530
Subject: [NTG-pdftex] [ pdftex-Bugs-824 ] Bus error caused by loading an
	image into a format file
Message-ID: <E1I5G4D-00010N-00@sarovar.org>

Bugs item #824, was opened at 2007-06-26 00:22
You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=824&group_id=106

Category: Image inclusion
Group: v1.40.3
Status: Open
Resolution: Accepted
Priority: 5
Submitted By: Robin Houston (robinhouston)
Assigned to: Martin Schr?der (oneiros)
Summary: Bus error caused by loading an image into a format file

Initial Comment:
I have written a tool that speeds up repeated
compilation of a source file, by generating a format
from the preamble of the document, and then using it to
compile the body.

One user reported a crash when using this tool with a
custom letterhead class; the class in question may be
found at
http://www.soe.ucsc.edu/~elm/LaTeX/ucletter.cls (though
note that a simpler demonstration is attached to this
report).

The bug is triggered by the fact that this class loads
an image during the processing of the preamble (i.e.
during the processing of the .ini file) and saves it in
a box. When this box is used, during the compilation of
the body, pdftex crashes.

This does work with ordinary (non-PDF) TeX, so the
problem is specific to PDFTeX.

The attachment contains a simple demonstration of the
problem. Unpack it and run 'make'.


----------------------------------------------------------------------

>Comment By: Taco Hoekwater (taco)
Date: 2007-07-02 09:11

Message:
Logged In: YES 
user_id=1608

I got an example from Hartmut Henkel that needs
head_tab[pdf_obj_ximage], it is test2 in attached tar. I
tried a quick test and it indeed seems to work ok if I dump
*only* that head_tab entry. 

But, you have to solve another problem as well. If you use
the image in the initex-dumped pdf, then the image wil not
be included in the runtime pdf (its state is 'written').
Somehow this state needs to be reset.

Taco


----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-07-02 09:10

Message:
Logged In: YES 
user_id=1608

I got an example from Hartmut Henkel that needs
head_tab[pdf_obj_ximage], it is test2 in attached tar. I
tried a quick test and it indeed seems to work ok if I dump
*only* that head_tab entry. 

But, you have to solve another problem as well. If you use
the image in the initex-dumped pdf, then the image wil not
be included in the runtime pdf (its state is 'written').
Somehow this state needs to be reset.

Taco


----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-06-30 18:56

Message:
Logged In: YES 
user_id=4579

The attached patch (initex-objects.patch) implements the
suggestions made below, together with a few other
improvements. It incorporates Taco Hoekwater's code, so
should be applied to a clean source tree.

In particular, it reinstates the ability to produce both a
PDF document and a memory dump in the same run. I've tested
it with \pdfxform as well as \pdfximage.

Comments? Counterexamples?

Robin

----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-06-30 14:38

Message:
Logged In: YES 
user_id=4579

Fortunately the "two picture" problem (demonstrated in the
attachment twopic.tar.gz) is trivial to solve: simply dump
and undump the variable pdf_ximage_count.

Presumably the same should be done for pdf_obj_count and
pdf_xform_count. Whether this is sufficient, I have no idea:
none of us have tested forms or raw objects, have we?


----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-06-30 12:08

Message:
Logged In: YES 
user_id=4579

A minor bug in the initex-refximage-dump.patch: the test for
fixed_pdfoutput=1 ought to be fixed_pdfoutput>0, otherwise
it will fail with \pdfoutput=2, say.

Another unrelated problem is that, if you load an image from
the .ini file, and then load and display another image from
the .tex file, the first image will appear where the second
one ought to be. I'll try and find out why this is happening.

(Incidentally, I haven't (yet?) discovered any problems
stemming from not (un)dumping the linked list headers.)

----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-06-29 20:08

Message:
Logged In: YES 
user_id=4579

Argh! Interesting, thanks.

Clearly my understanding of the pdftex code is patchy at
best. That said, what is gained by dumping and restoring the
head_tab? If I remove the parts of your code that dump and
undump the head_tab, then your example works (and mine
continue to work).

Robin

----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-06-29 18:32

Message:
Logged In: YES 
user_id=1608

Try a document that contains items besides a single image.
Many of the auxiliary tables are not dumped, resulting in
assertion failures in the non-ini run.

You don't even need to save or reuse boxes for those
crashes, just make a pair of:

% test.ini
\input plain
\pdfoutput=1
hello
\dump


% test.tex
world!
\end




----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-06-29 17:24

Message:
Logged In: YES 
user_id=4579

PS. I have just attached a new tar file, containing some
simple tests that create PDF from the IniTeX run. They all
appear to work, when my patch is applied.

----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-06-29 17:19

Message:
Logged In: YES 
user_id=4579

I don't think creating a PDF file from the IniTeX run is a
real problem. The attached tiny patch (to be applied on top
of Taco Hoekwater's first patch) seems to make it work.

Am I missing something?

----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-06-29 12:34

Message:
Logged In: YES 
user_id=1608

Here is the promised extra patch. No error is generated,
just a simple warning. Pdftex continues executing as if \end
was given instead.

----------------------------------------------------------------------

Comment By: Nobody (None)
Date: 2007-06-28 22:33

Message:
Logged In: NO 

Hi, the inability to _both_ dump a format _and_ produce
output in the same iniTeX run is probably tolerable as long
as no crashes occur.  I don't know the workings of WhizzyTeX
in detail: it is conceivable that their in-document dump
would be affected.  However, it is unlikely that WhizzyTeX
will indeed require both the output as well as the dump (the
dump may well contain pictures, for example from floats that
are going to be placed later), so there is at least a
reasonable way to tackle this from the macro level (divert
\shipout in the manner of the everyshi.sty package).

At least mylatex.ltx (and consequently preview-latex) should
work fine: \shipout before \begin{document} would be
extremely unusual and would result in strange results, anyway.

David

----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-06-28 21:09

Message:
Logged In: YES 
user_id=1608

Small limitation that I have yet to implement: the ability
to move stuff over from the initex run means that if initex
actually creates a pdf file, dumping a format should be
disallowed, or silently ignored. Attempting to keep track of
two disjunct pdf documents is just too hard for me. 

Note that I do not want to prohibit pdf creation from
initex. Just that you can't create a pdf document _as well
as_ perform a \dump.



----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-06-28 17:01

Message:
Logged In: YES 
user_id=4579

Bravo!

I was ready to embark on this myself, so I'm delighted to be
spared the trouble. It passes all the tests I've tried so far.

----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-06-28 12:57

Message:
Logged In: YES 
user_id=1608

Here is a patch that fixes the problem by dumping and
restoring the image _meta information_ to/from any generated
format. 

The image _data_ is not included (that would be really hard
to do in a portable way), and therefore the undumping
routines have to redo most of the work of \pdfximage, but
this is transparent to the user except that the tests
for \pdfminorversion and \pdfinclusionerrorlevel tests are
re-done.

The patch also saves some pdftex arrays that are needed to
rediscover the object. This could eventually be extended to
 make sure \refxform et al work as well. As of now, that is
untested due to lack of example.

Comments and testing welcome, as always.



----------------------------------------------------------------------

Comment By: Martin Schr?der (oneiros)
Date: 2007-06-26 23:01

Message:
Logged In: YES 
user_id=421

Sorry, pdf things work different then dvi, so we can not
make \pdfximage etc. in ini mode without a lot of work; we
will probably disable a bunch of primitives.

----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-06-26 15:49

Message:
Logged In: YES 
user_id=4579

Simplifying the example by eliminating the graphics package:

==> foo.ini <==
\documentclass{minimal}

\newbox\picbox
\pdfximage{pic.pdf}
\setbox\picbox\hbox{\pdfrefximage\pdflastximage}

\dump

==> foo.tex <==
\begin{document}
        \box\picbox
\end{document}


Also, I see now that my comparison with dvi-mode is indeed a
false one, because the mechanisms are quite different, and
the DVI graphics driver only has to include a \special,
rather than the graphic itself.

A simple solution, I suppose, would be to make \pdfrefximage
(and, presumably, the other \pdfrefx commands) invalid in
IniTeX mode. Perhaps this is too brutal, since it forbids
certain harmless activities such as finding the dimensions
of an image from an .ini file; and of course I would be
delighted if it were made to work instead.


----------------------------------------------------------------------

Comment By: Reinhard Kotucha (reinhard)
Date: 2007-06-26 01:26

Message:
Logged In: YES 
user_id=4195

Martin,
you probably can't do everything in a format file.  However,
it would be nice to be able to put graphics to a format file
at least.  Suppose that a web server has to generate PDF
files on-the-fly, each contains a company logo.  The best
place place for the logo is the format file if speed
matters.  It would be nice if there are no restrictions.

Regards,
  Reinhard



----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-06-26 00:42

Message:
Logged In: YES 
user_id=4579

I'm impressed by the speed of your response! Thanks.

If you replace the PDF image by an EPS file, and use
-output-format dvi, then it does work. That suggests to me
that the problem is not fundamentally caused by a limitation
of IniTeX. But I don't know enough about the inner workings
of the \includegraphics command to be sure about that.
(Perhaps PDF graphics are handled in a sufficiently
different way for this to be a false comparison?)

In any case, as you say, it shouldn't crash!

----------------------------------------------------------------------

Comment By: Martin Schr?der (oneiros)
Date: 2007-06-26 00:30

Message:
Logged In: YES 
user_id=421

I can reproduce it, and it obviously shouldn't crash, but
I'm really not shure if it's supposed to work, as the format
of course will not save the picture. You can't do everything
in IniTeX...

----------------------------------------------------------------------

You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=824&group_id=106

From noreply at sarovar.org  Mon Jul  2 10:30:27 2007
From: noreply at sarovar.org (noreply at sarovar.org)
Date: Mon, 02 Jul 2007 14:00:27 +0530
Subject: [NTG-pdftex] [ pdftex-Bugs-824 ] Bus error caused by loading an
	image into a format file
Message-ID: <E1I5HIh-0004vc-00@sarovar.org>

Bugs item #824, was opened at 2007-06-26 00:22
You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=824&group_id=106

Category: Image inclusion
Group: v1.40.3
Status: Open
Resolution: Accepted
Priority: 5
Submitted By: Robin Houston (robinhouston)
Assigned to: Martin Schr?der (oneiros)
Summary: Bus error caused by loading an image into a format file

Initial Comment:
I have written a tool that speeds up repeated
compilation of a source file, by generating a format
from the preamble of the document, and then using it to
compile the body.

One user reported a crash when using this tool with a
custom letterhead class; the class in question may be
found at
http://www.soe.ucsc.edu/~elm/LaTeX/ucletter.cls (though
note that a simpler demonstration is attached to this
report).

The bug is triggered by the fact that this class loads
an image during the processing of the preamble (i.e.
during the processing of the .ini file) and saves it in
a box. When this box is used, during the compilation of
the body, pdftex crashes.

This does work with ordinary (non-PDF) TeX, so the
problem is specific to PDFTeX.

The attachment contains a simple demonstration of the
problem. Unpack it and run 'make'.


----------------------------------------------------------------------

>Comment By: Hartmut Henkel (hhenkel)
Date: 2007-07-02 10:30

Message:
Logged In: YES 
user_id=929

how can test2 work anyway? the pdfximage reserves an
absolute object number (not something like an image number),
and \pdflastximage gives this object number. But later in
the real document objects are numbered in the natural way in
ascending order, so how can an image object number fixed
already in the format fit into this sequence?

Regards, Hartmut

----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-07-02 09:11

Message:
Logged In: YES 
user_id=1608

I got an example from Hartmut Henkel that needs
head_tab[pdf_obj_ximage], it is test2 in attached tar. I
tried a quick test and it indeed seems to work ok if I dump
*only* that head_tab entry. 

But, you have to solve another problem as well. If you use
the image in the initex-dumped pdf, then the image wil not
be included in the runtime pdf (its state is 'written').
Somehow this state needs to be reset.

Taco


----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-07-02 09:10

Message:
Logged In: YES 
user_id=1608

I got an example from Hartmut Henkel that needs
head_tab[pdf_obj_ximage], it is test2 in attached tar. I
tried a quick test and it indeed seems to work ok if I dump
*only* that head_tab entry. 

But, you have to solve another problem as well. If you use
the image in the initex-dumped pdf, then the image wil not
be included in the runtime pdf (its state is 'written').
Somehow this state needs to be reset.

Taco


----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-06-30 18:56

Message:
Logged In: YES 
user_id=4579

The attached patch (initex-objects.patch) implements the
suggestions made below, together with a few other
improvements. It incorporates Taco Hoekwater's code, so
should be applied to a clean source tree.

In particular, it reinstates the ability to produce both a
PDF document and a memory dump in the same run. I've tested
it with \pdfxform as well as \pdfximage.

Comments? Counterexamples?

Robin

----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-06-30 14:38

Message:
Logged In: YES 
user_id=4579

Fortunately the "two picture" problem (demonstrated in the
attachment twopic.tar.gz) is trivial to solve: simply dump
and undump the variable pdf_ximage_count.

Presumably the same should be done for pdf_obj_count and
pdf_xform_count. Whether this is sufficient, I have no idea:
none of us have tested forms or raw objects, have we?


----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-06-30 12:08

Message:
Logged In: YES 
user_id=4579

A minor bug in the initex-refximage-dump.patch: the test for
fixed_pdfoutput=1 ought to be fixed_pdfoutput>0, otherwise
it will fail with \pdfoutput=2, say.

Another unrelated problem is that, if you load an image from
the .ini file, and then load and display another image from
the .tex file, the first image will appear where the second
one ought to be. I'll try and find out why this is happening.

(Incidentally, I haven't (yet?) discovered any problems
stemming from not (un)dumping the linked list headers.)

----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-06-29 20:08

Message:
Logged In: YES 
user_id=4579

Argh! Interesting, thanks.

Clearly my understanding of the pdftex code is patchy at
best. That said, what is gained by dumping and restoring the
head_tab? If I remove the parts of your code that dump and
undump the head_tab, then your example works (and mine
continue to work).

Robin

----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-06-29 18:32

Message:
Logged In: YES 
user_id=1608

Try a document that contains items besides a single image.
Many of the auxiliary tables are not dumped, resulting in
assertion failures in the non-ini run.

You don't even need to save or reuse boxes for those
crashes, just make a pair of:

% test.ini
\input plain
\pdfoutput=1
hello
\dump


% test.tex
world!
\end




----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-06-29 17:24

Message:
Logged In: YES 
user_id=4579

PS. I have just attached a new tar file, containing some
simple tests that create PDF from the IniTeX run. They all
appear to work, when my patch is applied.

----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-06-29 17:19

Message:
Logged In: YES 
user_id=4579

I don't think creating a PDF file from the IniTeX run is a
real problem. The attached tiny patch (to be applied on top
of Taco Hoekwater's first patch) seems to make it work.

Am I missing something?

----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-06-29 12:34

Message:
Logged In: YES 
user_id=1608

Here is the promised extra patch. No error is generated,
just a simple warning. Pdftex continues executing as if \end
was given instead.

----------------------------------------------------------------------

Comment By: Nobody (None)
Date: 2007-06-28 22:33

Message:
Logged In: NO 

Hi, the inability to _both_ dump a format _and_ produce
output in the same iniTeX run is probably tolerable as long
as no crashes occur.  I don't know the workings of WhizzyTeX
in detail: it is conceivable that their in-document dump
would be affected.  However, it is unlikely that WhizzyTeX
will indeed require both the output as well as the dump (the
dump may well contain pictures, for example from floats that
are going to be placed later), so there is at least a
reasonable way to tackle this from the macro level (divert
\shipout in the manner of the everyshi.sty package).

At least mylatex.ltx (and consequently preview-latex) should
work fine: \shipout before \begin{document} would be
extremely unusual and would result in strange results, anyway.

David

----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-06-28 21:09

Message:
Logged In: YES 
user_id=1608

Small limitation that I have yet to implement: the ability
to move stuff over from the initex run means that if initex
actually creates a pdf file, dumping a format should be
disallowed, or silently ignored. Attempting to keep track of
two disjunct pdf documents is just too hard for me. 

Note that I do not want to prohibit pdf creation from
initex. Just that you can't create a pdf document _as well
as_ perform a \dump.



----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-06-28 17:01

Message:
Logged In: YES 
user_id=4579

Bravo!

I was ready to embark on this myself, so I'm delighted to be
spared the trouble. It passes all the tests I've tried so far.

----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-06-28 12:57

Message:
Logged In: YES 
user_id=1608

Here is a patch that fixes the problem by dumping and
restoring the image _meta information_ to/from any generated
format. 

The image _data_ is not included (that would be really hard
to do in a portable way), and therefore the undumping
routines have to redo most of the work of \pdfximage, but
this is transparent to the user except that the tests
for \pdfminorversion and \pdfinclusionerrorlevel tests are
re-done.

The patch also saves some pdftex arrays that are needed to
rediscover the object. This could eventually be extended to
 make sure \refxform et al work as well. As of now, that is
untested due to lack of example.

Comments and testing welcome, as always.



----------------------------------------------------------------------

Comment By: Martin Schr?der (oneiros)
Date: 2007-06-26 23:01

Message:
Logged In: YES 
user_id=421

Sorry, pdf things work different then dvi, so we can not
make \pdfximage etc. in ini mode without a lot of work; we
will probably disable a bunch of primitives.

----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-06-26 15:49

Message:
Logged In: YES 
user_id=4579

Simplifying the example by eliminating the graphics package:

==> foo.ini <==
\documentclass{minimal}

\newbox\picbox
\pdfximage{pic.pdf}
\setbox\picbox\hbox{\pdfrefximage\pdflastximage}

\dump

==> foo.tex <==
\begin{document}
        \box\picbox
\end{document}


Also, I see now that my comparison with dvi-mode is indeed a
false one, because the mechanisms are quite different, and
the DVI graphics driver only has to include a \special,
rather than the graphic itself.

A simple solution, I suppose, would be to make \pdfrefximage
(and, presumably, the other \pdfrefx commands) invalid in
IniTeX mode. Perhaps this is too brutal, since it forbids
certain harmless activities such as finding the dimensions
of an image from an .ini file; and of course I would be
delighted if it were made to work instead.


----------------------------------------------------------------------

Comment By: Reinhard Kotucha (reinhard)
Date: 2007-06-26 01:26

Message:
Logged In: YES 
user_id=4195

Martin,
you probably can't do everything in a format file.  However,
it would be nice to be able to put graphics to a format file
at least.  Suppose that a web server has to generate PDF
files on-the-fly, each contains a company logo.  The best
place place for the logo is the format file if speed
matters.  It would be nice if there are no restrictions.

Regards,
  Reinhard



----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-06-26 00:42

Message:
Logged In: YES 
user_id=4579

I'm impressed by the speed of your response! Thanks.

If you replace the PDF image by an EPS file, and use
-output-format dvi, then it does work. That suggests to me
that the problem is not fundamentally caused by a limitation
of IniTeX. But I don't know enough about the inner workings
of the \includegraphics command to be sure about that.
(Perhaps PDF graphics are handled in a sufficiently
different way for this to be a false comparison?)

In any case, as you say, it shouldn't crash!

----------------------------------------------------------------------

Comment By: Martin Schr?der (oneiros)
Date: 2007-06-26 00:30

Message:
Logged In: YES 
user_id=421

I can reproduce it, and it obviously shouldn't crash, but
I'm really not shure if it's supposed to work, as the format
of course will not save the picture. You can't do everything
in IniTeX...

----------------------------------------------------------------------

You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=824&group_id=106

From noreply at sarovar.org  Mon Jul  2 10:34:47 2007
From: noreply at sarovar.org (noreply at sarovar.org)
Date: Mon, 02 Jul 2007 14:04:47 +0530
Subject: [NTG-pdftex] [ pdftex-Bugs-824 ] Bus error caused by loading an
	image into a format file
Message-ID: <E1I5HMt-0004xu-00@sarovar.org>

Bugs item #824, was opened at 2007-06-26 00:22
You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=824&group_id=106

Category: Image inclusion
Group: v1.40.3
Status: Open
Resolution: Accepted
Priority: 5
Submitted By: Robin Houston (robinhouston)
Assigned to: Martin Schr?der (oneiros)
Summary: Bus error caused by loading an image into a format file

Initial Comment:
I have written a tool that speeds up repeated
compilation of a source file, by generating a format
from the preamble of the document, and then using it to
compile the body.

One user reported a crash when using this tool with a
custom letterhead class; the class in question may be
found at
http://www.soe.ucsc.edu/~elm/LaTeX/ucletter.cls (though
note that a simpler demonstration is attached to this
report).

The bug is triggered by the fact that this class loads
an image during the processing of the preamble (i.e.
during the processing of the .ini file) and saves it in
a box. When this box is used, during the compilation of
the body, pdftex crashes.

This does work with ordinary (non-PDF) TeX, so the
problem is specific to PDFTeX.

The attachment contains a simple demonstration of the
problem. Unpack it and run 'make'.


----------------------------------------------------------------------

>Comment By: Taco Hoekwater (taco)
Date: 2007-07-02 10:34

Message:
Logged In: YES 
user_id=1608

The objects (and their numbers) are saved in the formats as well

----------------------------------------------------------------------

Comment By: Hartmut Henkel (hhenkel)
Date: 2007-07-02 10:30

Message:
Logged In: YES 
user_id=929

how can test2 work anyway? the pdfximage reserves an
absolute object number (not something like an image number),
and \pdflastximage gives this object number. But later in
the real document objects are numbered in the natural way in
ascending order, so how can an image object number fixed
already in the format fit into this sequence?

Regards, Hartmut

----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-07-02 09:11

Message:
Logged In: YES 
user_id=1608

I got an example from Hartmut Henkel that needs
head_tab[pdf_obj_ximage], it is test2 in attached tar. I
tried a quick test and it indeed seems to work ok if I dump
*only* that head_tab entry. 

But, you have to solve another problem as well. If you use
the image in the initex-dumped pdf, then the image wil not
be included in the runtime pdf (its state is 'written').
Somehow this state needs to be reset.

Taco


----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-07-02 09:10

Message:
Logged In: YES 
user_id=1608

I got an example from Hartmut Henkel that needs
head_tab[pdf_obj_ximage], it is test2 in attached tar. I
tried a quick test and it indeed seems to work ok if I dump
*only* that head_tab entry. 

But, you have to solve another problem as well. If you use
the image in the initex-dumped pdf, then the image wil not
be included in the runtime pdf (its state is 'written').
Somehow this state needs to be reset.

Taco


----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-06-30 18:56

Message:
Logged In: YES 
user_id=4579

The attached patch (initex-objects.patch) implements the
suggestions made below, together with a few other
improvements. It incorporates Taco Hoekwater's code, so
should be applied to a clean source tree.

In particular, it reinstates the ability to produce both a
PDF document and a memory dump in the same run. I've tested
it with \pdfxform as well as \pdfximage.

Comments? Counterexamples?

Robin

----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-06-30 14:38

Message:
Logged In: YES 
user_id=4579

Fortunately the "two picture" problem (demonstrated in the
attachment twopic.tar.gz) is trivial to solve: simply dump
and undump the variable pdf_ximage_count.

Presumably the same should be done for pdf_obj_count and
pdf_xform_count. Whether this is sufficient, I have no idea:
none of us have tested forms or raw objects, have we?


----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-06-30 12:08

Message:
Logged In: YES 
user_id=4579

A minor bug in the initex-refximage-dump.patch: the test for
fixed_pdfoutput=1 ought to be fixed_pdfoutput>0, otherwise
it will fail with \pdfoutput=2, say.

Another unrelated problem is that, if you load an image from
the .ini file, and then load and display another image from
the .tex file, the first image will appear where the second
one ought to be. I'll try and find out why this is happening.

(Incidentally, I haven't (yet?) discovered any problems
stemming from not (un)dumping the linked list headers.)

----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-06-29 20:08

Message:
Logged In: YES 
user_id=4579

Argh! Interesting, thanks.

Clearly my understanding of the pdftex code is patchy at
best. That said, what is gained by dumping and restoring the
head_tab? If I remove the parts of your code that dump and
undump the head_tab, then your example works (and mine
continue to work).

Robin

----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-06-29 18:32

Message:
Logged In: YES 
user_id=1608

Try a document that contains items besides a single image.
Many of the auxiliary tables are not dumped, resulting in
assertion failures in the non-ini run.

You don't even need to save or reuse boxes for those
crashes, just make a pair of:

% test.ini
\input plain
\pdfoutput=1
hello
\dump


% test.tex
world!
\end




----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-06-29 17:24

Message:
Logged In: YES 
user_id=4579

PS. I have just attached a new tar file, containing some
simple tests that create PDF from the IniTeX run. They all
appear to work, when my patch is applied.

----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-06-29 17:19

Message:
Logged In: YES 
user_id=4579

I don't think creating a PDF file from the IniTeX run is a
real problem. The attached tiny patch (to be applied on top
of Taco Hoekwater's first patch) seems to make it work.

Am I missing something?

----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-06-29 12:34

Message:
Logged In: YES 
user_id=1608

Here is the promised extra patch. No error is generated,
just a simple warning. Pdftex continues executing as if \end
was given instead.

----------------------------------------------------------------------

Comment By: Nobody (None)
Date: 2007-06-28 22:33

Message:
Logged In: NO 

Hi, the inability to _both_ dump a format _and_ produce
output in the same iniTeX run is probably tolerable as long
as no crashes occur.  I don't know the workings of WhizzyTeX
in detail: it is conceivable that their in-document dump
would be affected.  However, it is unlikely that WhizzyTeX
will indeed require both the output as well as the dump (the
dump may well contain pictures, for example from floats that
are going to be placed later), so there is at least a
reasonable way to tackle this from the macro level (divert
\shipout in the manner of the everyshi.sty package).

At least mylatex.ltx (and consequently preview-latex) should
work fine: \shipout before \begin{document} would be
extremely unusual and would result in strange results, anyway.

David

----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-06-28 21:09

Message:
Logged In: YES 
user_id=1608

Small limitation that I have yet to implement: the ability
to move stuff over from the initex run means that if initex
actually creates a pdf file, dumping a format should be
disallowed, or silently ignored. Attempting to keep track of
two disjunct pdf documents is just too hard for me. 

Note that I do not want to prohibit pdf creation from
initex. Just that you can't create a pdf document _as well
as_ perform a \dump.



----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-06-28 17:01

Message:
Logged In: YES 
user_id=4579

Bravo!

I was ready to embark on this myself, so I'm delighted to be
spared the trouble. It passes all the tests I've tried so far.

----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-06-28 12:57

Message:
Logged In: YES 
user_id=1608

Here is a patch that fixes the problem by dumping and
restoring the image _meta information_ to/from any generated
format. 

The image _data_ is not included (that would be really hard
to do in a portable way), and therefore the undumping
routines have to redo most of the work of \pdfximage, but
this is transparent to the user except that the tests
for \pdfminorversion and \pdfinclusionerrorlevel tests are
re-done.

The patch also saves some pdftex arrays that are needed to
rediscover the object. This could eventually be extended to
 make sure \refxform et al work as well. As of now, that is
untested due to lack of example.

Comments and testing welcome, as always.



----------------------------------------------------------------------

Comment By: Martin Schr?der (oneiros)
Date: 2007-06-26 23:01

Message:
Logged In: YES 
user_id=421

Sorry, pdf things work different then dvi, so we can not
make \pdfximage etc. in ini mode without a lot of work; we
will probably disable a bunch of primitives.

----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-06-26 15:49

Message:
Logged In: YES 
user_id=4579

Simplifying the example by eliminating the graphics package:

==> foo.ini <==
\documentclass{minimal}

\newbox\picbox
\pdfximage{pic.pdf}
\setbox\picbox\hbox{\pdfrefximage\pdflastximage}

\dump

==> foo.tex <==
\begin{document}
        \box\picbox
\end{document}


Also, I see now that my comparison with dvi-mode is indeed a
false one, because the mechanisms are quite different, and
the DVI graphics driver only has to include a \special,
rather than the graphic itself.

A simple solution, I suppose, would be to make \pdfrefximage
(and, presumably, the other \pdfrefx commands) invalid in
IniTeX mode. Perhaps this is too brutal, since it forbids
certain harmless activities such as finding the dimensions
of an image from an .ini file; and of course I would be
delighted if it were made to work instead.


----------------------------------------------------------------------

Comment By: Reinhard Kotucha (reinhard)
Date: 2007-06-26 01:26

Message:
Logged In: YES 
user_id=4195

Martin,
you probably can't do everything in a format file.  However,
it would be nice to be able to put graphics to a format file
at least.  Suppose that a web server has to generate PDF
files on-the-fly, each contains a company logo.  The best
place place for the logo is the format file if speed
matters.  It would be nice if there are no restrictions.

Regards,
  Reinhard



----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-06-26 00:42

Message:
Logged In: YES 
user_id=4579

I'm impressed by the speed of your response! Thanks.

If you replace the PDF image by an EPS file, and use
-output-format dvi, then it does work. That suggests to me
that the problem is not fundamentally caused by a limitation
of IniTeX. But I don't know enough about the inner workings
of the \includegraphics command to be sure about that.
(Perhaps PDF graphics are handled in a sufficiently
different way for this to be a false comparison?)

In any case, as you say, it shouldn't crash!

----------------------------------------------------------------------

Comment By: Martin Schr?der (oneiros)
Date: 2007-06-26 00:30

Message:
Logged In: YES 
user_id=421

I can reproduce it, and it obviously shouldn't crash, but
I'm really not shure if it's supposed to work, as the format
of course will not save the picture. You can't do everything
in IniTeX...

----------------------------------------------------------------------

You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=824&group_id=106

From noreply at sarovar.org  Mon Jul  2 10:58:14 2007
From: noreply at sarovar.org (noreply at sarovar.org)
Date: Mon, 02 Jul 2007 14:28:14 +0530
Subject: [NTG-pdftex] [ pdftex-Bugs-824 ] Bus error caused by loading an
	image into a format file
Message-ID: <E1I5Hja-0000q3-00@sarovar.org>

Bugs item #824, was opened at 2007-06-25 23:22
You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=824&group_id=106

Category: Image inclusion
Group: v1.40.3
Status: Open
Resolution: Accepted
Priority: 5
Submitted By: Robin Houston (robinhouston)
Assigned to: Martin Schr?der (oneiros)
Summary: Bus error caused by loading an image into a format file

Initial Comment:
I have written a tool that speeds up repeated
compilation of a source file, by generating a format
from the preamble of the document, and then using it to
compile the body.

One user reported a crash when using this tool with a
custom letterhead class; the class in question may be
found at
http://www.soe.ucsc.edu/~elm/LaTeX/ucletter.cls (though
note that a simpler demonstration is attached to this
report).

The bug is triggered by the fact that this class loads
an image during the processing of the preamble (i.e.
during the processing of the .ini file) and saves it in
a box. When this box is used, during the compilation of
the body, pdftex crashes.

This does work with ordinary (non-PDF) TeX, so the
problem is specific to PDFTeX.

The attachment contains a simple demonstration of the
problem. Unpack it and run 'make'.


----------------------------------------------------------------------

>Comment By: Robin Houston (robinhouston)
Date: 2007-07-02 09:58

Message:
Logged In: YES 
user_id=4579

Taco, do you have an example of the "another problem" that
you mention? I thought I had dealt with that, by not dumping
obj_tab[k].int2 and resetting it to 0, and indeed it seems
to work when I try it.

To be precise about what I tried, I added the lines

%
\pdfrefximage\pdflastximage
\par\vfil\penalty-10000
%

before the \dump command in test-fmt2.tex. Both the
generated PDFs (test-fmt2.pdf and test2.pdf) seem okay.

Incidentally, it's easy to make a test, along the lines of
test2, that requires head_tab[obj_type_xform]. So I guess
that should be dumped too.

----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-07-02 09:34

Message:
Logged In: YES 
user_id=1608

The objects (and their numbers) are saved in the formats as well

----------------------------------------------------------------------

Comment By: Hartmut Henkel (hhenkel)
Date: 2007-07-02 09:30

Message:
Logged In: YES 
user_id=929

how can test2 work anyway? the pdfximage reserves an
absolute object number (not something like an image number),
and \pdflastximage gives this object number. But later in
the real document objects are numbered in the natural way in
ascending order, so how can an image object number fixed
already in the format fit into this sequence?

Regards, Hartmut

----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-07-02 08:11

Message:
Logged In: YES 
user_id=1608

I got an example from Hartmut Henkel that needs
head_tab[pdf_obj_ximage], it is test2 in attached tar. I
tried a quick test and it indeed seems to work ok if I dump
*only* that head_tab entry. 

But, you have to solve another problem as well. If you use
the image in the initex-dumped pdf, then the image wil not
be included in the runtime pdf (its state is 'written').
Somehow this state needs to be reset.

Taco


----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-07-02 08:10

Message:
Logged In: YES 
user_id=1608

I got an example from Hartmut Henkel that needs
head_tab[pdf_obj_ximage], it is test2 in attached tar. I
tried a quick test and it indeed seems to work ok if I dump
*only* that head_tab entry. 

But, you have to solve another problem as well. If you use
the image in the initex-dumped pdf, then the image wil not
be included in the runtime pdf (its state is 'written').
Somehow this state needs to be reset.

Taco


----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-06-30 17:56

Message:
Logged In: YES 
user_id=4579

The attached patch (initex-objects.patch) implements the
suggestions made below, together with a few other
improvements. It incorporates Taco Hoekwater's code, so
should be applied to a clean source tree.

In particular, it reinstates the ability to produce both a
PDF document and a memory dump in the same run. I've tested
it with \pdfxform as well as \pdfximage.

Comments? Counterexamples?

Robin

----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-06-30 13:38

Message:
Logged In: YES 
user_id=4579

Fortunately the "two picture" problem (demonstrated in the
attachment twopic.tar.gz) is trivial to solve: simply dump
and undump the variable pdf_ximage_count.

Presumably the same should be done for pdf_obj_count and
pdf_xform_count. Whether this is sufficient, I have no idea:
none of us have tested forms or raw objects, have we?


----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-06-30 11:08

Message:
Logged In: YES 
user_id=4579

A minor bug in the initex-refximage-dump.patch: the test for
fixed_pdfoutput=1 ought to be fixed_pdfoutput>0, otherwise
it will fail with \pdfoutput=2, say.

Another unrelated problem is that, if you load an image from
the .ini file, and then load and display another image from
the .tex file, the first image will appear where the second
one ought to be. I'll try and find out why this is happening.

(Incidentally, I haven't (yet?) discovered any problems
stemming from not (un)dumping the linked list headers.)

----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-06-29 19:08

Message:
Logged In: YES 
user_id=4579

Argh! Interesting, thanks.

Clearly my understanding of the pdftex code is patchy at
best. That said, what is gained by dumping and restoring the
head_tab? If I remove the parts of your code that dump and
undump the head_tab, then your example works (and mine
continue to work).

Robin

----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-06-29 17:32

Message:
Logged In: YES 
user_id=1608

Try a document that contains items besides a single image.
Many of the auxiliary tables are not dumped, resulting in
assertion failures in the non-ini run.

You don't even need to save or reuse boxes for those
crashes, just make a pair of:

% test.ini
\input plain
\pdfoutput=1
hello
\dump


% test.tex
world!
\end




----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-06-29 16:24

Message:
Logged In: YES 
user_id=4579

PS. I have just attached a new tar file, containing some
simple tests that create PDF from the IniTeX run. They all
appear to work, when my patch is applied.

----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-06-29 16:19

Message:
Logged In: YES 
user_id=4579

I don't think creating a PDF file from the IniTeX run is a
real problem. The attached tiny patch (to be applied on top
of Taco Hoekwater's first patch) seems to make it work.

Am I missing something?

----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-06-29 11:34

Message:
Logged In: YES 
user_id=1608

Here is the promised extra patch. No error is generated,
just a simple warning. Pdftex continues executing as if \end
was given instead.

----------------------------------------------------------------------

Comment By: Nobody (None)
Date: 2007-06-28 21:33

Message:
Logged In: NO 

Hi, the inability to _both_ dump a format _and_ produce
output in the same iniTeX run is probably tolerable as long
as no crashes occur.  I don't know the workings of WhizzyTeX
in detail: it is conceivable that their in-document dump
would be affected.  However, it is unlikely that WhizzyTeX
will indeed require both the output as well as the dump (the
dump may well contain pictures, for example from floats that
are going to be placed later), so there is at least a
reasonable way to tackle this from the macro level (divert
\shipout in the manner of the everyshi.sty package).

At least mylatex.ltx (and consequently preview-latex) should
work fine: \shipout before \begin{document} would be
extremely unusual and would result in strange results, anyway.

David

----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-06-28 20:09

Message:
Logged In: YES 
user_id=1608

Small limitation that I have yet to implement: the ability
to move stuff over from the initex run means that if initex
actually creates a pdf file, dumping a format should be
disallowed, or silently ignored. Attempting to keep track of
two disjunct pdf documents is just too hard for me. 

Note that I do not want to prohibit pdf creation from
initex. Just that you can't create a pdf document _as well
as_ perform a \dump.



----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-06-28 16:01

Message:
Logged In: YES 
user_id=4579

Bravo!

I was ready to embark on this myself, so I'm delighted to be
spared the trouble. It passes all the tests I've tried so far.

----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-06-28 11:57

Message:
Logged In: YES 
user_id=1608

Here is a patch that fixes the problem by dumping and
restoring the image _meta information_ to/from any generated
format. 

The image _data_ is not included (that would be really hard
to do in a portable way), and therefore the undumping
routines have to redo most of the work of \pdfximage, but
this is transparent to the user except that the tests
for \pdfminorversion and \pdfinclusionerrorlevel tests are
re-done.

The patch also saves some pdftex arrays that are needed to
rediscover the object. This could eventually be extended to
 make sure \refxform et al work as well. As of now, that is
untested due to lack of example.

Comments and testing welcome, as always.



----------------------------------------------------------------------

Comment By: Martin Schr?der (oneiros)
Date: 2007-06-26 22:01

Message:
Logged In: YES 
user_id=421

Sorry, pdf things work different then dvi, so we can not
make \pdfximage etc. in ini mode without a lot of work; we
will probably disable a bunch of primitives.

----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-06-26 14:49

Message:
Logged In: YES 
user_id=4579

Simplifying the example by eliminating the graphics package:

==> foo.ini <==
\documentclass{minimal}

\newbox\picbox
\pdfximage{pic.pdf}
\setbox\picbox\hbox{\pdfrefximage\pdflastximage}

\dump

==> foo.tex <==
\begin{document}
        \box\picbox
\end{document}


Also, I see now that my comparison with dvi-mode is indeed a
false one, because the mechanisms are quite different, and
the DVI graphics driver only has to include a \special,
rather than the graphic itself.

A simple solution, I suppose, would be to make \pdfrefximage
(and, presumably, the other \pdfrefx commands) invalid in
IniTeX mode. Perhaps this is too brutal, since it forbids
certain harmless activities such as finding the dimensions
of an image from an .ini file; and of course I would be
delighted if it were made to work instead.


----------------------------------------------------------------------

Comment By: Reinhard Kotucha (reinhard)
Date: 2007-06-26 00:26

Message:
Logged In: YES 
user_id=4195

Martin,
you probably can't do everything in a format file.  However,
it would be nice to be able to put graphics to a format file
at least.  Suppose that a web server has to generate PDF
files on-the-fly, each contains a company logo.  The best
place place for the logo is the format file if speed
matters.  It would be nice if there are no restrictions.

Regards,
  Reinhard



----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-06-25 23:42

Message:
Logged In: YES 
user_id=4579

I'm impressed by the speed of your response! Thanks.

If you replace the PDF image by an EPS file, and use
-output-format dvi, then it does work. That suggests to me
that the problem is not fundamentally caused by a limitation
of IniTeX. But I don't know enough about the inner workings
of the \includegraphics command to be sure about that.
(Perhaps PDF graphics are handled in a sufficiently
different way for this to be a false comparison?)

In any case, as you say, it shouldn't crash!

----------------------------------------------------------------------

Comment By: Martin Schr?der (oneiros)
Date: 2007-06-25 23:30

Message:
Logged In: YES 
user_id=421

I can reproduce it, and it obviously shouldn't crash, but
I'm really not shure if it's supposed to work, as the format
of course will not save the picture. You can't do everything
in IniTeX...

----------------------------------------------------------------------

You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=824&group_id=106

From noreply at sarovar.org  Mon Jul  2 12:53:25 2007
From: noreply at sarovar.org (noreply at sarovar.org)
Date: Mon, 02 Jul 2007 16:23:25 +0530
Subject: [NTG-pdftex] [ pdftex-Bugs-824 ] Bus error caused by loading an
	image into a format file
Message-ID: <E1I5JX3-0001wA-00@sarovar.org>

Bugs item #824, was opened at 2007-06-26 00:22
You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=824&group_id=106

Category: Image inclusion
Group: v1.40.3
Status: Open
Resolution: Accepted
Priority: 5
Submitted By: Robin Houston (robinhouston)
Assigned to: Martin Schr?der (oneiros)
Summary: Bus error caused by loading an image into a format file

Initial Comment:
I have written a tool that speeds up repeated
compilation of a source file, by generating a format
from the preamble of the document, and then using it to
compile the body.

One user reported a crash when using this tool with a
custom letterhead class; the class in question may be
found at
http://www.soe.ucsc.edu/~elm/LaTeX/ucletter.cls (though
note that a simpler demonstration is attached to this
report).

The bug is triggered by the fact that this class loads
an image during the processing of the preamble (i.e.
during the processing of the .ini file) and saves it in
a box. When this box is used, during the compilation of
the body, pdftex crashes.

This does work with ordinary (non-PDF) TeX, so the
problem is specific to PDFTeX.

The attachment contains a simple demonstration of the
problem. Unpack it and run 'make'.


----------------------------------------------------------------------

>Comment By: Taco Hoekwater (taco)
Date: 2007-07-02 12:53

Message:
Logged In: YES 
user_id=1608

WRT type image object: 

over here, it is only included twice after I do a small fix
to your patch:
  obj_tab[k].int2 := -1;
this could just be a simple difference between my and your
pdftex source trees, but please re-check. 

I definately have *no* runtime image with obj_tab[k].int2 :=
0, and that is correct/expected, because I can see in the
source that the is_obj_written() test checks for >-1.

The thing with head_tab[obj_type_xform] is why I initially
dumped all of them. The xforms should be safe, but fonts are
definately not ok (not unless whole lot more stuff is dumped
to the format). I don't know about the others heads. It
depends on whether or not the objects need additional data
structures besides obj_tab and pdf_mem, and I am not very
much at home in that section of the pdftex code.





----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-07-02 10:58

Message:
Logged In: YES 
user_id=4579

Taco, do you have an example of the "another problem" that
you mention? I thought I had dealt with that, by not dumping
obj_tab[k].int2 and resetting it to 0, and indeed it seems
to work when I try it.

To be precise about what I tried, I added the lines

%
\pdfrefximage\pdflastximage
\par\vfil\penalty-10000
%

before the \dump command in test-fmt2.tex. Both the
generated PDFs (test-fmt2.pdf and test2.pdf) seem okay.

Incidentally, it's easy to make a test, along the lines of
test2, that requires head_tab[obj_type_xform]. So I guess
that should be dumped too.

----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-07-02 10:34

Message:
Logged In: YES 
user_id=1608

The objects (and their numbers) are saved in the formats as well

----------------------------------------------------------------------

Comment By: Hartmut Henkel (hhenkel)
Date: 2007-07-02 10:30

Message:
Logged In: YES 
user_id=929

how can test2 work anyway? the pdfximage reserves an
absolute object number (not something like an image number),
and \pdflastximage gives this object number. But later in
the real document objects are numbered in the natural way in
ascending order, so how can an image object number fixed
already in the format fit into this sequence?

Regards, Hartmut

----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-07-02 09:11

Message:
Logged In: YES 
user_id=1608

I got an example from Hartmut Henkel that needs
head_tab[pdf_obj_ximage], it is test2 in attached tar. I
tried a quick test and it indeed seems to work ok if I dump
*only* that head_tab entry. 

But, you have to solve another problem as well. If you use
the image in the initex-dumped pdf, then the image wil not
be included in the runtime pdf (its state is 'written').
Somehow this state needs to be reset.

Taco


----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-07-02 09:10

Message:
Logged In: YES 
user_id=1608

I got an example from Hartmut Henkel that needs
head_tab[pdf_obj_ximage], it is test2 in attached tar. I
tried a quick test and it indeed seems to work ok if I dump
*only* that head_tab entry. 

But, you have to solve another problem as well. If you use
the image in the initex-dumped pdf, then the image wil not
be included in the runtime pdf (its state is 'written').
Somehow this state needs to be reset.

Taco


----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-06-30 18:56

Message:
Logged In: YES 
user_id=4579

The attached patch (initex-objects.patch) implements the
suggestions made below, together with a few other
improvements. It incorporates Taco Hoekwater's code, so
should be applied to a clean source tree.

In particular, it reinstates the ability to produce both a
PDF document and a memory dump in the same run. I've tested
it with \pdfxform as well as \pdfximage.

Comments? Counterexamples?

Robin

----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-06-30 14:38

Message:
Logged In: YES 
user_id=4579

Fortunately the "two picture" problem (demonstrated in the
attachment twopic.tar.gz) is trivial to solve: simply dump
and undump the variable pdf_ximage_count.

Presumably the same should be done for pdf_obj_count and
pdf_xform_count. Whether this is sufficient, I have no idea:
none of us have tested forms or raw objects, have we?


----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-06-30 12:08

Message:
Logged In: YES 
user_id=4579

A minor bug in the initex-refximage-dump.patch: the test for
fixed_pdfoutput=1 ought to be fixed_pdfoutput>0, otherwise
it will fail with \pdfoutput=2, say.

Another unrelated problem is that, if you load an image from
the .ini file, and then load and display another image from
the .tex file, the first image will appear where the second
one ought to be. I'll try and find out why this is happening.

(Incidentally, I haven't (yet?) discovered any problems
stemming from not (un)dumping the linked list headers.)

----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-06-29 20:08

Message:
Logged In: YES 
user_id=4579

Argh! Interesting, thanks.

Clearly my understanding of the pdftex code is patchy at
best. That said, what is gained by dumping and restoring the
head_tab? If I remove the parts of your code that dump and
undump the head_tab, then your example works (and mine
continue to work).

Robin

----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-06-29 18:32

Message:
Logged In: YES 
user_id=1608

Try a document that contains items besides a single image.
Many of the auxiliary tables are not dumped, resulting in
assertion failures in the non-ini run.

You don't even need to save or reuse boxes for those
crashes, just make a pair of:

% test.ini
\input plain
\pdfoutput=1
hello
\dump


% test.tex
world!
\end




----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-06-29 17:24

Message:
Logged In: YES 
user_id=4579

PS. I have just attached a new tar file, containing some
simple tests that create PDF from the IniTeX run. They all
appear to work, when my patch is applied.

----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-06-29 17:19

Message:
Logged In: YES 
user_id=4579

I don't think creating a PDF file from the IniTeX run is a
real problem. The attached tiny patch (to be applied on top
of Taco Hoekwater's first patch) seems to make it work.

Am I missing something?

----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-06-29 12:34

Message:
Logged In: YES 
user_id=1608

Here is the promised extra patch. No error is generated,
just a simple warning. Pdftex continues executing as if \end
was given instead.

----------------------------------------------------------------------

Comment By: Nobody (None)
Date: 2007-06-28 22:33

Message:
Logged In: NO 

Hi, the inability to _both_ dump a format _and_ produce
output in the same iniTeX run is probably tolerable as long
as no crashes occur.  I don't know the workings of WhizzyTeX
in detail: it is conceivable that their in-document dump
would be affected.  However, it is unlikely that WhizzyTeX
will indeed require both the output as well as the dump (the
dump may well contain pictures, for example from floats that
are going to be placed later), so there is at least a
reasonable way to tackle this from the macro level (divert
\shipout in the manner of the everyshi.sty package).

At least mylatex.ltx (and consequently preview-latex) should
work fine: \shipout before \begin{document} would be
extremely unusual and would result in strange results, anyway.

David

----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-06-28 21:09

Message:
Logged In: YES 
user_id=1608

Small limitation that I have yet to implement: the ability
to move stuff over from the initex run means that if initex
actually creates a pdf file, dumping a format should be
disallowed, or silently ignored. Attempting to keep track of
two disjunct pdf documents is just too hard for me. 

Note that I do not want to prohibit pdf creation from
initex. Just that you can't create a pdf document _as well
as_ perform a \dump.



----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-06-28 17:01

Message:
Logged In: YES 
user_id=4579

Bravo!

I was ready to embark on this myself, so I'm delighted to be
spared the trouble. It passes all the tests I've tried so far.

----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-06-28 12:57

Message:
Logged In: YES 
user_id=1608

Here is a patch that fixes the problem by dumping and
restoring the image _meta information_ to/from any generated
format. 

The image _data_ is not included (that would be really hard
to do in a portable way), and therefore the undumping
routines have to redo most of the work of \pdfximage, but
this is transparent to the user except that the tests
for \pdfminorversion and \pdfinclusionerrorlevel tests are
re-done.

The patch also saves some pdftex arrays that are needed to
rediscover the object. This could eventually be extended to
 make sure \refxform et al work as well. As of now, that is
untested due to lack of example.

Comments and testing welcome, as always.



----------------------------------------------------------------------

Comment By: Martin Schr?der (oneiros)
Date: 2007-06-26 23:01

Message:
Logged In: YES 
user_id=421

Sorry, pdf things work different then dvi, so we can not
make \pdfximage etc. in ini mode without a lot of work; we
will probably disable a bunch of primitives.

----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-06-26 15:49

Message:
Logged In: YES 
user_id=4579

Simplifying the example by eliminating the graphics package:

==> foo.ini <==
\documentclass{minimal}

\newbox\picbox
\pdfximage{pic.pdf}
\setbox\picbox\hbox{\pdfrefximage\pdflastximage}

\dump

==> foo.tex <==
\begin{document}
        \box\picbox
\end{document}


Also, I see now that my comparison with dvi-mode is indeed a
false one, because the mechanisms are quite different, and
the DVI graphics driver only has to include a \special,
rather than the graphic itself.

A simple solution, I suppose, would be to make \pdfrefximage
(and, presumably, the other \pdfrefx commands) invalid in
IniTeX mode. Perhaps this is too brutal, since it forbids
certain harmless activities such as finding the dimensions
of an image from an .ini file; and of course I would be
delighted if it were made to work instead.


----------------------------------------------------------------------

Comment By: Reinhard Kotucha (reinhard)
Date: 2007-06-26 01:26

Message:
Logged In: YES 
user_id=4195

Martin,
you probably can't do everything in a format file.  However,
it would be nice to be able to put graphics to a format file
at least.  Suppose that a web server has to generate PDF
files on-the-fly, each contains a company logo.  The best
place place for the logo is the format file if speed
matters.  It would be nice if there are no restrictions.

Regards,
  Reinhard



----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-06-26 00:42

Message:
Logged In: YES 
user_id=4579

I'm impressed by the speed of your response! Thanks.

If you replace the PDF image by an EPS file, and use
-output-format dvi, then it does work. That suggests to me
that the problem is not fundamentally caused by a limitation
of IniTeX. But I don't know enough about the inner workings
of the \includegraphics command to be sure about that.
(Perhaps PDF graphics are handled in a sufficiently
different way for this to be a false comparison?)

In any case, as you say, it shouldn't crash!

----------------------------------------------------------------------

Comment By: Martin Schr?der (oneiros)
Date: 2007-06-26 00:30

Message:
Logged In: YES 
user_id=421

I can reproduce it, and it obviously shouldn't crash, but
I'm really not shure if it's supposed to work, as the format
of course will not save the picture. You can't do everything
in IniTeX...

----------------------------------------------------------------------

You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=824&group_id=106

From noreply at sarovar.org  Mon Jul  2 13:08:45 2007
From: noreply at sarovar.org (noreply at sarovar.org)
Date: Mon, 02 Jul 2007 16:38:45 +0530
Subject: [NTG-pdftex] [ pdftex-Bugs-824 ] Bus error caused by loading an
	image into a format file
Message-ID: <E1I5Jlt-0003lR-00@sarovar.org>

Bugs item #824, was opened at 2007-06-25 23:22
You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=824&group_id=106

Category: Image inclusion
Group: v1.40.3
Status: Open
Resolution: Accepted
Priority: 5
Submitted By: Robin Houston (robinhouston)
Assigned to: Martin Schr?der (oneiros)
Summary: Bus error caused by loading an image into a format file

Initial Comment:
I have written a tool that speeds up repeated
compilation of a source file, by generating a format
from the preamble of the document, and then using it to
compile the body.

One user reported a crash when using this tool with a
custom letterhead class; the class in question may be
found at
http://www.soe.ucsc.edu/~elm/LaTeX/ucletter.cls (though
note that a simpler demonstration is attached to this
report).

The bug is triggered by the fact that this class loads
an image during the processing of the preamble (i.e.
during the processing of the .ini file) and saves it in
a box. When this box is used, during the compilation of
the body, pdftex crashes.

This does work with ordinary (non-PDF) TeX, so the
problem is specific to PDFTeX.

The attachment contains a simple demonstration of the
problem. Unpack it and run 'make'.


----------------------------------------------------------------------

>Comment By: Robin Houston (robinhouston)
Date: 2007-07-02 12:08

Message:
Logged In: YES 
user_id=4579

That's odd. The source I'm working from has

@d is_obj_written(#) == (obj_offset(#) <> 0)

Has this been changed recently? (Am I right in thinking that
the development version of the source tree is not publicly
available?)

With regard to which linked list headers to dump, we seem to
be reaching the point of making subtle improvements. The
original problem (whatsit nodes in dumped boxes referencing
non-existent objects) is solved without dumping any of the
headers.

One might conceivably want to load images/forms/raw objects
in the .ini, and then reference them from the .tex: this is
addressed by dumping head_tab[obj_type_ximage],
head_tab[obj_type_xform] and head_tab[obj_type_obj].
(Neither forms nor raw objects have any additional
associated metadata, as far as I can tell.)

I can't see any benefit from dumping the other entries,
whether or not doing so would cause potential crashes.

At any rate, what we have now seems a definite improvement
over the status quo, and avoids the undesirable
feature-regression of forbidding \dump after \shipout.

----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-07-02 11:53

Message:
Logged In: YES 
user_id=1608

WRT type image object: 

over here, it is only included twice after I do a small fix
to your patch:
  obj_tab[k].int2 := -1;
this could just be a simple difference between my and your
pdftex source trees, but please re-check. 

I definately have *no* runtime image with obj_tab[k].int2 :=
0, and that is correct/expected, because I can see in the
source that the is_obj_written() test checks for >-1.

The thing with head_tab[obj_type_xform] is why I initially
dumped all of them. The xforms should be safe, but fonts are
definately not ok (not unless whole lot more stuff is dumped
to the format). I don't know about the others heads. It
depends on whether or not the objects need additional data
structures besides obj_tab and pdf_mem, and I am not very
much at home in that section of the pdftex code.





----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-07-02 09:58

Message:
Logged In: YES 
user_id=4579

Taco, do you have an example of the "another problem" that
you mention? I thought I had dealt with that, by not dumping
obj_tab[k].int2 and resetting it to 0, and indeed it seems
to work when I try it.

To be precise about what I tried, I added the lines

%
\pdfrefximage\pdflastximage
\par\vfil\penalty-10000
%

before the \dump command in test-fmt2.tex. Both the
generated PDFs (test-fmt2.pdf and test2.pdf) seem okay.

Incidentally, it's easy to make a test, along the lines of
test2, that requires head_tab[obj_type_xform]. So I guess
that should be dumped too.

----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-07-02 09:34

Message:
Logged In: YES 
user_id=1608

The objects (and their numbers) are saved in the formats as well

----------------------------------------------------------------------

Comment By: Hartmut Henkel (hhenkel)
Date: 2007-07-02 09:30

Message:
Logged In: YES 
user_id=929

how can test2 work anyway? the pdfximage reserves an
absolute object number (not something like an image number),
and \pdflastximage gives this object number. But later in
the real document objects are numbered in the natural way in
ascending order, so how can an image object number fixed
already in the format fit into this sequence?

Regards, Hartmut

----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-07-02 08:11

Message:
Logged In: YES 
user_id=1608

I got an example from Hartmut Henkel that needs
head_tab[pdf_obj_ximage], it is test2 in attached tar. I
tried a quick test and it indeed seems to work ok if I dump
*only* that head_tab entry. 

But, you have to solve another problem as well. If you use
the image in the initex-dumped pdf, then the image wil not
be included in the runtime pdf (its state is 'written').
Somehow this state needs to be reset.

Taco


----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-07-02 08:10

Message:
Logged In: YES 
user_id=1608

I got an example from Hartmut Henkel that needs
head_tab[pdf_obj_ximage], it is test2 in attached tar. I
tried a quick test and it indeed seems to work ok if I dump
*only* that head_tab entry. 

But, you have to solve another problem as well. If you use
the image in the initex-dumped pdf, then the image wil not
be included in the runtime pdf (its state is 'written').
Somehow this state needs to be reset.

Taco


----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-06-30 17:56

Message:
Logged In: YES 
user_id=4579

The attached patch (initex-objects.patch) implements the
suggestions made below, together with a few other
improvements. It incorporates Taco Hoekwater's code, so
should be applied to a clean source tree.

In particular, it reinstates the ability to produce both a
PDF document and a memory dump in the same run. I've tested
it with \pdfxform as well as \pdfximage.

Comments? Counterexamples?

Robin

----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-06-30 13:38

Message:
Logged In: YES 
user_id=4579

Fortunately the "two picture" problem (demonstrated in the
attachment twopic.tar.gz) is trivial to solve: simply dump
and undump the variable pdf_ximage_count.

Presumably the same should be done for pdf_obj_count and
pdf_xform_count. Whether this is sufficient, I have no idea:
none of us have tested forms or raw objects, have we?


----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-06-30 11:08

Message:
Logged In: YES 
user_id=4579

A minor bug in the initex-refximage-dump.patch: the test for
fixed_pdfoutput=1 ought to be fixed_pdfoutput>0, otherwise
it will fail with \pdfoutput=2, say.

Another unrelated problem is that, if you load an image from
the .ini file, and then load and display another image from
the .tex file, the first image will appear where the second
one ought to be. I'll try and find out why this is happening.

(Incidentally, I haven't (yet?) discovered any problems
stemming from not (un)dumping the linked list headers.)

----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-06-29 19:08

Message:
Logged In: YES 
user_id=4579

Argh! Interesting, thanks.

Clearly my understanding of the pdftex code is patchy at
best. That said, what is gained by dumping and restoring the
head_tab? If I remove the parts of your code that dump and
undump the head_tab, then your example works (and mine
continue to work).

Robin

----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-06-29 17:32

Message:
Logged In: YES 
user_id=1608

Try a document that contains items besides a single image.
Many of the auxiliary tables are not dumped, resulting in
assertion failures in the non-ini run.

You don't even need to save or reuse boxes for those
crashes, just make a pair of:

% test.ini
\input plain
\pdfoutput=1
hello
\dump


% test.tex
world!
\end




----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-06-29 16:24

Message:
Logged In: YES 
user_id=4579

PS. I have just attached a new tar file, containing some
simple tests that create PDF from the IniTeX run. They all
appear to work, when my patch is applied.

----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-06-29 16:19

Message:
Logged In: YES 
user_id=4579

I don't think creating a PDF file from the IniTeX run is a
real problem. The attached tiny patch (to be applied on top
of Taco Hoekwater's first patch) seems to make it work.

Am I missing something?

----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-06-29 11:34

Message:
Logged In: YES 
user_id=1608

Here is the promised extra patch. No error is generated,
just a simple warning. Pdftex continues executing as if \end
was given instead.

----------------------------------------------------------------------

Comment By: Nobody (None)
Date: 2007-06-28 21:33

Message:
Logged In: NO 

Hi, the inability to _both_ dump a format _and_ produce
output in the same iniTeX run is probably tolerable as long
as no crashes occur.  I don't know the workings of WhizzyTeX
in detail: it is conceivable that their in-document dump
would be affected.  However, it is unlikely that WhizzyTeX
will indeed require both the output as well as the dump (the
dump may well contain pictures, for example from floats that
are going to be placed later), so there is at least a
reasonable way to tackle this from the macro level (divert
\shipout in the manner of the everyshi.sty package).

At least mylatex.ltx (and consequently preview-latex) should
work fine: \shipout before \begin{document} would be
extremely unusual and would result in strange results, anyway.

David

----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-06-28 20:09

Message:
Logged In: YES 
user_id=1608

Small limitation that I have yet to implement: the ability
to move stuff over from the initex run means that if initex
actually creates a pdf file, dumping a format should be
disallowed, or silently ignored. Attempting to keep track of
two disjunct pdf documents is just too hard for me. 

Note that I do not want to prohibit pdf creation from
initex. Just that you can't create a pdf document _as well
as_ perform a \dump.



----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-06-28 16:01

Message:
Logged In: YES 
user_id=4579

Bravo!

I was ready to embark on this myself, so I'm delighted to be
spared the trouble. It passes all the tests I've tried so far.

----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-06-28 11:57

Message:
Logged In: YES 
user_id=1608

Here is a patch that fixes the problem by dumping and
restoring the image _meta information_ to/from any generated
format. 

The image _data_ is not included (that would be really hard
to do in a portable way), and therefore the undumping
routines have to redo most of the work of \pdfximage, but
this is transparent to the user except that the tests
for \pdfminorversion and \pdfinclusionerrorlevel tests are
re-done.

The patch also saves some pdftex arrays that are needed to
rediscover the object. This could eventually be extended to
 make sure \refxform et al work as well. As of now, that is
untested due to lack of example.

Comments and testing welcome, as always.



----------------------------------------------------------------------

Comment By: Martin Schr?der (oneiros)
Date: 2007-06-26 22:01

Message:
Logged In: YES 
user_id=421

Sorry, pdf things work different then dvi, so we can not
make \pdfximage etc. in ini mode without a lot of work; we
will probably disable a bunch of primitives.

----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-06-26 14:49

Message:
Logged In: YES 
user_id=4579

Simplifying the example by eliminating the graphics package:

==> foo.ini <==
\documentclass{minimal}

\newbox\picbox
\pdfximage{pic.pdf}
\setbox\picbox\hbox{\pdfrefximage\pdflastximage}

\dump

==> foo.tex <==
\begin{document}
        \box\picbox
\end{document}


Also, I see now that my comparison with dvi-mode is indeed a
false one, because the mechanisms are quite different, and
the DVI graphics driver only has to include a \special,
rather than the graphic itself.

A simple solution, I suppose, would be to make \pdfrefximage
(and, presumably, the other \pdfrefx commands) invalid in
IniTeX mode. Perhaps this is too brutal, since it forbids
certain harmless activities such as finding the dimensions
of an image from an .ini file; and of course I would be
delighted if it were made to work instead.


----------------------------------------------------------------------

Comment By: Reinhard Kotucha (reinhard)
Date: 2007-06-26 00:26

Message:
Logged In: YES 
user_id=4195

Martin,
you probably can't do everything in a format file.  However,
it would be nice to be able to put graphics to a format file
at least.  Suppose that a web server has to generate PDF
files on-the-fly, each contains a company logo.  The best
place place for the logo is the format file if speed
matters.  It would be nice if there are no restrictions.

Regards,
  Reinhard



----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-06-25 23:42

Message:
Logged In: YES 
user_id=4579

I'm impressed by the speed of your response! Thanks.

If you replace the PDF image by an EPS file, and use
-output-format dvi, then it does work. That suggests to me
that the problem is not fundamentally caused by a limitation
of IniTeX. But I don't know enough about the inner workings
of the \includegraphics command to be sure about that.
(Perhaps PDF graphics are handled in a sufficiently
different way for this to be a false comparison?)

In any case, as you say, it shouldn't crash!

----------------------------------------------------------------------

Comment By: Martin Schr?der (oneiros)
Date: 2007-06-25 23:30

Message:
Logged In: YES 
user_id=421

I can reproduce it, and it obviously shouldn't crash, but
I'm really not shure if it's supposed to work, as the format
of course will not save the picture. You can't do everything
in IniTeX...

----------------------------------------------------------------------

You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=824&group_id=106

From noreply at sarovar.org  Mon Jul  2 13:21:20 2007
From: noreply at sarovar.org (noreply at sarovar.org)
Date: Mon, 02 Jul 2007 16:51:20 +0530
Subject: [NTG-pdftex] [ pdftex-Bugs-824 ] Bus error caused by loading an
	image into a format file
Message-ID: <E1I5Jy4-0005WF-00@sarovar.org>

Bugs item #824, was opened at 2007-06-26 00:22
You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=824&group_id=106

Category: Image inclusion
Group: v1.40.3
Status: Open
Resolution: Accepted
Priority: 5
Submitted By: Robin Houston (robinhouston)
Assigned to: Martin Schr?der (oneiros)
Summary: Bus error caused by loading an image into a format file

Initial Comment:
I have written a tool that speeds up repeated
compilation of a source file, by generating a format
from the preamble of the document, and then using it to
compile the body.

One user reported a crash when using this tool with a
custom letterhead class; the class in question may be
found at
http://www.soe.ucsc.edu/~elm/LaTeX/ucletter.cls (though
note that a simpler demonstration is attached to this
report).

The bug is triggered by the fact that this class loads
an image during the processing of the preamble (i.e.
during the processing of the .ini file) and saves it in
a box. When this box is used, during the compilation of
the body, pdftex crashes.

This does work with ordinary (non-PDF) TeX, so the
problem is specific to PDFTeX.

The attachment contains a simple demonstration of the
problem. Unpack it and run 'make'.


----------------------------------------------------------------------

>Comment By: Taco Hoekwater (taco)
Date: 2007-07-02 13:21

Message:
Logged In: YES 
user_id=1608

> Has this been changed recently? 

In my (development version) of the source there is a state
'scheduled', that I assume comes from a fix to something
else. In any case, we just have ask Martin to be extra
careful about that line while creating 1.40.4 :-)

It is probably wise do dump the three heads you mentioned,
just in case: I really need the ximage one in my tree, and
dumping the others seems a logical extension. 

Well done to you on finding a way around the regression. 


----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-07-02 13:08

Message:
Logged In: YES 
user_id=4579

That's odd. The source I'm working from has

@d is_obj_written(#) == (obj_offset(#) <> 0)

Has this been changed recently? (Am I right in thinking that
the development version of the source tree is not publicly
available?)

With regard to which linked list headers to dump, we seem to
be reaching the point of making subtle improvements. The
original problem (whatsit nodes in dumped boxes referencing
non-existent objects) is solved without dumping any of the
headers.

One might conceivably want to load images/forms/raw objects
in the .ini, and then reference them from the .tex: this is
addressed by dumping head_tab[obj_type_ximage],
head_tab[obj_type_xform] and head_tab[obj_type_obj].
(Neither forms nor raw objects have any additional
associated metadata, as far as I can tell.)

I can't see any benefit from dumping the other entries,
whether or not doing so would cause potential crashes.

At any rate, what we have now seems a definite improvement
over the status quo, and avoids the undesirable
feature-regression of forbidding \dump after \shipout.

----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-07-02 12:53

Message:
Logged In: YES 
user_id=1608

WRT type image object: 

over here, it is only included twice after I do a small fix
to your patch:
  obj_tab[k].int2 := -1;
this could just be a simple difference between my and your
pdftex source trees, but please re-check. 

I definately have *no* runtime image with obj_tab[k].int2 :=
0, and that is correct/expected, because I can see in the
source that the is_obj_written() test checks for >-1.

The thing with head_tab[obj_type_xform] is why I initially
dumped all of them. The xforms should be safe, but fonts are
definately not ok (not unless whole lot more stuff is dumped
to the format). I don't know about the others heads. It
depends on whether or not the objects need additional data
structures besides obj_tab and pdf_mem, and I am not very
much at home in that section of the pdftex code.





----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-07-02 10:58

Message:
Logged In: YES 
user_id=4579

Taco, do you have an example of the "another problem" that
you mention? I thought I had dealt with that, by not dumping
obj_tab[k].int2 and resetting it to 0, and indeed it seems
to work when I try it.

To be precise about what I tried, I added the lines

%
\pdfrefximage\pdflastximage
\par\vfil\penalty-10000
%

before the \dump command in test-fmt2.tex. Both the
generated PDFs (test-fmt2.pdf and test2.pdf) seem okay.

Incidentally, it's easy to make a test, along the lines of
test2, that requires head_tab[obj_type_xform]. So I guess
that should be dumped too.

----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-07-02 10:34

Message:
Logged In: YES 
user_id=1608

The objects (and their numbers) are saved in the formats as well

----------------------------------------------------------------------

Comment By: Hartmut Henkel (hhenkel)
Date: 2007-07-02 10:30

Message:
Logged In: YES 
user_id=929

how can test2 work anyway? the pdfximage reserves an
absolute object number (not something like an image number),
and \pdflastximage gives this object number. But later in
the real document objects are numbered in the natural way in
ascending order, so how can an image object number fixed
already in the format fit into this sequence?

Regards, Hartmut

----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-07-02 09:11

Message:
Logged In: YES 
user_id=1608

I got an example from Hartmut Henkel that needs
head_tab[pdf_obj_ximage], it is test2 in attached tar. I
tried a quick test and it indeed seems to work ok if I dump
*only* that head_tab entry. 

But, you have to solve another problem as well. If you use
the image in the initex-dumped pdf, then the image wil not
be included in the runtime pdf (its state is 'written').
Somehow this state needs to be reset.

Taco


----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-07-02 09:10

Message:
Logged In: YES 
user_id=1608

I got an example from Hartmut Henkel that needs
head_tab[pdf_obj_ximage], it is test2 in attached tar. I
tried a quick test and it indeed seems to work ok if I dump
*only* that head_tab entry. 

But, you have to solve another problem as well. If you use
the image in the initex-dumped pdf, then the image wil not
be included in the runtime pdf (its state is 'written').
Somehow this state needs to be reset.

Taco


----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-06-30 18:56

Message:
Logged In: YES 
user_id=4579

The attached patch (initex-objects.patch) implements the
suggestions made below, together with a few other
improvements. It incorporates Taco Hoekwater's code, so
should be applied to a clean source tree.

In particular, it reinstates the ability to produce both a
PDF document and a memory dump in the same run. I've tested
it with \pdfxform as well as \pdfximage.

Comments? Counterexamples?

Robin

----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-06-30 14:38

Message:
Logged In: YES 
user_id=4579

Fortunately the "two picture" problem (demonstrated in the
attachment twopic.tar.gz) is trivial to solve: simply dump
and undump the variable pdf_ximage_count.

Presumably the same should be done for pdf_obj_count and
pdf_xform_count. Whether this is sufficient, I have no idea:
none of us have tested forms or raw objects, have we?


----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-06-30 12:08

Message:
Logged In: YES 
user_id=4579

A minor bug in the initex-refximage-dump.patch: the test for
fixed_pdfoutput=1 ought to be fixed_pdfoutput>0, otherwise
it will fail with \pdfoutput=2, say.

Another unrelated problem is that, if you load an image from
the .ini file, and then load and display another image from
the .tex file, the first image will appear where the second
one ought to be. I'll try and find out why this is happening.

(Incidentally, I haven't (yet?) discovered any problems
stemming from not (un)dumping the linked list headers.)

----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-06-29 20:08

Message:
Logged In: YES 
user_id=4579

Argh! Interesting, thanks.

Clearly my understanding of the pdftex code is patchy at
best. That said, what is gained by dumping and restoring the
head_tab? If I remove the parts of your code that dump and
undump the head_tab, then your example works (and mine
continue to work).

Robin

----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-06-29 18:32

Message:
Logged In: YES 
user_id=1608

Try a document that contains items besides a single image.
Many of the auxiliary tables are not dumped, resulting in
assertion failures in the non-ini run.

You don't even need to save or reuse boxes for those
crashes, just make a pair of:

% test.ini
\input plain
\pdfoutput=1
hello
\dump


% test.tex
world!
\end




----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-06-29 17:24

Message:
Logged In: YES 
user_id=4579

PS. I have just attached a new tar file, containing some
simple tests that create PDF from the IniTeX run. They all
appear to work, when my patch is applied.

----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-06-29 17:19

Message:
Logged In: YES 
user_id=4579

I don't think creating a PDF file from the IniTeX run is a
real problem. The attached tiny patch (to be applied on top
of Taco Hoekwater's first patch) seems to make it work.

Am I missing something?

----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-06-29 12:34

Message:
Logged In: YES 
user_id=1608

Here is the promised extra patch. No error is generated,
just a simple warning. Pdftex continues executing as if \end
was given instead.

----------------------------------------------------------------------

Comment By: Nobody (None)
Date: 2007-06-28 22:33

Message:
Logged In: NO 

Hi, the inability to _both_ dump a format _and_ produce
output in the same iniTeX run is probably tolerable as long
as no crashes occur.  I don't know the workings of WhizzyTeX
in detail: it is conceivable that their in-document dump
would be affected.  However, it is unlikely that WhizzyTeX
will indeed require both the output as well as the dump (the
dump may well contain pictures, for example from floats that
are going to be placed later), so there is at least a
reasonable way to tackle this from the macro level (divert
\shipout in the manner of the everyshi.sty package).

At least mylatex.ltx (and consequently preview-latex) should
work fine: \shipout before \begin{document} would be
extremely unusual and would result in strange results, anyway.

David

----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-06-28 21:09

Message:
Logged In: YES 
user_id=1608

Small limitation that I have yet to implement: the ability
to move stuff over from the initex run means that if initex
actually creates a pdf file, dumping a format should be
disallowed, or silently ignored. Attempting to keep track of
two disjunct pdf documents is just too hard for me. 

Note that I do not want to prohibit pdf creation from
initex. Just that you can't create a pdf document _as well
as_ perform a \dump.



----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-06-28 17:01

Message:
Logged In: YES 
user_id=4579

Bravo!

I was ready to embark on this myself, so I'm delighted to be
spared the trouble. It passes all the tests I've tried so far.

----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-06-28 12:57

Message:
Logged In: YES 
user_id=1608

Here is a patch that fixes the problem by dumping and
restoring the image _meta information_ to/from any generated
format. 

The image _data_ is not included (that would be really hard
to do in a portable way), and therefore the undumping
routines have to redo most of the work of \pdfximage, but
this is transparent to the user except that the tests
for \pdfminorversion and \pdfinclusionerrorlevel tests are
re-done.

The patch also saves some pdftex arrays that are needed to
rediscover the object. This could eventually be extended to
 make sure \refxform et al work as well. As of now, that is
untested due to lack of example.

Comments and testing welcome, as always.



----------------------------------------------------------------------

Comment By: Martin Schr?der (oneiros)
Date: 2007-06-26 23:01

Message:
Logged In: YES 
user_id=421

Sorry, pdf things work different then dvi, so we can not
make \pdfximage etc. in ini mode without a lot of work; we
will probably disable a bunch of primitives.

----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-06-26 15:49

Message:
Logged In: YES 
user_id=4579

Simplifying the example by eliminating the graphics package:

==> foo.ini <==
\documentclass{minimal}

\newbox\picbox
\pdfximage{pic.pdf}
\setbox\picbox\hbox{\pdfrefximage\pdflastximage}

\dump

==> foo.tex <==
\begin{document}
        \box\picbox
\end{document}


Also, I see now that my comparison with dvi-mode is indeed a
false one, because the mechanisms are quite different, and
the DVI graphics driver only has to include a \special,
rather than the graphic itself.

A simple solution, I suppose, would be to make \pdfrefximage
(and, presumably, the other \pdfrefx commands) invalid in
IniTeX mode. Perhaps this is too brutal, since it forbids
certain harmless activities such as finding the dimensions
of an image from an .ini file; and of course I would be
delighted if it were made to work instead.


----------------------------------------------------------------------

Comment By: Reinhard Kotucha (reinhard)
Date: 2007-06-26 01:26

Message:
Logged In: YES 
user_id=4195

Martin,
you probably can't do everything in a format file.  However,
it would be nice to be able to put graphics to a format file
at least.  Suppose that a web server has to generate PDF
files on-the-fly, each contains a company logo.  The best
place place for the logo is the format file if speed
matters.  It would be nice if there are no restrictions.

Regards,
  Reinhard



----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-06-26 00:42

Message:
Logged In: YES 
user_id=4579

I'm impressed by the speed of your response! Thanks.

If you replace the PDF image by an EPS file, and use
-output-format dvi, then it does work. That suggests to me
that the problem is not fundamentally caused by a limitation
of IniTeX. But I don't know enough about the inner workings
of the \includegraphics command to be sure about that.
(Perhaps PDF graphics are handled in a sufficiently
different way for this to be a false comparison?)

In any case, as you say, it shouldn't crash!

----------------------------------------------------------------------

Comment By: Martin Schr?der (oneiros)
Date: 2007-06-26 00:30

Message:
Logged In: YES 
user_id=421

I can reproduce it, and it obviously shouldn't crash, but
I'm really not shure if it's supposed to work, as the format
of course will not save the picture. You can't do everything
in IniTeX...

----------------------------------------------------------------------

You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=824&group_id=106

From noreply at sarovar.org  Mon Jul  2 13:33:11 2007
From: noreply at sarovar.org (noreply at sarovar.org)
Date: Mon, 02 Jul 2007 17:03:11 +0530
Subject: [NTG-pdftex] [ pdftex-Bugs-824 ] Bus error caused by loading an
	image into a format file
Message-ID: <E1I5K9X-0007GC-00@sarovar.org>

Bugs item #824, was opened at 2007-06-26 00:22
You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=824&group_id=106

Category: Image inclusion
Group: v1.40.3
Status: Open
Resolution: Accepted
Priority: 5
Submitted By: Robin Houston (robinhouston)
Assigned to: Martin Schr?der (oneiros)
Summary: Bus error caused by loading an image into a format file

Initial Comment:
I have written a tool that speeds up repeated
compilation of a source file, by generating a format
from the preamble of the document, and then using it to
compile the body.

One user reported a crash when using this tool with a
custom letterhead class; the class in question may be
found at
http://www.soe.ucsc.edu/~elm/LaTeX/ucletter.cls (though
note that a simpler demonstration is attached to this
report).

The bug is triggered by the fact that this class loads
an image during the processing of the preamble (i.e.
during the processing of the .ini file) and saves it in
a box. When this box is used, during the compilation of
the body, pdftex crashes.

This does work with ordinary (non-PDF) TeX, so the
problem is specific to PDFTeX.

The attachment contains a simple demonstration of the
problem. Unpack it and run 'make'.


----------------------------------------------------------------------

>Comment By: Hartmut Henkel (hhenkel)
Date: 2007-07-02 13:33

Message:
Logged In: YES 
user_id=929

> That's odd. The source I'm working from has
> @d is_obj_written(#) == (obj_offset(#) <> 0)
> Has this been changed recently?

this has been changed by the patch to bug 799, where also
'scheduled' has been introduced.

Regards, Hartmut

----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-07-02 13:21

Message:
Logged In: YES 
user_id=1608

> Has this been changed recently? 

In my (development version) of the source there is a state
'scheduled', that I assume comes from a fix to something
else. In any case, we just have ask Martin to be extra
careful about that line while creating 1.40.4 :-)

It is probably wise do dump the three heads you mentioned,
just in case: I really need the ximage one in my tree, and
dumping the others seems a logical extension. 

Well done to you on finding a way around the regression. 


----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-07-02 13:08

Message:
Logged In: YES 
user_id=4579

That's odd. The source I'm working from has

@d is_obj_written(#) == (obj_offset(#) <> 0)

Has this been changed recently? (Am I right in thinking that
the development version of the source tree is not publicly
available?)

With regard to which linked list headers to dump, we seem to
be reaching the point of making subtle improvements. The
original problem (whatsit nodes in dumped boxes referencing
non-existent objects) is solved without dumping any of the
headers.

One might conceivably want to load images/forms/raw objects
in the .ini, and then reference them from the .tex: this is
addressed by dumping head_tab[obj_type_ximage],
head_tab[obj_type_xform] and head_tab[obj_type_obj].
(Neither forms nor raw objects have any additional
associated metadata, as far as I can tell.)

I can't see any benefit from dumping the other entries,
whether or not doing so would cause potential crashes.

At any rate, what we have now seems a definite improvement
over the status quo, and avoids the undesirable
feature-regression of forbidding \dump after \shipout.

----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-07-02 12:53

Message:
Logged In: YES 
user_id=1608

WRT type image object: 

over here, it is only included twice after I do a small fix
to your patch:
  obj_tab[k].int2 := -1;
this could just be a simple difference between my and your
pdftex source trees, but please re-check. 

I definately have *no* runtime image with obj_tab[k].int2 :=
0, and that is correct/expected, because I can see in the
source that the is_obj_written() test checks for >-1.

The thing with head_tab[obj_type_xform] is why I initially
dumped all of them. The xforms should be safe, but fonts are
definately not ok (not unless whole lot more stuff is dumped
to the format). I don't know about the others heads. It
depends on whether or not the objects need additional data
structures besides obj_tab and pdf_mem, and I am not very
much at home in that section of the pdftex code.





----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-07-02 10:58

Message:
Logged In: YES 
user_id=4579

Taco, do you have an example of the "another problem" that
you mention? I thought I had dealt with that, by not dumping
obj_tab[k].int2 and resetting it to 0, and indeed it seems
to work when I try it.

To be precise about what I tried, I added the lines

%
\pdfrefximage\pdflastximage
\par\vfil\penalty-10000
%

before the \dump command in test-fmt2.tex. Both the
generated PDFs (test-fmt2.pdf and test2.pdf) seem okay.

Incidentally, it's easy to make a test, along the lines of
test2, that requires head_tab[obj_type_xform]. So I guess
that should be dumped too.

----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-07-02 10:34

Message:
Logged In: YES 
user_id=1608

The objects (and their numbers) are saved in the formats as well

----------------------------------------------------------------------

Comment By: Hartmut Henkel (hhenkel)
Date: 2007-07-02 10:30

Message:
Logged In: YES 
user_id=929

how can test2 work anyway? the pdfximage reserves an
absolute object number (not something like an image number),
and \pdflastximage gives this object number. But later in
the real document objects are numbered in the natural way in
ascending order, so how can an image object number fixed
already in the format fit into this sequence?

Regards, Hartmut

----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-07-02 09:11

Message:
Logged In: YES 
user_id=1608

I got an example from Hartmut Henkel that needs
head_tab[pdf_obj_ximage], it is test2 in attached tar. I
tried a quick test and it indeed seems to work ok if I dump
*only* that head_tab entry. 

But, you have to solve another problem as well. If you use
the image in the initex-dumped pdf, then the image wil not
be included in the runtime pdf (its state is 'written').
Somehow this state needs to be reset.

Taco


----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-07-02 09:10

Message:
Logged In: YES 
user_id=1608

I got an example from Hartmut Henkel that needs
head_tab[pdf_obj_ximage], it is test2 in attached tar. I
tried a quick test and it indeed seems to work ok if I dump
*only* that head_tab entry. 

But, you have to solve another problem as well. If you use
the image in the initex-dumped pdf, then the image wil not
be included in the runtime pdf (its state is 'written').
Somehow this state needs to be reset.

Taco


----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-06-30 18:56

Message:
Logged In: YES 
user_id=4579

The attached patch (initex-objects.patch) implements the
suggestions made below, together with a few other
improvements. It incorporates Taco Hoekwater's code, so
should be applied to a clean source tree.

In particular, it reinstates the ability to produce both a
PDF document and a memory dump in the same run. I've tested
it with \pdfxform as well as \pdfximage.

Comments? Counterexamples?

Robin

----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-06-30 14:38

Message:
Logged In: YES 
user_id=4579

Fortunately the "two picture" problem (demonstrated in the
attachment twopic.tar.gz) is trivial to solve: simply dump
and undump the variable pdf_ximage_count.

Presumably the same should be done for pdf_obj_count and
pdf_xform_count. Whether this is sufficient, I have no idea:
none of us have tested forms or raw objects, have we?


----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-06-30 12:08

Message:
Logged In: YES 
user_id=4579

A minor bug in the initex-refximage-dump.patch: the test for
fixed_pdfoutput=1 ought to be fixed_pdfoutput>0, otherwise
it will fail with \pdfoutput=2, say.

Another unrelated problem is that, if you load an image from
the .ini file, and then load and display another image from
the .tex file, the first image will appear where the second
one ought to be. I'll try and find out why this is happening.

(Incidentally, I haven't (yet?) discovered any problems
stemming from not (un)dumping the linked list headers.)

----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-06-29 20:08

Message:
Logged In: YES 
user_id=4579

Argh! Interesting, thanks.

Clearly my understanding of the pdftex code is patchy at
best. That said, what is gained by dumping and restoring the
head_tab? If I remove the parts of your code that dump and
undump the head_tab, then your example works (and mine
continue to work).

Robin

----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-06-29 18:32

Message:
Logged In: YES 
user_id=1608

Try a document that contains items besides a single image.
Many of the auxiliary tables are not dumped, resulting in
assertion failures in the non-ini run.

You don't even need to save or reuse boxes for those
crashes, just make a pair of:

% test.ini
\input plain
\pdfoutput=1
hello
\dump


% test.tex
world!
\end




----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-06-29 17:24

Message:
Logged In: YES 
user_id=4579

PS. I have just attached a new tar file, containing some
simple tests that create PDF from the IniTeX run. They all
appear to work, when my patch is applied.

----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-06-29 17:19

Message:
Logged In: YES 
user_id=4579

I don't think creating a PDF file from the IniTeX run is a
real problem. The attached tiny patch (to be applied on top
of Taco Hoekwater's first patch) seems to make it work.

Am I missing something?

----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-06-29 12:34

Message:
Logged In: YES 
user_id=1608

Here is the promised extra patch. No error is generated,
just a simple warning. Pdftex continues executing as if \end
was given instead.

----------------------------------------------------------------------

Comment By: Nobody (None)
Date: 2007-06-28 22:33

Message:
Logged In: NO 

Hi, the inability to _both_ dump a format _and_ produce
output in the same iniTeX run is probably tolerable as long
as no crashes occur.  I don't know the workings of WhizzyTeX
in detail: it is conceivable that their in-document dump
would be affected.  However, it is unlikely that WhizzyTeX
will indeed require both the output as well as the dump (the
dump may well contain pictures, for example from floats that
are going to be placed later), so there is at least a
reasonable way to tackle this from the macro level (divert
\shipout in the manner of the everyshi.sty package).

At least mylatex.ltx (and consequently preview-latex) should
work fine: \shipout before \begin{document} would be
extremely unusual and would result in strange results, anyway.

David

----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-06-28 21:09

Message:
Logged In: YES 
user_id=1608

Small limitation that I have yet to implement: the ability
to move stuff over from the initex run means that if initex
actually creates a pdf file, dumping a format should be
disallowed, or silently ignored. Attempting to keep track of
two disjunct pdf documents is just too hard for me. 

Note that I do not want to prohibit pdf creation from
initex. Just that you can't create a pdf document _as well
as_ perform a \dump.



----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-06-28 17:01

Message:
Logged In: YES 
user_id=4579

Bravo!

I was ready to embark on this myself, so I'm delighted to be
spared the trouble. It passes all the tests I've tried so far.

----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-06-28 12:57

Message:
Logged In: YES 
user_id=1608

Here is a patch that fixes the problem by dumping and
restoring the image _meta information_ to/from any generated
format. 

The image _data_ is not included (that would be really hard
to do in a portable way), and therefore the undumping
routines have to redo most of the work of \pdfximage, but
this is transparent to the user except that the tests
for \pdfminorversion and \pdfinclusionerrorlevel tests are
re-done.

The patch also saves some pdftex arrays that are needed to
rediscover the object. This could eventually be extended to
 make sure \refxform et al work as well. As of now, that is
untested due to lack of example.

Comments and testing welcome, as always.



----------------------------------------------------------------------

Comment By: Martin Schr?der (oneiros)
Date: 2007-06-26 23:01

Message:
Logged In: YES 
user_id=421

Sorry, pdf things work different then dvi, so we can not
make \pdfximage etc. in ini mode without a lot of work; we
will probably disable a bunch of primitives.

----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-06-26 15:49

Message:
Logged In: YES 
user_id=4579

Simplifying the example by eliminating the graphics package:

==> foo.ini <==
\documentclass{minimal}

\newbox\picbox
\pdfximage{pic.pdf}
\setbox\picbox\hbox{\pdfrefximage\pdflastximage}

\dump

==> foo.tex <==
\begin{document}
        \box\picbox
\end{document}


Also, I see now that my comparison with dvi-mode is indeed a
false one, because the mechanisms are quite different, and
the DVI graphics driver only has to include a \special,
rather than the graphic itself.

A simple solution, I suppose, would be to make \pdfrefximage
(and, presumably, the other \pdfrefx commands) invalid in
IniTeX mode. Perhaps this is too brutal, since it forbids
certain harmless activities such as finding the dimensions
of an image from an .ini file; and of course I would be
delighted if it were made to work instead.


----------------------------------------------------------------------

Comment By: Reinhard Kotucha (reinhard)
Date: 2007-06-26 01:26

Message:
Logged In: YES 
user_id=4195

Martin,
you probably can't do everything in a format file.  However,
it would be nice to be able to put graphics to a format file
at least.  Suppose that a web server has to generate PDF
files on-the-fly, each contains a company logo.  The best
place place for the logo is the format file if speed
matters.  It would be nice if there are no restrictions.

Regards,
  Reinhard



----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-06-26 00:42

Message:
Logged In: YES 
user_id=4579

I'm impressed by the speed of your response! Thanks.

If you replace the PDF image by an EPS file, and use
-output-format dvi, then it does work. That suggests to me
that the problem is not fundamentally caused by a limitation
of IniTeX. But I don't know enough about the inner workings
of the \includegraphics command to be sure about that.
(Perhaps PDF graphics are handled in a sufficiently
different way for this to be a false comparison?)

In any case, as you say, it shouldn't crash!

----------------------------------------------------------------------

Comment By: Martin Schr?der (oneiros)
Date: 2007-06-26 00:30

Message:
Logged In: YES 
user_id=421

I can reproduce it, and it obviously shouldn't crash, but
I'm really not shure if it's supposed to work, as the format
of course will not save the picture. You can't do everything
in IniTeX...

----------------------------------------------------------------------

You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=824&group_id=106

From noreply at sarovar.org  Mon Jul  2 13:59:45 2007
From: noreply at sarovar.org (noreply at sarovar.org)
Date: Mon, 02 Jul 2007 17:29:45 +0530
Subject: [NTG-pdftex] [ pdftex-Bugs-824 ] Bus error caused by loading an
	image into a format file
Message-ID: <E1I5KZF-0003AI-00@sarovar.org>

Bugs item #824, was opened at 2007-06-25 23:22
You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=824&group_id=106

Category: Image inclusion
Group: v1.40.3
Status: Open
Resolution: Accepted
Priority: 5
Submitted By: Robin Houston (robinhouston)
Assigned to: Martin Schr?der (oneiros)
Summary: Bus error caused by loading an image into a format file

Initial Comment:
I have written a tool that speeds up repeated
compilation of a source file, by generating a format
from the preamble of the document, and then using it to
compile the body.

One user reported a crash when using this tool with a
custom letterhead class; the class in question may be
found at
http://www.soe.ucsc.edu/~elm/LaTeX/ucletter.cls (though
note that a simpler demonstration is attached to this
report).

The bug is triggered by the fact that this class loads
an image during the processing of the preamble (i.e.
during the processing of the .ini file) and saves it in
a box. When this box is used, during the compilation of
the body, pdftex crashes.

This does work with ordinary (non-PDF) TeX, so the
problem is specific to PDFTeX.

The attachment contains a simple demonstration of the
problem. Unpack it and run 'make'.


----------------------------------------------------------------------

>Comment By: Robin Houston (robinhouston)
Date: 2007-07-02 12:59

Message:
Logged In: YES 
user_id=4579

A small additional improvement:

dump_int(pdf_last_xform);
dump_int(pdf_last_ximage);
dump_int(pdf_last_obj);

...

undump_int(pdf_last_xform);
undump_int(pdf_last_ximage);
undump_int(pdf_last_obj);

(so that \lastximage and friends will work correctly after
loading the format file).

----------------------------------------------------------------------

Comment By: Hartmut Henkel (hhenkel)
Date: 2007-07-02 12:33

Message:
Logged In: YES 
user_id=929

> That's odd. The source I'm working from has
> @d is_obj_written(#) == (obj_offset(#) <> 0)
> Has this been changed recently?

this has been changed by the patch to bug 799, where also
'scheduled' has been introduced.

Regards, Hartmut

----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-07-02 12:21

Message:
Logged In: YES 
user_id=1608

> Has this been changed recently? 

In my (development version) of the source there is a state
'scheduled', that I assume comes from a fix to something
else. In any case, we just have ask Martin to be extra
careful about that line while creating 1.40.4 :-)

It is probably wise do dump the three heads you mentioned,
just in case: I really need the ximage one in my tree, and
dumping the others seems a logical extension. 

Well done to you on finding a way around the regression. 


----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-07-02 12:08

Message:
Logged In: YES 
user_id=4579

That's odd. The source I'm working from has

@d is_obj_written(#) == (obj_offset(#) <> 0)

Has this been changed recently? (Am I right in thinking that
the development version of the source tree is not publicly
available?)

With regard to which linked list headers to dump, we seem to
be reaching the point of making subtle improvements. The
original problem (whatsit nodes in dumped boxes referencing
non-existent objects) is solved without dumping any of the
headers.

One might conceivably want to load images/forms/raw objects
in the .ini, and then reference them from the .tex: this is
addressed by dumping head_tab[obj_type_ximage],
head_tab[obj_type_xform] and head_tab[obj_type_obj].
(Neither forms nor raw objects have any additional
associated metadata, as far as I can tell.)

I can't see any benefit from dumping the other entries,
whether or not doing so would cause potential crashes.

At any rate, what we have now seems a definite improvement
over the status quo, and avoids the undesirable
feature-regression of forbidding \dump after \shipout.

----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-07-02 11:53

Message:
Logged In: YES 
user_id=1608

WRT type image object: 

over here, it is only included twice after I do a small fix
to your patch:
  obj_tab[k].int2 := -1;
this could just be a simple difference between my and your
pdftex source trees, but please re-check. 

I definately have *no* runtime image with obj_tab[k].int2 :=
0, and that is correct/expected, because I can see in the
source that the is_obj_written() test checks for >-1.

The thing with head_tab[obj_type_xform] is why I initially
dumped all of them. The xforms should be safe, but fonts are
definately not ok (not unless whole lot more stuff is dumped
to the format). I don't know about the others heads. It
depends on whether or not the objects need additional data
structures besides obj_tab and pdf_mem, and I am not very
much at home in that section of the pdftex code.





----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-07-02 09:58

Message:
Logged In: YES 
user_id=4579

Taco, do you have an example of the "another problem" that
you mention? I thought I had dealt with that, by not dumping
obj_tab[k].int2 and resetting it to 0, and indeed it seems
to work when I try it.

To be precise about what I tried, I added the lines

%
\pdfrefximage\pdflastximage
\par\vfil\penalty-10000
%

before the \dump command in test-fmt2.tex. Both the
generated PDFs (test-fmt2.pdf and test2.pdf) seem okay.

Incidentally, it's easy to make a test, along the lines of
test2, that requires head_tab[obj_type_xform]. So I guess
that should be dumped too.

----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-07-02 09:34

Message:
Logged In: YES 
user_id=1608

The objects (and their numbers) are saved in the formats as well

----------------------------------------------------------------------

Comment By: Hartmut Henkel (hhenkel)
Date: 2007-07-02 09:30

Message:
Logged In: YES 
user_id=929

how can test2 work anyway? the pdfximage reserves an
absolute object number (not something like an image number),
and \pdflastximage gives this object number. But later in
the real document objects are numbered in the natural way in
ascending order, so how can an image object number fixed
already in the format fit into this sequence?

Regards, Hartmut

----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-07-02 08:11

Message:
Logged In: YES 
user_id=1608

I got an example from Hartmut Henkel that needs
head_tab[pdf_obj_ximage], it is test2 in attached tar. I
tried a quick test and it indeed seems to work ok if I dump
*only* that head_tab entry. 

But, you have to solve another problem as well. If you use
the image in the initex-dumped pdf, then the image wil not
be included in the runtime pdf (its state is 'written').
Somehow this state needs to be reset.

Taco


----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-07-02 08:10

Message:
Logged In: YES 
user_id=1608

I got an example from Hartmut Henkel that needs
head_tab[pdf_obj_ximage], it is test2 in attached tar. I
tried a quick test and it indeed seems to work ok if I dump
*only* that head_tab entry. 

But, you have to solve another problem as well. If you use
the image in the initex-dumped pdf, then the image wil not
be included in the runtime pdf (its state is 'written').
Somehow this state needs to be reset.

Taco


----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-06-30 17:56

Message:
Logged In: YES 
user_id=4579

The attached patch (initex-objects.patch) implements the
suggestions made below, together with a few other
improvements. It incorporates Taco Hoekwater's code, so
should be applied to a clean source tree.

In particular, it reinstates the ability to produce both a
PDF document and a memory dump in the same run. I've tested
it with \pdfxform as well as \pdfximage.

Comments? Counterexamples?

Robin

----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-06-30 13:38

Message:
Logged In: YES 
user_id=4579

Fortunately the "two picture" problem (demonstrated in the
attachment twopic.tar.gz) is trivial to solve: simply dump
and undump the variable pdf_ximage_count.

Presumably the same should be done for pdf_obj_count and
pdf_xform_count. Whether this is sufficient, I have no idea:
none of us have tested forms or raw objects, have we?


----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-06-30 11:08

Message:
Logged In: YES 
user_id=4579

A minor bug in the initex-refximage-dump.patch: the test for
fixed_pdfoutput=1 ought to be fixed_pdfoutput>0, otherwise
it will fail with \pdfoutput=2, say.

Another unrelated problem is that, if you load an image from
the .ini file, and then load and display another image from
the .tex file, the first image will appear where the second
one ought to be. I'll try and find out why this is happening.

(Incidentally, I haven't (yet?) discovered any problems
stemming from not (un)dumping the linked list headers.)

----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-06-29 19:08

Message:
Logged In: YES 
user_id=4579

Argh! Interesting, thanks.

Clearly my understanding of the pdftex code is patchy at
best. That said, what is gained by dumping and restoring the
head_tab? If I remove the parts of your code that dump and
undump the head_tab, then your example works (and mine
continue to work).

Robin

----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-06-29 17:32

Message:
Logged In: YES 
user_id=1608

Try a document that contains items besides a single image.
Many of the auxiliary tables are not dumped, resulting in
assertion failures in the non-ini run.

You don't even need to save or reuse boxes for those
crashes, just make a pair of:

% test.ini
\input plain
\pdfoutput=1
hello
\dump


% test.tex
world!
\end




----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-06-29 16:24

Message:
Logged In: YES 
user_id=4579

PS. I have just attached a new tar file, containing some
simple tests that create PDF from the IniTeX run. They all
appear to work, when my patch is applied.

----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-06-29 16:19

Message:
Logged In: YES 
user_id=4579

I don't think creating a PDF file from the IniTeX run is a
real problem. The attached tiny patch (to be applied on top
of Taco Hoekwater's first patch) seems to make it work.

Am I missing something?

----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-06-29 11:34

Message:
Logged In: YES 
user_id=1608

Here is the promised extra patch. No error is generated,
just a simple warning. Pdftex continues executing as if \end
was given instead.

----------------------------------------------------------------------

Comment By: Nobody (None)
Date: 2007-06-28 21:33

Message:
Logged In: NO 

Hi, the inability to _both_ dump a format _and_ produce
output in the same iniTeX run is probably tolerable as long
as no crashes occur.  I don't know the workings of WhizzyTeX
in detail: it is conceivable that their in-document dump
would be affected.  However, it is unlikely that WhizzyTeX
will indeed require both the output as well as the dump (the
dump may well contain pictures, for example from floats that
are going to be placed later), so there is at least a
reasonable way to tackle this from the macro level (divert
\shipout in the manner of the everyshi.sty package).

At least mylatex.ltx (and consequently preview-latex) should
work fine: \shipout before \begin{document} would be
extremely unusual and would result in strange results, anyway.

David

----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-06-28 20:09

Message:
Logged In: YES 
user_id=1608

Small limitation that I have yet to implement: the ability
to move stuff over from the initex run means that if initex
actually creates a pdf file, dumping a format should be
disallowed, or silently ignored. Attempting to keep track of
two disjunct pdf documents is just too hard for me. 

Note that I do not want to prohibit pdf creation from
initex. Just that you can't create a pdf document _as well
as_ perform a \dump.



----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-06-28 16:01

Message:
Logged In: YES 
user_id=4579

Bravo!

I was ready to embark on this myself, so I'm delighted to be
spared the trouble. It passes all the tests I've tried so far.

----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-06-28 11:57

Message:
Logged In: YES 
user_id=1608

Here is a patch that fixes the problem by dumping and
restoring the image _meta information_ to/from any generated
format. 

The image _data_ is not included (that would be really hard
to do in a portable way), and therefore the undumping
routines have to redo most of the work of \pdfximage, but
this is transparent to the user except that the tests
for \pdfminorversion and \pdfinclusionerrorlevel tests are
re-done.

The patch also saves some pdftex arrays that are needed to
rediscover the object. This could eventually be extended to
 make sure \refxform et al work as well. As of now, that is
untested due to lack of example.

Comments and testing welcome, as always.



----------------------------------------------------------------------

Comment By: Martin Schr?der (oneiros)
Date: 2007-06-26 22:01

Message:
Logged In: YES 
user_id=421

Sorry, pdf things work different then dvi, so we can not
make \pdfximage etc. in ini mode without a lot of work; we
will probably disable a bunch of primitives.

----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-06-26 14:49

Message:
Logged In: YES 
user_id=4579

Simplifying the example by eliminating the graphics package:

==> foo.ini <==
\documentclass{minimal}

\newbox\picbox
\pdfximage{pic.pdf}
\setbox\picbox\hbox{\pdfrefximage\pdflastximage}

\dump

==> foo.tex <==
\begin{document}
        \box\picbox
\end{document}


Also, I see now that my comparison with dvi-mode is indeed a
false one, because the mechanisms are quite different, and
the DVI graphics driver only has to include a \special,
rather than the graphic itself.

A simple solution, I suppose, would be to make \pdfrefximage
(and, presumably, the other \pdfrefx commands) invalid in
IniTeX mode. Perhaps this is too brutal, since it forbids
certain harmless activities such as finding the dimensions
of an image from an .ini file; and of course I would be
delighted if it were made to work instead.


----------------------------------------------------------------------

Comment By: Reinhard Kotucha (reinhard)
Date: 2007-06-26 00:26

Message:
Logged In: YES 
user_id=4195

Martin,
you probably can't do everything in a format file.  However,
it would be nice to be able to put graphics to a format file
at least.  Suppose that a web server has to generate PDF
files on-the-fly, each contains a company logo.  The best
place place for the logo is the format file if speed
matters.  It would be nice if there are no restrictions.

Regards,
  Reinhard



----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-06-25 23:42

Message:
Logged In: YES 
user_id=4579

I'm impressed by the speed of your response! Thanks.

If you replace the PDF image by an EPS file, and use
-output-format dvi, then it does work. That suggests to me
that the problem is not fundamentally caused by a limitation
of IniTeX. But I don't know enough about the inner workings
of the \includegraphics command to be sure about that.
(Perhaps PDF graphics are handled in a sufficiently
different way for this to be a false comparison?)

In any case, as you say, it shouldn't crash!

----------------------------------------------------------------------

Comment By: Martin Schr?der (oneiros)
Date: 2007-06-25 23:30

Message:
Logged In: YES 
user_id=421

I can reproduce it, and it obviously shouldn't crash, but
I'm really not shure if it's supposed to work, as the format
of course will not save the picture. You can't do everything
in IniTeX...

----------------------------------------------------------------------

You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=824&group_id=106

From noreply at sarovar.org  Mon Jul  2 18:58:57 2007
From: noreply at sarovar.org (noreply at sarovar.org)
Date: Mon, 02 Jul 2007 22:28:57 +0530
Subject: [NTG-pdftex] [ pdftex-Bugs-824 ] Bus error caused by loading an
	image into a format file
Message-ID: <E1I5PEn-0005tw-00@sarovar.org>

Bugs item #824, was opened at 2007-06-26 00:22
You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=824&group_id=106

Category: Image inclusion
Group: v1.40.3
Status: Open
Resolution: Accepted
Priority: 5
Submitted By: Robin Houston (robinhouston)
Assigned to: Martin Schr?der (oneiros)
Summary: Bus error caused by loading an image into a format file

Initial Comment:
I have written a tool that speeds up repeated
compilation of a source file, by generating a format
from the preamble of the document, and then using it to
compile the body.

One user reported a crash when using this tool with a
custom letterhead class; the class in question may be
found at
http://www.soe.ucsc.edu/~elm/LaTeX/ucletter.cls (though
note that a simpler demonstration is attached to this
report).

The bug is triggered by the fact that this class loads
an image during the processing of the preamble (i.e.
during the processing of the .ini file) and saves it in
a box. When this box is used, during the compilation of
the body, pdftex crashes.

This does work with ordinary (non-PDF) TeX, so the
problem is specific to PDFTeX.

The attachment contains a simple demonstration of the
problem. Unpack it and run 'make'.


----------------------------------------------------------------------

>Comment By: Taco Hoekwater (taco)
Date: 2007-07-02 18:58

Message:
Logged In: YES 
user_id=1608

Robin,

I have merged those extra variables and heads with your
previous patch. Can you verify that all is still well?

----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-07-02 13:59

Message:
Logged In: YES 
user_id=4579

A small additional improvement:

dump_int(pdf_last_xform);
dump_int(pdf_last_ximage);
dump_int(pdf_last_obj);

...

undump_int(pdf_last_xform);
undump_int(pdf_last_ximage);
undump_int(pdf_last_obj);

(so that \lastximage and friends will work correctly after
loading the format file).

----------------------------------------------------------------------

Comment By: Hartmut Henkel (hhenkel)
Date: 2007-07-02 13:33

Message:
Logged In: YES 
user_id=929

> That's odd. The source I'm working from has
> @d is_obj_written(#) == (obj_offset(#) <> 0)
> Has this been changed recently?

this has been changed by the patch to bug 799, where also
'scheduled' has been introduced.

Regards, Hartmut

----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-07-02 13:21

Message:
Logged In: YES 
user_id=1608

> Has this been changed recently? 

In my (development version) of the source there is a state
'scheduled', that I assume comes from a fix to something
else. In any case, we just have ask Martin to be extra
careful about that line while creating 1.40.4 :-)

It is probably wise do dump the three heads you mentioned,
just in case: I really need the ximage one in my tree, and
dumping the others seems a logical extension. 

Well done to you on finding a way around the regression. 


----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-07-02 13:08

Message:
Logged In: YES 
user_id=4579

That's odd. The source I'm working from has

@d is_obj_written(#) == (obj_offset(#) <> 0)

Has this been changed recently? (Am I right in thinking that
the development version of the source tree is not publicly
available?)

With regard to which linked list headers to dump, we seem to
be reaching the point of making subtle improvements. The
original problem (whatsit nodes in dumped boxes referencing
non-existent objects) is solved without dumping any of the
headers.

One might conceivably want to load images/forms/raw objects
in the .ini, and then reference them from the .tex: this is
addressed by dumping head_tab[obj_type_ximage],
head_tab[obj_type_xform] and head_tab[obj_type_obj].
(Neither forms nor raw objects have any additional
associated metadata, as far as I can tell.)

I can't see any benefit from dumping the other entries,
whether or not doing so would cause potential crashes.

At any rate, what we have now seems a definite improvement
over the status quo, and avoids the undesirable
feature-regression of forbidding \dump after \shipout.

----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-07-02 12:53

Message:
Logged In: YES 
user_id=1608

WRT type image object: 

over here, it is only included twice after I do a small fix
to your patch:
  obj_tab[k].int2 := -1;
this could just be a simple difference between my and your
pdftex source trees, but please re-check. 

I definately have *no* runtime image with obj_tab[k].int2 :=
0, and that is correct/expected, because I can see in the
source that the is_obj_written() test checks for >-1.

The thing with head_tab[obj_type_xform] is why I initially
dumped all of them. The xforms should be safe, but fonts are
definately not ok (not unless whole lot more stuff is dumped
to the format). I don't know about the others heads. It
depends on whether or not the objects need additional data
structures besides obj_tab and pdf_mem, and I am not very
much at home in that section of the pdftex code.





----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-07-02 10:58

Message:
Logged In: YES 
user_id=4579

Taco, do you have an example of the "another problem" that
you mention? I thought I had dealt with that, by not dumping
obj_tab[k].int2 and resetting it to 0, and indeed it seems
to work when I try it.

To be precise about what I tried, I added the lines

%
\pdfrefximage\pdflastximage
\par\vfil\penalty-10000
%

before the \dump command in test-fmt2.tex. Both the
generated PDFs (test-fmt2.pdf and test2.pdf) seem okay.

Incidentally, it's easy to make a test, along the lines of
test2, that requires head_tab[obj_type_xform]. So I guess
that should be dumped too.

----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-07-02 10:34

Message:
Logged In: YES 
user_id=1608

The objects (and their numbers) are saved in the formats as well

----------------------------------------------------------------------

Comment By: Hartmut Henkel (hhenkel)
Date: 2007-07-02 10:30

Message:
Logged In: YES 
user_id=929

how can test2 work anyway? the pdfximage reserves an
absolute object number (not something like an image number),
and \pdflastximage gives this object number. But later in
the real document objects are numbered in the natural way in
ascending order, so how can an image object number fixed
already in the format fit into this sequence?

Regards, Hartmut

----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-07-02 09:11

Message:
Logged In: YES 
user_id=1608

I got an example from Hartmut Henkel that needs
head_tab[pdf_obj_ximage], it is test2 in attached tar. I
tried a quick test and it indeed seems to work ok if I dump
*only* that head_tab entry. 

But, you have to solve another problem as well. If you use
the image in the initex-dumped pdf, then the image wil not
be included in the runtime pdf (its state is 'written').
Somehow this state needs to be reset.

Taco


----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-07-02 09:10

Message:
Logged In: YES 
user_id=1608

I got an example from Hartmut Henkel that needs
head_tab[pdf_obj_ximage], it is test2 in attached tar. I
tried a quick test and it indeed seems to work ok if I dump
*only* that head_tab entry. 

But, you have to solve another problem as well. If you use
the image in the initex-dumped pdf, then the image wil not
be included in the runtime pdf (its state is 'written').
Somehow this state needs to be reset.

Taco


----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-06-30 18:56

Message:
Logged In: YES 
user_id=4579

The attached patch (initex-objects.patch) implements the
suggestions made below, together with a few other
improvements. It incorporates Taco Hoekwater's code, so
should be applied to a clean source tree.

In particular, it reinstates the ability to produce both a
PDF document and a memory dump in the same run. I've tested
it with \pdfxform as well as \pdfximage.

Comments? Counterexamples?

Robin

----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-06-30 14:38

Message:
Logged In: YES 
user_id=4579

Fortunately the "two picture" problem (demonstrated in the
attachment twopic.tar.gz) is trivial to solve: simply dump
and undump the variable pdf_ximage_count.

Presumably the same should be done for pdf_obj_count and
pdf_xform_count. Whether this is sufficient, I have no idea:
none of us have tested forms or raw objects, have we?


----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-06-30 12:08

Message:
Logged In: YES 
user_id=4579

A minor bug in the initex-refximage-dump.patch: the test for
fixed_pdfoutput=1 ought to be fixed_pdfoutput>0, otherwise
it will fail with \pdfoutput=2, say.

Another unrelated problem is that, if you load an image from
the .ini file, and then load and display another image from
the .tex file, the first image will appear where the second
one ought to be. I'll try and find out why this is happening.

(Incidentally, I haven't (yet?) discovered any problems
stemming from not (un)dumping the linked list headers.)

----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-06-29 20:08

Message:
Logged In: YES 
user_id=4579

Argh! Interesting, thanks.

Clearly my understanding of the pdftex code is patchy at
best. That said, what is gained by dumping and restoring the
head_tab? If I remove the parts of your code that dump and
undump the head_tab, then your example works (and mine
continue to work).

Robin

----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-06-29 18:32

Message:
Logged In: YES 
user_id=1608

Try a document that contains items besides a single image.
Many of the auxiliary tables are not dumped, resulting in
assertion failures in the non-ini run.

You don't even need to save or reuse boxes for those
crashes, just make a pair of:

% test.ini
\input plain
\pdfoutput=1
hello
\dump


% test.tex
world!
\end




----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-06-29 17:24

Message:
Logged In: YES 
user_id=4579

PS. I have just attached a new tar file, containing some
simple tests that create PDF from the IniTeX run. They all
appear to work, when my patch is applied.

----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-06-29 17:19

Message:
Logged In: YES 
user_id=4579

I don't think creating a PDF file from the IniTeX run is a
real problem. The attached tiny patch (to be applied on top
of Taco Hoekwater's first patch) seems to make it work.

Am I missing something?

----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-06-29 12:34

Message:
Logged In: YES 
user_id=1608

Here is the promised extra patch. No error is generated,
just a simple warning. Pdftex continues executing as if \end
was given instead.

----------------------------------------------------------------------

Comment By: Nobody (None)
Date: 2007-06-28 22:33

Message:
Logged In: NO 

Hi, the inability to _both_ dump a format _and_ produce
output in the same iniTeX run is probably tolerable as long
as no crashes occur.  I don't know the workings of WhizzyTeX
in detail: it is conceivable that their in-document dump
would be affected.  However, it is unlikely that WhizzyTeX
will indeed require both the output as well as the dump (the
dump may well contain pictures, for example from floats that
are going to be placed later), so there is at least a
reasonable way to tackle this from the macro level (divert
\shipout in the manner of the everyshi.sty package).

At least mylatex.ltx (and consequently preview-latex) should
work fine: \shipout before \begin{document} would be
extremely unusual and would result in strange results, anyway.

David

----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-06-28 21:09

Message:
Logged In: YES 
user_id=1608

Small limitation that I have yet to implement: the ability
to move stuff over from the initex run means that if initex
actually creates a pdf file, dumping a format should be
disallowed, or silently ignored. Attempting to keep track of
two disjunct pdf documents is just too hard for me. 

Note that I do not want to prohibit pdf creation from
initex. Just that you can't create a pdf document _as well
as_ perform a \dump.



----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-06-28 17:01

Message:
Logged In: YES 
user_id=4579

Bravo!

I was ready to embark on this myself, so I'm delighted to be
spared the trouble. It passes all the tests I've tried so far.

----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-06-28 12:57

Message:
Logged In: YES 
user_id=1608

Here is a patch that fixes the problem by dumping and
restoring the image _meta information_ to/from any generated
format. 

The image _data_ is not included (that would be really hard
to do in a portable way), and therefore the undumping
routines have to redo most of the work of \pdfximage, but
this is transparent to the user except that the tests
for \pdfminorversion and \pdfinclusionerrorlevel tests are
re-done.

The patch also saves some pdftex arrays that are needed to
rediscover the object. This could eventually be extended to
 make sure \refxform et al work as well. As of now, that is
untested due to lack of example.

Comments and testing welcome, as always.



----------------------------------------------------------------------

Comment By: Martin Schr?der (oneiros)
Date: 2007-06-26 23:01

Message:
Logged In: YES 
user_id=421

Sorry, pdf things work different then dvi, so we can not
make \pdfximage etc. in ini mode without a lot of work; we
will probably disable a bunch of primitives.

----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-06-26 15:49

Message:
Logged In: YES 
user_id=4579

Simplifying the example by eliminating the graphics package:

==> foo.ini <==
\documentclass{minimal}

\newbox\picbox
\pdfximage{pic.pdf}
\setbox\picbox\hbox{\pdfrefximage\pdflastximage}

\dump

==> foo.tex <==
\begin{document}
        \box\picbox
\end{document}


Also, I see now that my comparison with dvi-mode is indeed a
false one, because the mechanisms are quite different, and
the DVI graphics driver only has to include a \special,
rather than the graphic itself.

A simple solution, I suppose, would be to make \pdfrefximage
(and, presumably, the other \pdfrefx commands) invalid in
IniTeX mode. Perhaps this is too brutal, since it forbids
certain harmless activities such as finding the dimensions
of an image from an .ini file; and of course I would be
delighted if it were made to work instead.


----------------------------------------------------------------------

Comment By: Reinhard Kotucha (reinhard)
Date: 2007-06-26 01:26

Message:
Logged In: YES 
user_id=4195

Martin,
you probably can't do everything in a format file.  However,
it would be nice to be able to put graphics to a format file
at least.  Suppose that a web server has to generate PDF
files on-the-fly, each contains a company logo.  The best
place place for the logo is the format file if speed
matters.  It would be nice if there are no restrictions.

Regards,
  Reinhard



----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-06-26 00:42

Message:
Logged In: YES 
user_id=4579

I'm impressed by the speed of your response! Thanks.

If you replace the PDF image by an EPS file, and use
-output-format dvi, then it does work. That suggests to me
that the problem is not fundamentally caused by a limitation
of IniTeX. But I don't know enough about the inner workings
of the \includegraphics command to be sure about that.
(Perhaps PDF graphics are handled in a sufficiently
different way for this to be a false comparison?)

In any case, as you say, it shouldn't crash!

----------------------------------------------------------------------

Comment By: Martin Schr?der (oneiros)
Date: 2007-06-26 00:30

Message:
Logged In: YES 
user_id=421

I can reproduce it, and it obviously shouldn't crash, but
I'm really not shure if it's supposed to work, as the format
of course will not save the picture. You can't do everything
in IniTeX...

----------------------------------------------------------------------

You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=824&group_id=106

From noreply at sarovar.org  Tue Jul  3 15:33:28 2007
From: noreply at sarovar.org (noreply at sarovar.org)
Date: Tue, 03 Jul 2007 19:03:28 +0530
Subject: [NTG-pdftex] [ pdftex-Bugs-824 ] Bus error caused by loading an
	image into a format file
Message-ID: <E1I5iVU-0006nI-00@sarovar.org>

Bugs item #824, was opened at 2007-06-25 23:22
You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=824&group_id=106

Category: Image inclusion
Group: v1.40.3
Status: Open
Resolution: Accepted
Priority: 5
Submitted By: Robin Houston (robinhouston)
Assigned to: Martin Schr?der (oneiros)
Summary: Bus error caused by loading an image into a format file

Initial Comment:
I have written a tool that speeds up repeated
compilation of a source file, by generating a format
from the preamble of the document, and then using it to
compile the body.

One user reported a crash when using this tool with a
custom letterhead class; the class in question may be
found at
http://www.soe.ucsc.edu/~elm/LaTeX/ucletter.cls (though
note that a simpler demonstration is attached to this
report).

The bug is triggered by the fact that this class loads
an image during the processing of the preamble (i.e.
during the processing of the .ini file) and saves it in
a box. When this box is used, during the compilation of
the body, pdftex crashes.

This does work with ordinary (non-PDF) TeX, so the
problem is specific to PDFTeX.

The attachment contains a simple demonstration of the
problem. Unpack it and run 'make'.


----------------------------------------------------------------------

>Comment By: Robin Houston (robinhouston)
Date: 2007-07-03 14:33

Message:
Logged In: YES 
user_id=4579

Yes, it's essentially fine (once I apply the patch for 799).
A couple of minor things:

1. I forgot to include pdftex.defines in the diff,
2. One of the comments had become inconsistent with the code;

so I attach a new (final?) patch. (I have also reinstated an
unrelated typo correction -- though perhaps this is already
fixed in your tree, which is why you removed it?)

----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-07-02 17:58

Message:
Logged In: YES 
user_id=1608

Robin,

I have merged those extra variables and heads with your
previous patch. Can you verify that all is still well?

----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-07-02 12:59

Message:
Logged In: YES 
user_id=4579

A small additional improvement:

dump_int(pdf_last_xform);
dump_int(pdf_last_ximage);
dump_int(pdf_last_obj);

...

undump_int(pdf_last_xform);
undump_int(pdf_last_ximage);
undump_int(pdf_last_obj);

(so that \lastximage and friends will work correctly after
loading the format file).

----------------------------------------------------------------------

Comment By: Hartmut Henkel (hhenkel)
Date: 2007-07-02 12:33

Message:
Logged In: YES 
user_id=929

> That's odd. The source I'm working from has
> @d is_obj_written(#) == (obj_offset(#) <> 0)
> Has this been changed recently?

this has been changed by the patch to bug 799, where also
'scheduled' has been introduced.

Regards, Hartmut

----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-07-02 12:21

Message:
Logged In: YES 
user_id=1608

> Has this been changed recently? 

In my (development version) of the source there is a state
'scheduled', that I assume comes from a fix to something
else. In any case, we just have ask Martin to be extra
careful about that line while creating 1.40.4 :-)

It is probably wise do dump the three heads you mentioned,
just in case: I really need the ximage one in my tree, and
dumping the others seems a logical extension. 

Well done to you on finding a way around the regression. 


----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-07-02 12:08

Message:
Logged In: YES 
user_id=4579

That's odd. The source I'm working from has

@d is_obj_written(#) == (obj_offset(#) <> 0)

Has this been changed recently? (Am I right in thinking that
the development version of the source tree is not publicly
available?)

With regard to which linked list headers to dump, we seem to
be reaching the point of making subtle improvements. The
original problem (whatsit nodes in dumped boxes referencing
non-existent objects) is solved without dumping any of the
headers.

One might conceivably want to load images/forms/raw objects
in the .ini, and then reference them from the .tex: this is
addressed by dumping head_tab[obj_type_ximage],
head_tab[obj_type_xform] and head_tab[obj_type_obj].
(Neither forms nor raw objects have any additional
associated metadata, as far as I can tell.)

I can't see any benefit from dumping the other entries,
whether or not doing so would cause potential crashes.

At any rate, what we have now seems a definite improvement
over the status quo, and avoids the undesirable
feature-regression of forbidding \dump after \shipout.

----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-07-02 11:53

Message:
Logged In: YES 
user_id=1608

WRT type image object: 

over here, it is only included twice after I do a small fix
to your patch:
  obj_tab[k].int2 := -1;
this could just be a simple difference between my and your
pdftex source trees, but please re-check. 

I definately have *no* runtime image with obj_tab[k].int2 :=
0, and that is correct/expected, because I can see in the
source that the is_obj_written() test checks for >-1.

The thing with head_tab[obj_type_xform] is why I initially
dumped all of them. The xforms should be safe, but fonts are
definately not ok (not unless whole lot more stuff is dumped
to the format). I don't know about the others heads. It
depends on whether or not the objects need additional data
structures besides obj_tab and pdf_mem, and I am not very
much at home in that section of the pdftex code.





----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-07-02 09:58

Message:
Logged In: YES 
user_id=4579

Taco, do you have an example of the "another problem" that
you mention? I thought I had dealt with that, by not dumping
obj_tab[k].int2 and resetting it to 0, and indeed it seems
to work when I try it.

To be precise about what I tried, I added the lines

%
\pdfrefximage\pdflastximage
\par\vfil\penalty-10000
%

before the \dump command in test-fmt2.tex. Both the
generated PDFs (test-fmt2.pdf and test2.pdf) seem okay.

Incidentally, it's easy to make a test, along the lines of
test2, that requires head_tab[obj_type_xform]. So I guess
that should be dumped too.

----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-07-02 09:34

Message:
Logged In: YES 
user_id=1608

The objects (and their numbers) are saved in the formats as well

----------------------------------------------------------------------

Comment By: Hartmut Henkel (hhenkel)
Date: 2007-07-02 09:30

Message:
Logged In: YES 
user_id=929

how can test2 work anyway? the pdfximage reserves an
absolute object number (not something like an image number),
and \pdflastximage gives this object number. But later in
the real document objects are numbered in the natural way in
ascending order, so how can an image object number fixed
already in the format fit into this sequence?

Regards, Hartmut

----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-07-02 08:11

Message:
Logged In: YES 
user_id=1608

I got an example from Hartmut Henkel that needs
head_tab[pdf_obj_ximage], it is test2 in attached tar. I
tried a quick test and it indeed seems to work ok if I dump
*only* that head_tab entry. 

But, you have to solve another problem as well. If you use
the image in the initex-dumped pdf, then the image wil not
be included in the runtime pdf (its state is 'written').
Somehow this state needs to be reset.

Taco


----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-07-02 08:10

Message:
Logged In: YES 
user_id=1608

I got an example from Hartmut Henkel that needs
head_tab[pdf_obj_ximage], it is test2 in attached tar. I
tried a quick test and it indeed seems to work ok if I dump
*only* that head_tab entry. 

But, you have to solve another problem as well. If you use
the image in the initex-dumped pdf, then the image wil not
be included in the runtime pdf (its state is 'written').
Somehow this state needs to be reset.

Taco


----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-06-30 17:56

Message:
Logged In: YES 
user_id=4579

The attached patch (initex-objects.patch) implements the
suggestions made below, together with a few other
improvements. It incorporates Taco Hoekwater's code, so
should be applied to a clean source tree.

In particular, it reinstates the ability to produce both a
PDF document and a memory dump in the same run. I've tested
it with \pdfxform as well as \pdfximage.

Comments? Counterexamples?

Robin

----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-06-30 13:38

Message:
Logged In: YES 
user_id=4579

Fortunately the "two picture" problem (demonstrated in the
attachment twopic.tar.gz) is trivial to solve: simply dump
and undump the variable pdf_ximage_count.

Presumably the same should be done for pdf_obj_count and
pdf_xform_count. Whether this is sufficient, I have no idea:
none of us have tested forms or raw objects, have we?


----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-06-30 11:08

Message:
Logged In: YES 
user_id=4579

A minor bug in the initex-refximage-dump.patch: the test for
fixed_pdfoutput=1 ought to be fixed_pdfoutput>0, otherwise
it will fail with \pdfoutput=2, say.

Another unrelated problem is that, if you load an image from
the .ini file, and then load and display another image from
the .tex file, the first image will appear where the second
one ought to be. I'll try and find out why this is happening.

(Incidentally, I haven't (yet?) discovered any problems
stemming from not (un)dumping the linked list headers.)

----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-06-29 19:08

Message:
Logged In: YES 
user_id=4579

Argh! Interesting, thanks.

Clearly my understanding of the pdftex code is patchy at
best. That said, what is gained by dumping and restoring the
head_tab? If I remove the parts of your code that dump and
undump the head_tab, then your example works (and mine
continue to work).

Robin

----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-06-29 17:32

Message:
Logged In: YES 
user_id=1608

Try a document that contains items besides a single image.
Many of the auxiliary tables are not dumped, resulting in
assertion failures in the non-ini run.

You don't even need to save or reuse boxes for those
crashes, just make a pair of:

% test.ini
\input plain
\pdfoutput=1
hello
\dump


% test.tex
world!
\end




----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-06-29 16:24

Message:
Logged In: YES 
user_id=4579

PS. I have just attached a new tar file, containing some
simple tests that create PDF from the IniTeX run. They all
appear to work, when my patch is applied.

----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-06-29 16:19

Message:
Logged In: YES 
user_id=4579

I don't think creating a PDF file from the IniTeX run is a
real problem. The attached tiny patch (to be applied on top
of Taco Hoekwater's first patch) seems to make it work.

Am I missing something?

----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-06-29 11:34

Message:
Logged In: YES 
user_id=1608

Here is the promised extra patch. No error is generated,
just a simple warning. Pdftex continues executing as if \end
was given instead.

----------------------------------------------------------------------

Comment By: Nobody (None)
Date: 2007-06-28 21:33

Message:
Logged In: NO 

Hi, the inability to _both_ dump a format _and_ produce
output in the same iniTeX run is probably tolerable as long
as no crashes occur.  I don't know the workings of WhizzyTeX
in detail: it is conceivable that their in-document dump
would be affected.  However, it is unlikely that WhizzyTeX
will indeed require both the output as well as the dump (the
dump may well contain pictures, for example from floats that
are going to be placed later), so there is at least a
reasonable way to tackle this from the macro level (divert
\shipout in the manner of the everyshi.sty package).

At least mylatex.ltx (and consequently preview-latex) should
work fine: \shipout before \begin{document} would be
extremely unusual and would result in strange results, anyway.

David

----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-06-28 20:09

Message:
Logged In: YES 
user_id=1608

Small limitation that I have yet to implement: the ability
to move stuff over from the initex run means that if initex
actually creates a pdf file, dumping a format should be
disallowed, or silently ignored. Attempting to keep track of
two disjunct pdf documents is just too hard for me. 

Note that I do not want to prohibit pdf creation from
initex. Just that you can't create a pdf document _as well
as_ perform a \dump.



----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-06-28 16:01

Message:
Logged In: YES 
user_id=4579

Bravo!

I was ready to embark on this myself, so I'm delighted to be
spared the trouble. It passes all the tests I've tried so far.

----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-06-28 11:57

Message:
Logged In: YES 
user_id=1608

Here is a patch that fixes the problem by dumping and
restoring the image _meta information_ to/from any generated
format. 

The image _data_ is not included (that would be really hard
to do in a portable way), and therefore the undumping
routines have to redo most of the work of \pdfximage, but
this is transparent to the user except that the tests
for \pdfminorversion and \pdfinclusionerrorlevel tests are
re-done.

The patch also saves some pdftex arrays that are needed to
rediscover the object. This could eventually be extended to
 make sure \refxform et al work as well. As of now, that is
untested due to lack of example.

Comments and testing welcome, as always.



----------------------------------------------------------------------

Comment By: Martin Schr?der (oneiros)
Date: 2007-06-26 22:01

Message:
Logged In: YES 
user_id=421

Sorry, pdf things work different then dvi, so we can not
make \pdfximage etc. in ini mode without a lot of work; we
will probably disable a bunch of primitives.

----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-06-26 14:49

Message:
Logged In: YES 
user_id=4579

Simplifying the example by eliminating the graphics package:

==> foo.ini <==
\documentclass{minimal}

\newbox\picbox
\pdfximage{pic.pdf}
\setbox\picbox\hbox{\pdfrefximage\pdflastximage}

\dump

==> foo.tex <==
\begin{document}
        \box\picbox
\end{document}


Also, I see now that my comparison with dvi-mode is indeed a
false one, because the mechanisms are quite different, and
the DVI graphics driver only has to include a \special,
rather than the graphic itself.

A simple solution, I suppose, would be to make \pdfrefximage
(and, presumably, the other \pdfrefx commands) invalid in
IniTeX mode. Perhaps this is too brutal, since it forbids
certain harmless activities such as finding the dimensions
of an image from an .ini file; and of course I would be
delighted if it were made to work instead.


----------------------------------------------------------------------

Comment By: Reinhard Kotucha (reinhard)
Date: 2007-06-26 00:26

Message:
Logged In: YES 
user_id=4195

Martin,
you probably can't do everything in a format file.  However,
it would be nice to be able to put graphics to a format file
at least.  Suppose that a web server has to generate PDF
files on-the-fly, each contains a company logo.  The best
place place for the logo is the format file if speed
matters.  It would be nice if there are no restrictions.

Regards,
  Reinhard



----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-06-25 23:42

Message:
Logged In: YES 
user_id=4579

I'm impressed by the speed of your response! Thanks.

If you replace the PDF image by an EPS file, and use
-output-format dvi, then it does work. That suggests to me
that the problem is not fundamentally caused by a limitation
of IniTeX. But I don't know enough about the inner workings
of the \includegraphics command to be sure about that.
(Perhaps PDF graphics are handled in a sufficiently
different way for this to be a false comparison?)

In any case, as you say, it shouldn't crash!

----------------------------------------------------------------------

Comment By: Martin Schr?der (oneiros)
Date: 2007-06-25 23:30

Message:
Logged In: YES 
user_id=421

I can reproduce it, and it obviously shouldn't crash, but
I'm really not shure if it's supposed to work, as the format
of course will not save the picture. You can't do everything
in IniTeX...

----------------------------------------------------------------------

You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=824&group_id=106

From noreply at sarovar.org  Tue Jul  3 19:39:44 2007
From: noreply at sarovar.org (noreply at sarovar.org)
Date: Tue, 03 Jul 2007 23:09:44 +0530
Subject: [NTG-pdftex] [ pdftex-Bugs-747 ] \letterspacefont and
	\pdffontexpand, again
Message-ID: <E1I5mLo-0002lh-00@sarovar.org>

Bugs item #747, was opened at 2007-03-09 03:09
You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=747&group_id=106

Category: hz
Group: v1.40.1
Status: Open
Resolution: Accepted
Priority: 5
Submitted By: Robert (schlcht)
Assigned to: The Thanh Han (hanthethanh)
Summary: \letterspacefont and \pdffontexpand, again

Initial Comment:
When expanding a letterspaced font, the base font will
be expanded, too, resulting in the error `font has been
expanded with different parameters' when the base font
is expanded again:

\letterspacefont\lsfont\font 100
\pdffontexpand\lsfont 20 20 5 autoexpand
\pdffontexpand\font   20 20 5 autoexpand
Z\bye


----------------------------------------------------------------------

>Comment By: Robert (schlcht)
Date: 2007-07-03 17:39

Message:
Logged In: YES 
user_id=2217

Thanks. Letterspacing+expansion works fine now, and
\pdfcopyfont is also useful.

I gather an expanded font cannot be copied again, right?
(Not that I would deem this necessary.) The messages from
the following are a bit weird:

\tracingonline1
\font\f=cmr10
\pdfcopyfont\fA\f
\pdffontexpand\fA 10 10 5 autoexpand
\fA ABC
\pdfcopyfont\fB\fA
\fB ABC
\bye


----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2007-06-30 16:25

Message:
Logged In: YES 
user_id=710

ah, sorry, here it is.

----------------------------------------------------------------------

Comment By: Robert (schlcht)
Date: 2007-06-30 16:12

Message:
Logged In: YES 
user_id=2217

the patch is missing...

----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2007-06-29 15:58

Message:
Logged In: YES 
user_id=710

patch updated again. I have tested it with the following:

\font\f=cmr10
\pdfcopyfont\fA=\f
\letterspacefont\fB=\fA 100
\pdffontexpand\fB 30 30 5 autoexpand
\fB \input tufte.tex

and it seems to work. But the following doesn't:

\letterspacefont\fC=\f 100
\pdfcopyfont\fD=\fC
\pdffontexpand\fD 30 30 5 autoexpand

probably it's possible with some more effort to make the
latter case work too, but it doesn't seem needed.

----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2007-06-29 13:32

Message:
Logged In: YES 
user_id=710

patch deleted. Needs more testing.

----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2007-06-29 09:56

Message:
Logged In: YES 
user_id=710

sorry, I didn't test it carefully enough. Here is another
attempt (tested with the microtype manual).

----------------------------------------------------------------------

Comment By: Martin Schr?der (oneiros)
Date: 2007-06-29 08:52

Message:
Logged In: YES 
user_id=421

Taco, the new_font_type -> real_font_type is from the fix
for bug #722. We need an svn... :-(

----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-06-29 07:22

Message:
Logged In: YES 
user_id=1608

On my (fairly) clean sources, one hunk is rejected because
of this:

else begin
  if pdf_font_type[f] <> new_font_type then
    pdf_warning("font expansion", "font should be expanded
before its first use",
                true, true);
    end;


My pdftex.web uses pdf_font_type[f] = real_font_type in that
test. I fixed the hunk, but I also get a crash on Robert's
test file.

----------------------------------------------------------------------

Comment By: Robert (schlcht)
Date: 2007-06-28 23:17

Message:
Logged In: YES 
user_id=2217

Now this yields a core dump with: 

\pdfadjustspacing2
\pdffontexpand\font 20 20 5 autoexpand
\hsize10em

Lorem ipsum dolor sit amet, 
\bye

(unless I've messed up pdftex.web with all them patches)

----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2007-06-28 20:17

Message:
Logged In: YES 
user_id=710

here is another patch, which introduces \pdfcopyfont. Example:

\letterspacefont\lsfont\font 100
\pdfcopyfont\lsxfont\lsfont
\pdffontexpand\lsxfont 20 20 5 autoexpand

This patch also fixed a bug in expanding local font from
virtual fonts: font shrinking didn't work. Big thanks to
Robert for help with testing.

----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2007-06-28 18:42

Message:
Logged In: YES 
user_id=710

expanding a letterspaced fonts always implies that the base
font is expanded. In other words, it's impossible *not* to
expand the base font when expanding a letterspaced font.

thanks for further testing. It looks like a bug in checking
font expansion spec. fwiw, font stretch limit is always
fixed to [0..1000] and font shrink limit to [0..500]. Thus
giving a negative value has the same effect like giving 0.

I will play with \copyfont to see if it helps.


----------------------------------------------------------------------

Comment By: Robert (schlcht)
Date: 2007-06-28 14:01

Message:
Logged In: YES 
user_id=2217

If we can get rid of the error message, I think it can be
left at that. Mind you, the problem is not how to expand a
letterspaced font but how to *not* expand the base font when
expanding a letterspaced font. That expanding a letterspaced
font results in expansion of the base font
can be documented as a feature, IMO.

Here are some more clues: The error message seems to be
related to the sign of the stretch parameter.
First of all, with

\letterspacefont\lsfont\font 100
\pdffontexpand\lsfont 20 20 5 autoexpand

the base font will be expanded, however it will never be
shrunk. Then,

\letterspacefont\lsfont\font 100
\pdffontexpand\lsfont 20  20 5 autoexpand
\pdffontexpand\font   20 -20 5 autoexpand

doesn't yield an error. Neither does:

\pdffontexpand\lsfont 20 -20 5 autoexpand
\pdffontexpand\font   20 -20 5 autoexpand

However, here comes the error again:

\pdffontexpand\lsfont 20 -20 5 autoexpand
\pdffontexpand\font   20  20 5 autoexpand

If you expand the base font first, it's OK in any case, also
with different signs.


----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-06-28 07:37

Message:
Logged In: YES 
user_id=1608

That sounds nice, I like it.

----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2007-06-28 06:45

Message:
Logged In: YES 
user_id=710

I agree this is an ugly solution, which has its origin in a
design mistake. However the problem here is not only how to
deal with the error message, but the point is how to use
font expansion with a letterspaced font. Please give it a
thought so we can come up with an acceptable workaround. If
we want everything to be clean, there are more things that
have to be thrown away.

what about this: have a primitive \copyfont which creates a
copy of a font. Example:

\letterspacefont\lsfont\font 100
\copyfont\lsxfont\lsfont
\pdffontexpand\lsxfont 20 20 5 autoexpand



----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-06-27 11:43

Message:
Logged In: YES 
user_id=1608


If there is no clean way of solving the problem, I'd rather
just document the error message as a feature. I find
\pdfnewexpandfont very ugly (sorry Thanh).

----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2007-06-24 10:46

Message:
Logged In: YES 
user_id=710

here is a patch that introduces a new primitive
\pdfnewexpandfont. Usage:

\font\f=cmr10
\pdfnewexpandfont\fx \f 20 20 5 autoexpand

Note that \pdfnewexpandfont generates \fx by loading a TFM
corresponding to \f first, then applies font expansion in
the same way like "\pdffontexpand\fx 20 20 5". So when \f is
a font that doesn't have a corresponding TFM (for example,
because it was generated in pdftex memory only), the above
command won't work. In particular, the following doesn't work:

\font\f=cmr10
\letterspacefont\lsfont\f 100
\pdfnewexpandfont\fx \lsfont 20 20 5 autoexpand

since \lsfont doesn't have a corresponding TFM but was
generated by \letterspacefont. To create a
letterspaced+expanded font, one can use:

\font\f=cmr10
\letterspacefont\fx\f 100
\pdffontexpand\fx 20 20 5 autoexpand

things are gettting messy... sorry about that.
Testing/comments welcome.

----------------------------------------------------------------------

Comment By: Robert (schlcht)
Date: 2007-04-01 00:44

Message:
Logged In: YES 
user_id=2217

Fine for me and microtype. 

----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2007-03-31 09:52

Message:
Logged In: YES 
user_id=710

either name is ok with me. We need a new pritimive to load a
new font and expand it, since the current one doesn't load a
new font and hence is making trouble. I would wait for a
while to see how Robert sees it before making any change.

----------------------------------------------------------------------

Comment By: Nobody (None)
Date: 2007-03-19 11:07

Message:
Logged In: NO 

Hello,

I do not think that \pdfexpandfont is a good name for a new 
primitive, as it is too easy to confuse with \pdffontexpand. 
What about \pdfexpandnewfont, as -- if I understand 
correctly -- a new font is loaded?


Jonathan

P.S: Thank you for creating pdfTeX!

----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2007-03-10 20:18

Message:
Logged In: YES 
user_id=710

Phil Taylor has a suggestion that seems great to me:
introduce a new primitive \pdfexpandfont instead. How do you
see it?

----------------------------------------------------------------------

Comment By: Martin Schr?der (oneiros)
Date: 2007-03-10 19:24

Message:
Logged In: YES 
user_id=421

Forget that comment. Of course a change of \pdffontexpand
has to be considered carefully. By you. :-)

----------------------------------------------------------------------

Comment By: Martin Schr?der (oneiros)
Date: 2007-03-10 19:22

Message:
Logged In: YES 
user_id=421

No. It's an undocumented primitive. ;-)

----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2007-03-09 17:28

Message:
Logged In: YES 
user_id=710

sigh. A mistake when implementing the \pdffontexpand
primitive: it should load a new font for expansion, instead
of expanding a loaded font. Too late for change now?

----------------------------------------------------------------------

You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=747&group_id=106

From noreply at sarovar.org  Tue Jul  3 23:21:02 2007
From: noreply at sarovar.org (noreply at sarovar.org)
Date: Wed, 04 Jul 2007 02:51:02 +0530
Subject: [NTG-pdftex] [ pdftex-Bugs-747 ] \letterspacefont and
	\pdffontexpand, again
Message-ID: <E1I5pny-0002pV-00@sarovar.org>

Bugs item #747, was opened at 2007-03-09 03:09
You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=747&group_id=106

Category: hz
Group: v1.40.1
Status: Open
Resolution: Accepted
Priority: 5
Submitted By: Robert (schlcht)
Assigned to: The Thanh Han (hanthethanh)
Summary: \letterspacefont and \pdffontexpand, again

Initial Comment:
When expanding a letterspaced font, the base font will
be expanded, too, resulting in the error `font has been
expanded with different parameters' when the base font
is expanded again:

\letterspacefont\lsfont\font 100
\pdffontexpand\lsfont 20 20 5 autoexpand
\pdffontexpand\font   20 20 5 autoexpand
Z\bye


----------------------------------------------------------------------

>Comment By: The Thanh Han (hanthethanh)
Date: 2007-07-03 21:21

Message:
Logged In: YES 
user_id=710

I didn't consider the situation when an expanded font is
copied. It seems pretty much of work is needed to get it
right, so probably it is easier to disable \pdfcopyfont for
expanded (and letterspaced) fonts.

----------------------------------------------------------------------

Comment By: Robert (schlcht)
Date: 2007-07-03 17:39

Message:
Logged In: YES 
user_id=2217

Thanks. Letterspacing+expansion works fine now, and
\pdfcopyfont is also useful.

I gather an expanded font cannot be copied again, right?
(Not that I would deem this necessary.) The messages from
the following are a bit weird:

\tracingonline1
\font\f=cmr10
\pdfcopyfont\fA\f
\pdffontexpand\fA 10 10 5 autoexpand
\fA ABC
\pdfcopyfont\fB\fA
\fB ABC
\bye


----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2007-06-30 16:25

Message:
Logged In: YES 
user_id=710

ah, sorry, here it is.

----------------------------------------------------------------------

Comment By: Robert (schlcht)
Date: 2007-06-30 16:12

Message:
Logged In: YES 
user_id=2217

the patch is missing...

----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2007-06-29 15:58

Message:
Logged In: YES 
user_id=710

patch updated again. I have tested it with the following:

\font\f=cmr10
\pdfcopyfont\fA=\f
\letterspacefont\fB=\fA 100
\pdffontexpand\fB 30 30 5 autoexpand
\fB \input tufte.tex

and it seems to work. But the following doesn't:

\letterspacefont\fC=\f 100
\pdfcopyfont\fD=\fC
\pdffontexpand\fD 30 30 5 autoexpand

probably it's possible with some more effort to make the
latter case work too, but it doesn't seem needed.

----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2007-06-29 13:32

Message:
Logged In: YES 
user_id=710

patch deleted. Needs more testing.

----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2007-06-29 09:56

Message:
Logged In: YES 
user_id=710

sorry, I didn't test it carefully enough. Here is another
attempt (tested with the microtype manual).

----------------------------------------------------------------------

Comment By: Martin Schr?der (oneiros)
Date: 2007-06-29 08:52

Message:
Logged In: YES 
user_id=421

Taco, the new_font_type -> real_font_type is from the fix
for bug #722. We need an svn... :-(

----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-06-29 07:22

Message:
Logged In: YES 
user_id=1608

On my (fairly) clean sources, one hunk is rejected because
of this:

else begin
  if pdf_font_type[f] <> new_font_type then
    pdf_warning("font expansion", "font should be expanded
before its first use",
                true, true);
    end;


My pdftex.web uses pdf_font_type[f] = real_font_type in that
test. I fixed the hunk, but I also get a crash on Robert's
test file.

----------------------------------------------------------------------

Comment By: Robert (schlcht)
Date: 2007-06-28 23:17

Message:
Logged In: YES 
user_id=2217

Now this yields a core dump with: 

\pdfadjustspacing2
\pdffontexpand\font 20 20 5 autoexpand
\hsize10em

Lorem ipsum dolor sit amet, 
\bye

(unless I've messed up pdftex.web with all them patches)

----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2007-06-28 20:17

Message:
Logged In: YES 
user_id=710

here is another patch, which introduces \pdfcopyfont. Example:

\letterspacefont\lsfont\font 100
\pdfcopyfont\lsxfont\lsfont
\pdffontexpand\lsxfont 20 20 5 autoexpand

This patch also fixed a bug in expanding local font from
virtual fonts: font shrinking didn't work. Big thanks to
Robert for help with testing.

----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2007-06-28 18:42

Message:
Logged In: YES 
user_id=710

expanding a letterspaced fonts always implies that the base
font is expanded. In other words, it's impossible *not* to
expand the base font when expanding a letterspaced font.

thanks for further testing. It looks like a bug in checking
font expansion spec. fwiw, font stretch limit is always
fixed to [0..1000] and font shrink limit to [0..500]. Thus
giving a negative value has the same effect like giving 0.

I will play with \copyfont to see if it helps.


----------------------------------------------------------------------

Comment By: Robert (schlcht)
Date: 2007-06-28 14:01

Message:
Logged In: YES 
user_id=2217

If we can get rid of the error message, I think it can be
left at that. Mind you, the problem is not how to expand a
letterspaced font but how to *not* expand the base font when
expanding a letterspaced font. That expanding a letterspaced
font results in expansion of the base font
can be documented as a feature, IMO.

Here are some more clues: The error message seems to be
related to the sign of the stretch parameter.
First of all, with

\letterspacefont\lsfont\font 100
\pdffontexpand\lsfont 20 20 5 autoexpand

the base font will be expanded, however it will never be
shrunk. Then,

\letterspacefont\lsfont\font 100
\pdffontexpand\lsfont 20  20 5 autoexpand
\pdffontexpand\font   20 -20 5 autoexpand

doesn't yield an error. Neither does:

\pdffontexpand\lsfont 20 -20 5 autoexpand
\pdffontexpand\font   20 -20 5 autoexpand

However, here comes the error again:

\pdffontexpand\lsfont 20 -20 5 autoexpand
\pdffontexpand\font   20  20 5 autoexpand

If you expand the base font first, it's OK in any case, also
with different signs.


----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-06-28 07:37

Message:
Logged In: YES 
user_id=1608

That sounds nice, I like it.

----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2007-06-28 06:45

Message:
Logged In: YES 
user_id=710

I agree this is an ugly solution, which has its origin in a
design mistake. However the problem here is not only how to
deal with the error message, but the point is how to use
font expansion with a letterspaced font. Please give it a
thought so we can come up with an acceptable workaround. If
we want everything to be clean, there are more things that
have to be thrown away.

what about this: have a primitive \copyfont which creates a
copy of a font. Example:

\letterspacefont\lsfont\font 100
\copyfont\lsxfont\lsfont
\pdffontexpand\lsxfont 20 20 5 autoexpand



----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-06-27 11:43

Message:
Logged In: YES 
user_id=1608


If there is no clean way of solving the problem, I'd rather
just document the error message as a feature. I find
\pdfnewexpandfont very ugly (sorry Thanh).

----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2007-06-24 10:46

Message:
Logged In: YES 
user_id=710

here is a patch that introduces a new primitive
\pdfnewexpandfont. Usage:

\font\f=cmr10
\pdfnewexpandfont\fx \f 20 20 5 autoexpand

Note that \pdfnewexpandfont generates \fx by loading a TFM
corresponding to \f first, then applies font expansion in
the same way like "\pdffontexpand\fx 20 20 5". So when \f is
a font that doesn't have a corresponding TFM (for example,
because it was generated in pdftex memory only), the above
command won't work. In particular, the following doesn't work:

\font\f=cmr10
\letterspacefont\lsfont\f 100
\pdfnewexpandfont\fx \lsfont 20 20 5 autoexpand

since \lsfont doesn't have a corresponding TFM but was
generated by \letterspacefont. To create a
letterspaced+expanded font, one can use:

\font\f=cmr10
\letterspacefont\fx\f 100
\pdffontexpand\fx 20 20 5 autoexpand

things are gettting messy... sorry about that.
Testing/comments welcome.

----------------------------------------------------------------------

Comment By: Robert (schlcht)
Date: 2007-04-01 00:44

Message:
Logged In: YES 
user_id=2217

Fine for me and microtype. 

----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2007-03-31 09:52

Message:
Logged In: YES 
user_id=710

either name is ok with me. We need a new pritimive to load a
new font and expand it, since the current one doesn't load a
new font and hence is making trouble. I would wait for a
while to see how Robert sees it before making any change.

----------------------------------------------------------------------

Comment By: Nobody (None)
Date: 2007-03-19 11:07

Message:
Logged In: NO 

Hello,

I do not think that \pdfexpandfont is a good name for a new 
primitive, as it is too easy to confuse with \pdffontexpand. 
What about \pdfexpandnewfont, as -- if I understand 
correctly -- a new font is loaded?


Jonathan

P.S: Thank you for creating pdfTeX!

----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2007-03-10 20:18

Message:
Logged In: YES 
user_id=710

Phil Taylor has a suggestion that seems great to me:
introduce a new primitive \pdfexpandfont instead. How do you
see it?

----------------------------------------------------------------------

Comment By: Martin Schr?der (oneiros)
Date: 2007-03-10 19:24

Message:
Logged In: YES 
user_id=421

Forget that comment. Of course a change of \pdffontexpand
has to be considered carefully. By you. :-)

----------------------------------------------------------------------

Comment By: Martin Schr?der (oneiros)
Date: 2007-03-10 19:22

Message:
Logged In: YES 
user_id=421

No. It's an undocumented primitive. ;-)

----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2007-03-09 17:28

Message:
Logged In: YES 
user_id=710

sigh. A mistake when implementing the \pdffontexpand
primitive: it should load a new font for expansion, instead
of expanding a loaded font. Too late for change now?

----------------------------------------------------------------------

You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=747&group_id=106

From noreply at sarovar.org  Wed Jul  4 10:13:20 2007
From: noreply at sarovar.org (noreply at sarovar.org)
Date: Wed, 04 Jul 2007 13:43:20 +0530
Subject: [NTG-pdftex] [ pdftex-Bugs-747 ] \letterspacefont and
	\pdffontexpand, again
Message-ID: <E1I5zzE-00023K-00@sarovar.org>

Bugs item #747, was opened at 2007-03-09 03:09
You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=747&group_id=106

Category: hz
Group: v1.40.1
Status: Open
Resolution: Accepted
Priority: 5
Submitted By: Robert (schlcht)
Assigned to: The Thanh Han (hanthethanh)
Summary: \letterspacefont and \pdffontexpand, again

Initial Comment:
When expanding a letterspaced font, the base font will
be expanded, too, resulting in the error `font has been
expanded with different parameters' when the base font
is expanded again:

\letterspacefont\lsfont\font 100
\pdffontexpand\lsfont 20 20 5 autoexpand
\pdffontexpand\font   20 20 5 autoexpand
Z\bye


----------------------------------------------------------------------

>Comment By: The Thanh Han (hanthethanh)
Date: 2007-07-04 08:13

Message:
Logged In: YES 
user_id=710

patch updated again. Disable \pdfcopyfont for expanded and
letterspaced fonts.

----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2007-07-03 21:21

Message:
Logged In: YES 
user_id=710

I didn't consider the situation when an expanded font is
copied. It seems pretty much of work is needed to get it
right, so probably it is easier to disable \pdfcopyfont for
expanded (and letterspaced) fonts.

----------------------------------------------------------------------

Comment By: Robert (schlcht)
Date: 2007-07-03 17:39

Message:
Logged In: YES 
user_id=2217

Thanks. Letterspacing+expansion works fine now, and
\pdfcopyfont is also useful.

I gather an expanded font cannot be copied again, right?
(Not that I would deem this necessary.) The messages from
the following are a bit weird:

\tracingonline1
\font\f=cmr10
\pdfcopyfont\fA\f
\pdffontexpand\fA 10 10 5 autoexpand
\fA ABC
\pdfcopyfont\fB\fA
\fB ABC
\bye


----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2007-06-30 16:25

Message:
Logged In: YES 
user_id=710

ah, sorry, here it is.

----------------------------------------------------------------------

Comment By: Robert (schlcht)
Date: 2007-06-30 16:12

Message:
Logged In: YES 
user_id=2217

the patch is missing...

----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2007-06-29 15:58

Message:
Logged In: YES 
user_id=710

patch updated again. I have tested it with the following:

\font\f=cmr10
\pdfcopyfont\fA=\f
\letterspacefont\fB=\fA 100
\pdffontexpand\fB 30 30 5 autoexpand
\fB \input tufte.tex

and it seems to work. But the following doesn't:

\letterspacefont\fC=\f 100
\pdfcopyfont\fD=\fC
\pdffontexpand\fD 30 30 5 autoexpand

probably it's possible with some more effort to make the
latter case work too, but it doesn't seem needed.

----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2007-06-29 13:32

Message:
Logged In: YES 
user_id=710

patch deleted. Needs more testing.

----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2007-06-29 09:56

Message:
Logged In: YES 
user_id=710

sorry, I didn't test it carefully enough. Here is another
attempt (tested with the microtype manual).

----------------------------------------------------------------------

Comment By: Martin Schr?der (oneiros)
Date: 2007-06-29 08:52

Message:
Logged In: YES 
user_id=421

Taco, the new_font_type -> real_font_type is from the fix
for bug #722. We need an svn... :-(

----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-06-29 07:22

Message:
Logged In: YES 
user_id=1608

On my (fairly) clean sources, one hunk is rejected because
of this:

else begin
  if pdf_font_type[f] <> new_font_type then
    pdf_warning("font expansion", "font should be expanded
before its first use",
                true, true);
    end;


My pdftex.web uses pdf_font_type[f] = real_font_type in that
test. I fixed the hunk, but I also get a crash on Robert's
test file.

----------------------------------------------------------------------

Comment By: Robert (schlcht)
Date: 2007-06-28 23:17

Message:
Logged In: YES 
user_id=2217

Now this yields a core dump with: 

\pdfadjustspacing2
\pdffontexpand\font 20 20 5 autoexpand
\hsize10em

Lorem ipsum dolor sit amet, 
\bye

(unless I've messed up pdftex.web with all them patches)

----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2007-06-28 20:17

Message:
Logged In: YES 
user_id=710

here is another patch, which introduces \pdfcopyfont. Example:

\letterspacefont\lsfont\font 100
\pdfcopyfont\lsxfont\lsfont
\pdffontexpand\lsxfont 20 20 5 autoexpand

This patch also fixed a bug in expanding local font from
virtual fonts: font shrinking didn't work. Big thanks to
Robert for help with testing.

----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2007-06-28 18:42

Message:
Logged In: YES 
user_id=710

expanding a letterspaced fonts always implies that the base
font is expanded. In other words, it's impossible *not* to
expand the base font when expanding a letterspaced font.

thanks for further testing. It looks like a bug in checking
font expansion spec. fwiw, font stretch limit is always
fixed to [0..1000] and font shrink limit to [0..500]. Thus
giving a negative value has the same effect like giving 0.

I will play with \copyfont to see if it helps.


----------------------------------------------------------------------

Comment By: Robert (schlcht)
Date: 2007-06-28 14:01

Message:
Logged In: YES 
user_id=2217

If we can get rid of the error message, I think it can be
left at that. Mind you, the problem is not how to expand a
letterspaced font but how to *not* expand the base font when
expanding a letterspaced font. That expanding a letterspaced
font results in expansion of the base font
can be documented as a feature, IMO.

Here are some more clues: The error message seems to be
related to the sign of the stretch parameter.
First of all, with

\letterspacefont\lsfont\font 100
\pdffontexpand\lsfont 20 20 5 autoexpand

the base font will be expanded, however it will never be
shrunk. Then,

\letterspacefont\lsfont\font 100
\pdffontexpand\lsfont 20  20 5 autoexpand
\pdffontexpand\font   20 -20 5 autoexpand

doesn't yield an error. Neither does:

\pdffontexpand\lsfont 20 -20 5 autoexpand
\pdffontexpand\font   20 -20 5 autoexpand

However, here comes the error again:

\pdffontexpand\lsfont 20 -20 5 autoexpand
\pdffontexpand\font   20  20 5 autoexpand

If you expand the base font first, it's OK in any case, also
with different signs.


----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-06-28 07:37

Message:
Logged In: YES 
user_id=1608

That sounds nice, I like it.

----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2007-06-28 06:45

Message:
Logged In: YES 
user_id=710

I agree this is an ugly solution, which has its origin in a
design mistake. However the problem here is not only how to
deal with the error message, but the point is how to use
font expansion with a letterspaced font. Please give it a
thought so we can come up with an acceptable workaround. If
we want everything to be clean, there are more things that
have to be thrown away.

what about this: have a primitive \copyfont which creates a
copy of a font. Example:

\letterspacefont\lsfont\font 100
\copyfont\lsxfont\lsfont
\pdffontexpand\lsxfont 20 20 5 autoexpand



----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-06-27 11:43

Message:
Logged In: YES 
user_id=1608


If there is no clean way of solving the problem, I'd rather
just document the error message as a feature. I find
\pdfnewexpandfont very ugly (sorry Thanh).

----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2007-06-24 10:46

Message:
Logged In: YES 
user_id=710

here is a patch that introduces a new primitive
\pdfnewexpandfont. Usage:

\font\f=cmr10
\pdfnewexpandfont\fx \f 20 20 5 autoexpand

Note that \pdfnewexpandfont generates \fx by loading a TFM
corresponding to \f first, then applies font expansion in
the same way like "\pdffontexpand\fx 20 20 5". So when \f is
a font that doesn't have a corresponding TFM (for example,
because it was generated in pdftex memory only), the above
command won't work. In particular, the following doesn't work:

\font\f=cmr10
\letterspacefont\lsfont\f 100
\pdfnewexpandfont\fx \lsfont 20 20 5 autoexpand

since \lsfont doesn't have a corresponding TFM but was
generated by \letterspacefont. To create a
letterspaced+expanded font, one can use:

\font\f=cmr10
\letterspacefont\fx\f 100
\pdffontexpand\fx 20 20 5 autoexpand

things are gettting messy... sorry about that.
Testing/comments welcome.

----------------------------------------------------------------------

Comment By: Robert (schlcht)
Date: 2007-04-01 00:44

Message:
Logged In: YES 
user_id=2217

Fine for me and microtype. 

----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2007-03-31 09:52

Message:
Logged In: YES 
user_id=710

either name is ok with me. We need a new pritimive to load a
new font and expand it, since the current one doesn't load a
new font and hence is making trouble. I would wait for a
while to see how Robert sees it before making any change.

----------------------------------------------------------------------

Comment By: Nobody (None)
Date: 2007-03-19 11:07

Message:
Logged In: NO 

Hello,

I do not think that \pdfexpandfont is a good name for a new 
primitive, as it is too easy to confuse with \pdffontexpand. 
What about \pdfexpandnewfont, as -- if I understand 
correctly -- a new font is loaded?


Jonathan

P.S: Thank you for creating pdfTeX!

----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2007-03-10 20:18

Message:
Logged In: YES 
user_id=710

Phil Taylor has a suggestion that seems great to me:
introduce a new primitive \pdfexpandfont instead. How do you
see it?

----------------------------------------------------------------------

Comment By: Martin Schr?der (oneiros)
Date: 2007-03-10 19:24

Message:
Logged In: YES 
user_id=421

Forget that comment. Of course a change of \pdffontexpand
has to be considered carefully. By you. :-)

----------------------------------------------------------------------

Comment By: Martin Schr?der (oneiros)
Date: 2007-03-10 19:22

Message:
Logged In: YES 
user_id=421

No. It's an undocumented primitive. ;-)

----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2007-03-09 17:28

Message:
Logged In: YES 
user_id=710

sigh. A mistake when implementing the \pdffontexpand
primitive: it should load a new font for expansion, instead
of expanding a loaded font. Too late for change now?

----------------------------------------------------------------------

You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=747&group_id=106

From noreply at sarovar.org  Wed Jul  4 12:22:28 2007
From: noreply at sarovar.org (noreply at sarovar.org)
Date: Wed, 04 Jul 2007 15:52:28 +0530
Subject: [NTG-pdftex] [ pdftex-Bugs-824 ] Bus error caused by loading an
	image into a format file
Message-ID: <E1I620C-0003Rr-00@sarovar.org>

Bugs item #824, was opened at 2007-06-26 00:22
You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=824&group_id=106

Category: Image inclusion
Group: v1.40.3
Status: Open
Resolution: Accepted
Priority: 5
Submitted By: Robin Houston (robinhouston)
Assigned to: Martin Schr?der (oneiros)
Summary: Bus error caused by loading an image into a format file

Initial Comment:
I have written a tool that speeds up repeated
compilation of a source file, by generating a format
from the preamble of the document, and then using it to
compile the body.

One user reported a crash when using this tool with a
custom letterhead class; the class in question may be
found at
http://www.soe.ucsc.edu/~elm/LaTeX/ucletter.cls (though
note that a simpler demonstration is attached to this
report).

The bug is triggered by the fact that this class loads
an image during the processing of the preamble (i.e.
during the processing of the .ini file) and saves it in
a box. When this box is used, during the compilation of
the body, pdftex crashes.

This does work with ordinary (non-PDF) TeX, so the
problem is specific to PDFTeX.

The attachment contains a simple demonstration of the
problem. Unpack it and run 'make'.


----------------------------------------------------------------------

>Comment By: Taco Hoekwater (taco)
Date: 2007-07-04 12:22

Message:
Logged In: YES 
user_id=1608

You forgot to actually attach the new, final, patch.

----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-07-03 15:33

Message:
Logged In: YES 
user_id=4579

Yes, it's essentially fine (once I apply the patch for 799).
A couple of minor things:

1. I forgot to include pdftex.defines in the diff,
2. One of the comments had become inconsistent with the code;

so I attach a new (final?) patch. (I have also reinstated an
unrelated typo correction -- though perhaps this is already
fixed in your tree, which is why you removed it?)

----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-07-02 18:58

Message:
Logged In: YES 
user_id=1608

Robin,

I have merged those extra variables and heads with your
previous patch. Can you verify that all is still well?

----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-07-02 13:59

Message:
Logged In: YES 
user_id=4579

A small additional improvement:

dump_int(pdf_last_xform);
dump_int(pdf_last_ximage);
dump_int(pdf_last_obj);

...

undump_int(pdf_last_xform);
undump_int(pdf_last_ximage);
undump_int(pdf_last_obj);

(so that \lastximage and friends will work correctly after
loading the format file).

----------------------------------------------------------------------

Comment By: Hartmut Henkel (hhenkel)
Date: 2007-07-02 13:33

Message:
Logged In: YES 
user_id=929

> That's odd. The source I'm working from has
> @d is_obj_written(#) == (obj_offset(#) <> 0)
> Has this been changed recently?

this has been changed by the patch to bug 799, where also
'scheduled' has been introduced.

Regards, Hartmut

----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-07-02 13:21

Message:
Logged In: YES 
user_id=1608

> Has this been changed recently? 

In my (development version) of the source there is a state
'scheduled', that I assume comes from a fix to something
else. In any case, we just have ask Martin to be extra
careful about that line while creating 1.40.4 :-)

It is probably wise do dump the three heads you mentioned,
just in case: I really need the ximage one in my tree, and
dumping the others seems a logical extension. 

Well done to you on finding a way around the regression. 


----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-07-02 13:08

Message:
Logged In: YES 
user_id=4579

That's odd. The source I'm working from has

@d is_obj_written(#) == (obj_offset(#) <> 0)

Has this been changed recently? (Am I right in thinking that
the development version of the source tree is not publicly
available?)

With regard to which linked list headers to dump, we seem to
be reaching the point of making subtle improvements. The
original problem (whatsit nodes in dumped boxes referencing
non-existent objects) is solved without dumping any of the
headers.

One might conceivably want to load images/forms/raw objects
in the .ini, and then reference them from the .tex: this is
addressed by dumping head_tab[obj_type_ximage],
head_tab[obj_type_xform] and head_tab[obj_type_obj].
(Neither forms nor raw objects have any additional
associated metadata, as far as I can tell.)

I can't see any benefit from dumping the other entries,
whether or not doing so would cause potential crashes.

At any rate, what we have now seems a definite improvement
over the status quo, and avoids the undesirable
feature-regression of forbidding \dump after \shipout.

----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-07-02 12:53

Message:
Logged In: YES 
user_id=1608

WRT type image object: 

over here, it is only included twice after I do a small fix
to your patch:
  obj_tab[k].int2 := -1;
this could just be a simple difference between my and your
pdftex source trees, but please re-check. 

I definately have *no* runtime image with obj_tab[k].int2 :=
0, and that is correct/expected, because I can see in the
source that the is_obj_written() test checks for >-1.

The thing with head_tab[obj_type_xform] is why I initially
dumped all of them. The xforms should be safe, but fonts are
definately not ok (not unless whole lot more stuff is dumped
to the format). I don't know about the others heads. It
depends on whether or not the objects need additional data
structures besides obj_tab and pdf_mem, and I am not very
much at home in that section of the pdftex code.





----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-07-02 10:58

Message:
Logged In: YES 
user_id=4579

Taco, do you have an example of the "another problem" that
you mention? I thought I had dealt with that, by not dumping
obj_tab[k].int2 and resetting it to 0, and indeed it seems
to work when I try it.

To be precise about what I tried, I added the lines

%
\pdfrefximage\pdflastximage
\par\vfil\penalty-10000
%

before the \dump command in test-fmt2.tex. Both the
generated PDFs (test-fmt2.pdf and test2.pdf) seem okay.

Incidentally, it's easy to make a test, along the lines of
test2, that requires head_tab[obj_type_xform]. So I guess
that should be dumped too.

----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-07-02 10:34

Message:
Logged In: YES 
user_id=1608

The objects (and their numbers) are saved in the formats as well

----------------------------------------------------------------------

Comment By: Hartmut Henkel (hhenkel)
Date: 2007-07-02 10:30

Message:
Logged In: YES 
user_id=929

how can test2 work anyway? the pdfximage reserves an
absolute object number (not something like an image number),
and \pdflastximage gives this object number. But later in
the real document objects are numbered in the natural way in
ascending order, so how can an image object number fixed
already in the format fit into this sequence?

Regards, Hartmut

----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-07-02 09:11

Message:
Logged In: YES 
user_id=1608

I got an example from Hartmut Henkel that needs
head_tab[pdf_obj_ximage], it is test2 in attached tar. I
tried a quick test and it indeed seems to work ok if I dump
*only* that head_tab entry. 

But, you have to solve another problem as well. If you use
the image in the initex-dumped pdf, then the image wil not
be included in the runtime pdf (its state is 'written').
Somehow this state needs to be reset.

Taco


----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-07-02 09:10

Message:
Logged In: YES 
user_id=1608

I got an example from Hartmut Henkel that needs
head_tab[pdf_obj_ximage], it is test2 in attached tar. I
tried a quick test and it indeed seems to work ok if I dump
*only* that head_tab entry. 

But, you have to solve another problem as well. If you use
the image in the initex-dumped pdf, then the image wil not
be included in the runtime pdf (its state is 'written').
Somehow this state needs to be reset.

Taco


----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-06-30 18:56

Message:
Logged In: YES 
user_id=4579

The attached patch (initex-objects.patch) implements the
suggestions made below, together with a few other
improvements. It incorporates Taco Hoekwater's code, so
should be applied to a clean source tree.

In particular, it reinstates the ability to produce both a
PDF document and a memory dump in the same run. I've tested
it with \pdfxform as well as \pdfximage.

Comments? Counterexamples?

Robin

----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-06-30 14:38

Message:
Logged In: YES 
user_id=4579

Fortunately the "two picture" problem (demonstrated in the
attachment twopic.tar.gz) is trivial to solve: simply dump
and undump the variable pdf_ximage_count.

Presumably the same should be done for pdf_obj_count and
pdf_xform_count. Whether this is sufficient, I have no idea:
none of us have tested forms or raw objects, have we?


----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-06-30 12:08

Message:
Logged In: YES 
user_id=4579

A minor bug in the initex-refximage-dump.patch: the test for
fixed_pdfoutput=1 ought to be fixed_pdfoutput>0, otherwise
it will fail with \pdfoutput=2, say.

Another unrelated problem is that, if you load an image from
the .ini file, and then load and display another image from
the .tex file, the first image will appear where the second
one ought to be. I'll try and find out why this is happening.

(Incidentally, I haven't (yet?) discovered any problems
stemming from not (un)dumping the linked list headers.)

----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-06-29 20:08

Message:
Logged In: YES 
user_id=4579

Argh! Interesting, thanks.

Clearly my understanding of the pdftex code is patchy at
best. That said, what is gained by dumping and restoring the
head_tab? If I remove the parts of your code that dump and
undump the head_tab, then your example works (and mine
continue to work).

Robin

----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-06-29 18:32

Message:
Logged In: YES 
user_id=1608

Try a document that contains items besides a single image.
Many of the auxiliary tables are not dumped, resulting in
assertion failures in the non-ini run.

You don't even need to save or reuse boxes for those
crashes, just make a pair of:

% test.ini
\input plain
\pdfoutput=1
hello
\dump


% test.tex
world!
\end




----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-06-29 17:24

Message:
Logged In: YES 
user_id=4579

PS. I have just attached a new tar file, containing some
simple tests that create PDF from the IniTeX run. They all
appear to work, when my patch is applied.

----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-06-29 17:19

Message:
Logged In: YES 
user_id=4579

I don't think creating a PDF file from the IniTeX run is a
real problem. The attached tiny patch (to be applied on top
of Taco Hoekwater's first patch) seems to make it work.

Am I missing something?

----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-06-29 12:34

Message:
Logged In: YES 
user_id=1608

Here is the promised extra patch. No error is generated,
just a simple warning. Pdftex continues executing as if \end
was given instead.

----------------------------------------------------------------------

Comment By: Nobody (None)
Date: 2007-06-28 22:33

Message:
Logged In: NO 

Hi, the inability to _both_ dump a format _and_ produce
output in the same iniTeX run is probably tolerable as long
as no crashes occur.  I don't know the workings of WhizzyTeX
in detail: it is conceivable that their in-document dump
would be affected.  However, it is unlikely that WhizzyTeX
will indeed require both the output as well as the dump (the
dump may well contain pictures, for example from floats that
are going to be placed later), so there is at least a
reasonable way to tackle this from the macro level (divert
\shipout in the manner of the everyshi.sty package).

At least mylatex.ltx (and consequently preview-latex) should
work fine: \shipout before \begin{document} would be
extremely unusual and would result in strange results, anyway.

David

----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-06-28 21:09

Message:
Logged In: YES 
user_id=1608

Small limitation that I have yet to implement: the ability
to move stuff over from the initex run means that if initex
actually creates a pdf file, dumping a format should be
disallowed, or silently ignored. Attempting to keep track of
two disjunct pdf documents is just too hard for me. 

Note that I do not want to prohibit pdf creation from
initex. Just that you can't create a pdf document _as well
as_ perform a \dump.



----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-06-28 17:01

Message:
Logged In: YES 
user_id=4579

Bravo!

I was ready to embark on this myself, so I'm delighted to be
spared the trouble. It passes all the tests I've tried so far.

----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-06-28 12:57

Message:
Logged In: YES 
user_id=1608

Here is a patch that fixes the problem by dumping and
restoring the image _meta information_ to/from any generated
format. 

The image _data_ is not included (that would be really hard
to do in a portable way), and therefore the undumping
routines have to redo most of the work of \pdfximage, but
this is transparent to the user except that the tests
for \pdfminorversion and \pdfinclusionerrorlevel tests are
re-done.

The patch also saves some pdftex arrays that are needed to
rediscover the object. This could eventually be extended to
 make sure \refxform et al work as well. As of now, that is
untested due to lack of example.

Comments and testing welcome, as always.



----------------------------------------------------------------------

Comment By: Martin Schr?der (oneiros)
Date: 2007-06-26 23:01

Message:
Logged In: YES 
user_id=421

Sorry, pdf things work different then dvi, so we can not
make \pdfximage etc. in ini mode without a lot of work; we
will probably disable a bunch of primitives.

----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-06-26 15:49

Message:
Logged In: YES 
user_id=4579

Simplifying the example by eliminating the graphics package:

==> foo.ini <==
\documentclass{minimal}

\newbox\picbox
\pdfximage{pic.pdf}
\setbox\picbox\hbox{\pdfrefximage\pdflastximage}

\dump

==> foo.tex <==
\begin{document}
        \box\picbox
\end{document}


Also, I see now that my comparison with dvi-mode is indeed a
false one, because the mechanisms are quite different, and
the DVI graphics driver only has to include a \special,
rather than the graphic itself.

A simple solution, I suppose, would be to make \pdfrefximage
(and, presumably, the other \pdfrefx commands) invalid in
IniTeX mode. Perhaps this is too brutal, since it forbids
certain harmless activities such as finding the dimensions
of an image from an .ini file; and of course I would be
delighted if it were made to work instead.


----------------------------------------------------------------------

Comment By: Reinhard Kotucha (reinhard)
Date: 2007-06-26 01:26

Message:
Logged In: YES 
user_id=4195

Martin,
you probably can't do everything in a format file.  However,
it would be nice to be able to put graphics to a format file
at least.  Suppose that a web server has to generate PDF
files on-the-fly, each contains a company logo.  The best
place place for the logo is the format file if speed
matters.  It would be nice if there are no restrictions.

Regards,
  Reinhard



----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-06-26 00:42

Message:
Logged In: YES 
user_id=4579

I'm impressed by the speed of your response! Thanks.

If you replace the PDF image by an EPS file, and use
-output-format dvi, then it does work. That suggests to me
that the problem is not fundamentally caused by a limitation
of IniTeX. But I don't know enough about the inner workings
of the \includegraphics command to be sure about that.
(Perhaps PDF graphics are handled in a sufficiently
different way for this to be a false comparison?)

In any case, as you say, it shouldn't crash!

----------------------------------------------------------------------

Comment By: Martin Schr?der (oneiros)
Date: 2007-06-26 00:30

Message:
Logged In: YES 
user_id=421

I can reproduce it, and it obviously shouldn't crash, but
I'm really not shure if it's supposed to work, as the format
of course will not save the picture. You can't do everything
in IniTeX...

----------------------------------------------------------------------

You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=824&group_id=106

From noreply at sarovar.org  Wed Jul  4 12:27:33 2007
From: noreply at sarovar.org (noreply at sarovar.org)
Date: Wed, 04 Jul 2007 15:57:33 +0530
Subject: [NTG-pdftex] [ pdftex-Bugs-824 ] Bus error caused by loading an
	image into a format file
Message-ID: <E1I6257-0004s1-00@sarovar.org>

Bugs item #824, was opened at 2007-06-25 23:22
You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=824&group_id=106

Category: Image inclusion
Group: v1.40.3
Status: Open
Resolution: Accepted
Priority: 5
Submitted By: Robin Houston (robinhouston)
Assigned to: Martin Schr?der (oneiros)
Summary: Bus error caused by loading an image into a format file

Initial Comment:
I have written a tool that speeds up repeated
compilation of a source file, by generating a format
from the preamble of the document, and then using it to
compile the body.

One user reported a crash when using this tool with a
custom letterhead class; the class in question may be
found at
http://www.soe.ucsc.edu/~elm/LaTeX/ucletter.cls (though
note that a simpler demonstration is attached to this
report).

The bug is triggered by the fact that this class loads
an image during the processing of the preamble (i.e.
during the processing of the .ini file) and saves it in
a box. When this box is used, during the compilation of
the body, pdftex crashes.

This does work with ordinary (non-PDF) TeX, so the
problem is specific to PDFTeX.

The attachment contains a simple demonstration of the
problem. Unpack it and run 'make'.


----------------------------------------------------------------------

>Comment By: Robin Houston (robinhouston)
Date: 2007-07-04 11:27

Message:
Logged In: YES 
user_id=4579

I could have sworn I did attach it. Perhaps I forgot to tick
the box? Sorry! It's there now.

Thank you so much for all the work you've put into this.

----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-07-04 11:22

Message:
Logged In: YES 
user_id=1608

You forgot to actually attach the new, final, patch.

----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-07-03 14:33

Message:
Logged In: YES 
user_id=4579

Yes, it's essentially fine (once I apply the patch for 799).
A couple of minor things:

1. I forgot to include pdftex.defines in the diff,
2. One of the comments had become inconsistent with the code;

so I attach a new (final?) patch. (I have also reinstated an
unrelated typo correction -- though perhaps this is already
fixed in your tree, which is why you removed it?)

----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-07-02 17:58

Message:
Logged In: YES 
user_id=1608

Robin,

I have merged those extra variables and heads with your
previous patch. Can you verify that all is still well?

----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-07-02 12:59

Message:
Logged In: YES 
user_id=4579

A small additional improvement:

dump_int(pdf_last_xform);
dump_int(pdf_last_ximage);
dump_int(pdf_last_obj);

...

undump_int(pdf_last_xform);
undump_int(pdf_last_ximage);
undump_int(pdf_last_obj);

(so that \lastximage and friends will work correctly after
loading the format file).

----------------------------------------------------------------------

Comment By: Hartmut Henkel (hhenkel)
Date: 2007-07-02 12:33

Message:
Logged In: YES 
user_id=929

> That's odd. The source I'm working from has
> @d is_obj_written(#) == (obj_offset(#) <> 0)
> Has this been changed recently?

this has been changed by the patch to bug 799, where also
'scheduled' has been introduced.

Regards, Hartmut

----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-07-02 12:21

Message:
Logged In: YES 
user_id=1608

> Has this been changed recently? 

In my (development version) of the source there is a state
'scheduled', that I assume comes from a fix to something
else. In any case, we just have ask Martin to be extra
careful about that line while creating 1.40.4 :-)

It is probably wise do dump the three heads you mentioned,
just in case: I really need the ximage one in my tree, and
dumping the others seems a logical extension. 

Well done to you on finding a way around the regression. 


----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-07-02 12:08

Message:
Logged In: YES 
user_id=4579

That's odd. The source I'm working from has

@d is_obj_written(#) == (obj_offset(#) <> 0)

Has this been changed recently? (Am I right in thinking that
the development version of the source tree is not publicly
available?)

With regard to which linked list headers to dump, we seem to
be reaching the point of making subtle improvements. The
original problem (whatsit nodes in dumped boxes referencing
non-existent objects) is solved without dumping any of the
headers.

One might conceivably want to load images/forms/raw objects
in the .ini, and then reference them from the .tex: this is
addressed by dumping head_tab[obj_type_ximage],
head_tab[obj_type_xform] and head_tab[obj_type_obj].
(Neither forms nor raw objects have any additional
associated metadata, as far as I can tell.)

I can't see any benefit from dumping the other entries,
whether or not doing so would cause potential crashes.

At any rate, what we have now seems a definite improvement
over the status quo, and avoids the undesirable
feature-regression of forbidding \dump after \shipout.

----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-07-02 11:53

Message:
Logged In: YES 
user_id=1608

WRT type image object: 

over here, it is only included twice after I do a small fix
to your patch:
  obj_tab[k].int2 := -1;
this could just be a simple difference between my and your
pdftex source trees, but please re-check. 

I definately have *no* runtime image with obj_tab[k].int2 :=
0, and that is correct/expected, because I can see in the
source that the is_obj_written() test checks for >-1.

The thing with head_tab[obj_type_xform] is why I initially
dumped all of them. The xforms should be safe, but fonts are
definately not ok (not unless whole lot more stuff is dumped
to the format). I don't know about the others heads. It
depends on whether or not the objects need additional data
structures besides obj_tab and pdf_mem, and I am not very
much at home in that section of the pdftex code.





----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-07-02 09:58

Message:
Logged In: YES 
user_id=4579

Taco, do you have an example of the "another problem" that
you mention? I thought I had dealt with that, by not dumping
obj_tab[k].int2 and resetting it to 0, and indeed it seems
to work when I try it.

To be precise about what I tried, I added the lines

%
\pdfrefximage\pdflastximage
\par\vfil\penalty-10000
%

before the \dump command in test-fmt2.tex. Both the
generated PDFs (test-fmt2.pdf and test2.pdf) seem okay.

Incidentally, it's easy to make a test, along the lines of
test2, that requires head_tab[obj_type_xform]. So I guess
that should be dumped too.

----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-07-02 09:34

Message:
Logged In: YES 
user_id=1608

The objects (and their numbers) are saved in the formats as well

----------------------------------------------------------------------

Comment By: Hartmut Henkel (hhenkel)
Date: 2007-07-02 09:30

Message:
Logged In: YES 
user_id=929

how can test2 work anyway? the pdfximage reserves an
absolute object number (not something like an image number),
and \pdflastximage gives this object number. But later in
the real document objects are numbered in the natural way in
ascending order, so how can an image object number fixed
already in the format fit into this sequence?

Regards, Hartmut

----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-07-02 08:11

Message:
Logged In: YES 
user_id=1608

I got an example from Hartmut Henkel that needs
head_tab[pdf_obj_ximage], it is test2 in attached tar. I
tried a quick test and it indeed seems to work ok if I dump
*only* that head_tab entry. 

But, you have to solve another problem as well. If you use
the image in the initex-dumped pdf, then the image wil not
be included in the runtime pdf (its state is 'written').
Somehow this state needs to be reset.

Taco


----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-07-02 08:10

Message:
Logged In: YES 
user_id=1608

I got an example from Hartmut Henkel that needs
head_tab[pdf_obj_ximage], it is test2 in attached tar. I
tried a quick test and it indeed seems to work ok if I dump
*only* that head_tab entry. 

But, you have to solve another problem as well. If you use
the image in the initex-dumped pdf, then the image wil not
be included in the runtime pdf (its state is 'written').
Somehow this state needs to be reset.

Taco


----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-06-30 17:56

Message:
Logged In: YES 
user_id=4579

The attached patch (initex-objects.patch) implements the
suggestions made below, together with a few other
improvements. It incorporates Taco Hoekwater's code, so
should be applied to a clean source tree.

In particular, it reinstates the ability to produce both a
PDF document and a memory dump in the same run. I've tested
it with \pdfxform as well as \pdfximage.

Comments? Counterexamples?

Robin

----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-06-30 13:38

Message:
Logged In: YES 
user_id=4579

Fortunately the "two picture" problem (demonstrated in the
attachment twopic.tar.gz) is trivial to solve: simply dump
and undump the variable pdf_ximage_count.

Presumably the same should be done for pdf_obj_count and
pdf_xform_count. Whether this is sufficient, I have no idea:
none of us have tested forms or raw objects, have we?


----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-06-30 11:08

Message:
Logged In: YES 
user_id=4579

A minor bug in the initex-refximage-dump.patch: the test for
fixed_pdfoutput=1 ought to be fixed_pdfoutput>0, otherwise
it will fail with \pdfoutput=2, say.

Another unrelated problem is that, if you load an image from
the .ini file, and then load and display another image from
the .tex file, the first image will appear where the second
one ought to be. I'll try and find out why this is happening.

(Incidentally, I haven't (yet?) discovered any problems
stemming from not (un)dumping the linked list headers.)

----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-06-29 19:08

Message:
Logged In: YES 
user_id=4579

Argh! Interesting, thanks.

Clearly my understanding of the pdftex code is patchy at
best. That said, what is gained by dumping and restoring the
head_tab? If I remove the parts of your code that dump and
undump the head_tab, then your example works (and mine
continue to work).

Robin

----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-06-29 17:32

Message:
Logged In: YES 
user_id=1608

Try a document that contains items besides a single image.
Many of the auxiliary tables are not dumped, resulting in
assertion failures in the non-ini run.

You don't even need to save or reuse boxes for those
crashes, just make a pair of:

% test.ini
\input plain
\pdfoutput=1
hello
\dump


% test.tex
world!
\end




----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-06-29 16:24

Message:
Logged In: YES 
user_id=4579

PS. I have just attached a new tar file, containing some
simple tests that create PDF from the IniTeX run. They all
appear to work, when my patch is applied.

----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-06-29 16:19

Message:
Logged In: YES 
user_id=4579

I don't think creating a PDF file from the IniTeX run is a
real problem. The attached tiny patch (to be applied on top
of Taco Hoekwater's first patch) seems to make it work.

Am I missing something?

----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-06-29 11:34

Message:
Logged In: YES 
user_id=1608

Here is the promised extra patch. No error is generated,
just a simple warning. Pdftex continues executing as if \end
was given instead.

----------------------------------------------------------------------

Comment By: Nobody (None)
Date: 2007-06-28 21:33

Message:
Logged In: NO 

Hi, the inability to _both_ dump a format _and_ produce
output in the same iniTeX run is probably tolerable as long
as no crashes occur.  I don't know the workings of WhizzyTeX
in detail: it is conceivable that their in-document dump
would be affected.  However, it is unlikely that WhizzyTeX
will indeed require both the output as well as the dump (the
dump may well contain pictures, for example from floats that
are going to be placed later), so there is at least a
reasonable way to tackle this from the macro level (divert
\shipout in the manner of the everyshi.sty package).

At least mylatex.ltx (and consequently preview-latex) should
work fine: \shipout before \begin{document} would be
extremely unusual and would result in strange results, anyway.

David

----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-06-28 20:09

Message:
Logged In: YES 
user_id=1608

Small limitation that I have yet to implement: the ability
to move stuff over from the initex run means that if initex
actually creates a pdf file, dumping a format should be
disallowed, or silently ignored. Attempting to keep track of
two disjunct pdf documents is just too hard for me. 

Note that I do not want to prohibit pdf creation from
initex. Just that you can't create a pdf document _as well
as_ perform a \dump.



----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-06-28 16:01

Message:
Logged In: YES 
user_id=4579

Bravo!

I was ready to embark on this myself, so I'm delighted to be
spared the trouble. It passes all the tests I've tried so far.

----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-06-28 11:57

Message:
Logged In: YES 
user_id=1608

Here is a patch that fixes the problem by dumping and
restoring the image _meta information_ to/from any generated
format. 

The image _data_ is not included (that would be really hard
to do in a portable way), and therefore the undumping
routines have to redo most of the work of \pdfximage, but
this is transparent to the user except that the tests
for \pdfminorversion and \pdfinclusionerrorlevel tests are
re-done.

The patch also saves some pdftex arrays that are needed to
rediscover the object. This could eventually be extended to
 make sure \refxform et al work as well. As of now, that is
untested due to lack of example.

Comments and testing welcome, as always.



----------------------------------------------------------------------

Comment By: Martin Schr?der (oneiros)
Date: 2007-06-26 22:01

Message:
Logged In: YES 
user_id=421

Sorry, pdf things work different then dvi, so we can not
make \pdfximage etc. in ini mode without a lot of work; we
will probably disable a bunch of primitives.

----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-06-26 14:49

Message:
Logged In: YES 
user_id=4579

Simplifying the example by eliminating the graphics package:

==> foo.ini <==
\documentclass{minimal}

\newbox\picbox
\pdfximage{pic.pdf}
\setbox\picbox\hbox{\pdfrefximage\pdflastximage}

\dump

==> foo.tex <==
\begin{document}
        \box\picbox
\end{document}


Also, I see now that my comparison with dvi-mode is indeed a
false one, because the mechanisms are quite different, and
the DVI graphics driver only has to include a \special,
rather than the graphic itself.

A simple solution, I suppose, would be to make \pdfrefximage
(and, presumably, the other \pdfrefx commands) invalid in
IniTeX mode. Perhaps this is too brutal, since it forbids
certain harmless activities such as finding the dimensions
of an image from an .ini file; and of course I would be
delighted if it were made to work instead.


----------------------------------------------------------------------

Comment By: Reinhard Kotucha (reinhard)
Date: 2007-06-26 00:26

Message:
Logged In: YES 
user_id=4195

Martin,
you probably can't do everything in a format file.  However,
it would be nice to be able to put graphics to a format file
at least.  Suppose that a web server has to generate PDF
files on-the-fly, each contains a company logo.  The best
place place for the logo is the format file if speed
matters.  It would be nice if there are no restrictions.

Regards,
  Reinhard



----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-06-25 23:42

Message:
Logged In: YES 
user_id=4579

I'm impressed by the speed of your response! Thanks.

If you replace the PDF image by an EPS file, and use
-output-format dvi, then it does work. That suggests to me
that the problem is not fundamentally caused by a limitation
of IniTeX. But I don't know enough about the inner workings
of the \includegraphics command to be sure about that.
(Perhaps PDF graphics are handled in a sufficiently
different way for this to be a false comparison?)

In any case, as you say, it shouldn't crash!

----------------------------------------------------------------------

Comment By: Martin Schr?der (oneiros)
Date: 2007-06-25 23:30

Message:
Logged In: YES 
user_id=421

I can reproduce it, and it obviously shouldn't crash, but
I'm really not shure if it's supposed to work, as the format
of course will not save the picture. You can't do everything
in IniTeX...

----------------------------------------------------------------------

You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=824&group_id=106

From noreply at sarovar.org  Wed Jul  4 12:49:24 2007
From: noreply at sarovar.org (noreply at sarovar.org)
Date: Wed, 04 Jul 2007 16:19:24 +0530
Subject: [NTG-pdftex] [ pdftex-Bugs-829 ] TEX_HUSH not handled correctly
Message-ID: <E1I62QG-0007n9-00@sarovar.org>

Bugs item #829, was opened at 2007-07-04 12:49
You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=829&group_id=106

Category: web2c
Group: v1.40.3
Status: Open
Resolution: None
Priority: 1
Submitted By: Martin Schr?der (oneiros)
Assigned to: Martin Schr?der (oneiros)
Summary: TEX_HUSH not handled correctly

Initial Comment:
This is from kpathsea.info:
---------------------------
4.4 Suppressing warnings
========================

Kpathsea provides a way to suppress selected
usually-harmless warnings;
this is useful at large sites where most users are not
administrators,
and thus the warnings are merely a source of confusion,
not a help.  To
do this, you set the environment variable or
configuration file value
`TEX_HUSH' to a colon-separated list of values.  Here
are the
possibilities:

`all'
     Suppress everything possible.

`checksum'
     Suppress mismatched font checksum warnings.

`lostchar'
     Suppress warnings when a character is missing from
a font that a
     DVI or VF file tries to typeset.

`none'
     Don't suppress any warnings.

`readable'
     Suppress warnings about attempts to access a file
whose permissions
     render it unreadable.

`special'
     Suppresses warnings about an unimplemented or
unparsable
     `\special' command.

`tex-hush.c' defines the function that checks the
variable value.  Each
driver implements its own checks where appropriate.
---------------------------
This is currently not handled by pdftex.

----------------------------------------------------------------------

You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=829&group_id=106

From noreply at sarovar.org  Wed Jul  4 12:56:37 2007
From: noreply at sarovar.org (noreply at sarovar.org)
Date: Wed, 04 Jul 2007 16:26:37 +0530
Subject: [NTG-pdftex] [ pdftex-Bugs-829 ] TEX_HUSH not handled correctly
Message-ID: <E1I62XF-0000oA-00@sarovar.org>

Bugs item #829, was opened at 2007-07-04 12:49
You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=829&group_id=106

Category: web2c
Group: v1.40.3
Status: Open
Resolution: None
Priority: 1
Submitted By: Martin Schr?der (oneiros)
Assigned to: Martin Schr?der (oneiros)
Summary: TEX_HUSH not handled correctly

Initial Comment:
This is from kpathsea.info:
---------------------------
4.4 Suppressing warnings
========================

Kpathsea provides a way to suppress selected
usually-harmless warnings;
this is useful at large sites where most users are not
administrators,
and thus the warnings are merely a source of confusion,
not a help.  To
do this, you set the environment variable or
configuration file value
`TEX_HUSH' to a colon-separated list of values.  Here
are the
possibilities:

`all'
     Suppress everything possible.

`checksum'
     Suppress mismatched font checksum warnings.

`lostchar'
     Suppress warnings when a character is missing from
a font that a
     DVI or VF file tries to typeset.

`none'
     Don't suppress any warnings.

`readable'
     Suppress warnings about attempts to access a file
whose permissions
     render it unreadable.

`special'
     Suppresses warnings about an unimplemented or
unparsable
     `\special' command.

`tex-hush.c' defines the function that checks the
variable value.  Each
driver implements its own checks where appropriate.
---------------------------
This is currently not handled by pdftex.

----------------------------------------------------------------------

>Comment By: Taco Hoekwater (taco)
Date: 2007-07-04 12:56

Message:
Logged In: YES 
user_id=1608

This only affects the backend driver, right? But not Knuth's
warnings in the web source.

----------------------------------------------------------------------

You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=829&group_id=106

From noreply at sarovar.org  Wed Jul  4 12:55:18 2007
From: noreply at sarovar.org (noreply at sarovar.org)
Date: Wed, 04 Jul 2007 16:25:18 +0530
Subject: [NTG-pdftex] [ pdftex-Bugs-824 ] Bus error caused by loading an
	image into a format file
Message-ID: <E1I62Vy-0000nh-00@sarovar.org>

Bugs item #824, was opened at 2007-06-26 00:22
You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=824&group_id=106

Category: Image inclusion
Group: v1.40.3
Status: Open
Resolution: Accepted
Priority: 5
Submitted By: Robin Houston (robinhouston)
Assigned to: Martin Schr?der (oneiros)
Summary: Bus error caused by loading an image into a format file

Initial Comment:
I have written a tool that speeds up repeated
compilation of a source file, by generating a format
from the preamble of the document, and then using it to
compile the body.

One user reported a crash when using this tool with a
custom letterhead class; the class in question may be
found at
http://www.soe.ucsc.edu/~elm/LaTeX/ucletter.cls (though
note that a simpler demonstration is attached to this
report).

The bug is triggered by the fact that this class loads
an image during the processing of the preamble (i.e.
during the processing of the .ini file) and saves it in
a box. When this box is used, during the compilation of
the body, pdftex crashes.

This does work with ordinary (non-PDF) TeX, so the
problem is specific to PDFTeX.

The attachment contains a simple demonstration of the
problem. Unpack it and run 'make'.


----------------------------------------------------------------------

>Comment By: Taco Hoekwater (taco)
Date: 2007-07-04 12:55

Message:
Logged In: YES 
user_id=1608

You forgot to actually attach the new, final, patch.

----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-07-04 12:27

Message:
Logged In: YES 
user_id=4579

I could have sworn I did attach it. Perhaps I forgot to tick
the box? Sorry! It's there now.

Thank you so much for all the work you've put into this.

----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-07-04 12:22

Message:
Logged In: YES 
user_id=1608

You forgot to actually attach the new, final, patch.

----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-07-03 15:33

Message:
Logged In: YES 
user_id=4579

Yes, it's essentially fine (once I apply the patch for 799).
A couple of minor things:

1. I forgot to include pdftex.defines in the diff,
2. One of the comments had become inconsistent with the code;

so I attach a new (final?) patch. (I have also reinstated an
unrelated typo correction -- though perhaps this is already
fixed in your tree, which is why you removed it?)

----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-07-02 18:58

Message:
Logged In: YES 
user_id=1608

Robin,

I have merged those extra variables and heads with your
previous patch. Can you verify that all is still well?

----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-07-02 13:59

Message:
Logged In: YES 
user_id=4579

A small additional improvement:

dump_int(pdf_last_xform);
dump_int(pdf_last_ximage);
dump_int(pdf_last_obj);

...

undump_int(pdf_last_xform);
undump_int(pdf_last_ximage);
undump_int(pdf_last_obj);

(so that \lastximage and friends will work correctly after
loading the format file).

----------------------------------------------------------------------

Comment By: Hartmut Henkel (hhenkel)
Date: 2007-07-02 13:33

Message:
Logged In: YES 
user_id=929

> That's odd. The source I'm working from has
> @d is_obj_written(#) == (obj_offset(#) <> 0)
> Has this been changed recently?

this has been changed by the patch to bug 799, where also
'scheduled' has been introduced.

Regards, Hartmut

----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-07-02 13:21

Message:
Logged In: YES 
user_id=1608

> Has this been changed recently? 

In my (development version) of the source there is a state
'scheduled', that I assume comes from a fix to something
else. In any case, we just have ask Martin to be extra
careful about that line while creating 1.40.4 :-)

It is probably wise do dump the three heads you mentioned,
just in case: I really need the ximage one in my tree, and
dumping the others seems a logical extension. 

Well done to you on finding a way around the regression. 


----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-07-02 13:08

Message:
Logged In: YES 
user_id=4579

That's odd. The source I'm working from has

@d is_obj_written(#) == (obj_offset(#) <> 0)

Has this been changed recently? (Am I right in thinking that
the development version of the source tree is not publicly
available?)

With regard to which linked list headers to dump, we seem to
be reaching the point of making subtle improvements. The
original problem (whatsit nodes in dumped boxes referencing
non-existent objects) is solved without dumping any of the
headers.

One might conceivably want to load images/forms/raw objects
in the .ini, and then reference them from the .tex: this is
addressed by dumping head_tab[obj_type_ximage],
head_tab[obj_type_xform] and head_tab[obj_type_obj].
(Neither forms nor raw objects have any additional
associated metadata, as far as I can tell.)

I can't see any benefit from dumping the other entries,
whether or not doing so would cause potential crashes.

At any rate, what we have now seems a definite improvement
over the status quo, and avoids the undesirable
feature-regression of forbidding \dump after \shipout.

----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-07-02 12:53

Message:
Logged In: YES 
user_id=1608

WRT type image object: 

over here, it is only included twice after I do a small fix
to your patch:
  obj_tab[k].int2 := -1;
this could just be a simple difference between my and your
pdftex source trees, but please re-check. 

I definately have *no* runtime image with obj_tab[k].int2 :=
0, and that is correct/expected, because I can see in the
source that the is_obj_written() test checks for >-1.

The thing with head_tab[obj_type_xform] is why I initially
dumped all of them. The xforms should be safe, but fonts are
definately not ok (not unless whole lot more stuff is dumped
to the format). I don't know about the others heads. It
depends on whether or not the objects need additional data
structures besides obj_tab and pdf_mem, and I am not very
much at home in that section of the pdftex code.





----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-07-02 10:58

Message:
Logged In: YES 
user_id=4579

Taco, do you have an example of the "another problem" that
you mention? I thought I had dealt with that, by not dumping
obj_tab[k].int2 and resetting it to 0, and indeed it seems
to work when I try it.

To be precise about what I tried, I added the lines

%
\pdfrefximage\pdflastximage
\par\vfil\penalty-10000
%

before the \dump command in test-fmt2.tex. Both the
generated PDFs (test-fmt2.pdf and test2.pdf) seem okay.

Incidentally, it's easy to make a test, along the lines of
test2, that requires head_tab[obj_type_xform]. So I guess
that should be dumped too.

----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-07-02 10:34

Message:
Logged In: YES 
user_id=1608

The objects (and their numbers) are saved in the formats as well

----------------------------------------------------------------------

Comment By: Hartmut Henkel (hhenkel)
Date: 2007-07-02 10:30

Message:
Logged In: YES 
user_id=929

how can test2 work anyway? the pdfximage reserves an
absolute object number (not something like an image number),
and \pdflastximage gives this object number. But later in
the real document objects are numbered in the natural way in
ascending order, so how can an image object number fixed
already in the format fit into this sequence?

Regards, Hartmut

----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-07-02 09:11

Message:
Logged In: YES 
user_id=1608

I got an example from Hartmut Henkel that needs
head_tab[pdf_obj_ximage], it is test2 in attached tar. I
tried a quick test and it indeed seems to work ok if I dump
*only* that head_tab entry. 

But, you have to solve another problem as well. If you use
the image in the initex-dumped pdf, then the image wil not
be included in the runtime pdf (its state is 'written').
Somehow this state needs to be reset.

Taco


----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-07-02 09:10

Message:
Logged In: YES 
user_id=1608

I got an example from Hartmut Henkel that needs
head_tab[pdf_obj_ximage], it is test2 in attached tar. I
tried a quick test and it indeed seems to work ok if I dump
*only* that head_tab entry. 

But, you have to solve another problem as well. If you use
the image in the initex-dumped pdf, then the image wil not
be included in the runtime pdf (its state is 'written').
Somehow this state needs to be reset.

Taco


----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-06-30 18:56

Message:
Logged In: YES 
user_id=4579

The attached patch (initex-objects.patch) implements the
suggestions made below, together with a few other
improvements. It incorporates Taco Hoekwater's code, so
should be applied to a clean source tree.

In particular, it reinstates the ability to produce both a
PDF document and a memory dump in the same run. I've tested
it with \pdfxform as well as \pdfximage.

Comments? Counterexamples?

Robin

----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-06-30 14:38

Message:
Logged In: YES 
user_id=4579

Fortunately the "two picture" problem (demonstrated in the
attachment twopic.tar.gz) is trivial to solve: simply dump
and undump the variable pdf_ximage_count.

Presumably the same should be done for pdf_obj_count and
pdf_xform_count. Whether this is sufficient, I have no idea:
none of us have tested forms or raw objects, have we?


----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-06-30 12:08

Message:
Logged In: YES 
user_id=4579

A minor bug in the initex-refximage-dump.patch: the test for
fixed_pdfoutput=1 ought to be fixed_pdfoutput>0, otherwise
it will fail with \pdfoutput=2, say.

Another unrelated problem is that, if you load an image from
the .ini file, and then load and display another image from
the .tex file, the first image will appear where the second
one ought to be. I'll try and find out why this is happening.

(Incidentally, I haven't (yet?) discovered any problems
stemming from not (un)dumping the linked list headers.)

----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-06-29 20:08

Message:
Logged In: YES 
user_id=4579

Argh! Interesting, thanks.

Clearly my understanding of the pdftex code is patchy at
best. That said, what is gained by dumping and restoring the
head_tab? If I remove the parts of your code that dump and
undump the head_tab, then your example works (and mine
continue to work).

Robin

----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-06-29 18:32

Message:
Logged In: YES 
user_id=1608

Try a document that contains items besides a single image.
Many of the auxiliary tables are not dumped, resulting in
assertion failures in the non-ini run.

You don't even need to save or reuse boxes for those
crashes, just make a pair of:

% test.ini
\input plain
\pdfoutput=1
hello
\dump


% test.tex
world!
\end




----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-06-29 17:24

Message:
Logged In: YES 
user_id=4579

PS. I have just attached a new tar file, containing some
simple tests that create PDF from the IniTeX run. They all
appear to work, when my patch is applied.

----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-06-29 17:19

Message:
Logged In: YES 
user_id=4579

I don't think creating a PDF file from the IniTeX run is a
real problem. The attached tiny patch (to be applied on top
of Taco Hoekwater's first patch) seems to make it work.

Am I missing something?

----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-06-29 12:34

Message:
Logged In: YES 
user_id=1608

Here is the promised extra patch. No error is generated,
just a simple warning. Pdftex continues executing as if \end
was given instead.

----------------------------------------------------------------------

Comment By: Nobody (None)
Date: 2007-06-28 22:33

Message:
Logged In: NO 

Hi, the inability to _both_ dump a format _and_ produce
output in the same iniTeX run is probably tolerable as long
as no crashes occur.  I don't know the workings of WhizzyTeX
in detail: it is conceivable that their in-document dump
would be affected.  However, it is unlikely that WhizzyTeX
will indeed require both the output as well as the dump (the
dump may well contain pictures, for example from floats that
are going to be placed later), so there is at least a
reasonable way to tackle this from the macro level (divert
\shipout in the manner of the everyshi.sty package).

At least mylatex.ltx (and consequently preview-latex) should
work fine: \shipout before \begin{document} would be
extremely unusual and would result in strange results, anyway.

David

----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-06-28 21:09

Message:
Logged In: YES 
user_id=1608

Small limitation that I have yet to implement: the ability
to move stuff over from the initex run means that if initex
actually creates a pdf file, dumping a format should be
disallowed, or silently ignored. Attempting to keep track of
two disjunct pdf documents is just too hard for me. 

Note that I do not want to prohibit pdf creation from
initex. Just that you can't create a pdf document _as well
as_ perform a \dump.



----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-06-28 17:01

Message:
Logged In: YES 
user_id=4579

Bravo!

I was ready to embark on this myself, so I'm delighted to be
spared the trouble. It passes all the tests I've tried so far.

----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-06-28 12:57

Message:
Logged In: YES 
user_id=1608

Here is a patch that fixes the problem by dumping and
restoring the image _meta information_ to/from any generated
format. 

The image _data_ is not included (that would be really hard
to do in a portable way), and therefore the undumping
routines have to redo most of the work of \pdfximage, but
this is transparent to the user except that the tests
for \pdfminorversion and \pdfinclusionerrorlevel tests are
re-done.

The patch also saves some pdftex arrays that are needed to
rediscover the object. This could eventually be extended to
 make sure \refxform et al work as well. As of now, that is
untested due to lack of example.

Comments and testing welcome, as always.



----------------------------------------------------------------------

Comment By: Martin Schr?der (oneiros)
Date: 2007-06-26 23:01

Message:
Logged In: YES 
user_id=421

Sorry, pdf things work different then dvi, so we can not
make \pdfximage etc. in ini mode without a lot of work; we
will probably disable a bunch of primitives.

----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-06-26 15:49

Message:
Logged In: YES 
user_id=4579

Simplifying the example by eliminating the graphics package:

==> foo.ini <==
\documentclass{minimal}

\newbox\picbox
\pdfximage{pic.pdf}
\setbox\picbox\hbox{\pdfrefximage\pdflastximage}

\dump

==> foo.tex <==
\begin{document}
        \box\picbox
\end{document}


Also, I see now that my comparison with dvi-mode is indeed a
false one, because the mechanisms are quite different, and
the DVI graphics driver only has to include a \special,
rather than the graphic itself.

A simple solution, I suppose, would be to make \pdfrefximage
(and, presumably, the other \pdfrefx commands) invalid in
IniTeX mode. Perhaps this is too brutal, since it forbids
certain harmless activities such as finding the dimensions
of an image from an .ini file; and of course I would be
delighted if it were made to work instead.


----------------------------------------------------------------------

Comment By: Reinhard Kotucha (reinhard)
Date: 2007-06-26 01:26

Message:
Logged In: YES 
user_id=4195

Martin,
you probably can't do everything in a format file.  However,
it would be nice to be able to put graphics to a format file
at least.  Suppose that a web server has to generate PDF
files on-the-fly, each contains a company logo.  The best
place place for the logo is the format file if speed
matters.  It would be nice if there are no restrictions.

Regards,
  Reinhard



----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-06-26 00:42

Message:
Logged In: YES 
user_id=4579

I'm impressed by the speed of your response! Thanks.

If you replace the PDF image by an EPS file, and use
-output-format dvi, then it does work. That suggests to me
that the problem is not fundamentally caused by a limitation
of IniTeX. But I don't know enough about the inner workings
of the \includegraphics command to be sure about that.
(Perhaps PDF graphics are handled in a sufficiently
different way for this to be a false comparison?)

In any case, as you say, it shouldn't crash!

----------------------------------------------------------------------

Comment By: Martin Schr?der (oneiros)
Date: 2007-06-26 00:30

Message:
Logged In: YES 
user_id=421

I can reproduce it, and it obviously shouldn't crash, but
I'm really not shure if it's supposed to work, as the format
of course will not save the picture. You can't do everything
in IniTeX...

----------------------------------------------------------------------

You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=824&group_id=106

From noreply at sarovar.org  Wed Jul  4 12:59:21 2007
From: noreply at sarovar.org (noreply at sarovar.org)
Date: Wed, 04 Jul 2007 16:29:21 +0530
Subject: [NTG-pdftex] [ pdftex-Bugs-824 ] Bus error caused by loading an
	image into a format file
Message-ID: <E1I62Zt-0000pH-00@sarovar.org>

Bugs item #824, was opened at 2007-06-26 00:22
You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=824&group_id=106

Category: Image inclusion
Group: v1.40.3
Status: Open
Resolution: Accepted
Priority: 5
Submitted By: Robin Houston (robinhouston)
Assigned to: Martin Schr?der (oneiros)
Summary: Bus error caused by loading an image into a format file

Initial Comment:
I have written a tool that speeds up repeated
compilation of a source file, by generating a format
from the preamble of the document, and then using it to
compile the body.

One user reported a crash when using this tool with a
custom letterhead class; the class in question may be
found at
http://www.soe.ucsc.edu/~elm/LaTeX/ucletter.cls (though
note that a simpler demonstration is attached to this
report).

The bug is triggered by the fact that this class loads
an image during the processing of the preamble (i.e.
during the processing of the .ini file) and saves it in
a box. When this box is used, during the compilation of
the body, pdftex crashes.

This does work with ordinary (non-PDF) TeX, so the
problem is specific to PDFTeX.

The attachment contains a simple demonstration of the
problem. Unpack it and run 'make'.


----------------------------------------------------------------------

>Comment By: Taco Hoekwater (taco)
Date: 2007-07-04 12:59

Message:
Logged In: YES 
user_id=1608


Yes, I think that does it.

(I resubmitted an earlier reply as well, sorry about that)

----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-07-04 12:55

Message:
Logged In: YES 
user_id=1608

You forgot to actually attach the new, final, patch.

----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-07-04 12:27

Message:
Logged In: YES 
user_id=4579

I could have sworn I did attach it. Perhaps I forgot to tick
the box? Sorry! It's there now.

Thank you so much for all the work you've put into this.

----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-07-04 12:22

Message:
Logged In: YES 
user_id=1608

You forgot to actually attach the new, final, patch.

----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-07-03 15:33

Message:
Logged In: YES 
user_id=4579

Yes, it's essentially fine (once I apply the patch for 799).
A couple of minor things:

1. I forgot to include pdftex.defines in the diff,
2. One of the comments had become inconsistent with the code;

so I attach a new (final?) patch. (I have also reinstated an
unrelated typo correction -- though perhaps this is already
fixed in your tree, which is why you removed it?)

----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-07-02 18:58

Message:
Logged In: YES 
user_id=1608

Robin,

I have merged those extra variables and heads with your
previous patch. Can you verify that all is still well?

----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-07-02 13:59

Message:
Logged In: YES 
user_id=4579

A small additional improvement:

dump_int(pdf_last_xform);
dump_int(pdf_last_ximage);
dump_int(pdf_last_obj);

...

undump_int(pdf_last_xform);
undump_int(pdf_last_ximage);
undump_int(pdf_last_obj);

(so that \lastximage and friends will work correctly after
loading the format file).

----------------------------------------------------------------------

Comment By: Hartmut Henkel (hhenkel)
Date: 2007-07-02 13:33

Message:
Logged In: YES 
user_id=929

> That's odd. The source I'm working from has
> @d is_obj_written(#) == (obj_offset(#) <> 0)
> Has this been changed recently?

this has been changed by the patch to bug 799, where also
'scheduled' has been introduced.

Regards, Hartmut

----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-07-02 13:21

Message:
Logged In: YES 
user_id=1608

> Has this been changed recently? 

In my (development version) of the source there is a state
'scheduled', that I assume comes from a fix to something
else. In any case, we just have ask Martin to be extra
careful about that line while creating 1.40.4 :-)

It is probably wise do dump the three heads you mentioned,
just in case: I really need the ximage one in my tree, and
dumping the others seems a logical extension. 

Well done to you on finding a way around the regression. 


----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-07-02 13:08

Message:
Logged In: YES 
user_id=4579

That's odd. The source I'm working from has

@d is_obj_written(#) == (obj_offset(#) <> 0)

Has this been changed recently? (Am I right in thinking that
the development version of the source tree is not publicly
available?)

With regard to which linked list headers to dump, we seem to
be reaching the point of making subtle improvements. The
original problem (whatsit nodes in dumped boxes referencing
non-existent objects) is solved without dumping any of the
headers.

One might conceivably want to load images/forms/raw objects
in the .ini, and then reference them from the .tex: this is
addressed by dumping head_tab[obj_type_ximage],
head_tab[obj_type_xform] and head_tab[obj_type_obj].
(Neither forms nor raw objects have any additional
associated metadata, as far as I can tell.)

I can't see any benefit from dumping the other entries,
whether or not doing so would cause potential crashes.

At any rate, what we have now seems a definite improvement
over the status quo, and avoids the undesirable
feature-regression of forbidding \dump after \shipout.

----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-07-02 12:53

Message:
Logged In: YES 
user_id=1608

WRT type image object: 

over here, it is only included twice after I do a small fix
to your patch:
  obj_tab[k].int2 := -1;
this could just be a simple difference between my and your
pdftex source trees, but please re-check. 

I definately have *no* runtime image with obj_tab[k].int2 :=
0, and that is correct/expected, because I can see in the
source that the is_obj_written() test checks for >-1.

The thing with head_tab[obj_type_xform] is why I initially
dumped all of them. The xforms should be safe, but fonts are
definately not ok (not unless whole lot more stuff is dumped
to the format). I don't know about the others heads. It
depends on whether or not the objects need additional data
structures besides obj_tab and pdf_mem, and I am not very
much at home in that section of the pdftex code.





----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-07-02 10:58

Message:
Logged In: YES 
user_id=4579

Taco, do you have an example of the "another problem" that
you mention? I thought I had dealt with that, by not dumping
obj_tab[k].int2 and resetting it to 0, and indeed it seems
to work when I try it.

To be precise about what I tried, I added the lines

%
\pdfrefximage\pdflastximage
\par\vfil\penalty-10000
%

before the \dump command in test-fmt2.tex. Both the
generated PDFs (test-fmt2.pdf and test2.pdf) seem okay.

Incidentally, it's easy to make a test, along the lines of
test2, that requires head_tab[obj_type_xform]. So I guess
that should be dumped too.

----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-07-02 10:34

Message:
Logged In: YES 
user_id=1608

The objects (and their numbers) are saved in the formats as well

----------------------------------------------------------------------

Comment By: Hartmut Henkel (hhenkel)
Date: 2007-07-02 10:30

Message:
Logged In: YES 
user_id=929

how can test2 work anyway? the pdfximage reserves an
absolute object number (not something like an image number),
and \pdflastximage gives this object number. But later in
the real document objects are numbered in the natural way in
ascending order, so how can an image object number fixed
already in the format fit into this sequence?

Regards, Hartmut

----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-07-02 09:11

Message:
Logged In: YES 
user_id=1608

I got an example from Hartmut Henkel that needs
head_tab[pdf_obj_ximage], it is test2 in attached tar. I
tried a quick test and it indeed seems to work ok if I dump
*only* that head_tab entry. 

But, you have to solve another problem as well. If you use
the image in the initex-dumped pdf, then the image wil not
be included in the runtime pdf (its state is 'written').
Somehow this state needs to be reset.

Taco


----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-07-02 09:10

Message:
Logged In: YES 
user_id=1608

I got an example from Hartmut Henkel that needs
head_tab[pdf_obj_ximage], it is test2 in attached tar. I
tried a quick test and it indeed seems to work ok if I dump
*only* that head_tab entry. 

But, you have to solve another problem as well. If you use
the image in the initex-dumped pdf, then the image wil not
be included in the runtime pdf (its state is 'written').
Somehow this state needs to be reset.

Taco


----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-06-30 18:56

Message:
Logged In: YES 
user_id=4579

The attached patch (initex-objects.patch) implements the
suggestions made below, together with a few other
improvements. It incorporates Taco Hoekwater's code, so
should be applied to a clean source tree.

In particular, it reinstates the ability to produce both a
PDF document and a memory dump in the same run. I've tested
it with \pdfxform as well as \pdfximage.

Comments? Counterexamples?

Robin

----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-06-30 14:38

Message:
Logged In: YES 
user_id=4579

Fortunately the "two picture" problem (demonstrated in the
attachment twopic.tar.gz) is trivial to solve: simply dump
and undump the variable pdf_ximage_count.

Presumably the same should be done for pdf_obj_count and
pdf_xform_count. Whether this is sufficient, I have no idea:
none of us have tested forms or raw objects, have we?


----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-06-30 12:08

Message:
Logged In: YES 
user_id=4579

A minor bug in the initex-refximage-dump.patch: the test for
fixed_pdfoutput=1 ought to be fixed_pdfoutput>0, otherwise
it will fail with \pdfoutput=2, say.

Another unrelated problem is that, if you load an image from
the .ini file, and then load and display another image from
the .tex file, the first image will appear where the second
one ought to be. I'll try and find out why this is happening.

(Incidentally, I haven't (yet?) discovered any problems
stemming from not (un)dumping the linked list headers.)

----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-06-29 20:08

Message:
Logged In: YES 
user_id=4579

Argh! Interesting, thanks.

Clearly my understanding of the pdftex code is patchy at
best. That said, what is gained by dumping and restoring the
head_tab? If I remove the parts of your code that dump and
undump the head_tab, then your example works (and mine
continue to work).

Robin

----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-06-29 18:32

Message:
Logged In: YES 
user_id=1608

Try a document that contains items besides a single image.
Many of the auxiliary tables are not dumped, resulting in
assertion failures in the non-ini run.

You don't even need to save or reuse boxes for those
crashes, just make a pair of:

% test.ini
\input plain
\pdfoutput=1
hello
\dump


% test.tex
world!
\end




----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-06-29 17:24

Message:
Logged In: YES 
user_id=4579

PS. I have just attached a new tar file, containing some
simple tests that create PDF from the IniTeX run. They all
appear to work, when my patch is applied.

----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-06-29 17:19

Message:
Logged In: YES 
user_id=4579

I don't think creating a PDF file from the IniTeX run is a
real problem. The attached tiny patch (to be applied on top
of Taco Hoekwater's first patch) seems to make it work.

Am I missing something?

----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-06-29 12:34

Message:
Logged In: YES 
user_id=1608

Here is the promised extra patch. No error is generated,
just a simple warning. Pdftex continues executing as if \end
was given instead.

----------------------------------------------------------------------

Comment By: Nobody (None)
Date: 2007-06-28 22:33

Message:
Logged In: NO 

Hi, the inability to _both_ dump a format _and_ produce
output in the same iniTeX run is probably tolerable as long
as no crashes occur.  I don't know the workings of WhizzyTeX
in detail: it is conceivable that their in-document dump
would be affected.  However, it is unlikely that WhizzyTeX
will indeed require both the output as well as the dump (the
dump may well contain pictures, for example from floats that
are going to be placed later), so there is at least a
reasonable way to tackle this from the macro level (divert
\shipout in the manner of the everyshi.sty package).

At least mylatex.ltx (and consequently preview-latex) should
work fine: \shipout before \begin{document} would be
extremely unusual and would result in strange results, anyway.

David

----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-06-28 21:09

Message:
Logged In: YES 
user_id=1608

Small limitation that I have yet to implement: the ability
to move stuff over from the initex run means that if initex
actually creates a pdf file, dumping a format should be
disallowed, or silently ignored. Attempting to keep track of
two disjunct pdf documents is just too hard for me. 

Note that I do not want to prohibit pdf creation from
initex. Just that you can't create a pdf document _as well
as_ perform a \dump.



----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-06-28 17:01

Message:
Logged In: YES 
user_id=4579

Bravo!

I was ready to embark on this myself, so I'm delighted to be
spared the trouble. It passes all the tests I've tried so far.

----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-06-28 12:57

Message:
Logged In: YES 
user_id=1608

Here is a patch that fixes the problem by dumping and
restoring the image _meta information_ to/from any generated
format. 

The image _data_ is not included (that would be really hard
to do in a portable way), and therefore the undumping
routines have to redo most of the work of \pdfximage, but
this is transparent to the user except that the tests
for \pdfminorversion and \pdfinclusionerrorlevel tests are
re-done.

The patch also saves some pdftex arrays that are needed to
rediscover the object. This could eventually be extended to
 make sure \refxform et al work as well. As of now, that is
untested due to lack of example.

Comments and testing welcome, as always.



----------------------------------------------------------------------

Comment By: Martin Schr?der (oneiros)
Date: 2007-06-26 23:01

Message:
Logged In: YES 
user_id=421

Sorry, pdf things work different then dvi, so we can not
make \pdfximage etc. in ini mode without a lot of work; we
will probably disable a bunch of primitives.

----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-06-26 15:49

Message:
Logged In: YES 
user_id=4579

Simplifying the example by eliminating the graphics package:

==> foo.ini <==
\documentclass{minimal}

\newbox\picbox
\pdfximage{pic.pdf}
\setbox\picbox\hbox{\pdfrefximage\pdflastximage}

\dump

==> foo.tex <==
\begin{document}
        \box\picbox
\end{document}


Also, I see now that my comparison with dvi-mode is indeed a
false one, because the mechanisms are quite different, and
the DVI graphics driver only has to include a \special,
rather than the graphic itself.

A simple solution, I suppose, would be to make \pdfrefximage
(and, presumably, the other \pdfrefx commands) invalid in
IniTeX mode. Perhaps this is too brutal, since it forbids
certain harmless activities such as finding the dimensions
of an image from an .ini file; and of course I would be
delighted if it were made to work instead.


----------------------------------------------------------------------

Comment By: Reinhard Kotucha (reinhard)
Date: 2007-06-26 01:26

Message:
Logged In: YES 
user_id=4195

Martin,
you probably can't do everything in a format file.  However,
it would be nice to be able to put graphics to a format file
at least.  Suppose that a web server has to generate PDF
files on-the-fly, each contains a company logo.  The best
place place for the logo is the format file if speed
matters.  It would be nice if there are no restrictions.

Regards,
  Reinhard



----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-06-26 00:42

Message:
Logged In: YES 
user_id=4579

I'm impressed by the speed of your response! Thanks.

If you replace the PDF image by an EPS file, and use
-output-format dvi, then it does work. That suggests to me
that the problem is not fundamentally caused by a limitation
of IniTeX. But I don't know enough about the inner workings
of the \includegraphics command to be sure about that.
(Perhaps PDF graphics are handled in a sufficiently
different way for this to be a false comparison?)

In any case, as you say, it shouldn't crash!

----------------------------------------------------------------------

Comment By: Martin Schr?der (oneiros)
Date: 2007-06-26 00:30

Message:
Logged In: YES 
user_id=421

I can reproduce it, and it obviously shouldn't crash, but
I'm really not shure if it's supposed to work, as the format
of course will not save the picture. You can't do everything
in IniTeX...

----------------------------------------------------------------------

You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=824&group_id=106

From noreply at sarovar.org  Wed Jul  4 13:01:15 2007
From: noreply at sarovar.org (noreply at sarovar.org)
Date: Wed, 04 Jul 2007 16:31:15 +0530
Subject: [NTG-pdftex] [ pdftex-Bugs-829 ] TEX_HUSH not handled correctly
Message-ID: <E1I62bj-0000s3-00@sarovar.org>

Bugs item #829, was opened at 2007-07-04 12:49
You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=829&group_id=106

Category: web2c
Group: v1.40.3
Status: Open
Resolution: None
Priority: 1
Submitted By: Martin Schr?der (oneiros)
Assigned to: Martin Schr?der (oneiros)
Summary: TEX_HUSH not handled correctly

Initial Comment:
This is from kpathsea.info:
---------------------------
4.4 Suppressing warnings
========================

Kpathsea provides a way to suppress selected
usually-harmless warnings;
this is useful at large sites where most users are not
administrators,
and thus the warnings are merely a source of confusion,
not a help.  To
do this, you set the environment variable or
configuration file value
`TEX_HUSH' to a colon-separated list of values.  Here
are the
possibilities:

`all'
     Suppress everything possible.

`checksum'
     Suppress mismatched font checksum warnings.

`lostchar'
     Suppress warnings when a character is missing from
a font that a
     DVI or VF file tries to typeset.

`none'
     Don't suppress any warnings.

`readable'
     Suppress warnings about attempts to access a file
whose permissions
     render it unreadable.

`special'
     Suppresses warnings about an unimplemented or
unparsable
     `\special' command.

`tex-hush.c' defines the function that checks the
variable value.  Each
driver implements its own checks where appropriate.
---------------------------
This is currently not handled by pdftex.

----------------------------------------------------------------------

>Comment By: Martin Schr?der (oneiros)
Date: 2007-07-04 13:01

Message:
Logged In: YES 
user_id=421

Not Knuth's warnings. 
But pdfTeX in PDF mode is also a driver...

The only one that IMHO matters is "special". OTOH nobody has
complained about this yet...

----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-07-04 12:56

Message:
Logged In: YES 
user_id=1608

This only affects the backend driver, right? But not Knuth's
warnings in the web source.

----------------------------------------------------------------------

You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=829&group_id=106

From noreply at sarovar.org  Wed Jul  4 14:06:09 2007
From: noreply at sarovar.org (noreply at sarovar.org)
Date: Wed, 04 Jul 2007 17:36:09 +0530
Subject: [NTG-pdftex] [ pdftex-Bugs-772 ] Option -recorder does not work for
	Type1 or PK files
Message-ID: <E1I63cX-0001uN-00@sarovar.org>

Bugs item #772, was opened at 2007-04-13 04:54
You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=772&group_id=106

Category: web2c
Group: v1.40.0
Status: Open
Resolution: Accepted
Priority: 4
Submitted By: Heiko Oberdiek (oberdiek)
Assigned to: Martin Schr?der (oneiros)
Summary: Option -recorder does not work for Type1 or PK files

Initial Comment:
Hello,

pdfTeX 1.40.3 supports the Web2C feature,
enabled by option -recorder.
However, it does not record all files,
.pfb (Type1) or .pk files are missing.

Yours sincerely
  Heiko <oberdiek at uni-freiburg.de>

PS: texmf.cnf isn't recorded either.


----------------------------------------------------------------------

>Comment By: Heiko Oberdiek (oberdiek)
Date: 2007-07-04 14:06

Message:
Logged In: YES 
user_id=1276

Hello,

\pdffilemoddate and \pdffilesize are still missing.
But a fix seems easy, just adding a call of
recorder_record_input in util.c's functions getfilemoddate and
getfilesize should help.

Yours sincerely
  Heiko <oberdiek at uni-freiburg.de>

----------------------------------------------------------------------

Comment By: Martin Schr?der (oneiros)
Date: 2007-06-25 12:41

Message:
Logged In: YES 
user_id=421

A much simpler patch is attached; it also catches the new
pipe feature.

----------------------------------------------------------------------

Comment By: Martin Schr?der (oneiros)
Date: 2007-06-25 01:33

Message:
Logged In: YES 
user_id=421

Attached is a patch that should fix this. Please test.

----------------------------------------------------------------------

Comment By: Heiko Oberdiek (oberdiek)
Date: 2007-04-17 13:19

Message:
Logged In: YES 
user_id=1276

Hello,

to prevent that it gets lost, a followup of mine in
ntg-pdftex mailing list:

After further testing (sorry) I found other gaps in file
name recording:

\pdfximage{<file>}
\pdffilesize{<file>}
\pdffilemoddate{<file>}
\pdffiledump{<file>}
\pdfmdfivesum file{<file>}

Yours sincerely
  Heiko <oberdiek at uni-freiburg.de>


----------------------------------------------------------------------

You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=772&group_id=106

From noreply at sarovar.org  Wed Jul  4 21:38:14 2007
From: noreply at sarovar.org (noreply at sarovar.org)
Date: Thu, 05 Jul 2007 01:08:14 +0530
Subject: [NTG-pdftex] [ pdftex-Bugs-772 ] Option -recorder does not work for
	Type1 or PK files
Message-ID: <E1I6Ag2-0003rN-00@sarovar.org>

Bugs item #772, was opened at 2007-04-13 04:54
You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=772&group_id=106

Category: web2c
Group: v1.40.0
Status: Open
Resolution: Accepted
Priority: 4
Submitted By: Heiko Oberdiek (oberdiek)
Assigned to: Martin Schr?der (oneiros)
Summary: Option -recorder does not work for Type1 or PK files

Initial Comment:
Hello,

pdfTeX 1.40.3 supports the Web2C feature,
enabled by option -recorder.
However, it does not record all files,
.pfb (Type1) or .pk files are missing.

Yours sincerely
  Heiko <oberdiek at uni-freiburg.de>

PS: texmf.cnf isn't recorded either.


----------------------------------------------------------------------

>Comment By: Martin Schr?der (oneiros)
Date: 2007-07-04 21:38

Message:
Logged In: YES 
user_id=421

Next try at a patch; this does \pdffilemoddate and
\pdffilesize and also catches texmf.cnf

----------------------------------------------------------------------

Comment By: Heiko Oberdiek (oberdiek)
Date: 2007-07-04 14:06

Message:
Logged In: YES 
user_id=1276

Hello,

\pdffilemoddate and \pdffilesize are still missing.
But a fix seems easy, just adding a call of
recorder_record_input in util.c's functions getfilemoddate and
getfilesize should help.

Yours sincerely
  Heiko <oberdiek at uni-freiburg.de>

----------------------------------------------------------------------

Comment By: Martin Schr?der (oneiros)
Date: 2007-06-25 12:41

Message:
Logged In: YES 
user_id=421

A much simpler patch is attached; it also catches the new
pipe feature.

----------------------------------------------------------------------

Comment By: Martin Schr?der (oneiros)
Date: 2007-06-25 01:33

Message:
Logged In: YES 
user_id=421

Attached is a patch that should fix this. Please test.

----------------------------------------------------------------------

Comment By: Heiko Oberdiek (oberdiek)
Date: 2007-04-17 13:19

Message:
Logged In: YES 
user_id=1276

Hello,

to prevent that it gets lost, a followup of mine in
ntg-pdftex mailing list:

After further testing (sorry) I found other gaps in file
name recording:

\pdfximage{<file>}
\pdffilesize{<file>}
\pdffilemoddate{<file>}
\pdffiledump{<file>}
\pdfmdfivesum file{<file>}

Yours sincerely
  Heiko <oberdiek at uni-freiburg.de>


----------------------------------------------------------------------

You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=772&group_id=106

From noreply at sarovar.org  Fri Jul  6 20:20:30 2007
From: noreply at sarovar.org (noreply at sarovar.org)
Date: Fri, 06 Jul 2007 23:50:30 +0530
Subject: [NTG-pdftex] [ pdftex-Bugs-772 ] Option -recorder does not work for
	Type1 or PK files
Message-ID: <E1I6sPu-0001og-00@sarovar.org>

Bugs item #772, was opened at 2007-04-13 04:54
You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=772&group_id=106

Category: web2c
Group: v1.40.0
Status: Open
>Resolution: Fixed
Priority: 4
Submitted By: Heiko Oberdiek (oberdiek)
Assigned to: Martin Schr?der (oneiros)
Summary: Option -recorder does not work for Type1 or PK files

Initial Comment:
Hello,

pdfTeX 1.40.3 supports the Web2C feature,
enabled by option -recorder.
However, it does not record all files,
.pfb (Type1) or .pk files are missing.

Yours sincerely
  Heiko <oberdiek at uni-freiburg.de>

PS: texmf.cnf isn't recorded either.


----------------------------------------------------------------------

Comment By: Martin Schr?der (oneiros)
Date: 2007-07-06 20:20

Message:
Logged In: YES 
user_id=421

A fix for this will be included in the next release (1.40.4/1.50.0).

----------------------------------------------------------------------

Comment By: Martin Schr?der (oneiros)
Date: 2007-07-04 21:38

Message:
Logged In: YES 
user_id=421

Next try at a patch; this does \pdffilemoddate and
\pdffilesize and also catches texmf.cnf

----------------------------------------------------------------------

Comment By: Heiko Oberdiek (oberdiek)
Date: 2007-07-04 14:06

Message:
Logged In: YES 
user_id=1276

Hello,

\pdffilemoddate and \pdffilesize are still missing.
But a fix seems easy, just adding a call of
recorder_record_input in util.c's functions getfilemoddate and
getfilesize should help.

Yours sincerely
  Heiko <oberdiek at uni-freiburg.de>

----------------------------------------------------------------------

Comment By: Martin Schr?der (oneiros)
Date: 2007-06-25 12:41

Message:
Logged In: YES 
user_id=421

A much simpler patch is attached; it also catches the new
pipe feature.

----------------------------------------------------------------------

Comment By: Martin Schr?der (oneiros)
Date: 2007-06-25 01:33

Message:
Logged In: YES 
user_id=421

Attached is a patch that should fix this. Please test.

----------------------------------------------------------------------

Comment By: Heiko Oberdiek (oberdiek)
Date: 2007-04-17 13:19

Message:
Logged In: YES 
user_id=1276

Hello,

to prevent that it gets lost, a followup of mine in
ntg-pdftex mailing list:

After further testing (sorry) I found other gaps in file
name recording:

\pdfximage{<file>}
\pdffilesize{<file>}
\pdffilemoddate{<file>}
\pdffiledump{<file>}
\pdfmdfivesum file{<file>}

Yours sincerely
  Heiko <oberdiek at uni-freiburg.de>


----------------------------------------------------------------------

You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=772&group_id=106

From noreply at sarovar.org  Fri Jul  6 20:20:42 2007
From: noreply at sarovar.org (noreply at sarovar.org)
Date: Fri, 06 Jul 2007 23:50:42 +0530
Subject: [NTG-pdftex] [ pdftex-Bugs-772 ] Option -recorder does not work for
	Type1 or PK files
Message-ID: <E1I6sQ6-0001oq-00@sarovar.org>

Bugs item #772, was opened at 2007-04-13 04:54
You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=772&group_id=106

Category: web2c
Group: v1.40.0
>Status: Closed
Resolution: Fixed
Priority: 4
Submitted By: Heiko Oberdiek (oberdiek)
Assigned to: Martin Schr?der (oneiros)
Summary: Option -recorder does not work for Type1 or PK files

Initial Comment:
Hello,

pdfTeX 1.40.3 supports the Web2C feature,
enabled by option -recorder.
However, it does not record all files,
.pfb (Type1) or .pk files are missing.

Yours sincerely
  Heiko <oberdiek at uni-freiburg.de>

PS: texmf.cnf isn't recorded either.


----------------------------------------------------------------------

Comment By: Martin Schr?der (oneiros)
Date: 2007-07-06 20:20

Message:
Logged In: YES 
user_id=421

A fix for this will be included in the next release (1.40.4/1.50.0).

----------------------------------------------------------------------

Comment By: Martin Schr?der (oneiros)
Date: 2007-07-04 21:38

Message:
Logged In: YES 
user_id=421

Next try at a patch; this does \pdffilemoddate and
\pdffilesize and also catches texmf.cnf

----------------------------------------------------------------------

Comment By: Heiko Oberdiek (oberdiek)
Date: 2007-07-04 14:06

Message:
Logged In: YES 
user_id=1276

Hello,

\pdffilemoddate and \pdffilesize are still missing.
But a fix seems easy, just adding a call of
recorder_record_input in util.c's functions getfilemoddate and
getfilesize should help.

Yours sincerely
  Heiko <oberdiek at uni-freiburg.de>

----------------------------------------------------------------------

Comment By: Martin Schr?der (oneiros)
Date: 2007-06-25 12:41

Message:
Logged In: YES 
user_id=421

A much simpler patch is attached; it also catches the new
pipe feature.

----------------------------------------------------------------------

Comment By: Martin Schr?der (oneiros)
Date: 2007-06-25 01:33

Message:
Logged In: YES 
user_id=421

Attached is a patch that should fix this. Please test.

----------------------------------------------------------------------

Comment By: Heiko Oberdiek (oberdiek)
Date: 2007-04-17 13:19

Message:
Logged In: YES 
user_id=1276

Hello,

to prevent that it gets lost, a followup of mine in
ntg-pdftex mailing list:

After further testing (sorry) I found other gaps in file
name recording:

\pdfximage{<file>}
\pdffilesize{<file>}
\pdffilemoddate{<file>}
\pdffiledump{<file>}
\pdfmdfivesum file{<file>}

Yours sincerely
  Heiko <oberdiek at uni-freiburg.de>


----------------------------------------------------------------------

You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=772&group_id=106

From noreply at sarovar.org  Fri Jul  6 20:39:08 2007
From: noreply at sarovar.org (noreply at sarovar.org)
Date: Sat, 07 Jul 2007 00:09:08 +0530
Subject: [NTG-pdftex] [ pdftex-Bugs-810 ] Mixed up font descriptor from pdf
	inclusion
Message-ID: <E1I6shw-0004mc-00@sarovar.org>

Bugs item #810, was opened at 2007-06-22 13:49
You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=810&group_id=106

Category: Fonts
Group: v1.40.3
>Status: Closed
>Resolution: Fixed
Priority: 5
Submitted By: Martin Schr?der (oneiros)
Assigned to: The Thanh Han (hanthethanh)
Summary: Mixed up font descriptor from pdf inclusion

Initial Comment:
Ulrich Dirr reported a bug with pdf inclusion where
font information is not copied correctly (see
http://tug.org/pipermail/pdftex/2007-June/007197.html).

Thanh analysed thus:

the issue with "Strange problems with graphics inclusion"
has the following reason :

- CMSS10 is used in a pdf figure (let's call it f1.pdf)

- that f1.pdf is included in another pdf (eg f2.pdf)

- when f2.pdf includes f1.pdf and a map entry for CMSS10 is
 avail., a font descriptor for CMSS10 is created by
 epdf_create_fontdescriptor()

- the preset_fontmetrics() function is not called for
CMSS10
 (it's there in epdf_create_fontdescriptor(), but commented
 out -- no f to use with preset_fontmetrics() there)

- when pdftex writes out the font descriptor for CMSS10,
 some font metrics are not set, since CMSS10.pfb doesn't
 have them

- so f2.pdf ends up with a font descriptor for CMSS10 where
 some font metrics are missing (Ascent, CapHeight, XHeight
 etc.)

- f2.pdf seems to be ok with most pdf browser, but not with
 Preflight in Acrobat7 (and perhaps with PitStop -- I don't
 have PitStop to test)

A patch by Thanh is attached.

----------------------------------------------------------------------

Comment By: Martin Schr?der (oneiros)
Date: 2007-07-06 20:39

Message:
Logged In: YES 
user_id=421

A fix for this will be included in the next release (1.40.4/1.50.0).

----------------------------------------------------------------------

You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=810&group_id=106

From noreply at sarovar.org  Fri Jul  6 22:25:02 2007
From: noreply at sarovar.org (noreply at sarovar.org)
Date: Sat, 07 Jul 2007 01:55:02 +0530
Subject: [NTG-pdftex] [ pdftex-Patches-726 ] in writezip.c replace
	deflateEnd() - deflateInit() by deflateReset()
Message-ID: <E1I6uMQ-0004mu-00@sarovar.org>

Patches item #726, was opened at 2007-01-28 14:57
You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=495&aid=726&group_id=106

Category: Memory allocation
Group: v1.50.0
>Status: Closed
Resolution: Accepted
Priority: 5
Submitted By: Hartmut Henkel (hhenkel)
Assigned to: Martin Schr?der (oneiros)
Summary: in writezip.c replace deflateEnd() - deflateInit() by deflateReset()

Initial Comment:
This patch removes unnecessary free()/alloc() calls of
zlib internal structures, reduces sys time. As before,
\pdfcompresslevel change is still possible in mid document.

----------------------------------------------------------------------

Comment By: Martin Schr?der (oneiros)
Date: 2007-07-06 22:25

Message:
Logged In: YES 
user_id=421

This patch will be included in the upcoming 1.50

----------------------------------------------------------------------

You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=495&aid=726&group_id=106

From noreply at sarovar.org  Fri Jul  6 22:45:22 2007
From: noreply at sarovar.org (noreply at sarovar.org)
Date: Sat, 07 Jul 2007 02:15:22 +0530
Subject: [NTG-pdftex] [ pdftex-Bugs-824 ] Bus error caused by loading an
	image into a format file
Message-ID: <E1I6ug6-0007re-00@sarovar.org>

Bugs item #824, was opened at 2007-06-26 00:22
You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=824&group_id=106

Category: Image inclusion
Group: v1.40.3
>Status: Closed
>Resolution: Fixed
Priority: 5
Submitted By: Robin Houston (robinhouston)
Assigned to: Martin Schr?der (oneiros)
Summary: Bus error caused by loading an image into a format file

Initial Comment:
I have written a tool that speeds up repeated
compilation of a source file, by generating a format
from the preamble of the document, and then using it to
compile the body.

One user reported a crash when using this tool with a
custom letterhead class; the class in question may be
found at
http://www.soe.ucsc.edu/~elm/LaTeX/ucletter.cls (though
note that a simpler demonstration is attached to this
report).

The bug is triggered by the fact that this class loads
an image during the processing of the preamble (i.e.
during the processing of the .ini file) and saves it in
a box. When this box is used, during the compilation of
the body, pdftex crashes.

This does work with ordinary (non-PDF) TeX, so the
problem is specific to PDFTeX.

The attachment contains a simple demonstration of the
problem. Unpack it and run 'make'.


----------------------------------------------------------------------

Comment By: Martin Schr?der (oneiros)
Date: 2007-07-06 22:45

Message:
Logged In: YES 
user_id=421

A fix for this will be included in the next release (1.40.4/1.50.0).

----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-07-04 12:59

Message:
Logged In: YES 
user_id=1608


Yes, I think that does it.

(I resubmitted an earlier reply as well, sorry about that)

----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-07-04 12:55

Message:
Logged In: YES 
user_id=1608

You forgot to actually attach the new, final, patch.

----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-07-04 12:27

Message:
Logged In: YES 
user_id=4579

I could have sworn I did attach it. Perhaps I forgot to tick
the box? Sorry! It's there now.

Thank you so much for all the work you've put into this.

----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-07-04 12:22

Message:
Logged In: YES 
user_id=1608

You forgot to actually attach the new, final, patch.

----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-07-03 15:33

Message:
Logged In: YES 
user_id=4579

Yes, it's essentially fine (once I apply the patch for 799).
A couple of minor things:

1. I forgot to include pdftex.defines in the diff,
2. One of the comments had become inconsistent with the code;

so I attach a new (final?) patch. (I have also reinstated an
unrelated typo correction -- though perhaps this is already
fixed in your tree, which is why you removed it?)

----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-07-02 18:58

Message:
Logged In: YES 
user_id=1608

Robin,

I have merged those extra variables and heads with your
previous patch. Can you verify that all is still well?

----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-07-02 13:59

Message:
Logged In: YES 
user_id=4579

A small additional improvement:

dump_int(pdf_last_xform);
dump_int(pdf_last_ximage);
dump_int(pdf_last_obj);

...

undump_int(pdf_last_xform);
undump_int(pdf_last_ximage);
undump_int(pdf_last_obj);

(so that \lastximage and friends will work correctly after
loading the format file).

----------------------------------------------------------------------

Comment By: Hartmut Henkel (hhenkel)
Date: 2007-07-02 13:33

Message:
Logged In: YES 
user_id=929

> That's odd. The source I'm working from has
> @d is_obj_written(#) == (obj_offset(#) <> 0)
> Has this been changed recently?

this has been changed by the patch to bug 799, where also
'scheduled' has been introduced.

Regards, Hartmut

----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-07-02 13:21

Message:
Logged In: YES 
user_id=1608

> Has this been changed recently? 

In my (development version) of the source there is a state
'scheduled', that I assume comes from a fix to something
else. In any case, we just have ask Martin to be extra
careful about that line while creating 1.40.4 :-)

It is probably wise do dump the three heads you mentioned,
just in case: I really need the ximage one in my tree, and
dumping the others seems a logical extension. 

Well done to you on finding a way around the regression. 


----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-07-02 13:08

Message:
Logged In: YES 
user_id=4579

That's odd. The source I'm working from has

@d is_obj_written(#) == (obj_offset(#) <> 0)

Has this been changed recently? (Am I right in thinking that
the development version of the source tree is not publicly
available?)

With regard to which linked list headers to dump, we seem to
be reaching the point of making subtle improvements. The
original problem (whatsit nodes in dumped boxes referencing
non-existent objects) is solved without dumping any of the
headers.

One might conceivably want to load images/forms/raw objects
in the .ini, and then reference them from the .tex: this is
addressed by dumping head_tab[obj_type_ximage],
head_tab[obj_type_xform] and head_tab[obj_type_obj].
(Neither forms nor raw objects have any additional
associated metadata, as far as I can tell.)

I can't see any benefit from dumping the other entries,
whether or not doing so would cause potential crashes.

At any rate, what we have now seems a definite improvement
over the status quo, and avoids the undesirable
feature-regression of forbidding \dump after \shipout.

----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-07-02 12:53

Message:
Logged In: YES 
user_id=1608

WRT type image object: 

over here, it is only included twice after I do a small fix
to your patch:
  obj_tab[k].int2 := -1;
this could just be a simple difference between my and your
pdftex source trees, but please re-check. 

I definately have *no* runtime image with obj_tab[k].int2 :=
0, and that is correct/expected, because I can see in the
source that the is_obj_written() test checks for >-1.

The thing with head_tab[obj_type_xform] is why I initially
dumped all of them. The xforms should be safe, but fonts are
definately not ok (not unless whole lot more stuff is dumped
to the format). I don't know about the others heads. It
depends on whether or not the objects need additional data
structures besides obj_tab and pdf_mem, and I am not very
much at home in that section of the pdftex code.





----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-07-02 10:58

Message:
Logged In: YES 
user_id=4579

Taco, do you have an example of the "another problem" that
you mention? I thought I had dealt with that, by not dumping
obj_tab[k].int2 and resetting it to 0, and indeed it seems
to work when I try it.

To be precise about what I tried, I added the lines

%
\pdfrefximage\pdflastximage
\par\vfil\penalty-10000
%

before the \dump command in test-fmt2.tex. Both the
generated PDFs (test-fmt2.pdf and test2.pdf) seem okay.

Incidentally, it's easy to make a test, along the lines of
test2, that requires head_tab[obj_type_xform]. So I guess
that should be dumped too.

----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-07-02 10:34

Message:
Logged In: YES 
user_id=1608

The objects (and their numbers) are saved in the formats as well

----------------------------------------------------------------------

Comment By: Hartmut Henkel (hhenkel)
Date: 2007-07-02 10:30

Message:
Logged In: YES 
user_id=929

how can test2 work anyway? the pdfximage reserves an
absolute object number (not something like an image number),
and \pdflastximage gives this object number. But later in
the real document objects are numbered in the natural way in
ascending order, so how can an image object number fixed
already in the format fit into this sequence?

Regards, Hartmut

----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-07-02 09:11

Message:
Logged In: YES 
user_id=1608

I got an example from Hartmut Henkel that needs
head_tab[pdf_obj_ximage], it is test2 in attached tar. I
tried a quick test and it indeed seems to work ok if I dump
*only* that head_tab entry. 

But, you have to solve another problem as well. If you use
the image in the initex-dumped pdf, then the image wil not
be included in the runtime pdf (its state is 'written').
Somehow this state needs to be reset.

Taco


----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-07-02 09:10

Message:
Logged In: YES 
user_id=1608

I got an example from Hartmut Henkel that needs
head_tab[pdf_obj_ximage], it is test2 in attached tar. I
tried a quick test and it indeed seems to work ok if I dump
*only* that head_tab entry. 

But, you have to solve another problem as well. If you use
the image in the initex-dumped pdf, then the image wil not
be included in the runtime pdf (its state is 'written').
Somehow this state needs to be reset.

Taco


----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-06-30 18:56

Message:
Logged In: YES 
user_id=4579

The attached patch (initex-objects.patch) implements the
suggestions made below, together with a few other
improvements. It incorporates Taco Hoekwater's code, so
should be applied to a clean source tree.

In particular, it reinstates the ability to produce both a
PDF document and a memory dump in the same run. I've tested
it with \pdfxform as well as \pdfximage.

Comments? Counterexamples?

Robin

----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-06-30 14:38

Message:
Logged In: YES 
user_id=4579

Fortunately the "two picture" problem (demonstrated in the
attachment twopic.tar.gz) is trivial to solve: simply dump
and undump the variable pdf_ximage_count.

Presumably the same should be done for pdf_obj_count and
pdf_xform_count. Whether this is sufficient, I have no idea:
none of us have tested forms or raw objects, have we?


----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-06-30 12:08

Message:
Logged In: YES 
user_id=4579

A minor bug in the initex-refximage-dump.patch: the test for
fixed_pdfoutput=1 ought to be fixed_pdfoutput>0, otherwise
it will fail with \pdfoutput=2, say.

Another unrelated problem is that, if you load an image from
the .ini file, and then load and display another image from
the .tex file, the first image will appear where the second
one ought to be. I'll try and find out why this is happening.

(Incidentally, I haven't (yet?) discovered any problems
stemming from not (un)dumping the linked list headers.)

----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-06-29 20:08

Message:
Logged In: YES 
user_id=4579

Argh! Interesting, thanks.

Clearly my understanding of the pdftex code is patchy at
best. That said, what is gained by dumping and restoring the
head_tab? If I remove the parts of your code that dump and
undump the head_tab, then your example works (and mine
continue to work).

Robin

----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-06-29 18:32

Message:
Logged In: YES 
user_id=1608

Try a document that contains items besides a single image.
Many of the auxiliary tables are not dumped, resulting in
assertion failures in the non-ini run.

You don't even need to save or reuse boxes for those
crashes, just make a pair of:

% test.ini
\input plain
\pdfoutput=1
hello
\dump


% test.tex
world!
\end




----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-06-29 17:24

Message:
Logged In: YES 
user_id=4579

PS. I have just attached a new tar file, containing some
simple tests that create PDF from the IniTeX run. They all
appear to work, when my patch is applied.

----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-06-29 17:19

Message:
Logged In: YES 
user_id=4579

I don't think creating a PDF file from the IniTeX run is a
real problem. The attached tiny patch (to be applied on top
of Taco Hoekwater's first patch) seems to make it work.

Am I missing something?

----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-06-29 12:34

Message:
Logged In: YES 
user_id=1608

Here is the promised extra patch. No error is generated,
just a simple warning. Pdftex continues executing as if \end
was given instead.

----------------------------------------------------------------------

Comment By: Nobody (None)
Date: 2007-06-28 22:33

Message:
Logged In: NO 

Hi, the inability to _both_ dump a format _and_ produce
output in the same iniTeX run is probably tolerable as long
as no crashes occur.  I don't know the workings of WhizzyTeX
in detail: it is conceivable that their in-document dump
would be affected.  However, it is unlikely that WhizzyTeX
will indeed require both the output as well as the dump (the
dump may well contain pictures, for example from floats that
are going to be placed later), so there is at least a
reasonable way to tackle this from the macro level (divert
\shipout in the manner of the everyshi.sty package).

At least mylatex.ltx (and consequently preview-latex) should
work fine: \shipout before \begin{document} would be
extremely unusual and would result in strange results, anyway.

David

----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-06-28 21:09

Message:
Logged In: YES 
user_id=1608

Small limitation that I have yet to implement: the ability
to move stuff over from the initex run means that if initex
actually creates a pdf file, dumping a format should be
disallowed, or silently ignored. Attempting to keep track of
two disjunct pdf documents is just too hard for me. 

Note that I do not want to prohibit pdf creation from
initex. Just that you can't create a pdf document _as well
as_ perform a \dump.



----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-06-28 17:01

Message:
Logged In: YES 
user_id=4579

Bravo!

I was ready to embark on this myself, so I'm delighted to be
spared the trouble. It passes all the tests I've tried so far.

----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-06-28 12:57

Message:
Logged In: YES 
user_id=1608

Here is a patch that fixes the problem by dumping and
restoring the image _meta information_ to/from any generated
format. 

The image _data_ is not included (that would be really hard
to do in a portable way), and therefore the undumping
routines have to redo most of the work of \pdfximage, but
this is transparent to the user except that the tests
for \pdfminorversion and \pdfinclusionerrorlevel tests are
re-done.

The patch also saves some pdftex arrays that are needed to
rediscover the object. This could eventually be extended to
 make sure \refxform et al work as well. As of now, that is
untested due to lack of example.

Comments and testing welcome, as always.



----------------------------------------------------------------------

Comment By: Martin Schr?der (oneiros)
Date: 2007-06-26 23:01

Message:
Logged In: YES 
user_id=421

Sorry, pdf things work different then dvi, so we can not
make \pdfximage etc. in ini mode without a lot of work; we
will probably disable a bunch of primitives.

----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-06-26 15:49

Message:
Logged In: YES 
user_id=4579

Simplifying the example by eliminating the graphics package:

==> foo.ini <==
\documentclass{minimal}

\newbox\picbox
\pdfximage{pic.pdf}
\setbox\picbox\hbox{\pdfrefximage\pdflastximage}

\dump

==> foo.tex <==
\begin{document}
        \box\picbox
\end{document}


Also, I see now that my comparison with dvi-mode is indeed a
false one, because the mechanisms are quite different, and
the DVI graphics driver only has to include a \special,
rather than the graphic itself.

A simple solution, I suppose, would be to make \pdfrefximage
(and, presumably, the other \pdfrefx commands) invalid in
IniTeX mode. Perhaps this is too brutal, since it forbids
certain harmless activities such as finding the dimensions
of an image from an .ini file; and of course I would be
delighted if it were made to work instead.


----------------------------------------------------------------------

Comment By: Reinhard Kotucha (reinhard)
Date: 2007-06-26 01:26

Message:
Logged In: YES 
user_id=4195

Martin,
you probably can't do everything in a format file.  However,
it would be nice to be able to put graphics to a format file
at least.  Suppose that a web server has to generate PDF
files on-the-fly, each contains a company logo.  The best
place place for the logo is the format file if speed
matters.  It would be nice if there are no restrictions.

Regards,
  Reinhard



----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-06-26 00:42

Message:
Logged In: YES 
user_id=4579

I'm impressed by the speed of your response! Thanks.

If you replace the PDF image by an EPS file, and use
-output-format dvi, then it does work. That suggests to me
that the problem is not fundamentally caused by a limitation
of IniTeX. But I don't know enough about the inner workings
of the \includegraphics command to be sure about that.
(Perhaps PDF graphics are handled in a sufficiently
different way for this to be a false comparison?)

In any case, as you say, it shouldn't crash!

----------------------------------------------------------------------

Comment By: Martin Schr?der (oneiros)
Date: 2007-06-26 00:30

Message:
Logged In: YES 
user_id=421

I can reproduce it, and it obviously shouldn't crash, but
I'm really not shure if it's supposed to work, as the format
of course will not save the picture. You can't do everything
in IniTeX...

----------------------------------------------------------------------

You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=824&group_id=106

From martin at oneiros.de  Sat Jul  7 15:12:05 2007
From: martin at oneiros.de (=?ISO-8859-1?Q?Martin_Schr=F6der?=)
Date: Sat, 7 Jul 2007 15:12:05 +0200
Subject: [NTG-pdftex] svn
Message-ID: <68c491a60707070612r5ed959ffpa90eeef1b1dc8e98@mail.gmail.com>

Hi,
with the help of Fabrice Popineau we now have a public svn repository
for pdfTeX. Read all about it at
   http://foundry.supelec.fr/scm/?group_id=23

Be warned that a full repository checkout explodes to ca. 750MB on
your harddisc.

All developers who might want to submit to that are requested to sign
up with foundry and join the project.

Also our cvs at sarovar is not used anymore; all files are also at foundry.

The rest of the project (trackers etc.) is still at sarovar.

Best
   Martin

From martin at oneiros.de  Sat Jul  7 15:14:11 2007
From: martin at oneiros.de (=?ISO-8859-1?Q?Martin_Schr=F6der?=)
Date: Sat, 7 Jul 2007 15:14:11 +0200
Subject: [NTG-pdftex] 1.40.4 incoming
Message-ID: <68c491a60707070614x717f2ff4l7f33c8ded6f271c6@mail.gmail.com>

Hi,
I want to leave for TUG2007 with a released 1.40.4.

The svn has in branches/stable the current version of 1.40.4. Please
test and tell me what I've forgotten. :-)

Best
   Martin

From gnwiii at gmail.com  Sat Jul  7 17:57:15 2007
From: gnwiii at gmail.com (George N. White III)
Date: Sat, 7 Jul 2007 12:57:15 -0300
Subject: [NTG-pdftex] 1.40.4 incoming
In-Reply-To: <68c491a60707070614x717f2ff4l7f33c8ded6f271c6@mail.gmail.com>
References: <68c491a60707070614x717f2ff4l7f33c8ded6f271c6@mail.gmail.com>
Message-ID: <22af238a0707070857o4ffffb47i7bca4a259e6d74b3@mail.gmail.com>

On 7/7/07, Martin Schr?der <martin at oneiros.de> wrote:

> I want to leave for TUG2007 with a released 1.40.4.

Thanks.

> The svn has in branches/stable the current version of 1.40.4. Please
> test and tell me what I've forgotten. :-)

I just did:

$ svn checkout svn://scm.foundry.supelec.fr/svn/pdftex/branches/stable
[...]
Checked out revision 171. [pdftex-1.40.4]

I (slightly) abused your build.sh configuration by compiling with -std=c99 on
Fedora Release 7 (i686, gcc (GCC) 4.1.2 20070502 (Red Hat 4.1.2-12)) and
using system libraries (fewer chances for the compile to fail and less time to
compile):

              --with-system-zlib \
              --with-system-ncurses \
              --with-system-pnglib \
              --with-system-t1lib \
              --with-system-gd \
              --with-system-freetype \

This still gives the error for strsep:

cc -march=i686 -std=c99 -DHAVE_CONFIG_H  -I.
-I../../../../src/texk/web2c/pdftexdir -I..
-I../../../../src/texk/web2c/pdftexdir/../..  -I..
-I../../../../src/texk/web2c/pdftexdir/.. -I../..
-I../../../../src/texk/web2c/pdftexdir/../.. -I../../../libs/md5
-I../../../../src/texk/web2c/pdftexdir/../../../libs/md5
-I../../../libs/xpdf -I../../../libs/xpdf/..
-I../../../../src/texk/web2c/pdftexdir/../../../libs/xpdf
-I../../../../src/texk/web2c/pdftexdir/../../../libs/xpdf/..
-I../../../libs/obsdcompat -I../../../libs/obsdcompat/..
-I../../../../src/texk/web2c/pdftexdir/../../../libs/obsdcompat
-I../../../../src/texk/web2c/pdftexdir/../../../libs/obsdcompat/..
-DpdfTeX -g -O2  -c ../../../../src/texk/web2c/pdftexdir/utils.c -o
utils.o
In file included from ../../../../src/texk/web2c/pdftexdir/utils.c:23:
../../../../src/texk/web2c/pdftexdir/../../../libs/obsdcompat/openbsd-compat.h:57:
error: expected identifier or '(' before '__extension__'
../../../../src/texk/web2c/pdftexdir/../../../libs/obsdcompat/openbsd-compat.h:57:
error: expected identifier or '(' before ')' token
make[1]: *** [utils.o] Error 1
make[1]: Leaving directory
`/Data/opt/tex/src/pdftex-1.40.4/source/build-i686-linux/texk/web2c/pdftexdir'
make: *** [pdftexdir/libpdf.a] Error 2

My workaround is:
mv libs/obsdcompat/config.h libs/obsdcompat/config.h.ac
sed -e 's,/\* #undef HAVE_STRSEP \*/,#define HAVE_STRSEP 1 /* GNW */,' \
 < libs/obsdcompat/config.h.ac \
 > libs/obsdcompat/config.h

I never got a response to my posting on the openssh list about
this problem.

The result passed the "fmtutil-sys --all" test and is able to compile
story.tex and
sample2.tex.  I also checked that bug 762 is fixed:

pdfTeX warning: pdftex: No flags specified for non-embedded font `Symbol' (psyr
) (I'm using 4): fix your map entry.

[so the mapfiles shipped in TL2007 need to be adjusted]

For those who haven't seen mention of linux-gate.so (it doesn't actually
exist as a .so file <http://www.trilithium.com/johan/2005/08/linux-gate/>):

[gwhite at cerberus pdftex-1.40.4]$ ldd $(which pdftex)
        linux-gate.so.1 =>  (0x00c89000)
        libpng12.so.0 => /usr/lib/libpng12.so.0 (0x004fd000)
        libz.so.1 => /lib/libz.so.1 (0x002cb000)
        libm.so.6 => /lib/libm.so.6 (0x00299000)
        libc.so.6 => /lib/libc.so.6 (0x00143000)
        /lib/ld-linux.so.2 (0x00124000)

-- 
George N. White III <aa056 at chebucto.ns.ca>
Head of St. Margarets Bay, Nova Scotia

From martin at oneiros.de  Sat Jul  7 18:42:36 2007
From: martin at oneiros.de (=?ISO-8859-1?Q?Martin_Schr=F6der?=)
Date: Sat, 7 Jul 2007 18:42:36 +0200
Subject: [NTG-pdftex] 1.40.4 incoming
In-Reply-To: <22af238a0707070857o4ffffb47i7bca4a259e6d74b3@mail.gmail.com>
References: <68c491a60707070614x717f2ff4l7f33c8ded6f271c6@mail.gmail.com>
	<22af238a0707070857o4ffffb47i7bca4a259e6d74b3@mail.gmail.com>
Message-ID: <68c491a60707070942h6da3b170gad38daf787efce27@mail.gmail.com>

2007/7/7, George N. White III <gnwiii at gmail.com>:
> I (slightly) abused your build.sh configuration by compiling with -std=c99 on
> Fedora Release 7 (i686, gcc (GCC) 4.1.2 20070502 (Red Hat 4.1.2-12)) and
> using system libraries (fewer chances for the compile to fail and less time to
> compile):

Not that it should make a difference, but does the standard build.sh work?

I have no problems with OpenSUSE 10.1 (gcc (GCC) 4.1.0 (SUSE Linux))
and 10.2 (gcc (GCC) 4.1.2 20061115 (prerelease) (SUSE Linux)) and
-std=c99 -Wall.

Best
   Martin

From gnwiii at gmail.com  Sat Jul  7 21:02:33 2007
From: gnwiii at gmail.com (George N. White III)
Date: Sat, 7 Jul 2007 16:02:33 -0300
Subject: [NTG-pdftex] 1.40.4 incoming
In-Reply-To: <68c491a60707070942h6da3b170gad38daf787efce27@mail.gmail.com>
References: <68c491a60707070614x717f2ff4l7f33c8ded6f271c6@mail.gmail.com>
	<22af238a0707070857o4ffffb47i7bca4a259e6d74b3@mail.gmail.com>
	<68c491a60707070942h6da3b170gad38daf787efce27@mail.gmail.com>
Message-ID: <22af238a0707071202j6b6094e1x1a8103943a4b9851@mail.gmail.com>

On 7/7/07, Martin Schr?der <martin at oneiros.de> wrote:

> 2007/7/7, George N. White III <gnwiii at gmail.com>:
> > I (slightly) abused your build.sh configuration by compiling with -std=c99 on
> > Fedora Release 7 (i686, gcc (GCC) 4.1.2 20070502 (Red Hat 4.1.2-12)) and
> > using system libraries (fewer chances for the compile to fail and less time to
> > compile):
>
> Not that it should make a difference, but does the standard build.sh work?

Yes -- not tested, but the .pool files are identical between the standard build
and my -std=c99 build.

> I have no problems with OpenSUSE 10.1 (gcc (GCC) 4.1.0 (SUSE Linux))
> and 10.2 (gcc (GCC) 4.1.2 20061115 (prerelease) (SUSE Linux)) and
> -std=c99 -Wall.

Interesting.  Could it be that Red Hat has a different take on whether strsep is
visible under std=c99?

CC='cc -std=c99 -Wall' ./build.sh > build-c99-Wall.log 2>&1

failed at the same place, and from this build,
source/build/libs/obsdcompat/config.log
fails to detect strsep:

configure:5077: checking whether strsep is declared
configure:5106: cc -std=c99 -Wall -c -g -O2 -Wall -Wpointer-arith
-Wuninitialized -Wsign-compare -Wno-pointer-sign  conftest.c >&5
conftest.c: In function 'main':
conftest.c:50: error: 'strsep' undeclared (first use in this function)
conftest.c:50: error: (Each undeclared identifier is reported only once
conftest.c:50: error: for each function it appears in.)
conftest.c:50: warning: unused variable 'p'
configure:5112: $? = 1
configure: failed program was:
| /* confdefs.h.  */
|
| // ...shortened
| #define HAVE_STRING_H 1
| //...
| /* end confdefs.h.  */
|
| #ifdef HAVE_STRING_H
| # include <string.h>
| #endif
|
|
| int
| main ()
| {
| #ifndef strsep
|   char *p = (char *) strsep;
| #endif
|
|   ;
|   return 0;
| }
configure:5136: result: no
   -----------------------------------------------------------------------------

in the glibc changelog there is:

* Wed Oct 03 2001 Jakub Jelinek <jakub at redhat.com> 2.2.4-19
- fix strsep

<http://www.ecos.sourceware.org/ml/libc-hacker/2001-10/msg00001.html>
has some discussion of the patch.

It may be that I need to add -D_BSD_SOURCE to get strsep on Red Hat, but
I still don't like the test used by openssh's configure

I'll try this with a different distribution (hopefully Monday).

-- 
George N. White III <aa056 at chebucto.ns.ca>
Head of St. Margarets Bay, Nova Scotia

From w.m.l at gmx.net  Sun Jul  8 17:38:38 2007
From: w.m.l at gmx.net (w.m.l at gmx.net)
Date: Sun, 08 Jul 2007 17:38:38 +0200
Subject: [NTG-pdftex] 1.40.4 incoming
In-Reply-To: <68c491a60707070614x717f2ff4l7f33c8ded6f271c6@mail.gmail.com>
References: <68c491a60707070614x717f2ff4l7f33c8ded6f271c6@mail.gmail.com>
Message-ID: <469104FE.1020000@gmx.net>

On 07.07.2007 15:14, Martin Schr?der wrote:
> Please test and tell me what I've forgotten. :-)

The tiny patch to #712 is missing. And what about #747? As far as I am 
concerned, there's nothing to complain about it.

Cheers,
Robert


From noreply at sarovar.org  Sun Jul  8 18:03:36 2007
From: noreply at sarovar.org (noreply at sarovar.org)
Date: Sun, 08 Jul 2007 21:33:36 +0530
Subject: [NTG-pdftex] [ pdftex-Bugs-712 ] problems with \letterspacefont
Message-ID: <E1I7ZEW-0006bO-00@sarovar.org>

Bugs item #712, was opened at 2006-12-12 03:53
You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=712&group_id=106

Category: hz
Group: v1.40.0
>Status: Open
>Resolution: Accepted
Priority: 5
Submitted By: Robert (schlcht)
Assigned to: The Thanh Han (hanthethanh)
Summary: problems with \letterspacefont

Initial Comment:
% Testing the new \letterspacefont, I found:
%
% (1) it's certainly not correct to have the spacing 
%     relative to character widths (look at `minimal'!)
% (2) everything's shifted to the right
% (3) when trying to expand the letter-spaced font, I 
%     get the warning `font should be expanded before 
%     its first use' (even before its first use), and 
%     then pdftex segfaults.

\pdfadjustspacing2
\hsize13cm
This is normal text This is normal text 
This is normal text This is normal text 
This is normal text This is normal text
{\letterspacefont\lspfont=\font 1000
%\pdffontexpand\lspfont 20 20 5 autoexpand % segfault
\lspfont
This isn't normal text This isn't normal text
This isn't normal text This is minimal text}
This is normal text This is normal text 
This is normal text
\bye





----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2007-03-01 22:07

Message:
Logged In: YES 
user_id=710

here is a patch that makes disabling ligature optional -- a
keyword "nolig" would do that:
\letterspacefont\y=\x 100 nolig

----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2007-02-22 10:31

Message:
Logged In: YES 
user_id=710

yes it sounds reasonable. Or we can extend the syntax of
\letterspacefont so that if an optional keyword like 'nolig'
is found then ligatures will be disabled.

----------------------------------------------------------------------

Comment By: Robert (schlcht)
Date: 2007-02-22 03:54

Message:
Logged In: YES 
user_id=2217

The current situation with regards to the lack of kerning of
letterspaced fonts is not really satisfying. After some
consideration, I therefore think it is actually better *not*
to disable ligatures, and hence kerning, for letterspaced fonts.

So I would propose to remove the line:
     set_no_ligatures(k); {disable ligatures for
letter-spaced fonts}

It is easy enough for the high-level interfaces (microtype,
context) to (automatically) disable selected ligatures only,
so that kerning for the rest of the characters is still
available. 

What do you think?

\letterspacefont\lsfont\font 100 \lsfont
\tagcode\lsfont`f -1
VALID off --
\bye


----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2007-02-02 14:54

Message:
Logged In: YES 
user_id=710

the warning message can be removed. I left it there since I
don't know what happens if a virtual font is loaded, used
and then expanded and used again with font expansion. It
should be alright to do so, but I am not very sure. Anyway,
I will change the warning to be issued for non-virtual fonts
only.

It turned to be a design mistake that the  \pdffontexpand
primitive takes a base font and turns it to an expanded
font. It would be better it was more like \letterspacefont,
ie it should create a new font and leave the original font
intact.

----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-02-02 08:30

Message:
Logged In: YES 
user_id=1608

> I hope luatex will abolish with this nonsensical connexion
of ligatures and kerns?

Yes. ligatures and kerns are totally separate in luatex.


----------------------------------------------------------------------

Comment By: Robert (schlcht)
Date: 2007-02-01 20:02

Message:
Logged In: YES 
user_id=2217

If the warning is misleading, should it not be removed?

On a different matter: Since \letterspacefont issues
set_no_ligatures, there won't be any kerning, either.
There's no way around that, I guess?

(I hope luatex will abolish with this nonsensical connexion
of ligatures and kerns?)


----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2007-01-04 16:59

Message:
Logged In: YES 
user_id=710

The warning is misleading but harmless. The reason of the
warning is that pdftex checks whether a font has not been
used before expansion (its type has not been examined and is
new/unknown yet). \letterspacefont sets the type of \y as a
virtual font, thus pdftex thinks the font might have been
used before. 

----------------------------------------------------------------------

Comment By: Robert (schlcht)
Date: 2007-01-04 01:40

Message:
Logged In: YES 
user_id=2217

I'm a bit confused about the status of (3): letterspacing
and expansion:
When expanding a letterspaced font, pdftex issues the
warning: ``font should be expanded before its first use'',
but apart from that, I cannot see any problems -- the font
is both letterspaced and expanded. 
Or is there a reason for the warning?

\pdfadjustspacing2
\font\x=cmr10 \x
\letterspacefont\y=\x 100 \y
\pdffontexpand\y 20 20 5 autoexpand
...
\bye


----------------------------------------------------------------------

Comment By: Martin Schr?der (oneiros)
Date: 2006-12-21 17:09

Message:
Logged In: YES 
user_id=421

A patch for this will be included in the next version (1.40).

----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2006-12-12 18:47

Message:
Logged In: YES 
user_id=710

oops, I disabled ligature for letter-spaced font, but this
should not affect the base font. Will have to rethink. Most
likely the syntax will change like follows:

\letterspacefont\f=cmr10 at 11pt 100
\f text




----------------------------------------------------------------------

Comment By: Robert (schlcht)
Date: 2006-12-12 16:50

Message:
Logged In: YES 
user_id=2217

% and here's
% (4) ligatures will be broken up, not only in the 
%     letter-spaced font (which is probably acceptable), 
%     but in all subsequent uses of the base font, too

fi\par
{\letterspacefont\lspfont=\font 100 \lspfont fi}\par
fi

\bye



----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2006-12-12 14:31

Message:
Logged In: YES 
user_id=710

I fixed (1) and (2); (3) is disabled now, ie you cannot
expand a letter-spaced font. Please wait for another release
from Martin.

----------------------------------------------------------------------

You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=712&group_id=106

From noreply at sarovar.org  Sun Jul  8 18:20:55 2007
From: noreply at sarovar.org (noreply at sarovar.org)
Date: Sun, 08 Jul 2007 21:50:55 +0530
Subject: [NTG-pdftex] [ pdftex-Bugs-712 ] problems with \letterspacefont
Message-ID: <E1I7ZVH-00019k-00@sarovar.org>

Bugs item #712, was opened at 2006-12-12 03:53
You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=712&group_id=106

Category: hz
Group: v1.40.0
>Status: Closed
>Resolution: Fixed
Priority: 5
Submitted By: Robert (schlcht)
Assigned to: The Thanh Han (hanthethanh)
Summary: problems with \letterspacefont

Initial Comment:
% Testing the new \letterspacefont, I found:
%
% (1) it's certainly not correct to have the spacing 
%     relative to character widths (look at `minimal'!)
% (2) everything's shifted to the right
% (3) when trying to expand the letter-spaced font, I 
%     get the warning `font should be expanded before 
%     its first use' (even before its first use), and 
%     then pdftex segfaults.

\pdfadjustspacing2
\hsize13cm
This is normal text This is normal text 
This is normal text This is normal text 
This is normal text This is normal text
{\letterspacefont\lspfont=\font 1000
%\pdffontexpand\lspfont 20 20 5 autoexpand % segfault
\lspfont
This isn't normal text This isn't normal text
This isn't normal text This is minimal text}
This is normal text This is normal text 
This is normal text
\bye





----------------------------------------------------------------------

Comment By: Martin Schr?der (oneiros)
Date: 2007-07-08 18:20

Message:
Logged In: YES 
user_id=421

A fix for this will be included in the next release (1.40.4/1.50.0).

----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2007-03-01 22:07

Message:
Logged In: YES 
user_id=710

here is a patch that makes disabling ligature optional -- a
keyword "nolig" would do that:
\letterspacefont\y=\x 100 nolig

----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2007-02-22 10:31

Message:
Logged In: YES 
user_id=710

yes it sounds reasonable. Or we can extend the syntax of
\letterspacefont so that if an optional keyword like 'nolig'
is found then ligatures will be disabled.

----------------------------------------------------------------------

Comment By: Robert (schlcht)
Date: 2007-02-22 03:54

Message:
Logged In: YES 
user_id=2217

The current situation with regards to the lack of kerning of
letterspaced fonts is not really satisfying. After some
consideration, I therefore think it is actually better *not*
to disable ligatures, and hence kerning, for letterspaced fonts.

So I would propose to remove the line:
     set_no_ligatures(k); {disable ligatures for
letter-spaced fonts}

It is easy enough for the high-level interfaces (microtype,
context) to (automatically) disable selected ligatures only,
so that kerning for the rest of the characters is still
available. 

What do you think?

\letterspacefont\lsfont\font 100 \lsfont
\tagcode\lsfont`f -1
VALID off --
\bye


----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2007-02-02 14:54

Message:
Logged In: YES 
user_id=710

the warning message can be removed. I left it there since I
don't know what happens if a virtual font is loaded, used
and then expanded and used again with font expansion. It
should be alright to do so, but I am not very sure. Anyway,
I will change the warning to be issued for non-virtual fonts
only.

It turned to be a design mistake that the  \pdffontexpand
primitive takes a base font and turns it to an expanded
font. It would be better it was more like \letterspacefont,
ie it should create a new font and leave the original font
intact.

----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-02-02 08:30

Message:
Logged In: YES 
user_id=1608

> I hope luatex will abolish with this nonsensical connexion
of ligatures and kerns?

Yes. ligatures and kerns are totally separate in luatex.


----------------------------------------------------------------------

Comment By: Robert (schlcht)
Date: 2007-02-01 20:02

Message:
Logged In: YES 
user_id=2217

If the warning is misleading, should it not be removed?

On a different matter: Since \letterspacefont issues
set_no_ligatures, there won't be any kerning, either.
There's no way around that, I guess?

(I hope luatex will abolish with this nonsensical connexion
of ligatures and kerns?)


----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2007-01-04 16:59

Message:
Logged In: YES 
user_id=710

The warning is misleading but harmless. The reason of the
warning is that pdftex checks whether a font has not been
used before expansion (its type has not been examined and is
new/unknown yet). \letterspacefont sets the type of \y as a
virtual font, thus pdftex thinks the font might have been
used before. 

----------------------------------------------------------------------

Comment By: Robert (schlcht)
Date: 2007-01-04 01:40

Message:
Logged In: YES 
user_id=2217

I'm a bit confused about the status of (3): letterspacing
and expansion:
When expanding a letterspaced font, pdftex issues the
warning: ``font should be expanded before its first use'',
but apart from that, I cannot see any problems -- the font
is both letterspaced and expanded. 
Or is there a reason for the warning?

\pdfadjustspacing2
\font\x=cmr10 \x
\letterspacefont\y=\x 100 \y
\pdffontexpand\y 20 20 5 autoexpand
...
\bye


----------------------------------------------------------------------

Comment By: Martin Schr?der (oneiros)
Date: 2006-12-21 17:09

Message:
Logged In: YES 
user_id=421

A patch for this will be included in the next version (1.40).

----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2006-12-12 18:47

Message:
Logged In: YES 
user_id=710

oops, I disabled ligature for letter-spaced font, but this
should not affect the base font. Will have to rethink. Most
likely the syntax will change like follows:

\letterspacefont\f=cmr10 at 11pt 100
\f text




----------------------------------------------------------------------

Comment By: Robert (schlcht)
Date: 2006-12-12 16:50

Message:
Logged In: YES 
user_id=2217

% and here's
% (4) ligatures will be broken up, not only in the 
%     letter-spaced font (which is probably acceptable), 
%     but in all subsequent uses of the base font, too

fi\par
{\letterspacefont\lspfont=\font 100 \lspfont fi}\par
fi

\bye



----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2006-12-12 14:31

Message:
Logged In: YES 
user_id=710

I fixed (1) and (2); (3) is disabled now, ie you cannot
expand a letter-spaced font. Please wait for another release
from Martin.

----------------------------------------------------------------------

You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=712&group_id=106

From noreply at sarovar.org  Sun Jul  8 19:17:01 2007
From: noreply at sarovar.org (noreply at sarovar.org)
Date: Sun, 08 Jul 2007 22:47:01 +0530
Subject: [NTG-pdftex] [ pdftex-Bugs-747 ] \letterspacefont and
	\pdffontexpand, again
Message-ID: <E1I7aNZ-0001xU-00@sarovar.org>

Bugs item #747, was opened at 2007-03-09 04:09
You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=747&group_id=106

Category: hz
Group: v1.40.1
Status: Open
Resolution: Accepted
Priority: 5
Submitted By: Robert (schlcht)
Assigned to: The Thanh Han (hanthethanh)
Summary: \letterspacefont and \pdffontexpand, again

Initial Comment:
When expanding a letterspaced font, the base font will
be expanded, too, resulting in the error `font has been
expanded with different parameters' when the base font
is expanded again:

\letterspacefont\lsfont\font 100
\pdffontexpand\lsfont 20 20 5 autoexpand
\pdffontexpand\font   20 20 5 autoexpand
Z\bye


----------------------------------------------------------------------

>Comment By: Martin Schr?der (oneiros)
Date: 2007-07-08 19:17

Message:
Logged In: YES 
user_id=421

The patch had one rejected hunk against stable and current.
A working patch is attached; please check.

----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2007-07-04 10:13

Message:
Logged In: YES 
user_id=710

patch updated again. Disable \pdfcopyfont for expanded and
letterspaced fonts.

----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2007-07-03 23:21

Message:
Logged In: YES 
user_id=710

I didn't consider the situation when an expanded font is
copied. It seems pretty much of work is needed to get it
right, so probably it is easier to disable \pdfcopyfont for
expanded (and letterspaced) fonts.

----------------------------------------------------------------------

Comment By: Robert (schlcht)
Date: 2007-07-03 19:39

Message:
Logged In: YES 
user_id=2217

Thanks. Letterspacing+expansion works fine now, and
\pdfcopyfont is also useful.

I gather an expanded font cannot be copied again, right?
(Not that I would deem this necessary.) The messages from
the following are a bit weird:

\tracingonline1
\font\f=cmr10
\pdfcopyfont\fA\f
\pdffontexpand\fA 10 10 5 autoexpand
\fA ABC
\pdfcopyfont\fB\fA
\fB ABC
\bye


----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2007-06-30 18:25

Message:
Logged In: YES 
user_id=710

ah, sorry, here it is.

----------------------------------------------------------------------

Comment By: Robert (schlcht)
Date: 2007-06-30 18:12

Message:
Logged In: YES 
user_id=2217

the patch is missing...

----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2007-06-29 17:58

Message:
Logged In: YES 
user_id=710

patch updated again. I have tested it with the following:

\font\f=cmr10
\pdfcopyfont\fA=\f
\letterspacefont\fB=\fA 100
\pdffontexpand\fB 30 30 5 autoexpand
\fB \input tufte.tex

and it seems to work. But the following doesn't:

\letterspacefont\fC=\f 100
\pdfcopyfont\fD=\fC
\pdffontexpand\fD 30 30 5 autoexpand

probably it's possible with some more effort to make the
latter case work too, but it doesn't seem needed.

----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2007-06-29 15:32

Message:
Logged In: YES 
user_id=710

patch deleted. Needs more testing.

----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2007-06-29 11:56

Message:
Logged In: YES 
user_id=710

sorry, I didn't test it carefully enough. Here is another
attempt (tested with the microtype manual).

----------------------------------------------------------------------

Comment By: Martin Schr?der (oneiros)
Date: 2007-06-29 10:52

Message:
Logged In: YES 
user_id=421

Taco, the new_font_type -> real_font_type is from the fix
for bug #722. We need an svn... :-(

----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-06-29 09:22

Message:
Logged In: YES 
user_id=1608

On my (fairly) clean sources, one hunk is rejected because
of this:

else begin
  if pdf_font_type[f] <> new_font_type then
    pdf_warning("font expansion", "font should be expanded
before its first use",
                true, true);
    end;


My pdftex.web uses pdf_font_type[f] = real_font_type in that
test. I fixed the hunk, but I also get a crash on Robert's
test file.

----------------------------------------------------------------------

Comment By: Robert (schlcht)
Date: 2007-06-29 01:17

Message:
Logged In: YES 
user_id=2217

Now this yields a core dump with: 

\pdfadjustspacing2
\pdffontexpand\font 20 20 5 autoexpand
\hsize10em

Lorem ipsum dolor sit amet, 
\bye

(unless I've messed up pdftex.web with all them patches)

----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2007-06-28 22:17

Message:
Logged In: YES 
user_id=710

here is another patch, which introduces \pdfcopyfont. Example:

\letterspacefont\lsfont\font 100
\pdfcopyfont\lsxfont\lsfont
\pdffontexpand\lsxfont 20 20 5 autoexpand

This patch also fixed a bug in expanding local font from
virtual fonts: font shrinking didn't work. Big thanks to
Robert for help with testing.

----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2007-06-28 20:42

Message:
Logged In: YES 
user_id=710

expanding a letterspaced fonts always implies that the base
font is expanded. In other words, it's impossible *not* to
expand the base font when expanding a letterspaced font.

thanks for further testing. It looks like a bug in checking
font expansion spec. fwiw, font stretch limit is always
fixed to [0..1000] and font shrink limit to [0..500]. Thus
giving a negative value has the same effect like giving 0.

I will play with \copyfont to see if it helps.


----------------------------------------------------------------------

Comment By: Robert (schlcht)
Date: 2007-06-28 16:01

Message:
Logged In: YES 
user_id=2217

If we can get rid of the error message, I think it can be
left at that. Mind you, the problem is not how to expand a
letterspaced font but how to *not* expand the base font when
expanding a letterspaced font. That expanding a letterspaced
font results in expansion of the base font
can be documented as a feature, IMO.

Here are some more clues: The error message seems to be
related to the sign of the stretch parameter.
First of all, with

\letterspacefont\lsfont\font 100
\pdffontexpand\lsfont 20 20 5 autoexpand

the base font will be expanded, however it will never be
shrunk. Then,

\letterspacefont\lsfont\font 100
\pdffontexpand\lsfont 20  20 5 autoexpand
\pdffontexpand\font   20 -20 5 autoexpand

doesn't yield an error. Neither does:

\pdffontexpand\lsfont 20 -20 5 autoexpand
\pdffontexpand\font   20 -20 5 autoexpand

However, here comes the error again:

\pdffontexpand\lsfont 20 -20 5 autoexpand
\pdffontexpand\font   20  20 5 autoexpand

If you expand the base font first, it's OK in any case, also
with different signs.


----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-06-28 09:37

Message:
Logged In: YES 
user_id=1608

That sounds nice, I like it.

----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2007-06-28 08:45

Message:
Logged In: YES 
user_id=710

I agree this is an ugly solution, which has its origin in a
design mistake. However the problem here is not only how to
deal with the error message, but the point is how to use
font expansion with a letterspaced font. Please give it a
thought so we can come up with an acceptable workaround. If
we want everything to be clean, there are more things that
have to be thrown away.

what about this: have a primitive \copyfont which creates a
copy of a font. Example:

\letterspacefont\lsfont\font 100
\copyfont\lsxfont\lsfont
\pdffontexpand\lsxfont 20 20 5 autoexpand



----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-06-27 13:43

Message:
Logged In: YES 
user_id=1608


If there is no clean way of solving the problem, I'd rather
just document the error message as a feature. I find
\pdfnewexpandfont very ugly (sorry Thanh).

----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2007-06-24 12:46

Message:
Logged In: YES 
user_id=710

here is a patch that introduces a new primitive
\pdfnewexpandfont. Usage:

\font\f=cmr10
\pdfnewexpandfont\fx \f 20 20 5 autoexpand

Note that \pdfnewexpandfont generates \fx by loading a TFM
corresponding to \f first, then applies font expansion in
the same way like "\pdffontexpand\fx 20 20 5". So when \f is
a font that doesn't have a corresponding TFM (for example,
because it was generated in pdftex memory only), the above
command won't work. In particular, the following doesn't work:

\font\f=cmr10
\letterspacefont\lsfont\f 100
\pdfnewexpandfont\fx \lsfont 20 20 5 autoexpand

since \lsfont doesn't have a corresponding TFM but was
generated by \letterspacefont. To create a
letterspaced+expanded font, one can use:

\font\f=cmr10
\letterspacefont\fx\f 100
\pdffontexpand\fx 20 20 5 autoexpand

things are gettting messy... sorry about that.
Testing/comments welcome.

----------------------------------------------------------------------

Comment By: Robert (schlcht)
Date: 2007-04-01 02:44

Message:
Logged In: YES 
user_id=2217

Fine for me and microtype. 

----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2007-03-31 11:52

Message:
Logged In: YES 
user_id=710

either name is ok with me. We need a new pritimive to load a
new font and expand it, since the current one doesn't load a
new font and hence is making trouble. I would wait for a
while to see how Robert sees it before making any change.

----------------------------------------------------------------------

Comment By: Nobody (None)
Date: 2007-03-19 12:07

Message:
Logged In: NO 

Hello,

I do not think that \pdfexpandfont is a good name for a new 
primitive, as it is too easy to confuse with \pdffontexpand. 
What about \pdfexpandnewfont, as -- if I understand 
correctly -- a new font is loaded?


Jonathan

P.S: Thank you for creating pdfTeX!

----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2007-03-10 21:18

Message:
Logged In: YES 
user_id=710

Phil Taylor has a suggestion that seems great to me:
introduce a new primitive \pdfexpandfont instead. How do you
see it?

----------------------------------------------------------------------

Comment By: Martin Schr?der (oneiros)
Date: 2007-03-10 20:24

Message:
Logged In: YES 
user_id=421

Forget that comment. Of course a change of \pdffontexpand
has to be considered carefully. By you. :-)

----------------------------------------------------------------------

Comment By: Martin Schr?der (oneiros)
Date: 2007-03-10 20:22

Message:
Logged In: YES 
user_id=421

No. It's an undocumented primitive. ;-)

----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2007-03-09 18:28

Message:
Logged In: YES 
user_id=710

sigh. A mistake when implementing the \pdffontexpand
primitive: it should load a new font for expansion, instead
of expanding a loaded font. Too late for change now?

----------------------------------------------------------------------

You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=747&group_id=106

From noreply at sarovar.org  Sun Jul  8 21:45:14 2007
From: noreply at sarovar.org (noreply at sarovar.org)
Date: Mon, 09 Jul 2007 01:15:14 +0530
Subject: [NTG-pdftex] [ pdftex-Bugs-747 ] \letterspacefont and
	\pdffontexpand, again
Message-ID: <E1I7ch0-0000XD-00@sarovar.org>

Bugs item #747, was opened at 2007-03-09 03:09
You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=747&group_id=106

Category: hz
Group: v1.40.1
Status: Open
Resolution: Accepted
Priority: 5
Submitted By: Robert (schlcht)
Assigned to: The Thanh Han (hanthethanh)
Summary: \letterspacefont and \pdffontexpand, again

Initial Comment:
When expanding a letterspaced font, the base font will
be expanded, too, resulting in the error `font has been
expanded with different parameters' when the base font
is expanded again:

\letterspacefont\lsfont\font 100
\pdffontexpand\lsfont 20 20 5 autoexpand
\pdffontexpand\font   20 20 5 autoexpand
Z\bye


----------------------------------------------------------------------

>Comment By: The Thanh Han (hanthethanh)
Date: 2007-07-08 19:45

Message:
Logged In: YES 
user_id=710

the patch bugfix747-5.diff was generated against
pdftex-1.40.3 sources as it is at sarovar. I have just
verified it again by downloading the tarball from sarovar,
unpack it and try the patch. No complain at all, while with
bug747-6.diff I got some warnings and one rejection:

patching file pdftex.web
Hunk #4 succeeded at 9528 (offset -1 lines).
Hunk #5 succeeded at 13180 (offset -7 lines).
Hunk #6 succeeded at 16751 (offset 2 lines).
Hunk #7 succeeded at 17026 (offset 2 lines).
Hunk #8 succeeded at 17037 (offset 2 lines).
Hunk #9 succeeded at 17171 (offset 41 lines).
Hunk #10 succeeded at 17193 (offset 41 lines).
Hunk #11 succeeded at 17201 (offset 41 lines).
Hunk #12 succeeded at 17211 (offset 41 lines).
Hunk #13 FAILED at 17241.
Hunk #14 succeeded at 17379 (offset 24 lines).
Hunk #15 succeeded at 17644 (offset 40 lines).
Hunk #16 succeeded at 19958 (offset 31 lines).
Hunk #17 succeeded at 20037 (offset 31 lines).
Hunk #18 succeeded at 20189 (offset 21 lines).
Hunk #19 succeeded at 30880 (offset 19 lines).
Hunk #20 succeeded at 31623 (offset 19 lines).
1 out of 20 hunks FAILED -- saving rejects to file
pdftex.web.rej


----------------------------------------------------------------------

Comment By: Martin Schr?der (oneiros)
Date: 2007-07-08 17:17

Message:
Logged In: YES 
user_id=421

The patch had one rejected hunk against stable and current.
A working patch is attached; please check.

----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2007-07-04 08:13

Message:
Logged In: YES 
user_id=710

patch updated again. Disable \pdfcopyfont for expanded and
letterspaced fonts.

----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2007-07-03 21:21

Message:
Logged In: YES 
user_id=710

I didn't consider the situation when an expanded font is
copied. It seems pretty much of work is needed to get it
right, so probably it is easier to disable \pdfcopyfont for
expanded (and letterspaced) fonts.

----------------------------------------------------------------------

Comment By: Robert (schlcht)
Date: 2007-07-03 17:39

Message:
Logged In: YES 
user_id=2217

Thanks. Letterspacing+expansion works fine now, and
\pdfcopyfont is also useful.

I gather an expanded font cannot be copied again, right?
(Not that I would deem this necessary.) The messages from
the following are a bit weird:

\tracingonline1
\font\f=cmr10
\pdfcopyfont\fA\f
\pdffontexpand\fA 10 10 5 autoexpand
\fA ABC
\pdfcopyfont\fB\fA
\fB ABC
\bye


----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2007-06-30 16:25

Message:
Logged In: YES 
user_id=710

ah, sorry, here it is.

----------------------------------------------------------------------

Comment By: Robert (schlcht)
Date: 2007-06-30 16:12

Message:
Logged In: YES 
user_id=2217

the patch is missing...

----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2007-06-29 15:58

Message:
Logged In: YES 
user_id=710

patch updated again. I have tested it with the following:

\font\f=cmr10
\pdfcopyfont\fA=\f
\letterspacefont\fB=\fA 100
\pdffontexpand\fB 30 30 5 autoexpand
\fB \input tufte.tex

and it seems to work. But the following doesn't:

\letterspacefont\fC=\f 100
\pdfcopyfont\fD=\fC
\pdffontexpand\fD 30 30 5 autoexpand

probably it's possible with some more effort to make the
latter case work too, but it doesn't seem needed.

----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2007-06-29 13:32

Message:
Logged In: YES 
user_id=710

patch deleted. Needs more testing.

----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2007-06-29 09:56

Message:
Logged In: YES 
user_id=710

sorry, I didn't test it carefully enough. Here is another
attempt (tested with the microtype manual).

----------------------------------------------------------------------

Comment By: Martin Schr?der (oneiros)
Date: 2007-06-29 08:52

Message:
Logged In: YES 
user_id=421

Taco, the new_font_type -> real_font_type is from the fix
for bug #722. We need an svn... :-(

----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-06-29 07:22

Message:
Logged In: YES 
user_id=1608

On my (fairly) clean sources, one hunk is rejected because
of this:

else begin
  if pdf_font_type[f] <> new_font_type then
    pdf_warning("font expansion", "font should be expanded
before its first use",
                true, true);
    end;


My pdftex.web uses pdf_font_type[f] = real_font_type in that
test. I fixed the hunk, but I also get a crash on Robert's
test file.

----------------------------------------------------------------------

Comment By: Robert (schlcht)
Date: 2007-06-28 23:17

Message:
Logged In: YES 
user_id=2217

Now this yields a core dump with: 

\pdfadjustspacing2
\pdffontexpand\font 20 20 5 autoexpand
\hsize10em

Lorem ipsum dolor sit amet, 
\bye

(unless I've messed up pdftex.web with all them patches)

----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2007-06-28 20:17

Message:
Logged In: YES 
user_id=710

here is another patch, which introduces \pdfcopyfont. Example:

\letterspacefont\lsfont\font 100
\pdfcopyfont\lsxfont\lsfont
\pdffontexpand\lsxfont 20 20 5 autoexpand

This patch also fixed a bug in expanding local font from
virtual fonts: font shrinking didn't work. Big thanks to
Robert for help with testing.

----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2007-06-28 18:42

Message:
Logged In: YES 
user_id=710

expanding a letterspaced fonts always implies that the base
font is expanded. In other words, it's impossible *not* to
expand the base font when expanding a letterspaced font.

thanks for further testing. It looks like a bug in checking
font expansion spec. fwiw, font stretch limit is always
fixed to [0..1000] and font shrink limit to [0..500]. Thus
giving a negative value has the same effect like giving 0.

I will play with \copyfont to see if it helps.


----------------------------------------------------------------------

Comment By: Robert (schlcht)
Date: 2007-06-28 14:01

Message:
Logged In: YES 
user_id=2217

If we can get rid of the error message, I think it can be
left at that. Mind you, the problem is not how to expand a
letterspaced font but how to *not* expand the base font when
expanding a letterspaced font. That expanding a letterspaced
font results in expansion of the base font
can be documented as a feature, IMO.

Here are some more clues: The error message seems to be
related to the sign of the stretch parameter.
First of all, with

\letterspacefont\lsfont\font 100
\pdffontexpand\lsfont 20 20 5 autoexpand

the base font will be expanded, however it will never be
shrunk. Then,

\letterspacefont\lsfont\font 100
\pdffontexpand\lsfont 20  20 5 autoexpand
\pdffontexpand\font   20 -20 5 autoexpand

doesn't yield an error. Neither does:

\pdffontexpand\lsfont 20 -20 5 autoexpand
\pdffontexpand\font   20 -20 5 autoexpand

However, here comes the error again:

\pdffontexpand\lsfont 20 -20 5 autoexpand
\pdffontexpand\font   20  20 5 autoexpand

If you expand the base font first, it's OK in any case, also
with different signs.


----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-06-28 07:37

Message:
Logged In: YES 
user_id=1608

That sounds nice, I like it.

----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2007-06-28 06:45

Message:
Logged In: YES 
user_id=710

I agree this is an ugly solution, which has its origin in a
design mistake. However the problem here is not only how to
deal with the error message, but the point is how to use
font expansion with a letterspaced font. Please give it a
thought so we can come up with an acceptable workaround. If
we want everything to be clean, there are more things that
have to be thrown away.

what about this: have a primitive \copyfont which creates a
copy of a font. Example:

\letterspacefont\lsfont\font 100
\copyfont\lsxfont\lsfont
\pdffontexpand\lsxfont 20 20 5 autoexpand



----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-06-27 11:43

Message:
Logged In: YES 
user_id=1608


If there is no clean way of solving the problem, I'd rather
just document the error message as a feature. I find
\pdfnewexpandfont very ugly (sorry Thanh).

----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2007-06-24 10:46

Message:
Logged In: YES 
user_id=710

here is a patch that introduces a new primitive
\pdfnewexpandfont. Usage:

\font\f=cmr10
\pdfnewexpandfont\fx \f 20 20 5 autoexpand

Note that \pdfnewexpandfont generates \fx by loading a TFM
corresponding to \f first, then applies font expansion in
the same way like "\pdffontexpand\fx 20 20 5". So when \f is
a font that doesn't have a corresponding TFM (for example,
because it was generated in pdftex memory only), the above
command won't work. In particular, the following doesn't work:

\font\f=cmr10
\letterspacefont\lsfont\f 100
\pdfnewexpandfont\fx \lsfont 20 20 5 autoexpand

since \lsfont doesn't have a corresponding TFM but was
generated by \letterspacefont. To create a
letterspaced+expanded font, one can use:

\font\f=cmr10
\letterspacefont\fx\f 100
\pdffontexpand\fx 20 20 5 autoexpand

things are gettting messy... sorry about that.
Testing/comments welcome.

----------------------------------------------------------------------

Comment By: Robert (schlcht)
Date: 2007-04-01 00:44

Message:
Logged In: YES 
user_id=2217

Fine for me and microtype. 

----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2007-03-31 09:52

Message:
Logged In: YES 
user_id=710

either name is ok with me. We need a new pritimive to load a
new font and expand it, since the current one doesn't load a
new font and hence is making trouble. I would wait for a
while to see how Robert sees it before making any change.

----------------------------------------------------------------------

Comment By: Nobody (None)
Date: 2007-03-19 11:07

Message:
Logged In: NO 

Hello,

I do not think that \pdfexpandfont is a good name for a new 
primitive, as it is too easy to confuse with \pdffontexpand. 
What about \pdfexpandnewfont, as -- if I understand 
correctly -- a new font is loaded?


Jonathan

P.S: Thank you for creating pdfTeX!

----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2007-03-10 20:18

Message:
Logged In: YES 
user_id=710

Phil Taylor has a suggestion that seems great to me:
introduce a new primitive \pdfexpandfont instead. How do you
see it?

----------------------------------------------------------------------

Comment By: Martin Schr?der (oneiros)
Date: 2007-03-10 19:24

Message:
Logged In: YES 
user_id=421

Forget that comment. Of course a change of \pdffontexpand
has to be considered carefully. By you. :-)

----------------------------------------------------------------------

Comment By: Martin Schr?der (oneiros)
Date: 2007-03-10 19:22

Message:
Logged In: YES 
user_id=421

No. It's an undocumented primitive. ;-)

----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2007-03-09 17:28

Message:
Logged In: YES 
user_id=710

sigh. A mistake when implementing the \pdffontexpand
primitive: it should load a new font for expansion, instead
of expanding a loaded font. Too late for change now?

----------------------------------------------------------------------

You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=747&group_id=106

From noreply at sarovar.org  Sun Jul  8 22:08:36 2007
From: noreply at sarovar.org (noreply at sarovar.org)
Date: Mon, 09 Jul 2007 01:38:36 +0530
Subject: [NTG-pdftex] [ pdftex-Bugs-747 ] \letterspacefont and
	\pdffontexpand, again
Message-ID: <E1I7d3c-0003ew-00@sarovar.org>

Bugs item #747, was opened at 2007-03-09 03:09
You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=747&group_id=106

Category: hz
Group: v1.40.1
Status: Open
Resolution: Accepted
Priority: 5
Submitted By: Robert (schlcht)
Assigned to: The Thanh Han (hanthethanh)
Summary: \letterspacefont and \pdffontexpand, again

Initial Comment:
When expanding a letterspaced font, the base font will
be expanded, too, resulting in the error `font has been
expanded with different parameters' when the base font
is expanded again:

\letterspacefont\lsfont\font 100
\pdffontexpand\lsfont 20 20 5 autoexpand
\pdffontexpand\font   20 20 5 autoexpand
Z\bye


----------------------------------------------------------------------

>Comment By: The Thanh Han (hanthethanh)
Date: 2007-07-08 20:08

Message:
Logged In: YES 
user_id=710

it seems that Martin refered to stable as the stable branch
in svn, not the latest stable release 1.40.3. I checked the
patch again, it's good. Thanks.

----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2007-07-08 19:45

Message:
Logged In: YES 
user_id=710

the patch bugfix747-5.diff was generated against
pdftex-1.40.3 sources as it is at sarovar. I have just
verified it again by downloading the tarball from sarovar,
unpack it and try the patch. No complain at all, while with
bug747-6.diff I got some warnings and one rejection:

patching file pdftex.web
Hunk #4 succeeded at 9528 (offset -1 lines).
Hunk #5 succeeded at 13180 (offset -7 lines).
Hunk #6 succeeded at 16751 (offset 2 lines).
Hunk #7 succeeded at 17026 (offset 2 lines).
Hunk #8 succeeded at 17037 (offset 2 lines).
Hunk #9 succeeded at 17171 (offset 41 lines).
Hunk #10 succeeded at 17193 (offset 41 lines).
Hunk #11 succeeded at 17201 (offset 41 lines).
Hunk #12 succeeded at 17211 (offset 41 lines).
Hunk #13 FAILED at 17241.
Hunk #14 succeeded at 17379 (offset 24 lines).
Hunk #15 succeeded at 17644 (offset 40 lines).
Hunk #16 succeeded at 19958 (offset 31 lines).
Hunk #17 succeeded at 20037 (offset 31 lines).
Hunk #18 succeeded at 20189 (offset 21 lines).
Hunk #19 succeeded at 30880 (offset 19 lines).
Hunk #20 succeeded at 31623 (offset 19 lines).
1 out of 20 hunks FAILED -- saving rejects to file
pdftex.web.rej


----------------------------------------------------------------------

Comment By: Martin Schr?der (oneiros)
Date: 2007-07-08 17:17

Message:
Logged In: YES 
user_id=421

The patch had one rejected hunk against stable and current.
A working patch is attached; please check.

----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2007-07-04 08:13

Message:
Logged In: YES 
user_id=710

patch updated again. Disable \pdfcopyfont for expanded and
letterspaced fonts.

----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2007-07-03 21:21

Message:
Logged In: YES 
user_id=710

I didn't consider the situation when an expanded font is
copied. It seems pretty much of work is needed to get it
right, so probably it is easier to disable \pdfcopyfont for
expanded (and letterspaced) fonts.

----------------------------------------------------------------------

Comment By: Robert (schlcht)
Date: 2007-07-03 17:39

Message:
Logged In: YES 
user_id=2217

Thanks. Letterspacing+expansion works fine now, and
\pdfcopyfont is also useful.

I gather an expanded font cannot be copied again, right?
(Not that I would deem this necessary.) The messages from
the following are a bit weird:

\tracingonline1
\font\f=cmr10
\pdfcopyfont\fA\f
\pdffontexpand\fA 10 10 5 autoexpand
\fA ABC
\pdfcopyfont\fB\fA
\fB ABC
\bye


----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2007-06-30 16:25

Message:
Logged In: YES 
user_id=710

ah, sorry, here it is.

----------------------------------------------------------------------

Comment By: Robert (schlcht)
Date: 2007-06-30 16:12

Message:
Logged In: YES 
user_id=2217

the patch is missing...

----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2007-06-29 15:58

Message:
Logged In: YES 
user_id=710

patch updated again. I have tested it with the following:

\font\f=cmr10
\pdfcopyfont\fA=\f
\letterspacefont\fB=\fA 100
\pdffontexpand\fB 30 30 5 autoexpand
\fB \input tufte.tex

and it seems to work. But the following doesn't:

\letterspacefont\fC=\f 100
\pdfcopyfont\fD=\fC
\pdffontexpand\fD 30 30 5 autoexpand

probably it's possible with some more effort to make the
latter case work too, but it doesn't seem needed.

----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2007-06-29 13:32

Message:
Logged In: YES 
user_id=710

patch deleted. Needs more testing.

----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2007-06-29 09:56

Message:
Logged In: YES 
user_id=710

sorry, I didn't test it carefully enough. Here is another
attempt (tested with the microtype manual).

----------------------------------------------------------------------

Comment By: Martin Schr?der (oneiros)
Date: 2007-06-29 08:52

Message:
Logged In: YES 
user_id=421

Taco, the new_font_type -> real_font_type is from the fix
for bug #722. We need an svn... :-(

----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-06-29 07:22

Message:
Logged In: YES 
user_id=1608

On my (fairly) clean sources, one hunk is rejected because
of this:

else begin
  if pdf_font_type[f] <> new_font_type then
    pdf_warning("font expansion", "font should be expanded
before its first use",
                true, true);
    end;


My pdftex.web uses pdf_font_type[f] = real_font_type in that
test. I fixed the hunk, but I also get a crash on Robert's
test file.

----------------------------------------------------------------------

Comment By: Robert (schlcht)
Date: 2007-06-28 23:17

Message:
Logged In: YES 
user_id=2217

Now this yields a core dump with: 

\pdfadjustspacing2
\pdffontexpand\font 20 20 5 autoexpand
\hsize10em

Lorem ipsum dolor sit amet, 
\bye

(unless I've messed up pdftex.web with all them patches)

----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2007-06-28 20:17

Message:
Logged In: YES 
user_id=710

here is another patch, which introduces \pdfcopyfont. Example:

\letterspacefont\lsfont\font 100
\pdfcopyfont\lsxfont\lsfont
\pdffontexpand\lsxfont 20 20 5 autoexpand

This patch also fixed a bug in expanding local font from
virtual fonts: font shrinking didn't work. Big thanks to
Robert for help with testing.

----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2007-06-28 18:42

Message:
Logged In: YES 
user_id=710

expanding a letterspaced fonts always implies that the base
font is expanded. In other words, it's impossible *not* to
expand the base font when expanding a letterspaced font.

thanks for further testing. It looks like a bug in checking
font expansion spec. fwiw, font stretch limit is always
fixed to [0..1000] and font shrink limit to [0..500]. Thus
giving a negative value has the same effect like giving 0.

I will play with \copyfont to see if it helps.


----------------------------------------------------------------------

Comment By: Robert (schlcht)
Date: 2007-06-28 14:01

Message:
Logged In: YES 
user_id=2217

If we can get rid of the error message, I think it can be
left at that. Mind you, the problem is not how to expand a
letterspaced font but how to *not* expand the base font when
expanding a letterspaced font. That expanding a letterspaced
font results in expansion of the base font
can be documented as a feature, IMO.

Here are some more clues: The error message seems to be
related to the sign of the stretch parameter.
First of all, with

\letterspacefont\lsfont\font 100
\pdffontexpand\lsfont 20 20 5 autoexpand

the base font will be expanded, however it will never be
shrunk. Then,

\letterspacefont\lsfont\font 100
\pdffontexpand\lsfont 20  20 5 autoexpand
\pdffontexpand\font   20 -20 5 autoexpand

doesn't yield an error. Neither does:

\pdffontexpand\lsfont 20 -20 5 autoexpand
\pdffontexpand\font   20 -20 5 autoexpand

However, here comes the error again:

\pdffontexpand\lsfont 20 -20 5 autoexpand
\pdffontexpand\font   20  20 5 autoexpand

If you expand the base font first, it's OK in any case, also
with different signs.


----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-06-28 07:37

Message:
Logged In: YES 
user_id=1608

That sounds nice, I like it.

----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2007-06-28 06:45

Message:
Logged In: YES 
user_id=710

I agree this is an ugly solution, which has its origin in a
design mistake. However the problem here is not only how to
deal with the error message, but the point is how to use
font expansion with a letterspaced font. Please give it a
thought so we can come up with an acceptable workaround. If
we want everything to be clean, there are more things that
have to be thrown away.

what about this: have a primitive \copyfont which creates a
copy of a font. Example:

\letterspacefont\lsfont\font 100
\copyfont\lsxfont\lsfont
\pdffontexpand\lsxfont 20 20 5 autoexpand



----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-06-27 11:43

Message:
Logged In: YES 
user_id=1608


If there is no clean way of solving the problem, I'd rather
just document the error message as a feature. I find
\pdfnewexpandfont very ugly (sorry Thanh).

----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2007-06-24 10:46

Message:
Logged In: YES 
user_id=710

here is a patch that introduces a new primitive
\pdfnewexpandfont. Usage:

\font\f=cmr10
\pdfnewexpandfont\fx \f 20 20 5 autoexpand

Note that \pdfnewexpandfont generates \fx by loading a TFM
corresponding to \f first, then applies font expansion in
the same way like "\pdffontexpand\fx 20 20 5". So when \f is
a font that doesn't have a corresponding TFM (for example,
because it was generated in pdftex memory only), the above
command won't work. In particular, the following doesn't work:

\font\f=cmr10
\letterspacefont\lsfont\f 100
\pdfnewexpandfont\fx \lsfont 20 20 5 autoexpand

since \lsfont doesn't have a corresponding TFM but was
generated by \letterspacefont. To create a
letterspaced+expanded font, one can use:

\font\f=cmr10
\letterspacefont\fx\f 100
\pdffontexpand\fx 20 20 5 autoexpand

things are gettting messy... sorry about that.
Testing/comments welcome.

----------------------------------------------------------------------

Comment By: Robert (schlcht)
Date: 2007-04-01 00:44

Message:
Logged In: YES 
user_id=2217

Fine for me and microtype. 

----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2007-03-31 09:52

Message:
Logged In: YES 
user_id=710

either name is ok with me. We need a new pritimive to load a
new font and expand it, since the current one doesn't load a
new font and hence is making trouble. I would wait for a
while to see how Robert sees it before making any change.

----------------------------------------------------------------------

Comment By: Nobody (None)
Date: 2007-03-19 11:07

Message:
Logged In: NO 

Hello,

I do not think that \pdfexpandfont is a good name for a new 
primitive, as it is too easy to confuse with \pdffontexpand. 
What about \pdfexpandnewfont, as -- if I understand 
correctly -- a new font is loaded?


Jonathan

P.S: Thank you for creating pdfTeX!

----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2007-03-10 20:18

Message:
Logged In: YES 
user_id=710

Phil Taylor has a suggestion that seems great to me:
introduce a new primitive \pdfexpandfont instead. How do you
see it?

----------------------------------------------------------------------

Comment By: Martin Schr?der (oneiros)
Date: 2007-03-10 19:24

Message:
Logged In: YES 
user_id=421

Forget that comment. Of course a change of \pdffontexpand
has to be considered carefully. By you. :-)

----------------------------------------------------------------------

Comment By: Martin Schr?der (oneiros)
Date: 2007-03-10 19:22

Message:
Logged In: YES 
user_id=421

No. It's an undocumented primitive. ;-)

----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2007-03-09 17:28

Message:
Logged In: YES 
user_id=710

sigh. A mistake when implementing the \pdffontexpand
primitive: it should load a new font for expansion, instead
of expanding a loaded font. Too late for change now?

----------------------------------------------------------------------

You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=747&group_id=106

From hanthethanh at gmail.com  Sun Jul  8 22:52:24 2007
From: hanthethanh at gmail.com (Thanh Han The)
Date: Sun, 8 Jul 2007 22:52:24 +0200
Subject: [NTG-pdftex] 1.40.4 incoming
Message-ID: <74f506dc0707081352p74693f57y4eb8c2899e651646@mail.gmail.com>

On 07.07.2007 15:14, Martin Schr?der wrote:
> Please test and tell me what I've forgotten. :-)

what about patch #813? It's rather straightforward and
handy.

Thanh

From hanthethanh at gmail.com  Sun Jul  8 23:05:55 2007
From: hanthethanh at gmail.com (Thanh Han The)
Date: Sun, 8 Jul 2007 23:05:55 +0200
Subject: [NTG-pdftex] 1.40.4 incoming
Message-ID: <74f506dc0707081405w1b73f843xd1f80b40d3da3c96@mail.gmail.com>

On Sun, Jul 08, 2007 at 10:52:24PM +0200, Thanh Han The wrote:
> On 07.07.2007 15:14, Martin Schr?der wrote:
> >Please test and tell me what I've forgotten. :-)
>
> what about patch #813? It's rather straightforward and
> handy.

and also #812, if there is no further objection.

Thanh

From noreply at sarovar.org  Sun Jul  8 23:40:13 2007
From: noreply at sarovar.org (noreply at sarovar.org)
Date: Mon, 09 Jul 2007 03:10:13 +0530
Subject: [NTG-pdftex] [ pdftex-Bugs-747 ] \letterspacefont and
	\pdffontexpand, again
Message-ID: <E1I7eUH-0001NA-00@sarovar.org>

Bugs item #747, was opened at 2007-03-09 04:09
You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=747&group_id=106

Category: hz
Group: v1.40.1
>Status: Closed
>Resolution: Fixed
Priority: 5
Submitted By: Robert (schlcht)
Assigned to: The Thanh Han (hanthethanh)
Summary: \letterspacefont and \pdffontexpand, again

Initial Comment:
When expanding a letterspaced font, the base font will
be expanded, too, resulting in the error `font has been
expanded with different parameters' when the base font
is expanded again:

\letterspacefont\lsfont\font 100
\pdffontexpand\lsfont 20 20 5 autoexpand
\pdffontexpand\font   20 20 5 autoexpand
Z\bye


----------------------------------------------------------------------

Comment By: Martin Schr?der (oneiros)
Date: 2007-07-08 23:40

Message:
Logged In: YES 
user_id=421

A fix for this will be included in the next release (1.40.4/1.50.0).

----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2007-07-08 22:08

Message:
Logged In: YES 
user_id=710

it seems that Martin refered to stable as the stable branch
in svn, not the latest stable release 1.40.3. I checked the
patch again, it's good. Thanks.

----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2007-07-08 21:45

Message:
Logged In: YES 
user_id=710

the patch bugfix747-5.diff was generated against
pdftex-1.40.3 sources as it is at sarovar. I have just
verified it again by downloading the tarball from sarovar,
unpack it and try the patch. No complain at all, while with
bug747-6.diff I got some warnings and one rejection:

patching file pdftex.web
Hunk #4 succeeded at 9528 (offset -1 lines).
Hunk #5 succeeded at 13180 (offset -7 lines).
Hunk #6 succeeded at 16751 (offset 2 lines).
Hunk #7 succeeded at 17026 (offset 2 lines).
Hunk #8 succeeded at 17037 (offset 2 lines).
Hunk #9 succeeded at 17171 (offset 41 lines).
Hunk #10 succeeded at 17193 (offset 41 lines).
Hunk #11 succeeded at 17201 (offset 41 lines).
Hunk #12 succeeded at 17211 (offset 41 lines).
Hunk #13 FAILED at 17241.
Hunk #14 succeeded at 17379 (offset 24 lines).
Hunk #15 succeeded at 17644 (offset 40 lines).
Hunk #16 succeeded at 19958 (offset 31 lines).
Hunk #17 succeeded at 20037 (offset 31 lines).
Hunk #18 succeeded at 20189 (offset 21 lines).
Hunk #19 succeeded at 30880 (offset 19 lines).
Hunk #20 succeeded at 31623 (offset 19 lines).
1 out of 20 hunks FAILED -- saving rejects to file
pdftex.web.rej


----------------------------------------------------------------------

Comment By: Martin Schr?der (oneiros)
Date: 2007-07-08 19:17

Message:
Logged In: YES 
user_id=421

The patch had one rejected hunk against stable and current.
A working patch is attached; please check.

----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2007-07-04 10:13

Message:
Logged In: YES 
user_id=710

patch updated again. Disable \pdfcopyfont for expanded and
letterspaced fonts.

----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2007-07-03 23:21

Message:
Logged In: YES 
user_id=710

I didn't consider the situation when an expanded font is
copied. It seems pretty much of work is needed to get it
right, so probably it is easier to disable \pdfcopyfont for
expanded (and letterspaced) fonts.

----------------------------------------------------------------------

Comment By: Robert (schlcht)
Date: 2007-07-03 19:39

Message:
Logged In: YES 
user_id=2217

Thanks. Letterspacing+expansion works fine now, and
\pdfcopyfont is also useful.

I gather an expanded font cannot be copied again, right?
(Not that I would deem this necessary.) The messages from
the following are a bit weird:

\tracingonline1
\font\f=cmr10
\pdfcopyfont\fA\f
\pdffontexpand\fA 10 10 5 autoexpand
\fA ABC
\pdfcopyfont\fB\fA
\fB ABC
\bye


----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2007-06-30 18:25

Message:
Logged In: YES 
user_id=710

ah, sorry, here it is.

----------------------------------------------------------------------

Comment By: Robert (schlcht)
Date: 2007-06-30 18:12

Message:
Logged In: YES 
user_id=2217

the patch is missing...

----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2007-06-29 17:58

Message:
Logged In: YES 
user_id=710

patch updated again. I have tested it with the following:

\font\f=cmr10
\pdfcopyfont\fA=\f
\letterspacefont\fB=\fA 100
\pdffontexpand\fB 30 30 5 autoexpand
\fB \input tufte.tex

and it seems to work. But the following doesn't:

\letterspacefont\fC=\f 100
\pdfcopyfont\fD=\fC
\pdffontexpand\fD 30 30 5 autoexpand

probably it's possible with some more effort to make the
latter case work too, but it doesn't seem needed.

----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2007-06-29 15:32

Message:
Logged In: YES 
user_id=710

patch deleted. Needs more testing.

----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2007-06-29 11:56

Message:
Logged In: YES 
user_id=710

sorry, I didn't test it carefully enough. Here is another
attempt (tested with the microtype manual).

----------------------------------------------------------------------

Comment By: Martin Schr?der (oneiros)
Date: 2007-06-29 10:52

Message:
Logged In: YES 
user_id=421

Taco, the new_font_type -> real_font_type is from the fix
for bug #722. We need an svn... :-(

----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-06-29 09:22

Message:
Logged In: YES 
user_id=1608

On my (fairly) clean sources, one hunk is rejected because
of this:

else begin
  if pdf_font_type[f] <> new_font_type then
    pdf_warning("font expansion", "font should be expanded
before its first use",
                true, true);
    end;


My pdftex.web uses pdf_font_type[f] = real_font_type in that
test. I fixed the hunk, but I also get a crash on Robert's
test file.

----------------------------------------------------------------------

Comment By: Robert (schlcht)
Date: 2007-06-29 01:17

Message:
Logged In: YES 
user_id=2217

Now this yields a core dump with: 

\pdfadjustspacing2
\pdffontexpand\font 20 20 5 autoexpand
\hsize10em

Lorem ipsum dolor sit amet, 
\bye

(unless I've messed up pdftex.web with all them patches)

----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2007-06-28 22:17

Message:
Logged In: YES 
user_id=710

here is another patch, which introduces \pdfcopyfont. Example:

\letterspacefont\lsfont\font 100
\pdfcopyfont\lsxfont\lsfont
\pdffontexpand\lsxfont 20 20 5 autoexpand

This patch also fixed a bug in expanding local font from
virtual fonts: font shrinking didn't work. Big thanks to
Robert for help with testing.

----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2007-06-28 20:42

Message:
Logged In: YES 
user_id=710

expanding a letterspaced fonts always implies that the base
font is expanded. In other words, it's impossible *not* to
expand the base font when expanding a letterspaced font.

thanks for further testing. It looks like a bug in checking
font expansion spec. fwiw, font stretch limit is always
fixed to [0..1000] and font shrink limit to [0..500]. Thus
giving a negative value has the same effect like giving 0.

I will play with \copyfont to see if it helps.


----------------------------------------------------------------------

Comment By: Robert (schlcht)
Date: 2007-06-28 16:01

Message:
Logged In: YES 
user_id=2217

If we can get rid of the error message, I think it can be
left at that. Mind you, the problem is not how to expand a
letterspaced font but how to *not* expand the base font when
expanding a letterspaced font. That expanding a letterspaced
font results in expansion of the base font
can be documented as a feature, IMO.

Here are some more clues: The error message seems to be
related to the sign of the stretch parameter.
First of all, with

\letterspacefont\lsfont\font 100
\pdffontexpand\lsfont 20 20 5 autoexpand

the base font will be expanded, however it will never be
shrunk. Then,

\letterspacefont\lsfont\font 100
\pdffontexpand\lsfont 20  20 5 autoexpand
\pdffontexpand\font   20 -20 5 autoexpand

doesn't yield an error. Neither does:

\pdffontexpand\lsfont 20 -20 5 autoexpand
\pdffontexpand\font   20 -20 5 autoexpand

However, here comes the error again:

\pdffontexpand\lsfont 20 -20 5 autoexpand
\pdffontexpand\font   20  20 5 autoexpand

If you expand the base font first, it's OK in any case, also
with different signs.


----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-06-28 09:37

Message:
Logged In: YES 
user_id=1608

That sounds nice, I like it.

----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2007-06-28 08:45

Message:
Logged In: YES 
user_id=710

I agree this is an ugly solution, which has its origin in a
design mistake. However the problem here is not only how to
deal with the error message, but the point is how to use
font expansion with a letterspaced font. Please give it a
thought so we can come up with an acceptable workaround. If
we want everything to be clean, there are more things that
have to be thrown away.

what about this: have a primitive \copyfont which creates a
copy of a font. Example:

\letterspacefont\lsfont\font 100
\copyfont\lsxfont\lsfont
\pdffontexpand\lsxfont 20 20 5 autoexpand



----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-06-27 13:43

Message:
Logged In: YES 
user_id=1608


If there is no clean way of solving the problem, I'd rather
just document the error message as a feature. I find
\pdfnewexpandfont very ugly (sorry Thanh).

----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2007-06-24 12:46

Message:
Logged In: YES 
user_id=710

here is a patch that introduces a new primitive
\pdfnewexpandfont. Usage:

\font\f=cmr10
\pdfnewexpandfont\fx \f 20 20 5 autoexpand

Note that \pdfnewexpandfont generates \fx by loading a TFM
corresponding to \f first, then applies font expansion in
the same way like "\pdffontexpand\fx 20 20 5". So when \f is
a font that doesn't have a corresponding TFM (for example,
because it was generated in pdftex memory only), the above
command won't work. In particular, the following doesn't work:

\font\f=cmr10
\letterspacefont\lsfont\f 100
\pdfnewexpandfont\fx \lsfont 20 20 5 autoexpand

since \lsfont doesn't have a corresponding TFM but was
generated by \letterspacefont. To create a
letterspaced+expanded font, one can use:

\font\f=cmr10
\letterspacefont\fx\f 100
\pdffontexpand\fx 20 20 5 autoexpand

things are gettting messy... sorry about that.
Testing/comments welcome.

----------------------------------------------------------------------

Comment By: Robert (schlcht)
Date: 2007-04-01 02:44

Message:
Logged In: YES 
user_id=2217

Fine for me and microtype. 

----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2007-03-31 11:52

Message:
Logged In: YES 
user_id=710

either name is ok with me. We need a new pritimive to load a
new font and expand it, since the current one doesn't load a
new font and hence is making trouble. I would wait for a
while to see how Robert sees it before making any change.

----------------------------------------------------------------------

Comment By: Nobody (None)
Date: 2007-03-19 12:07

Message:
Logged In: NO 

Hello,

I do not think that \pdfexpandfont is a good name for a new 
primitive, as it is too easy to confuse with \pdffontexpand. 
What about \pdfexpandnewfont, as -- if I understand 
correctly -- a new font is loaded?


Jonathan

P.S: Thank you for creating pdfTeX!

----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2007-03-10 21:18

Message:
Logged In: YES 
user_id=710

Phil Taylor has a suggestion that seems great to me:
introduce a new primitive \pdfexpandfont instead. How do you
see it?

----------------------------------------------------------------------

Comment By: Martin Schr?der (oneiros)
Date: 2007-03-10 20:24

Message:
Logged In: YES 
user_id=421

Forget that comment. Of course a change of \pdffontexpand
has to be considered carefully. By you. :-)

----------------------------------------------------------------------

Comment By: Martin Schr?der (oneiros)
Date: 2007-03-10 20:22

Message:
Logged In: YES 
user_id=421

No. It's an undocumented primitive. ;-)

----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2007-03-09 18:28

Message:
Logged In: YES 
user_id=710

sigh. A mistake when implementing the \pdffontexpand
primitive: it should load a new font for expansion, instead
of expanding a loaded font. Too late for change now?

----------------------------------------------------------------------

You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=747&group_id=106

From noreply at sarovar.org  Sun Jul  8 23:52:27 2007
From: noreply at sarovar.org (noreply at sarovar.org)
Date: Mon, 09 Jul 2007 03:22:27 +0530
Subject: [NTG-pdftex] [ pdftex-Patches-812 ] added \pdfkeeplinedimen
	primitive
Message-ID: <E1I7eg7-0002tm-00@sarovar.org>

Patches item #812, was opened at 2007-06-23 19:23
You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=495&aid=812&group_id=106

Category: Primitives
Group: v1.50.0
>Status: Closed
>Resolution: Accepted
Priority: 5
Submitted By: The Thanh Han (hanthethanh)
Assigned to: Hartmut Henkel (hhenkel)
Summary: added \pdfkeeplinedimen primitive

Initial Comment:
This patch introduces a new primitive
\pdfkeepdimenline, which is an addon to bring some more
flexibity to the existing \pdflastlinedepth,
\pdffirstlineheight, \pdfeachlinedepth and
\pdfeachlineheight primitives. Those primitives are set
to 0 by default, and they take effect only if the user
sets them to a non-zero value (as one can guess from
their names, they fix line dimensions of a paragraph). 

The issue with those primitives is that it's impossible
to use them with 0, as this value means "don't change
line dimens". So this patch introduces
\pdfkeepdimenline, a dimen register keeping the value
for "don't change line dimens". By default all are set
to 0, so the default behaviour is unchanged. 

For example, to set depth of each line after line
breaking to zero, one can say:

    \pdfkeeplinedimen=\maxdimen
    \pdfeachlineheight=\pdfkeeplinedimen  
    \pdffirstlineheight=\pdfkeeplinedimen
    \pdflastlinedepth=\pdfkeeplinedimen
    \pdfeachlinedepth=0pt

Testing/comments welcome.

----------------------------------------------------------------------

Comment By: Martin Schr?der (oneiros)
Date: 2007-07-08 23:52

Message:
Logged In: YES 
user_id=421

This patch will be included in the upcoming 1.50

----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2007-06-29 13:02

Message:
Logged In: YES 
user_id=710

here is another patch that introduces \pdfignoreddimen as
Taco suggested.

----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2007-06-24 10:41

Message:
Logged In: YES 
user_id=710

sounds good to me.

----------------------------------------------------------------------

Comment By: Taco Hoekwater (taco)
Date: 2007-06-24 10:28

Message:
Logged In: YES 
user_id=1608


I see an advantage in having a configurable parameter over
the arbitrary constant that \prevdepth currently uses. But
if that is the case, it makes sense to apply it to
\prevdepth as well.

So how about \pdfignoreddimen instead, that defaults to
-1000pt, and is also used by \prevdepth ?



----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2007-06-24 10:26

Message:
Logged In: YES 
user_id=710

another patch uploaded, so the pdftex team can choose
between them. Hope to make Nobody (None) happy. 

----------------------------------------------------------------------

Comment By: Nobody (None)
Date: 2007-06-23 19:29

Message:
Logged In: NO 

This is completely clunky and awkward.  Instead of having
some magic variable which changes the meaning of _all_
addresses here, how about just using \prevdepth's default
for "no change", namely -1000pt?

----------------------------------------------------------------------

You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=495&aid=812&group_id=106

From noreply at sarovar.org  Mon Jul  9 00:00:23 2007
From: noreply at sarovar.org (noreply at sarovar.org)
Date: Mon, 09 Jul 2007 03:30:23 +0530
Subject: [NTG-pdftex] [ pdftex-Patches-813 ] new primitive
	\pdfinclusioncopyfonts
Message-ID: <E1I7enn-0004Ox-00@sarovar.org>

Patches item #813, was opened at 2007-06-23 19:28
You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=495&aid=813&group_id=106

Category: Fonts
Group: v1.50.0
>Status: Closed
>Resolution: Accepted
Priority: 5
Submitted By: The Thanh Han (hanthethanh)
Assigned to: Hartmut Henkel (hhenkel)
Summary: new primitive \pdfinclusioncopyfonts

Initial Comment:
this is a replacement for \pdfreplacefont, with the
opposite semantics. When this is set, fonts from
included pdfs are always copied. This is useful to
prevent pdftex from replacing fonts in included pdfs,
without messing around with map files.

----------------------------------------------------------------------

Comment By: Martin Schr?der (oneiros)
Date: 2007-07-09 00:00

Message:
Logged In: YES 
user_id=421

This patch will be included in the upcoming 1.50

----------------------------------------------------------------------

You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=495&aid=813&group_id=106

From martin at oneiros.de  Mon Jul  9 00:23:19 2007
From: martin at oneiros.de (=?ISO-8859-1?Q?Martin_Schr=F6der?=)
Date: Mon, 9 Jul 2007 00:23:19 +0200
Subject: [NTG-pdftex] 1.40.4 incoming
In-Reply-To: <74f506dc0707081405w1b73f843xd1f80b40d3da3c96@mail.gmail.com>
References: <74f506dc0707081405w1b73f843xd1f80b40d3da3c96@mail.gmail.com>
Message-ID: <68c491a60707081523j3adf691dma8e0cb97bb8e0191@mail.gmail.com>

2007/7/8, Thanh Han The <hanthethanh at gmail.com>:
> On Sun, Jul 08, 2007 at 10:52:24PM +0200, Thanh Han The wrote:
> > what about patch #813? It's rather straightforward and
> > handy.
>
> and also #812, if there is no further objection.

Both are in.
While we are looking at patches, what about
- 746 PromptFileName
- 811 Change warning mesage for conflicting font attributes

Best
   Martin

From noreply at sarovar.org  Mon Jul  9 00:05:11 2007
From: noreply at sarovar.org (noreply at sarovar.org)
Date: Mon, 09 Jul 2007 03:35:11 +0530
Subject: [NTG-pdftex] [ pdftex-Patches-811 ] Patch to change warning mesage
	for conflicting font attributes (given by \pdffontattr)
Message-ID: <E1I7esR-0004R1-00@sarovar.org>

Patches item #811, was opened at 2007-06-23 19:04
You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=495&aid=811&group_id=106

Category: Fonts
Group: v1.50.0
>Status: Closed
Resolution: Accepted
Priority: 5
Submitted By: The Thanh Han (hanthethanh)
Assigned to: Martin Schr?der (oneiros)
Summary: Patch to  change warning mesage for conflicting font attributes (given by \pdffontattr)

Initial Comment:
This is a tiny patch to change the warning message for
conflicting font attributes (as given by \pdffontattr),
to make it clearer what is going on.   

----------------------------------------------------------------------

Comment By: Martin Schr?der (oneiros)
Date: 2007-07-09 00:05

Message:
Logged In: YES 
user_id=421

This patch will be included in the upcoming 1.50

----------------------------------------------------------------------

You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=495&aid=811&group_id=106

From martin at oneiros.de  Mon Jul  9 00:26:37 2007
From: martin at oneiros.de (=?ISO-8859-1?Q?Martin_Schr=F6der?=)
Date: Mon, 9 Jul 2007 00:26:37 +0200
Subject: [NTG-pdftex] 1.40.4 incoming
In-Reply-To: <68c491a60707081523j3adf691dma8e0cb97bb8e0191@mail.gmail.com>
References: <74f506dc0707081405w1b73f843xd1f80b40d3da3c96@mail.gmail.com>
	<68c491a60707081523j3adf691dma8e0cb97bb8e0191@mail.gmail.com>
Message-ID: <68c491a60707081526w4a191f50xb444dff9d4490704@mail.gmail.com>

2007/7/9, Martin Schr?der <martin at oneiros.de>:
> 2007/7/8, Thanh Han The <hanthethanh at gmail.com>:
> > On Sun, Jul 08, 2007 at 10:52:24PM +0200, Thanh Han The wrote:
> > > what about patch #813? It's rather straightforward and
> > > handy.
> >
> > and also #812, if there is no further objection.
>
> Both are in.
> While we are looking at patches, what about
> - 746 PromptFileName
> - 811 Change warning mesage for conflicting font attributes

811 is already in.

Best
   Martin

From noreply at sarovar.org  Mon Jul  9 00:12:51 2007
From: noreply at sarovar.org (noreply at sarovar.org)
Date: Mon, 09 Jul 2007 03:42:51 +0530
Subject: [NTG-pdftex] [ pdftex-Patches-811 ] Patch to change warning mesage
	for conflicting font attributes (given by \pdffontattr)
Message-ID: <E1I7ezr-0007NB-00@sarovar.org>

Patches item #811, was opened at 2007-06-23 19:04
You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=495&aid=811&group_id=106

Category: Fonts
Group: v1.50.0
Status: Closed
Resolution: Accepted
Priority: 5
Submitted By: The Thanh Han (hanthethanh)
Assigned to: Martin Schr?der (oneiros)
Summary: Patch to  change warning mesage for conflicting font attributes (given by \pdffontattr)

Initial Comment:
This is a tiny patch to change the warning message for
conflicting font attributes (as given by \pdffontattr),
to make it clearer what is going on.   

----------------------------------------------------------------------

>Comment By: Martin Schr?der (oneiros)
Date: 2007-07-09 00:12

Message:
Logged In: YES 
user_id=421

This was already included in the fix for #721.

----------------------------------------------------------------------

Comment By: Martin Schr?der (oneiros)
Date: 2007-07-09 00:05

Message:
Logged In: YES 
user_id=421

This patch will be included in the upcoming 1.50

----------------------------------------------------------------------

You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=495&aid=811&group_id=106

From kakuto at fsci.fuk.kindai.ac.jp  Mon Jul  9 05:08:25 2007
From: kakuto at fsci.fuk.kindai.ac.jp (Akira Kakuto)
Date: Mon, 09 Jul 2007 12:08:25 +0900
Subject: [NTG-pdftex] 1.40.4 incoming
Message-ID: <200707090308.l6938QTR017662@jupiter.fsci.fuk.kindai.ac.jp>

Hi Martin,

> - 746 PromptFileName

The latest version of 746 (retry), changed by Heiko himself, is the
following.

This problem is related to all Web2C, so I've attached the corresponding
changes for Aleph and Omega.

Please check in these changes also to the head of TeXLive
repository if these are ok.

Best regards,
Akira

 
*** tex.ch.org	2006-12-19 02:35:49.000000000 +0100
--- tex.ch	2007-03-07 17:08:49.000000000 +0100
***************
*** 2210,2221 ****
--- 2210,2229 ----
  @y
  var k:0..buf_size; {index into |buffer|}
  @!saved_cur_name:str_number; {to catch empty terminal input}
+ @!saved_cur_ext:str_number; {to catch empty terminal input}
+ @!saved_cur_area:str_number; {to catch empty terminal input}
  @z
  
  @x [29.530] l.10252 - prompt_file_name: No default extension is TeX input file.
  if e=".tex" then show_context;
  @y
  if (e=".tex") or (e="") then show_context;
+ print_ln; print("(Retry if file name is empty or CTRL-D to exit.");
+ if (e<>"") then
+   begin
+     print(" Default file extension is `"); print(e); print("'");
+   end;
+ print(")"); print_ln;
  @z
  
  @x [29.530] l.10258 - prompt_file_name: prevent empty filenames.
***************
*** 2223,2231 ****
  if cur_ext="" then cur_ext:=e;
  @y
  saved_cur_name:=cur_name;
  clear_terminal; prompt_input(": "); @<Scan file name in the buffer@>;
! if cur_ext="" then cur_ext:=e;
! if length(cur_name)=0 then cur_name:=saved_cur_name;
  @z
  
  @x [29.532] l.10263 - avoid conflict, `logname' in <unistd.h> on some systems.
--- 2231,2247 ----
  if cur_ext="" then cur_ext:=e;
  @y
  saved_cur_name:=cur_name;
+ saved_cur_ext:=cur_ext;
+ saved_cur_area:=cur_area;
  clear_terminal; prompt_input(": "); @<Scan file name in the buffer@>;
! if (length(cur_name)=0) and (cur_ext="") and (cur_area="") then
!   begin
!     cur_name:=saved_cur_name;
!     cur_ext:=saved_cur_ext;
!     cur_area:=saved_cur_area;
!   end
! else
!   if cur_ext="" then cur_ext:=e;
  @z
  
  @x [29.532] l.10263 - avoid conflict, `logname' in <unistd.h> on some systems.






diff -u alephdir-orig/com16bit-rc2.ch alephdir/com16bit-rc2.ch
--- alephdir-orig/com16bit-rc2.ch	Tue Dec 19 10:35:50 2006
+++ alephdir/com16bit-rc2.ch	Sat Mar 17 20:41:09 2007
@@ -1349,12 +1349,20 @@
 @y
 var k:0..buf_size; {index into |buffer|}
 @!saved_cur_name:str_number; {to catch empty terminal input}
+@!saved_cur_ext:str_number; {to catch empty terminal input}
+@!saved_cur_area:str_number; {to catch empty terminal input}
 @z
 
 @x [29.530] l.10252 - prompt_file_name: No default extension is TeX input file.
 if e=".tex" then show_context;
 @y
 if (e=".tex") or (e="") then show_context;
+print_ln; print("(Retry if file name is empty or CTRL-D to exit.");
+if (e<>"") then
+  begin
+    print(" Default file extension is `"); print(e); print("'");
+  end;
+print(")"); print_ln;
 @z
 
 @x [29.530] l.10258 - prompt_file_name: prevent empty filenames.
@@ -1362,9 +1370,17 @@
 if cur_ext="" then cur_ext:=e;
 @y
 saved_cur_name:=cur_name;
+saved_cur_ext:=cur_ext;
+saved_cur_area:=cur_area;
 clear_terminal; prompt_input(": "); @<Scan file name in the buffer@>;
-if cur_ext="" then cur_ext:=e;
-if length(cur_name)=0 then cur_name:=saved_cur_name;
+if (length(cur_name)=0) and (cur_ext="") and (cur_area="") then
+  begin
+    cur_name:=saved_cur_name;
+    cur_ext:=saved_cur_ext;
+    cur_area:=saved_cur_area;
+  end
+else
+  if cur_ext="" then cur_ext:=e;
 @z
 
 @x [29.532] l.10263 - avoid conflict, `logname' in <unistd.h> on some systems.




diff -u omegadir-orig/com16bit.ch omegadir/com16bit.ch
--- omegadir-orig/com16bit.ch	Tue Dec 19 10:35:50 2006
+++ omegadir/com16bit.ch	Sat Mar 17 20:44:41 2007
@@ -1348,12 +1348,20 @@
 @y
 var k:0..buf_size; {index into |buffer|}
 @!saved_cur_name:str_number; {to catch empty terminal input}
+@!saved_cur_ext:str_number; {to catch empty terminal input}
+@!saved_cur_area:str_number; {to catch empty terminal input}
 @z
 
 @x [29.530] l.10252 - prompt_file_name: No default extension is TeX input file.
 if e=".tex" then show_context;
 @y
 if (e=".tex") or (e="") then show_context;
+print_ln; print("(Retry if file name is empty or CTRL-D to exit.");
+if (e<>"") then
+  begin
+    print(" Default file extension is `"); print(e); print("'");
+  end;
+print(")"); print_ln;
 @z
 
 @x [29.530] l.10258 - prompt_file_name: prevent empty filenames.
@@ -1361,9 +1369,17 @@
 if cur_ext="" then cur_ext:=e;
 @y
 saved_cur_name:=cur_name;
+saved_cur_ext:=cur_ext;
+saved_cur_area:=cur_area;
 clear_terminal; prompt_input(": "); @<Scan file name in the buffer@>;
-if cur_ext="" then cur_ext:=e;
-if length(cur_name)=0 then cur_name:=saved_cur_name;
+if (length(cur_name)=0) and (cur_ext="") and (cur_area="") then
+  begin
+    cur_name:=saved_cur_name;
+    cur_ext:=saved_cur_ext;
+    cur_area:=saved_cur_area;
+  end
+else
+  if cur_ext="" then cur_ext:=e;
 @z
 
 @x [29.532] l.10263 - avoid conflict, `logname' in <unistd.h> on some systems.

From kakuto at fsci.fuk.kindai.ac.jp  Mon Jul  9 05:49:44 2007
From: kakuto at fsci.fuk.kindai.ac.jp (Akira Kakuto)
Date: Mon, 09 Jul 2007 12:49:44 +0900
Subject: [NTG-pdftex] 1.40.4 incoming
In-Reply-To: Your message of "Mon, 09 Jul 2007 12:08:25 +0900"
References: <200707090308.l6938QTR017662@jupiter.fsci.fuk.kindai.ac.jp>
Message-ID: <200707090349.l693ninw017878@jupiter.fsci.fuk.kindai.ac.jp>

Hi Martin,

> *** tex.ch.org	2006-12-19 02:35:49.000000000 +0100
> --- tex.ch	2007-03-07 17:08:49.000000000 +0100

Note that tex.ch has been changed since 2006-12-19.
Therefore you will need some manual work, sorry.

Best regards,
Akira

From kakuto at fsci.fuk.kindai.ac.jp  Mon Jul  9 08:14:59 2007
From: kakuto at fsci.fuk.kindai.ac.jp (Akira Kakuto)
Date: Mon, 09 Jul 2007 15:14:59 +0900
Subject: [NTG-pdftex] 1.40.4 incoming
In-Reply-To: Your message of "Mon, 09 Jul 2007 12:49:44 +0900"
References: <200707090349.l693ninw017878@jupiter.fsci.fuk.kindai.ac.jp>
Message-ID: <200707090615.l696F016018575@jupiter.fsci.fuk.kindai.ac.jp>

> > *** tex.ch.org	2006-12-19 02:35:49.000000000 +0100
> > --- tex.ch	2007-03-07 17:08:49.000000000 +0100
> 
> Note that tex.ch has been changed since 2006-12-19.
> Therefore you will need some manual work, sorry.

It was an unnecessary fear. I've checked that the patch
is still ok.

Best regards,
Akira

From taco at elvenkind.com  Mon Jul  9 08:52:44 2007
From: taco at elvenkind.com (Taco Hoekwater)
Date: Mon, 09 Jul 2007 08:52:44 +0200
Subject: [NTG-pdftex] 1.40.4 incoming
In-Reply-To: <68c491a60707081523j3adf691dma8e0cb97bb8e0191@mail.gmail.com>
References: <74f506dc0707081405w1b73f843xd1f80b40d3da3c96@mail.gmail.com>
	<68c491a60707081523j3adf691dma8e0cb97bb8e0191@mail.gmail.com>
Message-ID: <4691DB3C.3030008@elvenkind.com>

Martin Schr?der wrote:
> 2007/7/8, Thanh Han The <hanthethanh at gmail.com>:
>> On Sun, Jul 08, 2007 at 10:52:24PM +0200, Thanh Han The wrote:
>>> what about patch #813? It's rather straightforward and
>>> handy.
>> and also #812, if there is no further objection.
> 
> Both are in.
> While we are looking at patches, what about
> - 746 PromptFileName

You said you were waiting for discussion on tex-implementors
(or tex-live). Was there any of that?

Best,
Taco


From martin at oneiros.de  Mon Jul  9 12:04:30 2007
From: martin at oneiros.de (=?ISO-8859-1?Q?Martin_Schr=F6der?=)
Date: Mon, 9 Jul 2007 12:04:30 +0200
Subject: [NTG-pdftex] 1.40.4 incoming
In-Reply-To: <4691DB3C.3030008@elvenkind.com>
References: <74f506dc0707081405w1b73f843xd1f80b40d3da3c96@mail.gmail.com>
	<68c491a60707081523j3adf691dma8e0cb97bb8e0191@mail.gmail.com>
	<4691DB3C.3030008@elvenkind.com>
Message-ID: <68c491a60707090304x4fad984fm8daa5bcd425fa985@mail.gmail.com>

2007/7/9, Taco Hoekwater <taco at elvenkind.com>:
> You said you were waiting for discussion on tex-implementors
> (or tex-live). Was there any of that?

There was a long discussion on TL (you were part of it:), nothing on
tex-implementors that I remember. I think Karl summed it up nicely:

\begin{quote}
Since the simplest solution of aborting the job when RET is pressed does
not appeal to Taco and Hans, my suggestion is to apply Heiko's other
patch, so that it will retry with the exact name.  At least that will
avoid the reported bug of overwriting the input file, which seems pretty
important.  We could debate forever about ideal behavior.  Let's not.

Personally, I think it would also be very nice if CTRL-C in response to
enter a filename prompt did something other than retrying a file, but
(depressingly) I'm not prepared to implement it (again).
\end{quote}

Best
   Martin

From taco at elvenkind.com  Mon Jul  9 12:11:49 2007
From: taco at elvenkind.com (Taco Hoekwater)
Date: Mon, 09 Jul 2007 12:11:49 +0200
Subject: [NTG-pdftex] 1.40.4 incoming
In-Reply-To: <68c491a60707090304x4fad984fm8daa5bcd425fa985@mail.gmail.com>
References: <74f506dc0707081405w1b73f843xd1f80b40d3da3c96@mail.gmail.com>	<68c491a60707081523j3adf691dma8e0cb97bb8e0191@mail.gmail.com>	<4691DB3C.3030008@elvenkind.com>
	<68c491a60707090304x4fad984fm8daa5bcd425fa985@mail.gmail.com>
Message-ID: <469209E5.7050408@elvenkind.com>



Martin Schr?der wrote:
> 2007/7/9, Taco Hoekwater <taco at elvenkind.com>:
>> You said you were waiting for discussion on tex-implementors
>> (or tex-live). Was there any of that?
> 
> There was a long discussion on TL (you were part of it:), nothing on
> tex-implementors that I remember. I think Karl summed it up nicely:

Perhaps I am getting too old for this kind or work. :(
Thanks for the reminder,

Taco


From noreply at sarovar.org  Mon Jul  9 12:23:03 2007
From: noreply at sarovar.org (noreply at sarovar.org)
Date: Mon, 09 Jul 2007 15:53:03 +0530
Subject: [NTG-pdftex] [ pdftex-Patches-746 ] Patch PromptFileName
Message-ID: <E1I7qOV-00016X-00@sarovar.org>

Patches item #746, was opened at 2007-03-07 17:41
You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=495&aid=746&group_id=106

Category: User interaction
Group: v1.40.0
>Status: Closed
>Resolution: Accepted
Priority: 5
Submitted By: Heiko Oberdiek (oberdiek)
Assigned to: Martin Schr?der (oneiros)
Summary: Patch PromptFileName

Initial Comment:
Subject: Patch PromptFileName
Date: 2007/03/07
Author: Heiko Oberdiek

The patches are based on pdfTeX 1.40.3

There is some discussion in the tex-live list:
  List:    tex-live at tug.org
  Date:    March 2007
  Subject: Bug in TexLive 2005 and 2007? Non-writable
           aux-file
If TeX asks for a file name, what action should be
taken, if the user doesn't provide a file name?

The current behaviour has changed from Web2C 7.5.2
to 7.5.6 and is quite impredictible:
* Append some default extension if file extension
  is not given.
* Use previous file name part, if this part is empty.

Sometimes this behaves as "retry action" by chance,
sometimes a source file gets overwritten.

Two patches are provided that implement alternative
actions:
* Retry.diff
  If the user doesn't specify a file name, then
  the whole previous file name is used including
  the area and extension parts.
* Abort.diff
  If the user doesn't specify a file name, then
  the job is aborted. Unhappily Ctrl-C (or Ctrl-D)
  have only a retarded effect after the file name
  is used again (and eventually causing harm).
  This is a clean way to end the job even if there
  isn't a valid file name to provide.

Both files patches web2c/texk/tex.ch. Of course they
cannot be used at the same time.

And both patches also show the default name extension,
when the user is prompted for a file name.

Have fun,
  Heiko <oberdiek at uni-freiburg.de>


----------------------------------------------------------------------

>Comment By: Martin Schr?der (oneiros)
Date: 2007-07-09 12:23

Message:
Logged In: YES 
user_id=421

Retry.diff will be included in the next version (1.40.4/1.50.0).

----------------------------------------------------------------------

Comment By: Martin Schr?der (oneiros)
Date: 2007-03-10 23:57

Message:
Logged In: YES 
user_id=421

Both patches are interesting, but we should wait for further
discussion on tex-implementors etc.

----------------------------------------------------------------------

You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=495&aid=746&group_id=106

From martin at oneiros.de  Mon Jul  9 12:55:50 2007
From: martin at oneiros.de (=?ISO-8859-1?Q?Martin_Schr=F6der?=)
Date: Mon, 9 Jul 2007 12:55:50 +0200
Subject: [NTG-pdftex] 1.40.4 incoming
In-Reply-To: <200707090308.l6938QTR017662@jupiter.fsci.fuk.kindai.ac.jp>
References: <200707090308.l6938QTR017662@jupiter.fsci.fuk.kindai.ac.jp>
Message-ID: <68c491a60707090355o7bfc7899h562b4b52c28eea37@mail.gmail.com>

2007/7/9, Akira Kakuto <kakuto at fsci.fuk.kindai.ac.jp>:
> The latest version of 746 (retry), changed by Heiko himself, is the
> following.

I've applied it.

> This problem is related to all Web2C, so I've attached the corresponding
> changes for Aleph and Omega.

We don't trace Aleph & Omega in the pdftex-svn, so I'll apply the
changes when I push 1.40.4 upstream into TL (if I remember :).

Best
   Martin

From martin at oneiros.de  Mon Jul  9 14:01:57 2007
From: martin at oneiros.de (=?ISO-8859-1?Q?Martin_Schr=F6der?=)
Date: Mon, 9 Jul 2007 14:01:57 +0200
Subject: [NTG-pdftex] 1.40.4 incoming
In-Reply-To: <86tzsdal0x.fsf@lola.quinscape.zz>
References: <200707090308.l6938QTR017662@jupiter.fsci.fuk.kindai.ac.jp>
	<68c491a60707090355o7bfc7899h562b4b52c28eea37@mail.gmail.com>
	<86tzsdal0x.fsf@lola.quinscape.zz>
Message-ID: <68c491a60707090501s1de9fb05o280476a2a8d51df2@mail.gmail.com>

2007/7/9, David Kastrup <dak at gnu.org>:
> "Martin Schr?der" <martin at oneiros.de> writes:
> > We don't trace Aleph & Omega in the pdftex-svn,
>
> Does anybody actually trace them?  Would the following appear
> accurate?
>
> a) Aleph can be considered abandoned as long as nobody hears of
>    Giuseppe.  Is there a publicly accessible SCM, or is the last
>    tarball all that is there?

Not that I know of. Giuseppe is probably using luaTeX. :-)

> b) Omega, at the very least in versions likely to appear in TeXlive,
>    is not maintained anymore either.  There is presumably upstream
>    development in Brest, but "upstream" might be somewhat of a
>    misnomer as the pipes appear clogged, and Omega2-to-be would not
>    appear to be in a state fit for general consumption.

Yes. No bugfixes (these were in aleph and are now probably in luaTeX),
and Yannis is using luaTeX. Omega2 will run on Hurd. :-)

> Since in both cases the upstream connection appears to have dried up,
> it would seem reasonable to apply "obvious fixes" to TeXlive?

Yes. Do you want to maintain them?

Best
   Martin

From dak at gnu.org  Mon Jul  9 13:12:14 2007
From: dak at gnu.org (David Kastrup)
Date: Mon, 09 Jul 2007 13:12:14 +0200
Subject: [NTG-pdftex] 1.40.4 incoming
In-Reply-To: <68c491a60707090355o7bfc7899h562b4b52c28eea37@mail.gmail.com>
	("Martin =?iso-8859-1?Q?Schr=F6der=22's?= message of "Mon\, 9 Jul 2007
	12\:55\:50 +0200")
References: <200707090308.l6938QTR017662@jupiter.fsci.fuk.kindai.ac.jp>
	<68c491a60707090355o7bfc7899h562b4b52c28eea37@mail.gmail.com>
Message-ID: <86tzsdal0x.fsf@lola.quinscape.zz>

"Martin Schr?der" <martin at oneiros.de> writes:

> 2007/7/9, Akira Kakuto <kakuto at fsci.fuk.kindai.ac.jp>:
>> The latest version of 746 (retry), changed by Heiko himself, is the
>> following.
>
> I've applied it.
>
>> This problem is related to all Web2C, so I've attached the corresponding
>> changes for Aleph and Omega.
>
> We don't trace Aleph & Omega in the pdftex-svn,

Does anybody actually trace them?  Would the following appear
accurate?

a) Aleph can be considered abandoned as long as nobody hears of
   Giuseppe.  Is there a publicly accessible SCM, or is the last
   tarball all that is there?

b) Omega, at the very least in versions likely to appear in TeXlive,
   is not maintained anymore either.  There is presumably upstream
   development in Brest, but "upstream" might be somewhat of a
   misnomer as the pipes appear clogged, and Omega2-to-be would not
   appear to be in a state fit for general consumption.

Since in both cases the upstream connection appears to have dried up,
it would seem reasonable to apply "obvious fixes" to TeXlive?

> so I'll apply the changes when I push 1.40.4 upstream into TL (if I
> remember :).

At some point of time, we might phase out all of that stuff from
TeXlive.  Probably after a user poll and after LuaTeX has reached some
stability.

-- 
David Kastrup

From taco at elvenkind.com  Mon Jul  9 15:49:23 2007
From: taco at elvenkind.com (Taco Hoekwater)
Date: Mon, 09 Jul 2007 15:49:23 +0200
Subject: [NTG-pdftex] 1.40.4 incoming
In-Reply-To: <68c491a60707090501s1de9fb05o280476a2a8d51df2@mail.gmail.com>
References: <200707090308.l6938QTR017662@jupiter.fsci.fuk.kindai.ac.jp>	<68c491a60707090355o7bfc7899h562b4b52c28eea37@mail.gmail.com>	<86tzsdal0x.fsf@lola.quinscape.zz>
	<68c491a60707090501s1de9fb05o280476a2a8d51df2@mail.gmail.com>
Message-ID: <46923CE3.8000703@elvenkind.com>



Martin Schr?der wrote:
>>
>> a) Aleph can be considered abandoned as long as nobody hears of
>>    Giuseppe.  Is there a publicly accessible SCM, or is the last
>>    tarball all that is there?
> 
> Not that I know of. Giuseppe is probably using luaTeX. :-)

Last I heard from Giuseppe, he has no intention of working on Aleph
any more. fwiw, the current TeXlive sources are leading (rc4).

I have about a dozen or so Aleph bugfixes in luatex that *should* be
backported, but I am not in the least interested in doing that, as
it seems nobody really cares about Aleph any more anyway.

Cheers,
Taco


From dak at gnu.org  Mon Jul  9 15:55:48 2007
From: dak at gnu.org (David Kastrup)
Date: Mon, 09 Jul 2007 15:55:48 +0200
Subject: [NTG-pdftex] 1.40.4 incoming
In-Reply-To: <46923CE3.8000703@elvenkind.com> (Taco Hoekwater's message of
	"Mon\, 09 Jul 2007 15\:49\:23 +0200")
References: <200707090308.l6938QTR017662@jupiter.fsci.fuk.kindai.ac.jp>
	<68c491a60707090355o7bfc7899h562b4b52c28eea37@mail.gmail.com>
	<86tzsdal0x.fsf@lola.quinscape.zz>
	<68c491a60707090501s1de9fb05o280476a2a8d51df2@mail.gmail.com>
	<46923CE3.8000703@elvenkind.com>
Message-ID: <86myy54r6j.fsf@lola.quinscape.zz>

Taco Hoekwater <taco at elvenkind.com> writes:

> Martin Schr?der wrote:
>>>
>>> a) Aleph can be considered abandoned as long as nobody hears of
>>>    Giuseppe.  Is there a publicly accessible SCM, or is the last
>>>    tarball all that is there?
>> 
>> Not that I know of. Giuseppe is probably using luaTeX. :-)
>
> Last I heard from Giuseppe, he has no intention of working on Aleph
> any more. fwiw, the current TeXlive sources are leading (rc4).
>
> I have about a dozen or so Aleph bugfixes in luatex that *should* be
> backported, but I am not in the least interested in doing that, as
> it seems nobody really cares about Aleph any more anyway.

If nobody cares about Aleph anymore, we should probably remove it from
TeXlive altogether.  Same for Omega/Lambda/Lamed/Ctulhu (or what the
Aleph version of ConTeXt was called).  If someone complains during the
TeXlive2008 beta phase, one can still ponder resurrecting them.

I am not actually sure that no _users_ care about those, however, even
though it is pretty clear that the developers have more or less gone.

-- 
David Kastrup

From kakuto at fsci.fuk.kindai.ac.jp  Mon Jul  9 16:05:43 2007
From: kakuto at fsci.fuk.kindai.ac.jp (Akira Kakuto)
Date: Mon, 09 Jul 2007 23:05:43 +0900
Subject: [NTG-pdftex] 1.40.4 incoming
In-Reply-To: Your message of "Mon, 9 Jul 2007 12:55:50 +0200"
References: <68c491a60707090355o7bfc7899h562b4b52c28eea37@mail.gmail.com>
Message-ID: <200707091405.l69E5iIF020834@jupiter.fsci.fuk.kindai.ac.jp>

Hi Martin,

> > The latest version of 746 (retry), changed by Heiko himself, is the
> > following.
> 
> I've applied it.

Thanks very much. However you have applied the original one.
Heiko had updated, according to the opinion by Karl,
as follows (patch to the one in the pdftex svn):

Best regards,
Akira


--- tex.ch.orig	Mon Jul 09 19:43:46 2007
+++ tex.ch	Mon Jul 09 22:56:15 2007
@@ -2218,7 +2218,7 @@
 if e=".tex" then show_context;
 @y
 if (e=".tex") or (e="") then show_context;
-print_ln; print("(Retry if file name is empty.");
+print_ln; print("(Retry if file name is empty or CTRL-D to exit.");
 if (e<>"") then
   begin
     print(" Default file extension is `"); print(e); print("'");

From dak at gnu.org  Mon Jul  9 16:17:55 2007
From: dak at gnu.org (David Kastrup)
Date: Mon, 09 Jul 2007 16:17:55 +0200
Subject: [NTG-pdftex] 1.40.4 incoming
In-Reply-To: <200707091405.l69E5iIF020834@jupiter.fsci.fuk.kindai.ac.jp>
	(Akira Kakuto's message of "Mon\, 09 Jul 2007 23\:05\:43 +0900")
References: <68c491a60707090355o7bfc7899h562b4b52c28eea37@mail.gmail.com>
	<200707091405.l69E5iIF020834@jupiter.fsci.fuk.kindai.ac.jp>
Message-ID: <86644t4q5o.fsf@lola.quinscape.zz>

Akira Kakuto <kakuto at fsci.fuk.kindai.ac.jp> writes:

> Hi Martin,
>
>> > The latest version of 746 (retry), changed by Heiko himself, is the
>> > following.
>> 
>> I've applied it.
>
> Thanks very much. However you have applied the original one.
> Heiko had updated, according to the opinion by Karl,
> as follows (patch to the one in the pdftex svn):
>
> Best regards,
> Akira
>
>
> --- tex.ch.orig	Mon Jul 09 19:43:46 2007
> +++ tex.ch	Mon Jul 09 22:56:15 2007
> @@ -2218,7 +2218,7 @@
>  if e=".tex" then show_context;
>  @y
>  if (e=".tex") or (e="") then show_context;
> -print_ln; print("(Retry if file name is empty.");
> +print_ln; print("(Retry if file name is empty or CTRL-D to exit.");
>  if (e<>"") then
>    begin
>      print(" Default file extension is `"); print(e); print("'");

Uh, isn't EOF operating-system dependent?  Like C-z on Microsoft
Systems?

-- 
David Kastrup

From martin at oneiros.de  Mon Jul  9 16:31:09 2007
From: martin at oneiros.de (=?ISO-8859-1?Q?Martin_Schr=F6der?=)
Date: Mon, 9 Jul 2007 16:31:09 +0200
Subject: [NTG-pdftex] 1.40.4 incoming
In-Reply-To: <200707091405.l69E5iIF020834@jupiter.fsci.fuk.kindai.ac.jp>
References: <68c491a60707090355o7bfc7899h562b4b52c28eea37@mail.gmail.com>
	<200707091405.l69E5iIF020834@jupiter.fsci.fuk.kindai.ac.jp>
Message-ID: <68c491a60707090731p7537c48cs754661f8893c1021@mail.gmail.com>

2007/7/9, Akira Kakuto <kakuto at fsci.fuk.kindai.ac.jp>:
> Thanks very much. However you have applied the original one.
> Heiko had updated, according to the opinion by Karl,
> as follows (patch to the one in the pdftex svn):

Thanks for spotting this. Fixed. :-)

Best
   Martin

From P.Taylor at Rhul.Ac.Uk  Mon Jul  9 16:32:24 2007
From: P.Taylor at Rhul.Ac.Uk (Philip Taylor (Webmaster))
Date: Mon, 09 Jul 2007 15:32:24 +0100
Subject: [NTG-pdftex] 1.40.4 incoming
In-Reply-To: <86644t4q5o.fsf@lola.quinscape.zz>
References: <68c491a60707090355o7bfc7899h562b4b52c28eea37@mail.gmail.com>	<200707091405.l69E5iIF020834@jupiter.fsci.fuk.kindai.ac.jp>
	<86644t4q5o.fsf@lola.quinscape.zz>
Message-ID: <469246F8.8030907@Rhul.Ac.Uk>



David Kastrup wrote:

> Akira Kakuto <kakuto at fsci.fuk.kindai.ac.jp> writes:

>> -print_ln; print("(Retry if file name is empty.");
>> +print_ln; print("(Retry if file name is empty or CTRL-D to exit.");

Are these meant to be instructions to the user,
or statements of intended action ?  If (as I suspect) they
are instructions to the user, then (IMHO) they should be
phrased as such : I suggest --

	print_ln; print ("Enter the null string to re-try, or <eof> to exit");

Philip Taylor

From kakuto at fsci.fuk.kindai.ac.jp  Mon Jul  9 16:38:36 2007
From: kakuto at fsci.fuk.kindai.ac.jp (Akira Kakuto)
Date: Mon, 09 Jul 2007 23:38:36 +0900
Subject: [NTG-pdftex] 1.40.4 incoming
In-Reply-To: Your message of "Mon, 09 Jul 2007 16:17:55 +0200"
References: <86644t4q5o.fsf@lola.quinscape.zz>
Message-ID: <200707091438.l69Ecb0Y021031@jupiter.fsci.fuk.kindai.ac.jp>

Hi David,

> > --- tex.ch.orig	Mon Jul 09 19:43:46 2007
> > +++ tex.ch	Mon Jul 09 22:56:15 2007
> > @@ -2218,7 +2218,7 @@
> >  if e=".tex" then show_context;
> >  @y
> >  if (e=".tex") or (e="") then show_context;
> > -print_ln; print("(Retry if file name is empty.");
> > +print_ln; print("(Retry if file name is empty or CTRL-D to exit.");
> >  if (e<>"") then
> >    begin
> >      print(" Default file extension is `"); print(e); print("'");
> 
> Uh, isn't EOF operating-system dependent?  Like C-z on Microsoft
> Systems?

I'll apply the following ctrld-ctrlz.ch for Windows:

@x
print_ln; print("(Retry if file name is empty or CTRL-D to exit.");
@y
print_ln; print("(Retry if file name is empty or CTRL-Z + Enter to exit.");
@z

Thanks,
Akira

From dak at gnu.org  Mon Jul  9 14:24:51 2007
From: dak at gnu.org (David Kastrup)
Date: Mon, 09 Jul 2007 14:24:51 +0200
Subject: [NTG-pdftex] 1.40.4 incoming
In-Reply-To: <68c491a60707090501s1de9fb05o280476a2a8d51df2@mail.gmail.com>
	("Martin =?iso-8859-1?Q?Schr=F6der=22's?= message of "Mon\, 9 Jul 2007
	14\:01\:57 +0200")
References: <200707090308.l6938QTR017662@jupiter.fsci.fuk.kindai.ac.jp>
	<68c491a60707090355o7bfc7899h562b4b52c28eea37@mail.gmail.com>
	<86tzsdal0x.fsf@lola.quinscape.zz>
	<68c491a60707090501s1de9fb05o280476a2a8d51df2@mail.gmail.com>
Message-ID: <86abu5933g.fsf@lola.quinscape.zz>

"Martin Schr?der" <martin at oneiros.de> writes:

> 2007/7/9, David Kastrup <dak at gnu.org>:
>> "Martin Schr?der" <martin at oneiros.de> writes:
>> > We don't trace Aleph & Omega in the pdftex-svn,
>>
>> Does anybody actually trace them?  Would the following appear
>> accurate?
>>
>> a) Aleph can be considered abandoned as long as nobody hears of
>>    Giuseppe.  Is there a publicly accessible SCM, or is the last
>>    tarball all that is there?
>
> Not that I know of. Giuseppe is probably using luaTeX. :-)

Not sure about that.  I seem to remember that Giuseppe was not
actually using Aleph, either.  He just provided it.  I might be
mistaken about that, however.

>> b) Omega, at the very least in versions likely to appear in TeXlive,
>>    is not maintained anymore either.  There is presumably upstream
>>    development in Brest, but "upstream" might be somewhat of a
>>    misnomer as the pipes appear clogged, and Omega2-to-be would not
>>    appear to be in a state fit for general consumption.
>
> Yes. No bugfixes (these were in aleph and are now probably in
> luaTeX), and Yannis is using luaTeX.

Hm.  What will happen with G?bor Bella's work then?

> Omega2 will run on Hurd. :-)

<URL:http://www.debian.org/ports/hurd/hurd-install>

I doubt that Omega2 is in the package list yet.

>> Since in both cases the upstream connection appears to have dried
>> up, it would seem reasonable to apply "obvious fixes" to TeXlive?
>
> Yes. Do you want to maintain them?

I am afraid that I already do a bad enough job maintaining my existing
projects.

-- 
David Kastrup

From kakuto at fsci.fuk.kindai.ac.jp  Tue Jul 10 02:57:18 2007
From: kakuto at fsci.fuk.kindai.ac.jp (Akira Kakuto)
Date: Tue, 10 Jul 2007 09:57:18 +0900
Subject: [NTG-pdftex] 1.40.4 incoming
In-Reply-To: Your message of "Mon, 09 Jul 2007 23:38:36 +0900"
References: <200707091438.l69Ecb0Y021031@jupiter.fsci.fuk.kindai.ac.jp>
Message-ID: <200707100057.l6A0vJxT022625@jupiter.fsci.fuk.kindai.ac.jp>

> > Uh, isn't EOF operating-system dependent?  Like C-z on Microsoft
> > Systems?
> 
> I'll apply the following ctrld-ctrlz.ch for Windows:
> 
> @x
> print_ln; print("(Retry if file name is empty or CTRL-D to exit.");
> @y
> print_ln; print("(Retry if file name is empty or CTRL-Z + Enter to exit.");
> @z

In this case, we may not be able to use the common
pool files. Is EOF by Philip Taylor better?

Best regards,
Akira

From oberdiek at uni-freiburg.de  Tue Jul 10 08:13:10 2007
From: oberdiek at uni-freiburg.de (Heiko Oberdiek)
Date: Tue, 10 Jul 2007 08:13:10 +0200
Subject: [NTG-pdftex] 1.40.4 incoming
In-Reply-To: <200707100057.l6A0vJxT022625@jupiter.fsci.fuk.kindai.ac.jp>
References: <200707091438.l69Ecb0Y021031@jupiter.fsci.fuk.kindai.ac.jp>
	<200707100057.l6A0vJxT022625@jupiter.fsci.fuk.kindai.ac.jp>
Message-ID: <20070710061309.GA4466@irwin.vpn.uni-freiburg.de>

On Tue, Jul 10, 2007 at 09:57:18AM +0900, Akira Kakuto wrote:

> > > Uh, isn't EOF operating-system dependent?  Like C-z on Microsoft
> > > Systems?
> > 
> > I'll apply the following ctrld-ctrlz.ch for Windows:
> > 
> > @x
> > print_ln; print("(Retry if file name is empty or CTRL-D to exit.");
> > @y
> > print_ln; print("(Retry if file name is empty or CTRL-Z + Enter to exit.");
> > @z
> 
> In this case, we may not be able to use the common
> pool files. 

A dummy string might be inserted so that the pool file
contains both string variants.

> Is EOF by Philip Taylor better?

I doubt that many users will know which keys to press.

Yours sincerely
  Heiko <oberdiek at uni-freiburg.de>
-- 

From taco at elvenkind.com  Tue Jul 10 08:42:57 2007
From: taco at elvenkind.com (Taco Hoekwater)
Date: Tue, 10 Jul 2007 08:42:57 +0200
Subject: [NTG-pdftex] 1.40.4 incoming
In-Reply-To: <20070710061309.GA4466@irwin.vpn.uni-freiburg.de>
References: <200707091438.l69Ecb0Y021031@jupiter.fsci.fuk.kindai.ac.jp>	<200707100057.l6A0vJxT022625@jupiter.fsci.fuk.kindai.ac.jp>
	<20070710061309.GA4466@irwin.vpn.uni-freiburg.de>
Message-ID: <46932A71.2060704@elvenkind.com>

Heiko Oberdiek wrote:
> On Tue, Jul 10, 2007 at 09:57:18AM +0900, Akira Kakuto wrote:
> 
>>>> Uh, isn't EOF operating-system dependent?  Like C-z on Microsoft
>>>> Systems?
>>> I'll apply the following ctrld-ctrlz.ch for Windows:
>>>
>>> @x
>>> print_ln; print("(Retry if file name is empty or CTRL-D to exit.");
>>> @y
>>> print_ln; print("(Retry if file name is empty or CTRL-Z + Enter to exit.");
>>> @z
>> In this case, we may not be able to use the common
>> pool files. 
> 
> A dummy string might be inserted so that the pool file
> contains both string variants.

I vote for Phil's approach. I suspect most of the people that do
not know how to generate an EOF in the console will not understand
the key press reference either.

Besides, tricks like dummy strings tend to lead to bugs in the years
to come. (said as the person who just spend a whole day figuring out
that the weird "file_name_size=maxint" statement in tex.ch is part
of a trick to simplify openclose.c as it forces the "namelength" var
to be of the correct allocation size).

Best wishes,
Taco

From martin at oneiros.de  Tue Jul 10 11:13:00 2007
From: martin at oneiros.de (=?ISO-8859-1?Q?Martin_Schr=F6der?=)
Date: Tue, 10 Jul 2007 11:13:00 +0200
Subject: [NTG-pdftex] 1.40.4 incoming
In-Reply-To: <20070710061309.GA4466@irwin.vpn.uni-freiburg.de>
References: <200707091438.l69Ecb0Y021031@jupiter.fsci.fuk.kindai.ac.jp>
	<200707100057.l6A0vJxT022625@jupiter.fsci.fuk.kindai.ac.jp>
	<20070710061309.GA4466@irwin.vpn.uni-freiburg.de>
Message-ID: <68c491a60707100213h267f79bdpc810e2f18868bbdd@mail.gmail.com>

2007/7/10, Heiko Oberdiek <oberdiek at uni-freiburg.de>:
> On Tue, Jul 10, 2007 at 09:57:18AM +0900, Akira Kakuto wrote:
> > In this case, we may not be able to use the common
> > pool files.
>
> A dummy string might be inserted so that the pool file
> contains both string variants.

Patch?

Best
   Martin

From martin at oneiros.de  Tue Jul 10 12:15:34 2007
From: martin at oneiros.de (=?ISO-8859-1?Q?Martin_Schr=F6der?=)
Date: Tue, 10 Jul 2007 12:15:34 +0200
Subject: [NTG-pdftex] 1.40.4 incoming
In-Reply-To: <46932A71.2060704@elvenkind.com>
References: <200707091438.l69Ecb0Y021031@jupiter.fsci.fuk.kindai.ac.jp>
	<200707100057.l6A0vJxT022625@jupiter.fsci.fuk.kindai.ac.jp>
	<20070710061309.GA4466@irwin.vpn.uni-freiburg.de>
	<46932A71.2060704@elvenkind.com>
Message-ID: <68c491a60707100315q25793241y8f78eb6065906134@mail.gmail.com>

2007/7/10, Taco Hoekwater <taco at elvenkind.com>:
> I vote for Phil's approach. I suspect most of the people that do
> not know how to generate an EOF in the console will not understand
> the key press reference either.
>
> Besides, tricks like dummy strings tend to lead to bugs in the years
> to come. (said as the person who just spend a whole day figuring out
> that the weird "file_name_size=maxint" statement in tex.ch is part
> of a trick to simplify openclose.c as it forces the "namelength" var
> to be of the correct allocation size).

Agreed. KISS :-)

Best
   Martin

From kakuto at fsci.fuk.kindai.ac.jp  Tue Jul 10 16:21:08 2007
From: kakuto at fsci.fuk.kindai.ac.jp (Akira Kakuto)
Date: Tue, 10 Jul 2007 23:21:08 +0900
Subject: [NTG-pdftex] 1.40.4 incoming
In-Reply-To: Your message of "Tue, 10 Jul 2007 12:15:34 +0200"
References: <68c491a60707100315q25793241y8f78eb6065906134@mail.gmail.com>
Message-ID: <200707101421.l6AEL8ox026160@jupiter.fsci.fuk.kindai.ac.jp>

> 2007/7/10, Taco Hoekwater <taco at elvenkind.com>:
> > I vote for Phil's approach. I suspect most of the people that do
> > not know how to generate an EOF in the console will not understand
> > the key press reference either.
> >
> > Besides, tricks like dummy strings tend to lead to bugs in the years
> > to come. (said as the person who just spend a whole day figuring out
> > that the weird "file_name_size=maxint" statement in tex.ch is part
> > of a trick to simplify openclose.c as it forces the "namelength" var
> > to be of the correct allocation size).
> 
> Agreed. KISS :-)

luaTeX does not use tex.ch. For Taco's convenience,
I've tried to make a patch:

Best regards,
Akira


--- luatex.ch.orig	Mon Jul 09 20:34:16 2007
+++ luatex.ch	Tue Jul 10 23:13:12 2007
@@ -1404,12 +1404,20 @@
 @y
 var k:0..buf_size; {index into |buffer|}
 @!saved_cur_name:str_number; {to catch empty terminal input}
+@!saved_cur_ext:str_number; {to catch empty terminal input}
+@!saved_cur_area:str_number; {to catch empty terminal input}
 @z
 
 @x
 if e=".tex" then show_context;
 @y
 if (e=".tex") or (e="") then show_context;
+print_ln; print("(Enter the null string to re-try, or <eof> to exit");
+if (e<>"") then
+  begin
+    print(" Default file extension is `"); print(e); print("'");
+  end;
+print(")"); print_ln;
 @z
 
 @x
@@ -1417,9 +1425,17 @@
 if cur_ext="" then cur_ext:=e;
 @y
 saved_cur_name:=cur_name;
+saved_cur_ext:=cur_ext;
+saved_cur_area:=cur_area;
 clear_terminal; prompt_input(": "); @<Scan file name in the buffer@>;
-if cur_ext="" then cur_ext:=e;
-if length(cur_name)=0 then cur_name:=saved_cur_name;
+if (length(cur_name)=0) and (cur_ext="") and (cur_area="") then
+  begin
+    cur_name:=saved_cur_name;
+    cur_ext:=saved_cur_ext;
+    cur_area:=saved_cur_area;
+  end
+else
+  if cur_ext="" then cur_ext:=e;
 @z
 
 @x

From oberdiek at uni-freiburg.de  Tue Jul 10 18:24:26 2007
From: oberdiek at uni-freiburg.de (Heiko Oberdiek)
Date: Tue, 10 Jul 2007 18:24:26 +0200
Subject: [NTG-pdftex] 1.40.4 incoming
In-Reply-To: <46932A71.2060704@elvenkind.com>
References: <200707091438.l69Ecb0Y021031@jupiter.fsci.fuk.kindai.ac.jp>
	<200707100057.l6A0vJxT022625@jupiter.fsci.fuk.kindai.ac.jp>
	<20070710061309.GA4466@irwin.vpn.uni-freiburg.de>
	<46932A71.2060704@elvenkind.com>
Message-ID: <20070710162426.GA3777@irwin.vpn.uni-freiburg.de>

On Tue, Jul 10, 2007 at 08:42:57AM +0200, Taco Hoekwater wrote:

> Heiko Oberdiek wrote:
> > On Tue, Jul 10, 2007 at 09:57:18AM +0900, Akira Kakuto wrote:
> > 
> >>>> Uh, isn't EOF operating-system dependent?  Like C-z on Microsoft
> >>>> Systems?
> >>> I'll apply the following ctrld-ctrlz.ch for Windows:
> >>>
> >>> @x
> >>> print_ln; print("(Retry if file name is empty or CTRL-D to exit.");
> >>> @y
> >>> print_ln; print("(Retry if file name is empty or CTRL-Z + Enter to exit.");
> >>> @z
> >> In this case, we may not be able to use the common
> >> pool files. 
> > 
> > A dummy string might be inserted so that the pool file
> > contains both string variants.
> 
> I vote for Phil's approach. I suspect most of the people that do
> not know how to generate an EOF in the console will not understand
> the key press reference either.

Yes, there are people who don't understand "CTRL" or "Enter",
but I wouldn't want to recommend TeX for them.

> Besides, tricks like dummy strings tend to lead to bugs in the years
> to come. (said as the person who just spend a whole day figuring out
> that the weird "file_name_size=maxint" statement in tex.ch is part
> of a trick to simplify openclose.c as it forces the "namelength" var
> to be of the correct allocation size).

The solution is simple, just make the string more informative.
Example:
  Leave the file name empty to re-try,
  or enter <eof> (Unix: CTRL-D, Windows: CTRL-Z + Enter) to exit.

Yours sincerely
  Heiko <oberdiek at uni-freiburg.de>
-- 

From gnwiii at gmail.com  Tue Jul 10 19:07:19 2007
From: gnwiii at gmail.com (George N. White III)
Date: Tue, 10 Jul 2007 14:07:19 -0300
Subject: [NTG-pdftex] 1.40.4 incoming
In-Reply-To: <68c491a60707070942h6da3b170gad38daf787efce27@mail.gmail.com>
References: <68c491a60707070614x717f2ff4l7f33c8ded6f271c6@mail.gmail.com>
	<22af238a0707070857o4ffffb47i7bca4a259e6d74b3@mail.gmail.com>
	<68c491a60707070942h6da3b170gad38daf787efce27@mail.gmail.com>
Message-ID: <22af238a0707101007o458edd51vea80c0979c621174@mail.gmail.com>

On 7/7/07, Martin Schr?der <martin at oneiros.de> wrote:

small problem with SGI compilers, and I still don't understand finding
strsep -- see below

As for the prompt question -- a generic prompt as suggest by Philip Taylor is
much better than something system-dependent.  The same problem should
lead to the same google search on all platforms so we don't end up with 2
FAQ entries for the same underlying problem.

> 2007/7/7, George N. White III <gnwiii at gmail.com>:
> > I (slightly) abused your build.sh configuration by compiling with -std=c99 on
> > Fedora Release 7 (i686, gcc (GCC) 4.1.2 20070502 (Red Hat 4.1.2-12)) and
> > using system libraries (fewer chances for the compile to fail and less time to
> > compile):
>
> Not that it should make a difference, but does the standard build.sh work?
>
> I have no problems with OpenSUSE 10.1 (gcc (GCC) 4.1.0 (SUSE Linux))
> and 10.2 (gcc (GCC) 4.1.2 20061115 (prerelease) (SUSE Linux)) and
> -std=c99 -Wall.

debian stable with "-std=c99 -march=i686 -Wall" gives the same error
as Fedora.
Either "-std=g99 .." or "-std=c99 -D_BSD_SOURCE" works.  Following the
definition of strsep thru the header files and glibc sources is like those games
where you get lost in a maze of twisty-turny passages.  Google found some cases
where people gave up trying to get configure to find strsep reliably
and just coded
around it.

Meanwhile, SGI Irix 6.5 complains about:

cc-1282 CC: ERROR File = ../../../../src/libs/xpdf/goo/GString.cc, Line = 531
  More than one instance of overloaded function "pow" matches the argument list.

            Function symbol function "std::pow(long double, int)" is ambiguous
                      by inheritance.
            Function symbol function "std::pow(double, int)" is ambiguous by
                      inheritance.
            Function symbol function "std::pow(float, int)" is ambiguous by
                      inheritance.
            The argument types are:  (int, int).
    x = floor(x * pow(10, prec) + 0.5);
                  ^

1 error detected in the compilation of
"../../../../src/libs/xpdf/goo/GString.cc".
gmake[1]: *** [GString.o] Error 2

I changed this to an explicit cast to double.  The result seems to work
(builds formats, processes story.tex and sample2e.tex).


-- 
George N. White III <aa056 at chebucto.ns.ca>
Head of St. Margarets Bay, Nova Scotia

From gnwiii at gmail.com  Tue Jul 10 19:23:24 2007
From: gnwiii at gmail.com (George N. White III)
Date: Tue, 10 Jul 2007 14:23:24 -0300
Subject: [NTG-pdftex] 1.40.4 incoming
In-Reply-To: <20070710162426.GA3777@irwin.vpn.uni-freiburg.de>
References: <200707091438.l69Ecb0Y021031@jupiter.fsci.fuk.kindai.ac.jp>
	<200707100057.l6A0vJxT022625@jupiter.fsci.fuk.kindai.ac.jp>
	<20070710061309.GA4466@irwin.vpn.uni-freiburg.de>
	<46932A71.2060704@elvenkind.com>
	<20070710162426.GA3777@irwin.vpn.uni-freiburg.de>
Message-ID: <22af238a0707101023ubb5b153ncfc0f430e12cb97c@mail.gmail.com>

On 7/10/07, Heiko Oberdiek <oberdiek at uni-freiburg.de> wrote:

> The solution is simple, just make the string more informative.
> Example:
>   Leave the file name empty to re-try,
>   or enter <eof> (Unix: CTRL-D, Windows: CTRL-Z + Enter) to exit.

Then you have to explain that linux uses unix <eof> -- maybe

"Leave the file name empty to re-try, or type the end-of-file code for
your platform to exit."

Goggle for "windows end-of-file" got a bunch of hits that mention
using <Ctrl-Z>.
Goggle for "linux end-of-file" got a bunch of hits that mention using <Ctrl-D>.
Goggle for "unix end-of-file" got a a few of hits that mention using <Ctrl-D>
Goggle for "OS X end-of-file" doesn't appear to be helpful!

-- 
George N. White III <aa056 at chebucto.ns.ca>
Head of St. Margarets Bay, Nova Scotia

From Philip-and-LeKhanh at Royal-Tunbridge-Wells.Org  Tue Jul 10 09:27:57 2007
From: Philip-and-LeKhanh at Royal-Tunbridge-Wells.Org (Philip TAYLOR)
Date: Tue, 10 Jul 2007 08:27:57 +0100
Subject: [NTG-pdftex] 1.40.4 incoming
In-Reply-To: <20070710061309.GA4466@irwin.vpn.uni-freiburg.de>
References: <200707091438.l69Ecb0Y021031@jupiter.fsci.fuk.kindai.ac.jp>	<200707100057.l6A0vJxT022625@jupiter.fsci.fuk.kindai.ac.jp>
	<20070710061309.GA4466@irwin.vpn.uni-freiburg.de>
Message-ID: <469334FD.8070700@Royal-Tunbridge-Wells.Org>

My point was more that it should be phrased
as an instruction rather than an observation,
e.g.,

	"Press ... to ..., or ... to ..."

		or

	"Enter ... to ..., or ... to ..."

** Phil.
--------
Heiko Oberdiek wrote:
> On Tue, Jul 10, 2007 at 09:57:18AM +0900, Akira Kakuto wrote:

>> Is EOF by Philip Taylor better?
> 
> I doubt that many users will know which keys to press.
> 
> Yours sincerely
>   Heiko <oberdiek at uni-freiburg.de>

From hanthethanh at gmail.com  Fri Jul 13 08:29:25 2007
From: hanthethanh at gmail.com (Thanh Han The)
Date: Fri, 13 Jul 2007 08:29:25 +0200
Subject: [NTG-pdftex] Xpdf 3.02 security hole (fwd)
Message-ID: <74f506dc0707122329s13212da6k244c793d5e3a660c@mail.gmail.com>

----- Forwarded message from "Derek B. Noonburg" <derekn at foolabs.com> -----

> From: "Derek B. Noonburg" <derekn at foolabs.com>
> Date: Thu, 12 Jul 2007 16:19:10 -0700 (PDT)
> To: than at redhat.com, var at sgi.com, mike at easysw.com, secalert at redhat.com,
> 	security at gentoo.org, security at kde.org, ludwig.nussel at suse.de,
> 	hanthethanh at gmail.com, Fabrice.Popineau at supelec.fr
> cc: derekn at foolabs.com
> Subject: Xpdf 3.02 security hole
>
> A security hole in Xpdf 3.02 has been reported.  I'm attaching the patch
> file.  I'm currently expecting this to be disclosed early next week.
>
> - Derek

> *** xpdf-3.02-orig/xpdf/Stream.cc	Tue Feb 27 14:05:52 2007
> --- xpdf-3.02/xpdf/Stream.cc	Thu Jul 12 15:55:49 2007
> ***************
> *** 410,424 ****
>     ok = gFalse;
>
>     nVals = width * nComps;
> -   if (width <= 0 || nComps <= 0 || nBits <= 0 ||
> -       nComps >= INT_MAX / nBits ||
> -       width >= INT_MAX / nComps / nBits ||
> -       nVals * nBits + 7 < 0) {
> -     return;
> -   }
>     pixBytes = (nComps * nBits + 7) >> 3;
>     rowBytes = ((nVals * nBits + 7) >> 3) + pixBytes;
> !   if (rowBytes <= 0) {
>       return;
>     }
>     predLine = (Guchar *)gmalloc(rowBytes);
> --- 410,423 ----
>     ok = gFalse;
>
>     nVals = width * nComps;
>     pixBytes = (nComps * nBits + 7) >> 3;
>     rowBytes = ((nVals * nBits + 7) >> 3) + pixBytes;
> !   if (width <= 0 || nComps <= 0 || nBits <= 0 ||
> !       nComps > gfxColorMaxComps ||
> !       nBits > 16 ||
> !       nVals <= 0 ||
> !       nVals * nBits + 7 <= 0 ||
> !       rowBytes <= 0) {
>       return;
>     }
>     predLine = (Guchar *)gmalloc(rowBytes);


----- End forwarded message -----

From hanthethanh at gmail.com  Fri Jul 13 14:35:41 2007
From: hanthethanh at gmail.com (Thanh Han The)
Date: Fri, 13 Jul 2007 14:35:41 +0200
Subject: [NTG-pdftex] Xpdf 3.02 security hole (fwd)
Message-ID: <74f506dc0707130535q3fbb5fc5s985d861bfb022a8@mail.gmail.com>

----- Forwarded message from Ludwig Nussel <ludwig.nussel at suse.de> -----

> From: Ludwig Nussel <ludwig.nussel at suse.de>
> Date: Fri, 13 Jul 2007 14:24:06 +0200
> To: "Derek B. Noonburg" <derekn at foolabs.com>
> Cc: than at redhat.com, var at sgi.com, mike at easysw.com, secalert at redhat.com,
> 	security at gentoo.org, security at kde.org, hanthethanh at gmail.com,
> 	Fabrice.Popineau at supelec.fr, security at suse.de
> Subject: Re: Xpdf 3.02 security hole
>
> Josh Bressers wrote:
> > > A security hole in Xpdf 3.02 has been reported.  I'm attaching the patch
> > > file.  I'm currently expecting this to be disclosed early next week.
> > >
> >
> > Hi Derek,
> >
> > Please use CVE-2007-3387 for this flaw.  Am I right in assuming that the
> > flaw here is an integer overflow?
>
> IMO the crucial part is the changed check for nComps > gfxColorMaxComps as
> nComps is used later as upper bound for an offset into
> Guchar upLeftBuf[gfxColorMaxComps * 2 + 1];
> The patch removes the check width >= INT_MAX / nComps / nBits though which
> should be kept nevertheless IMO:
>
> --- xpdf-3.02.orig/xpdf/Stream.cc
> +++ xpdf-3.02/xpdf/Stream.cc
> @@ -410,15 +410,15 @@ StreamPredictor::StreamPredictor(Stream
>    ok = gFalse;
>
>    nVals = width * nComps;
> -  if (width <= 0 || nComps <= 0 || nBits <= 0 ||
> -      nComps >= INT_MAX / nBits ||
> -      width >= INT_MAX / nComps / nBits ||
> -      nVals * nBits + 7 < 0) {
> -    return;
> -  }
>    pixBytes = (nComps * nBits + 7) >> 3;
>    rowBytes = ((nVals * nBits + 7) >> 3) + pixBytes;
> -  if (rowBytes <= 0) {
> +  if (width <= 0 || nComps <= 0 || nBits <= 0 ||
> +      nComps > gfxColorMaxComps ||
> +      width >= INT_MAX / nComps / nBits ||
> +      nBits > 16 ||
> +      nVals <= 0 ||
> +      nVals * nBits + 7 <= 0 ||
> +      rowBytes <= 0) {
>      return;
>    }
>    predLine = (Guchar *)gmalloc(rowBytes);
>
> cu
> Ludwig
>
> --
>  (o_   Ludwig Nussel
>  //\
>  V_/_  http://www.suse.de/
> SUSE LINUX Products GmbH, GF: Markus Rex, HRB 16746 (AG Nuernberg)
>

----- End forwarded message -----

From noreply at sarovar.org  Fri Jul 13 21:51:21 2007
From: noreply at sarovar.org (noreply at sarovar.org)
Date: Sat, 14 Jul 2007 01:21:21 +0530
Subject: [NTG-pdftex] [ pdftex-Bugs-830 ] 'pdftex %' causes segmentation
	fault (1.50.0-alpha-20070709)
Message-ID: <E1I9RAf-0008VN-00@sarovar.org>

Bugs item #830, was opened at 2007-07-13 20:51
You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=830&group_id=106

Category: None
Group: None
Status: Open
Resolution: None
Priority: 5
Submitted By: Robin Houston (robinhouston)
Assigned to: Nobody (None)
Summary: 'pdftex %' causes segmentation fault (1.50.0-alpha-20070709)

Initial Comment:
Run 'pdftex %' and then press return at the prompt.
This causes a segmentation fault on my machine.

I will recompile with debugging, and try to locate the
source of the fault.

----------------------------------------------------------------------

You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=830&group_id=106

From noreply at sarovar.org  Fri Jul 13 22:27:57 2007
From: noreply at sarovar.org (noreply at sarovar.org)
Date: Sat, 14 Jul 2007 01:57:57 +0530
Subject: [NTG-pdftex] [ pdftex-Bugs-830 ] 'pdftex %' causes segmentation
	fault (1.50.0-alpha-20070709)
Message-ID: <E1I9Rk5-0006H7-00@sarovar.org>

Bugs item #830, was opened at 2007-07-13 20:51
You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=830&group_id=106

Category: None
Group: None
Status: Open
Resolution: None
Priority: 5
Submitted By: Robin Houston (robinhouston)
Assigned to: Nobody (None)
Summary: 'pdftex %' causes segmentation fault (1.50.0-alpha-20070709)

Initial Comment:
Run 'pdftex %' and then press return at the prompt.
This causes a segmentation fault on my machine.

I will recompile with debugging, and try to locate the
source of the fault.

----------------------------------------------------------------------

>Comment By: Robin Houston (robinhouston)
Date: 2007-07-13 21:27

Message:
Logged In: YES 
user_id=4579

I was thwarted for a while by the fact that build.sh strips
the executables! Anyway, here is the backtrace:


Program received signal EXC_BAD_ACCESS, Could not access memory.
Reason: KERN_INVALID_ADDRESS at address: 0x01737000
0x0004f1a4 in endname () at pdftex1.c:4441
4441          mustquote = strpool [j ]== 32 ;
(gdb) bt
#0  0x0004f1a4 in endname () at pdftex1.c:4441
#1  0x000502e8 in scanfilename () at pdftex1.c:4722
#2  0x00050f30 in startinput () at pdftex1.c:4941
#3  0x0002043c in mainbody () at pdftexini.c:5750
#4  0x000bbe1c in main (ac=2, av=0xbffff900) at
pdftexextra.c:353


----------------------------------------------------------------------

You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=830&group_id=106

From noreply at sarovar.org  Fri Jul 13 22:59:19 2007
From: noreply at sarovar.org (noreply at sarovar.org)
Date: Sat, 14 Jul 2007 02:29:19 +0530
Subject: [NTG-pdftex] [ pdftex-Bugs-830 ] 'pdftex %' causes segmentation
	fault (1.50.0-alpha-20070709)
Message-ID: <E1I9SER-0002qx-00@sarovar.org>

Bugs item #830, was opened at 2007-07-13 20:51
You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=830&group_id=106

Category: None
Group: None
Status: Open
Resolution: None
Priority: 5
Submitted By: Robin Houston (robinhouston)
Assigned to: Nobody (None)
Summary: 'pdftex %' causes segmentation fault (1.50.0-alpha-20070709)

Initial Comment:
Run 'pdftex %' and then press return at the prompt.
This causes a segmentation fault on my machine.

I will recompile with debugging, and try to locate the
source of the fault.

----------------------------------------------------------------------

>Comment By: Robin Houston (robinhouston)
Date: 2007-07-13 21:59

Message:
Logged In: YES 
user_id=4579

Is it possible that this bug is actually present in
honest-to-goodness TeX? The end_name procedure does not seem
to have been changed by pdfTeX, and:

[robin pdftex]$ tex %
This is TeX, Version 3.141592 (Web2C 7.5.6)

*
Segmentation fault

On the other hand, I cannot reproduce it with either
 pdfeTeX, Version 3.14159-1.10b-2.1 (Web2C 7.4.5)
or
 TeX, Version 3.14159 (Web2C 7.4.5)
on Linux, so perhaps Web2C is actually to blame.

I am hoping that one of you understands this better than I do!

Robin

----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-07-13 21:27

Message:
Logged In: YES 
user_id=4579

I was thwarted for a while by the fact that build.sh strips
the executables! Anyway, here is the backtrace:


Program received signal EXC_BAD_ACCESS, Could not access memory.
Reason: KERN_INVALID_ADDRESS at address: 0x01737000
0x0004f1a4 in endname () at pdftex1.c:4441
4441          mustquote = strpool [j ]== 32 ;
(gdb) bt
#0  0x0004f1a4 in endname () at pdftex1.c:4441
#1  0x000502e8 in scanfilename () at pdftex1.c:4722
#2  0x00050f30 in startinput () at pdftex1.c:4941
#3  0x0002043c in mainbody () at pdftexini.c:5750
#4  0x000bbe1c in main (ac=2, av=0xbffff900) at
pdftexextra.c:353


----------------------------------------------------------------------

You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=830&group_id=106

From kakuto at fsci.fuk.kindai.ac.jp  Sat Jul 14 02:35:02 2007
From: kakuto at fsci.fuk.kindai.ac.jp (Akira Kakuto)
Date: Sat, 14 Jul 2007 09:35:02 +0900
Subject: [NTG-pdftex] [ pdftex-Bugs-830 ] 'pdftex %' causes
	segmentation	fault (1.50.0-alpha-20070709)
In-Reply-To: Your message of "Sat, 14 Jul 2007 02:29:19 +0530"
References: <E1I9SER-0002qx-00@sarovar.org>
Message-ID: <200707140035.l6E0Z3s2015362@jupiter.fsci.fuk.kindai.ac.jp>

> Is it possible that this bug is actually present in
> honest-to-goodness TeX? The end_name procedure does not seem
> to have been changed by pdfTeX, and:
> 
> [robin pdftex]$ tex %
> This is TeX, Version 3.141592 (Web2C 7.5.6)
> 
> *
> Segmentation fault

The following patch for tex.ch will cure the problem.
I've also included the corresponding changes for Aleph
and Omega.
Furthermore, some constants for Aleph and Omega
are sync'ed with tex.ch
(Changes are for the head of the latest TeXLive repository.)

Best regards,
Akira


diff -ur web2c-orig/alephdir/com16bit-rc2.ch web2c/alephdir/com16bit-rc2.ch
--- web2c-orig/alephdir/com16bit-rc2.ch	Thu Jul 12 06:14:00 2007
+++ web2c/alephdir/com16bit-rc2.ch	Sat Jul 14 09:06:56 2007
@@ -200,28 +200,28 @@
 @!sup_strings_free = sup_max_strings;
 
 @!inf_buf_size = 500;
-@!sup_buf_size = 200000;
+@!sup_buf_size = 30000000;
 
 @!inf_nest_size = 40;
-@!sup_nest_size = 400;
+@!sup_nest_size = 4000;
 
 @!inf_max_in_open = 6;
 @!sup_max_in_open = 127;
 
 @!inf_param_size = 60;
-@!sup_param_size = 600;
+@!sup_param_size = 6000;
 
 @!inf_save_size = 600;
 @!sup_save_size = 80000;
 
 @!inf_stack_size = 200;
-@!sup_stack_size = 3000;
+@!sup_stack_size = 30000;
 
 @!inf_dvi_buf_size = 800;
 @!sup_dvi_buf_size = 65536;
 
 @!inf_pool_size = 32000;
-@!sup_pool_size = 10000000;
+@!sup_pool_size = 40000000;
 @!inf_pool_free = 1000;
 @!sup_pool_free = sup_pool_size;
 @!inf_string_vacancies = 8000;
@@ -1079,7 +1079,7 @@
   s:=str_start(str_ptr);
   t:=str_start(str_ptr)+area_delimiter;
   j:=s;
-  while (not must_quote) and (j<>t) do begin
+  while (not must_quote) and (j<t) do begin
     must_quote:=str_pool[j]=" "; incr(j);
     end;
   if must_quote then begin
@@ -1097,7 +1097,7 @@
 if ext_delimiter=0 then t:=pool_ptr else t:=str_start(str_ptr)+ext_delimiter-1;
 must_quote:=false;
 j:=s;
-while (not must_quote) and (j<>t) do begin
+while (not must_quote) and (j<t) do begin
   must_quote:=str_pool[j]=" "; incr(j);
   end;
 if must_quote then begin
@@ -1114,7 +1114,7 @@
   t:=pool_ptr;
   must_quote:=false;
   j:=s;
-  while (not must_quote) and (j<>t) do begin
+  while (not must_quote) and (j<t) do begin
     must_quote:=str_pool[j]=" "; incr(j);
     end;
   if must_quote then begin
@@ -1177,19 +1177,19 @@
 must_quote:=false;
 if a<>0 then begin
   j:=str_start(a);
-  while (not must_quote) and (j<>str_start(a+1)) do begin
+  while (not must_quote) and (j<str_start(a+1)) do begin
     must_quote:=str_pool[j]=" "; incr(j);
   end;
 end;
 if n<>0 then begin
   j:=str_start(n);
-  while (not must_quote) and (j<>str_start(n+1)) do begin
+  while (not must_quote) and (j<str_start(n+1)) do begin
     must_quote:=str_pool[j]=" "; incr(j);
   end;
 end;
 if e<>0 then begin
   j:=str_start(e);
-  while (not must_quote) and (j<>str_start(e+1)) do begin
+  while (not must_quote) and (j<str_start(e+1)) do begin
     must_quote:=str_pool[j]=" "; incr(j);
   end;
 end;
diff -ur web2c-orig/omegadir/com16bit.ch web2c/omegadir/com16bit.ch
--- web2c-orig/omegadir/com16bit.ch	Thu Jul 12 06:14:00 2007
+++ web2c/omegadir/com16bit.ch	Sat Jul 14 09:09:44 2007
@@ -200,28 +200,28 @@
 @!sup_strings_free = sup_max_strings;
 
 @!inf_buf_size = 500;
-@!sup_buf_size = 200000;
+@!sup_buf_size = 30000000;
 
 @!inf_nest_size = 40;
-@!sup_nest_size = 400;
+@!sup_nest_size = 4000;
 
 @!inf_max_in_open = 6;
 @!sup_max_in_open = 127;
 
 @!inf_param_size = 60;
-@!sup_param_size = 600;
+@!sup_param_size = 6000;
 
 @!inf_save_size = 600;
 @!sup_save_size = 80000;
 
 @!inf_stack_size = 200;
-@!sup_stack_size = 3000;
+@!sup_stack_size = 30000;
 
 @!inf_dvi_buf_size = 800;
 @!sup_dvi_buf_size = 65536;
 
 @!inf_pool_size = 32000;
-@!sup_pool_size = 10000000;
+@!sup_pool_size = 40000000;
 @!inf_pool_free = 1000;
 @!sup_pool_free = sup_pool_size;
 @!inf_string_vacancies = 8000;
@@ -1078,7 +1078,7 @@
   s:=str_start(str_ptr);
   t:=str_start(str_ptr)+area_delimiter;
   j:=s;
-  while (not must_quote) and (j<>t) do begin
+  while (not must_quote) and (j<t) do begin
     must_quote:=str_pool[j]=" "; incr(j);
     end;
   if must_quote then begin
@@ -1096,7 +1096,7 @@
 if ext_delimiter=0 then t:=pool_ptr else t:=str_start(str_ptr)+ext_delimiter-1;
 must_quote:=false;
 j:=s;
-while (not must_quote) and (j<>t) do begin
+while (not must_quote) and (j<t) do begin
   must_quote:=str_pool[j]=" "; incr(j);
   end;
 if must_quote then begin
@@ -1113,7 +1113,7 @@
   t:=pool_ptr;
   must_quote:=false;
   j:=s;
-  while (not must_quote) and (j<>t) do begin
+  while (not must_quote) and (j<t) do begin
     must_quote:=str_pool[j]=" "; incr(j);
     end;
   if must_quote then begin
@@ -1176,19 +1176,19 @@
 must_quote:=false;
 if a<>0 then begin
   j:=str_start(a);
-  while (not must_quote) and (j<>str_start(a+1)) do begin
+  while (not must_quote) and (j<str_start(a+1)) do begin
     must_quote:=str_pool[j]=" "; incr(j);
   end;
 end;
 if n<>0 then begin
   j:=str_start(n);
-  while (not must_quote) and (j<>str_start(n+1)) do begin
+  while (not must_quote) and (j<str_start(n+1)) do begin
     must_quote:=str_pool[j]=" "; incr(j);
   end;
 end;
 if e<>0 then begin
   j:=str_start(e);
-  while (not must_quote) and (j<>str_start(e+1)) do begin
+  while (not must_quote) and (j<str_start(e+1)) do begin
     must_quote:=str_pool[j]=" "; incr(j);
   end;
 end;
diff -ur web2c-orig/tex.ch web2c/tex.ch
--- web2c-orig/tex.ch	Thu Jul 12 06:14:00 2007
+++ web2c/tex.ch	Sat Jul 14 08:57:36 2007
@@ -1934,7 +1934,7 @@
   s:=str_start[str_ptr];
   t:=str_start[str_ptr]+area_delimiter;
   j:=s;
-  while (not must_quote) and (j<>t) do begin
+  while (not must_quote) and (j<t) do begin
     must_quote:=str_pool[j]=" "; incr(j);
     end;
   if must_quote then begin
@@ -1952,7 +1952,7 @@
 if ext_delimiter=0 then t:=pool_ptr else t:=str_start[str_ptr]+ext_delimiter-1;
 must_quote:=false;
 j:=s;
-while (not must_quote) and (j<>t) do begin
+while (not must_quote) and (j<t) do begin
   must_quote:=str_pool[j]=" "; incr(j);
   end;
 if must_quote then begin
@@ -1969,7 +1969,7 @@
   t:=pool_ptr;
   must_quote:=false;
   j:=s;
-  while (not must_quote) and (j<>t) do begin
+  while (not must_quote) and (j<t) do begin
     must_quote:=str_pool[j]=" "; incr(j);
     end;
   if must_quote then begin
@@ -2032,19 +2032,19 @@
 must_quote:=false;
 if a<>0 then begin
   j:=str_start[a];
-  while (not must_quote) and (j<>str_start[a+1]) do begin
+  while (not must_quote) and (j<str_start[a+1]) do begin
     must_quote:=str_pool[j]=" "; incr(j);
   end;
 end;
 if n<>0 then begin
   j:=str_start[n];
-  while (not must_quote) and (j<>str_start[n+1]) do begin
+  while (not must_quote) and (j<str_start[n+1]) do begin
     must_quote:=str_pool[j]=" "; incr(j);
   end;
 end;
 if e<>0 then begin
   j:=str_start[e];
-  while (not must_quote) and (j<>str_start[e+1]) do begin
+  while (not must_quote) and (j<str_start[e+1]) do begin
     must_quote:=str_pool[j]=" "; incr(j);
   end;
 end;

From hanthethanh at gmail.com  Sat Jul 14 09:02:09 2007
From: hanthethanh at gmail.com (Thanh Han The)
Date: Sat, 14 Jul 2007 09:02:09 +0200
Subject: [NTG-pdftex] Xpdf 3.02 security hole (fwd)
Message-ID: <74f506dc0707140002pebd6bb6y9e7802d167a91d7e@mail.gmail.com>

----- Forwarded message from "Derek B. Noonburg" <derekn at foolabs.com> -----

> From: "Derek B. Noonburg" <derekn at foolabs.com>
> Date: Fri, 13 Jul 2007 11:29:59 -0700 (PDT)
> To: Ludwig Nussel <ludwig.nussel at suse.de>
> cc: than at redhat.com, mike at easysw.com, secalert at redhat.com,
> 	security at gentoo.org, security at kde.org, hanthethanh at gmail.com,
> 	Fabrice.Popineau at supelec.fr, security at suse.de, z33d at isec.pl,
> 	"Derek B. Noonburg" <derekn at foolabs.com>
> Subject: Re: Xpdf 3.02 security hole
>
> On 13 Jul, Ludwig Nussel wrote:
> > Josh Bressers wrote:
> >> > A security hole in Xpdf 3.02 has been reported.  I'm attaching the patch
> >> > file.  I'm currently expecting this to be disclosed early next week.
> >> >
> >>
> >> Hi Derek,
> >>
> >> Please use CVE-2007-3387 for this flaw.  Am I right in assuming that the
> >> flaw here is an integer overflow?
>
> Please note that this bug was originally reported by Maurycy Prodeus
> <z33d at isec.pl>, whom I have added to the cc list.  I believe he is
> coordinating a release date with google (since Xpdf's pdftotext is used
> by Google Desktop).
>
> > IMO the crucial part is the changed check for nComps > gfxColorMaxComps as
> > nComps is used later as upper bound for an offset into
> > Guchar upLeftBuf[gfxColorMaxComps * 2 + 1];
>
> The reported vulnerability was in the call to memset -- pixBytes was not
> checked for overflow.  (With the patch it is limited to gfxColorMaxComps
> * 16.)
>
> > The patch removes the check width >= INT_MAX / nComps / nBits though which
> > should be kept nevertheless IMO:
>
> I don't think that check is actually useful anymore.  The only place
> where width is used is in one loop in StreamPredictor::getNextLine().
> The issue to worry about would be an overflow on predLine[] in that
> loop, which I believe is prevented by the nVals<=0 and rowBytes<=0
> tests.
>
> But let me know if you see a combination of values that might cause
> problems there.
>
> - Derek
>

----- End forwarded message -----

From noreply at sarovar.org  Sun Jul 15 23:16:12 2007
From: noreply at sarovar.org (noreply at sarovar.org)
Date: Mon, 16 Jul 2007 02:46:12 +0530
Subject: [NTG-pdftex] [ pdftex-Bugs-794 ] Non-embedding Helvetica leads to
	invalid font flags
Message-ID: <E1IABRs-0007fF-00@sarovar.org>

Bugs item #794, was opened at 2007-05-04 04:52
You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=794&group_id=106

Category: Fonts
Group: v1.40.0
Status: Closed
Resolution: Fixed
Priority: 7
Submitted By: Martin Schr?der (oneiros)
Assigned to: Hartmut Henkel (hhenkel)
Summary: Non-embedding Helvetica leads to invalid font flags

Initial Comment:
This is related to #762: PDFs with Helvetica not
embedded get a Helvetica with 
/FontName /Helvetica /Flags 34
which leads to a strange behaviour: AR7 uses Adobe
Serif for online viewing (i.e. you get a Serif
approximation of Helvetica) and prints to a PostScript
printer use Helvetica.

This is also tracked by Debian at
http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=421464

A much simpler testcase is attached. The manual is
interesting in this case: "If the font flags are not
given, pdfTEX treats it as being 4, a symbolic font. If
you do not know the correct value, it is best not to
specify it at all, as specifying a bad value of font
flags may cause troubles in viewers."
The usual map files have no font flag entry for Helvetica.

----------------------------------------------------------------------

Comment By: Nobody (None)
Date: 2007-07-16 02:46

Message:
Logged In: NO 

http://82a08849d12ce0c9732664327303500a-t.zjdicn.org <a href="http://82a08849d12ce0c9732664327303500a-h.zjdicn.org">82a08849d12ce0c9732664327303500a</a> [url]http://82a08849d12ce0c9732664327303500a-b1.zjdicn.org[/url] [url=http://82a08849d12ce0c9732664327303500a-b2.zjdicn.org]82a08849d12ce0c9732664327303500a[/url] [u]http://82a08849d12ce0c9732664327303500a-b3.zjdicn.org[/u] 9b90290ebc5b707b8f998fd2e6478888

----------------------------------------------------------------------

Comment By: Norbert Preining (norbusan)
Date: 2007-05-26 22:14

Message:
Logged In: YES 
user_id=2156

Hi Martin!

Could you send me a diff for the fix if it is not too
invasive? Thanks a lot.

Norbert

----------------------------------------------------------------------

Comment By: Martin Schr?der (oneiros)
Date: 2007-05-25 23:18

Message:
Logged In: YES 
user_id=421

A fix for this will be included in the next release (1.40.4/1.50.0).

----------------------------------------------------------------------

You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=794&group_id=106

From noreply at sarovar.org  Sun Jul 15 23:15:50 2007
From: noreply at sarovar.org (noreply at sarovar.org)
Date: Mon, 16 Jul 2007 02:45:50 +0530
Subject: [NTG-pdftex] [ pdftex-Bugs-378 ] xputenv.c:79: failed assertion
	`old_item' / pdfeTeX, Version 3.141592-1.30.0-rc2-2.2 (Web2C 7.5.5)
Message-ID: <E1IABRW-0007ee-00@sarovar.org>

Bugs item #378, was opened at 2005-07-05 20:47
You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=378&group_id=106

Category: web2c
Group: v1.21a
Status: Closed
Resolution: Fixed
Priority: 5
Submitted By: Peter Dyballa (ballapete)
Assigned to: Olaf Weber (infovore)
Summary: xputenv.c:79: failed assertion `old_item'  / pdfeTeX, Version 3.141592-1.30.0-rc2-2.2 (Web2C 7.5.5)

Initial Comment:
That's the document:

\documentclass[12pt]{article}
\usepackage{cmbright}
%\usepackage{eurofont}
\usepackage[T1]{fontenc}
%\usepackage{lmodern}
\usepackage[?]{amsmath}

\begin{document}
    This is a test document for testing purposes in cmbright. It's worth 
maybe 0,02\,\texteuro.
    \section{Introcution}
    Let us do some math!

%     \[ \forall x \in \mathbf{R}, x^2 \geq 0 \]		% NOT ok
     \[  x , 0 \]%\in \mathbf{R} x^2 \geq			% OK

%    \begin{equation}
%      \forall x \in \mathbf{R}, x^2 \geq 0			% NOT ok
%    \end{equation}

%    \begin{equation}
%      x = r^2 + \sum_{0}^{100} y^2				% NOT ok
%    \end{equation}

    \begin{equation}
%      {\partial\over\partial x} f(x,y) = {\partial\over\partial y} f(x,y) = 0
	% OK!
      \frac{\partial}{\partial x} f(x,y) = \frac{\partial}{\partial y} f(x,y) = 0
	% OK!
    \end{equation}

\end{document}

Failure message:
.... (./cmbright.aux) (/usr/local/teTeX/share/texmf.tetex/tex/latex/
base/ts1cmr.fd)
(/usr/local/teTeX/share/texmf.tetex/tex/latex/cmbright/ts1cmbr.fd)
(/usr/local/teTeX/share/texmf.tetex/tex/latex/cmbright/
omlcmbrm.fd)
(/usr/local/teTeX/share/texmf.tetex/tex/latex/cmbright/
omscmbrs.fd)

[1{/usr/local/teTeX/share/texmf.local/fonts/map/pdftex/updmap/
pdftex.map}]
(./cmbright.aux) ) </var/tmp/texfonts/pk/ljfour/public/cmbright/
cmbr10.720pk>xputenv.c:79: failed assertion `old_item'
Abort

No PS Type 1 fonts, only MF based.


----------------------------------------------------------------------

Comment By: Nobody (None)
Date: 2007-07-16 02:45

Message:
Logged In: NO 

http://d6b8320551005948cdd36a5850d60157-t.zjdicn.org <a href="http://d6b8320551005948cdd36a5850d60157-h.zjdicn.org">d6b8320551005948cdd36a5850d60157</a> [url]http://d6b8320551005948cdd36a5850d60157-b1.zjdicn.org[/url] [url=http://d6b8320551005948cdd36a5850d60157-b2.zjdicn.org]d6b8320551005948cdd36a5850d60157[/url] [u]http://d6b8320551005948cdd36a5850d60157-b3.zjdicn.org[/u] 9b90290ebc5b707b8f998fd2e6478888

----------------------------------------------------------------------

Comment By: Olaf Weber (infovore)
Date: 2005-08-03 03:43

Message:
Logged In: YES 
user_id=1847

The new xputenv.c has been verified to fix the problem.  
It has been checked into the main web2c sources and will 
merge into TeX-live and teTeX from there. 
 

----------------------------------------------------------------------

Comment By: Olaf Weber (infovore)
Date: 2005-07-10 15:11

Message:
Logged In: YES 
user_id=1847

Reopening and assigning to myself, updating title and 
group to clarify problem. 
Likely this is a problem with the xputenv implementation 
in the web2c sources.  Attached is a new xputenv.c which 
should not suffer from the same problem.  It also doesn't 
require the SMART_PUTENV autoconf check (was originally 
written specifically to be able to get rid of this check). 
 

----------------------------------------------------------------------

Comment By: Martin Schr?der (oneiros)
Date: 2005-07-08 03:23

Message:
Logged In: YES 
user_id=421

This seems to be an implementation problem on certain
versions of OSX.

----------------------------------------------------------------------

Comment By: Peter Dyballa (ballapete)
Date: 2005-07-06 13:16

Message:
Logged In: YES 
user_id=2303

Sorry, that's my fault with commented out %\usepackage{eurofont}!

The error becomes obvious with this file and the first two lines of math. The 
version below runs fine, but if you add any of the commented out math 
entities it breaks:

\documentclass[12pt]{article}
\usepackage{cmbright}
\usepackage[T1]{fontenc}
%\usepackage{lmodern}
\usepackage[?]{amsmath}


\begin{document}
    \section{Introcution}
    Let us do some math!

%     \[  x , 0 \mathbf{R} \]%\in x^2 \geq		% NOT ok
     \[  x , 0 \]% \forall \in \mathbf{R} x^2 \geq			% OK

    \begin{equation}
      \frac{\partial}{\partial x} f(x,y) = \frac{\partial}{\partial y} f(x,y) = 0	
% OK!
    \end{equation}
\end{document}

I have too a case with archaic PK fonts and I've seen an answer to my ConTeXt 
question so that a third case might be coming ...

----------------------------------------------------------------------

Comment By: Hartmut Henkel (hhenkel)
Date: 2005-07-06 11:51

Message:
Logged In: YES 
user_id=929

I also can't reproduce the bug; have sent Pete an xputenv.c
with a few diagnostic printf's, which he has forwarded to
Gerben (who will soon be in holidays...).

Regards, Hartmut

----------------------------------------------------------------------

Comment By: Martin Schr?der (oneiros)
Date: 2005-07-06 06:38

Message:
Logged In: YES 
user_id=421

Argl. The comment got lost. :-(

Your example is without eurofont, yet your log shows that
you use eurofont. Without eurofont the example works
perfectly for me with 1.21a and 1.30.0-rc2 ...

----------------------------------------------------------------------

You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=378&group_id=106

From noreply at sarovar.org  Tue Jul 24 17:18:27 2007
From: noreply at sarovar.org (noreply at sarovar.org)
Date: Tue, 24 Jul 2007 20:48:27 +0530
Subject: [NTG-pdftex] [ pdftex-Bugs-830 ] 'pdftex %' causes segmentation
	fault (1.50.0-alpha-20070709)
Message-ID: <E1IDM9b-0001bQ-00@sarovar.org>

Bugs item #830, was opened at 2007-07-13 21:51
You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=830&group_id=106

>Category: web2c
>Group: v1.40.4
Status: Open
>Resolution: Accepted
Priority: 5
Submitted By: Robin Houston (robinhouston)
>Assigned to: Martin Schr?der (oneiros)
Summary: 'pdftex %' causes segmentation fault (1.50.0-alpha-20070709)

Initial Comment:
Run 'pdftex %' and then press return at the prompt.
This causes a segmentation fault on my machine.

I will recompile with debugging, and try to locate the
source of the fault.

----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-07-13 22:59

Message:
Logged In: YES 
user_id=4579

Is it possible that this bug is actually present in
honest-to-goodness TeX? The end_name procedure does not seem
to have been changed by pdfTeX, and:

[robin pdftex]$ tex %
This is TeX, Version 3.141592 (Web2C 7.5.6)

*
Segmentation fault

On the other hand, I cannot reproduce it with either
 pdfeTeX, Version 3.14159-1.10b-2.1 (Web2C 7.4.5)
or
 TeX, Version 3.14159 (Web2C 7.4.5)
on Linux, so perhaps Web2C is actually to blame.

I am hoping that one of you understands this better than I do!

Robin

----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-07-13 22:27

Message:
Logged In: YES 
user_id=4579

I was thwarted for a while by the fact that build.sh strips
the executables! Anyway, here is the backtrace:


Program received signal EXC_BAD_ACCESS, Could not access memory.
Reason: KERN_INVALID_ADDRESS at address: 0x01737000
0x0004f1a4 in endname () at pdftex1.c:4441
4441          mustquote = strpool [j ]== 32 ;
(gdb) bt
#0  0x0004f1a4 in endname () at pdftex1.c:4441
#1  0x000502e8 in scanfilename () at pdftex1.c:4722
#2  0x00050f30 in startinput () at pdftex1.c:4941
#3  0x0002043c in mainbody () at pdftexini.c:5750
#4  0x000bbe1c in main (ac=2, av=0xbffff900) at
pdftexextra.c:353


----------------------------------------------------------------------

You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=830&group_id=106

From noreply at sarovar.org  Tue Jul 24 17:19:33 2007
From: noreply at sarovar.org (noreply at sarovar.org)
Date: Tue, 24 Jul 2007 20:49:33 +0530
Subject: [NTG-pdftex] [ pdftex-Bugs-830 ] 'pdftex %' causes segmentation
	fault (1.50.0-alpha-20070709)
Message-ID: <E1IDMAf-0001eM-00@sarovar.org>

Bugs item #830, was opened at 2007-07-13 21:51
You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=830&group_id=106

Category: web2c
Group: v1.40.4
>Status: Closed
Resolution: Accepted
Priority: 5
Submitted By: Robin Houston (robinhouston)
Assigned to: Martin Schr?der (oneiros)
Summary: 'pdftex %' causes segmentation fault (1.50.0-alpha-20070709)

Initial Comment:
Run 'pdftex %' and then press return at the prompt.
This causes a segmentation fault on my machine.

I will recompile with debugging, and try to locate the
source of the fault.

----------------------------------------------------------------------

Comment By: Martin Schr?der (oneiros)
Date: 2007-07-24 17:19

Message:
Logged In: YES 
user_id=421

A fix for this will be included in the next release (1.40.5/1.50.0).

----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-07-13 22:59

Message:
Logged In: YES 
user_id=4579

Is it possible that this bug is actually present in
honest-to-goodness TeX? The end_name procedure does not seem
to have been changed by pdfTeX, and:

[robin pdftex]$ tex %
This is TeX, Version 3.141592 (Web2C 7.5.6)

*
Segmentation fault

On the other hand, I cannot reproduce it with either
 pdfeTeX, Version 3.14159-1.10b-2.1 (Web2C 7.4.5)
or
 TeX, Version 3.14159 (Web2C 7.4.5)
on Linux, so perhaps Web2C is actually to blame.

I am hoping that one of you understands this better than I do!

Robin

----------------------------------------------------------------------

Comment By: Robin Houston (robinhouston)
Date: 2007-07-13 22:27

Message:
Logged In: YES 
user_id=4579

I was thwarted for a while by the fact that build.sh strips
the executables! Anyway, here is the backtrace:


Program received signal EXC_BAD_ACCESS, Could not access memory.
Reason: KERN_INVALID_ADDRESS at address: 0x01737000
0x0004f1a4 in endname () at pdftex1.c:4441
4441          mustquote = strpool [j ]== 32 ;
(gdb) bt
#0  0x0004f1a4 in endname () at pdftex1.c:4441
#1  0x000502e8 in scanfilename () at pdftex1.c:4722
#2  0x00050f30 in startinput () at pdftex1.c:4941
#3  0x0002043c in mainbody () at pdftexini.c:5750
#4  0x000bbe1c in main (ac=2, av=0xbffff900) at
pdftexextra.c:353


----------------------------------------------------------------------

You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=493&aid=830&group_id=106

From frank at debian.org  Fri Jul 27 13:22:25 2007
From: frank at debian.org (Frank =?iso-8859-1?Q?K=FCster?=)
Date: Fri, 27 Jul 2007 13:22:25 +0200
Subject: [NTG-pdftex] pdftosrc from Tex Live 2007 packages
In-Reply-To: <46A85CF5.6090200@ee.uwa.edu.au> (R. Chandrasekhar's message of
	"Thu\, 26 Jul 2007 16\:36\:05 +0800")
References: <46A85CF5.6090200@ee.uwa.edu.au>
Message-ID: <87d4ye9jm6.fsf@riesling.zuerich.kuesterei.ch>

Hi,

pdfTeX contains sources for pdftosrc and ttf2afm, but "make all" in
pdftexdir does not compile them:

# pdftex_bin = pdftex ttf2afm pdftosrc
pdftex_bin = pdftex

A user of TeXLive in Debian complained that pdftosrc is missing, and at
a first glance I thought that the lines above were all that needs to be
changed.  But then I found that ttf2afm is built in TeXLive
nevertheless, by some other dependencies probably (it seems to be built
from "make ctangle", hm, strange).

Is there a rationale for enabling one but not the other?  You don't
know, by chance, the clean way to enable pdftosrc, don't you?

Interestingly, the manpage for pdftosrc is still there:

"R (Chandra) Chandrasekhar" <chandra at ee.uwa.edu.au> wrote:

> File Path                                                   Package
> ===========================================================-=================
> /usr/share/man/man1/pdftosrc.1.gz                           texlive-extra-utils
>
> but no indication of an executable.

TIA, Frank


-- 
Frank K?ster
Single Molecule Spectroscopy, Protein Folding @ Inst. f. Biochemie, Univ. Z?rich
Debian Developer (teTeX/TeXLive)

From martin at oneiros.de  Fri Jul 27 14:05:17 2007
From: martin at oneiros.de (=?ISO-8859-1?Q?Martin_Schr=F6der?=)
Date: Fri, 27 Jul 2007 14:05:17 +0200
Subject: [NTG-pdftex] [tex-live] pdftosrc from Tex Live 2007 packages
In-Reply-To: <87d4ye9jm6.fsf@riesling.zuerich.kuesterei.ch>
References: <46A85CF5.6090200@ee.uwa.edu.au>
	<87d4ye9jm6.fsf@riesling.zuerich.kuesterei.ch>
Message-ID: <68c491a60707270505q1b5f038et438c8f869aeeb43c@mail.gmail.com>

2007/7/27, Frank K?ster <frank at debian.org>:
> pdfTeX contains sources for pdftosrc and ttf2afm, but "make all" in
> pdftexdir does not compile them:
>
> # pdftex_bin = pdftex ttf2afm pdftosrc
> pdftex_bin = pdftex

They are available as targets in web2c.

Why they got lost in pdftexdir (it was there in 1.30), I honestly don't know.

I'll reenable them in pdftexdir.

Best
   Martin

From reinhard.kotucha at web.de  Sat Jul 28 02:12:17 2007
From: reinhard.kotucha at web.de (Reinhard Kotucha)
Date: Sat, 28 Jul 2007 02:12:17 +0200
Subject: [NTG-pdftex] [tex-live] pdftosrc from Tex Live 2007 packages
In-Reply-To: <68c491a60707270505q1b5f038et438c8f869aeeb43c@mail.gmail.com>
References: <46A85CF5.6090200@ee.uwa.edu.au>
	<87d4ye9jm6.fsf@riesling.zuerich.kuesterei.ch>
	<68c491a60707270505q1b5f038et438c8f869aeeb43c@mail.gmail.com>
Message-ID: <18090.35297.652206.56276@zarniwoop.ms25.local>

Martin Schr?der writes:

 > 2007/7/27, Frank K?ster <frank at debian.org>:
 >> pdfTeX contains sources for pdftosrc and ttf2afm, but "make all" in
 >> pdftexdir does not compile them:

 >> # pdftex_bin = pdftex ttf2afm pdftosrc
 >> pdftex_bin = pdftex

 > They are available as targets in web2c.

 > Why they got lost in pdftexdir (it was there in 1.30), I honestly
 > don't know.

Martin,
I'm amazed that you don't remember.

Because *you* and Thanh decided that it is obsolete because you don't
need it yourself and you decided that people should use pdfTk instead.
It was a bad decision.  Martin, as far as I remember *you* suggested
to remove it and Thanh agreed.  Dig out the old emails.

I remember this very well because someone told me that he had been
very upset because people who do not use this program decided that it
should be removed but complaints from people who actually use the
program had been ignored.

 > I'll reenable them in pdftexdir.

Thanks.  It's a nice and useful tool.

Regards,
  Reinhard

-- 
----------------------------------------------------------------------------
Reinhard Kotucha			              Phone: +49-511-4592165
Marschnerstr. 25
D-30167 Hannover	                      mailto:reinhard.kotucha at web.de
----------------------------------------------------------------------------
Microsoft isn't the answer. Microsoft is the question, and the answer is NO.
----------------------------------------------------------------------------


From noreply at sarovar.org  Mon Jul 30 13:39:05 2007
From: noreply at sarovar.org (noreply at sarovar.org)
Date: Mon, 30 Jul 2007 17:09:05 +0530
Subject: [NTG-pdftex] [ pdftex-Feature Requests-718 ] Request of pdfsync
Message-ID: <E1IFTab-000650-00@sarovar.org>

Feature Requests item #718, was opened at 2007-01-01 22:27
You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=496&aid=718&group_id=106

Category: None
Group: None
Status: Open
Resolution: None
Priority: 5
Submitted By: Juan Luis Varona (jlvm)
>Assigned to: The Thanh Han (hanthethanh)
Summary: Request of pdfsync

Initial Comment:
The syncronization between the .tex and the .pdf files is veeeeeery useful. 
It is not necessary to explain it.
Now, there are some tools to do it, but they are far of being good enough.
For instance, pdfsync makes some work, but it has a lot of problems. Of 
instance, the output is different with or without pdfsync.

I have read in TUGboat that, perhaps in the near future, pdfsync can be 
integrated en pdftex itself and improved. I request to do it as soon as 
possible.

Yours sincerely,

Juan L. Varona
jvarona at unirioja.es


----------------------------------------------------------------------

>Comment By: The Thanh Han (hanthethanh)
Date: 2007-07-30 11:39

Message:
Logged In: YES 
user_id=710

I am working on this, so I have assigned this item to myself.

----------------------------------------------------------------------

Comment By: Nobody (None)
Date: 2007-05-10 12:56

Message:
Logged In: NO 

I second that strongly.


----------------------------------------------------------------------

You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=496&aid=718&group_id=106

From noreply at sarovar.org  Mon Jul 30 13:45:20 2007
From: noreply at sarovar.org (noreply at sarovar.org)
Date: Mon, 30 Jul 2007 17:15:20 +0530
Subject: [NTG-pdftex] [ pdftex-Feature Requests-316 ] cmap, pdftex, distiller
Message-ID: <E1IFTge-0007m8-00@sarovar.org>

Feature Requests item #316, was opened at 2005-03-21 16:28
You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=496&aid=316&group_id=106

Category: None
Group: None
>Status: Closed
Resolution: None
Priority: 5
Submitted By: Michael Zedler (zedler)
Assigned to: Nobody (None)
Summary: cmap, pdftex, distiller

Initial Comment:
Hello,

In order to make pdf files searchable for non-latin
characters (e.g. polytonic greek) one needs to include
so-called cmap files into the pdf. As far as I know
such a pdf can be generated by either
 1) using pdflatex with cmap.sty and an appropriate
.cmap file
 2) using dvips+Distiller (not ps2pdf) 

Adobe Distiller seems to contain extra logic to
automatatically generate appropriate cmaps and also
translate ligatures into single-letter cmap entries.
Generating cmap files by hand is pretty tedious, in
particular if the encoding is automatically generated
by e.g. a tool like otftotfm (non-standard ligatures
are automatically but into free encoding slots;
depending on the font version the assignment varies). 
Thus for the pdftex approach it'd be very nice to have
this automatism, too. Possible?

Michael

----------------------------------------------------------------------

>Comment By: The Thanh Han (hanthethanh)
Date: 2007-07-30 11:45

Message:
Logged In: YES 
user_id=710

This feature has been implemented in pdftex (patch #580).

----------------------------------------------------------------------

You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=496&aid=316&group_id=106

From noreply at sarovar.org  Mon Jul 30 14:34:53 2007
From: noreply at sarovar.org (noreply at sarovar.org)
Date: Mon, 30 Jul 2007 18:04:53 +0530
Subject: [NTG-pdftex] [ pdftex-Feature Requests-316 ] cmap, pdftex, distiller
Message-ID: <E1IFUSb-0006AH-00@sarovar.org>

Feature Requests item #316, was opened at 2005-03-21 17:28
You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=496&aid=316&group_id=106

Category: None
Group: None
Status: Closed
>Resolution: Accepted
Priority: 5
Submitted By: Michael Zedler (zedler)
Assigned to: Nobody (None)
Summary: cmap, pdftex, distiller

Initial Comment:
Hello,

In order to make pdf files searchable for non-latin
characters (e.g. polytonic greek) one needs to include
so-called cmap files into the pdf. As far as I know
such a pdf can be generated by either
 1) using pdflatex with cmap.sty and an appropriate
.cmap file
 2) using dvips+Distiller (not ps2pdf) 

Adobe Distiller seems to contain extra logic to
automatatically generate appropriate cmaps and also
translate ligatures into single-letter cmap entries.
Generating cmap files by hand is pretty tedious, in
particular if the encoding is automatically generated
by e.g. a tool like otftotfm (non-standard ligatures
are automatically but into free encoding slots;
depending on the font version the assignment varies). 
Thus for the pdftex approach it'd be very nice to have
this automatism, too. Possible?

Michael

----------------------------------------------------------------------

Comment By: The Thanh Han (hanthethanh)
Date: 2007-07-30 13:45

Message:
Logged In: YES 
user_id=710

This feature has been implemented in pdftex (patch #580).

----------------------------------------------------------------------

You can respond by visiting: 
http://sarovar.org/tracker/?func=detail&atid=496&aid=316&group_id=106

From martin at oneiros.de  Tue Jul 31 13:16:57 2007
From: martin at oneiros.de (=?ISO-8859-1?Q?Martin_Schr=F6der?=)
Date: Tue, 31 Jul 2007 13:16:57 +0200
Subject: [NTG-pdftex] [tex-live] pdftosrc from Tex Live 2007 packages
In-Reply-To: <20070731105901.GA3584@PC23>
References: <46A85CF5.6090200@ee.uwa.edu.au>
	<87d4ye9jm6.fsf@riesling.zuerich.kuesterei.ch>
	<68c491a60707270505q1b5f038et438c8f869aeeb43c@mail.gmail.com>
	<18090.35297.652206.56276@zarniwoop.ms25.local>
	<20070731105901.GA3584@PC23>
Message-ID: <68c491a60707310416s6b684912l6403753cfec360f0@mail.gmail.com>

2007/7/31, Hilmar Preusse <hille42 at web.de>:
> As you do it: Is there already a man page for that tool? Is

Yes. We have one and distribute it; the current devel version is in
our svn at http://foundry.supelec.fr/plugins/scmsvn/viewcvs.php/trunk/doc/man/pdftosrc.1?root=pdftex&view=log

> http://www.amasol.de/~preusse/pdftosrc/pdftosrc.1 still of any use or
> is it broken anyway?

It's different. :-)
We'll see what we can use.

Best
   Martin

From hille42 at web.de  Tue Jul 31 12:59:01 2007
From: hille42 at web.de (Hilmar Preusse)
Date: Tue, 31 Jul 2007 12:59:01 +0200
Subject: [NTG-pdftex] [tex-live] pdftosrc from Tex Live 2007 packages
In-Reply-To: <18090.35297.652206.56276@zarniwoop.ms25.local>
References: <46A85CF5.6090200@ee.uwa.edu.au>
	<87d4ye9jm6.fsf@riesling.zuerich.kuesterei.ch>
	<68c491a60707270505q1b5f038et438c8f869aeeb43c@mail.gmail.com>
	<18090.35297.652206.56276@zarniwoop.ms25.local>
Message-ID: <20070731105901.GA3584@PC23>

On 28.07.07 Reinhard Kotucha (reinhard.kotucha at web.de) wrote:
> Martin Schr?der writes:

Hi,

> > I'll reenable them in pdftexdir.
> 
> Thanks.  It's a nice and useful tool.
> 
As you do it: Is there already a man page for that tool? Is
http://www.amasol.de/~preusse/pdftosrc/pdftosrc.1 still of any use or
is it broken anyway?

Thanks,
  Hilmar
-- 
People who make no mistakes do not usually make anything.
  http://www.hilmar-preusse.de.vu/

