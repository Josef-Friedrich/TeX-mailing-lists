From hartmut_henkel@gmx.de  Thu May  8 20:29:24 2003
From: hartmut_henkel@gmx.de (Hartmut Henkel)
Date: Thu, 8 May 2003 21:29:24 +0200 (CEST)
Subject: [NTG-pdftex] pdftex.ch: pdf_set_rule() redundant output
In-Reply-To: <20030422145548.GA9417@artcom8.artcom-gmbh.de>
References: <5.2.0.9.1.20030422161001.014ee4e8@server-1>
 <20030422145548.GA9417@artcom8.artcom-gmbh.de>
Message-ID: <Pine.LNX.4.55.0305082120390.3330@hahepc1.hahe>

This is not a bug at all, IMHO just a little bit of redundant code in
the pdf output: The rule-drawing by pdf_set_rule(), 2nd else clause,
brackets also the "re f" box drawing by "q []0d 0 J" and "S Q", which is
not required, as filling commands ignore dash and linecap info, and
there is also nothing to Stroke. Therefore one can completely omit the
grouping. I have tried it and could not find any difference in
appearence.

The patch would be easy, see below.

Greetings Hartmut


--- pdftex.ch.orig	Thu Mar 27 22:10:26 2003
+++ pdftex.ch	Wed May  7 23:16:10 2003
@@ -1675,31 +1675,34 @@
 begin
     pdf_end_text;
     pdf_set_origin;
-    pdf_print_ln("q");
-    pdf_print_ln("[]0 d");
-    pdf_print_ln("0 J");
     if h <= one_bp then begin
+        pdf_print_ln("q");
+        pdf_print_ln("[]0 d");
+        pdf_print_ln("0 J");
         pdf_print_bp(h); pdf_print_ln(" w");
         pdf_print("0 "); pdf_print_bp((h + 1)/2); pdf_print_ln(" m");
         pdf_print_bp(w); pdf_print(" "); pdf_print_bp((h + 1)/2);
         pdf_print_ln(" l");
+        pdf_print_ln("S");
+        pdf_print_ln("Q");
     end
     else if w <= one_bp then begin
+        pdf_print_ln("q");
+        pdf_print_ln("[]0 d");
+        pdf_print_ln("0 J");
         pdf_print_bp(w); pdf_print_ln(" w");
         pdf_print_bp((w + 1)/2); pdf_print_ln(" 0 m");
         pdf_print_bp((w + 1)/2); pdf_print(" "); pdf_print_bp(h);
         pdf_print_ln(" l");
+        pdf_print_ln("S");
+        pdf_print_ln("Q");
     end
     else begin
-        pdf_print_ln("0 j");
-        pdf_print_ln("0 w");
         pdf_print_bp(pdf_x(x)); pdf_out(" ");
         pdf_print_bp(pdf_y(y)); pdf_out(" ");
         pdf_print_bp(w); pdf_out(" ");
         pdf_print_bp(h); pdf_print_ln(" re f");
     end;
-    pdf_print_ln("S");
-    pdf_print_ln("Q");
 end;


------------------------------------------------------------------------
Dr.-Ing. Hartmut Henkel
Oftersheim, Germany
E-Mail: hartmut_henkel@gmx.de
http://www.circuitwizard.de
------------------------------------------------------------------------

From pragma@wxs.nl  Thu May  8 21:07:55 2003
From: pragma@wxs.nl (Hans Hagen)
Date: Thu, 08 May 2003 22:07:55 +0200
Subject: [NTG-pdftex] pdftex.ch: pdf_set_rule() redundant output
In-Reply-To: <Pine.LNX.4.55.0305082120390.3330@hahepc1.hahe>
References: <20030422145548.GA9417@artcom8.artcom-gmbh.de>
 <5.2.0.9.1.20030422161001.014ee4e8@server-1>
 <20030422145548.GA9417@artcom8.artcom-gmbh.de>
Message-ID: <5.2.0.9.1.20030508220643.01a789e0@localhost>

At 21:29 08/05/2003 +0200, Hartmut Henkel wrote:
>This is not a bug at all, IMHO just a little bit of redundant code in
>the pdf output: The rule-drawing by pdf_set_rule(), 2nd else clause,
>brackets also the "re f" box drawing by "q []0d 0 J" and "S Q", which is
>not required, as filling commands ignore dash and linecap info, and
>there is also nothing to Stroke. Therefore one can completely omit the
>grouping. I have tried it and could not find any difference in
>appearence.
>
>The patch would be easy, see below.

ah, this is a left over form the time that thanh and i were torture testing 
the different methods with regards to rendering (printing, previewing, etc),

Hans
-------------------------------------------------------------------------
                                   Hans Hagen | PRAGMA ADE | pragma@wxs.nl
                       Ridderstraat 27 | 8061 GH Hasselt | The Netherlands
  tel: +31 (0)38 477 53 69 | fax: +31 (0)38 477 53 74 | www.pragma-ade.com
-------------------------------------------------------------------------
                        information: http://www.pragma-ade.com/roadmap.pdf
                     documentation: http://www.pragma-ade.com/showcase.pdf
-------------------------------------------------------------------------


From hartmut_henkel@gmx.de  Thu May  8 21:16:46 2003
From: hartmut_henkel@gmx.de (Hartmut Henkel)
Date: Thu, 8 May 2003 22:16:46 +0200 (CEST)
Subject: [NTG-pdftex] pdftex.ch: pdf_set_rule() redundant output
In-Reply-To: <5.2.0.9.1.20030508220643.01a789e0@localhost>
References: <20030422145548.GA9417@artcom8.artcom-gmbh.de>
 <5.2.0.9.1.20030422161001.014ee4e8@server-1> <20030422145548.GA9417@artcom8.artcom-gmbh.de>
 <5.2.0.9.1.20030508220643.01a789e0@localhost>
Message-ID: <Pine.LNX.4.55.0305082214110.8575@hahepc1.hahe>

Interesting! What in short is the story of using stroke or fill
depending on line width?

Hartmut


On Thu, 8 May 2003, Hans Hagen wrote:

> At 21:29 08/05/2003 +0200, Hartmut Henkel wrote:
>
> ah, this is a left over form the time that thanh and i were torture
> testing the different methods with regards to rendering (printing,
> previewing, etc),
>
> Hans

From Rolf.Niepraschk@ptb.de  Mon May 19 13:41:21 2003
From: Rolf.Niepraschk@ptb.de (Rolf Niepraschk)
Date: Mon, 19 May 2003 14:41:21 +0200
Subject: [NTG-pdftex] PandaLex
Message-ID: <3EC8D0F1.8090901@ptb.de>

About: PandaLex is the PDF parsing code from Panda, which has been split 
into its own project to increase its utility. It is a flex and bison 
description of the PDF specification, which allows programmers to define 
callbacks to handle different document elements.

==> http://www.stillhq.com/cgi-bin/getpage?area=pandalex&page=index.htm


...Rolf
-- 
|| Rolf Niepraschk c/o Physikalisch-Technische Bundesanstalt	||
|| Abbestr. 2-12; D-10587 Berlin, Germany			||
|| Tel/Fax: ++49-30-3481-316/490, email: Rolf.Niepraschk@ptb.de ||



From ms@artcom-gmbh.de  Mon May 19 14:01:40 2003
From: ms@artcom-gmbh.de (Martin Schroeder)
Date: Mon, 19 May 2003 15:01:40 +0200
Subject: [NTG-pdftex] PandaLex
In-Reply-To: <3EC8D0F1.8090901@ptb.de>
References: <3EC8D0F1.8090901@ptb.de>
Message-ID: <20030519130140.GF2527@artcom8.artcom-gmbh.de>

On 2003-05-19 14:41:21 +0200, Rolf Niepraschk wrote:
> ==> http://www.stillhq.com/cgi-bin/getpage?area=pandalex&page=index.htm

Thanks.

It's from the author of the comp.text.pdf USENET frequently asked
questions document. :-)

Best regards
        Martin
-- 
               Martin Schr√∂der, MS@ArtCom-GmbH.DE
     ArtCom GmbH, Lise-Meitner-Str 5, 28359 Bremen, Germany
          Voice +49 421 20419-44 / Fax +49 421 20419-10


From tkacvins@cox.net  Tue May 20 23:41:24 2003
From: tkacvins@cox.net (Tom Kacvinsky)
Date: Tue, 20 May 2003 18:41:24 -0400
Subject: [NTG-pdftex] PandaLex
Message-ID: <r01050400-0922-A8D578808AF211D78F69BCB059B84A08@[10.0.1.2]>

Second try:  first time this went to Martin instead of the list.
D'oh!

As Martin should know, as I figure he is the best person around
for forwarding from one list to the other. ;-)  Well, maybe Nelson
Beebe can take that "title".

Tom

On 2003/05/19 at 15:01, Martin Schroeder <ms@artcom-gmbh.de> wrote:

> On 2003-05-19 14:41:21 +0200, Rolf Niepraschk wrote:
> 

<snip>

NOTE: http://www.tinyurl.com is great for long links in emails.

> Thanks.
> 
> It's from the author of the comp.text.pdf USENET frequently asked
> questions document. :-)
> 

From amat@kabsi.at  Fri May 23 00:06:17 2003
From: amat@kabsi.at (Andreas Matthias)
Date: 23 May 2003 01:06:17 +0200
Subject: [NTG-pdftex] PDF inclusion with annotations
Message-ID: <m38ysy60pi.fsf@h081217002064.dyn.cm.kabsi.at>

Last month on pdftex mailing list we had a short discussion, whether
annotations of external PDFs could be copied when including PDFs.
I gave it a try and now I have a first partial success. The code
is far from being complete and there are still a lot of bugs in it.
Nevertheless I think it is the right time now to show you the code,
so we can discuss whether this is the right way to go on.

You can download the patches at:

http://stud3.tuwien.ac.at/~e9225580/pdftex-1.10b-incl-annot.tar.bz2


Here is a short description of the changes I did:

(1)While reading the image (function read_pdf_info), the annotations
of this image are read, too, and a map with all relevant details
about the annotations is set up. (2)While writing the reference
(/Im1 Do) to the content stream (function out_image), a dummy
annotation node is created to get a correct /Annots array. Those
dummy annotations nodes are caught during module @<Flush out PDF
annotations@> and are just delete; no dummy annotation object it
written out. (3)Eventually in function epdf_write all annotation
objects of this image are copied are written out.

Another important this which happens within the function out_image,
is the calculation to the new coordinates of the annotation's /Rect.
There are no big problems if an images is scaled with the help of
<rule spec> of \pdfximage. But their are a lot of problems if
macro packages do something like \pdfliteral{.5 0 0 .5 0 0 cm}
for scaling and similar things for rotating images. To calculate
the coordinates of /Rect, pdftex must know exactly which coordinate
transformations are actually taking place. So I introduced two
new primitives: \pdfsetctm and \pdfresetctm. 

Instead of 

   \pdfximage {doc.pdf}
   \pdfliteral{q 0 1 -1 0 0 0 cm} 
   \pdfrefximage\pdflastximage
   \pdfliteral{Q}

macro packages should do

   \pdfximage {doc.pdf}
   \pdfsetctm 0 1 -1 0 0 0
   \pdfrefximage\pdflastximage
   \pdfresetctm

Now pdftex does know about the current transformation matrix and
can calculate the correct coordinates of /Rect.

Since TeX does not have a function to scan floating-point numbers,
I used scan_dimen as a work around to scan the arguments of \pdfsetctm.
That's why you must write

   \pdfsetctm 0bp 1bp -1bp 0bp 0bp

so far. It should be no problem to change this in the future.


The primitives \pdfsetctm and \pdfresetctm create whatsit nodes.
When these nodes a shipped out \pdfsetctm pushed its arguments
on a stack and \pdfresetctm pop them again. When a \pdfrefximage
node is shipped out it can look at the stack to get the current
CTM and calculate a correct /Rect.


The tarball contains 2 plain TeX files and 2 LaTeX files which 
show some examples. To compile the LaTeX files you must apply
the patch pdftex.def.diff to pdftex.def.


And now comes the unpleasant part. Here is a list of major bugs
that those patches have :-(

* If an image is included several times, all copies have the same
  image number. Unfortunately I used this image number as the key
  to the map of annotations. That's why you cannot include pages
  several times, without getting false /Rects. This bug shouldn't
  be too difficult to fix.

* \pdfsetctm should only be used in horizontal mode. I have not
  idea why it chokes in vertical mode.

* There should be no material between \pdfsetctm and \pdfrefximage.
  Any material there would cause pdftex to call pdf_set_origin,
  which introduces a new CTM not taken into account by \pdfsetctm.

* LaTeX, graphicx: foolish things like
  \includegraphics[angle=90, angle=90]{doc.pdf} causes the call of
  the function pdf_set_origin and therefore don't work either. 

* There must not be a page break between \pdfsetctm and \pdfresetctm.

* There are probably more ...


Ciao
Andreas

