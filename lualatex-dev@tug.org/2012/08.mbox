From arthur.reutenauer at normalesup.org  Mon Aug  6 19:51:48 2012
From: arthur.reutenauer at normalesup.org (Arthur Reutenauer)
Date: Mon, 6 Aug 2012 18:51:48 +0100
Subject: [lltx] Announcing: LuaTeX support in Polyglossia
Message-ID: <20120806175148.GE6100@phare.normalesup.org>

Royal Albert Hall, London, 6 August 2012

I have the pleasure to announce version 1.30MM of Polyglossia, that
comes with experimental support for LuaTeX.  Unfortunately I can't make
an upload to CTAN at the moment because the two CTAN'ers are on holidays
(can't blame them), but brave users can download the latest version of
Polyglossia from my GitHub repository: http://gitub.com/reutenauer/polyglossia

It should be enough to just install polyglossia.sty and the gloss files
in a local texmf tree, and I encourage users to experiment with it, and
to report back to me or to one of the lists I'm emailing this message
to; but please restrict your replies to one list only.  I suggest
luatex at tug.org as the most relevant place to conduct discussions.  In
fact, I would be glad if users could send me test documents for the
languages they're using, as Polyglossia is rather lacking.

The XeTeX list is also relevant, since adding LuaTeX support means I'm
making heavy changes to polyglossia.sty; they shouldn't, however, affect
the XeTeX side of things.  But you never know.  So again, please report
any problem.

As this is very much a work in progress, many languages still don't work
at all with LuaTeX.  I'm working on them, but at the moment any
compilation will fail, so I wouldn't advise trying them.  This includes
-- but I'm afraid won't be limited to -- Arabic, Asturian, Catalan,
French, Hebrew, Indonesian, Malaysian, Persian, Serbian, Turkish,
Urdu, Vietnamese.  And Indian languages won't work at all, as has been
discussed on the XeTeX list.  Unfortunately, there is no fix for that in
the foreseeable future.

There are different reasons why the aforementioned don't work at the
moment, and I'm aware of them.  Actually, setting the British variant of
English won't work either (which is ironic, considering the location I
send this announcement from, I know).

Arthur

From schultzk at uni-trier.de  Wed Aug  8 17:43:19 2012
From: schultzk at uni-trier.de (Keith J. Schultz)
Date: Wed, 8 Aug 2012 17:43:19 +0200
Subject: [lltx] new(missing) feature for luamplib for LuaLaTeX
In-Reply-To: <Pine.LNX.4.64.1207202039090.12409@calypso.view.net.au>
References: <2902.1342774730@cl.cam.ac.uk>
 <Pine.LNX.4.64.1207202039090.12409@calypso.view.net.au>
Message-ID: <09322A1B-5CB2-4750-A845-B6CD3163EF00@uni-trier.de>

Hi Manuel, All,

I find that the mplibcode environment in LuaLaTeX is missing
an important feature. There is no way to call Lua from inside it!

I have investigated the code and found that the use of the verbatim-
environment is preventing this. But, there is a way to install a Lua-calling
mechanism.

In the Lua-code of of luamplib. the function addline needs to be patched to
catch a dolua-command, extract the Lua-function, call it and finally feed the result
in the normal way to mplib.

I have done that!

Is there an interest for such a feature.? What kind of syntax would be preferred?

It would be possible to write:

\begin{mplibcode}
	. . .

    dolua(generatesomecommands(with, and, that))

	. . .
\end{mplibcode}

regards
	Keith



From luigi.scarso at gmail.com  Wed Aug  8 17:53:43 2012
From: luigi.scarso at gmail.com (luigi scarso)
Date: Wed, 8 Aug 2012 17:53:43 +0200
Subject: [lltx] new(missing) feature for luamplib for LuaLaTeX
In-Reply-To: <09322A1B-5CB2-4750-A845-B6CD3163EF00@uni-trier.de>
References: <2902.1342774730@cl.cam.ac.uk>
 <Pine.LNX.4.64.1207202039090.12409@calypso.view.net.au>
 <09322A1B-5CB2-4750-A845-B6CD3163EF00@uni-trier.de>
Message-ID: <CAG5iGsCyVArpy_TVCZwHzTsY3Ty=nbRYY0aKpiQL=y2r-Rka1g@mail.gmail.com>

On Wed, Aug 8, 2012 at 5:43 PM, Keith J. Schultz <schultzk at uni-trier.de>wrote:

> Hi Manuel, All,
>
> I find that the mplibcode environment in LuaLaTeX is missing
> an important feature. There is no way to call Lua from inside it!
>
> I have investigated the code and found that the use of the verbatim-
> environment is preventing this. But, there is a way to install a
> Lua-calling
> mechanism.
>
> In the Lua-code of of luamplib. the function addline needs to be patched to
> catch a dolua-command, extract the Lua-function, call it and finally feed
> the result
> in the normal way to mplib.
>
> I have done that!
>
> Is there an interest for such a feature.? What kind of syntax would be
> preferred?
>
> It would be possible to write:
>
> \begin{mplibcode}
>         . . .
>
>     dolua(generatesomecommands(with, and, that))
>
>         . . .
> \end{mplibcode}
>
> regards
>         Keith
>
>
> isn't  loadstring(s [,name])  enough ?


-- 
luigi
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://tug.org/pipermail/lualatex-dev/attachments/20120808/1d3db778/attachment.html>

From Robin.Fairbairns at cl.cam.ac.uk  Sun Aug 12 00:38:41 2012
From: Robin.Fairbairns at cl.cam.ac.uk (Robin Fairbairns)
Date: Sat, 11 Aug 2012 23:38:41 +0100
Subject: [lltx] [luatex] Announcing: LuaTeX support in Polyglossia
In-Reply-To: Your message of Mon, 06 Aug 2012 18:51:48 +0100.
 <20120806175148.GE6100@phare.normalesup.org>
Message-ID: <18341.1344724721@cl.cam.ac.uk>

Arthur Reutenauer <arthur.reutenauer at normalesup.org> wrote:

> Royal Albert Hall, London, 6 August 2012
 
i hope you had a good concert.  we're only going to one this year, later
this month.

> I have the pleasure to announce version 1.30MM of Polyglossia, that
> comes with experimental support for LuaTeX.

great!  you're a star!

> Unfortunately I can't make
> an upload to CTAN at the moment because the two CTAN'ers are on holidays
> (can't blame them), but brave users can download the latest version of
> Polyglossia from my GitHub repository: http://gitub.com/reutenauer/polyglossia

i am now back from holiday, so upload if you want, to
www.tex.ac.uk/upload

robin

From Arno.Trautmann at gmx.de  Mon Aug 27 21:34:26 2012
From: Arno.Trautmann at gmx.de (Arno Trautmann)
Date: Mon, 27 Aug 2012 21:34:26 +0200
Subject: [lltx] luatexbase revisited
Message-ID: <503BCBC2.4030902@gmx.de>

Hi all,

some time ago I made a feature request for the luatexbase-mcb package. I 
wanted the user to be able to check wether a function is registered in a 
callback. [1]
At that time, I only got answers by Patrick who told me that I didn't 
need such functionality, and in fact it didn't matter with what I did 
then. But now I have a more complex function that I want to register. 
What I want:
The user has two macros \startsomething and \stopsomething. These macros 
set and remove LuaTeX attributes, respectively. In each paragraph where 
these macros are used, a function in the pre_linebreak_filter should do 
something, but not in other paragraphs. So \startsomething should add 
the function to the callback, but only if it is not already registered. 
The function will then remove itself from the callback when executed. 
luatexbase already checks this, and instead of throwing an error, a 
function like provide_callback(name,func,description,priority) should 
just be quiet.

Sorry, but I still don't see what harm such a function could do and why 
it is not provided already.

Any deeper reasons or am I just the only one misusing this feature?

cheers
Arno

[1] http://tug.org/pipermail/lualatex-dev/2011-July/001266.html

