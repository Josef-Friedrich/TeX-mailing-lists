From Philipp.Gesang at alumni.uni-heidelberg.de  Thu Aug  1 17:34:18 2013
From: Philipp.Gesang at alumni.uni-heidelberg.de (Philipp Gesang)
Date: Thu, 1 Aug 2013 17:34:18 +0200
Subject: [lltx] Optical sizes and Adobe fonts
In-Reply-To: <CAHyhA=0E1Bi+Zpr_g5NBWGwc9DG_Lrv4t20OcCo-Bed-KDfxtA@mail.gmail.com>
References: <CAHyhA=0E1Bi+Zpr_g5NBWGwc9DG_Lrv4t20OcCo-Bed-KDfxtA@mail.gmail.com>
Message-ID: <20130801153418.GA29009@phlegethon>

Hello David!

???<date: 2013-07-31, Wednesday>???<from: David Bellows>???

> Hello all,
> 
> I posted the following question on Stack Exchange about how to specify
> optical sizes for fonts that come with them. I had thought there would
> be some set of options I could specify with \setmainfont but it's
> looking more and more like that's not the case. So instead it might be
> an issue with luaotfload that I'm not capable of dealing with.
> 
> http://tex.stackexchange.com/questions/126096/selecting-optical-sizes-for-all-fonts-in-a-family

Do you have an example that shows the same problem with a free
font?

> Is this the sort of issue y'all want to hear about in general? Is
> there more information you need from me? While I'm not a coder I am
> interested in helping in whatever little ways I can. I am going
> through all the commercial fonts I've purchased over the years and
> making sure they work perfectly with LuaTeX so do you want me to
> communicate those findings with you?

In general this is a good idea, but troubleshooting without
actually having the files on a machine can be tedious. When
reporting a font that doesn?t work as expected it is best to
include the output of

    luaotfload-tool --find=<font name> --inspect

e.g.

    luaotfload-tool --find="Minion Pro Bold Italic" --inspect

(This doesn?t work with files yet but that?s a todo.) otfinfo -i
is informative as well.

I?ll look into it, but not immediately. A tracker item on github
is the best reminder ;-).

Best regards,
Philipp

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 490 bytes
Desc: not available
URL: <http://tug.org/pipermail/lualatex-dev/attachments/20130801/d32a6b64/attachment.bin>

From khaledhosny at eglug.org  Fri Aug  2 21:13:30 2013
From: khaledhosny at eglug.org (Khaled Hosny)
Date: Fri, 2 Aug 2013 21:13:30 +0200
Subject: [lltx] input normalization
In-Reply-To: <j7er1mx9qxtw$.dlg@nililand.de>
References: <j7er1mx9qxtw$.dlg@nililand.de>
Message-ID: <20130802191141.GA13771@khaled-laptop>

On Tue, Jul 30, 2013 at 02:00:09PM +0200, Ulrike Fischer wrote:
> while with xetex one gets with both inputs U+00F6.

Note that what you seeing in XeTeX is not input normalization (XeTeX
supports input normalization but it is not on by default), but is rather
done at the text layout level by HarfBuzz which is a bit clever in its
choice of normalization depending on what glyphs the font actually has,
and it can even decompose composed characters if the font has the base
and the combining mark but not the composed form for example, and it has
some exceptions for some writing systems where certain decompositions
give undesired results.

In the PDF output it does not matter of course, but it should be
different on macro level for example since input normalization is done
when reading the input files.

Regards,
Khaled

From g9ks157k at acme.softbase.org  Sat Aug  3 12:20:58 2013
From: g9ks157k at acme.softbase.org (Wolfgang Jeltsch)
Date: Sat, 3 Aug 2013 13:20:58 +0300
Subject: [lltx] luatexbase-loader having problems with symbolic links
Message-ID: <1375525258.2311.22.camel@idefix>

Hi,

I?m working under Linux and use TeXlive 2013, which contains
luatexbase-loader v0.6 from 11 May 2013.

I have some symbolic links under $TEXMFHOME/tex/latex that point to
directories that contain LaTeX packages. Usually, I can import these
packages without problems using \usepackage. However when I import
luatexbase-loader, then import of the abovementioned local packages
isn?t possible anymore.

For example, let?s assume that I have two packages called abc and xyz
under directories linked to from $TEXMFHOME/tex/latex. Consider the
following LaTeX source:

    \documentclass{article}

    \usepackage{abc}
    \usepackage{luatexbase-loader}
    \usepackage{xyz}

    \begin{document}

    \ldots

    \end{document}

Processing this source with LuaLaTeX gives me the following error
message:

    ! LaTeX Error: File `xyz.sty' not found.

Could this problem maybe be fixed?

Best wishes,
Wolfgang


From g9ks157k at acme.softbase.org  Sat Aug  3 13:27:14 2013
From: g9ks157k at acme.softbase.org (Wolfgang Jeltsch)
Date: Sat, 3 Aug 2013 14:27:14 +0300
Subject: [lltx] lualatex-math cannot find unpack function
Message-ID: <1375529234.2311.27.camel@idefix>

Hi,

if I import both amsmath and lualatex-math, I get the following error
message when LuaLaTeX tries to process \begin{document}:

! LuaTeX error
.../texmf-dist/tex/lualatex/lualatex-math/lualatex-math.lua:46:
attempt to call upvalue 'unpack' (a nil value)
stack traceback:
        .../texmf-dist/tex/lualatex/lualatex-math/lualatex-math.lua:46:
        in function 'print_class_fam_slot'
        [string "\directlua "]:1: in main chunk.
\__lltxmath_set_mathchar:NN ...\int_eval:n {`#2})}
                                                  \scan_stop: 

What is the reason for this?

Best wishes,
Wolfgang


From martin at oneiros.de  Sat Aug  3 16:40:20 2013
From: martin at oneiros.de (=?ISO-8859-1?Q?Martin_Schr=F6der?=)
Date: Sat, 3 Aug 2013 16:40:20 +0200
Subject: [lltx] lualatex-math cannot find unpack function
In-Reply-To: <1375529234.2311.27.camel@idefix>
References: <1375529234.2311.27.camel@idefix>
Message-ID: <CAP7DCDc5XQ5NG9HQgxtJYpvyp=qtuf08m=9p6C=DUxL8jnBq1g@mail.gmail.com>

2013/8/3 Wolfgang Jeltsch <g9ks157k at acme.softbase.org>:
> if I import both amsmath and lualatex-math, I get the following error
> message when LuaLaTeX tries to process \begin{document}:
>
> ! LuaTeX error
> .../texmf-dist/tex/lualatex/lualatex-math/lualatex-math.lua:46:
> attempt to call upvalue 'unpack' (a nil value)
> stack traceback:
>         .../texmf-dist/tex/lualatex/lualatex-math/lualatex-math.lua:46:
>         in function 'print_class_fam_slot'
>         [string "\directlua "]:1: in main chunk.
> \__lltxmath_set_mathchar:NN ...\int_eval:n {`#2})}
>                                                   \scan_stop:
>
> What is the reason for this?

Which version of LuaTeX do you use?

Best
   Martin

PS: IMHO this question is off-topic for this list; you should have
asked on e.g. http://tex.stackexchange.com/

From news3 at nililand.de  Sat Aug  3 17:13:24 2013
From: news3 at nililand.de (Ulrike Fischer)
Date: Sat, 3 Aug 2013 17:13:24 +0200
Subject: [lltx] lualatex-math cannot find unpack function
References: <1375529234.2311.27.camel@idefix>
 <CAP7DCDc5XQ5NG9HQgxtJYpvyp=qtuf08m=9p6C=DUxL8jnBq1g@mail.gmail.com>
Message-ID: <1f9bhc6t478qq$.dlg@nililand.de>

Am Sat, 3 Aug 2013 16:40:20 +0200 schrieb Martin Schr?der:

> 2013/8/3 Wolfgang Jeltsch <g9ks157k at acme.softbase.org>:
>> if I import both amsmath and lualatex-math, I get the following error
>> message when LuaLaTeX tries to process \begin{document}:
>>
>> ! LuaTeX error
>> .../texmf-dist/tex/lualatex/lualatex-math/lualatex-math.lua:46:
>> attempt to call upvalue 'unpack' (a nil value)
>> stack traceback:
>>         .../texmf-dist/tex/lualatex/lualatex-math/lualatex-math.lua:46:
>>         in function 'print_class_fam_slot'
>>         [string "\directlua "]:1: in main chunk.
>> \__lltxmath_set_mathchar:NN ...\int_eval:n {`#2})}
>>                                                   \scan_stop:
>>
>> What is the reason for this?
> 
> Which version of LuaTeX do you use?

I can reproduce the problem on TeXLive 2013 with 
This is LuaTeX, Version beta-0.76.0-2013061707

and this example:

\documentclass[]{article}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\usepackage{amsmath}
\usepackage{lualatex-math}
\begin{document}
blub
\end{document}

There is no problem in miktex

> PS: IMHO this question is off-topic for this list; you should have
> asked on e.g. http://tex.stackexchange.com/

I think problems with lualatex packages are on-topic on this list.


-- 
Ulrike Fischer 
http://www.troubleshooting-tex.de/


From g9ks157k at acme.softbase.org  Sat Aug  3 19:20:41 2013
From: g9ks157k at acme.softbase.org (Wolfgang Jeltsch)
Date: Sat, 3 Aug 2013 20:20:41 +0300
Subject: [lltx] lualatex-math cannot find unpack function
In-Reply-To: <1f9bhc6t478qq$.dlg@nililand.de>
References: <1375529234.2311.27.camel@idefix>
 <CAP7DCDc5XQ5NG9HQgxtJYpvyp=qtuf08m=9p6C=DUxL8jnBq1g@mail.gmail.com>
 <1f9bhc6t478qq$.dlg@nililand.de>
Message-ID: <1375550441.2311.39.camel@idefix>

Am Samstag, den 03.08.2013, 17:13 +0200 schrieb Ulrike Fischer:
> Am Sat, 3 Aug 2013 16:40:20 +0200 schrieb Martin Schr?der:
> 
> > 2013/8/3 Wolfgang Jeltsch <g9ks157k at acme.softbase.org>:
> >> if I import both amsmath and lualatex-math, I get the following error
> >> message when LuaLaTeX tries to process \begin{document}:
> >>
> >> ! LuaTeX error
> >> .../texmf-dist/tex/lualatex/lualatex-math/lualatex-math.lua:46:
> >> attempt to call upvalue 'unpack' (a nil value)
> >> stack traceback:
> >>         .../texmf-dist/tex/lualatex/lualatex-math/lualatex-math.lua:46:
> >>         in function 'print_class_fam_slot'
> >>         [string "\directlua "]:1: in main chunk.
> >> \__lltxmath_set_mathchar:NN ...\int_eval:n {`#2})}
> >>                                                   \scan_stop:
> >>
> >> What is the reason for this?
> > 
> > Which version of LuaTeX do you use?
> 
> I can reproduce the problem on TeXLive 2013 with 
> This is LuaTeX, Version beta-0.76.0-2013061707

This is also the version I?m using, except that the last digit is 8
instead of 7.

> and this example:
> 
> \documentclass[]{article}
> %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
> \usepackage{amsmath}
> \usepackage{lualatex-math}
> \begin{document}
> blub
> \end{document}

Yes, this is pretty much my test document that triggers this error.

I think I have found the source of the problem. In Lua 5.1, unpack is a
global function, while in Lua 5.2, it is a field of the global variable
table. To ensure compatibility with both Lua versions, some Lua files
(lualibs-basic-merged.lua, lualibs-lua.lua, and luaotfload-merged.lua)
contain the following code:

    if not table.unpack then
      table.unpack=_G.unpack
    elseif not unpack then
      _G.unpack=table.unpack
    end

By adding this code to lualatex-math.lua at an appropriate place, the
issue with lualatex-math and amsmath was fixed.

I will send a patch to Philipp Stephani.

Best wishes,
Wolfgang


From Philipp.Gesang at alumni.uni-heidelberg.de  Sat Aug  3 21:21:49 2013
From: Philipp.Gesang at alumni.uni-heidelberg.de (Philipp Gesang)
Date: Sat, 3 Aug 2013 21:21:49 +0200
Subject: [lltx] lualatex-math cannot find unpack function
In-Reply-To: <1375550441.2311.39.camel@idefix>
References: <1375529234.2311.27.camel@idefix>
 <CAP7DCDc5XQ5NG9HQgxtJYpvyp=qtuf08m=9p6C=DUxL8jnBq1g@mail.gmail.com>
 <1f9bhc6t478qq$.dlg@nililand.de> <1375550441.2311.39.camel@idefix>
Message-ID: <20130803192149.GA9854@phlegethon>

???<date: 2013-08-03, Saturday>???<from: Wolfgang Jeltsch>???

> Am Samstag, den 03.08.2013, 17:13 +0200 schrieb Ulrike Fischer:
> > Am Sat, 3 Aug 2013 16:40:20 +0200 schrieb Martin Schr?der:
> > 
> > > 2013/8/3 Wolfgang Jeltsch <g9ks157k at acme.softbase.org>:
> > >> if I import both amsmath and lualatex-math, I get the following error
> > >> message when LuaLaTeX tries to process \begin{document}:
> > >>
> > >> ! LuaTeX error
> > >> .../texmf-dist/tex/lualatex/lualatex-math/lualatex-math.lua:46:
> > >> attempt to call upvalue 'unpack' (a nil value)
> > >> stack traceback:
> > >>         .../texmf-dist/tex/lualatex/lualatex-math/lualatex-math.lua:46:
> > >>         in function 'print_class_fam_slot'
> > >>         [string "\directlua "]:1: in main chunk.
> > >> \__lltxmath_set_mathchar:NN ...\int_eval:n {`#2})}
> > >>                                                   \scan_stop:
> > >>
> > >> What is the reason for this?
> > > 
> > > Which version of LuaTeX do you use?
> > 
> > I can reproduce the problem on TeXLive 2013 with 
> > This is LuaTeX, Version beta-0.76.0-2013061707
> 
> This is also the version I?m using, except that the last digit is 8
> instead of 7.
> 
> > and this example:
> > 
> > \documentclass[]{article}
> > %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
> > \usepackage{amsmath}
> > \usepackage{lualatex-math}
> > \begin{document}
> > blub
> > \end{document}
> 
> Yes, this is pretty much my test document that triggers this error.
> 
> I think I have found the source of the problem. In Lua 5.1, unpack is a
> global function, while in Lua 5.2, it is a field of the global variable
> table. To ensure compatibility with both Lua versions, some Lua files
> (lualibs-basic-merged.lua, lualibs-lua.lua, and luaotfload-merged.lua)
> contain the following code:
> 
>     if not table.unpack then
>       table.unpack=_G.unpack
>     elseif not unpack then
>       _G.unpack=table.unpack

Packages shouldn?t write to _G.

>     end
> 
> By adding this code to lualatex-math.lua at an appropriate place, the
> issue with lualatex-math and amsmath was fixed.
> 
> I will send a patch to Philipp Stephani.

Fyi I?ve already sent him a pull request.

Best,
Philipp
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 490 bytes
Desc: not available
URL: <http://tug.org/pipermail/lualatex-dev/attachments/20130803/2f596436/attachment.bin>

From wolfgang at cs.ioc.ee  Sat Aug  3 19:28:07 2013
From: wolfgang at cs.ioc.ee (Wolfgang Jeltsch)
Date: Sat, 3 Aug 2013 20:28:07 +0300
Subject: [lltx] patch for lualatex-math.lua
Message-ID: <1375550887.2311.46.camel@idefix>

Hi Philipp,

I don?t know if you have followed the recent discussion on lualatex-dev
about an issue with the lualatex-math package.

The code in lualatex-math.lua relies on unpack being a global variable,
which was the case in Lua 5.1, but is not the case anymore in Lua 5.2.
As a result, I get the following error when importing amsmath and
lualatex-math in the same document:

    ! LuaTeX error
    .../texmf-dist/tex/lualatex/lualatex-math/lualatex-math.lua:46:
    attempt to call upvalue 'unpack' (a nil value)
    stack traceback:
            .../texmf-dist/tex/lualatex/lualatex-math/lualatex-math.lua:46:
            in function 'print_class_fam_slot'
            [string "\directlua "]:1: in main chunk.
    \__lltxmath_set_mathchar:NN ...\int_eval:n {`#2})}
                                                      \scan_stop: 

Other Lua files (lualibs-basic-merged.lua, lualibs-lua.lua, and
luaotfload-merged.lua) use the following code to work around this
incompatibility between Lua 5.1 and Lua 5.2:

    if not table.unpack then
      table.unpack=_G.unpack
    elseif not unpack then
      _G.unpack=table.unpack
    end

By adding this code to lualatex-math.lua at an appropriate place, I was
able to fix the issue with lualatex-math and amsmath.

I?ve attached a patch. Could this patch or some other fix for the
problem please be incorporated into lualatex-math? Thank you.

Best wishes,
Wolfgang
-------------- next part --------------
A non-text attachment was scrubbed...
Name: lualatex-math.lua.diff
Type: text/x-patch
Size: 121 bytes
Desc: not available
URL: <http://tug.org/pipermail/lualatex-dev/attachments/20130803/13394302/attachment-0001.bin>

From p.stephani2 at gmail.com  Sat Aug  3 23:28:39 2013
From: p.stephani2 at gmail.com (Philipp Stephani)
Date: Sat, 3 Aug 2013 23:28:39 +0200
Subject: [lltx] patch for lualatex-math.lua
In-Reply-To: <1375550887.2311.46.camel@idefix>
References: <1375550887.2311.46.camel@idefix>
Message-ID: <CAArVCkTTMssiFyz2=JE9F7Ki3auMq_TYniX92oekZfxhUUcdtQ@mail.gmail.com>

Thanks for the patch; I've already merged Philipp Gesang's equivalent patch
and will do a new release ASAP.


2013/8/3 Wolfgang Jeltsch <wolfgang at cs.ioc.ee>

> Hi Philipp,
>
> I don?t know if you have followed the recent discussion on lualatex-dev
> about an issue with the lualatex-math package.
>
> The code in lualatex-math.lua relies on unpack being a global variable,
> which was the case in Lua 5.1, but is not the case anymore in Lua 5.2.
> As a result, I get the following error when importing amsmath and
> lualatex-math in the same document:
>
>     ! LuaTeX error
>     .../texmf-dist/tex/lualatex/lualatex-math/lualatex-math.lua:46:
>     attempt to call upvalue 'unpack' (a nil value)
>     stack traceback:
>             .../texmf-dist/tex/lualatex/lualatex-math/lualatex-math.lua:46:
>             in function 'print_class_fam_slot'
>             [string "\directlua "]:1: in main chunk.
>     \__lltxmath_set_mathchar:NN ...\int_eval:n {`#2})}
>                                                       \scan_stop:
>
> Other Lua files (lualibs-basic-merged.lua, lualibs-lua.lua, and
> luaotfload-merged.lua) use the following code to work around this
> incompatibility between Lua 5.1 and Lua 5.2:
>
>     if not table.unpack then
>       table.unpack=_G.unpack
>     elseif not unpack then
>       _G.unpack=table.unpack
>     end
>
> By adding this code to lualatex-math.lua at an appropriate place, I was
> able to fix the issue with lualatex-math and amsmath.
>
> I?ve attached a patch. Could this patch or some other fix for the
> problem please be incorporated into lualatex-math? Thank you.
>
> Best wishes,
> Wolfgang
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://tug.org/pipermail/lualatex-dev/attachments/20130803/b0f31c6e/attachment.html>

From Philipp.Gesang at alumni.uni-heidelberg.de  Sun Aug  4 13:48:35 2013
From: Philipp.Gesang at alumni.uni-heidelberg.de (Philipp Gesang)
Date: Sun, 4 Aug 2013 13:48:35 +0200
Subject: [lltx] Optical sizes and Adobe fonts
In-Reply-To: <CAHyhA=0E1Bi+Zpr_g5NBWGwc9DG_Lrv4t20OcCo-Bed-KDfxtA@mail.gmail.com>
References: <CAHyhA=0E1Bi+Zpr_g5NBWGwc9DG_Lrv4t20OcCo-Bed-KDfxtA@mail.gmail.com>
Message-ID: <20130804114835.GC3182@phlegethon>

Hi David,

attached is a small script that lists which font size gets
assigned which font face in a 12pt document.

To test minion or garamond premiere, run:

  texlua getfontinfo.lua minion
  texlua getfontinfo.lua garamond

If it reports mismatches (likely so) then please post the output. 

Best regards,
Philipp



???<date: 2013-07-31, Wednesday>???<from: David Bellows>???

> Hello all,
> 
> I posted the following question on Stack Exchange about how to specify
> optical sizes for fonts that come with them. I had thought there would
> be some set of options I could specify with \setmainfont but it's
> looking more and more like that's not the case. So instead it might be
> an issue with luaotfload that I'm not capable of dealing with.
> 
> http://tex.stackexchange.com/questions/126096/selecting-optical-sizes-for-all-fonts-in-a-family
> 
> Is this the sort of issue y'all want to hear about in general? Is
> there more information you need from me? While I'm not a coder I am
> interested in helping in whatever little ways I can. I am going
> through all the commercial fonts I've purchased over the years and
> making sure they work perfectly with LuaTeX so do you want me to
> communicate those findings with you?
> 
> Sincerely,
> David Bellows

-- 
()  ascii ribbon campaign - against html e-mail
/\  www.asciiribbon.org   - against proprietary attachments
-------------- next part --------------
#!/usr/bin/env texlua

local fileprefix, fontname
if arg[2] then
  fileprefix      = arg[1]
  fontname        = arg[2]
elseif arg[1] == "garamond" then
  fileprefix      = "GaramondPremrPro"
  fontname        = "Garamond Premier Pro"
elseif arg[1] == "minion" then
  fileprefix      = "MinionPro"
  fontname        = "Minion Pro"
else
  print "usage:"
  print "   getfontinfo.lua minion"
  print "   getfontinfo.lua garamond"
  print "   getfontinfo.lua <font file prefix> <font name>"
  os.exit (-1)
end

-----------------------------------------------------------------------

kpse.set_program_name "luatex"

local lpeg            = require "lpeg"
local C, P, lpegmatch = lpeg.C, lpeg.P, lpeg.match
local dummyfunction   = function (...) return ... end
config = { luaotfload = { update_live = false, loglevel = 5 } }

require "lualibs"

local write, write_nl = texio.write, texio.write_nl
texio.write, texio.write_nl = dummyfunction, dummyfunction
require "luaotfload-basics-gen.lua"

require "luaotfload-override.lua"
logs.set_loglevel (config.luaotfload.loglevel)

require "luaotfload-database"

local out = function (...) io.write (string.format (...)) end

local map = function (f, t)
  local l = #t
  local tmp = { }
  if l > 0 then
    for i = 1, l do
      tmp[i] = f (t[i])
    end
  end
  return tmp
end

local names       = fonts.names
names.data        = names.load ()
local mappings    = names.data.mappings
local filedata    = names.data.filenames

local p_otf       = P".otf" * P(-1)
local p_filepfx   = P (fileprefix) * (1 - p_otf)^1 * p_otf
local p_abspath   = (1 - p_filepfx)^0 * p_filepfx

out ("\n?? Looking up %s design sizes in font index ??\n\n", fontname)

local div10       = function (x) return x / 10 end

for i = 1, #mappings do local record = mappings[i]
  if lpegmatch (p_abspath, record.filename) then
    out ("File %s.\n", record.filename)

    out (" ((%s %s %s)\n  (design %.1f) (max %.1f) (min %.1f))\n\n",
         record.sanitized.prefmodifiers,
         record.sanitized.subfamily,
         record.fontstyle_name or "nil",
         table.unpack (map (div10, record.size)))
  end
end

out ("\n?? Determining resolver results for common sizes of %s ??\n\n", fontname)

local sizes = { --- assuming 12pt main font
  { "tiny",       8    },
  { "scriptsize", 9    },
  { "small",      10.9 },
  { "normalsize", 12   },
  { "large",      14.3 },
  { "Large",      17.2 },
  { "LARGE",      20.7 },
  { "Huge",       24.8 },
}

local styles = {
  [false] = "regular",
  i       = "italic",
  b       = "bold",
  bi      = "bolditalic",
}

--- hacks like this will be unnecessary from Luaotfload 2.4 on

local nameresolver = names.resolve
local fileresolver = names.crude_file_lookup
local requesthandler

fonts.constructors           = { }
fonts.definers.registersplit = function (_, f, _) requesthandler = f end
fonts.handlers = { otf = { features = { normalize = dummyfunction,
                                        register  = dummyfunction },
                           enhancers = { register = dummyfunction } } }

require "luaotfload-features"

local getrecord = function (file)
  local index = filedata.base[file]
  if index then
    return mappings[index]
  end
end

for i = 1, #sizes do local size = sizes[i]
  out ("\\%s -> %.2f\n", size[1], size[2])

  for modifier, style in next, styles do
    modifier = modifier and "/" .. modifier .. "" or ""

    local query = "name:" .. fontname .. modifier .. "/s=" .. string.format ("%.2f", size[2])

    local tmpspec = {
      name          = query,
      lookup        = "name",
      specification = query,
      features      = { },
    }

    tmpspec       = requesthandler (tmpspec)
    tmpspec.size  = size[2] * 2^16
    local filename, _, success = nameresolver (nil, nil, tmpspec)

    local dsnsize, size_min, size_max

    local record = getrecord (filename)
    if record and next (record.size) then
      dsnsize, size_max, size_min = table.unpack (map (div10, record.size))
    else
      success = false
    end

    if success and next (record.size) then
      local fits
      if size_min < size[2] and size[2] < size_max then
        fits = true
      end
      out ("%15s : (%s %4.1f < %4.1f < %4.1f) %s\n",
           style,
           fits and "right" or "wrong",
           size_min, dsnsize, size_max,
           filename)
    else
      out ("  %s : not found or no size info!\n", filename)
    end
  end
  io.write "\n"
end

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 490 bytes
Desc: not available
URL: <http://tug.org/pipermail/lualatex-dev/attachments/20130804/abaacca2/attachment.bin>

From g9ks157k at acme.softbase.org  Mon Aug  5 16:51:04 2013
From: g9ks157k at acme.softbase.org (Wolfgang Jeltsch)
Date: Mon, 5 Aug 2013 17:51:04 +0300
Subject: [lltx] lualatex-math cannot find unpack function
In-Reply-To: <20130803192149.GA9854@phlegethon>
References: <1375529234.2311.27.camel@idefix>
 <CAP7DCDc5XQ5NG9HQgxtJYpvyp=qtuf08m=9p6C=DUxL8jnBq1g@mail.gmail.com>
 <1f9bhc6t478qq$.dlg@nililand.de> <1375550441.2311.39.camel@idefix>
 <20130803192149.GA9854@phlegethon>
Message-ID: <1375714264.5134.4.camel@idefix>

Am Samstag, den 03.08.2013, 21:21 +0200 schrieb Philipp Gesang:
> ???<date: 2013-08-03, Saturday>???<from: Wolfgang Jeltsch>???
> > I think I have found the source of the problem. In Lua 5.1, unpack is a
> > global function, while in Lua 5.2, it is a field of the global variable
> > table. To ensure compatibility with both Lua versions, some Lua files
> > (lualibs-basic-merged.lua, lualibs-lua.lua, and luaotfload-merged.lua)
> > contain the following code:
> > 
> >     if not table.unpack then
> >       table.unpack=_G.unpack
> >     elseif not unpack then
> >       _G.unpack=table.unpack
> >     end
> 
> Packages shouldn?t write to _G.

I?m aware that this is an ugly hack, not only because _G is modified,
but also because table is modified. I think it would be more appropriate
to use a local variable unpack defined as follows:

    local unpack
    if table.unpack then
        unpack = table.unpack
    else
        unpack = _G.unpack
    end

> > I will send a patch to Philipp Stephani.
> 
> Fyi I?ve already sent him a pull request.

Thank you.

Best wishes,
Wolfgang


From reinhard.kotucha at web.de  Mon Aug  5 21:39:58 2013
From: reinhard.kotucha at web.de (Reinhard Kotucha)
Date: Mon, 5 Aug 2013 21:39:58 +0200
Subject: [lltx] lualatex-math cannot find unpack function
In-Reply-To: <1375714264.5134.4.camel@idefix>
References: <1375529234.2311.27.camel@idefix>
 <CAP7DCDc5XQ5NG9HQgxtJYpvyp=qtuf08m=9p6C=DUxL8jnBq1g@mail.gmail.com>
 <1f9bhc6t478qq$.dlg@nililand.de> <1375550441.2311.39.camel@idefix>
 <20130803192149.GA9854@phlegethon> <1375714264.5134.4.camel@idefix>
Message-ID: <20991.65422.101656.280877@zaphod.ms25.net>

On 2013-08-05 at 17:51:04 +0300, Wolfgang Jeltsch wrote:

 > Am Samstag, den 03.08.2013, 21:21 +0200 schrieb Philipp Gesang:
 > > ???<date: 2013-08-03, Saturday>???<from: Wolfgang Jeltsch>???
 > > > I think I have found the source of the problem. In Lua 5.1, unpack is a
 > > > global function, while in Lua 5.2, it is a field of the global variable
 > > > table. To ensure compatibility with both Lua versions, some Lua files
 > > > (lualibs-basic-merged.lua, lualibs-lua.lua, and luaotfload-merged.lua)
 > > > contain the following code:
 > > > 
 > > >     if not table.unpack then
 > > >       table.unpack=_G.unpack
 > > >     elseif not unpack then
 > > >       _G.unpack=table.unpack
 > > >     end
 > > 
 > > Packages shouldn?t write to _G.
 > 
 > I?m aware that this is an ugly hack, not only because _G is modified,
 > but also because table is modified. I think it would be more appropriate
 > to use a local variable unpack defined as follows:
 > 
 >     local unpack
 >     if table.unpack then
 >         unpack = table.unpack
 >     else
 >         unpack = _G.unpack
 >     end

I don't think that it's wrong to provide table.unpack if it doesn't
exist already.  LuaTeX already extends the string library similarly
(string.explode).

Since Lua 5.2 provides table.unpack we should be able to rely on it.
If it's necessary at all to support an older LuaTeX, it should be
sufficient to copy the global unpack to table:

  if not table.unpack then 
    table.unpack=unpack
  end

Ideally this is done at the very beginning.  It's still possible then
to say

  local unpack=table.unpack

but it's not necessary to do it globally.  You may want to create a
local unpack within a function definition or a do-block.

I'm not sure whether it's necessary to support Lua 5.1 here since TeX
Live 2012 is frozen.  Backwards compatibility makes only sense if
there is a severe bug in TL-2012.

Regards,
  Reinhard


 > > > I will send a patch to Philipp Stephani.
 > > 
 > > Fyi I?ve already sent him a pull request.
 > 
 > Thank you.
 > 
 > Best wishes,
 > Wolfgang
 > 

-- 
----------------------------------------------------------------------------
Reinhard Kotucha                                      Phone: +49-511-3373112
Marschnerstr. 25
D-30167 Hannover                              mailto:reinhard.kotucha at web.de
----------------------------------------------------------------------------
Microsoft isn't the answer. Microsoft is the question, and the answer is NO.
----------------------------------------------------------------------------


From Philipp.Gesang at alumni.uni-heidelberg.de  Mon Aug  5 23:01:13 2013
From: Philipp.Gesang at alumni.uni-heidelberg.de (Philipp Gesang)
Date: Mon, 5 Aug 2013 23:01:13 +0200
Subject: [lltx] lualatex-math cannot find unpack function
In-Reply-To: <20991.65422.101656.280877@zaphod.ms25.net>
References: <1375529234.2311.27.camel@idefix>
 <CAP7DCDc5XQ5NG9HQgxtJYpvyp=qtuf08m=9p6C=DUxL8jnBq1g@mail.gmail.com>
 <1f9bhc6t478qq$.dlg@nililand.de> <1375550441.2311.39.camel@idefix>
 <20130803192149.GA9854@phlegethon> <1375714264.5134.4.camel@idefix>
 <20991.65422.101656.280877@zaphod.ms25.net>
Message-ID: <20130805210113.GA11172@phlegethon>

???<Datum: Monday, 05. August 2013>???<Von: Reinhard Kotucha>???

> On 2013-08-05 at 17:51:04 +0300, Wolfgang Jeltsch wrote:
> 
>  > Am Samstag, den 03.08.2013, 21:21 +0200 schrieb Philipp Gesang:
>  > > ???<date: 2013-08-03, Saturday>???<from: Wolfgang Jeltsch>???
>  > > > I think I have found the source of the problem. In Lua 5.1, unpack is a
>  > > > global function, while in Lua 5.2, it is a field of the global variable
>  > > > table. To ensure compatibility with both Lua versions, some Lua files
>  > > > (lualibs-basic-merged.lua, lualibs-lua.lua, and luaotfload-merged.lua)
>  > > > contain the following code:
>  > > > 
>  > > >     if not table.unpack then
>  > > >       table.unpack=_G.unpack
>  > > >     elseif not unpack then
>  > > >       _G.unpack=table.unpack
>  > > >     end
>  > > 
>  > > Packages shouldn?t write to _G.
>  > 
>  > I?m aware that this is an ugly hack, not only because _G is modified,
>  > but also because table is modified. I think it would be more appropriate
>  > to use a local variable unpack defined as follows:
>  > 
>  >     local unpack
>  >     if table.unpack then
>  >         unpack = table.unpack
>  >     else
>  >         unpack = _G.unpack
>  >     end
> 
> I don't think that it's wrong to provide table.unpack if it doesn't
> exist already.  LuaTeX already extends the string library similarly
> (string.explode).

In most documents the fallback is available through luaotfload or
lualibs since l-lua.lua establishes a compatibility layer [1]. In
any case, the *global* ?unpack? should only be written to by
low-level packages (ideally by the format, else perhaps
luatexbase).

<... />
>   local unpack=table.unpack
> 
> but it's not necessary to do it globally.  You may want to create a
> local unpack within a function definition or a do-block.

That?s the preferred way, a local copy is faster anyways.

> I'm not sure whether it's necessary to support Lua 5.1 here since TeX
> Live 2012 is frozen.  Backwards compatibility makes only sense if
> there is a severe bug in TL-2012.

Aiming for full compatibility is impractical due to the changes
Lua 5.2 introduced on the syntactical level: newlines preceding
function parameters, the goto statement, and "\z". That aside,
compatibility with earlier versions of Luatex is of value when
testing for regressions. And don?t forget: CTAN still has 0.70.1
[2].

Best regards,
Philipp

[1] https://github.com/lualatex/lualibs/blob/master/lualibs-lua.lua#L87
[2] http://ctan.org/pkg/luatex

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 490 bytes
Desc: not available
URL: <http://tug.org/pipermail/lualatex-dev/attachments/20130805/ab99fc06/attachment.bin>

From g9ks157k at acme.softbase.org  Tue Aug  6 16:59:10 2013
From: g9ks157k at acme.softbase.org (Wolfgang Jeltsch)
Date: Tue, 6 Aug 2013 17:59:10 +0300
Subject: [lltx] lualatex-math cannot find unpack function
In-Reply-To: <20130805210113.GA11172@phlegethon>
References: <1375529234.2311.27.camel@idefix>
 <CAP7DCDc5XQ5NG9HQgxtJYpvyp=qtuf08m=9p6C=DUxL8jnBq1g@mail.gmail.com>
 <1f9bhc6t478qq$.dlg@nililand.de> <1375550441.2311.39.camel@idefix>
 <20130803192149.GA9854@phlegethon> <1375714264.5134.4.camel@idefix>
 <20991.65422.101656.280877@zaphod.ms25.net>
 <20130805210113.GA11172@phlegethon>
Message-ID: <1375801150.8481.2.camel@idefix>

Am Montag, den 05.08.2013, 23:01 +0200 schrieb Philipp Gesang:
> In most documents the fallback is available through luaotfload or
> lualibs since l-lua.lua establishes a compatibility layer [1].

I think it would be best if the compatibility code would exist in only
one core Lua module, which is then imported by the other modules. I
think the current solution, where the same patching of table (or _G) is
done in several modules, is somehow wrong.

Best wishes,
Wolfgang


From Philipp.Gesang at alumni.uni-heidelberg.de  Wed Aug  7 09:14:36 2013
From: Philipp.Gesang at alumni.uni-heidelberg.de (Philipp Gesang)
Date: Wed, 7 Aug 2013 09:14:36 +0200
Subject: [lltx] lualatex-math cannot find unpack function
In-Reply-To: <1375801150.8481.2.camel@idefix>
References: <1375529234.2311.27.camel@idefix>
 <CAP7DCDc5XQ5NG9HQgxtJYpvyp=qtuf08m=9p6C=DUxL8jnBq1g@mail.gmail.com>
 <1f9bhc6t478qq$.dlg@nililand.de> <1375550441.2311.39.camel@idefix>
 <20130803192149.GA9854@phlegethon> <1375714264.5134.4.camel@idefix>
 <20991.65422.101656.280877@zaphod.ms25.net>
 <20130805210113.GA11172@phlegethon>
 <1375801150.8481.2.camel@idefix>
Message-ID: <20130807071436.GA21942@phlegethon>

???<date: 2013-08-06, Tuesday>???<from: Wolfgang Jeltsch>???

> Am Montag, den 05.08.2013, 23:01 +0200 schrieb Philipp Gesang:
> > In most documents the fallback is available through luaotfload or
> > lualibs since l-lua.lua establishes a compatibility layer [1].
> 
> I think it would be best if the compatibility code would exist in only
> one core Lua module, which is then imported by the other modules. I
> think the current solution, where the same patching of table (or _G) is
> done in several modules, is somehow wrong.

The code was written by Hans, it is him you have to address your
feature requests to.

Although there is a good deal of duplication between Lualibs and
Luaotfload code for obvious reasons, I don?t see a problem
insofar as the basic modules do not break when loaded multiple
times. Anyways, it would be possible to have the Lualibs detect
the presence of Luaotfload and then differentiate as to which
libraries it loads. But then the parts would be loaded out of
order. I?m not optimistic regarding the outcome as some code uses
fallbacks for missing functionality and we would have to isolate
those regions and reinject them so they use the correct version.
Naturally that is going to be a fragile arrangement which would
have to be checked every time there is a change to the core
libraries. I don?t think that?d be worth the effort since the
gain is at best marginal.

Best,
Philipp
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 490 bytes
Desc: not available
URL: <http://tug.org/pipermail/lualatex-dev/attachments/20130807/c21ebabd/attachment.bin>

From g9ks157k at acme.softbase.org  Wed Aug  7 11:12:22 2013
From: g9ks157k at acme.softbase.org (Wolfgang Jeltsch)
Date: Wed, 7 Aug 2013 12:12:22 +0300
Subject: [lltx] lualatex-math cannot find unpack function
In-Reply-To: <20130807071436.GA21942@phlegethon>
References: <1375529234.2311.27.camel@idefix>
 <CAP7DCDc5XQ5NG9HQgxtJYpvyp=qtuf08m=9p6C=DUxL8jnBq1g@mail.gmail.com>
 <1f9bhc6t478qq$.dlg@nililand.de> <1375550441.2311.39.camel@idefix>
 <20130803192149.GA9854@phlegethon> <1375714264.5134.4.camel@idefix>
 <20991.65422.101656.280877@zaphod.ms25.net>
 <20130805210113.GA11172@phlegethon> <1375801150.8481.2.camel@idefix>
 <20130807071436.GA21942@phlegethon>
Message-ID: <1375866742.8481.14.camel@idefix>

Am Mittwoch, den 07.08.2013, 09:14 +0200 schrieb Philipp Gesang:
> ???<date: 2013-08-06, Tuesday>???<from: Wolfgang Jeltsch>???
> 
> > Am Montag, den 05.08.2013, 23:01 +0200 schrieb Philipp Gesang:
> > > In most documents the fallback is available through luaotfload or
> > > lualibs since l-lua.lua establishes a compatibility layer [1].
> > 
> > I think it would be best if the compatibility code would exist in only
> > one core Lua module, which is then imported by the other modules. I
> > think the current solution, where the same patching of table (or _G) is
> > done in several modules, is somehow wrong.
> 
> The code was written by Hans, it is him you have to address your
> feature requests to.

Hmm, the lualibs and luaotfload packages don?t list Hans as a
maintainer, but they do list you. ;-)  Furthermore, luaotfload wasn?t
developed by Hans at all from what I can see on the CTAN package
description.

Is lualibs actually a fork of some parts of ConTeXt that is now further
developed by the lualibs maintainers? Or does it just mirror some parts
of ConTeXt, so that it gets its changes from the upstream ConTeXt code?

> Although there is a good deal of duplication between Lualibs and
> Luaotfload code for obvious reasons, I don?t see a problem
> insofar as the basic modules do not break when loaded multiple
> times. Anyways, it would be possible to have the Lualibs detect
> the presence of Luaotfload and then differentiate as to which
> libraries it loads. But then the parts would be loaded out of
> order. I?m not optimistic regarding the outcome as some code uses
> fallbacks for missing functionality and we would have to isolate
> those regions and reinject them so they use the correct version.
> Naturally that is going to be a fragile arrangement which would
> have to be checked every time there is a change to the core
> libraries. I don?t think that?d be worth the effort since the
> gain is at best marginal.

I think you have misunderstood me. I proposed to put the compatibility
code into a core package that is loaded by all packages that need it.
There is already luatexbase-compat. Why not use this?

Best wishes,
Wolfgang


From Philipp.Gesang at alumni.uni-heidelberg.de  Wed Aug  7 11:57:28 2013
From: Philipp.Gesang at alumni.uni-heidelberg.de (Philipp Gesang)
Date: Wed, 7 Aug 2013 11:57:28 +0200
Subject: [lltx] lualatex-math cannot find unpack function
In-Reply-To: <1375866742.8481.14.camel@idefix>
References: <CAP7DCDc5XQ5NG9HQgxtJYpvyp=qtuf08m=9p6C=DUxL8jnBq1g@mail.gmail.com>
 <1f9bhc6t478qq$.dlg@nililand.de> <1375550441.2311.39.camel@idefix>
 <20130803192149.GA9854@phlegethon> <1375714264.5134.4.camel@idefix>
 <20991.65422.101656.280877@zaphod.ms25.net>
 <20130805210113.GA11172@phlegethon>
 <1375801150.8481.2.camel@idefix>
 <20130807071436.GA21942@phlegethon>
 <1375866742.8481.14.camel@idefix>
Message-ID: <20130807095728.GA22787@phlegethon>

???<date: 2013-08-07, Wednesday>???<from: Wolfgang Jeltsch>???

> Am Mittwoch, den 07.08.2013, 09:14 +0200 schrieb Philipp Gesang:
> > ???<date: 2013-08-06, Tuesday>???<from: Wolfgang Jeltsch>???
> > 
> > > Am Montag, den 05.08.2013, 23:01 +0200 schrieb Philipp Gesang:
> > > > In most documents the fallback is available through luaotfload or
> > > > lualibs since l-lua.lua establishes a compatibility layer [1].
> > > 
> > > I think it would be best if the compatibility code would exist in only
> > > one core Lua module, which is then imported by the other modules. I
> > > think the current solution, where the same patching of table (or _G) is
> > > done in several modules, is somehow wrong.
> > 
> > The code was written by Hans, it is him you have to address your
> > feature requests to.
> 
> Hmm, the lualibs and luaotfload packages don?t list Hans as a
> maintainer, but they do list you. ;-)

To be fair, although the library code is written by Hans he
doesn?t actually ?maintain? the lualibs package.

>                                        Furthermore, luaotfload wasn?t
> developed by Hans at all from what I can see on the CTAN package
> description.

First sentence of the manual:

  This package is an adaptation of the ConTEXt font loading system.

This is just one of multiple attributions. Also read the file
headers: they make it precisely clear who contributed which file.
As to the CTAN package: Hans does not maintain luaotfload, he
supplies the fontloader which we integrate into the Latex
ecosystem. Luaotfload does not modify the fontloader code in any
way.

> Is lualibs actually a fork of some parts of ConTeXt that is now further
> developed by the lualibs maintainers? Or does it just mirror some parts
> of ConTeXt, so that it gets its changes from the upstream ConTeXt code?

The libraries are imported from Context untouched on a regular
basis. We only package them into two self-contained files for
convenience. Lualibs is not a fork, and you could as well achieve
the same effect by using the files from Context directly, if you
know how.

> > Although there is a good deal of duplication between Lualibs and
> > Luaotfload code for obvious reasons, I don?t see a problem
> > insofar as the basic modules do not break when loaded multiple
> > times. Anyways, it would be possible to have the Lualibs detect
> > the presence of Luaotfload and then differentiate as to which
> > libraries it loads. But then the parts would be loaded out of
> > order. I?m not optimistic regarding the outcome as some code uses
> > fallbacks for missing functionality and we would have to isolate
> > those regions and reinject them so they use the correct version.
> > Naturally that is going to be a fragile arrangement which would
> > have to be checked every time there is a change to the core
> > libraries. I don?t think that?d be worth the effort since the
> > gain is at best marginal.
> 
> I think you have misunderstood me. I proposed to put the compatibility
> code into a core package that is loaded by all packages that need it.
> There is already luatexbase-compat. Why not use this?

Good question. It wouldn?t hurt, I guess, but in any case the
code in the Lualibs and Luaotfload will stay as it is.

Philipp

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 490 bytes
Desc: not available
URL: <http://tug.org/pipermail/lualatex-dev/attachments/20130807/e114dd8c/attachment.bin>

From wolfgang at cs.ioc.ee  Fri Aug 16 13:18:56 2013
From: wolfgang at cs.ioc.ee (Wolfgang Jeltsch)
Date: Fri, 16 Aug 2013 14:18:56 +0300
Subject: [lltx] patch for lualatex-math.lua
In-Reply-To: <CAArVCkTTMssiFyz2=JE9F7Ki3auMq_TYniX92oekZfxhUUcdtQ@mail.gmail.com>
References: <1375550887.2311.46.camel@idefix>
 <CAArVCkTTMssiFyz2=JE9F7Ki3auMq_TYniX92oekZfxhUUcdtQ@mail.gmail.com>
Message-ID: <1376651936.2936.1.camel@idefix>

Hi,

I see that the patched package has been uploaded to CTAN. Surprisingly,
it hasn?t gone into TeX Live. Does anyone know why?

Best wishes,
Wolfgang

Am Samstag, den 03.08.2013, 23:28 +0200 schrieb Philipp Stephani:
> Thanks for the patch; I've already merged Philipp Gesang's equivalent
> patch and will do a new release ASAP.
> 
> 
> 2013/8/3 Wolfgang Jeltsch <wolfgang at cs.ioc.ee>
>         Hi Philipp,
>         
>         I don?t know if you have followed the recent discussion on
>         lualatex-dev
>         about an issue with the lualatex-math package.
>         
>         The code in lualatex-math.lua relies on unpack being a global
>         variable,
>         which was the case in Lua 5.1, but is not the case anymore in
>         Lua 5.2.
>         As a result, I get the following error when importing amsmath
>         and
>         lualatex-math in the same document:
>         
>             ! LuaTeX error
>         
>           .../texmf-dist/tex/lualatex/lualatex-math/lualatex-math.lua:46:
>             attempt to call upvalue 'unpack' (a nil value)
>             stack traceback:
>         
>           .../texmf-dist/tex/lualatex/lualatex-math/lualatex-math.lua:46:
>                     in function 'print_class_fam_slot'
>                     [string "\directlua "]:1: in main chunk.
>             \__lltxmath_set_mathchar:NN ...\int_eval:n {`#2})}
>         
>         \scan_stop:
>         
>         Other Lua files (lualibs-basic-merged.lua, lualibs-lua.lua,
>         and
>         luaotfload-merged.lua) use the following code to work around
>         this
>         incompatibility between Lua 5.1 and Lua 5.2:
>         
>             if not table.unpack then
>               table.unpack=_G.unpack
>             elseif not unpack then
>               _G.unpack=table.unpack
>             end
>         
>         By adding this code to lualatex-math.lua at an appropriate
>         place, I was
>         able to fix the issue with lualatex-math and amsmath.
>         
>         I?ve attached a patch. Could this patch or some other fix for
>         the
>         problem please be incorporated into lualatex-math? Thank you.
>         
>         Best wishes,
>         Wolfgang
> 
> 



From g9ks157k at acme.softbase.org  Fri Aug 16 13:21:14 2013
From: g9ks157k at acme.softbase.org (Wolfgang Jeltsch)
Date: Fri, 16 Aug 2013 14:21:14 +0300
Subject: [lltx] luatexbase-loader having problems with symbolic links
In-Reply-To: <1375525258.2311.22.camel@idefix>
References: <1375525258.2311.22.camel@idefix>
Message-ID: <1376652074.2936.3.camel@idefix>

Hi,

can you *please* look (again) at this bug report I sent on 3 August?

Best wishes,
Wolfgang

Am Samstag, den 03.08.2013, 13:20 +0300 schrieb Wolfgang Jeltsch:
> Hi,
> 
> I?m working under Linux and use TeXlive 2013, which contains
> luatexbase-loader v0.6 from 11 May 2013.
> 
> I have some symbolic links under $TEXMFHOME/tex/latex that point to
> directories that contain LaTeX packages. Usually, I can import these
> packages without problems using \usepackage. However when I import
> luatexbase-loader, then import of the abovementioned local packages
> isn?t possible anymore.
> 
> For example, let?s assume that I have two packages called abc and xyz
> under directories linked to from $TEXMFHOME/tex/latex. Consider the
> following LaTeX source:
> 
>     \documentclass{article}
> 
>     \usepackage{abc}
>     \usepackage{luatexbase-loader}
>     \usepackage{xyz}
> 
>     \begin{document}
> 
>     \ldots
> 
>     \end{document}
> 
> Processing this source with LuaLaTeX gives me the following error
> message:
> 
>     ! LaTeX Error: File `xyz.sty' not found.
> 
> Could this problem maybe be fixed?
> 
> Best wishes,
> Wolfgang
> 



From g9ks157k at acme.softbase.org  Fri Aug 16 13:45:58 2013
From: g9ks157k at acme.softbase.org (Wolfgang Jeltsch)
Date: Fri, 16 Aug 2013 14:45:58 +0300
Subject: [lltx] luatex.sty and luatexbase.sty
Message-ID: <1376653558.2936.17.camel@idefix>

Hi,

it seems that luatex.sty tries to solve problems that also
luatexbase.sty tries to solve. For example, both seem to deal with
attributes and catcode tables.

Now I have discovered that I cannot load luatexbase if I have already
loaded luacolor, which uses luatex.sty. If I try, I get the following
error message:

    ! LuaTeX error
    $TEXMFROOT/texmf-dist/tex/luatex/luatexbase/attr.lua:43:
    luatexbase error: attribute 0 has already been set by
    ewattributemacro from luatex.sty, not belonging to this package,
    this makesluaotfload unusable. Please report to the maintainer of
    luatex.sty
    stack traceback:
            [C]: in function 'error'
            $TEXMFROOT/texmf-dist/tex/luatex/luatexbase/attr.lua:43:
            in main chunk
            [C]: in function 'require'
            [string "\directlua "]:1: in main chunk.
    l.90 ...exbase at directlua{require('luatexbase.attr')}

Is luatex.sty just outdated and shouldn?t be used anymore? If yes, than
maybe I shouldn?t tell the maintainer of luatex.sty about this problem,
but ask the maintainer of luacolor (which happens to be the same person)
to not use luatex.sty anymore.

Any enlightenment would be greatly appreciated.

Best wishes,
Wolfgang


From elie.roux at telecom-bretagne.eu  Fri Aug 16 14:51:16 2013
From: elie.roux at telecom-bretagne.eu (=?UTF-8?B?w4lsaWUgUm91eA==?=)
Date: Fri, 16 Aug 2013 14:51:16 +0200
Subject: [lltx] luatex.sty and luatexbase.sty
In-Reply-To: <1376653558.2936.17.camel@idefix>
References: <1376653558.2936.17.camel@idefix>
Message-ID: <520E2044.80302@telecom-bretagne.eu>

Dear Wolfgang,

Thank you for reporting this. We are in this totally weird situation for 
some years now, it would be a very good thing if we could get out of it...

There are conflicts between luatexbase.sty and luatex.sty on many 
things, but luatexbase.sty is maintained and developped while luatex.sty 
is not. The best would be to merge them, but a proper request should be 
done to Heiko, which it not always easy to reach... I'll try to do it 
soon (by the end of the month).

Thank you,
-- 
Elie

From g9ks157k at acme.softbase.org  Fri Aug 16 15:47:30 2013
From: g9ks157k at acme.softbase.org (Wolfgang Jeltsch)
Date: Fri, 16 Aug 2013 16:47:30 +0300
Subject: [lltx] luatex.sty and luatexbase.sty
In-Reply-To: <520E2044.80302@telecom-bretagne.eu>
References: <1376653558.2936.17.camel@idefix>
 <520E2044.80302@telecom-bretagne.eu>
Message-ID: <1376660850.2936.20.camel@idefix>

Hi ?lie,

thank you very much.

So it seems that I should avoid using luacolor for the moment, and that
for own LuaLaTeX packages I might write, I should use luatexbase.sty
instead of luatex.sty, right?

Best wishes,
Wolfgang

Am Freitag, den 16.08.2013, 14:51 +0200 schrieb ?lie Roux:
> Dear Wolfgang,
> 
> Thank you for reporting this. We are in this totally weird situation for 
> some years now, it would be a very good thing if we could get out of it...
> 
> There are conflicts between luatexbase.sty and luatex.sty on many 
> things, but luatexbase.sty is maintained and developped while luatex.sty 
> is not. The best would be to merge them, but a proper request should be 
> done to Heiko, which it not always easy to reach... I'll try to do it 
> soon (by the end of the month).
> 
> Thank you,



From Philipp.Gesang at alumni.uni-heidelberg.de  Fri Aug 16 23:20:43 2013
From: Philipp.Gesang at alumni.uni-heidelberg.de (Philipp Gesang)
Date: Fri, 16 Aug 2013 23:20:43 +0200
Subject: [lltx] luatexbase-loader having problems with symbolic links
In-Reply-To: <1376652074.2936.3.camel@idefix>
References: <1375525258.2311.22.camel@idefix> <1376652074.2936.3.camel@idefix>
Message-ID: <20130816212043.GA7442@phlegethon>

???<date: 2013-08-16, Friday>???<from: Wolfgang Jeltsch>???

> Hi,
> 
> can you *please* look (again) at this bug report I sent on 3 August?

Hi Wolfgang,

this is a consequence of initializing kpathsea. Your example can
be condensed to:


  \documentclass {article}
  \usepackage {pkg1}
  \directlua {kpse.set_program_name "luatex"}
  \usepackage {pkg2}

  \begin{document} \ldots \end{document}

Once kpse is up, files in symlinked dirs aren?t resolved anymore.
Note that this is consistent with the behavior of kpsewhich. I
haven?t much experience with the kpse library. There is not much
to configure about it from within Luatex, and unless you are
willing to go at great lengths to reimplement all file locators
(like Context) it can?t be avoided. 

Best,
Philipp


> 
> Best wishes,
> Wolfgang
> 
> Am Samstag, den 03.08.2013, 13:20 +0300 schrieb Wolfgang Jeltsch:
> > Hi,
> > 
> > I?m working under Linux and use TeXlive 2013, which contains
> > luatexbase-loader v0.6 from 11 May 2013.
> > 
> > I have some symbolic links under $TEXMFHOME/tex/latex that point to
> > directories that contain LaTeX packages. Usually, I can import these
> > packages without problems using \usepackage. However when I import
> > luatexbase-loader, then import of the abovementioned local packages
> > isn?t possible anymore.
> > 
> > For example, let?s assume that I have two packages called abc and xyz
> > under directories linked to from $TEXMFHOME/tex/latex. Consider the
> > following LaTeX source:
> > 
> >     \documentclass{article}
> > 
> >     \usepackage{abc}
> >     \usepackage{luatexbase-loader}
> >     \usepackage{xyz}
> > 
> >     \begin{document}
> > 
> >     \ldots
> > 
> >     \end{document}
> > 
> > Processing this source with LuaLaTeX gives me the following error
> > message:
> > 
> >     ! LaTeX Error: File `xyz.sty' not found.
> > 
> > Could this problem maybe be fixed?
> > 
> > Best wishes,
> > Wolfgang
> > 
> 
> 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 490 bytes
Desc: not available
URL: <http://tug.org/pipermail/lualatex-dev/attachments/20130816/e72c8af0/attachment.bin>

From Philipp.Gesang at alumni.uni-heidelberg.de  Fri Aug 16 23:31:31 2013
From: Philipp.Gesang at alumni.uni-heidelberg.de (Philipp Gesang)
Date: Fri, 16 Aug 2013 23:31:31 +0200
Subject: [lltx] luatexbase-loader having problems with symbolic links
In-Reply-To: <20130816212043.GA7442@phlegethon>
References: <1375525258.2311.22.camel@idefix> <1376652074.2936.3.camel@idefix>
 <20130816212043.GA7442@phlegethon>
Message-ID: <20130816213131.GA8256@phlegethon>

This comment from the BUGS file in the kpathsea dir of the Luatex
source tree might interest you:

   * Your files reside in a directory that is only pointed to via a
     symbolic link, in a leaf directory and is not listed in `ls-R'.

     Unfortunately, Kpathsea's subdirectory searching has an
     irremediable deficiency: If a directory D being searched for
     subdirectories contains plain files and symbolic links to other
     directories, but no true subdirectories, D will be considered a
     leaf directory, i.e., the symbolic links will not be followed.
     *Note Subdirectory expansion::.

     You can work around this problem by creating an empty dummy
     subdirectory in D. Then D will no longer be a leaf, and the
     symlinks will be followed.

I just checked and indeed, creating a ?real? directory where the
directory is symlinked to does make kpse find the files even
after initialising it.

Hth,
Philipp

???<date: 2013-08-16, Friday>???<from: Philipp Gesang>???

> ???<date: 2013-08-16, Friday>???<from: Wolfgang Jeltsch>???
> 
> > Hi,
> > 
> > can you *please* look (again) at this bug report I sent on 3 August?
> 
> Hi Wolfgang,
> 
> this is a consequence of initializing kpathsea. Your example can
> be condensed to:
> 
> 
>   \documentclass {article}
>   \usepackage {pkg1}
>   \directlua {kpse.set_program_name "luatex"}
>   \usepackage {pkg2}
> 
>   \begin{document} \ldots \end{document}
> 
> Once kpse is up, files in symlinked dirs aren?t resolved anymore.
> Note that this is consistent with the behavior of kpsewhich. I
> haven?t much experience with the kpse library. There is not much
> to configure about it from within Luatex, and unless you are
> willing to go at great lengths to reimplement all file locators
> (like Context) it can?t be avoided. 
> 
> Best,
> Philipp
> 
> 
> > 
> > Best wishes,
> > Wolfgang
> > 
> > Am Samstag, den 03.08.2013, 13:20 +0300 schrieb Wolfgang Jeltsch:
> > > Hi,
> > > 
> > > I?m working under Linux and use TeXlive 2013, which contains
> > > luatexbase-loader v0.6 from 11 May 2013.
> > > 
> > > I have some symbolic links under $TEXMFHOME/tex/latex that point to
> > > directories that contain LaTeX packages. Usually, I can import these
> > > packages without problems using \usepackage. However when I import
> > > luatexbase-loader, then import of the abovementioned local packages
> > > isn?t possible anymore.
> > > 
> > > For example, let?s assume that I have two packages called abc and xyz
> > > under directories linked to from $TEXMFHOME/tex/latex. Consider the
> > > following LaTeX source:
> > > 
> > >     \documentclass{article}
> > > 
> > >     \usepackage{abc}
> > >     \usepackage{luatexbase-loader}
> > >     \usepackage{xyz}
> > > 
> > >     \begin{document}
> > > 
> > >     \ldots
> > > 
> > >     \end{document}
> > > 
> > > Processing this source with LuaLaTeX gives me the following error
> > > message:
> > > 
> > >     ! LaTeX Error: File `xyz.sty' not found.
> > > 
> > > Could this problem maybe be fixed?
> > > 
> > > Best wishes,
> > > Wolfgang
> > > 
> > 
> > 


-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 490 bytes
Desc: not available
URL: <http://tug.org/pipermail/lualatex-dev/attachments/20130816/8e0bf0f4/attachment-0001.bin>

From g9ks157k at acme.softbase.org  Sat Aug 17 17:56:31 2013
From: g9ks157k at acme.softbase.org (Wolfgang Jeltsch)
Date: Sat, 17 Aug 2013 18:56:31 +0300
Subject: [lltx] luatexbase-loader having problems with symbolic links
In-Reply-To: <20130816213131.GA8256@phlegethon>
References: <1375525258.2311.22.camel@idefix>
 <1376652074.2936.3.camel@idefix> <20130816212043.GA7442@phlegethon>
 <20130816213131.GA8256@phlegethon>
Message-ID: <1376754991.4146.9.camel@idefix>

Hi Philipp,

thanks a lot for this information. I created a dummy directory in my
directory of symlinks, and now all packages are found.

Best wishes,
Wolfgang

Am Freitag, den 16.08.2013, 23:31 +0200 schrieb Philipp Gesang:
> This comment from the BUGS file in the kpathsea dir of the Luatex
> source tree might interest you:
> 
>    * Your files reside in a directory that is only pointed to via a
>      symbolic link, in a leaf directory and is not listed in `ls-R'.
> 
>      Unfortunately, Kpathsea's subdirectory searching has an
>      irremediable deficiency: If a directory D being searched for
>      subdirectories contains plain files and symbolic links to other
>      directories, but no true subdirectories, D will be considered a
>      leaf directory, i.e., the symbolic links will not be followed.
>      *Note Subdirectory expansion::.
> 
>      You can work around this problem by creating an empty dummy
>      subdirectory in D. Then D will no longer be a leaf, and the
>      symlinks will be followed.
> 
> I just checked and indeed, creating a ?real? directory where the
> directory is symlinked to does make kpse find the files even
> after initialising it.
> 
> Hth,
> Philipp
> 
> ???<date: 2013-08-16, Friday>???<from: Philipp Gesang>???
> 
> > ???<date: 2013-08-16, Friday>???<from: Wolfgang Jeltsch>???
> > 
> > > Hi,
> > > 
> > > can you *please* look (again) at this bug report I sent on 3 August?
> > 
> > Hi Wolfgang,
> > 
> > this is a consequence of initializing kpathsea. Your example can
> > be condensed to:
> > 
> > 
> >   \documentclass {article}
> >   \usepackage {pkg1}
> >   \directlua {kpse.set_program_name "luatex"}
> >   \usepackage {pkg2}
> > 
> >   \begin{document} \ldots \end{document}
> > 
> > Once kpse is up, files in symlinked dirs aren?t resolved anymore.
> > Note that this is consistent with the behavior of kpsewhich. I
> > haven?t much experience with the kpse library. There is not much
> > to configure about it from within Luatex, and unless you are
> > willing to go at great lengths to reimplement all file locators
> > (like Context) it can?t be avoided. 
> > 
> > Best,
> > Philipp
> > 
> > 
> > > 
> > > Best wishes,
> > > Wolfgang
> > > 
> > > Am Samstag, den 03.08.2013, 13:20 +0300 schrieb Wolfgang Jeltsch:
> > > > Hi,
> > > > 
> > > > I?m working under Linux and use TeXlive 2013, which contains
> > > > luatexbase-loader v0.6 from 11 May 2013.
> > > > 
> > > > I have some symbolic links under $TEXMFHOME/tex/latex that point to
> > > > directories that contain LaTeX packages. Usually, I can import these
> > > > packages without problems using \usepackage. However when I import
> > > > luatexbase-loader, then import of the abovementioned local packages
> > > > isn?t possible anymore.
> > > > 
> > > > For example, let?s assume that I have two packages called abc and xyz
> > > > under directories linked to from $TEXMFHOME/tex/latex. Consider the
> > > > following LaTeX source:
> > > > 
> > > >     \documentclass{article}
> > > > 
> > > >     \usepackage{abc}
> > > >     \usepackage{luatexbase-loader}
> > > >     \usepackage{xyz}
> > > > 
> > > >     \begin{document}
> > > > 
> > > >     \ldots
> > > > 
> > > >     \end{document}
> > > > 
> > > > Processing this source with LuaLaTeX gives me the following error
> > > > message:
> > > > 
> > > >     ! LaTeX Error: File `xyz.sty' not found.
> > > > 
> > > > Could this problem maybe be fixed?
> > > > 
> > > > Best wishes,
> > > > Wolfgang
> > > > 
> > > 
> > > 
> 
> 



From g9ks157k at acme.softbase.org  Sun Aug 18 00:09:09 2013
From: g9ks157k at acme.softbase.org (Wolfgang Jeltsch)
Date: Sun, 18 Aug 2013 01:09:09 +0300
Subject: [lltx] patch for lualatex-math.lua
In-Reply-To: <1376651936.2936.1.camel@idefix>
References: <1375550887.2311.46.camel@idefix>
 <CAArVCkTTMssiFyz2=JE9F7Ki3auMq_TYniX92oekZfxhUUcdtQ@mail.gmail.com>
 <1376651936.2936.1.camel@idefix>
Message-ID: <1376777349.8580.16.camel@idefix>

I?ve meanwhile found out that the mirror I?m using seems to be flawed,
although it was chosen by the TeX Live installation script. It still has
lualatex-math from 13 January 2013!

Best wishes,
Wolfgang

Am Freitag, den 16.08.2013, 14:18 +0300 schrieb Wolfgang Jeltsch:
> Hi,
> 
> I see that the patched package has been uploaded to CTAN. Surprisingly,
> it hasn?t gone into TeX Live. Does anyone know why?
> 
> Best wishes,
> Wolfgang
> 
> Am Samstag, den 03.08.2013, 23:28 +0200 schrieb Philipp Stephani:
> > Thanks for the patch; I've already merged Philipp Gesang's equivalent
> > patch and will do a new release ASAP.
> > 
> > 
> > 2013/8/3 Wolfgang Jeltsch <wolfgang at cs.ioc.ee>
> >         Hi Philipp,
> >         
> >         I don?t know if you have followed the recent discussion on
> >         lualatex-dev
> >         about an issue with the lualatex-math package.
> >         
> >         The code in lualatex-math.lua relies on unpack being a global
> >         variable,
> >         which was the case in Lua 5.1, but is not the case anymore in
> >         Lua 5.2.
> >         As a result, I get the following error when importing amsmath
> >         and
> >         lualatex-math in the same document:
> >         
> >             ! LuaTeX error
> >         
> >           .../texmf-dist/tex/lualatex/lualatex-math/lualatex-math.lua:46:
> >             attempt to call upvalue 'unpack' (a nil value)
> >             stack traceback:
> >         
> >           .../texmf-dist/tex/lualatex/lualatex-math/lualatex-math.lua:46:
> >                     in function 'print_class_fam_slot'
> >                     [string "\directlua "]:1: in main chunk.
> >             \__lltxmath_set_mathchar:NN ...\int_eval:n {`#2})}
> >         
> >         \scan_stop:
> >         
> >         Other Lua files (lualibs-basic-merged.lua, lualibs-lua.lua,
> >         and
> >         luaotfload-merged.lua) use the following code to work around
> >         this
> >         incompatibility between Lua 5.1 and Lua 5.2:
> >         
> >             if not table.unpack then
> >               table.unpack=_G.unpack
> >             elseif not unpack then
> >               _G.unpack=table.unpack
> >             end
> >         
> >         By adding this code to lualatex-math.lua at an appropriate
> >         place, I was
> >         able to fix the issue with lualatex-math and amsmath.
> >         
> >         I?ve attached a patch. Could this patch or some other fix for
> >         the
> >         problem please be incorporated into lualatex-math? Thank you.
> >         
> >         Best wishes,
> >         Wolfgang
> > 
> > 
> 
> 



