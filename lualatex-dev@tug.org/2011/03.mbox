From khaledhosny at eglug.org  Wed Mar  2 02:15:28 2011
From: khaledhosny at eglug.org (Khaled Hosny)
Date: Wed, 2 Mar 2011 03:15:28 +0200
Subject: [lltx] Kerning OTF fonts: 2 other problems
In-Reply-To: <C4355683-BF06-4756-B745-606FDE04563D@unibas.ch>
References: <C4355683-BF06-4756-B745-606FDE04563D@unibas.ch>
Message-ID: <20110302011528.GC16126@khaled-laptop>

On Mon, Feb 28, 2011 at 11:59:27AM +0100, Heilmann, Till A. wrote:
> Am Sun, 27 Feb 2011 18:50:04 +0100 schrieb Ulrike Fischer:
> 
> >> Thanks to your help, I am making progress adjusting the kerning of  
> >> OpenType fonts. There are still some problems, though ...
> >> 1. Curiously, adjusting the kerning does not work for some letter  
> >> pairs and I cannot see a pattern here. Adjusting "ei", for example,  
> >> works just fine but "ev" does not. I got the same results with two  
> >> different fonts (TeX Gyre Bonum and Linux Libertine), so I think it  
> >> is not a font issue but a Lua(La)TeX one.
> >> 
> > 
> > I think it is the font. I don't know much about open type fonts and
> > features etc, but a look at the kerning information of "e" in
> > fontforge seems to indicate that a kern for "ev" and "ew" already
> > exists, and I think this kern "wins". 
> 
> Okay, I see what you mean (I just checked in FontForge too).
> 
> I cannot comment on the technical aspect of this issue but from a
> "philosophical" standpoint it is somewhat bizarre: What good is a
> local or user specific feature file that cannot override the standard
> settings of a font? Is this how OTF features are supposed to (not)
> work? (I know this is probably not the right place to ask this kind of
> question.)

It can be a bug or expected behaviour, I can tell offhand, but you can
try by compiling the .fea file into the font using FontForge (there is a
merge feature file option in file menu) then generating a new font and
testing it in other applications, if it works as you expect then it is a
bug in our side.

Regards,
 Khaled

-- 
 Khaled Hosny
 Egyptian
 Arab

From khaledhosny at eglug.org  Wed Mar  2 02:21:35 2011
From: khaledhosny at eglug.org (Khaled Hosny)
Date: Wed, 2 Mar 2011 03:21:35 +0200
Subject: [lltx] Pending luaotfload issue
Message-ID: <20110302012135.GD16126@khaled-laptop>

As I might disappear unexpectedly :) please if anyone has pending
luaotfload issues that is not reported in github bug tracker, please
report it so that someone can look at them in the future if I didn't.

Regards,
 Khaled

-- 
 Khaled Hosny
 Egyptian
 Arab

From elie.roux at telecom-bretagne.eu  Wed Mar  2 09:24:21 2011
From: elie.roux at telecom-bretagne.eu (Elie Roux)
Date: Wed, 02 Mar 2011 09:24:21 +0100
Subject: [lltx] Pending luaotfload issue
In-Reply-To: <20110302012135.GD16126@khaled-laptop>
References: <20110302012135.GD16126@khaled-laptop>
Message-ID: <4D6DFEB5.4010609@telecom-bretagne.eu>

 >
> As I might disappear unexpectedly :) please if anyone has pending
> luaotfload issues that is not reported in github bug tracker, please
> report it so that someone can look at them in the future if I didn't.

I may have a little time to maintain the package (not sure about it 
yet), but can you please tell us the policy of the package update? For 
instance:
  - is there a branch for TeXLive 2010 and a development branch for 
TLcontrib? if not would that be ok?
  - what are the changes to be made to Hans' files?
  - should we update the repository (which branch?) at each update of 
Hans' code?

Thank you,
-- 
Elie

From news3 at nililand.de  Wed Mar  2 09:25:48 2011
From: news3 at nililand.de (Ulrike Fischer)
Date: Wed, 2 Mar 2011 09:25:48 +0100
Subject: [lltx] Pending luaotfload issue
References: <20110302012135.GD16126@khaled-laptop>
Message-ID: <19k7wpn83kpnf$.dlg@nililand.de>

Am Wed, 2 Mar 2011 03:21:35 +0200 schrieb Khaled Hosny:

> As I might disappear unexpectedly :) please if anyone has pending
> luaotfload issues that is not reported in github bug tracker, please
> report it so that someone can look at them in the future if I didn't.

On c.t.t. there was a discussion two days ago about Ligatures=TeX
(+tlig I think) not working for all fonts, or only working with
Renderer=Basic. (en-dash and em-dash in luatex)

And the main pending thing is "include the newest context code". 


-- 
Ulrike Fischer 


From khaledhosny at eglug.org  Wed Mar  2 10:16:42 2011
From: khaledhosny at eglug.org (Khaled Hosny)
Date: Wed, 2 Mar 2011 11:16:42 +0200
Subject: [lltx] Pending luaotfload issue
In-Reply-To: <4D6DFEB5.4010609@telecom-bretagne.eu>
References: <20110302012135.GD16126@khaled-laptop>
 <4D6DFEB5.4010609@telecom-bretagne.eu>
Message-ID: <20110302091642.GA2912@khaled-laptop>

On Wed, Mar 02, 2011 at 09:24:21AM +0100, Elie Roux wrote:
> >
> >As I might disappear unexpectedly :) please if anyone has pending
> >luaotfload issues that is not reported in github bug tracker, please
> >report it so that someone can look at them in the future if I didn't.
> 
> I may have a little time to maintain the package (not sure about it
> yet), but can you please tell us the policy of the package update?
> For instance:
>  - is there a branch for TeXLive 2010 and a development branch for
> TLcontrib? if not would that be ok?

There is an unstable branch but it is not fully functional nor up to
date with Hans files.

>  - what are the changes to be made to Hans' files?

You can get a good idea by comparing what luaotfload has with current
context version in texlive. Some of the changes should be reported to
Hans (of general interest) but I didn't get around doing this, but was
planning to do that in the next few weeks.

>  - should we update the repository (which branch?) at each update of
> Hans' code?

Once our local changes is backported to ConTeXt, syncing the unstable
branch should not be hard, but the stable is unlikely to get synced
since ConTeXt beta require luatex 0.65.x at least.

Regards,
 Khaled

-- 
 Khaled Hosny
 Egyptian
 Arab

From khaledhosny at eglug.org  Wed Mar  2 10:55:02 2011
From: khaledhosny at eglug.org (Khaled Hosny)
Date: Wed, 2 Mar 2011 11:55:02 +0200
Subject: [lltx] Pending luaotfload issue
In-Reply-To: <19k7wpn83kpnf$.dlg@nililand.de>
References: <20110302012135.GD16126@khaled-laptop>
 <19k7wpn83kpnf$.dlg@nililand.de>
Message-ID: <20110302095502.GA3945@khaled-laptop>

On Wed, Mar 02, 2011 at 09:25:48AM +0100, Ulrike Fischer wrote:
> Am Wed, 2 Mar 2011 03:21:35 +0200 schrieb Khaled Hosny:
> 
> > As I might disappear unexpectedly :) please if anyone has pending
> > luaotfload issues that is not reported in github bug tracker, please
> > report it so that someone can look at them in the future if I didn't.
> 
> On c.t.t. there was a discussion two days ago about Ligatures=TeX
> (+tlig I think) not working for all fonts, or only working with
> Renderer=Basic. (en-dash and em-dash in luatex)

Those kind of bugs usually lay deep down in the lua code, so you usually
get better results by reporting it to Hans (note in ConTeXt only -- and
--- are supported, otherwise the code is essentially the same).

> And the main pending thing is "include the newest context code". 

ConTeXt beta require luatex 0.65.x and likely to require even higher
versions as development goes, so sync is unlikely to happen before
texlive2011 (the code we borrow might not actually be that dependant on
new luatex, but one need to check carefully).

Regards,
 Khaled

-- 
 Khaled Hosny
 Egyptian
 Arab

From mpg at elzevir.fr  Wed Mar  2 11:20:02 2011
From: mpg at elzevir.fr (=?UTF-8?B?TWFudWVsIFDDqWdvdXJpw6ktR29ubmFyZA==?=)
Date: Wed, 02 Mar 2011 11:20:02 +0100
Subject: [lltx] Pending luaotfload issue
In-Reply-To: <20110302095502.GA3945@khaled-laptop>
References: <20110302012135.GD16126@khaled-laptop>
 <19k7wpn83kpnf$.dlg@nililand.de> <20110302095502.GA3945@khaled-laptop>
Message-ID: <4D6E19D2.7020201@elzevir.fr>

Le 02/03/2011 10:55, Khaled Hosny a ?crit :
>> And the main pending thing is "include the newest context code". 
> 
> ConTeXt beta require luatex 0.65.x and likely to require even higher
> versions as development goes, so sync is unlikely to happen before
> texlive2011 (the code we borrow might not actually be that dependant on
> new luatex, but one need to check carefully).
> 
That's why ?lie's suggestion of maintaining two branches (one for recent LuaTeX,
with ConTeXt code regularly merged in, and one for whatever version of LuaTeX is
in "stable" distros) sounds interesting. The stable branch would either include
only bugfixes, or even be completely frozen to reduce the amount of maintainer work.

Ulrike, what's the situation with LuaTeX on MikTeX? Is it updated regularly, or
only once per MiKTeX version, as in TeX Live ? The underlying question is: is it
worth releasing the unstable version to CTAN for the benefice of MikTeX, or is
LuaTeX too old there too?

Manuel.



From news3 at nililand.de  Wed Mar  2 11:53:52 2011
From: news3 at nililand.de (Ulrike Fischer)
Date: Wed, 2 Mar 2011 11:53:52 +0100
Subject: [lltx] Pending luaotfload issue
References: <20110302012135.GD16126@khaled-laptop>
 <19k7wpn83kpnf$.dlg@nililand.de> <20110302095502.GA3945@khaled-laptop>
 <4D6E19D2.7020201@elzevir.fr>
Message-ID: <15f03hyxiq2lo$.dlg@nililand.de>

Am Wed, 02 Mar 2011 11:20:02 +0100 schrieb Manuel P?gouri?-Gonnard:

> Le 02/03/2011 10:55, Khaled Hosny a ?crit :
>>> And the main pending thing is "include the newest context code". 
>> 
>> ConTeXt beta require luatex 0.65.x and likely to require even higher
>> versions as development goes, so sync is unlikely to happen before
>> texlive2011 (the code we borrow might not actually be that dependant on
>> new luatex, but one need to check carefully).
>> 
> That's why ?lie's suggestion of maintaining two branches (one for recent LuaTeX,
> with ConTeXt code regularly merged in, and one for whatever version of LuaTeX is
> in "stable" distros) sounds interesting. The stable branch would either include
> only bugfixes, or even be completely frozen to reduce the amount of maintainer work.
> 
> Ulrike, what's the situation with LuaTeX on MikTeX? Is it updated regularly, or
> only once per MiKTeX version, as in TeX Live ? The underlying question is: is it
> worth releasing the unstable version to CTAN for the benefice of MikTeX, or is
> LuaTeX too old there too?

miktex has still luatex 0.60.2. It hasn't update it since the
release, but this can change. E.g. xetex was updated regularly
sometimes only a few days after the original version. 

(I made a feature request that it updates more frequently).

So the current stable version is more or less enough for miktex.

But it is not very difficult to use a development version of e.g.
w32tex.org. I have setup a small "texlive-tree" which reuses most of
my miktex files and which I use when I want to test different
versions. So an unstable version somewhere else would be interesting
also for me as miktex user.

-- 
Ulrike Fischer 


From luigi.scarso at gmail.com  Wed Mar  2 11:59:21 2011
From: luigi.scarso at gmail.com (luigi scarso)
Date: Wed, 2 Mar 2011 11:59:21 +0100
Subject: [lltx] Pending luaotfload issue
In-Reply-To: <4D6E19D2.7020201@elzevir.fr>
References: <20110302012135.GD16126@khaled-laptop>
 <19k7wpn83kpnf$.dlg@nililand.de>
 <20110302095502.GA3945@khaled-laptop> <4D6E19D2.7020201@elzevir.fr>
Message-ID: <AANLkTim+qjzVyqxRq_9mfJe2NsvGWQKZLHpoYT=feZCv@mail.gmail.com>

On Wed, Mar 2, 2011 at 11:20 AM, Manuel P?gouri?-Gonnard <mpg at elzevir.fr> wrote:
> Le 02/03/2011 10:55, Khaled Hosny a ?crit :
>>> And the main pending thing is "include the newest context code".
>>
>> ConTeXt beta require luatex 0.65.x and likely to require even higher
>> versions as development goes, so sync is unlikely to happen before
>> texlive2011 (the code we borrow might not actually be that dependant on
>> new luatex, but one need to check carefully).
>>
> That's why ?lie's suggestion of maintaining two branches (one for recent LuaTeX,
> with ConTeXt code regularly merged in, and one for whatever version of LuaTeX is
> in "stable" distros) sounds interesting. The stable branch would either include
> only bugfixes, or even be completely frozen to reduce the amount of maintainer work.
luaotfload-current (mostly for update for texlive )
luaotfload-beta (almost) in sync with mkiv beta, which usually uses
the last luatex

-- 
luigi


From till.heilmann at unibas.ch  Wed Mar  2 12:28:48 2011
From: till.heilmann at unibas.ch (Heilmann, Till A.)
Date: Wed, 2 Mar 2011 12:28:48 +0100
Subject: [lltx] Kerning OTF fonts: 2 other problems
In-Reply-To: <20110302102102.GA4114@khaled-laptop>
References: <C4355683-BF06-4756-B745-606FDE04563D@unibas.ch>
 <20110302011528.GC16126@khaled-laptop>
 <EF77B485-73BC-4BC6-9123-F393DFEF6F3E@unibas.ch>
 <20110302081656.GB1702@khaled-laptop>
 <3C700C58-6EC7-47F9-A7BD-8B000D3D1957@unibas.ch>
 <20110302102102.GA4114@khaled-laptop>
Message-ID: <A9B881A1-9D02-416B-BF1C-08CD61D493DF@unibas.ch>

Just to let the readers of this list know (I forgot to cc my last posts): Khaled helped me out on the kerning issue ...

Using a new font that was merged with the feature file (as suggested by Khaled) works perfectly in standard applications as well as with LuaTeX. So there is definitely something wrong on the LuaTeX side here.

--Till

Am 02.03.2011 um 02:15 schrieb Khaled Hosny:

> It can be a bug or expected behaviour, I can tell offhand, but you can
> try by compiling the .fea file into the font using FontForge (there is a
> merge feature file option in file menu) then generating a new font and
> testing it in other applications, if it works as you expect then it is a
> bug in our side.
> Regards,
> Khaled



From mpg at elzevir.fr  Wed Mar  2 12:52:42 2011
From: mpg at elzevir.fr (=?ISO-8859-1?Q?Manuel_P=E9gouri=E9-Gonnard?=)
Date: Wed, 02 Mar 2011 12:52:42 +0100
Subject: [lltx] Pending luaotfload issue
In-Reply-To: <15f03hyxiq2lo$.dlg@nililand.de>
References: <20110302012135.GD16126@khaled-laptop>
 <19k7wpn83kpnf$.dlg@nililand.de> <20110302095502.GA3945@khaled-laptop>
 <4D6E19D2.7020201@elzevir.fr> <15f03hyxiq2lo$.dlg@nililand.de>
Message-ID: <4D6E2F8A.1020801@elzevir.fr>

Le 02/03/2011 11:53, Ulrike Fischer a ?crit :
> miktex has still luatex 0.60.2. It hasn't update it since the
> release, but this can change. E.g. xetex was updated regularly
> sometimes only a few days after the original version. 
> 
> (I made a feature request that it updates more frequently).
> 
> So the current stable version is more or less enough for miktex.
> 
Good to know.

> But it is not very difficult to use a development version of e.g.
> w32tex.org. I have setup a small "texlive-tree" which reuses most of
> my miktex files and which I use when I want to test different
> versions. So an unstable version somewhere else would be interesting
> also for me as miktex user.
> 
Ok.

Manuel.

From elie.roux at telecom-bretagne.eu  Wed Mar  2 13:52:59 2011
From: elie.roux at telecom-bretagne.eu (Elie Roux)
Date: Wed, 02 Mar 2011 13:52:59 +0100
Subject: [lltx] Pending luaotfload issue
In-Reply-To: <20110302091642.GA2912@khaled-laptop>
References: <20110302012135.GD16126@khaled-laptop>
 <4D6DFEB5.4010609@telecom-bretagne.eu> <20110302091642.GA2912@khaled-laptop>
Message-ID: <4D6E3DAB.9080202@telecom-bretagne.eu>

>
> Some of the changes should be reported to
> Hans (of general interest) but I didn't get around doing this, but was
> planning to do that in the next few weeks.

Ok, please let us know when you'll have it done (or if you cannot).

> but the stable is unlikely to get synced
> since ConTeXt beta require luatex 0.65.x at least.

Sure, I think the code is OK as it is anyway, people playing with fancy 
font requiring a cutting-edge code will update to a cutting-edge luatex...

Thank you,
-- 
Elie

From st_philipp at yahoo.de  Wed Mar  2 13:56:29 2011
From: st_philipp at yahoo.de (Philipp Stephani)
Date: Wed, 2 Mar 2011 13:56:29 +0100
Subject: [lltx] Pending luaotfload issue
In-Reply-To: <20110302012135.GD16126@khaled-laptop>
References: <20110302012135.GD16126@khaled-laptop>
Message-ID: <74A4F052-7A3E-46F4-A34D-6E1DA32C7090@yahoo.de>


Am 02.03.2011 um 02:21 schrieb Khaled Hosny:

> As I might disappear unexpectedly :) please if anyone has pending
> luaotfload issues that is not reported in github bug tracker, please
> report it so that someone can look at them in the future if I didn't.

My main problem is the lack of documentation, reported as #26. Other issues I'm interested in are #6, #20, and #27. And kerning in math mode and at math boundaries (e.g., $V$.). Don't know if that is luaotfload-related.

From st_philipp at yahoo.de  Wed Mar  2 14:03:22 2011
From: st_philipp at yahoo.de (Philipp Stephani)
Date: Wed, 2 Mar 2011 14:03:22 +0100
Subject: [lltx] Pending luaotfload issue
In-Reply-To: <4D6E19D2.7020201@elzevir.fr>
References: <20110302012135.GD16126@khaled-laptop>
 <19k7wpn83kpnf$.dlg@nililand.de> <20110302095502.GA3945@khaled-laptop>
 <4D6E19D2.7020201@elzevir.fr>
Message-ID: <F080FFB2-56E4-4E16-A4E8-501480A36D27@yahoo.de>


Am 02.03.2011 um 11:20 schrieb Manuel P?gouri?-Gonnard:

> Le 02/03/2011 10:55, Khaled Hosny a ?crit :
>>> And the main pending thing is "include the newest context code". 
>> 
>> ConTeXt beta require luatex 0.65.x and likely to require even higher
>> versions as development goes, so sync is unlikely to happen before
>> texlive2011 (the code we borrow might not actually be that dependant on
>> new luatex, but one need to check carefully).
>> 
> That's why ?lie's suggestion of maintaining two branches (one for recent LuaTeX,
> with ConTeXt code regularly merged in, and one for whatever version of LuaTeX is
> in "stable" distros) sounds interesting. The stable branch would either include
> only bugfixes, or even be completely frozen to reduce the amount of maintainer work.

I think this idea sounds great. Many users use TLcontrib, and in unicode-math we also have code that works only on 0.65+ (this is easier to so since we don't have to keep anything in sync with ConTeXt). Font support in LuaTeX develops at a fast pace, and the yearly releases in TeX Live are too rare for me, at least.

From elie.roux at telecom-bretagne.eu  Wed Mar  2 20:39:23 2011
From: elie.roux at telecom-bretagne.eu (Elie Roux)
Date: Wed, 02 Mar 2011 20:39:23 +0100
Subject: [lltx] Pending luaotfload issue
In-Reply-To: <20110302192459.GA17964@khaled-laptop>
References: <20110302012135.GD16126@khaled-laptop>
 <4D6DFEB5.4010609@telecom-bretagne.eu> <20110302091642.GA2912@khaled-laptop>
 <4D6E3DAB.9080202@telecom-bretagne.eu> <20110302192459.GA17964@khaled-laptop>
Message-ID: <4D6E9CEB.4060204@telecom-bretagne.eu>

 >
 > I managed to get the unstable branch up to date and pushed it, this
 > commit should summarise our changes to context files:
 >
 > 
https://github.com/khaledhosny/luaotfload/commit/0cc11c367790d57add52c09d8c8812f8858f47ba

Ok thank you for this! I'll try soon as I have a patch from Hans 
(against latest code) that I'd like to try.

 > It is not working on my machine though, no time to get a recent luatex
 > binary.

I'll do it tomorrow.

Thank you!
-- 
Elie

From khaledhosny at eglug.org  Wed Mar  2 20:25:00 2011
From: khaledhosny at eglug.org (Khaled Hosny)
Date: Wed, 2 Mar 2011 21:25:00 +0200
Subject: [lltx] Pending luaotfload issue
In-Reply-To: <4D6E3DAB.9080202@telecom-bretagne.eu>
References: <20110302012135.GD16126@khaled-laptop>
 <4D6DFEB5.4010609@telecom-bretagne.eu>
 <20110302091642.GA2912@khaled-laptop>
 <4D6E3DAB.9080202@telecom-bretagne.eu>
Message-ID: <20110302192459.GA17964@khaled-laptop>

On Wed, Mar 02, 2011 at 01:52:59PM +0100, Elie Roux wrote:
> >
> >Some of the changes should be reported to
> >Hans (of general interest) but I didn't get around doing this, but was
> >planning to do that in the next few weeks.
> 
> Ok, please let us know when you'll have it done (or if you cannot).

I managed to get the unstable branch up to date and pushed it, this
commit should summarise our changes to context files:

https://github.com/khaledhosny/luaotfload/commit/0cc11c367790d57add52c09d8c8812f8858f47ba

It is not working on my machine though, no time to get a recent luatex
binary.

Regards,
 Khaled

-- 
 Khaled Hosny
 Egyptian
 Arab

From news3 at nililand.de  Thu Mar  3 15:23:05 2011
From: news3 at nililand.de (Ulrike Fischer)
Date: Thu, 3 Mar 2011 15:23:05 +0100
Subject: [lltx] Pending luaotfload issue
References: <20110302012135.GD16126@khaled-laptop>
 <4D6DFEB5.4010609@telecom-bretagne.eu> <20110302091642.GA2912@khaled-laptop>
 <4D6E3DAB.9080202@telecom-bretagne.eu> <20110302192459.GA17964@khaled-laptop>
Message-ID: <yjacb6wlquc0.dlg@nililand.de>

Am Wed, 2 Mar 2011 21:25:00 +0200 schrieb Khaled Hosny:

> On Wed, Mar 02, 2011 at 01:52:59PM +0100, Elie Roux wrote:
>>>
>>>Some of the changes should be reported to
>>>Hans (of general interest) but I didn't get around doing this, but was
>>>planning to do that in the next few weeks.
>> 
>> Ok, please let us know when you'll have it done (or if you cannot).
> 
> I managed to get the unstable branch up to date and pushed it, this
> commit should summarise our changes to context files:
> 
> https://github.com/khaledhosny/luaotfload/commit/0cc11c367790d57add52c09d8c8812f8858f47ba
> 
> It is not working on my machine though, no time to get a recent luatex
> binary.

Two week ago I tried to use the newest context files with luaotfload
and found the following problems. I'm not sure if you saw my message
about them on the context list, so I repeat them here:

"
* register_base_substitution has been renamed to
registerbasesubstitution (used in luaotfload.lua line 137)

* fonts.define seems to be named fonts.definers now (luaotfload.lua
line 87)

* Instead of logs.report the context files use now report_prepare
(with a different syntax) which is perhaps the source of the error
I'm getting now:

J:/MiKTeX2.9/tex/luatex/luaotfload/otfl-luat-ovr.lua:19: bad arg
ument #2 to 'format' (string expected, got nil).
"




-- 
Ulrike Fischer 


From elie.roux at telecom-bretagne.eu  Thu Mar  3 15:45:44 2011
From: elie.roux at telecom-bretagne.eu (Elie Roux)
Date: Thu, 03 Mar 2011 15:45:44 +0100
Subject: [lltx] Pending luaotfload issue
In-Reply-To: <20110302192459.GA17964@khaled-laptop>
References: <20110302012135.GD16126@khaled-laptop>
 <4D6DFEB5.4010609@telecom-bretagne.eu> <20110302091642.GA2912@khaled-laptop>
 <4D6E3DAB.9080202@telecom-bretagne.eu> <20110302192459.GA17964@khaled-laptop>
Message-ID: <4D6FA998.10402@telecom-bretagne.eu>

>
> It is not working on my machine though, no time to get a recent luatex
> binary.

It's working fine with latest LuaTeX binary, except a bug on line 77 of 
otfl-luat-dum.lua : there should be an s after 'file'. I reported it to 
Hans, it should be fixed soon.

Thank you,
-- 
Elie

From khaledhosny at eglug.org  Thu Mar  3 16:20:51 2011
From: khaledhosny at eglug.org (Khaled Hosny)
Date: Thu, 3 Mar 2011 17:20:51 +0200
Subject: [lltx] Pending luaotfload issue
In-Reply-To: <4D6FA998.10402@telecom-bretagne.eu>
References: <20110302012135.GD16126@khaled-laptop>
 <4D6DFEB5.4010609@telecom-bretagne.eu>
 <20110302091642.GA2912@khaled-laptop>
 <4D6E3DAB.9080202@telecom-bretagne.eu>
 <20110302192459.GA17964@khaled-laptop>
 <4D6FA998.10402@telecom-bretagne.eu>
Message-ID: <20110303152050.GA15129@khaled-laptop>

On Thu, Mar 03, 2011 at 03:45:44PM +0100, Elie Roux wrote:
> >
> >It is not working on my machine though, no time to get a recent luatex
> >binary.
> 
> It's working fine with latest LuaTeX binary, except a bug on line 77
> of otfl-luat-dum.lua : there should be an s after 'file'. I reported
> it to Hans, it should be fixed soon.

Working even with texlive's luatex. I pushed a fix to fontspec and our
color module and all the tests (and the manual) now build cleanly.

However, the 'opbd' test don't give the right output since the feature
is no longer included (you have to copy the .fea file to current
directory for the test to work, btw). 'opbd' was marked experimental by
Hans and not included in the generic files, there is no fonts that use
it currently but it would be a regression since current luaotfload
supports it (I copied some code but it was a painful process since it
involves modifying an existing function), we can simply ask Hans to move
it to the non ConTeXt specific files.

Also the "mark" test gives broken output.

Our test suit is not that extensive, but getting all tests working is a
good indication.

Regards,
 Khaled

-- 
 Khaled Hosny
 Egyptian
 Arab

From andreas.harder at rz-online.de  Fri Mar  4 21:53:10 2011
From: andreas.harder at rz-online.de (Andreas Harder)
Date: Fri, 4 Mar 2011 21:53:10 +0100
Subject: [lltx] $n\choose k$-issue with OpenType math fonts
Message-ID: <BBE2E95F-E738-46C1-BF42-15D5374BB39E@rz-online.de>

Hi all,

I was asked to post this also on the LuaLaTeX-list, so here it is.

I'm tying to draw some attention to the $n\choose k$-issue with OpenType math fonts. 

I've made some test files:
http://dl.dropbox.com/u/151837/OpenType-Math.7z 

The best output is generated by LuaLaTeX (at least for Asana and Cambria). 

Regards
	Andreas
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://tug.org/pipermail/lualatex-dev/attachments/20110304/4e618c4f/attachment.html>

From khaledhosny at eglug.org  Fri Mar  4 22:50:06 2011
From: khaledhosny at eglug.org (Khaled Hosny)
Date: Fri, 4 Mar 2011 23:50:06 +0200
Subject: [lltx] $n\choose k$-issue with OpenType math fonts
In-Reply-To: <BBE2E95F-E738-46C1-BF42-15D5374BB39E@rz-online.de>
References: <BBE2E95F-E738-46C1-BF42-15D5374BB39E@rz-online.de>
Message-ID: <20110304215006.GA9025@khaled-laptop>

On Fri, Mar 04, 2011 at 09:53:10PM +0100, Andreas Harder wrote:
> Hi all,
> 
> I was asked to post this also on the LuaLaTeX-list, so here it is.
> 
> I'm tying to draw some attention to the $n\choose k$-issue with OpenType math
> fonts. 
> 
> I've made some test files:
> http://dl.dropbox.com/u/151837/OpenType-Math.7z 
> 
> The best output is generated by LuaLaTeX (at least for Asana and Cambria). 

So you are getting the best output which, IMHO, is a good thing, what is
the problem then? :)

(I'm no math expert, I don't understand non-Arabic math at all, so I
can't tell from just the PDF files what would be wrong).

Regards,
 Khaled

-- 
 Khaled Hosny
 Egyptian
 Arab

From st_philipp at yahoo.de  Fri Mar  4 23:29:13 2011
From: st_philipp at yahoo.de (Philipp Stephani)
Date: Fri, 04 Mar 2011 23:29:13 +0100
Subject: [lltx] $n\choose k$-issue with OpenType math fonts
In-Reply-To: <20110304215006.GA9025@khaled-laptop>
References: <BBE2E95F-E738-46C1-BF42-15D5374BB39E@rz-online.de>
 <20110304215006.GA9025@khaled-laptop>
Message-ID: <4D7167B9.6090700@yahoo.de>

@Andreas: please use only the ZIP archive format since it's the only one
everybody can read.

Am 04.03.2011 22:50, schrieb Khaled Hosny:
> On Fri, Mar 04, 2011 at 09:53:10PM +0100, Andreas Harder wrote:
>> Hi all,
>>
>> I was asked to post this also on the LuaLaTeX-list, so here it is.
>>
>> I'm tying to draw some attention to the $n\choose k$-issue with OpenType math
>> fonts. 
>>
>> I've made some test files:
>> http://dl.dropbox.com/u/151837/OpenType-Math.7z 
>>
>> The best output is generated by LuaLaTeX (at least for Asana and Cambria). 
> 
> So you are getting the best output which, IMHO, is a good thing, what is
> the problem then? :)

"Best" here unfortunately means "not very good, but not as bad as the
others."

For the following discussion, I use the notation LN, where X is the
letter A, C, or X, depending on the font, and N is a number representing
the N-th symbol from the left. I'm only looking at the document ending
in lualatex.pdf.
A1, A2, A3, A5, A6, A7, A8, A9, A11, C1, C2, C3, C5, C6, C7, C8, C9,
C10, C11, X5, X9, X10, X11 look good.
A4, C4, X4: upper and lower part are too far away from each other; as
there is no fraction bar, they should be closer to each other than the
numerator/denominator in ACX5.
A10: numerator and denominator are too far away from the fraction bar.
X1, X3, X6, X7, X8: lower part is too far to the bottom.
X2: parentheses are too high.

The issues that occur with Computer Modern are: 4, 10, i.e. those that
also appear with A and C; these are more-or-less design problems;
someone should check if they also occur in Word. X has more issues;
LuaLaTeX + A/C can be declared okay-ish, but not perfect IMO.

It would be interesting to know whether there are established
conventions regarding the vertical gaps in fractions vs. binomials.
Personally I'd prefer a smaller gap for the latter since the bar is absent.

From khaledhosny at eglug.org  Sat Mar  5 00:21:59 2011
From: khaledhosny at eglug.org (Khaled Hosny)
Date: Sat, 5 Mar 2011 01:21:59 +0200
Subject: [lltx] $n\choose k$-issue with OpenType math fonts
In-Reply-To: <4D7167B9.6090700@yahoo.de>
References: <BBE2E95F-E738-46C1-BF42-15D5374BB39E@rz-online.de>
 <20110304215006.GA9025@khaled-laptop> <4D7167B9.6090700@yahoo.de>
Message-ID: <20110304232159.GA9200@khaled-laptop>

On Fri, Mar 04, 2011 at 11:29:13PM +0100, Philipp Stephani wrote:
> @Andreas: please use only the ZIP archive format since it's the only one
> everybody can read.
> 
> Am 04.03.2011 22:50, schrieb Khaled Hosny:
> > On Fri, Mar 04, 2011 at 09:53:10PM +0100, Andreas Harder wrote:
> >> Hi all,
> >>
> >> I was asked to post this also on the LuaLaTeX-list, so here it is.
> >>
> >> I'm tying to draw some attention to the $n\choose k$-issue with OpenType math
> >> fonts. 
> >>
> >> I've made some test files:
> >> http://dl.dropbox.com/u/151837/OpenType-Math.7z 
> >>
> >> The best output is generated by LuaLaTeX (at least for Asana and Cambria). 
> > 
> > So you are getting the best output which, IMHO, is a good thing, what is
> > the problem then? :)
> 
> "Best" here unfortunately means "not very good, but not as bad as the
> others."
> 
> For the following discussion, I use the notation LN, where X is the
> letter A, C, or X, depending on the font, and N is a number representing
> the N-th symbol from the left. I'm only looking at the document ending
> in lualatex.pdf.
> A1, A2, A3, A5, A6, A7, A8, A9, A11, C1, C2, C3, C5, C6, C7, C8, C9,
> C10, C11, X5, X9, X10, X11 look good.
> A4, C4, X4: upper and lower part are too far away from each other; as
> there is no fraction bar, they should be closer to each other than the
> numerator/denominator in ACX5.
> A10: numerator and denominator are too far away from the fraction bar.
> X1, X3, X6, X7, X8: lower part is too far to the bottom.
> X2: parentheses are too high.
> 
> The issues that occur with Computer Modern are: 4, 10, i.e. those that
> also appear with A and C; these are more-or-less design problems;
> someone should check if they also occur in Word. X has more issues;
> LuaLaTeX + A/C can be declared okay-ish, but not perfect IMO.
> 
> It would be interesting to know whether there are established
> conventions regarding the vertical gaps in fractions vs. binomials.
> Personally I'd prefer a smaller gap for the latter since the bar is absent.

Thanks Philipp, that was very helpful.

Comparing to CM I think Cambria's is OK, so 10 might be related to
actual TeX math algorithms (someone have to check Appendix G rules
regarding this). I'd be interested in knowing what MATH parameters are
involved here to see what need to be fixed; the fonts or luaotfload.

Regards,
 Khaled

-- 
 Khaled Hosny
 Egyptian
 Arab

From khaledhosny at eglug.org  Sat Mar  5 00:34:46 2011
From: khaledhosny at eglug.org (Khaled Hosny)
Date: Sat, 5 Mar 2011 01:34:46 +0200
Subject: [lltx] $n\choose k$-issue with OpenType math fonts
In-Reply-To: <4D7167B9.6090700@yahoo.de>
References: <BBE2E95F-E738-46C1-BF42-15D5374BB39E@rz-online.de>
 <20110304215006.GA9025@khaled-laptop> <4D7167B9.6090700@yahoo.de>
Message-ID: <20110304233446.GA9555@khaled-laptop>

On Fri, Mar 04, 2011 at 11:29:13PM +0100, Philipp Stephani wrote:
> The issues that occur with Computer Modern are: 4, 10, i.e. those that
> also appear with A and C; these are more-or-less design problems;
> someone should check if they also occur in Word. X has more issues;
> LuaLaTeX + A/C can be declared okay-ish, but not perfect IMO.

Neo Euler looks fine too, or almost.

Regards,
 Khaled

-- 
 Khaled Hosny
 Egyptian
 Arab
-------------- next part --------------
A non-text attachment was scrubbed...
Name: test-OpenType-math-lualatex.pdf
Type: application/pdf
Size: 39071 bytes
Desc: not available
URL: <http://tug.org/pipermail/lualatex-dev/attachments/20110305/e987ccb4/attachment-0001.pdf>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: test-OpenType-math-lualatex.tex
Type: text/x-tex
Size: 615 bytes
Desc: not available
URL: <http://tug.org/pipermail/lualatex-dev/attachments/20110305/e987ccb4/attachment-0001.bin>

From st_philipp at yahoo.de  Sat Mar  5 02:13:45 2011
From: st_philipp at yahoo.de (Philipp Stephani)
Date: Sat, 05 Mar 2011 02:13:45 +0100
Subject: [lltx] $n\choose k$-issue with OpenType math fonts
In-Reply-To: <20110304232159.GA9200@khaled-laptop>
References: <BBE2E95F-E738-46C1-BF42-15D5374BB39E@rz-online.de>
 <20110304215006.GA9025@khaled-laptop> <4D7167B9.6090700@yahoo.de>
 <20110304232159.GA9200@khaled-laptop>
Message-ID: <4D718E49.8030706@yahoo.de>

Am 05.03.2011 00:21, schrieb Khaled Hosny:
> On Fri, Mar 04, 2011 at 11:29:13PM +0100, Philipp Stephani wrote:
>> @Andreas: please use only the ZIP archive format since it's the only one
>> everybody can read.
>>
>> Am 04.03.2011 22:50, schrieb Khaled Hosny:
>>> On Fri, Mar 04, 2011 at 09:53:10PM +0100, Andreas Harder wrote:
>>>> Hi all,
>>>>
>>>> I was asked to post this also on the LuaLaTeX-list, so here it is.
>>>>
>>>> I'm tying to draw some attention to the $n\choose k$-issue with OpenType math
>>>> fonts. 
>>>>
>>>> I've made some test files:
>>>> http://dl.dropbox.com/u/151837/OpenType-Math.7z 
>>>>
>>>> The best output is generated by LuaLaTeX (at least for Asana and Cambria). 
>>>
>>> So you are getting the best output which, IMHO, is a good thing, what is
>>> the problem then? :)
>>
>> "Best" here unfortunately means "not very good, but not as bad as the
>> others."
>>
>> For the following discussion, I use the notation LN, where X is the
>> letter A, C, or X, depending on the font, and N is a number representing
>> the N-th symbol from the left. I'm only looking at the document ending
>> in lualatex.pdf.
>> A1, A2, A3, A5, A6, A7, A8, A9, A11, C1, C2, C3, C5, C6, C7, C8, C9,
>> C10, C11, X5, X9, X10, X11 look good.
>> A4, C4, X4: upper and lower part are too far away from each other; as
>> there is no fraction bar, they should be closer to each other than the
>> numerator/denominator in ACX5.
>> A10: numerator and denominator are too far away from the fraction bar.
>> X1, X3, X6, X7, X8: lower part is too far to the bottom.
>> X2: parentheses are too high.
>>
>> The issues that occur with Computer Modern are: 4, 10, i.e. those that
>> also appear with A and C; these are more-or-less design problems;
>> someone should check if they also occur in Word. X has more issues;
>> LuaLaTeX + A/C can be declared okay-ish, but not perfect IMO.
>>
>> It would be interesting to know whether there are established
>> conventions regarding the vertical gaps in fractions vs. binomials.
>> Personally I'd prefer a smaller gap for the latter since the bar is absent.
> 
> Thanks Philipp, that was very helpful.
> 
> Comparing to CM I think Cambria's is OK, so 10 might be related to
> actual TeX math algorithms (someone have to check Appendix G rules
> regarding this).

Presumably something like "gap is three times the fraction bar width".
Not a real problem since very few people use different fraction bars in
one document ;-)
What is more annyoing in A and C is the inconsistency w.r.t. vertical
gaps in display vs. text style: CM uses binomial vgaps that are always
larger than the fraction vgap, but in A and C, the binomial vgaps are
smaller in text style, but larger in display style! I don't know whether
that is a design choice, but I find it a bit annoying.

> I'd be interested in knowing what MATH parameters are
> involved here to see what need to be fixed; the fonts or luaotfload.

Or maybe LuaTeX. Unfortunately I have absolutely no time to investigate
right now, only one observation: C has
FractionNumeratorDisplayStyleShiftUp = StackTopDisplayStyleShiftUp, but
the upper part of the binomial is positioned higher than the numerator
in display style. This may be because the StackDisplayStyleGapMin is too
large (?).

From st_philipp at yahoo.de  Sat Mar  5 03:04:06 2011
From: st_philipp at yahoo.de (Philipp Stephani)
Date: Sat, 05 Mar 2011 03:04:06 +0100
Subject: [lltx] $n\choose k$-issue with OpenType math fonts
In-Reply-To: <4D718E49.8030706@yahoo.de>
References: <BBE2E95F-E738-46C1-BF42-15D5374BB39E@rz-online.de>
 <20110304215006.GA9025@khaled-laptop> <4D7167B9.6090700@yahoo.de>
 <20110304232159.GA9200@khaled-laptop> <4D718E49.8030706@yahoo.de>
Message-ID: <4D719A16.7090702@yahoo.de>

Am 05.03.2011 02:13, schrieb Philipp Stephani:
> Or maybe LuaTeX. Unfortunately I have absolutely no time to investigate
> right now, only one observation: C has
> FractionNumeratorDisplayStyleShiftUp = StackTopDisplayStyleShiftUp, but
> the upper part of the binomial is positioned higher than the numerator
> in display style. This may be because the StackDisplayStyleGapMin is too
> large (?).

No, the parameters are fine and I think the only difference is the size
of the delimiters, which is caused by LuaOTFLoad setting the
FractionDelimiterSize parameters which don't really exist in the fonts
(they are LuaTeX-only additions); changing line 116 of luaotfload.lua to
            mc.FractionDelimiterDisplayStyleSize = 1.7 * size
yields much better results. However, that is a font-specific design
issue, and I wonder whether LuaTeX should really use those parameters if
the font doesn't have them.

From taco at elvenkind.com  Sat Mar  5 09:23:26 2011
From: taco at elvenkind.com (Taco Hoekwater)
Date: Sat, 05 Mar 2011 09:23:26 +0100
Subject: [lltx] $n\choose k$-issue with OpenType math fonts
In-Reply-To: <4D719A16.7090702@yahoo.de>
References: <BBE2E95F-E738-46C1-BF42-15D5374BB39E@rz-online.de>
 <20110304215006.GA9025@khaled-laptop> <4D7167B9.6090700@yahoo.de>
 <20110304232159.GA9200@khaled-laptop> <4D718E49.8030706@yahoo.de>
 <4D719A16.7090702@yahoo.de>
Message-ID: <4D71F2FE.70702@elvenkind.com>

On 03/05/2011 03:04 AM, Philipp Stephani wrote:
>
> No, the parameters are fine and I think the only difference is the size
> of the delimiters, which is caused by LuaOTFLoad setting the
> FractionDelimiterSize parameters which don't really exist in the fonts
> (they are LuaTeX-only additions); changing line 116 of luaotfload.lua to
>              mc.FractionDelimiterDisplayStyleSize = 1.7 * size
> yields much better results. However, that is a font-specific design
> issue, and I wonder whether LuaTeX should really use those parameters if
> the font doesn't have them.

The problem is that nothing in the existing MATH parameters seems to
apply. But perhaps the results could be better if the FractionDelimiter
parameters were initialized based on some MATH parameter that does
exist.

Best wishes,
Taco

From st_philipp at yahoo.de  Sat Mar  5 15:58:38 2011
From: st_philipp at yahoo.de (Philipp Stephani)
Date: Sat, 05 Mar 2011 15:58:38 +0100
Subject: [lltx] $n\choose k$-issue with OpenType math fonts
In-Reply-To: <4D71F2FE.70702@elvenkind.com>
References: <BBE2E95F-E738-46C1-BF42-15D5374BB39E@rz-online.de>
 <20110304215006.GA9025@khaled-laptop> <4D7167B9.6090700@yahoo.de>
 <20110304232159.GA9200@khaled-laptop> <4D718E49.8030706@yahoo.de>
 <4D719A16.7090702@yahoo.de> <4D71F2FE.70702@elvenkind.com>
Message-ID: <4D724F9E.9000107@yahoo.de>

Am 05.03.2011 09:23, schrieb Taco Hoekwater:
> On 03/05/2011 03:04 AM, Philipp Stephani wrote:
>>
>> No, the parameters are fine and I think the only difference is the size
>> of the delimiters, which is caused by LuaOTFLoad setting the
>> FractionDelimiterSize parameters which don't really exist in the fonts
>> (they are LuaTeX-only additions); changing line 116 of luaotfload.lua to
>>              mc.FractionDelimiterDisplayStyleSize = 1.7 * size
>> yields much better results. However, that is a font-specific design
>> issue, and I wonder whether LuaTeX should really use those parameters if
>> the font doesn't have them.
> 
> The problem is that nothing in the existing MATH parameters seems to
> apply. But perhaps the results could be better if the FractionDelimiter
> parameters were initialized based on some MATH parameter that does
> exist.

There surely exists a reason why Microsoft chose to leave out the three
parameters delim1, delim2, and sub2. Perhaps they thought that
distinguishing between \left(1 \atop 2\right) and 1 \atopwithdelims() 2
would be too surprising and seldom relevant. (On the LaTeX side, I have
encountered very few instances of \genfrac which wraps all the stacking
primitives.) I think better than guessing correct parameter values would
be to do the equivalent of \left(1 \atop 2\right) if the user requested
1 \atopwithdelims() 2 and the parameters are undefined.

From mailing_list at arcor.de  Sat Mar  5 18:22:16 2011
From: mailing_list at arcor.de (Stephan Hennig)
Date: Sat, 05 Mar 2011 18:22:16 +0100
Subject: [lltx] pattern loading in luatex
In-Reply-To: <4D665A6A.1020900@elzevir.fr>
References: <AANLkTim_KEWAc4OGG2x-ke=PmbgDXY4PhPo+Cyx8AAWd@mail.gmail.com>	<20110116.095504.434466674.wl@gnu.org>	<AANLkTi=bbYdMe6mbwjVk8H0NW-KOfAPkxB1sKCwn63Y_@mail.gmail.com>	<20110117.041625.235476367.wl@gnu.org>	<AANLkTi=XQwLhgysX8AuHVrNe2H_tdOunU6tiFkgBxE2=@mail.gmail.com>	<4D61573A.9010802@arcor.de>	<AANLkTi=0CpW8T567rhAXik5PrJ81PL15y6B40mZ+WvXz@mail.gmail.com>	<4D6172B9.50701@arcor.de>	<AANLkTimh7WaErU5XMoqv6X5hRATeDXTQ5G2Z35zuK6C0@mail.gmail.com>	<4D617FB0.8050001@arcor.de>	<AANLkTikMkAYC+vbwx7MF2TpdxX9_=mnFNiKXZT9=6JKu@mail.gmail.com>	<4D624872.3030907@arcor.de>
 <AANLkTi=xoZ99K5g+NzN=k3APb1M7o3n_gjvO6wm4W0fO@mail.gmail.com>
 <4D662605.7030009@arcor.de> <4D665A6A.1020900@elzevir.fr>
Message-ID: <4D727148.8050908@arcor.de>

[CC'ing luatex list]

Thanks to you and Ulrike and sorry for the late reply!

schrieb Manuel P?gouri?-Gonnard:
> Le 24/02/2011 10:33, Stephan Hennig a ?crit :
>> 
>> With LuaTeX being able to load patterns at run-time, there are now
>> three different pattern loading strategies possible (that I can
>> think of):
>> 
>>   1.  Load all patterns ...
>> 
> I'm afraid "load" is too imprecise to precisely describe what happens with
> LuaTeX. There are now two possibly distinct operations:
> a. read the patterns (as a string of characters)
> b. process them into a form usable by *TeX (a trie)

OK.


> With LuaTeX you have two options:
> 
> 1. Read all patterns at initex time and store them as a string of characters in
> the format; process them all at startup when the format is loaded.
> 2. Read and process requested patterns on demand.
> 
> Option 1 was used up to TeX Live 2009 and resulted in a long startup time.

AFAIK, LuaTeX uses a more complex trie with pre-calculated fall-back
states.  Are there any numbers about what makes loading and processing
(many) patterns in LuaTeX slow?  Is it the first stage of building the
traditional pattern trie from text files or is it the calculation of
fall-back states afterwards?


> Option 2 is implemented since TL 2010.

Great!  Somehow I happened to followed that back then, but missed what
it was all about. :/

Best regards,
Stephan Hennig

From mpg at elzevir.fr  Sat Mar  5 19:24:00 2011
From: mpg at elzevir.fr (=?ISO-8859-1?Q?Manuel_P=E9gouri=E9-Gonnard?=)
Date: Sat, 05 Mar 2011 19:24:00 +0100
Subject: [lltx] pattern loading in luatex
In-Reply-To: <4D727148.8050908@arcor.de>
References: <AANLkTim_KEWAc4OGG2x-ke=PmbgDXY4PhPo+Cyx8AAWd@mail.gmail.com>	<20110116.095504.434466674.wl@gnu.org>	<AANLkTi=bbYdMe6mbwjVk8H0NW-KOfAPkxB1sKCwn63Y_@mail.gmail.com>	<20110117.041625.235476367.wl@gnu.org>	<AANLkTi=XQwLhgysX8AuHVrNe2H_tdOunU6tiFkgBxE2=@mail.gmail.com>	<4D61573A.9010802@arcor.de>	<AANLkTi=0CpW8T567rhAXik5PrJ81PL15y6B40mZ+WvXz@mail.gmail.com>	<4D6172B9.50701@arcor.de>	<AANLkTimh7WaErU5XMoqv6X5hRATeDXTQ5G2Z35zuK6C0@mail.gmail.com>	<4D617FB0.8050001@arcor.de>	<AANLkTikMkAYC+vbwx7MF2TpdxX9_=mnFNiKXZT9=6JKu@mail.gmail.com>	<4D624872.3030907@arcor.de>
 <AANLkTi=xoZ99K5g+NzN=k3APb1M7o3n_gjvO6wm4W0fO@mail.gmail.com>
 <4D662605.7030009@arcor.de> <4D665A6A.1020900@elzevir.fr>
 <4D727148.8050908@arcor.de>
Message-ID: <4D727FC0.8030207@elzevir.fr>

Le 05/03/2011 18:22, Stephan Hennig a ?crit :
> AFAIK, LuaTeX uses a more complex trie with pre-calculated fall-back
> states.

I wasn't aware of that, good to know.

> Are there any numbers about what makes loading and processing
> (many) patterns in LuaTeX slow?  Is it the first stage of building the
> traditional pattern trie from text files or is it the calculation of
> fall-back states afterwards?
> 
Well, I just ran some tests, all with the Plain + etex.src format. First, I had
pdfTeX generate this format with USenglish only and with all languages
available. Next, I tried loading a format with LuaTeX from TeX Live 2009, either
with only USenglish or with all languages. Finally, I had LuaTeX 0.65 with
formats from TL 2010 process a file loading only USenglish or all languages.
Here are the results:

pdftex (TL 2010) fmt gen, USenglish only:       0.3s
pdftex (TL 2010) fmt gen, all lang:             3.3s

luatex (TL 2009) fmt load, USen only:           0.4s
luatex (TL 2009) fmt load, all lang:            6.1s

luatex 0.65 (TL 2010) \uselanguage{USenglish}:  0.5s
luatex 0.65 (TL 2010) \uselanguage{<ALL>}:      6.8s

So, it looks like processing all languages at format generation time takes some
3 seconds to pdfTeX. Processing them at format loading time takes some 5.7
seconds to LuaTeX, while reading from external files and processing them takes
something like 6.3 seconds.

So, unless I missed something, it looks like pattern processing with LuaTeX
takes almost twice the times is takes with pdfTeX. Not sure if it is related to
the generation of the fall-back states you mention or some other change in the
internal code.

Anyway, you rarely need all 85 languages in one single document, so probably
it's not a big deal in normal situations.

>> Option 2 is implemented since TL 2010.
> 
> Great!  Somehow I happened to followed that back then, but missed what
> it was all about. :/
> 
IIRC, the discussions weren't exactly easy to follow, and there was already
enough questions about the multiple versions of German patterns to keep you busy :-)

Manuel.

From st_philipp at yahoo.de  Sat Mar  5 19:59:16 2011
From: st_philipp at yahoo.de (Philipp Stephani)
Date: Sat, 05 Mar 2011 19:59:16 +0100
Subject: [lltx] pattern loading in luatex
In-Reply-To: <4D727FC0.8030207@elzevir.fr>
References: <AANLkTim_KEWAc4OGG2x-ke=PmbgDXY4PhPo+Cyx8AAWd@mail.gmail.com>	<20110116.095504.434466674.wl@gnu.org>	<AANLkTi=bbYdMe6mbwjVk8H0NW-KOfAPkxB1sKCwn63Y_@mail.gmail.com>	<20110117.041625.235476367.wl@gnu.org>	<AANLkTi=XQwLhgysX8AuHVrNe2H_tdOunU6tiFkgBxE2=@mail.gmail.com>	<4D61573A.9010802@arcor.de>	<AANLkTi=0CpW8T567rhAXik5PrJ81PL15y6B40mZ+WvXz@mail.gmail.com>	<4D6172B9.50701@arcor.de>	<AANLkTimh7WaErU5XMoqv6X5hRATeDXTQ5G2Z35zuK6C0@mail.gmail.com>	<4D617FB0.8050001@arcor.de>	<AANLkTikMkAYC+vbwx7MF2TpdxX9_=mnFNiKXZT9=6JKu@mail.gmail.com>	<4D624872.3030907@arcor.de>
 <AANLkTi=xoZ99K5g+NzN=k3APb1M7o3n_gjvO6wm4W0fO@mail.gmail.com>
 <4D662605.7030009@arcor.de> <4D665A6A.1020900@elzevir.fr>
 <4D727148.8050908@arcor.de> <4D727FC0.8030207@elzevir.fr>
Message-ID: <4D728804.80604@yahoo.de>

Am 05.03.2011 19:24, schrieb Manuel P?gouri?-Gonnard:
> Le 05/03/2011 18:22, Stephan Hennig a ?crit :
>> AFAIK, LuaTeX uses a more complex trie with pre-calculated fall-back
>> states.
> 
> I wasn't aware of that, good to know.

Actually the manual (?6.4) states

"First and foremost, there is no ?compressed trie' involved in
hyphenation. The algorithm still reads patgen-generated pattern files,
but LuaTEX uses a finite state hash to match the patterns against the
word to be hyphenated."

From ulrik.vieth at arcor.de  Sat Mar  5 20:57:06 2011
From: ulrik.vieth at arcor.de (Ulrik Vieth)
Date: Sat, 05 Mar 2011 20:57:06 +0100
Subject: [lltx] $n\choose k$-issue with OpenType math fonts
In-Reply-To: <4D724F9E.9000107@yahoo.de>
References: <BBE2E95F-E738-46C1-BF42-15D5374BB39E@rz-online.de>
 <20110304215006.GA9025@khaled-laptop> <4D7167B9.6090700@yahoo.de>
 <20110304232159.GA9200@khaled-laptop> <4D718E49.8030706@yahoo.de>
 <4D719A16.7090702@yahoo.de> <4D71F2FE.70702@elvenkind.com>
 <4D724F9E.9000107@yahoo.de>
Message-ID: <4D729592.7020206@arcor.de>

On 03/05/2011 03:58 PM, Philipp Stephani wrote:

> There surely exists a reason why Microsoft chose to leave out the three
> parameters delim1, delim2, and sub2.
 >Perhaps they thought that distinguishing between \left(1 \atop 2\right)
 > and 1 \atopwithdelims() 2 would be too surprising and seldom relevant.
 > I think better than guessing correct parameter values would be
 > to do the  equivalent of \left(1 \atop 2\right) if the user requested
> 1 \atopwithdelims() 2 and the parameters are undefined.

I already discussed this issue in my paper "OpenType Math illuminated"
http://www.tug.org/TUGboat/tb30-1/tb94vieth.pdf on p.28.

I essentially came to the same conclusions:

"In the absence of a better solution, it may be
best to simply avoid using \atopwithdelims with
OpenType math fonts in the new TEX engines and
to redefine user-level macros (such as \choose)
in terms of \left and \right delimiters."

Regards, Ulrik.

From ulrik.vieth at arcor.de  Sat Mar  5 21:18:51 2011
From: ulrik.vieth at arcor.de (Ulrik Vieth)
Date: Sat, 05 Mar 2011 21:18:51 +0100
Subject: [lltx] $n\choose k$-issue with OpenType math fonts
In-Reply-To: <4D7167B9.6090700@yahoo.de>
References: <BBE2E95F-E738-46C1-BF42-15D5374BB39E@rz-online.de>
 <20110304215006.GA9025@khaled-laptop> <4D7167B9.6090700@yahoo.de>
Message-ID: <4D729AAB.9000609@arcor.de>

On 03/04/2011 11:29 PM, Philipp Stephani wrote:
  > A1, A2, A3, A5, A6, A7, A8, A9, A11, C1, C2, C3, C5, C6, C7, C8, C9,
> C10, C11, X5, X9, X10, X11 look good.

> A4, C4, X4: upper and lower part are too far away from each other; as
> there is no fraction bar, they should be closer to each other than the
> numerator/denominator in ACX5.

> A10: numerator and denominator are too far away from the fraction bar.

> X1, X3, X6, X7, X8: lower part is too far to the bottom.
> X2: parentheses are too high.

> The issues that occur with Computer Modern are: 4, 10, i.e. those that
> also appear with A and C; these are more-or-less design problems;
> someone should check if they also occur in Word. X has more issues;
> LuaLaTeX + A/C can be declared okay-ish, but not perfect IMO.

I think the case of A4 using too large a size of delimiters with Asana
was a bug in LuaTeX 0.60.2 that was fixed in 0.61 upwards. (There was
an off-by-one error in LuaTeX jumping to the biggest size too early, and 
Asana happened to have fewer sizes of delimiters than the others.)

> It would be interesting to know whether there are established
> conventions regarding the vertical gaps in fractions vs. binomials.
> Personally I'd prefer a smaller gap for the latter since the bar is absent.

For a traditional TeX font, the minimum gap in gneralized fractions
without a bar will be 3x rule thickness in text style and 7x rule in 
display style, which may be quite large, depending on rule thickness.
Fortunately, OpenType MATH allows to specify the parameters separately, 
so it becomes possible to compensate for a larger rule thickness.

(See figure 3 and table 4 on p.25 of my paper
http://www.tug.org/TUGboat/tb30-1/tb94vieth.pdf)

Regards, Ulrik.

P.S: In any case, there is something very strange with xits-math.

From pragma at wxs.nl  Sat Mar  5 22:34:18 2011
From: pragma at wxs.nl (Hans Hagen)
Date: Sat, 05 Mar 2011 22:34:18 +0100
Subject: [lltx] [luatex]  pattern loading in luatex
In-Reply-To: <4D727FC0.8030207@elzevir.fr>
References: <AANLkTim_KEWAc4OGG2x-ke=PmbgDXY4PhPo+Cyx8AAWd@mail.gmail.com>	<20110116.095504.434466674.wl@gnu.org>	<AANLkTi=bbYdMe6mbwjVk8H0NW-KOfAPkxB1sKCwn63Y_@mail.gmail.com>	<20110117.041625.235476367.wl@gnu.org>	<AANLkTi=XQwLhgysX8AuHVrNe2H_tdOunU6tiFkgBxE2=@mail.gmail.com>	<4D61573A.9010802@arcor.de>	<AANLkTi=0CpW8T567rhAXik5PrJ81PL15y6B40mZ+WvXz@mail.gmail.com>	<4D6172B9.50701@arcor.de>	<AANLkTimh7WaErU5XMoqv6X5hRATeDXTQ5G2Z35zuK6C0@mail.gmail.com>	<4D617FB0.8050001@arcor.de>	<AANLkTikMkAYC+vbwx7MF2TpdxX9_=mnFNiKXZT9=6JKu@mail.gmail.com>	<4D624872.3030907@arcor.de>
 <AANLkTi=xoZ99K5g+NzN=k3APb1M7o3n_gjvO6wm4W0fO@mail.gmail.com>
 <4D662605.7030009@arcor.de> <4D665A6A.1020900@elzevir.fr>
 <4D727148.8050908@arcor.de> <4D727FC0.8030207@elzevir.fr>
Message-ID: <4D72AC5A.5020207@wxs.nl>

On 5-3-2011 7:24, Manuel P?gouri?-Gonnard wrote:

> So, unless I missed something, it looks like pattern processing with LuaTeX
> takes almost twice the times is takes with pdfTeX. Not sure if it is related to
> the generation of the fall-back states you mention or some other change in the
> internal code.

(1) the internal code is different
(2) the machinery is utf (large numbers internally)
(3) patterns are utf

in general the luatex machinery is slower than pdftex (upto two times, 
depending on what you do) which is mostly due to the fact that pdftex is 
8 bit

in context mkii we are using utf encoded patterns and there loading 
patterns in pdftex is definitely slower than in xetex and luatex simply 
because in pdftex one has to parse

(also, it depends on the language, for instance, russian has large slow 
loading patterns)

Hans



-----------------------------------------------------------------
                                           Hans Hagen | PRAGMA ADE
               Ridderstraat 27 | 8061 GH Hasselt | The Netherlands
     tel: 038 477 53 69 | voip: 087 875 68 74 | www.pragma-ade.com
                                              | www.pragma-pod.nl
-----------------------------------------------------------------

From mailing_list at arcor.de  Sun Mar  6 00:52:17 2011
From: mailing_list at arcor.de (Stephan Hennig)
Date: Sun, 06 Mar 2011 00:52:17 +0100
Subject: [lltx] pattern loading in luatex
In-Reply-To: <4D728804.80604@yahoo.de>
References: <AANLkTim_KEWAc4OGG2x-ke=PmbgDXY4PhPo+Cyx8AAWd@mail.gmail.com>	<20110116.095504.434466674.wl@gnu.org>	<AANLkTi=bbYdMe6mbwjVk8H0NW-KOfAPkxB1sKCwn63Y_@mail.gmail.com>	<20110117.041625.235476367.wl@gnu.org>	<AANLkTi=XQwLhgysX8AuHVrNe2H_tdOunU6tiFkgBxE2=@mail.gmail.com>	<4D61573A.9010802@arcor.de>	<AANLkTi=0CpW8T567rhAXik5PrJ81PL15y6B40mZ+WvXz@mail.gmail.com>	<4D6172B9.50701@arcor.de>	<AANLkTimh7WaErU5XMoqv6X5hRATeDXTQ5G2Z35zuK6C0@mail.gmail.com>	<4D617FB0.8050001@arcor.de>	<AANLkTikMkAYC+vbwx7MF2TpdxX9_=mnFNiKXZT9=6JKu@mail.gmail.com>	<4D624872.3030907@arcor.de>
 <AANLkTi=xoZ99K5g+NzN=k3APb1M7o3n_gjvO6wm4W0fO@mail.gmail.com>
 <4D662605.7030009@arcor.de> <4D665A6A.1020900@elzevir.fr>
 <4D727148.8050908@arcor.de> <4D727FC0.8030207@elzevir.fr>
 <4D728804.80604@yahoo.de>
Message-ID: <4D72CCB1.80402@arcor.de>

schrieb Philipp Stephani:

> Actually the manual (?6.4) states
> 
> "First and foremost, there is no ?compressed trie' involved in
> hyphenation. The algorithm still reads patgen-generated pattern files,
> but LuaTEX uses a finite state hash to match the patterns against the
> word to be hyphenated."

Which, once more, is a rather terse description.  I guess, the "finite
state" (automaton) part refers to a trie with pre-calculated fall-back
transitions.  During the decomposition of a word into patterns, these
fall-back transitions make it possible to maintain just one active state
instead of a (redundant) set of currently active states.  The "hash"
part probably refers to the data structure used for storing the trie
(the automaton).

Best regards,
Stephan Hennig

From taco at elvenkind.com  Sun Mar  6 08:49:17 2011
From: taco at elvenkind.com (Taco Hoekwater)
Date: Sun, 06 Mar 2011 08:49:17 +0100
Subject: [lltx] pattern loading in luatex
In-Reply-To: <4D72CCB1.80402@arcor.de>
References: <AANLkTim_KEWAc4OGG2x-ke=PmbgDXY4PhPo+Cyx8AAWd@mail.gmail.com>	<20110116.095504.434466674.wl@gnu.org>	<AANLkTi=bbYdMe6mbwjVk8H0NW-KOfAPkxB1sKCwn63Y_@mail.gmail.com>	<20110117.041625.235476367.wl@gnu.org>	<AANLkTi=XQwLhgysX8AuHVrNe2H_tdOunU6tiFkgBxE2=@mail.gmail.com>	<4D61573A.9010802@arcor.de>	<AANLkTi=0CpW8T567rhAXik5PrJ81PL15y6B40mZ+WvXz@mail.gmail.com>	<4D6172B9.50701@arcor.de>	<AANLkTimh7WaErU5XMoqv6X5hRATeDXTQ5G2Z35zuK6C0@mail.gmail.com>	<4D617FB0.8050001@arcor.de>	<AANLkTikMkAYC+vbwx7MF2TpdxX9_=mnFNiKXZT9=6JKu@mail.gmail.com>	<4D624872.3030907@arcor.de>
 <AANLkTi=xoZ99K5g+NzN=k3APb1M7o3n_gjvO6wm4W0fO@mail.gmail.com>
 <4D662605.7030009@arcor.de> <4D665A6A.1020900@elzevir.fr>
 <4D727148.8050908@arcor.de> <4D727FC0.8030207@elzevir.fr>
 <4D728804.80604@yahoo.de> <4D72CCB1.80402@arcor.de>
Message-ID: <4D733C7D.8000402@elvenkind.com>

On 03/06/2011 12:52 AM, Stephan Hennig wrote:
> schrieb Philipp Stephani:
>
>> Actually the manual (?6.4) states
>>
>> "First and foremost, there is no ?compressed trie' involved in
>> hyphenation. The algorithm still reads patgen-generated pattern files,
>> but LuaTEX uses a finite state hash to match the patterns against the
>> word to be hyphenated."
>
> Which, once more, is a rather terse description.  I guess, the "finite
> state" (automaton) part refers to a trie with pre-calculated fall-back
> transitions.

Almost. It refers to a hash with pre-calculated fall-back transitions
(both hash and trie are words for actual data structures).

Best wishes,
Taco

From mailing_list at arcor.de  Sun Mar  6 14:24:33 2011
From: mailing_list at arcor.de (Stephan Hennig)
Date: Sun, 06 Mar 2011 14:24:33 +0100
Subject: [lltx] pattern loading in luatex
In-Reply-To: <4D733C7D.8000402@elvenkind.com>
References: <AANLkTim_KEWAc4OGG2x-ke=PmbgDXY4PhPo+Cyx8AAWd@mail.gmail.com>	<20110116.095504.434466674.wl@gnu.org>	<AANLkTi=bbYdMe6mbwjVk8H0NW-KOfAPkxB1sKCwn63Y_@mail.gmail.com>	<20110117.041625.235476367.wl@gnu.org>	<AANLkTi=XQwLhgysX8AuHVrNe2H_tdOunU6tiFkgBxE2=@mail.gmail.com>	<4D61573A.9010802@arcor.de>	<AANLkTi=0CpW8T567rhAXik5PrJ81PL15y6B40mZ+WvXz@mail.gmail.com>	<4D6172B9.50701@arcor.de>	<AANLkTimh7WaErU5XMoqv6X5hRATeDXTQ5G2Z35zuK6C0@mail.gmail.com>	<4D617FB0.8050001@arcor.de>	<AANLkTikMkAYC+vbwx7MF2TpdxX9_=mnFNiKXZT9=6JKu@mail.gmail.com>	<4D624872.3030907@arcor.de>
 <AANLkTi=xoZ99K5g+NzN=k3APb1M7o3n_gjvO6wm4W0fO@mail.gmail.com>
 <4D662605.7030009@arcor.de> <4D665A6A.1020900@elzevir.fr>
 <4D727148.8050908@arcor.de> <4D727FC0.8030207@elzevir.fr>
 <4D728804.80604@yahoo.de> <4D72CCB1.80402@arcor.de>
 <4D733C7D.8000402@elvenkind.com>
Message-ID: <4D738B11.7060109@arcor.de>

schrieb Taco Hoekwater:

> Almost. It refers to a hash with pre-calculated fall-back transitions
> (both hash and trie are words for actual data structures).

But there is a difference.  A hash is about laying out data in physical
memory, i.e., mapping data to addresses.  A trie, on the other hand,
makes no assumptions about the actual storage technique, but is a
mapping of states to transitions and an associated value.  (Where
transitions again are a mapping of characters to states.)  It is a much
more top-level data structure than a hash and should better be compared
to lists, trees etc.

Let me put it this way:  In LuaTeX, the top-level data structure to
organize the patterns of a language is still a trie, with additional
data attached (fall-back transitions) that make the trie behave like a
finite state automaton.  Would that be wrong?

BTW, am I correctly assuming that the reason for switching from a packed
array data structure to a hash is that the former only works as long as
the keys (characters) are from a finite range.  Which is the case for a
7 or 8 bit character encoding.  But with Unicode characters this is
(practically) not the case?

Best regards,
Stephan Hennig

From khaledhosny at eglug.org  Sun Mar  6 17:56:00 2011
From: khaledhosny at eglug.org (Khaled Hosny)
Date: Sun, 6 Mar 2011 18:56:00 +0200
Subject: [lltx] $n\choose k$-issue with OpenType math fonts
In-Reply-To: <4D729AAB.9000609@arcor.de>
References: <BBE2E95F-E738-46C1-BF42-15D5374BB39E@rz-online.de>
 <20110304215006.GA9025@khaled-laptop> <4D7167B9.6090700@yahoo.de>
 <4D729AAB.9000609@arcor.de>
Message-ID: <20110306165600.GA10059@khaled-laptop>

On Sat, Mar 05, 2011 at 09:18:51PM +0100, Ulrik Vieth wrote:
> P.S: In any case, there is something very strange with xits-math.

That is clear, but I've very little time to investigate it. Patches (or
even ideas) are welcome, though.

-- 
 Khaled Hosny
 Egyptian
 Arab

From ulrik.vieth at arcor.de  Sun Mar  6 18:58:23 2011
From: ulrik.vieth at arcor.de (ulrik.vieth at arcor.de)
Date: Sun, 6 Mar 2011 18:58:23 +0100 (CET)
Subject: [lltx] $n\choose k$-issue with OpenType math fonts
In-Reply-To: <20110306165600.GA10059@khaled-laptop>
References: <20110306165600.GA10059@khaled-laptop>
 <BBE2E95F-E738-46C1-BF42-15D5374BB39E@rz-online.de>
 <20110304215006.GA9025@khaled-laptop> <4D7167B9.6090700@yahoo.de>
 <4D729AAB.9000609@arcor.de>
Message-ID: <306633775.131325.1299434303877.JavaMail.ngmail@webmail16.arcor-online.net>

> On Sat, Mar 05, 2011 at 09:18:51PM +0100, Ulrik Vieth wrote:
> > P.S: In any case, there is something very strange with xits-math.
> 
> That is clear, but I've very little time to investigate it. Patches 
> (or even ideas) are welcome, though.

Can you try the following parameter values:

StackBottomShiftDown 480  (instead of 800)
(= same as FractionDenominatorShiftDown)

StackBottomDisplayStyleShiftDown 700 (instead of 900)
(= same as fractionDenominatorDisplayStyleShiftDown)

The values of StackGapMin and StackDisplayStyleGapMin 
seem to be OK based on multiples of rule thickness.

Regards, Ulrik

From taco at elvenkind.com  Mon Mar  7 08:24:23 2011
From: taco at elvenkind.com (Taco Hoekwater)
Date: Mon, 07 Mar 2011 08:24:23 +0100
Subject: [lltx] [Dev-luatex] Using .ttc fonts with lua(la)tex in mactex
	2010
In-Reply-To: <6186BFE2-AC19-4D25-B43C-1FDA091AAA89@googlemail.com>
References: <6186BFE2-AC19-4D25-B43C-1FDA091AAA89@googlemail.com>
Message-ID: <4D748827.9070501@elvenkind.com>

On 03/06/2011 04:55 PM, Beingalink wrote:
> I just decided to investigate this problem a bit deeper and finally
> found out that doing some manual changes in otfl-names.lua, enables
> me to use these fonts again. I tested it using "Hoefler Text.ttc".
> The entries in otfl-names.lua regarding hoefler text are:
>
> I added the actual path to the .ttc file and thus changed the entries
> to this:

It looks like the mkluatexfontdb can find the font, but the runtime
system cannot. As this is probably a luaotfload problem, I am including
the lualatex mailing list in the CC list.

Best wishes,
Taco

From taco at elvenkind.com  Mon Mar  7 08:34:53 2011
From: taco at elvenkind.com (Taco Hoekwater)
Date: Mon, 07 Mar 2011 08:34:53 +0100
Subject: [lltx] pattern loading in luatex
In-Reply-To: <4D738B11.7060109@arcor.de>
References: <AANLkTim_KEWAc4OGG2x-ke=PmbgDXY4PhPo+Cyx8AAWd@mail.gmail.com>	<20110116.095504.434466674.wl@gnu.org>	<AANLkTi=bbYdMe6mbwjVk8H0NW-KOfAPkxB1sKCwn63Y_@mail.gmail.com>	<20110117.041625.235476367.wl@gnu.org>	<AANLkTi=XQwLhgysX8AuHVrNe2H_tdOunU6tiFkgBxE2=@mail.gmail.com>	<4D61573A.9010802@arcor.de>	<AANLkTi=0CpW8T567rhAXik5PrJ81PL15y6B40mZ+WvXz@mail.gmail.com>	<4D6172B9.50701@arcor.de>	<AANLkTimh7WaErU5XMoqv6X5hRATeDXTQ5G2Z35zuK6C0@mail.gmail.com>	<4D617FB0.8050001@arcor.de>	<AANLkTikMkAYC+vbwx7MF2TpdxX9_=mnFNiKXZT9=6JKu@mail.gmail.com>	<4D624872.3030907@arcor.de>
 <AANLkTi=xoZ99K5g+NzN=k3APb1M7o3n_gjvO6wm4W0fO@mail.gmail.com>
 <4D662605.7030009@arcor.de> <4D665A6A.1020900@elzevir.fr>
 <4D727148.8050908@arcor.de> <4D727FC0.8030207@elzevir.fr>
 <4D728804.80604@yahoo.de> <4D72CCB1.80402@arcor.de>
 <4D733C7D.8000402@elvenkind.com> <4D738B11.7060109@arcor.de>
Message-ID: <4D748A9D.4040800@elvenkind.com>

On 03/06/2011 02:24 PM, Stephan Hennig wrote:
>
> Let me put it this way:  In LuaTeX, the top-level data structure to
> organize the patterns of a language is still a trie, with additional
> data attached (fall-back transitions) that make the trie behave like a
> finite state automaton.  Would that be wrong?

It depends on how you see the word 'trie': there is nowhere in luatex
a data structure that looks like an actual trie. The algorithm of course
uses a prefix test as the first step, but it checks for a key in a
hash instead of walking a tree. I am not too good in explaining this,
but you can look at luatexdir/lang/hyphen.w for the actual details.

> BTW, am I correctly assuming that the reason for switching from a packed
> array data structure to a hash is that the former only works as long as
> the keys (characters) are from a finite range.  Which is the case for a
> 7 or 8 bit character encoding.  But with Unicode characters this is
> (practically) not the case?

Mostly. A secondary reason is that the original routines converted the
trie into a 'compressed trie', after which point it became immutable.
We did not like that, it is quite handy to be able to add new \patterns
(for other languages) on the fly, and changing the existing code would
have been quite a lot of work. A+B meant that the hash-based approach
from LibHNJ was much easier to incorporate.

Best wishes,
Taco

From mailing_list at arcor.de  Mon Mar  7 13:56:45 2011
From: mailing_list at arcor.de (Stephan Hennig)
Date: Mon, 07 Mar 2011 13:56:45 +0100
Subject: [lltx] pattern loading in luatex
In-Reply-To: <4D748A9D.4040800@elvenkind.com>
References: <AANLkTim_KEWAc4OGG2x-ke=PmbgDXY4PhPo+Cyx8AAWd@mail.gmail.com>	<20110116.095504.434466674.wl@gnu.org>	<AANLkTi=bbYdMe6mbwjVk8H0NW-KOfAPkxB1sKCwn63Y_@mail.gmail.com>	<20110117.041625.235476367.wl@gnu.org>	<AANLkTi=XQwLhgysX8AuHVrNe2H_tdOunU6tiFkgBxE2=@mail.gmail.com>	<4D61573A.9010802@arcor.de>	<AANLkTi=0CpW8T567rhAXik5PrJ81PL15y6B40mZ+WvXz@mail.gmail.com>	<4D6172B9.50701@arcor.de>	<AANLkTimh7WaErU5XMoqv6X5hRATeDXTQ5G2Z35zuK6C0@mail.gmail.com>	<4D617FB0.8050001@arcor.de>	<AANLkTikMkAYC+vbwx7MF2TpdxX9_=mnFNiKXZT9=6JKu@mail.gmail.com>	<4D624872.3030907@arcor.de>
 <AANLkTi=xoZ99K5g+NzN=k3APb1M7o3n_gjvO6wm4W0fO@mail.gmail.com>
 <4D662605.7030009@arcor.de> <4D665A6A.1020900@elzevir.fr>
 <4D727148.8050908@arcor.de> <4D727FC0.8030207@elzevir.fr>
 <4D728804.80604@yahoo.de> <4D72CCB1.80402@arcor.de>
 <4D733C7D.8000402@elvenkind.com> <4D738B11.7060109@arcor.de>
 <4D748A9D.4040800@elvenkind.com>
Message-ID: <4D74D60D.9080309@arcor.de>

schrieb Taco Hoekwater:
> On 03/06/2011 02:24 PM, Stephan Hennig wrote:
>>
>> Let me put it this way:  In LuaTeX, the top-level data structure to
>> organize the patterns of a language is still a trie, with additional
>> data attached (fall-back transitions) that make the trie behave like a
>> finite state automaton.  Would that be wrong?
> 
> It depends on how you see the word 'trie': there is nowhere in luatex
> a data structure that looks like an actual trie. The algorithm of course
> uses a prefix test as the first step, but it checks for a key in a
> hash instead of walking a tree.

OK, I was assuming word decomposition still worked by walking a tree and
the hashed keys are the (multi-byte) Unicode characters triggering a
transition at a certain state.


> I am not too good in explaining this, but you can look at
> luatexdir/lang/hyphen.w for the actual details.

I have already looked at the libhnj sources, but honestly, I'm not good
at reading code and even worse in languages I rarely use myself.  But
nevertheless, I'm interested in knowing a bit more about the actual
algorithm used in LuaTeX.  (I have coded a trie based hyphenation
algorithm in Lua.)

By "instead of walking a trie", do you mean LuaTeX uses a trivial
approach where the existence of all patterns potentially matching a word
are checked individually?  As an example, for a word "abc" iterations
are as follows:

  iteration  new character  existing patterns to check

    1          a              a

    2          b              b
                              ab

    3          c              c
                              bc
                              abc

That would be a quadratic order word decomposition algorithm instead of
the linear trie based algorithm.  I don't think word decomposition were
a bottleneck even with such trivial approach, but still ...

After another thought:  in the trivial approach there's no need for
fall-back transitions.  So I wonder what fall-back transitions are good
for, if you're not walking a tree?


>> BTW, am I correctly assuming that the reason for switching from a packed
>> array data structure to a hash is that the former only works as long as
>> the keys (characters) are from a finite range.  Which is the case for a
>> 7 or 8 bit character encoding.  But with Unicode characters this is
>> (practically) not the case?
> 
> Mostly. A secondary reason is that the original routines converted the
> trie into a 'compressed trie', after which point it became immutable.
> We did not like that, it is quite handy to be able to add new \patterns
> (for other languages) on the fly, and changing the existing code would
> have been quite a lot of work.

True.

Best regards,
Stephan Hennig

From mailing_list at arcor.de  Mon Mar  7 14:22:27 2011
From: mailing_list at arcor.de (Stephan Hennig)
Date: Mon, 07 Mar 2011 14:22:27 +0100
Subject: [lltx] pattern loading in luatex
In-Reply-To: <4D74D60D.9080309@arcor.de>
References: <AANLkTim_KEWAc4OGG2x-ke=PmbgDXY4PhPo+Cyx8AAWd@mail.gmail.com>	<20110116.095504.434466674.wl@gnu.org>	<AANLkTi=bbYdMe6mbwjVk8H0NW-KOfAPkxB1sKCwn63Y_@mail.gmail.com>	<20110117.041625.235476367.wl@gnu.org>	<AANLkTi=XQwLhgysX8AuHVrNe2H_tdOunU6tiFkgBxE2=@mail.gmail.com>	<4D61573A.9010802@arcor.de>	<AANLkTi=0CpW8T567rhAXik5PrJ81PL15y6B40mZ+WvXz@mail.gmail.com>	<4D6172B9.50701@arcor.de>	<AANLkTimh7WaErU5XMoqv6X5hRATeDXTQ5G2Z35zuK6C0@mail.gmail.com>	<4D617FB0.8050001@arcor.de>	<AANLkTikMkAYC+vbwx7MF2TpdxX9_=mnFNiKXZT9=6JKu@mail.gmail.com>	<4D624872.3030907@arcor.de>
 <AANLkTi=xoZ99K5g+NzN=k3APb1M7o3n_gjvO6wm4W0fO@mail.gmail.com>
 <4D662605.7030009@arcor.de> <4D665A6A.1020900@elzevir.fr>
 <4D727148.8050908@arcor.de> <4D727FC0.8030207@elzevir.fr>
 <4D728804.80604@yahoo.de> <4D72CCB1.80402@arcor.de>
 <4D733C7D.8000402@elvenkind.com> <4D738B11.7060109@arcor.de>
 <4D748A9D.4040800@elvenkind.com> <4D74D60D.9080309@arcor.de>
Message-ID: <4D74DC13.10002@arcor.de>

schrieb Stephan Hennig:

> As an example, for a word "abc" iterations
> are as follows:
> 
>   iteration  new character  existing patterns to check
> 
> [...]

Omitting patterns containing the word boundary character in the example.

Best regards,
Stephan Hennig

From news3 at nililand.de  Mon Mar  7 17:26:37 2011
From: news3 at nililand.de (Ulrike Fischer)
Date: Mon, 7 Mar 2011 17:26:37 +0100
Subject: [lltx] Correcting \typein
Message-ID: <c3egjxcvpwhx$.dlg@nililand.de>

As has been discussed on Tex.stackexchange \typein breaks in luatex
as it sets \endlinechar to a value not allowed in luatex:

http://tex.stackexchange.com/questions/12435/incompatibilities-between-lualatex-and-typein

Philipp suggested a patch which seems to work fine. Could this patch
been added to lualatex.ini?

-- 
Ulrike Fischer 


From taco at elvenkind.com  Tue Mar  8 09:06:26 2011
From: taco at elvenkind.com (Taco Hoekwater)
Date: Tue, 08 Mar 2011 09:06:26 +0100
Subject: [lltx] pattern loading in luatex
In-Reply-To: <4D74D60D.9080309@arcor.de>
References: <AANLkTim_KEWAc4OGG2x-ke=PmbgDXY4PhPo+Cyx8AAWd@mail.gmail.com>	<20110116.095504.434466674.wl@gnu.org>	<AANLkTi=bbYdMe6mbwjVk8H0NW-KOfAPkxB1sKCwn63Y_@mail.gmail.com>	<20110117.041625.235476367.wl@gnu.org>	<AANLkTi=XQwLhgysX8AuHVrNe2H_tdOunU6tiFkgBxE2=@mail.gmail.com>	<4D61573A.9010802@arcor.de>	<AANLkTi=0CpW8T567rhAXik5PrJ81PL15y6B40mZ+WvXz@mail.gmail.com>	<4D6172B9.50701@arcor.de>	<AANLkTimh7WaErU5XMoqv6X5hRATeDXTQ5G2Z35zuK6C0@mail.gmail.com>	<4D617FB0.8050001@arcor.de>	<AANLkTikMkAYC+vbwx7MF2TpdxX9_=mnFNiKXZT9=6JKu@mail.gmail.com>	<4D624872.3030907@arcor.de>
 <AANLkTi=xoZ99K5g+NzN=k3APb1M7o3n_gjvO6wm4W0fO@mail.gmail.com>
 <4D662605.7030009@arcor.de> <4D665A6A.1020900@elzevir.fr>
 <4D727148.8050908@arcor.de> <4D727FC0.8030207@elzevir.fr>
 <4D728804.80604@yahoo.de> <4D72CCB1.80402@arcor.de>
 <4D733C7D.8000402@elvenkind.com> <4D738B11.7060109@arcor.de>
 <4D748A9D.4040800@elvenkind.com> <4D74D60D.9080309@arcor.de>
Message-ID: <4D75E382.7000307@elvenkind.com>

On 03/07/2011 01:56 PM, Stephan Hennig wrote:
>
>> I am not too good in explaining this, but you can look at
>> luatexdir/lang/hyphen.w for the actual details.
>
> I have already looked at the libhnj sources, but honestly, I'm not good
> at reading code and even worse in languages I rarely use myself.  But
> nevertheless, I'm interested in knowing a bit more about the actual
> algorithm used in LuaTeX.

I have no time right now to write a (lengthy) explanation, sorry.
If you are still interested a month from now, please remind me.

Best wishes,
Taco

From mailing_list at arcor.de  Tue Mar  8 13:01:36 2011
From: mailing_list at arcor.de (Stephan Hennig)
Date: Tue, 08 Mar 2011 13:01:36 +0100
Subject: [lltx] pattern loading in luatex
In-Reply-To: <4D75E382.7000307@elvenkind.com>
References: <AANLkTim_KEWAc4OGG2x-ke=PmbgDXY4PhPo+Cyx8AAWd@mail.gmail.com>	<20110116.095504.434466674.wl@gnu.org>	<AANLkTi=bbYdMe6mbwjVk8H0NW-KOfAPkxB1sKCwn63Y_@mail.gmail.com>	<20110117.041625.235476367.wl@gnu.org>	<AANLkTi=XQwLhgysX8AuHVrNe2H_tdOunU6tiFkgBxE2=@mail.gmail.com>	<4D61573A.9010802@arcor.de>	<AANLkTi=0CpW8T567rhAXik5PrJ81PL15y6B40mZ+WvXz@mail.gmail.com>	<4D6172B9.50701@arcor.de>	<AANLkTimh7WaErU5XMoqv6X5hRATeDXTQ5G2Z35zuK6C0@mail.gmail.com>	<4D617FB0.8050001@arcor.de>	<AANLkTikMkAYC+vbwx7MF2TpdxX9_=mnFNiKXZT9=6JKu@mail.gmail.com>	<4D624872.3030907@arcor.de>
 <AANLkTi=xoZ99K5g+NzN=k3APb1M7o3n_gjvO6wm4W0fO@mail.gmail.com>
 <4D662605.7030009@arcor.de> <4D665A6A.1020900@elzevir.fr>
 <4D727148.8050908@arcor.de> <4D727FC0.8030207@elzevir.fr>
 <4D728804.80604@yahoo.de> <4D72CCB1.80402@arcor.de>
 <4D733C7D.8000402@elvenkind.com> <4D738B11.7060109@arcor.de>
 <4D748A9D.4040800@elvenkind.com> <4D74D60D.9080309@arcor.de>
 <4D75E382.7000307@elvenkind.com>
Message-ID: <4D761AA0.60503@arcor.de>

schrieb Taco Hoekwater:

> I have no time right now to write a (lengthy) explanation, sorry.
> If you are still interested a month from now, please remind me.

No problem.  I'll get back to you later.

Best regards,
Stephan Hennig

From news3 at nililand.de  Thu Mar 10 17:58:01 2011
From: news3 at nililand.de (Ulrike Fischer)
Date: Thu, 10 Mar 2011 17:58:01 +0100
Subject: [lltx] luaotfload and virtual lua-fonts
Message-ID: <e48o5d5z3bwr.dlg@nililand.de>

The newest font loader code of context contains code to load a
virtual font whose definition is stored in a lua file. 

The code exist also in the luaotfload version from the unstable
branch. So with the unstable version this here works fine:

\documentclass{article}

\usepackage{lipsum}
\usepackage{luaotfload}

\font\mine=luatex-fonts-demo-vf-1-cur.lua at 12pt

\begin{document}
\mine
abc \lipsum
\end{document}

(luatex-fonts-demo-vf-1-cur.lua is a variant of
luatex-fonts-demo-vf-1.lua which can be found in the context
minimal. I only changed the names of the fonts used by the example)

My concern is about the location of this "virtual lua-fonts".
Currently one has to store the lua-files in folders in the normal
lua-search pathes, e.g. in tex\latex\... But I would find it more
cleaner if one could store them in a path in "fonts", e.g.
fonts/vflua. Is this somehow possible?



-- 
Ulrike Fischer 


From khaledhosny at eglug.org  Thu Mar 10 18:10:30 2011
From: khaledhosny at eglug.org (Khaled Hosny)
Date: Thu, 10 Mar 2011 19:10:30 +0200
Subject: [lltx] luaotfload and virtual lua-fonts
In-Reply-To: <e48o5d5z3bwr.dlg@nililand.de>
References: <e48o5d5z3bwr.dlg@nililand.de>
Message-ID: <20110310171030.GA1744@khaled-laptop>

On Thu, Mar 10, 2011 at 05:58:01PM +0100, Ulrike Fischer wrote:
> The newest font loader code of context contains code to load a
> virtual font whose definition is stored in a lua file. 
> 
> The code exist also in the luaotfload version from the unstable
> branch. So with the unstable version this here works fine:
> 
> \documentclass{article}
> 
> \usepackage{lipsum}
> \usepackage{luaotfload}
> 
> \font\mine=luatex-fonts-demo-vf-1-cur.lua at 12pt
> 
> \begin{document}
> \mine
> abc \lipsum
> \end{document}
> 
> (luatex-fonts-demo-vf-1-cur.lua is a variant of
> luatex-fonts-demo-vf-1.lua which can be found in the context
> minimal. I only changed the names of the fonts used by the example)
> 
> My concern is about the location of this "virtual lua-fonts".
> Currently one has to store the lua-files in folders in the normal
> lua-search pathes, e.g. in tex\latex\... But I would find it more
> cleaner if one could store them in a path in "fonts", e.g.
> fonts/vflua. Is this somehow possible?

luaotfload uses kpathea to locate files (the embedded kpse library not
the standalone utilities of course), so if kpse can find it we should.

Regards,
 Khaled

-- 
 Khaled Hosny
 Egyptian
 Arab

From khaledhosny at eglug.org  Fri Mar 11 09:04:12 2011
From: khaledhosny at eglug.org (Khaled Hosny)
Date: Fri, 11 Mar 2011 10:04:12 +0200
Subject: [lltx] $n\choose k$-issue with OpenType math fonts
In-Reply-To: <306633775.131325.1299434303877.JavaMail.ngmail@webmail16.arcor-online.net>
References: <20110306165600.GA10059@khaled-laptop>
 <BBE2E95F-E738-46C1-BF42-15D5374BB39E@rz-online.de>
 <20110304215006.GA9025@khaled-laptop> <4D7167B9.6090700@yahoo.de>
 <4D729AAB.9000609@arcor.de>
 <306633775.131325.1299434303877.JavaMail.ngmail@webmail16.arcor-online.net>
Message-ID: <20110311080412.GA3555@khaled-laptop>

On Sun, Mar 06, 2011 at 06:58:23PM +0100, ulrik.vieth at arcor.de wrote:
> > On Sat, Mar 05, 2011 at 09:18:51PM +0100, Ulrik Vieth wrote:
> > > P.S: In any case, there is something very strange with xits-math.
> > 
> > That is clear, but I've very little time to investigate it. Patches 
> > (or even ideas) are welcome, though.
> 
> Can you try the following parameter values:
> 
> StackBottomShiftDown 480  (instead of 800)
> (= same as FractionDenominatorShiftDown)
> 
> StackBottomDisplayStyleShiftDown 700 (instead of 900)
> (= same as fractionDenominatorDisplayStyleShiftDown)
> 
> The values of StackGapMin and StackDisplayStyleGapMin 
> seem to be OK based on multiples of rule thickness.

Thanks, I applied both and it looks better now.

Regards,
 Khaled

-- 
 Khaled Hosny
 Egyptian
 Arab

From mpg at elzevir.fr  Sat Mar 12 14:20:12 2011
From: mpg at elzevir.fr (=?ISO-8859-1?Q?Manuel_P=E9gouri=E9-Gonnard?=)
Date: Sat, 12 Mar 2011 14:20:12 +0100
Subject: [lltx] Correcting \typein
In-Reply-To: <c3egjxcvpwhx$.dlg@nililand.de>
References: <c3egjxcvpwhx$.dlg@nililand.de>
Message-ID: <4D7B730C.7000102@elzevir.fr>

Le 07/03/2011 17:26, Ulrike Fischer a ?crit :
> As has been discussed on Tex.stackexchange \typein breaks in luatex
> as it sets \endlinechar to a value not allowed in luatex:
> 
> http://tex.stackexchange.com/questions/12435/incompatibilities-between-lualatex-and-typein
> 
> Philipp suggested a patch which seems to work fine. Could this patch
> been added to lualatex.ini?
> 
I just checked in a similar fix to (dvi)lualatex.ini in TeX Live. As usual, it
should be a your local mirror in a matter of days. I tested it carefully, but
additional testing is always welcome.

(I'm not sure if Christian automatically tracks such changes. In case he misses
it, would you like to report that to him, Ulrike? Thanks.)

Manuel.

From taco at elvenkind.com  Mon Mar 14 09:54:31 2011
From: taco at elvenkind.com (Taco Hoekwater)
Date: Mon, 14 Mar 2011 09:54:31 +0100
Subject: [lltx] [luatex] Patching fonts with the luaotfload callback
	"luaotfload.patch_font"
In-Reply-To: <15tkookzynck5.dlg@nililand.de>
References: <1ljwcgp8ixgpm.dlg@nililand.de>
 <CE5F0784-4A6C-48F9-A2D0-E37705597F62@yahoo.de>
 <4D4E68F2.9030601@elvenkind.com> <15tkookzynck5.dlg@nililand.de>
Message-ID: <4D7DD7C7.7030404@elvenkind.com>

On 03/11/2011 01:53 PM, Ulrike Fischer wrote:
> Am Sun, 06 Feb 2011 10:25:06 +0100 schrieb Taco Hoekwater:
>
> [About virtual fonts and tounicode entries]
>
>>> The tounicode entries still don't work as expected; hopefully Taco can enlighten us.
>>
>> tounicode (and the PDF /ToUnicode feature) works on the font glyphs
>> that are actually included in the pdf, that is why it does not work. In
>> the virtual font, it does notwork because there is no actual glyph, and
>> in the original is works 'too well' as both 'a' and 'b' use the same
>> glyph.
>
> I have now a working virtual font which reencodes a chess font. But
> I'm still struck how to manipulate the tounicode values. I have now
> put various combinations of XXX.characters[YY].tounicode=ZZ  in
> various places and nothing works. Can you tell me what I should do?

It does not work because the _real_ font needs tounicode values. As I
wrote earlier: tounicode works on actual glyphs, not virtual glyphs:

        -- u=target, v=source
        local real = font.fonts[id1]
        for u, v in next, reencoding do
            local c = chars[v]
             chars[u].commands = {{ 'char', v }}
             chars[u].kerns    = nil
             chars[u].width    = c.width
             chars[u].height   = c.height
             chars[u].depth    = c.depth
             chars[u].italic   = nil
             real.characters[v].tounicode = string.format("%04x",u)
        end
        font.fonts[id1] = real;

Best wishes,
Taco

From news3 at nililand.de  Mon Mar 14 11:53:16 2011
From: news3 at nililand.de (Ulrike Fischer)
Date: Mon, 14 Mar 2011 11:53:16 +0100
Subject: [lltx] [luatex] Patching fonts with the luaotfload callback
	"luaotfload.patch_font"
References: <1ljwcgp8ixgpm.dlg@nililand.de>
 <CE5F0784-4A6C-48F9-A2D0-E37705597F62@yahoo.de>
 <4D4E68F2.9030601@elvenkind.com> <15tkookzynck5.dlg@nililand.de>
 <4D7DD7C7.7030404@elvenkind.com>
Message-ID: <yf2lknwktdiq.dlg@nililand.de>

Am Mon, 14 Mar 2011 09:54:31 +0100 schrieb Taco Hoekwater:

> On 03/11/2011 01:53 PM, Ulrike Fischer wrote:
>> Am Sun, 06 Feb 2011 10:25:06 +0100 schrieb Taco Hoekwater:
>>
>> [About virtual fonts and tounicode entries]
>>
>>>> The tounicode entries still don't work as expected; hopefully Taco can enlighten us.
>>>
>>> tounicode (and the PDF /ToUnicode feature) works on the font glyphs
>>> that are actually included in the pdf, that is why it does not work. In
>>> the virtual font, it does notwork because there is no actual glyph, and
>>> in the original is works 'too well' as both 'a' and 'b' use the same
>>> glyph.
>>
>> I have now a working virtual font which reencodes a chess font. But
>> I'm still struck how to manipulate the tounicode values. I have now
>> put various combinations of XXX.characters[YY].tounicode=ZZ  in
>> various places and nothing works. Can you tell me what I should do?
> 
> It does not work because the _real_ font needs tounicode values. As I
> wrote earlier: tounicode works on actual glyphs, not virtual glyphs:

Yes, I did understand this. But it doesn't help if you don't _how_
to actually change the tounicode of the actual glyphs instead of the
virtual glyph ;-). I did put e.g. the tounicode command directly
after I loaded the "real" font and this didn't work either. (The
problem is also that I didn't know the correct format for the value.
So they was a lot of possible combinations I had to test.)


Thanks for your code, I will test it later. I also found another
possibility: I can set a /ActualText in the pdf:

           chars[u].commands = {
            {'special', 'pdf:literal BT /Span
<</ActualText<FEFF'..tounicodes[u]..'>>> BDC'},
            { 'char', v },
            {'special','pdf:literal  EMC ET'}}

This works fine, allows more freedom for the replacement text (and
seems even to work in right-to-left text).

(I'm not quite sure yet if the ":literal" and the BT-ET pair is
actually needed.)


-- 
Ulrike Fischer 


From news3 at nililand.de  Tue Mar 15 09:59:52 2011
From: news3 at nililand.de (Ulrike Fischer)
Date: Tue, 15 Mar 2011 09:59:52 +0100
Subject: [lltx] [luatex] Patching fonts with the luaotfload callback
	"luaotfload.patch_font"
References: <1ljwcgp8ixgpm.dlg@nililand.de>
 <CE5F0784-4A6C-48F9-A2D0-E37705597F62@yahoo.de>
 <4D4E68F2.9030601@elvenkind.com> <15tkookzynck5.dlg@nililand.de>
 <4D7DD7C7.7030404@elvenkind.com> <yf2lknwktdiq.dlg@nililand.de>
Message-ID: <2qibat3tybf5$.dlg@nililand.de>

Am Mon, 14 Mar 2011 11:53:16 +0100 schrieb Ulrike Fischer:


>> It does not work because the _real_ font needs tounicode values. As I
>> wrote earlier: tounicode works on actual glyphs, not virtual glyphs:

[...}

> Thanks for your code, I will test it later. 

I tested it. It works but as you said it affects the "real" font.
This means that if the original font was already loaded the
tounicode setting has no effect, and if the original font is loaded
after the virtual font than it gets the new tounicode too. 

As my real font will be used in at least two different virtual fonts
(figurines and board symbols) that would make things a bit
complicated. So I think I will set /ActualText. 


> I also found another
> possibility: I can set a /ActualText in the pdf:
> 
>            chars[u].commands = {
>             {'special', 'pdf:literal BT /Span
> <</ActualText<FEFF'..tounicodes[u]..'>>> BDC'},
>             { 'char', v },
>             {'special','pdf:literal  EMC ET'}}
> 
> This works fine, allows more freedom for the replacement text (and
> seems even to work in right-to-left text).
> 
> (I'm not quite sure yet if the ":literal" and the BT-ET pair is
> actually needed.)

The "literal" and the BT/ET pair gives an error if the font is used
on the second page of document. Everything works fine if I remove
them. 


-- 
Ulrike Fischer 


From news3 at nililand.de  Wed Mar 30 18:58:03 2011
From: news3 at nililand.de (Ulrike Fischer)
Date: Wed, 30 Mar 2011 18:58:03 +0200
Subject: [lltx] Italic correction
Message-ID: <14uo64919uqbg.dlg@nililand.de>

Hallo,


xetex and luatex have problems with the italic correction when they
use open type fonts. xetex seems to calculate at least in some
places an italic correction (but fails in the math too), in luatex
there is not italic correction at all. 

I found some old discussions in the xetex list but nothing really
decisive about if and how the problem should/will be solved. Does
someone here knows more about it?


\documentclass[12pt]{article}

\usepackage{fontspec}
\setmainfont{Times New Roman}
\makeatletter
\DeclareSymbolFont{letters}{\zf at enc}\rmdefault\mddefault\itdefault
%\DeclareSymbolFont{letters}{T1}{ptm}\mddefault\itdefault
\begin{document}

{\itshape f}( {\itshape f\/}(  \emph{f}(  \textit{f}( \textit{f\/}(

$f(a)$
\end{document}


-- 
Ulrike Fischer 


