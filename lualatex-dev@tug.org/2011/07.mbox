From site4000 at free.fr  Sat Jul  2 18:55:19 2011
From: site4000 at free.fr (site4000 at free.fr)
Date: Sat, 02 Jul 2011 18:55:19 +0200
Subject: [lltx] btex ... etex
Message-ID: <4E0F4D77.1080309@free.fr>

Hello,

I'm trying to use LuaLaTeX with luamplib. I'm testing some Metapost code 
inside mplibcode environnement but the btex etex markers don't seem to 
work. I would like to know how I can do without them to have luatex 
typset my labels inside my Metapost code.
If there's no way to do this, is it planned to have similar method to do 
this.

Thank you.


Arthur


From nomosnomos at gmail.com  Mon Jul  4 02:27:03 2011
From: nomosnomos at gmail.com (Dohyun Kim)
Date: Mon, 4 Jul 2011 09:27:03 +0900
Subject: [lltx] btex ... etex
In-Reply-To: <4E0F4D77.1080309@free.fr>
References: <4E0F4D77.1080309@free.fr>
Message-ID: <CAFzmAm2e7427GxSh7GrXggKWmeC+wOLYGm_8JEiHTQNvNhBvSQ@mail.gmail.com>

2011/7/3  <site4000 at free.fr>:
> Hello,
>
> I'm trying to use LuaLaTeX with luamplib. I'm testing some Metapost code
> inside mplibcode environnement but the btex etex markers don't seem to work.
> I would like to know how I can do without them to have luatex typset my
> labels inside my Metapost code.

Hi,
How about try the following files which implement btex etex markers?

http://cvs.ktug.or.kr/viewcvs/ko.TeX/luatexko/luatexkomplib.tex
http://cvs.ktug.or.kr/viewcvs/ko.TeX/luatexko/luatexkomplib.lua

-- 
Dohyun Kim
College of Law, Dongguk University
Seoul, Republic of Korea

From Arno.Trautmann at gmx.de  Mon Jul  4 21:02:42 2011
From: Arno.Trautmann at gmx.de (Arno Trautmann)
Date: Mon, 04 Jul 2011 21:02:42 +0200
Subject: [lltx] mplibcode inside a command?
Message-ID: <4E120E52.8040703@gmx.de>

Hi all,

I was wondering what would be the best way to pack metapost-code so I 
can use a LaTeX-command to typeset it. But I fail due to fancy verb (I 
guess ?), assume the following code:

\documentclass{minimal}
\usepackage{luamplib}
\def\foo{
\begin{mplibcode}

beginfig(1)

draw (0,0) -- (7,2);


endfig

\end{mplibcode}
}
\begin{document}
\foo
\end{document}

This results in the error:

Paragraph ended before \FV at BeginScanning was complete.

So ? any suggestions how I can circumvent that problem?

Thanks and cheers,
Arno

From mpg at elzevir.fr  Tue Jul  5 14:00:28 2011
From: mpg at elzevir.fr (=?UTF-8?B?TWFudWVsIFDDqWdvdXJpw6ktR29ubmFyZA==?=)
Date: Tue, 05 Jul 2011 14:00:28 +0200
Subject: [lltx] mplibcode inside a command?
In-Reply-To: <4E120E52.8040703@gmx.de>
References: <4E120E52.8040703@gmx.de>
Message-ID: <4E12FCDC.5000805@elzevir.fr>

Hi,

Le 04/07/2011 21:02, Arno Trautmann a ?crit :
> I was wondering what would be the best way to pack metapost-code so I 
> can use a LaTeX-command to typeset it. But I fail due to fancy verb (I 
> guess ?), assume the following code:
> 
> \documentclass{minimal}
> \usepackage{luamplib}
> \def\foo{
> \begin{mplibcode}

> beginfig(1)

> draw (0,0) -- (7,2);


> endfig
> 
\end{mplibcode}
> }
> \begin{document}
> \foo
> \end{document}
> 
I'm afraid there is no easy way to achieve that right now. I've noted it and
future versions of luamplib will probably provide a wider range of commands and
environments with different catcode regimes, probably like luacode now, to make
this easier.

Manuel.

From Arno.Trautmann at gmx.de  Tue Jul  5 14:03:09 2011
From: Arno.Trautmann at gmx.de (Arno Trautmann)
Date: Tue, 05 Jul 2011 14:03:09 +0200
Subject: [lltx] mplibcode inside a command?
In-Reply-To: <4E12FCDC.5000805@elzevir.fr>
References: <4E120E52.8040703@gmx.de> <4E12FCDC.5000805@elzevir.fr>
Message-ID: <4E12FD7D.4040603@gmx.de>

Hi Manuel,

Manuel P?gouri?-Gonnard wrote:
> Le 04/07/2011 21:02, Arno Trautmann a ?crit :
>> I was wondering what would be the best way to pack metapost-code so I
>> can use a LaTeX-command to typeset it. But I fail due to fancy verb (I
>> guess ?), assume the following code:
>>
>> \documentclass{minimal}
>> \usepackage{luamplib}
>> \def\foo{
>> \begin{mplibcode}

>> beginfig(1)

>> draw (0,0) -- (7,2);


>> endfig
>> 
\end{mplibcode}
>> }
>> \begin{document}
>> \foo
>> \end{document}
>>
> I'm afraid there is no easy way to achieve that right now. I've noted it and
> future versions of luamplib will probably provide a wider range of commands and
> environments with different catcode regimes, probably like luacode now, to make
> this easier.

Ok, thanks for your answer. Let me know if I can help with 
coding/testing! (rather testing than coding ?)

cheers
Arno

From adityam at umich.edu  Tue Jul  5 15:53:51 2011
From: adityam at umich.edu (Aditya Mahajan)
Date: Tue, 5 Jul 2011 09:53:51 -0400 (EDT)
Subject: [lltx] mplibcode inside a command?
In-Reply-To: <4E12FCDC.5000805@elzevir.fr>
References: <4E120E52.8040703@gmx.de> <4E12FCDC.5000805@elzevir.fr>
Message-ID: <alpine.LNX.2.02.1107050952000.1184@ybpnyubfg.ybpnyqbznva>

On Tue, 5 Jul 2011, Manuel P?gouri?-Gonnard wrote:

> Hi,
>
> Le 04/07/2011 21:02, Arno Trautmann a ?crit :
>> I was wondering what would be the best way to pack metapost-code so I
>> can use a LaTeX-command to typeset it. But I fail due to fancy verb (I
>> guess ?), assume the following code:
>>
>> \documentclass{minimal}
>> \usepackage{luamplib}
>> \def\foo{
>> \begin{mplibcode}

>> beginfig(1)

>> draw (0,0) -- (7,2);


>> endfig
>> 
\end{mplibcode}
>> }
>> \begin{document}
>> \foo
>> \end{document}
>>
> I'm afraid there is no easy way to achieve that right now. I've noted it and
> future versions of luamplib will probably provide a wider range of commands and
> environments with different catcode regimes, probably like luacode now, to make
> this easier.

FWIW, the corresponding ConTeXt code works fine:

\def\foo
{\startMPcode
   draw (0,0) -- (7,2);
\stopMPcode}

\starttext
\foo
\stoptext

I don't know what is the difference between the implementation of 
mllibcode and MPcode environments.

Aditya

From mpg at elzevir.fr  Wed Jul  6 00:06:38 2011
From: mpg at elzevir.fr (=?UTF-8?B?TWFudWVsIFDDqWdvdXJpw6ktR29ubmFyZA==?=)
Date: Wed, 06 Jul 2011 00:06:38 +0200
Subject: [lltx] mplibcode inside a command?
In-Reply-To: <alpine.LNX.2.02.1107050952000.1184@ybpnyubfg.ybpnyqbznva>
References: <4E120E52.8040703@gmx.de> <4E12FCDC.5000805@elzevir.fr>
 <alpine.LNX.2.02.1107050952000.1184@ybpnyubfg.ybpnyqbznva>
Message-ID: <4E138AEE.3030606@elzevir.fr>

Le 05/07/2011 15:53, Aditya Mahajan a ?crit :
> FWIW, the corresponding ConTeXt code works fine:
> 
> \def\foo
> {\startMPcode
>    draw (0,0) -- (7,2);
> \stopMPcode}
> 
> \starttext
> \foo
> \stoptext
> 
> I don't know what is the difference between the implementation of 
> mllibcode and MPcode environments.
> 
On the TeX end, there is almost nothing in common between luamplib and the
ConTeXt code. The shared part is mostly Lua.

It's precisely the way things are parsed by TeX before being passed to Lua (and
the result included back in TeX) that I intend to rework entirely in the next
version of luamplib.

Manuel.


From st_philipp at yahoo.de  Sat Jul  9 18:35:50 2011
From: st_philipp at yahoo.de (Philipp Stephani)
Date: Sat, 9 Jul 2011 18:35:50 +0200
Subject: [lltx] issue with unicode-math, spanish and LuaLaTeX
In-Reply-To: <4E07881C.7060906@web.de>
References: <4E07881C.7060906@web.de>
Message-ID: <7C97AC7C-2BF4-47C9-9170-F080CB34F72B@yahoo.de>


Am 26.06.2011 um 21:27 schrieb Pablo Rodr?guez:

> Hi there,
> 
> I have just tried to compile the following sample:
> 
> \documentclass{article}
> \usepackage{fontspec}
> \setmainfont{Minion Pro}
> \usepackage[spanish]{babel}
> \usepackage{unicode-math}
> \setmathfont{Minion Pro}
> \begin{document}
> $\frac{27,7}{100\,000}$ en varones
> \end{document}
> 
> And it works with XeLaTeX, but not with LuaLaTeX. It seems to have
> problems with spanish from babel, but this is a must for me.
> 
> I'm using TL 2010 updated as right now.
> 
> I wonder whether this is a bug or I am missing something. Could anyone
> be so kind to tell me what is wrong here?

A short update on this: while we can fix this on the lualatex-math/unicode-math end (see the discussion at GitHub), it is only a symptom of a deeper problem, namely that the \mathcode, \mathchardef, \delcode, \radical etc. primitives are deprecated with LuaTeX since they (unlike \char etc.) can't easily be extended to allow Unicode code points. Therefore all packages that make use of any of these primitives need to be fixed. We already have several fixes in the lualatex-math package, but I think the best option would be to fix the package code directly. What do you think about this? Who would be responsible for things like the Babel problem?

From vafa018 at gmail.com  Mon Jul 11 15:29:56 2011
From: vafa018 at gmail.com (Vafa Khalighi)
Date: Mon, 11 Jul 2011 23:29:56 +1000
Subject: [lltx] luaotfload bug
Message-ID: <CA+wm_c_fpBv6W4hxLYqVC99Fbb3BYM6=Me9tO4Ps_Ggtst4f1g@mail.gmail.com>

\setmainfont[Script=Arabic]{IranNastaliq} shows letters disconnected.

Thanks
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://tug.org/pipermail/lualatex-dev/attachments/20110711/78e9a357/attachment.html>

From vafa018 at gmail.com  Mon Jul 11 15:36:09 2011
From: vafa018 at gmail.com (Vafa Khalighi)
Date: Mon, 11 Jul 2011 23:36:09 +1000
Subject: [lltx] luaotfload bug 2
Message-ID: <CA+wm_c-z8zvjRRafupyBHbJ_M1bGAELsmdW3PK2a4dbyHqoUkw@mail.gmail.com>

If in a font ZWNJ is visible, then luaotfload shows it as a little vertical
line which it should not. At least there should be some options to turn it
off.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://tug.org/pipermail/lualatex-dev/attachments/20110711/f8012859/attachment.html>

From news3 at nililand.de  Tue Jul 12 13:41:07 2011
From: news3 at nililand.de (Ulrike Fischer)
Date: Tue, 12 Jul 2011 13:41:07 +0200
Subject: [lltx] issue with unicode-math, spanish and LuaLaTeX
References: <4E07881C.7060906@web.de>
 <7C97AC7C-2BF4-47C9-9170-F080CB34F72B@yahoo.de>
Message-ID: <1egkbbths2lpn$.dlg@nililand.de>

Am Sat, 9 Jul 2011 18:35:50 +0200 schrieb Philipp Stephani:


> A short update on this: while we can fix this on the
> lualatex-math/unicode-math end (see the discussion at GitHub), it
> is only a symptom of a deeper problem, namely that the \mathcode,
> \mathchardef, \delcode, \radical etc. primitives are deprecated
> with LuaTeX since they (unlike \char etc.) can't easily be
> extended to allow Unicode code points. 

If \mathcode is deprecated with luatex then why does
unicode-math/\setmathfont change the mathcode of the dot at all? And
why does it change it to a much higher (and so invalid) value than
it is done with xetex?


-- 
Ulrike Fischer 


From st_philipp at yahoo.de  Tue Jul 12 14:49:28 2011
From: st_philipp at yahoo.de (Philipp Stephani)
Date: Tue, 12 Jul 2011 14:49:28 +0200
Subject: [lltx] issue with unicode-math, spanish and LuaLaTeX
In-Reply-To: <1egkbbths2lpn$.dlg@nililand.de>
References: <4E07881C.7060906@web.de>
 <7C97AC7C-2BF4-47C9-9170-F080CB34F72B@yahoo.de>
 <1egkbbths2lpn$.dlg@nililand.de>
Message-ID: <4E1C42D8.7050505@yahoo.de>

Am 12.07.2011 13:41, schrieb Ulrike Fischer:
> Am Sat, 9 Jul 2011 18:35:50 +0200 schrieb Philipp Stephani:
>
>
>> A short update on this: while we can fix this on the
>> lualatex-math/unicode-math end (see the discussion at GitHub), it
>> is only a symptom of a deeper problem, namely that the \mathcode,
>> \mathchardef, \delcode, \radical etc. primitives are deprecated
>> with LuaTeX since they (unlike \char etc.) can't easily be
>> extended to allow Unicode code points.
>
> If \mathcode is deprecated with luatex then why does
> unicode-math/\setmathfont change the mathcode of the dot at all?

Because it uses a different family than LaTeX does. The math code itself 
still exists (as class, family, code point triple), but the \mathcode 
primitive can't be used any more to access math codes once one of the 
new primitives (\Umathcode etc.) has been used. Therefore I think 
\mathcode should not be used at all.

 > And
> why does it change it to a much higher (and so invalid) value than
> it is done with xetex?

Probably the internal representation of math codes is different in XeTeX 
and LuaTeX.

From news3 at nililand.de  Tue Jul 12 16:22:31 2011
From: news3 at nililand.de (Ulrike Fischer)
Date: Tue, 12 Jul 2011 16:22:31 +0200
Subject: [lltx] issue with unicode-math, spanish and LuaLaTeX
References: <4E07881C.7060906@web.de>
 <7C97AC7C-2BF4-47C9-9170-F080CB34F72B@yahoo.de>
 <1egkbbths2lpn$.dlg@nililand.de> <4E1C42D8.7050505@yahoo.de>
Message-ID: <15sbszcy74qnp$.dlg@nililand.de>

Am Tue, 12 Jul 2011 14:49:28 +0200 schrieb Philipp Stephani:

> Am 12.07.2011 13:41, schrieb Ulrike Fischer:
>> Am Sat, 9 Jul 2011 18:35:50 +0200 schrieb Philipp Stephani:
>>
>>
>>> A short update on this: while we can fix this on the
>>> lualatex-math/unicode-math end (see the discussion at GitHub), it
>>> is only a symptom of a deeper problem, namely that the \mathcode,
>>> \mathchardef, \delcode, \radical etc. primitives are deprecated
>>> with LuaTeX since they (unlike \char etc.) can't easily be
>>> extended to allow Unicode code points.
>>
>> If \mathcode is deprecated with luatex then why does
>> unicode-math/\setmathfont change the mathcode of the dot at all?
> 
> Because it uses a different family than LaTeX does. The math code itself 
> still exists (as class, family, code point triple), but the \mathcode 
> primitive can't be used any more to access math codes once one of the 
> new primitives (\Umathcode etc.) has been used. Therefore I think 
> \mathcode should not be used at all.


Hm. I understand \mathcode and \Umathcode actually look at the same
value and so are not independent. But I have the impression the
problem is less with \mathcode (which after all gives a value) but
with \mathchardef which doesn't accept it if the \mathcode is too
large. 

But looking at the luatex manual I didn't actually understand how to
replace \mathchardef/\mathcode. What is the luatex equivalent of

\mathchardef\test=\mathcode`\x?

With xetex I can at least use 

\XeTeXmathcharnumdef\test=\XeTeXmathcodenum`\x

but none of the various combination of \Umathchardef + \Umathcode
etc seems to work in luatex.
 

-- 
Ulrike Fischer 


From taco at elvenkind.com  Tue Jul 12 16:33:43 2011
From: taco at elvenkind.com (Taco Hoekwater)
Date: Tue, 12 Jul 2011 16:33:43 +0200
Subject: [lltx] issue with unicode-math, spanish and LuaLaTeX
In-Reply-To: <15sbszcy74qnp$.dlg@nililand.de>
References: <4E07881C.7060906@web.de>
 <7C97AC7C-2BF4-47C9-9170-F080CB34F72B@yahoo.de>
 <1egkbbths2lpn$.dlg@nililand.de> <4E1C42D8.7050505@yahoo.de>
 <15sbszcy74qnp$.dlg@nililand.de>
Message-ID: <4E1C5B47.4080408@elvenkind.com>

On 07/12/2011 04:22 PM, Ulrike Fischer wrote:
>
> With xetex I can at least use
>
> \XeTeXmathcharnumdef\test=\XeTeXmathcodenum`\x
>
> but none of the various combination of \Umathchardef + \Umathcode
> etc seems to work in luatex.

NYI, see:

   http://tracker.luatex.org/view.php?id=620

Best wishes,
Taco

From st_philipp at yahoo.de  Tue Jul 12 16:38:23 2011
From: st_philipp at yahoo.de (Philipp Stephani)
Date: Tue, 12 Jul 2011 16:38:23 +0200
Subject: [lltx] issue with unicode-math, spanish and LuaLaTeX
In-Reply-To: <15sbszcy74qnp$.dlg@nililand.de>
References: <4E07881C.7060906@web.de>
 <7C97AC7C-2BF4-47C9-9170-F080CB34F72B@yahoo.de>
 <1egkbbths2lpn$.dlg@nililand.de> <4E1C42D8.7050505@yahoo.de>
 <15sbszcy74qnp$.dlg@nililand.de>
Message-ID: <4E1C5C5F.4010306@yahoo.de>

Am 12.07.2011 16:22, schrieb Ulrike Fischer:
> Hm. I understand \mathcode and \Umathcode actually look at the same
> value and so are not independent. But I have the impression the
> problem is less with \mathcode (which after all gives a value) but
> with \mathchardef which doesn't accept it if the \mathcode is too
> large.

This is not an issue of a \mathcode being too large, but about 
overlapping representations. Say you have a character with class 0, 
family 0 and code point U+1111; its \Umathcodenum is 0x1111. But the 
\mathcode of a character with class 1, family 1, and code point U+11 is 
0x1111 as well---how should \mathchardef distinguish between the two?

>
> But looking at the luatex manual I didn't actually understand how to
> replace \mathchardef/\mathcode. What is the luatex equivalent of
>
> \mathchardef\test=\mathcode`\x?

I think there is none because \Umathcharnumdef is missing (see 
http://tracker.luatex.org/view.php?id=620). In the lualatex-math package 
I do

\Umathchardef \test
\directlua {
   print_class_fam_slot( \number \numexpr `\x \relax )
}

function print_class_fam_slot(char)
   local code = tex.getmathcode(char)
   local class, family, slot = unpack(code)
   local result = string.format("%i %i %i ", class, family, slot)
   tex.sprint(cctb.string, result)
end

From taco at elvenkind.com  Tue Jul 12 16:39:24 2011
From: taco at elvenkind.com (Taco Hoekwater)
Date: Tue, 12 Jul 2011 16:39:24 +0200
Subject: [lltx] issue with unicode-math, spanish and LuaLaTeX
In-Reply-To: <4E1C5B47.4080408@elvenkind.com>
References: <4E07881C.7060906@web.de>
 <7C97AC7C-2BF4-47C9-9170-F080CB34F72B@yahoo.de>
 <1egkbbths2lpn$.dlg@nililand.de> <4E1C42D8.7050505@yahoo.de>
 <15sbszcy74qnp$.dlg@nililand.de> <4E1C5B47.4080408@elvenkind.com>
Message-ID: <4E1C5C9C.9040807@elvenkind.com>

On 07/12/2011 04:33 PM, Taco Hoekwater wrote:
> On 07/12/2011 04:22 PM, Ulrike Fischer wrote:
>>
>> With xetex I can at least use
>>
>> \XeTeXmathcharnumdef\test=\XeTeXmathcodenum`\x
>>
>> but none of the various combination of \Umathchardef + \Umathcode
>> etc seems to work in luatex.
>
> NYI, see:

Actually, that does not mean I think it is a good idea. The
conceptual problem is that \XeTeXmathcodenum (and therefore
also \Umathcodenum) can return a signed int to represent an
unsigned value, with is pretty horrible.

Why is it so important to be able to do a mathcharnumdef
(instead of a macro definition or straight \Umathchardef?)

From news3 at nililand.de  Tue Jul 12 16:50:35 2011
From: news3 at nililand.de (Ulrike Fischer)
Date: Tue, 12 Jul 2011 16:50:35 +0200
Subject: [lltx] issue with unicode-math, spanish and LuaLaTeX
References: <4E07881C.7060906@web.de>
 <7C97AC7C-2BF4-47C9-9170-F080CB34F72B@yahoo.de>
 <1egkbbths2lpn$.dlg@nililand.de> <4E1C42D8.7050505@yahoo.de>
 <15sbszcy74qnp$.dlg@nililand.de> <4E1C5B47.4080408@elvenkind.com>
 <4E1C5C9C.9040807@elvenkind.com>
Message-ID: <9stwae6hgptv.dlg@nililand.de>

Am Tue, 12 Jul 2011 16:39:24 +0200 schrieb Taco Hoekwater:


>>> With xetex I can at least use
>>>
>>> \XeTeXmathcharnumdef\test=\XeTeXmathcodenum`\x
>>>
>>> but none of the various combination of \Umathchardef + \Umathcode
>>> etc seems to work in luatex.

> Actually, that does not mean I think it is a good idea. The
> conceptual problem is that \XeTeXmathcodenum (and therefore
> also \Umathcodenum) can return a signed int to represent an
> unsigned value, with is pretty horrible.
> 
> Why is it so important to be able to do a mathcharnumdef
> (instead of a macro definition or straight \Umathchardef?)

Actually -- as you see above -- I did try a straight \Umathchardef.
But I didn't understand how to use it. I can use it by giving the
values directly: \Umathchardef\test="0"1"0056. 
But what should I do if I want a
\Umathchardef\test= "current mathcode values of V"?


-- 
Ulrike Fischer 


From st_philipp at yahoo.de  Tue Jul 12 16:57:37 2011
From: st_philipp at yahoo.de (Philipp Stephani)
Date: Tue, 12 Jul 2011 16:57:37 +0200
Subject: [lltx] issue with unicode-math, spanish and LuaLaTeX
In-Reply-To: <4E1C5C9C.9040807@elvenkind.com>
References: <4E07881C.7060906@web.de>
 <7C97AC7C-2BF4-47C9-9170-F080CB34F72B@yahoo.de>
 <1egkbbths2lpn$.dlg@nililand.de> <4E1C42D8.7050505@yahoo.de>
 <15sbszcy74qnp$.dlg@nililand.de> <4E1C5B47.4080408@elvenkind.com>
 <4E1C5C9C.9040807@elvenkind.com>
Message-ID: <4E1C60E1.2020805@yahoo.de>

Am 12.07.2011 16:39, schrieb Taco Hoekwater:
> On 07/12/2011 04:33 PM, Taco Hoekwater wrote:
>> On 07/12/2011 04:22 PM, Ulrike Fischer wrote:
>>>
>>> With xetex I can at least use
>>>
>>> \XeTeXmathcharnumdef\test=\XeTeXmathcodenum`\x
>>>
>>> but none of the various combination of \Umathchardef + \Umathcode
>>> etc seems to work in luatex.
>>
>> NYI, see:
>
> Actually, that does not mean I think it is a good idea. The
> conceptual problem is that \XeTeXmathcodenum (and therefore
> also \Umathcodenum) can return a signed int to represent an
> unsigned value, with is pretty horrible.

Yes, and the bit-packed structure of the mathcodenum isn't quite elegant 
either. The Lua table representation is fine, but unfortunately there is 
no way to represent that in TeX.

>
> Why is it so important to be able to do a mathcharnumdef
> (instead of a macro definition or straight \Umathchardef?)

Because of the pattern that Ulrike mentioned:

\Umathcodenum `a = \Umathcodenum `b
\Umathcharnumdef \foo = \Umathcodenum `b

The second pattern is used to save a math code and restore it later. You 
could save the math code in an integer register or macro, but then you 
couldn't use that as a mathematical character shorthand.
I don't know what reasons Knuth had to introduce special syntax for 
\chardefs/\mathchardefs, but I think most TeX users expect this syntax 
to be present.

From news3 at nililand.de  Wed Jul 13 11:15:47 2011
From: news3 at nililand.de (Ulrike Fischer)
Date: Wed, 13 Jul 2011 11:15:47 +0200
Subject: [lltx] issue with unicode-math, spanish and LuaLaTeX
References: <4E07881C.7060906@web.de>
 <7C97AC7C-2BF4-47C9-9170-F080CB34F72B@yahoo.de>
 <1egkbbths2lpn$.dlg@nililand.de> <4E1C42D8.7050505@yahoo.de>
 <15sbszcy74qnp$.dlg@nililand.de> <4E1C5C5F.4010306@yahoo.de>
Message-ID: <1cedpqjf0l6gg$.dlg@nililand.de>

Am Tue, 12 Jul 2011 16:38:23 +0200 schrieb Philipp Stephani:

> Am 12.07.2011 16:22, schrieb Ulrike Fischer:
>> Hm. I understand \mathcode and \Umathcode actually look at the same
>> value and so are not independent. But I have the impression the
>> problem is less with \mathcode (which after all gives a value) but
>> with \mathchardef which doesn't accept it if the \mathcode is too
>> large.
> 
> This is not an issue of a \mathcode being too large, but about 
> overlapping representations. Say you have a character with class 0, 
> family 0 and code point U+1111; its \Umathcodenum is 0x1111. But the 
> \mathcode of a character with class 1, family 1, and code point U+11 is 
> 0x1111 as well---how should \mathchardef distinguish between the two?

But this ambiguity is with *small* numbers -- in the range 0-7FFF
(or 0-8000). And as far as I can see for these values \mathchardef
simply assumes that they mean values in "old" mathcode syntax (which
is imho the right decision). So why shouldn't \mathchardef be
extended so that in the range above is works like (the non-existing)
\Umathcharnumdef?  

(I agree that the syntax ambiguity of \mathcode values in the range
0-7FFF is a problem and that \mathcode/\mathchardef should better be
avoided. The suggestion is only for compability reasons)


Btw: while looking at the \Umathcodenum I saw that some arguments
are converted to curious high numbers. Mostly the letters in the
ascii range:

\Umathchardef\test="0"0"24
\showthe\Umathcodenum\test

> 36

\Umathchardef\test="0"0"41
\showthe\Umathcodenum\test

> 14799924




-- 
Ulrike Fischer 


From st_philipp at yahoo.de  Wed Jul 13 11:53:24 2011
From: st_philipp at yahoo.de (Philipp Stephani)
Date: Wed, 13 Jul 2011 11:53:24 +0200
Subject: [lltx] issue with unicode-math, spanish and LuaLaTeX
In-Reply-To: <1cedpqjf0l6gg$.dlg@nililand.de>
References: <4E07881C.7060906@web.de>
 <7C97AC7C-2BF4-47C9-9170-F080CB34F72B@yahoo.de>
 <1egkbbths2lpn$.dlg@nililand.de> <4E1C42D8.7050505@yahoo.de>
 <15sbszcy74qnp$.dlg@nililand.de> <4E1C5C5F.4010306@yahoo.de>
 <1cedpqjf0l6gg$.dlg@nililand.de>
Message-ID: <11B5E3F9-6510-4E9A-8489-6DD6F4F24FF9@yahoo.de>


Am 13.07.2011 um 11:15 schrieb Ulrike Fischer:

> Btw: while looking at the \Umathcodenum I saw that some arguments
> are converted to curious high numbers. Mostly the letters in the
> ascii range:
> 
> \Umathchardef\test="0"0"24
> \showthe\Umathcodenum\test
> 
>> 36
> 
> \Umathchardef\test="0"0"41
> \showthe\Umathcodenum\test
> 
>> 14799924

The correct syntax is \showthe\test (mathematical character shorthands are numbers). TeX does some weird things with your syntax. Is this documented somewhere?

$ tex
This is TeX, Version 3.1415926 (TeX Live 2011)
**\mathchardef\a="41

*\showthe\mathcode\a
> 28993.
<*> \showthe\mathcode\a
                       
? 

*\showthe\a
> 65.
<*> \showthe\a
              
? 

What is the meaning of \mathcode\controlseq?

From st_philipp at yahoo.de  Wed Jul 13 12:23:35 2011
From: st_philipp at yahoo.de (Philipp Stephani)
Date: Wed, 13 Jul 2011 12:23:35 +0200
Subject: [lltx] [luatex]  issue with unicode-math, spanish and LuaLaTeX
In-Reply-To: <11B5E3F9-6510-4E9A-8489-6DD6F4F24FF9@yahoo.de>
References: <4E07881C.7060906@web.de>
 <7C97AC7C-2BF4-47C9-9170-F080CB34F72B@yahoo.de>
 <1egkbbths2lpn$.dlg@nililand.de> <4E1C42D8.7050505@yahoo.de>
 <15sbszcy74qnp$.dlg@nililand.de> <4E1C5C5F.4010306@yahoo.de>
 <1cedpqjf0l6gg$.dlg@nililand.de>
 <11B5E3F9-6510-4E9A-8489-6DD6F4F24FF9@yahoo.de>
Message-ID: <6A32D84C-2388-42CC-A9BA-69D5371A1E85@yahoo.de>


Am 13.07.2011 um 11:53 schrieb Philipp Stephani:

> 
> Am 13.07.2011 um 11:15 schrieb Ulrike Fischer:
> 
>> Btw: while looking at the \Umathcodenum I saw that some arguments
>> are converted to curious high numbers. Mostly the letters in the
>> ascii range:
>> 
>> \Umathchardef\test="0"0"24
>> \showthe\Umathcodenum\test
>> 
>>> 36
>> 
>> \Umathchardef\test="0"0"41
>> \showthe\Umathcodenum\test
>> 
>>> 14799924
> 
> The correct syntax is \showthe\test (mathematical character shorthands are numbers). TeX does some weird things with your syntax. Is this documented somewhere?
> 
> $ tex
> This is TeX, Version 3.1415926 (TeX Live 2011)
> **\mathchardef\a="41
> 
> *\showthe\mathcode\a
>> 28993.
> <*> \showthe\mathcode\a
> 
> ? 
> 
> *\showthe\a
>> 65.
> <*> \showthe\a
> 
> ? 
> 
> What is the meaning of \mathcode\controlseq?

Ah, I'm stupid: of course, \test is a number, so \mathcode\test is valid (it is the math code of A in this case). The high numbers are those described in the LuaTeX manual: the lower 21 bits for the code point, the higher 11 bits for class and family.

From wspr81 at gmail.com  Thu Jul 14 09:39:41 2011
From: wspr81 at gmail.com (Will Robertson)
Date: Thu, 14 Jul 2011 17:39:41 +1000
Subject: [lltx] issue with unicode-math, spanish and LuaLaTeX
In-Reply-To: <4E1C5C9C.9040807@elvenkind.com>
References: <4E07881C.7060906@web.de>
 <7C97AC7C-2BF4-47C9-9170-F080CB34F72B@yahoo.de>
 <1egkbbths2lpn$.dlg@nililand.de> <4E1C42D8.7050505@yahoo.de>
 <15sbszcy74qnp$.dlg@nililand.de> <4E1C5B47.4080408@elvenkind.com>
 <4E1C5C9C.9040807@elvenkind.com>
Message-ID: <CBD9D5EB-5BE0-40B9-9B9C-EEA534D3B21D@gmail.com>

(Sent from my phone.)

On 13/07/2011, at 0:39, Taco Hoekwater <taco at elvenkind.com> wrote:

> Actually, that does not mean I think it is a good idea. The
> conceptual problem is that \XeTeXmathcodenum (and therefore
> also \Umathcodenum) can return a signed int to represent an
> unsigned value, with is pretty horrible.

An alternate from the TeX point of view could be to add commands like

\Umathclass
\Umathfam
\Umathslot

to extract the relevant bits of information to pass to a subsequent  
\Umathchardef, say.

Not sure if that's something you've considered before, though.

W 

From st_philipp at yahoo.de  Thu Jul 14 12:04:14 2011
From: st_philipp at yahoo.de (Philipp Stephani)
Date: Thu, 14 Jul 2011 12:04:14 +0200
Subject: [lltx] issue with unicode-math, spanish and LuaLaTeX
In-Reply-To: <CBD9D5EB-5BE0-40B9-9B9C-EEA534D3B21D@gmail.com>
References: <4E07881C.7060906@web.de>
 <7C97AC7C-2BF4-47C9-9170-F080CB34F72B@yahoo.de>
 <1egkbbths2lpn$.dlg@nililand.de> <4E1C42D8.7050505@yahoo.de>
 <15sbszcy74qnp$.dlg@nililand.de> <4E1C5B47.4080408@elvenkind.com>
 <4E1C5C9C.9040807@elvenkind.com>
 <CBD9D5EB-5BE0-40B9-9B9C-EEA534D3B21D@gmail.com>
Message-ID: <5880E22F-402C-41F9-84CA-0CB8B5E69B97@yahoo.de>


Am 14.07.2011 um 09:39 schrieb Will Robertson:

> (Sent from my phone.)
> 
> On 13/07/2011, at 0:39, Taco Hoekwater <taco at elvenkind.com> wrote:
> 
>> Actually, that does not mean I think it is a good idea. The
>> conceptual problem is that \XeTeXmathcodenum (and therefore
>> also \Umathcodenum) can return a signed int to represent an
>> unsigned value, with is pretty horrible.
> 
> An alternate from the TeX point of view could be to add commands like
> 
> \Umathclass
> \Umathfam
> \Umathslot
> 
> to extract the relevant bits of information to pass to a subsequent \Umathchardef, say.

and/or \Umathcode could be turned into a convert command that prints the class/family/code point combination in the format that \Umathchardef expects.

From wspr81 at gmail.com  Thu Jul 21 09:16:34 2011
From: wspr81 at gmail.com (Will Robertson)
Date: Thu, 21 Jul 2011 16:46:34 +0930
Subject: [lltx] luaotfload bug
In-Reply-To: <CA+wm_c_fpBv6W4hxLYqVC99Fbb3BYM6=Me9tO4Ps_Ggtst4f1g@mail.gmail.com>
References: <CA+wm_c_fpBv6W4hxLYqVC99Fbb3BYM6=Me9tO4Ps_Ggtst4f1g@mail.gmail.com>
Message-ID: <F2C12224-8509-4D51-A51E-3439EA081CB5@gmail.com>

On 11/07/2011, at 10:59 PM, Vafa Khalighi wrote:

> \setmainfont[Script=Arabic]{IranNastaliq} shows letters disconnected.

Does it work with plain font loading commands?

-- Will


From Arno.Trautmann at gmx.de  Thu Jul 21 14:11:17 2011
From: Arno.Trautmann at gmx.de (Arno Trautmann)
Date: Thu, 21 Jul 2011 14:11:17 +0200
Subject: [lltx] luatexbase.is_in_callback
Message-ID: <4E281765.3060804@gmx.de>

Hi all,

I'd like to use the post_linebreak_filter to manipulate the node list, 
but only if a macro appears in that given paragraph. The straightforward 
way would be to let the macro register the function; however, using 
luatexbase.add_to_callback then gives an error if the macro is called 
twice. (which is allowed in the code)
Now, I could change the macro not to register anymore once called and 
set it back at the beginning of the next paragraph, but a much nicer way 
would be to have a function that checks if a function is already 
registered and does not throw an error.
In the end, what I'm asking for are two functions like
luatexbase.is_in_callback(name,func),
returning true or false, actually executing this code from the current 
package:

if priority_in_callback(name, description) then
err("function ?%s? already registered\nin callback ?%s?",
description, name)
return
end

and

luatexbase.provide_callback(name,func,description,priority),

also returning true or false and registering the function if it is not 
already.

Is it possible to add this to luatexbase? It would be a very nice 
feature, but I don't know if many people would really need it ?

Cheers
Arno

From patrick at gundla.ch  Thu Jul 21 14:16:32 2011
From: patrick at gundla.ch (Patrick Gundlach)
Date: Thu, 21 Jul 2011 14:16:32 +0200
Subject: [lltx] luatexbase.is_in_callback
In-Reply-To: <4E281765.3060804@gmx.de>
References: <4E281765.3060804@gmx.de>
Message-ID: <96938C90-305E-4CCA-9634-6B8252D72934@gundla.ch>


Am 21.07.2011 um 14:11 schrieb Arno Trautmann:

> I'd like to use the post_linebreak_filter to manipulate the node list, but only if a macro appears in that given paragraph.


Can you use attributes there? Then you can test whether certain attributes are in a paragraph and apply your code.

Patrick



From Arno.Trautmann at gmx.de  Thu Jul 21 14:34:35 2011
From: Arno.Trautmann at gmx.de (Arno Trautmann)
Date: Thu, 21 Jul 2011 14:34:35 +0200
Subject: [lltx] luatexbase.is_in_callback
In-Reply-To: <96938C90-305E-4CCA-9634-6B8252D72934@gundla.ch>
References: <4E281765.3060804@gmx.de>
 <96938C90-305E-4CCA-9634-6B8252D72934@gundla.ch>
Message-ID: <4E281CDB.70108@gmx.de>

Patrick Gundlach wrote:
> Am 21.07.2011 um 14:11 schrieb Arno Trautmann:
>> I'd like to use the post_linebreak_filter to manipulate the node list, but only if a macro appears in that given paragraph.
>
> Can you use attributes there? Then you can test whether certain attributes are in a paragraph and apply your code.

Yes, and I do in fact. But I'm not sure how this solves my problem here? 
Maybe I'll be more precise on what I want to do:
I've written a function randomcolor that inserts a color whatsit before 
(push) and after (pull) every glyph in a paragraph, using the 
post_linebreak_filter. Now I want to provide a command 
\textrandomcolor{} that does the same, but only with the text in the 
argument. For this, I use the same function as above, but set an 
attribute at the beginning of the argument and unset it at the end, and 
in the function, I test for this attribute. Fine.
However, in a paragraph that does /not/ contain any \textrandomcolor, I 
don't want the function to loop through all nodes. Let's say, for 
performance reasons ?

But maybe I just don't understand your answer, sorry ?

cheers
Arno

From patrick at gundla.ch  Thu Jul 21 14:49:17 2011
From: patrick at gundla.ch (Patrick Gundlach)
Date: Thu, 21 Jul 2011 14:49:17 +0200
Subject: [lltx] luatexbase.is_in_callback
In-Reply-To: <4E281CDB.70108@gmx.de>
References: <4E281765.3060804@gmx.de>
 <96938C90-305E-4CCA-9634-6B8252D72934@gundla.ch> <4E281CDB.70108@gmx.de>
Message-ID: <5EF76E22-4F10-41A0-9C23-0C703F0EC700@gundla.ch>



Am 21.07.2011 um 14:34 schrieb Arno Trautmann:

> Patrick Gundlach wrote:
>> Am 21.07.2011 um 14:11 schrieb Arno Trautmann:
>>> I'd like to use the post_linebreak_filter to manipulate the node list, but only if a macro appears in that given paragraph.
>> 
>> Can you use attributes there? Then you can test whether certain attributes are in a paragraph and apply your code.
> 
> Yes, and I do in fact. But I'm not sure how this solves my problem here? Maybe I'll be more precise on what I want to do:
> I've written a function randomcolor that inserts a color whatsit before (push) and after (pull) every glyph in a paragraph, using the post_linebreak_filter. Now I want to provide a command \textrandomcolor{} that does the same, but only with the text in the argument. For this, I use the same function as above, but set an attribute at the beginning of the argument and unset it at the end, and in the function, I test for this attribute. Fine.

That's what I wanted to write.

> However, in a paragraph that does /not/ contain any \textrandomcolor, I don't want the function to loop through all nodes. Let's say, for performance reasons ?

Does it really differ (performance wise)?


Patrick



From Arno.Trautmann at gmx.de  Thu Jul 21 14:56:23 2011
From: Arno.Trautmann at gmx.de (Arno Trautmann)
Date: Thu, 21 Jul 2011 14:56:23 +0200
Subject: [lltx] luatexbase.is_in_callback
In-Reply-To: <5EF76E22-4F10-41A0-9C23-0C703F0EC700@gundla.ch>
References: <4E281765.3060804@gmx.de>
 <96938C90-305E-4CCA-9634-6B8252D72934@gundla.ch> <4E281CDB.70108@gmx.de>
 <5EF76E22-4F10-41A0-9C23-0C703F0EC700@gundla.ch>
Message-ID: <4E2821F7.5000902@gmx.de>

Patrick Gundlach wrote:
>
> Am 21.07.2011 um 14:34 schrieb Arno Trautmann:
>> Patrick Gundlach wrote:
>>> Am 21.07.2011 um 14:11 schrieb Arno Trautmann:
>>>> I'd like to use the post_linebreak_filter to manipulate the node list, but only if a macro appears in that given paragraph.
>>>
>>> Can you use attributes there? Then you can test whether certain attributes are in a paragraph and apply your code.
>>
>> Yes, and I do in fact. But I'm not sure how this solves my problem here? Maybe I'll be more precise on what I want to do:
>> I've written a function randomcolor that inserts a color whatsit before (push) and after (pull) every glyph in a paragraph, using the post_linebreak_filter. Now I want to provide a command \textrandomcolor{} that does the same, but only with the text in the argument. For this, I use the same function as above, but set an attribute at the beginning of the argument and unset it at the end, and in the function, I test for this attribute. Fine.
>
> That's what I wanted to write.
>
>> However, in a paragraph that does /not/ contain any \textrandomcolor, I don't want the function to loop through all nodes. Let's say, for performance reasons ?
>
> Does it really differ (performance wise)?

After a short test on 300 pages of blindtext, it's about 0.4s, and 
actually below uncertainty ?
But I might want to construct some more complex functions, and then it 
may differ measureably. Besides, I just want to have nice code ? that's 
what LuaTeX is about, no?
(ok, Patrick is maybe the wrong person for ?nice code? ;) )

cheers
Arno

From patrick at gundla.ch  Thu Jul 21 15:00:37 2011
From: patrick at gundla.ch (Patrick Gundlach)
Date: Thu, 21 Jul 2011 15:00:37 +0200
Subject: [lltx] luatexbase.is_in_callback
In-Reply-To: <4E2821F7.5000902@gmx.de>
References: <4E281765.3060804@gmx.de>
 <96938C90-305E-4CCA-9634-6B8252D72934@gundla.ch> <4E281CDB.70108@gmx.de>
 <5EF76E22-4F10-41A0-9C23-0C703F0EC700@gundla.ch> <4E2821F7.5000902@gmx.de>
Message-ID: <8C8473D5-15AC-41B2-B9E7-2989C3555735@gundla.ch>


Am 21.07.2011 um 14:56 schrieb Arno Trautmann:


>> Does it really differ (performance wise)?
> 
> After a short test on 300 pages of blindtext, it's about 0.4s, and actually below uncertainty ?
> But I might want to construct some more complex functions, and then it may differ measureably. Besides, I just want to have nice code ? that's what LuaTeX is about, no?

I strongly believe that the cleanest code without too many hacks is also the nicest code, even it slows down the process. So I'd call this solution close to 'perfect'.

Patrick



From Arno.Trautmann at gmx.de  Thu Jul 21 15:13:19 2011
From: Arno.Trautmann at gmx.de (Arno Trautmann)
Date: Thu, 21 Jul 2011 15:13:19 +0200
Subject: [lltx] luatexbase.is_in_callback
In-Reply-To: <8C8473D5-15AC-41B2-B9E7-2989C3555735@gundla.ch>
References: <4E281765.3060804@gmx.de>
 <96938C90-305E-4CCA-9634-6B8252D72934@gundla.ch> <4E281CDB.70108@gmx.de>
 <5EF76E22-4F10-41A0-9C23-0C703F0EC700@gundla.ch> <4E2821F7.5000902@gmx.de>
 <8C8473D5-15AC-41B2-B9E7-2989C3555735@gundla.ch>
Message-ID: <4E2825EF.9040002@gmx.de>

Patrick Gundlach wrote:
> Am 21.07.2011 um 14:56 schrieb Arno Trautmann:
>
>>> Does it really differ (performance wise)?
>>
>> After a short test on 300 pages of blindtext, it's about 0.4s, and actually below uncertainty ?
>> But I might want to construct some more complex functions, and then it may differ measureably. Besides, I just want to have nice code ? that's what LuaTeX is about, no?
>
> I strongly believe that the cleanest code without too many hacks is also the nicest code, even it slows down the process. So I'd call this solution close to 'perfect'.

If you say so, I believe you.

Thanks for your answers,
Arno

From Arno.Trautmann at gmx.de  Thu Jul 21 15:24:14 2011
From: Arno.Trautmann at gmx.de (Arno Trautmann)
Date: Thu, 21 Jul 2011 15:24:14 +0200
Subject: [lltx] why user-defined callbacks?
Message-ID: <4E28287E.7040501@gmx.de>

Hi, me again,

I forgot to ask that question in the last mail: What is the advantage of 
a user-defined callback (still talking about luatexbase-mcb) over a 
user-defined function? Maybe I still don't get the idea of a callback, 
but in that case I don't see the difference. Is there any and if so, which?

cheers
Arno

From karl at freefriends.org  Sun Jul 24 19:37:20 2011
From: karl at freefriends.org (Karl Berry)
Date: Sun, 24 Jul 2011 17:37:20 GMT
Subject: [lltx] luaotfload spurious %s
Message-ID: <201107241737.p6OHbK9t020285@freefriends.org>

I just ran lualatex for the first time in my new TL'11 installation, and
saw a spurious (as far as I can imagine) %s in the messages:

luaotfload | Font names database not found, generating new one.
             This can take several minutes; please be patient.
luaotfload | Updating the font names database:
luaotfload | Scanning TEXMF fonts...
luaotfload | Scanning OS fonts...
luaotfload | Font names database saved: %s 
: /u/karl/.texlive2011/texmf-var/luatex-cache/generic/names/otfl-names.lua
luaotfload | Updating the font names database:
luaotfload | Scanning TEXMF fonts...
luaotfload | Scanning OS fonts...
luaotfload | Font names database saved: %s 
: /u/karl/.texlive2011/texmf-var/luatex-cache/generic/names/otfl-names.lua

karl

From p.stephani2 at googlemail.com  Sun Jul 24 20:45:32 2011
From: p.stephani2 at googlemail.com (Philipp Stephani)
Date: Sun, 24 Jul 2011 20:45:32 +0200
Subject: [lltx] luaotfload spurious %s
In-Reply-To: <201107241737.p6OHbK9t020285@freefriends.org>
References: <201107241737.p6OHbK9t020285@freefriends.org>
Message-ID: <CAArVCkRuyr8nd5jOmikWo0WxzxectThWpPjk6WMteb5PppJMdQ@mail.gmail.com>

2011/7/24 Karl Berry <karl at freefriends.org>:
> I just ran lualatex for the first time in my new TL'11 installation, and
> saw a spurious (as far as I can imagine) %s in the messages:
>
> luaotfload | Font names database not found, generating new one.
> ? ? ? ? ? ? This can take several minutes; please be patient.
> luaotfload | Updating the font names database:
> luaotfload | Scanning TEXMF fonts...
> luaotfload | Scanning OS fonts...
> luaotfload | Font names database saved: %s
> : /u/karl/.texlive2011/texmf-var/luatex-cache/generic/names/otfl-names.lua
> luaotfload | Updating the font names database:
> luaotfload | Scanning TEXMF fonts...
> luaotfload | Scanning OS fonts...
> luaotfload | Font names database saved: %s
> : /u/karl/.texlive2011/texmf-var/luatex-cache/generic/names/otfl-names.lua

luaotfload uses two different logging systems, which were
incompatible. This should be fixed by the latest GitHub commit.


From news3 at nililand.de  Mon Jul 25 15:28:04 2011
From: news3 at nililand.de (Ulrike Fischer)
Date: Mon, 25 Jul 2011 15:28:04 +0200
Subject: [lltx] luaotfload and OSFONTDIR
Message-ID: <11g80aq4ne80x.dlg@nililand.de>


The code in luaotfload which generates the font cache
(otfl-font-nms.lua) contains the comment

--[[
  For the OS fonts, there are several options:
   - if OSFONTDIR is set (which is the case under windows by default
but not on the other OSs), it scans it at the same time as the texmf
tree, in the scan_texmf_fonts.
   - if not:
    - under Windows and Mac OSX, we take a look at some hardcoded
directories
    - under Unix, we read /etc/fonts/fonts.conf and read the
directories in it

  This means that if you have fonts in fancy directories, you need
to set them in OSFONTDIR.
]]

Does setting somehow OSFONTDIR actually work somewhere? 

I couldn't find anything in the code that looked as if luaotfload
would actually use it (apart from log-lines). And various tests
didn't do something either. (I'm not quite sure what in this context
"OSFONTDIR" is -- a variable in texmf.cnf or an environment
variable).

-- 
Ulrike Fischer 


From p.stephani2 at googlemail.com  Mon Jul 25 16:25:27 2011
From: p.stephani2 at googlemail.com (Philipp Stephani)
Date: Mon, 25 Jul 2011 16:25:27 +0200
Subject: [lltx] luaotfload and OSFONTDIR
In-Reply-To: <11g80aq4ne80x.dlg@nililand.de>
References: <11g80aq4ne80x.dlg@nililand.de>
Message-ID: <CAArVCkRNSbyi0r9q9n6JmTTi4BNhc1_A4Pf9ZJww76X+7TqxNg@mail.gmail.com>

2011/7/25 Ulrike Fischer <news3 at nililand.de>:
>
> The code in luaotfload which generates the font cache
> (otfl-font-nms.lua) contains the comment
>
> --[[
> ?For the OS fonts, there are several options:
> ? - if OSFONTDIR is set (which is the case under windows by default
> but not on the other OSs), it scans it at the same time as the texmf
> tree, in the scan_texmf_fonts.
> ? - if not:
> ? ?- under Windows and Mac OSX, we take a look at some hardcoded
> directories
> ? ?- under Unix, we read /etc/fonts/fonts.conf and read the
> directories in it
>
> ?This means that if you have fonts in fancy directories, you need
> to set them in OSFONTDIR.
> ]]
>
> Does setting somehow OSFONTDIR actually work somewhere?

Yes, it works on my system.

>
> I couldn't find anything in the code that looked as if luaotfload
> would actually use it (apart from log-lines).

The magic is in the distribution's texmf.cnf (e.g.,
/usr/local/texlive/2011/texmf/web2c/texmf.cnf):

% TrueType outline fonts.
TTFONTS = .;$TEXMF/fonts/{truetype,opentype}//;$OSFONTDIR//

% OpenType outline fonts.
OPENTYPEFONTS = .;$TEXMF/fonts/{opentype,truetype}//;$OSFONTDIR//

And these variables are used by luaotfload:

    local fontdirs = expandpath("$OPENTYPEFONTS"):gsub("^\.", "")
    fontdirs = fontdirs .. expandpath("$TTFONTS"):gsub("^\.", "")

> And various tests
> didn't do something either. (I'm not quite sure what in this context
> "OSFONTDIR" is -- a variable in texmf.cnf or an environment
> variable).

Both. If it is set in the environment, it overrides a texmf.cnf
variable. For example, I have in /usr/local/texlive/2011/texmf.cnf:

OSFONTDIR = ~/Library/Fonts;/Applications/Adobe
Reader.app/Contents/Resources/Resource/Font;/Library/Fonts;/System/Library/Fonts


From news3 at nililand.de  Mon Jul 25 18:35:24 2011
From: news3 at nililand.de (Ulrike Fischer)
Date: Mon, 25 Jul 2011 18:35:24 +0200
Subject: [lltx] luaotfload and OSFONTDIR
References: <11g80aq4ne80x.dlg@nililand.de>
 <CAArVCkRNSbyi0r9q9n6JmTTi4BNhc1_A4Pf9ZJww76X+7TqxNg@mail.gmail.com>
Message-ID: <1kfonq84vzoex.dlg@nililand.de>

Am Mon, 25 Jul 2011 16:25:27 +0200 schrieb Philipp Stephani:

> 2011/7/25 Ulrike Fischer <news3 at nililand.de>:
>>
>> The code in luaotfload which generates the font cache
>> (otfl-font-nms.lua) contains the comment
[...]

>> Does setting somehow OSFONTDIR actually work somewhere?

>> I couldn't find anything in the code that looked as if luaotfload
>> would actually use it (apart from log-lines).
 
> The magic is in the distribution's texmf.cnf (e.g.,
> /usr/local/texlive/2011/texmf/web2c/texmf.cnf):
> 
> % TrueType outline fonts.
> TTFONTS = .;$TEXMF/fonts/{truetype,opentype}//;$OSFONTDIR//
> 
> % OpenType outline fonts.
> OPENTYPEFONTS = .;$TEXMF/fonts/{opentype,truetype}//;$OSFONTDIR//
> 
> And these variables are used by luaotfload:
> 
>     local fontdirs = expandpath("$OPENTYPEFONTS"):gsub("^\.", "")
>     fontdirs = fontdirs .. expandpath("$TTFONTS"):gsub("^\.", "")
> 


Thanks, this make sense. 

>> And various tests
>> didn't do something either. (I'm not quite sure what in this context
>> "OSFONTDIR" is -- a variable in texmf.cnf or an environment
>> variable).


And I now know why it doesn't work for me: I have miktex and beside
this a small "TeXLive-like" luatex installation based on w32tex.org
binaries which naturally used a texmf.cnf.

To test things with the second luatex I set path=path\to\luatex\bin
- and this broke the parsing of the font directories and texmf.cnf
variables. luaoftload suddenly splitted pathes at colons, a not very
good idea on windows. The cause is this code in lualibs-io-lua:

if string.find(os.getenv("PATH"),";") then
    io.fileseparator, io.pathseparator = "\\", ";"
else
    io.fileseparator, io.pathseparator = "/" , ":"
end




-- 
Ulrike Fischer 


From reinhard.kotucha at web.de  Mon Jul 25 21:02:43 2011
From: reinhard.kotucha at web.de (Reinhard Kotucha)
Date: Mon, 25 Jul 2011 21:02:43 +0200
Subject: [lltx] luaotfload and OSFONTDIR
In-Reply-To: <1kfonq84vzoex.dlg@nililand.de>
References: <11g80aq4ne80x.dlg@nililand.de>
 <CAArVCkRNSbyi0r9q9n6JmTTi4BNhc1_A4Pf9ZJww76X+7TqxNg@mail.gmail.com>
 <1kfonq84vzoex.dlg@nililand.de>
Message-ID: <20013.48595.647773.178313@zaphod.ms25.net>

On 2011-07-25 at 18:35:24 +0200, Ulrike Fischer wrote:

 > if string.find(os.getenv("PATH"),";") then
 >     io.fileseparator, io.pathseparator = "\\", ";"
 > else
 >     io.fileseparator, io.pathseparator = "/" , ":"
 > end

BTW, it's not advisable to rely on assumptions.  A better test is 

  if os.type == "windows" then ....

Regards,
  Reinhard

-- 
----------------------------------------------------------------------------
Reinhard Kotucha                                      Phone: +49-511-3373112
Marschnerstr. 25
D-30167 Hannover                              mailto:reinhard.kotucha at web.de
----------------------------------------------------------------------------
Microsoft isn't the answer. Microsoft is the question, and the answer is NO.
----------------------------------------------------------------------------

