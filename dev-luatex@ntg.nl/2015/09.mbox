From root at mail.boekplan.nl  Wed Sep  2 12:25:35 2015
From: root at mail.boekplan.nl (Cron Daemon)
Date: Wed,  2 Sep 2015 12:25:35 +0200 (CEST)
Subject: [Dev-luatex] Cron <luatex@boekplan>
	/var/www/luatex.org/www/bin/luatex-svn
Message-ID: <20150902103815.5A8CA41CB6@mail.boekplan.nl>

svn: REPORT of '/svn/luatex/!svn/vcc/default': Could not read response body: Connection reset by peer (https://foundry.supelec.fr)

From root at mail.boekplan.nl  Wed Sep  2 16:39:24 2015
From: root at mail.boekplan.nl (Cron Daemon)
Date: Wed,  2 Sep 2015 16:39:24 +0200 (CEST)
Subject: [Dev-luatex] Cron <luatex@boekplan>
	/var/www/luatex.org/www/bin/luatex-svn
Message-ID: <20150902143924.254F441D11@mail.boekplan.nl>

Authentication realm: <https://foundry.supelec.fr:443> Subversion Repository
Password for 'anonsvn': Authentication realm: <https://foundry.supelec.fr:443> Subversion Repository
Username: svn: OPTIONS of 'https://foundry.supelec.fr/svn/luatex': authorization failed: Could not authenticate to server: rejected Basic challenge (https://foundry.supelec.fr)

From root at mail.boekplan.nl  Fri Sep  4 12:25:11 2015
From: root at mail.boekplan.nl (Cron Daemon)
Date: Fri,  4 Sep 2015 12:25:11 +0200 (CEST)
Subject: [Dev-luatex] Cron <luatex@boekplan>
	/var/www/luatex.org/www/bin/luatex-svn
Message-ID: <20150904103650.CB2DF41D29@mail.boekplan.nl>

svn: OPTIONS of 'https://foundry.supelec.fr/svn/luatex': could not connect to server (https://foundry.supelec.fr)

From root at mail.boekplan.nl  Fri Sep  4 16:37:34 2015
From: root at mail.boekplan.nl (Cron Daemon)
Date: Fri,  4 Sep 2015 16:37:34 +0200 (CEST)
Subject: [Dev-luatex] Cron <luatex@boekplan>
	/var/www/luatex.org/www/bin/luatex-svn
Message-ID: <20150904143734.E422141D29@mail.boekplan.nl>

Authentication realm: <https://foundry.supelec.fr:443> Subversion Repository
Password for 'anonsvn': Authentication realm: <https://foundry.supelec.fr:443> Subversion Repository
Username: svn: OPTIONS of 'https://foundry.supelec.fr/svn/luatex': authorization failed: Could not authenticate to server: rejected Basic challenge (https://foundry.supelec.fr)

From root at mail.boekplan.nl  Wed Sep  9 12:38:09 2015
From: root at mail.boekplan.nl (Cron Daemon)
Date: Wed,  9 Sep 2015 12:38:09 +0200 (CEST)
Subject: [Dev-luatex] Cron <luatex@boekplan>
	/var/www/luatex.org/www/bin/luatex-svn
Message-ID: <20150909103809.59CCC41D57@mail.boekplan.nl>

Authentication realm: <https://foundry.supelec.fr:443> Subversion Repository
Password for 'anonsvn': Authentication realm: <https://foundry.supelec.fr:443> Subversion Repository
Username: svn: OPTIONS of 'https://foundry.supelec.fr/svn/luatex': authorization failed: Could not authenticate to server: rejected Basic challenge (https://foundry.supelec.fr)

From root at mail.boekplan.nl  Wed Sep  9 16:40:01 2015
From: root at mail.boekplan.nl (Cron Daemon)
Date: Wed,  9 Sep 2015 16:40:01 +0200 (CEST)
Subject: [Dev-luatex] Cron <luatex@boekplan>
	/var/www/luatex.org/www/bin/luatex-svn
Message-ID: <20150909144001.BFF7241D57@mail.boekplan.nl>

Authentication realm: <https://foundry.supelec.fr:443> Subversion Repository
Password for 'anonsvn': Authentication realm: <https://foundry.supelec.fr:443> Subversion Repository
Username: svn: OPTIONS of 'https://foundry.supelec.fr/svn/luatex': authorization failed: Could not authenticate to server: rejected Basic challenge (https://foundry.supelec.fr)

From root at mail.boekplan.nl  Wed Sep  9 22:38:54 2015
From: root at mail.boekplan.nl (Cron Daemon)
Date: Wed,  9 Sep 2015 22:38:54 +0200 (CEST)
Subject: [Dev-luatex] Cron <luatex@boekplan>
	/var/www/luatex.org/www/bin/luatex-svn
Message-ID: <20150909203854.9860F41D57@mail.boekplan.nl>

Authentication realm: <https://foundry.supelec.fr:443> Subversion Repository
Password for 'anonsvn': Authentication realm: <https://foundry.supelec.fr:443> Subversion Repository
Username: svn: OPTIONS of 'https://foundry.supelec.fr/svn/luatex': authorization failed: Could not authenticate to server: rejected Basic challenge (https://foundry.supelec.fr)

From orion at cora.nwra.com  Fri Sep 25 16:09:28 2015
From: orion at cora.nwra.com (Orion Poplawski)
Date: Fri, 25 Sep 2015 08:09:28 -0600
Subject: [Dev-luatex] Question on lua/luajit usage
Message-ID: <56055598.3030009@cora.nwra.com>

I'm just starting to take a look how luatex makes use of lua.  And it 
appears that luatex does not merely use lua, but extends it in various 
ways, essentially creating new lua dialect.  Is the assessment correct? 
  Is there any documentation on this?

Also, is luajit used in the same way, or would it be possible to use a 
system installed luajit in building luatex?

-- 
Orion Poplawski
Technical Manager                     303-415-9701 x222
NWRA/CoRA Division                    FAX: 303-415-9702
3380 Mitchell Lane                  orion at cora.nwra.com
Boulder, CO 80301              http://www.cora.nwra.com

From luigi.scarso at gmail.com  Fri Sep 25 17:10:41 2015
From: luigi.scarso at gmail.com (luigi scarso)
Date: Fri, 25 Sep 2015 17:10:41 +0200
Subject: [Dev-luatex] Question on lua/luajit usage
In-Reply-To: <56055598.3030009@cora.nwra.com>
References: <56055598.3030009@cora.nwra.com>
Message-ID: <CAG5iGsDJfL+5wJw7AqhogvgKauDPqbX+f7SeuXE+YM35OrLjYA@mail.gmail.com>

On Fri, Sep 25, 2015 at 4:09 PM, Orion Poplawski <orion at cora.nwra.com>
wrote:

> I'm just starting to take a look how luatex makes use of lua.  And it
> appears that luatex does not merely use lua, but extends it in various
> ways, essentially creating new lua dialect.  Is the assessment correct?  Is
> there any documentation on this?
>
>
hm,  the only relevant patch I can see here
https://www.tug.org/svn/texlive/trunk/Build/source/libs/lua52/lua-5.2.4-PATCHES
is about utf-8 chars in names.

For the rest, there are a bunch of libraries as lpeg that are embedded  in
the interpreter.
The current manual is luatexref-t.pdf at
foundry.supelec.fr/scm/viewvc.php/trunk/manual/luatexref-t.pdf?root=luatex&view=log

Also, is luajit used in the same way, or would it be possible to use a
> system installed luajit in building luatex?
>
>
Theoretically yes, but  I dont know if  the patches are still ok in this
case.
While we try to use the stock lua/luajit  as much as possibile,
the builder can decide to patch the source to match the TeXLive build
requirements,
and the luatex team can decide to modify the source to match the
development requirements.

Also we try to keep luajit as drop-in replacement of lua so that  minimize
the effort of adapting a format.
Given the current status of luajit, the rule is not to depend on luajittex
--- this means that the same task in luajittex should be  done
in  luatex;  usually luajittex is faster than luatex with jit off, but in
some situations there is no gain, and it's better to use luatex then.


-- 
luigi
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.ntg.nl/pipermail/dev-luatex/attachments/20150925/3d40278d/attachment.html>

From orion at cora.nwra.com  Fri Sep 25 17:17:37 2015
From: orion at cora.nwra.com (Orion Poplawski)
Date: Fri, 25 Sep 2015 09:17:37 -0600
Subject: [Dev-luatex] Question on lua/luajit usage
In-Reply-To: <CAG5iGsDJfL+5wJw7AqhogvgKauDPqbX+f7SeuXE+YM35OrLjYA@mail.gmail.com>
References: <56055598.3030009@cora.nwra.com>
 <CAG5iGsDJfL+5wJw7AqhogvgKauDPqbX+f7SeuXE+YM35OrLjYA@mail.gmail.com>
Message-ID: <56056591.2030002@cora.nwra.com>

On 09/25/2015 09:10 AM, luigi scarso wrote:
>
>
> On Fri, Sep 25, 2015 at 4:09 PM, Orion Poplawski <orion at cora.nwra.com
> <mailto:orion at cora.nwra.com>> wrote:
>
>     I'm just starting to take a look how luatex makes use of lua.  And
>     it appears that luatex does not merely use lua, but extends it in
>     various ways, essentially creating new lua dialect.  Is the
>     assessment correct?  Is there any documentation on this?
>
>
> hm,  the only relevant patch I can see here
> https://www.tug.org/svn/texlive/trunk/Build/source/libs/lua52/lua-5.2.4-PATCHES
> is about utf-8 chars in names.
> For the rest, there are a bunch of libraries as lpeg that are embedded
>   in the interpreter.

It's no so much the changes made to lua directly, but that luatex 
appears to make use of lua internals, e.g.:

texk/web2c/luatexdir/lua/lstrlibext.c includes lapi.h which is not a 
public lua header.

And texk/web2c/luatexdir/lua/texluac.w uses ldebug.h, ldo.h


> The current manual is luatexref-t.pdf at
> foundry.supelec.fr/scm/viewvc.php/trunk/manual/luatexref-t.pdf?root=luatex&view=log
> <http://foundry.supelec.fr/scm/viewvc.php/trunk/manual/luatexref-t.pdf?root=luatex&view=log>

Thanks.

-- 
Orion Poplawski
Technical Manager                     303-415-9701 x222
NWRA/CoRA Division                    FAX: 303-415-9702
3380 Mitchell Lane                  orion at cora.nwra.com
Boulder, CO 80301              http://www.cora.nwra.com

From pragma at wxs.nl  Fri Sep 25 23:04:39 2015
From: pragma at wxs.nl (Hans Hagen)
Date: Fri, 25 Sep 2015 23:04:39 +0200
Subject: [Dev-luatex] Question on lua/luajit usage
In-Reply-To: <56055598.3030009@cora.nwra.com>
References: <56055598.3030009@cora.nwra.com>
Message-ID: <5605B6E7.9080104@wxs.nl>

On 9/25/2015 4:09 PM, Orion Poplawski wrote:
> I'm just starting to take a look how luatex makes use of lua.  And it
> appears that luatex does not merely use lua, but extends it in various
> ways, essentially creating new lua dialect.  Is the assessment correct?
>   Is there any documentation on this?

Indeed we have some more on board. Keep in mind that lua is used as 
extension language so whenever it's used in an application there can be 
extensions.

Btw, a dialect implies a different language. Adding a couple of 
functions is not making it a dialect.

> Also, is luajit used in the same way, or would it be possible to use a
> system installed luajit in building luatex?

The only benefit of luajit is the faster virtual machine. A downside is 
that there are some limitations in memory cq. stack usage. We use a 
patch that makes the string hashing faster (we use the normal lua method 
instead of the luajit one that is optimizied for urls and that can make 
luajit slower than lua).

Becaus eluatex uses lua as extension language it will always be shipped 
with a specific version (linked in or alongside the binary).

Hans

-----------------------------------------------------------------
                                           Hans Hagen | PRAGMA ADE
               Ridderstraat 27 | 8061 GH Hasselt | The Netherlands
     tel: 038 477 53 69 | voip: 087 875 68 74 | www.pragma-ade.com
                                              | www.pragma-pod.nl
-----------------------------------------------------------------

From orion at cora.nwra.com  Sat Sep 26 16:22:54 2015
From: orion at cora.nwra.com (Orion Poplawski)
Date: Sat, 26 Sep 2015 08:22:54 -0600
Subject: [Dev-luatex] Question on lua/luajit usage
In-Reply-To: <5605B6E7.9080104@wxs.nl>
References: <56055598.3030009@cora.nwra.com> <5605B6E7.9080104@wxs.nl>
Message-ID: <5606AA3E.4020802@cora.nwra.com>

On 09/25/2015 03:04 PM, Hans Hagen wrote:
> On 9/25/2015 4:09 PM, Orion Poplawski wrote:
>> I'm just starting to take a look how luatex makes use of lua.  And it
>> appears that luatex does not merely use lua, but extends it in various
>> ways, essentially creating new lua dialect.  Is the assessment correct?
>>   Is there any documentation on this?
>
> Indeed we have some more on board. Keep in mind that lua is used as
> extension language so whenever it's used in an application there can be
> extensions.
>
> Btw, a dialect implies a different language. Adding a couple of
> functions is not making it a dialect.

You appear to be extending it in at least four areas by adding new 
functions, and replacing some as described below.  liolibext is the most 
"entangled" due to duplicating liolib code, lstrlibext also uses some 
Lua internals that are not normally exposed to consumers of Lua (e.g. 
lua_lock).  I'm fine with not calling this a new "dialect", but it is 
certainly extended, though modifying popen()/read()/lines() is 
interesting.  I'm interested to know if there has been any discussion 
with the Lua maintainers about incorporating any of these changes in Lua 
proper?

liolibext.c:
/* This extension only replaces one function: io.popen() and two
    metatable entries: f:read() and f:lines() but unfortunately
    it has to copy quite a bunch of lines from the original liolib.c
    to do so.
*/

llfslibext.c: adds to lfs:
     lua_setfield(L, -2, "isdir");
     lua_pushcfunction(L, file_is_file);
     lua_setfield(L, -2, "isfile");
     lua_pushcfunction(L, read_link);
     lua_setfield(L, -2, "readlink");
     lua_pushcfunction(L, get_short_name);
     lua_setfield(L, -2, "shortname");

loslibext.c:
     lua_getglobal(L, "os");
     lua_pushcfunction(L, ex_sleep);
     lua_setfield(L, -2, "sleep");
     lua_pushliteral(L, OS_PLATTYPE);
     lua_setfield(L, -2, "type");
     lua_pushliteral(L, OS_PLATNAME);
     lua_setfield(L, -2, "name");
     lua_pushcfunction(L, ex_uname);
     lua_setfield(L, -2, "uname");
#if (! defined (_WIN32))  && (! defined (__SUNOS__))
     lua_pushcfunction(L, os_times);
     lua_setfield(L, -2, "times");
#endif
#if ! defined (__SUNOS__)
     lua_pushcfunction(L, os_gettimeofday);
     lua_setfield(L, -2, "gettimeofday");
#endif

     if (!safer) {
         lua_pushcfunction(L, os_setenv);
         lua_setfield(L, -2, "setenv");
         lua_pushcfunction(L, os_exec);
         lua_setfield(L, -2, "exec");
         lua_pushcfunction(L, os_spawn);
         lua_setfield(L, -2, "spawn");
         lua_pushcfunction(L, os_execute);
         lua_setfield(L, -2, "execute");
         lua_pushcfunction(L, os_tmpdir);
         lua_setfield(L, -2, "tmpdir");
     }

lstrlibext.c
   {"utfvalues", str_utfvalues},
   {"utfcharacters", str_utfcharacters},
   {"characters", str_characters},
   {"characterpairs", str_characterpairs},
   {"bytes", str_bytes},
   {"bytepairs", str_bytepairs},
   {"explode", str_split},
   {"dump", str_dump},

>> Also, is luajit used in the same way, or would it be possible to use a
>> system installed luajit in building luatex?
>
> The only benefit of luajit is the faster virtual machine. A downside is
> that there are some limitations in memory cq. stack usage. We use a
> patch that makes the string hashing faster (we use the normal lua method
> instead of the luajit one that is optimizied for urls and that can make
> luajit slower than lua).
>
> Becaus eluatex uses lua as extension language it will always be shipped
> with a specific version (linked in or alongside the binary).
>
> Hans

FWIW - Here are some changes I had to make while trying to compile 
against lua 5.3:

diff --git a/texk/web2c/luatexdir/lua/liolibext.c 
b/texk/web2c/luatexdir/lua/liolibext.c
index edf094d..883dce7 100644
--- a/texk/web2c/luatexdir/lua/liolibext.c
+++ b/texk/web2c/luatexdir/lua/liolibext.c
@@ -33,6 +33,7 @@
  #include "lauxlib.h"
  #endif
  #include "lualib.h"
+#include <luaconf.h>



diff --git a/texk/web2c/luatexdir/lua/llualib.c 
b/texk/web2c/luatexdir/lua/llualib.c
index 23bec6b..f0c4a21 100644
--- a/texk/web2c/luatexdir/lua/llualib.c
+++ b/texk/web2c/luatexdir/lua/llualib.c
@@ -258,7 +258,11 @@ static int set_bytecode(lua_State * L)
          lua_bytecode_registers[k].buf = xmalloc(LOAD_BUF_SIZE);
          lua_bytecode_registers[k].alloc = LOAD_BUF_SIZE;
          memset(lua_bytecode_registers[k].buf, 0, LOAD_BUF_SIZE);
+#if LUA_VERSION_NUM >= 503
+        lua_dump(L, writer, (void *) (lua_bytecode_registers + k),0);
+#else
          lua_dump(L, writer, (void *) (lua_bytecode_registers + k));
+#endif
      }
      lua_pop(L, 1);
      return 0;
diff --git a/texk/web2c/luatexdir/lua/texluac.w 
b/texk/web2c/luatexdir/lua/texluac.w
index 396121c..e533b8f 100644
--- a/texk/web2c/luatexdir/lua/texluac.w
+++ b/texk/web2c/luatexdir/lua/texluac.w
@@ -265,7 +265,11 @@ int luac_main(int ac, char *av[])
  static void PrintString(const TString* ts)
  {
   const char* s=getstr(ts);
+#if LUA_VERSION_NUM >= 503
+ size_t i,n=ts->len;
+#else
   size_t i,n=ts->tsv.len;
+#endif
   printf("%c",'"');
   for (i=0; i<n; i++)
   {
@@ -305,7 +309,11 @@ static void PrintConstant(const Proto* f, int i)
         printf(LUA_NUMBER_FMT,nvalue(o));
         break;
    case LUA_TSTRING:
+#if LUA_VERSION_NUM >= 503
         PrintString(rawtsvalue(o));
+#else
+       PrintString(tsvalue(o));
+#endif
         break;
    default:                             /* cannot happen */
         printf("? type=%d",ttype(o));
diff --git a/texk/web2c/luatexdir/slnunicode/slnunico.c 
b/texk/web2c/luatexdir/slnunicode/slnunico.c
index 60ef95b..58e055e 100644
--- a/texk/web2c/luatexdir/slnunicode/slnunico.c
+++ b/texk/web2c/luatexdir/slnunicode/slnunico.c
@@ -435,7 +435,11 @@ static int str_dump (lua_State *L) {
         luaL_checktype(L, 1, LUA_TFUNCTION);
         lua_settop(L, 1);
         luaL_buffinit(L,&b);
+#if LUA_VERSION_NUM >= 503
+       if (lua_dump(L, writer, &b, 0) != 0)
+#else
         if (lua_dump(L, writer, &b) != 0)
+#endif
                 luaL_error(L, "unable to dump given function");
         luaL_pushresult(&b);
         return 1;


-- 
Orion Poplawski
Technical Manager                     303-415-9701 x222
NWRA/CoRA Division                    FAX: 303-415-9702
3380 Mitchell Lane                  orion at cora.nwra.com
Boulder, CO 80301              http://www.cora.nwra.com

From luigi.scarso at gmail.com  Sat Sep 26 18:38:13 2015
From: luigi.scarso at gmail.com (luigi scarso)
Date: Sat, 26 Sep 2015 18:38:13 +0200
Subject: [Dev-luatex] Question on lua/luajit usage
In-Reply-To: <5606AA3E.4020802@cora.nwra.com>
References: <56055598.3030009@cora.nwra.com> <5605B6E7.9080104@wxs.nl>
 <5606AA3E.4020802@cora.nwra.com>
Message-ID: <CAG5iGsDjMdVateVcr48V3EVV9E37-1UjhwPhbUmT8oOL5rvtRA@mail.gmail.com>

On Sat, Sep 26, 2015 at 4:22 PM, Orion Poplawski <orion at cora.nwra.com>
wrote:

> On 09/25/2015 03:04 PM, Hans Hagen wrote:
>
>> On 9/25/2015 4:09 PM, Orion Poplawski wrote:
>>
>>> I'm just starting to take a look how luatex makes use of lua.  And it
>>> appears that luatex does not merely use lua, but extends it in various
>>> ways, essentially creating new lua dialect.  Is the assessment correct?
>>>   Is there any documentation on this?
>>>
>>
>> Indeed we have some more on board. Keep in mind that lua is used as
>> extension language so whenever it's used in an application there can be
>> extensions.
>>
>> Btw, a dialect implies a different language. Adding a couple of
>> functions is not making it a dialect.
>>
>
> You appear to be extending it in at least four areas by adding new
> functions, and replacing some as described below.  liolibext is the most
> "entangled" due to duplicating liolib code, lstrlibext also uses some Lua
> internals that are not normally exposed to consumers of Lua (e.g.
> lua_lock).  I'm fine with not calling this a new "dialect", but it is
> certainly extended, though modifying popen()/read()/lines() is
> interesting.  I'm interested to know if there has been any discussion with
> the Lua maintainers about incorporating any of these changes in Lua proper?
>
> liolibext.c:
> /* This extension only replaces one function: io.popen() and two
>    metatable entries: f:read() and f:lines() but unfortunately
>    it has to copy quite a bunch of lines from the original liolib.c
>    to do so.
> */
>
> llfslibext.c: adds to lfs:
>     lua_setfield(L, -2, "isdir");
>     lua_pushcfunction(L, file_is_file);
>     lua_setfield(L, -2, "isfile");
>     lua_pushcfunction(L, read_link);
>     lua_setfield(L, -2, "readlink");
>     lua_pushcfunction(L, get_short_name);
>     lua_setfield(L, -2, "shortname");
>
> loslibext.c:
>     lua_getglobal(L, "os");
>     lua_pushcfunction(L, ex_sleep);
>     lua_setfield(L, -2, "sleep");
>     lua_pushliteral(L, OS_PLATTYPE);
>     lua_setfield(L, -2, "type");
>     lua_pushliteral(L, OS_PLATNAME);
>     lua_setfield(L, -2, "name");
>     lua_pushcfunction(L, ex_uname);
>     lua_setfield(L, -2, "uname");
> #if (! defined (_WIN32))  && (! defined (__SUNOS__))
>     lua_pushcfunction(L, os_times);
>     lua_setfield(L, -2, "times");
> #endif
> #if ! defined (__SUNOS__)
>     lua_pushcfunction(L, os_gettimeofday);
>     lua_setfield(L, -2, "gettimeofday");
> #endif
>
>     if (!safer) {
>         lua_pushcfunction(L, os_setenv);
>         lua_setfield(L, -2, "setenv");
>         lua_pushcfunction(L, os_exec);
>         lua_setfield(L, -2, "exec");
>         lua_pushcfunction(L, os_spawn);
>         lua_setfield(L, -2, "spawn");
>         lua_pushcfunction(L, os_execute);
>         lua_setfield(L, -2, "execute");
>         lua_pushcfunction(L, os_tmpdir);
>         lua_setfield(L, -2, "tmpdir");
>     }
>
> lstrlibext.c
>   {"utfvalues", str_utfvalues},
>   {"utfcharacters", str_utfcharacters},
>   {"characters", str_characters},
>   {"characterpairs", str_characterpairs},
>   {"bytes", str_bytes},
>   {"bytepairs", str_bytepairs},
>   {"explode", str_split},
>   {"dump", str_dump},
>
> Also, is luajit used in the same way, or would it be possible to use a
>>> system installed luajit in building luatex?
>>>
>>
>> The only benefit of luajit is the faster virtual machine. A downside is
>> that there are some limitations in memory cq. stack usage. We use a
>> patch that makes the string hashing faster (we use the normal lua method
>> instead of the luajit one that is optimizied for urls and that can make
>> luajit slower than lua).
>>
>> Becaus eluatex uses lua as extension language it will always be shipped
>> with a specific version (linked in or alongside the binary).
>>
>> Hans
>>
>
> FWIW - Here are some changes I had to make while trying to compile against
> lua 5.3:
>
> Thank you for the patches --- do they also work  for luajittex ?

-- 
luigi
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.ntg.nl/pipermail/dev-luatex/attachments/20150926/30874cee/attachment.html>

From orion at cora.nwra.com  Sat Sep 26 20:33:21 2015
From: orion at cora.nwra.com (Orion Poplawski)
Date: Sat, 26 Sep 2015 12:33:21 -0600
Subject: [Dev-luatex] Question on lua/luajit usage
In-Reply-To: <CAG5iGsDjMdVateVcr48V3EVV9E37-1UjhwPhbUmT8oOL5rvtRA@mail.gmail.com>
References: <56055598.3030009@cora.nwra.com> <5605B6E7.9080104@wxs.nl>
 <5606AA3E.4020802@cora.nwra.com>
 <CAG5iGsDjMdVateVcr48V3EVV9E37-1UjhwPhbUmT8oOL5rvtRA@mail.gmail.com>
Message-ID: <5606E4F1.6040805@cora.nwra.com>

On 09/26/2015 10:38 AM, luigi scarso wrote:
>
>
> On Sat, Sep 26, 2015 at 4:22 PM, Orion Poplawski <orion at cora.nwra.com
> <mailto:orion at cora.nwra.com>> wrote:
>     FWIW - Here are some changes I had to make while trying to compile
>     against lua 5.3:
>
> Thank you for the patches --- do they also work  for luajittex ?

I really don't know, didn't get that far.


-- 
Orion Poplawski
Technical Manager                     303-415-9701 x222
NWRA/CoRA Division                    FAX: 303-415-9702
3380 Mitchell Lane                  orion at cora.nwra.com
Boulder, CO 80301              http://www.cora.nwra.com

From luigi.scarso at gmail.com  Sat Sep 26 20:44:46 2015
From: luigi.scarso at gmail.com (luigi scarso)
Date: Sat, 26 Sep 2015 20:44:46 +0200
Subject: [Dev-luatex] Question on lua/luajit usage
In-Reply-To: <5606E4F1.6040805@cora.nwra.com>
References: <56055598.3030009@cora.nwra.com> <5605B6E7.9080104@wxs.nl>
 <5606AA3E.4020802@cora.nwra.com>
 <CAG5iGsDjMdVateVcr48V3EVV9E37-1UjhwPhbUmT8oOL5rvtRA@mail.gmail.com>
 <5606E4F1.6040805@cora.nwra.com>
Message-ID: <CAG5iGsBEMMd095AGwothk1Hte_uqb1Wu1ryOkcmc1rQ_PUHfnA@mail.gmail.com>

Il 26/set/2015 20:33, "Orion Poplawski" <orion at cora.nwra.com> ha scritto:
>
> On 09/26/2015 10:38 AM, luigi scarso wrote:
>>
>>
>>
>> On Sat, Sep 26, 2015 at 4:22 PM, Orion Poplawski <orion at cora.nwra.com
>> <mailto:orion at cora.nwra.com>> wrote:
>>     FWIW - Here are some changes I had to make while trying to compile
>>     against lua 5.3:
>>
>> Thank you for the patches --- do they also work  for luajittex ?
>
>
> I really don't know, didn't get that far.
>
It should be a matter of
build.sh --jit
Eventually source/rebuild to have the right configure files.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.ntg.nl/pipermail/dev-luatex/attachments/20150926/49496ad6/attachment-0001.html>

