From tex at 2krueger.de  Tue Nov  5 17:04:15 2019
From: tex at 2krueger.de (Marcel Fabian =?utf-8?Q?Kr=C3=BCger?=)
Date: Tue, 5 Nov 2019 17:04:15 +0100
Subject: [Dev-luatex] Broken \adjdemerits on Linux due to unspecified
 enumeration type
In-Reply-To: <CAG5iGsBk251Hnv-fH6n9x0YY+Bsv-Bp-L_X8yPWkhXxxL7XXaA@mail.gmail.com>
References: <20191030013235.qgmbinzxv42fuh36@yoga>
 <CAG5iGsCLOjLbVDrQ0CK9jemorUqTo6sk0ck3PcrE6hw--POrdQ@mail.gmail.com>
 <768f79b4347f5d364eca0aa4fa92ed8d@2krueger.de>
 <CAG5iGsBk251Hnv-fH6n9x0YY+Bsv-Bp-L_X8yPWkhXxxL7XXaA@mail.gmail.com>
Message-ID: <20191105160415.u53nlskie4md3sdu@yoga>

Hi,

thanks for fixing the \adjdemerits problem. One remark about the fix:

The line

if ( (fit_class>(fitness(r)+1)) || (fitness(r)>(fit_class+1)) )

is indented by one tab "\t" and four spaces, while all surrounding code
is only indented with spaces.
(Confusingly, tabs are also used as indentation in line 117-119)
This leads to confusing appearence if the file is viewed in an editor
which does not use 8 spaces for one tab.

Maybe this could be changed to be a bit more consistant?

Best regards,
Marcel

From luigi.scarso at gmail.com  Tue Nov  5 17:09:17 2019
From: luigi.scarso at gmail.com (luigi scarso)
Date: Tue, 5 Nov 2019 17:09:17 +0100
Subject: [Dev-luatex] Broken \adjdemerits on Linux due to unspecified
 enumeration type
In-Reply-To: <20191105160415.u53nlskie4md3sdu@yoga>
References: <20191030013235.qgmbinzxv42fuh36@yoga>
 <CAG5iGsCLOjLbVDrQ0CK9jemorUqTo6sk0ck3PcrE6hw--POrdQ@mail.gmail.com>
 <768f79b4347f5d364eca0aa4fa92ed8d@2krueger.de>
 <CAG5iGsBk251Hnv-fH6n9x0YY+Bsv-Bp-L_X8yPWkhXxxL7XXaA@mail.gmail.com>
 <20191105160415.u53nlskie4md3sdu@yoga>
Message-ID: <CAG5iGsD_=9-Gx0L41Q7YBqVgg-bU8qnUPxd+uVgvZm41UJ4BXg@mail.gmail.com>

On Tue, Nov 5, 2019 at 5:04 PM Marcel Fabian KrÃ¼ger <tex at 2krueger.de> wrote:

> Hi,
>
> thanks for fixing the \adjdemerits problem. One remark about the fix:
>
> The line
>
> if ( (fit_class>(fitness(r)+1)) || (fitness(r)>(fit_class+1)) )
>
> is indented by one tab "\t" and four spaces, while all surrounding code
> is only indented with spaces.
>

fixed.

>

-- 
luigi
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mailman.ntg.nl/pipermail/dev-luatex/attachments/20191105/dfe1d20c/attachment.html>

From tex at 2krueger.de  Thu Nov  7 12:03:50 2019
From: tex at 2krueger.de (Marcel Fabian =?utf-8?Q?Kr=C3=BCger?=)
Date: Thu, 7 Nov 2019 12:03:50 +0100
Subject: [Dev-luatex] Revive Type 3 fonts
In-Reply-To: <CAG5iGsA2i-GJPymQ98B8=jafsrzBY2wQeX9-NVkJR-+t-UHcKw@mail.gmail.com>
References: <20191030165624.dlow7amx5ieay7th@yoga>
 <CAG5iGsA2i-GJPymQ98B8=jafsrzBY2wQeX9-NVkJR-+t-UHcKw@mail.gmail.com>
Message-ID: <20191107110350.hxypf5ngpfmbtq3l@yoga>

On Wed, Oct 30, 2019 at 08:32:45PM +0100, luigi scarso wrote:
> Thank you for the patch.
> It's a feature request,  it has less priority than bugs fixing (and other
> emails sent by you).

Right, I already guessed as much but I thought I just send it anyway in
case you find it useful :)

-- Marcel

From tex at 2krueger.de  Thu Nov  7 15:21:03 2019
From: tex at 2krueger.de (Marcel Fabian =?utf-8?Q?Kr=C3=BCger?=)
Date: Thu, 7 Nov 2019 15:21:03 +0100
Subject: [Dev-luatex] require doesn't get recorded
Message-ID: <20191107142103.evk54sfpjztmdg7v@yoga>

Hi,

based on an observation by Karl Berry on the TeX Live list I discovered
an inconsistency in LuaTeX's handling of `-recorder`: While LuaTeX does
record files loaded through `loadfile`, files loaded through `require`
are ignored:

For example if the current directory contains two empty files l1.lua and
l2.lua, then the document

\directlua{
  loadfile'l1.lua'()
  require'l2'
}
\bye

compiled with `luatex -recorder recorded` IMO should write to
recorded.fls the entries

PWD /some/weird/pwd
INPUT /usr/local/texlive/2019/texmf-var/web2c/luatex/luatex.fmt
INPUT ./recorded.tex
OUTPUT recorded.log
INPUT l1.lua
INPUT ./l2.lua

but it does write

PWD /some/weird/pwd
INPUT /usr/local/texlive/2019/texmf-var/web2c/luatex/luatex.fmt
INPUT ./recorded.tex
OUTPUT recorded.log
INPUT l1.lua

I do not think that this is intentional, so I added a patch to add
recorder entries iff the file is loaded successfully (similar to
`loadfile`)

-- Marcel
-------------- next part --------------
>From fd35512137fdf94439427a46f7b6c010a9b0aa6a Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Marcel=20Fabian=20Kr=C3=BCger?= <tex at 2krueger.de>
Date: Thu, 7 Nov 2019 12:18:08 +0100
Subject: [PATCH] Record required files

---
 source/texk/web2c/luatexdir/lua/luainit.c | 4 ++++
 1 file changed, 4 insertions(+)

diff --git a/source/texk/web2c/luatexdir/lua/luainit.c b/source/texk/web2c/luatexdir/lua/luainit.c
index 7570910b0..615a03706 100644
--- a/source/texk/web2c/luatexdir/lua/luainit.c
+++ b/source/texk/web2c/luatexdir/lua/luainit.c
@@ -682,6 +682,7 @@ static int luatex_kpse_lua_find(lua_State * L)
             lua_tostring(L, 1), filename, lua_tostring(L, -1));
     }
     /*tex library loaded successfully */
+    recorder_record_input(filename);
     return 1;
 }
 
@@ -771,6 +772,9 @@ static int luatex_kpse_clua_find(lua_State * L)
         free(extensionless);
         free(total);
         free(temp_name);
+        if (lua_isfunction(L, -1)) {
+            recorder_record_input(filename);
+        }
         return 1;
     }
 }
-- 
2.24.0


From lstonys at vtex.lt  Thu Nov  7 15:57:15 2019
From: lstonys at vtex.lt (Linas Stonys)
Date: Thu, 7 Nov 2019 16:57:15 +0200
Subject: [Dev-luatex] require doesn't get recorded
In-Reply-To: <20191107142103.evk54sfpjztmdg7v@yoga>
References: <20191107142103.evk54sfpjztmdg7v@yoga>
Message-ID: <42eaafde-e61a-f329-4f04-d5a8496a3063@vtex.lt>

Hi All,
I'm using dirty trick to write documents used .otf files to .fls by adding code to ...\tex\latex\fontspec\fontspec.cfg

\bgroup
\catcode`\ 10 %

\gdef\opentype at write@to at fls{%
     \directlua{
         local fontdata = fonts.hashes.identifiers
         local done = {}
         for id, fdata in pairs(fontdata) do
             if fdata.filename and not done[fdata.filename] then
               tex.sprint("\string\\IfFileExists{".. fdata.filename .."}{}{}")
               done[fdata.filename] = ''
             end
         end
         }}

\egroup
\AtEndDocument{\opentype at write@to at fls}

Then example:
\documentclass{article}
\usepackage{fontspec}

\begin{document}
\fontfamily{ptm}\selectfont a
\end{document}

Maybe this could be solved directly in luatex engine that all the input would be written to .fls?

Thanks in advance!
Linas


On 11/7/2019 4:21 PM, Marcel Fabian KrÃ¼ger wrote:
> Hi,
> 
> based on an observation by Karl Berry on the TeX Live list I discovered
> an inconsistency in LuaTeX's handling of `-recorder`: While LuaTeX does
> record files loaded through `loadfile`, files loaded through `require`
> are ignored:
> 
> For example if the current directory contains two empty files l1.lua and
> l2.lua, then the document
> 
> \directlua{
>    loadfile'l1.lua'()
>    require'l2'
> }
> \bye
> 
> compiled with `luatex -recorder recorded` IMO should write to
> recorded.fls the entries
> 
> PWD /some/weird/pwd
> INPUT /usr/local/texlive/2019/texmf-var/web2c/luatex/luatex.fmt
> INPUT ./recorded.tex
> OUTPUT recorded.log
> INPUT l1.lua
> INPUT ./l2.lua
> 
> but it does write
> 
> PWD /some/weird/pwd
> INPUT /usr/local/texlive/2019/texmf-var/web2c/luatex/luatex.fmt
> INPUT ./recorded.tex
> OUTPUT recorded.log
> INPUT l1.lua
> 
> I do not think that this is intentional, so I added a patch to add
> recorder entries iff the file is loaded successfully (similar to
> `loadfile`)
> 
> -- Marcel
> 
> 
> _______________________________________________
> dev-luatex mailing list
> dev-luatex at ntg.nl
> https://mailman.ntg.nl/mailman/listinfo/dev-luatex
> 

From j.hagen at xs4all.nl  Thu Nov  7 16:15:09 2019
From: j.hagen at xs4all.nl (Hans Hagen)
Date: Thu, 7 Nov 2019 16:15:09 +0100
Subject: [Dev-luatex] require doesn't get recorded
In-Reply-To: <20191107142103.evk54sfpjztmdg7v@yoga>
References: <20191107142103.evk54sfpjztmdg7v@yoga>
Message-ID: <6a28666f-17de-b739-a786-155b23cc3b05@xs4all.nl>

On 11/7/2019 3:21 PM, Marcel Fabian KrÃ¼ger wrote:
> Hi,
> 
> based on an observation by Karl Berry on the TeX Live list I discovered
> an inconsistency in LuaTeX's handling of `-recorder`: While LuaTeX does
> record files loaded through `loadfile`, files loaded through `require`
> are ignored:
> 
> For example if the current directory contains two empty files l1.lua and
> l2.lua, then the document
> 
> \directlua{
>    loadfile'l1.lua'()
>    require'l2'
> }
> \bye
> 
> compiled with `luatex -recorder recorded` IMO should write to
> recorded.fls the entries
> 
> PWD /some/weird/pwd
> INPUT /usr/local/texlive/2019/texmf-var/web2c/luatex/luatex.fmt
> INPUT ./recorded.tex
> OUTPUT recorded.log
> INPUT l1.lua
> INPUT ./l2.lua
> 
> but it does write
> 
> PWD /some/weird/pwd
> INPUT /usr/local/texlive/2019/texmf-var/web2c/luatex/luatex.fmt
> INPUT ./recorded.tex
> OUTPUT recorded.log
> INPUT l1.lua
> 
> I do not think that this is intentional, so I added a patch to add
> recorder entries iff the file is loaded successfully (similar to
> `loadfile`)
i'll add recording but not conditional (as found means found, which is 
unrelated to a succesful load)

Hans

-----------------------------------------------------------------
                                           Hans Hagen | PRAGMA ADE
               Ridderstraat 27 | 8061 GH Hasselt | The Netherlands
        tel: 038 477 53 69 | www.pragma-ade.nl | www.pragma-pod.nl
-----------------------------------------------------------------

From j.hagen at xs4all.nl  Thu Nov  7 16:20:19 2019
From: j.hagen at xs4all.nl (Hans Hagen)
Date: Thu, 7 Nov 2019 16:20:19 +0100
Subject: [Dev-luatex] require doesn't get recorded
In-Reply-To: <42eaafde-e61a-f329-4f04-d5a8496a3063@vtex.lt>
References: <20191107142103.evk54sfpjztmdg7v@yoga>
 <42eaafde-e61a-f329-4f04-d5a8496a3063@vtex.lt>
Message-ID: <7a8533fc-bf50-bef1-9574-deed0f46665c@xs4all.nl>

On 11/7/2019 3:57 PM, Linas Stonys wrote:
> Hi All,
> I'm using dirty trick to write documents used .otf files to .fls by 
> adding code to ...\tex\latex\fontspec\fontspec.cfg
> 
> \bgroup
> \catcode`\ 10 %
> 
> \gdef\opentype at write@to at fls{%
>  Â Â Â  \directlua{
>  Â Â Â Â Â Â Â  local fontdata = fonts.hashes.identifiers
>  Â Â Â Â Â Â Â  local done = {}
>  Â Â Â Â Â Â Â  for id, fdata in pairs(fontdata) do
>  Â Â Â Â Â Â Â Â Â Â Â  if fdata.filename and not done[fdata.filename] then
>  Â Â Â Â Â Â Â Â Â Â Â Â Â  tex.sprint("\string\\IfFileExists{".. fdata.filename 
> .."}{}{}")
>  Â Â Â Â Â Â Â Â Â Â Â Â Â  done[fdata.filename] = ''
>  Â Â Â Â Â Â Â Â Â Â Â  end
>  Â Â Â Â Â Â Â  end
>  Â Â Â Â Â Â Â  }}
> 
> \egroup
> \AtEndDocument{\opentype at write@to at fls}
> 
> Then example:
> \documentclass{article}
> \usepackage{fontspec}
> 
> \begin{document}
> \fontfamily{ptm}\selectfont a
> \end{document}
> 
> Maybe this could be solved directly in luatex engine that all the input 
> would be written to .fls?
i have no clue what that code is for but if it's a trick to get 
something recorded, you can probably use

fio.recordfilename(fdata.filename)


-----------------------------------------------------------------
                                           Hans Hagen | PRAGMA ADE
               Ridderstraat 27 | 8061 GH Hasselt | The Netherlands
        tel: 038 477 53 69 | www.pragma-ade.nl | www.pragma-pod.nl
-----------------------------------------------------------------

From lstonys at vtex.lt  Fri Nov  8 09:31:47 2019
From: lstonys at vtex.lt (Linas Stonys)
Date: Fri, 8 Nov 2019 10:31:47 +0200
Subject: [Dev-luatex] require doesn't get recorded
In-Reply-To: <7a8533fc-bf50-bef1-9574-deed0f46665c@xs4all.nl>
References: <20191107142103.evk54sfpjztmdg7v@yoga>
 <42eaafde-e61a-f329-4f04-d5a8496a3063@vtex.lt>
 <7a8533fc-bf50-bef1-9574-deed0f46665c@xs4all.nl>
Message-ID: <0d865955-0c9b-da30-d9d0-a2a81f9e67a7@vtex.lt>

executing \IfFileExists{d:/texroot/2019/texmf-dist/fonts/opentype/public/lm/lmroman10-bold.otf}{}{}
writes an entry to .fls like:
INPUT d:/texroot/2019/texmf-dist/fonts/opentype/public/lm/lmroman10-bold.otf

that's what this code does for every used opentype font. I tried offered fio.recordfilename(fdata.filename)
but did not see any difference in .fls

On 11/7/2019 5:20 PM, Hans Hagen wrote:
> On 11/7/2019 3:57 PM, Linas Stonys wrote:
>> Hi All,
>> I'm using dirty trick to write documents used .otf files to .fls by adding code to ...\tex\latex\fontspec\fontspec.cfg
>>
>> \bgroup
>> \catcode`\ 10 %
>>
>> \gdef\opentype at write@to at fls{%
>> Â Â Â Â  \directlua{
>> Â Â Â Â Â Â Â Â  local fontdata = fonts.hashes.identifiers
>> Â Â Â Â Â Â Â Â  local done = {}
>> Â Â Â Â Â Â Â Â  for id, fdata in pairs(fontdata) do
>> Â Â Â Â Â Â Â Â Â Â Â Â  if fdata.filename and not done[fdata.filename] then
>> Â Â Â Â Â Â Â Â Â Â Â Â Â Â  tex.sprint("\string\\IfFileExists{".. fdata.filename .."}{}{}")
>> Â Â Â Â Â Â Â Â Â Â Â Â Â Â  done[fdata.filename] = ''
>> Â Â Â Â Â Â Â Â Â Â Â Â  end
>> Â Â Â Â Â Â Â Â  end
>> Â Â Â Â Â Â Â Â  }}
>>
>> \egroup
>> \AtEndDocument{\opentype at write@to at fls}
>>
>> Then example:
>> \documentclass{article}
>> \usepackage{fontspec}
>>
>> \begin{document}
>> \fontfamily{ptm}\selectfont a
>> \end{document}
>>
>> Maybe this could be solved directly in luatex engine that all the input would be written to .fls?
> i have no clue what that code is for but if it's a trick to get something recorded, you can probably use
> 
> fio.recordfilename(fdata.filename)
> 



From j.hagen at xs4all.nl  Fri Nov  8 10:06:57 2019
From: j.hagen at xs4all.nl (Hans Hagen)
Date: Fri, 8 Nov 2019 10:06:57 +0100
Subject: [Dev-luatex] require doesn't get recorded
In-Reply-To: <0d865955-0c9b-da30-d9d0-a2a81f9e67a7@vtex.lt>
References: <20191107142103.evk54sfpjztmdg7v@yoga>
 <42eaafde-e61a-f329-4f04-d5a8496a3063@vtex.lt>
 <7a8533fc-bf50-bef1-9574-deed0f46665c@xs4all.nl>
 <0d865955-0c9b-da30-d9d0-a2a81f9e67a7@vtex.lt>
Message-ID: <4430ce9b-6b64-4ef9-f081-d26490a5ea63@xs4all.nl>

On 11/8/2019 9:31 AM, Linas Stonys wrote:
> executing 
> \IfFileExists{d:/texroot/2019/texmf-dist/fonts/opentype/public/lm/lmroman10-bold.otf}{}{} 
> 
> writes an entry to .fls like:
> INPUT 
> d:/texroot/2019/texmf-dist/fonts/opentype/public/lm/lmroman10-bold.otf
> 
> that's what this code does for every used opentype font. I tried offered 
> fio.recordfilename(fdata.filename)
> but did not see any difference in .fls
hm, i'll check it (in plain)

Hans

-----------------------------------------------------------------
                                           Hans Hagen | PRAGMA ADE
               Ridderstraat 27 | 8061 GH Hasselt | The Netherlands
        tel: 038 477 53 69 | www.pragma-ade.nl | www.pragma-pod.nl
-----------------------------------------------------------------

From j.hagen at xs4all.nl  Fri Nov  8 10:26:32 2019
From: j.hagen at xs4all.nl (Hans Hagen)
Date: Fri, 8 Nov 2019 10:26:32 +0100
Subject: [Dev-luatex] require doesn't get recorded
In-Reply-To: <0d865955-0c9b-da30-d9d0-a2a81f9e67a7@vtex.lt>
References: <20191107142103.evk54sfpjztmdg7v@yoga>
 <42eaafde-e61a-f329-4f04-d5a8496a3063@vtex.lt>
 <7a8533fc-bf50-bef1-9574-deed0f46665c@xs4all.nl>
 <0d865955-0c9b-da30-d9d0-a2a81f9e67a7@vtex.lt>
Message-ID: <03a43f5a-abb6-c2d0-3be7-f963df226fc5@xs4all.nl>

On 11/8/2019 9:31 AM, Linas Stonys wrote:
> executing 
> \IfFileExists{d:/texroot/2019/texmf-dist/fonts/opentype/public/lm/lmroman10-bold.otf}{}{} 
> 
> writes an entry to .fls like:
> INPUT 
> d:/texroot/2019/texmf-dist/fonts/opentype/public/lm/lmroman10-bold.otf
> 
> that's what this code does for every used opentype font. I tried offered 
> fio.recordfilename(fdata.filename)
> but did not see any difference in .fls
actually there is

record_input_file
record_output_file

in the kpse lib so i'll remove the other function as it only is used in 
kpse mode anyway; in kpse lib i'll add it to the main module too, so 
then you will have

kpse.record_input_file(fdata.filename)

Hans

-----------------------------------------------------------------
                                           Hans Hagen | PRAGMA ADE
               Ridderstraat 27 | 8061 GH Hasselt | The Netherlands
        tel: 038 477 53 69 | www.pragma-ade.nl | www.pragma-pod.nl
-----------------------------------------------------------------

From sigitas at vtex.lt  Fri Nov 15 12:05:01 2019
From: sigitas at vtex.lt (Sigitas Tolusis)
Date: Fri, 15 Nov 2019 13:05:01 +0200
Subject: [Dev-luatex] whatsit (subtype:write) bug?
In-Reply-To: <b97ae913-b61a-7b0a-3212-6cf50e85ca18@vtex.lt>
References: <20191022143522.j3qo5nzalrb7tu3d@yoga>
 <b97ae913-b61a-7b0a-3212-6cf50e85ca18@vtex.lt>
Message-ID: <3AB457A1-3B65-43B9-A40F-051BD82AC4C0@vtex.lt>

On 24 Oct 2019, at 13:10, Linas Stonys <lstonys at vtex.lt> wrote:
> 
> Hi,
> I noticed that whatsit subtype "write" has changed "data" field type.
> Documentation says "data -> table representing the token list to be written"
> but when I print it I see it as a string with LuaTeX, Version 1.10.0 (TeX Live 2019):
> HERE    <node    277 <     82 >    nil : whatsit 1>     \foo\fee
> 
> With LuaTeX, Version 1.07.0 (TeX Live 2018/W32TeX) is ok:
> HERE    <node    276 <     82 >    nil : whatsit 1>     table: 02D87EC8
> 
> 
> Minimal example:
> \write1{\string\foo \unexpanded{\fee}}%
> \directlua{
> local head = tex.nest[tex.nest.ptr].head
> local tl = node.tail(head)
> print ("HERE", tl, tl.data)
> }
> \bye
> 
> 
> The real world example will be:
> \documentclass{article}
> \usepackage[color=no]{nodetree}
> \nodetreeoption[channel]{log}
> \nodetreeregister{preout}        %  pre_output will rise an error trying to print whatsits data field
> 
> \begin{document}
> \makeatletter
> \protected at write \@auxout {}{\string\@gobble\string\fee}    %% this is ok
> \protected at write \@auxout {}{\string\@gobble\protect\foo}   %% but this will rise \foo undefined error
> \makeatother
> \end{document}
> 
> And this is very strange that accessing whatsits (subtype "write") "data" field executes it.

The reason is that function get_write_direct_value (lnodelib.c:1652) provides expanded tokenlist version 
by function expand_macros_in_tokenlist (lnodelib.c:1652; defined in extensions.c:512). 

Maybe a bit changed behaviour with providing unexpanded tokenlist be more useful and flexible working with 
whatsit data from lua side. In such case minimal changes could be: to use by get_write_direct_value a modified
version of  expand_macros_in_tokenlist  with different token scan changed from  scan_toks(false, true) to 
 scan_toks(false, false) (extensions.c:541).

Regards,
Sigitas

From sigitas at vtex.lt  Fri Nov 15 12:35:14 2019
From: sigitas at vtex.lt (Sigitas Tolusis)
Date: Fri, 15 Nov 2019 13:35:14 +0200
Subject: [Dev-luatex] Request for bugfix - user defined whatsit node
In-Reply-To: <CAG5iGsA2i-GJPymQ98B8=jafsrzBY2wQeX9-NVkJR-+t-UHcKw@mail.gmail.com>
References: <20191030165624.dlow7amx5ieay7th@yoga>
 <CAG5iGsA2i-GJPymQ98B8=jafsrzBY2wQeX9-NVkJR-+t-UHcKw@mail.gmail.com>
Message-ID: <0205A46F-11E4-4DB6-B095-5B7AA3279FA4@vtex.lt>

Noticed two bugs.

1. Mised case for user defined whatsit node type 108 (âlâ Lua value)
    in function check_node_wrapup_core (texnodes.c:2482).
    Possible fix: just add the same as cases for types âsâ and âdâ.
    Insert line at texnodes.c:2500
                case âl':

2. In function flush_node_wrapup_core (texnodes.c:2201) for user defined
    whatsit node type âlâ we have: free_user_lua(user_node_value(p)).
    But in luanode.c:409 free_user_lua is defined as:

void free_user_lua(pointer p)
{
    if (user_node_value(p) != 0) {
        luaL_unref(Luas, LUA_REGISTRYINDEX, user_node_value(p));
    }
}

So we have two times user_node_value and it generates segmentation fault.
Possible fix: free_user_lua(p); // (texnodes.c:2223)

Regards,
Sigitas

    

From luigi.scarso at gmail.com  Fri Nov 15 18:24:59 2019
From: luigi.scarso at gmail.com (luigi scarso)
Date: Fri, 15 Nov 2019 18:24:59 +0100
Subject: [Dev-luatex] Request for bugfix - user defined whatsit node
In-Reply-To: <0205A46F-11E4-4DB6-B095-5B7AA3279FA4@vtex.lt>
References: <20191030165624.dlow7amx5ieay7th@yoga>
 <CAG5iGsA2i-GJPymQ98B8=jafsrzBY2wQeX9-NVkJR-+t-UHcKw@mail.gmail.com>
 <0205A46F-11E4-4DB6-B095-5B7AA3279FA4@vtex.lt>
Message-ID: <CAG5iGsCSXrSFwR-++n-dRin8GQmxTjYVfckf9ALstfO+YCjkew@mail.gmail.com>

On Fri, Nov 15, 2019 at 12:35 PM Sigitas Tolusis <sigitas at vtex.lt> wrote:

> Noticed two bugs.
>
> 1. Mised case for user defined whatsit node type 108 (âlâ Lua value)
>     in function check_node_wrapup_core (texnodes.c:2482).
>     Possible fix: just add the same as cases for types âsâ and âdâ.
>     Insert line at texnodes.c:2500
>                 case âl':
>
> 2. In function flush_node_wrapup_core (texnodes.c:2201) for user defined
>     whatsit node type âlâ we have: free_user_lua(user_node_value(p)).
>     But in luanode.c:409 free_user_lua is defined as:
>
> void free_user_lua(pointer p)
> {
>     if (user_node_value(p) != 0) {
>         luaL_unref(Luas, LUA_REGISTRYINDEX, user_node_value(p));
>     }
> }
>
> So we have two times user_node_value and it generates segmentation fault.
> Possible fix: free_user_lua(p); // (texnodes.c:2223)
>
> Regards,
> Sigitas
>

Thank you for the report, we will see it asap.


-- 
luigi
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mailman.ntg.nl/pipermail/dev-luatex/attachments/20191115/7d455aa8/attachment.html>

