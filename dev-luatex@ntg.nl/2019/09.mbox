From j.hagen at xs4all.nl  Sun Sep  1 14:27:40 2019
From: j.hagen at xs4all.nl (Hans Hagen)
Date: Sun, 1 Sep 2019 14:27:40 +0200
Subject: [Dev-luatex] Assignments in runtoks
In-Reply-To: <20190829124151.psikykgmvdmcaynr@yoga>
References: <20190829124151.psikykgmvdmcaynr@yoga>
Message-ID: <9109e3b0-9bf4-a858-3086-050d711375e1@xs4all.nl>

On 8/29/2019 2:42 PM, Marcel Fabian KrÃ¼ger wrote:
> Hello,
> 
> in current versions of LuaTeX, `runtoks` does not preserve token lists
> of ongoing assignments. Therefore running `runtoks` inside of `\edef`
> or similar replace the definition with the defined value of the last
> inner assignment.

fixed in next luatex but in a different way as we then also need to 
support deeper nesting

\toks2{\def\deepermacro{deeper}}
\toks0{\def\innermacro{inner}\def\deepermacro{weird}\directlua{tex.runtoks(2)}}

\edef\outermacro{outer\directlua{tex.runtoks(0)}}

\meaning\innermacro \par
\meaning\deepermacro\par
\meaning\outermacro \par

-----------------------------------------------------------------
                                           Hans Hagen | PRAGMA ADE
               Ridderstraat 27 | 8061 GH Hasselt | The Netherlands
        tel: 038 477 53 69 | www.pragma-ade.nl | www.pragma-pod.nl
-----------------------------------------------------------------

From luigi.scarso at gmail.com  Sun Sep  1 15:25:59 2019
From: luigi.scarso at gmail.com (luigi scarso)
Date: Sun, 1 Sep 2019 15:25:59 +0200
Subject: [Dev-luatex] Assignments in runtoks
In-Reply-To: <9109e3b0-9bf4-a858-3086-050d711375e1@xs4all.nl>
References: <20190829124151.psikykgmvdmcaynr@yoga>
 <9109e3b0-9bf4-a858-3086-050d711375e1@xs4all.nl>
Message-ID: <CAG5iGsCSX8G+H98qXasRkxOud0ffuNtCHNEGbeBRgzF873h_Pg@mail.gmail.com>

On Sun, Sep 1, 2019 at 2:28 PM Hans Hagen <j.hagen at xs4all.nl> wrote:

> On 8/29/2019 2:42 PM, Marcel Fabian KrÃ¼ger wrote:
> > Hello,
> >
> > in current versions of LuaTeX, `runtoks` does not preserve token lists
> > of ongoing assignments. Therefore running `runtoks` inside of `\edef`
> > or similar replace the definition with the defined value of the last
> > inner assignment.
>
> fixed in next luatex but in a different way as we then also need to
> support deeper nesting
>
> \toks2{\def\deepermacro{deeper}}
>
> \toks0{\def\innermacro{inner}\def\deepermacro{weird}\directlua{tex.runtoks(2)}}
>
> \edef\outermacro{outer\directlua{tex.runtoks(0)}}
>
> \meaning\innermacro \par
> \meaning\deepermacro\par
> \meaning\outermacro \par
>
>

done
------------------------------------------------------------------------
r7186 | luigi.scarso at gmail.com | 2019-09-01 15:25:05 +0200 (Sun, 01 Sep
2019) | 1 line

permit nested runtoks in more complex situations of nesting (HH)
------------------------------------------------------------------------


-- 
luigi
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mailman.ntg.nl/pipermail/dev-luatex/attachments/20190901/5db67da2/attachment.html>

From tex at 2krueger.de  Sun Sep  1 15:39:55 2019
From: tex at 2krueger.de (Marcel Fabian =?utf-8?Q?Kr=C3=BCger?=)
Date: Sun, 1 Sep 2019 15:39:55 +0200
Subject: [Dev-luatex] Assignments in runtoks
In-Reply-To: <CAG5iGsCSX8G+H98qXasRkxOud0ffuNtCHNEGbeBRgzF873h_Pg@mail.gmail.com>
References: <20190829124151.psikykgmvdmcaynr@yoga>
 <9109e3b0-9bf4-a858-3086-050d711375e1@xs4all.nl>
 <CAG5iGsCSX8G+H98qXasRkxOud0ffuNtCHNEGbeBRgzF873h_Pg@mail.gmail.com>
Message-ID: <20190901133955.bxjixdfskj44qe22@yoga>

> > fixed in next luatex but in a different way as we then also need to
> > support deeper nesting
> >
> > \toks2{\def\deepermacro{deeper}}
> >
> > \toks0{\def\innermacro{inner}\def\deepermacro{weird}\directlua{tex.runtoks(2)}}
> >
> > \edef\outermacro{outer\directlua{tex.runtoks(0)}}
> >
> > \meaning\innermacro \par
> > \meaning\deepermacro\par
> > \meaning\outermacro \par
> >
> >
> 
> done
> ------------------------------------------------------------------------
> r7186 | luigi.scarso at gmail.com | 2019-09-01 15:25:05 +0200 (Sun, 01 Sep
> 2019) | 1 line
> 
> permit nested runtoks in more complex situations of nesting (HH)
> ------------------------------------------------------------------------

Awesome, thank you.
One further question out of academic interest: What was the problem with
my former proposed fix? It seems to give the right result in your example
and I currently can't see why it would have problems with nesting.

Marcel

From j.hagen at xs4all.nl  Sun Sep  1 23:28:58 2019
From: j.hagen at xs4all.nl (Hans Hagen)
Date: Sun, 1 Sep 2019 23:28:58 +0200
Subject: [Dev-luatex] Assignments in runtoks
In-Reply-To: <20190901133955.bxjixdfskj44qe22@yoga>
References: <20190829124151.psikykgmvdmcaynr@yoga>
 <9109e3b0-9bf4-a858-3086-050d711375e1@xs4all.nl>
 <CAG5iGsCSX8G+H98qXasRkxOud0ffuNtCHNEGbeBRgzF873h_Pg@mail.gmail.com>
 <20190901133955.bxjixdfskj44qe22@yoga>
Message-ID: <01088d61-f8c7-9ce0-c976-5f59a8560984@xs4all.nl>

On 9/1/2019 3:39 PM, Marcel Fabian KrÃ¼ger wrote:
>>> fixed in next luatex but in a different way as we then also need to
>>> support deeper nesting
>>>
>>> \toks2{\def\deepermacro{deeper}}
>>>
>>> \toks0{\def\innermacro{inner}\def\deepermacro{weird}\directlua{tex.runtoks(2)}}
>>>
>>> \edef\outermacro{outer\directlua{tex.runtoks(0)}}
>>>
>>> \meaning\innermacro \par
>>> \meaning\deepermacro\par
>>> \meaning\outermacro \par
>>>
>>>
>>
>> done
>> ------------------------------------------------------------------------
>> r7186 | luigi.scarso at gmail.com | 2019-09-01 15:25:05 +0200 (Sun, 01 Sep
>> 2019) | 1 line
>>
>> permit nested runtoks in more complex situations of nesting (HH)
>> ------------------------------------------------------------------------
> 
> Awesome, thank you.
> One further question out of academic interest: What was the problem with
> my former proposed fix? It seems to give the right result in your example
> and I currently can't see why it would have problems with nesting.
It's more a matter of symmetry ... to have it in the end_local handler 
so that it happens at the same level. (Ok, I could change that but first 
I need to ponder other side effects like node being produced when in an 
edef. I knew that was an issue and could live with that because of 
chicken-egg issues, but still. Maybe some variants in due time. Low 
priority stuff.)

Hans

-----------------------------------------------------------------
                                           Hans Hagen | PRAGMA ADE
               Ridderstraat 27 | 8061 GH Hasselt | The Netherlands
        tel: 038 477 53 69 | www.pragma-ade.nl | www.pragma-pod.nl
-----------------------------------------------------------------

From tex at 2krueger.de  Wed Sep  4 14:34:29 2019
From: tex at 2krueger.de (Marcel Fabian =?utf-8?Q?Kr=C3=BCger?=)
Date: Wed, 4 Sep 2019 14:34:29 +0200
Subject: [Dev-luatex] Assignments in runtoks
In-Reply-To: <CAG5iGsATyjnopH1TX9sirnFcdP0hr+7p7zHkBXynAkN=3uCRzg@mail.gmail.com>
References: <20190829124151.psikykgmvdmcaynr@yoga>
 <9109e3b0-9bf4-a858-3086-050d711375e1@xs4all.nl>
 <CAG5iGsCSX8G+H98qXasRkxOud0ffuNtCHNEGbeBRgzF873h_Pg@mail.gmail.com>
 <20190901133955.bxjixdfskj44qe22@yoga>
 <12ccfd41-f727-0177-8ecf-48c4987318c0@xs4all.nl>
 <CAG5iGsATyjnopH1TX9sirnFcdP0hr+7p7zHkBXynAkN=3uCRzg@mail.gmail.com>
Message-ID: <20190904123429.gswnkofpn6f7ljvu@yoga>

On Mon, Sep 02, 2019 at 07:13:36PM +0200, luigi scarso wrote:
> On Mon, Sep 2, 2019 at 10:59 AM Hans Hagen <j.hagen at xs4all.nl> wrote:
> 
> >
> > (I will send the patches to Luigi later today.)
> >
> >
> ------------------------------------------------------------------------
> r7188 | luigi.scarso at gmail.com | 2019-09-02 19:12:22 +0200 (Mon, 02 Sep
> 2019) | 1 line
> 
> some cleanup + extra features runtoks (HH)
> ------------------------------------------------------------------------
> 

This introduced a bug when `tex.runtoks` is called with a function:
In ltexlib.c, runtoks function branch, token_info(r) is set twice and
token_info(r) is never set. Also the first assignment to `token_info(t)`
sets it to `token_val(end_local_code,0);`, but `end_local_code` is not
a command code, so this becomes a space token. Also the supplied
function is never called because the local call token is no longer
inserted.

-- Marcel

From j.hagen at xs4all.nl  Wed Sep  4 18:21:38 2019
From: j.hagen at xs4all.nl (Hans Hagen)
Date: Wed, 4 Sep 2019 18:21:38 +0200
Subject: [Dev-luatex] Assignments in runtoks
In-Reply-To: <20190904123429.gswnkofpn6f7ljvu@yoga>
References: <20190829124151.psikykgmvdmcaynr@yoga>
 <9109e3b0-9bf4-a858-3086-050d711375e1@xs4all.nl>
 <CAG5iGsCSX8G+H98qXasRkxOud0ffuNtCHNEGbeBRgzF873h_Pg@mail.gmail.com>
 <20190901133955.bxjixdfskj44qe22@yoga>
 <12ccfd41-f727-0177-8ecf-48c4987318c0@xs4all.nl>
 <CAG5iGsATyjnopH1TX9sirnFcdP0hr+7p7zHkBXynAkN=3uCRzg@mail.gmail.com>
 <20190904123429.gswnkofpn6f7ljvu@yoga>
Message-ID: <97a436a6-e1f0-12f7-2d42-c55c52d39e64@xs4all.nl>

On 9/4/2019 2:34 PM, Marcel Fabian KrÃ¼ger wrote:
> On Mon, Sep 02, 2019 at 07:13:36PM +0200, luigi scarso wrote:
>> On Mon, Sep 2, 2019 at 10:59 AM Hans Hagen <j.hagen at xs4all.nl> wrote:
>>
>>>
>>> (I will send the patches to Luigi later today.)
>>>
>>>
>> ------------------------------------------------------------------------
>> r7188 | luigi.scarso at gmail.com | 2019-09-02 19:12:22 +0200 (Mon, 02 Sep
>> 2019) | 1 line
>>
>> some cleanup + extra features runtoks (HH)
>> ------------------------------------------------------------------------
>>
> 
> This introduced a bug when `tex.runtoks` is called with a function:
> In ltexlib.c, runtoks function branch, token_info(r) is set twice and
> token_info(r) is never set. Also the first assignment to `token_info(t)`
> sets it to `token_val(end_local_code,0);`, but `end_local_code` is not
> a command code, so this becomes a space token. Also the supplied
> function is never called because the local call token is no longer
> inserted.
ah, a mix up with luametatex (from which i copied some code) .. thanks 
for noticing

Hans

-----------------------------------------------------------------
                                           Hans Hagen | PRAGMA ADE
               Ridderstraat 27 | 8061 GH Hasselt | The Netherlands
        tel: 038 477 53 69 | www.pragma-ade.nl | www.pragma-pod.nl
-----------------------------------------------------------------

From tex at 2krueger.de  Thu Sep  5 09:48:47 2019
From: tex at 2krueger.de (Marcel Fabian =?utf-8?Q?Kr=C3=BCger?=)
Date: Thu, 5 Sep 2019 09:48:47 +0200
Subject: [Dev-luatex] Assignments in runtoks
In-Reply-To: <97a436a6-e1f0-12f7-2d42-c55c52d39e64@xs4all.nl>
References: <20190829124151.psikykgmvdmcaynr@yoga>
 <9109e3b0-9bf4-a858-3086-050d711375e1@xs4all.nl>
 <CAG5iGsCSX8G+H98qXasRkxOud0ffuNtCHNEGbeBRgzF873h_Pg@mail.gmail.com>
 <20190901133955.bxjixdfskj44qe22@yoga>
 <12ccfd41-f727-0177-8ecf-48c4987318c0@xs4all.nl>
 <CAG5iGsATyjnopH1TX9sirnFcdP0hr+7p7zHkBXynAkN=3uCRzg@mail.gmail.com>
 <20190904123429.gswnkofpn6f7ljvu@yoga>
 <97a436a6-e1f0-12f7-2d42-c55c52d39e64@xs4all.nl>
Message-ID: <20190905074847.pj4hpanjs35odl4s@yoga>

> > This introduced a bug when `tex.runtoks` is called with a function:
> > In ltexlib.c, runtoks function branch, token_info(r) is set twice and
> > token_info(r) is never set. Also the first assignment to `token_info(t)`
> > sets it to `token_val(end_local_code,0);`, but `end_local_code` is not
> > a command code, so this becomes a space token. Also the supplied
> > function is never called because the local call token is no longer
> > inserted.
> ah, a mix up with luametatex (from which i copied some code) .. thanks for
> noticing

The new version works great, thank you.

Marcel

From tex at 2krueger.de  Tue Sep 17 14:52:45 2019
From: tex at 2krueger.de (Marcel Fabian =?utf-8?Q?Kr=C3=BCger?=)
Date: Tue, 17 Sep 2019 14:52:45 +0200
Subject: [Dev-luatex] used_font always return false
Message-ID: <20190917125245.m3f264rap4vhm5al@yoga>

Hi,

the node(.direct).uses_font helpers currently always return false for
glyph nodes:
In the implementation

static int lua_nodelib_direct_uses_font(lua_State * L)
{
    halfword n = lua_tointeger(L,1);
    halfword f = lua_tointeger(L,2);
    halfword p;
    if (type(n) == glyph_node) {
        lua_pushboolean(L,font(n) == f);
    } else if (type(n) == disc_node) {
        uses_font_disc(pre_break,p,n);
        uses_font_disc(post_break,p,n);
        uses_font_disc(no_break,p,n);
    }
    /* todo: other node types */
    lua_pushboolean(L,0);
    return 1;
}

the actual result is first calculated, but then the last pushboolean
pushes a `false` on top of the stack and return this false.
It could e.g. be fixed by adding a `return 1;` at the end of the first
if block. `disc` nodes are not affected because uses_font_disc is a
macro containing `return`.

A minimal example in plain LuaTeX:

\directlua{
  local g = node.new'glyph'
  g.font = font.current()
  if not node.uses_font(g, font.current()) then
    error'This should not happen'
  end
  node.free(g)
}
\bye


-- Marcel

From luigi.scarso at gmail.com  Tue Sep 17 14:56:20 2019
From: luigi.scarso at gmail.com (luigi scarso)
Date: Tue, 17 Sep 2019 14:56:20 +0200
Subject: [Dev-luatex] used_font always return false
In-Reply-To: <20190917125245.m3f264rap4vhm5al@yoga>
References: <20190917125245.m3f264rap4vhm5al@yoga>
Message-ID: <CAG5iGsDAd6zH10KsOgobh6S08Aw8fjrUXWOHT4fB_27YbtfB5w@mail.gmail.com>

On Tue, Sep 17, 2019 at 2:52 PM Marcel Fabian KrÃ¼ger <tex at 2krueger.de>
wrote:

> Hi,
>
> the node(.direct).uses_font helpers currently always return false for
> glyph nodes:
> In the implementation
>
> static int lua_nodelib_direct_uses_font(lua_State * L)
> {
>     halfword n = lua_tointeger(L,1);
>     halfword f = lua_tointeger(L,2);
>     halfword p;
>     if (type(n) == glyph_node) {
>         lua_pushboolean(L,font(n) == f);
>     } else if (type(n) == disc_node) {
>         uses_font_disc(pre_break,p,n);
>         uses_font_disc(post_break,p,n);
>         uses_font_disc(no_break,p,n);
>     }
>     /* todo: other node types */
>     lua_pushboolean(L,0);
>     return 1;
> }
>
> the actual result is first calculated, but then the last pushboolean
> pushes a `false` on top of the stack and return this false.
> It could e.g. be fixed by adding a `return 1;` at the end of the first
> if block. `disc` nodes are not affected because uses_font_disc is a
> macro containing `return`.
>
> A minimal example in plain LuaTeX:
>
> \directlua{
>   local g = node.new'glyph'
>   g.font = font.current()
>   if not node.uses_font(g, font.current()) then
>     error'This should not happen'
>   end
>   node.free(g)
> }
> \bye
>
>

hm, probably a missed else, ie

} else {
    /* todo: other node types */
    lua_pushboolean(L,0);
 }

-- 
luigi
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mailman.ntg.nl/pipermail/dev-luatex/attachments/20190917/909f9dff/attachment.html>

From tex at 2krueger.de  Tue Sep 17 15:27:51 2019
From: tex at 2krueger.de (=?ISO-8859-1?Q?Marcel_Kr=FCger?=)
Date: Tue, 17 Sep 2019 15:27:51 +0200
Subject: [Dev-luatex] used_font always return false
In-Reply-To: <CAG5iGsDAd6zH10KsOgobh6S08Aw8fjrUXWOHT4fB_27YbtfB5w@mail.gmail.com>
References: <20190917125245.m3f264rap4vhm5al@yoga>
 <CAG5iGsDAd6zH10KsOgobh6S08Aw8fjrUXWOHT4fB_27YbtfB5w@mail.gmail.com>
Message-ID: <91CD78EA-9236-4785-A1F9-78A8732A7474@2krueger.de>



On 17 September 2019 14:56:20 CEST, luigi scarso <luigi.scarso at gmail.com> wrote:
>On Tue, Sep 17, 2019 at 2:52 PM Marcel Fabian KrÃ¼ger <tex at 2krueger.de>
>wrote:
>
>> Hi,
>>
>> the node(.direct).uses_font helpers currently always return false for
>> glyph nodes:
>> In the implementation
>>
>> static int lua_nodelib_direct_uses_font(lua_State * L)
>> {
>>     halfword n = lua_tointeger(L,1);
>>     halfword f = lua_tointeger(L,2);
>>     halfword p;
>>     if (type(n) == glyph_node) {
>>         lua_pushboolean(L,font(n) == f);
>>     } else if (type(n) == disc_node) {
>>         uses_font_disc(pre_break,p,n);
>>         uses_font_disc(post_break,p,n);
>>         uses_font_disc(no_break,p,n);
>>     }
>>     /* todo: other node types */
>>     lua_pushboolean(L,0);
>>     return 1;
>> }
>>
>> the actual result is first calculated, but then the last pushboolean
>> pushes a `false` on top of the stack and return this false.
>> It could e.g. be fixed by adding a `return 1;` at the end of the
>first
>> if block. `disc` nodes are not affected because uses_font_disc is a
>> macro containing `return`.
>>
>> A minimal example in plain LuaTeX:
>>
>> \directlua{
>>   local g = node.new'glyph'
>>   g.font = font.current()
>>   if not node.uses_font(g, font.current()) then
>>     error'This should not happen'
>>   end
>>   node.free(g)
>> }
>> \bye
>>
>>
>
>hm, probably a missed else, ie
>
>} else {
>    /* todo: other node types */
>    lua_pushboolean(L,0);
> }

That wouldn't quite work because the uses_font_disc code only returns if the result is true, so pushboolean would also be needed in the disc case.

From luigi.scarso at gmail.com  Tue Sep 17 15:42:38 2019
From: luigi.scarso at gmail.com (luigi scarso)
Date: Tue, 17 Sep 2019 15:42:38 +0200
Subject: [Dev-luatex] used_font always return false
In-Reply-To: <91CD78EA-9236-4785-A1F9-78A8732A7474@2krueger.de>
References: <20190917125245.m3f264rap4vhm5al@yoga>
 <CAG5iGsDAd6zH10KsOgobh6S08Aw8fjrUXWOHT4fB_27YbtfB5w@mail.gmail.com>
 <91CD78EA-9236-4785-A1F9-78A8732A7474@2krueger.de>
Message-ID: <CAG5iGsCMttJ_8g=2=3swRnVYG9ybCNx1RdKnVwmB8obydi2tfQ@mail.gmail.com>

On Tue, Sep 17, 2019 at 3:27 PM Marcel KrÃ¼ger <tex at 2krueger.de> wrote:

>
>
> >
> >} else {
> >    /* todo: other node types */
> >    lua_pushboolean(L,0);
> > }
>
> That wouldn't quite work because the uses_font_disc code only returns if
> the result is true, so pushboolean would also be needed in the disc case.
>

yes, with a note that
uses_font_disc can return .


-- 
luigi
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mailman.ntg.nl/pipermail/dev-luatex/attachments/20190917/678e35e2/attachment.html>

From j.hagen at xs4all.nl  Thu Sep 19 20:29:35 2019
From: j.hagen at xs4all.nl (Hans Hagen)
Date: Thu, 19 Sep 2019 20:29:35 +0200
Subject: [Dev-luatex] used_font always return false
In-Reply-To: <CAG5iGsDAd6zH10KsOgobh6S08Aw8fjrUXWOHT4fB_27YbtfB5w@mail.gmail.com>
References: <20190917125245.m3f264rap4vhm5al@yoga>
 <CAG5iGsDAd6zH10KsOgobh6S08Aw8fjrUXWOHT4fB_27YbtfB5w@mail.gmail.com>
Message-ID: <df44079f-51c1-b7e2-94e0-110f89cb3ada@xs4all.nl>

On 9/17/2019 2:56 PM, luigi scarso wrote:
> 
> 
> On Tue, Sep 17, 2019 at 2:52 PM Marcel Fabian KrÃ¼ger <tex at 2krueger.de 
> <mailto:tex at 2krueger.de>> wrote:
> 
>     Hi,
> 
>     the node(.direct).uses_font helpers currently always return false for
>     glyph nodes:
>     In the implementation
> 
>     static int lua_nodelib_direct_uses_font(lua_State * L)
>     {
>      Â  Â  halfword n = lua_tointeger(L,1);
>      Â  Â  halfword f = lua_tointeger(L,2);
>      Â  Â  halfword p;
>      Â  Â  if (type(n) == glyph_node) {
>      Â  Â  Â  Â  lua_pushboolean(L,font(n) == f);
>      Â  Â  } else if (type(n) == disc_node) {
>      Â  Â  Â  Â  uses_font_disc(pre_break,p,n);
>      Â  Â  Â  Â  uses_font_disc(post_break,p,n);
>      Â  Â  Â  Â  uses_font_disc(no_break,p,n);
>      Â  Â  }
>      Â  Â  /* todo: other node types */
>      Â  Â  lua_pushboolean(L,0);
>      Â  Â  return 1;
>     }
> 
>     the actual result is first calculated, but then the last pushboolean
>     pushes a `false` on top of the stack and return this false.
>     It could e.g. be fixed by adding a `return 1;` at the end of the first
>     if block. `disc` nodes are not affected because uses_font_disc is a
>     macro containing `return`.
> 
>     A minimal example in plain LuaTeX:
> 
>     \directlua{
>      Â  local g = node.new'glyph'
>      Â  g.font = font.current()
>      Â  if not node.uses_font(g, font.current()) then
>      Â  Â  error'This should not happen'
>      Â  end
>      Â  node.free(g)
>     }
>     \bye
> 
> 
> 
> hm, probably a missed else, ie
> 
> } else {
>  Â  Â  /* todo: other node types */
>  Â  Â  lua_pushboolean(L,0);
>  Â }
        if (type(n) == glyph_node) {
               lua_pushboolean(L,font(n) == f);
               return 1;

in the luatex version two times return 1 needs to be added (sorry, it 
went unnoticed because in lm hese returns are there)

Hans

-----------------------------------------------------------------
                                           Hans Hagen | PRAGMA ADE
               Ridderstraat 27 | 8061 GH Hasselt | The Netherlands
        tel: 038 477 53 69 | www.pragma-ade.nl | www.pragma-pod.nl
-----------------------------------------------------------------

From luigi.scarso at gmail.com  Sat Sep 21 09:46:31 2019
From: luigi.scarso at gmail.com (luigi scarso)
Date: Sat, 21 Sep 2019 09:46:31 +0200
Subject: [Dev-luatex] used_font always return false
In-Reply-To: <df44079f-51c1-b7e2-94e0-110f89cb3ada@xs4all.nl>
References: <20190917125245.m3f264rap4vhm5al@yoga>
 <CAG5iGsDAd6zH10KsOgobh6S08Aw8fjrUXWOHT4fB_27YbtfB5w@mail.gmail.com>
 <df44079f-51c1-b7e2-94e0-110f89cb3ada@xs4all.nl>
Message-ID: <CAG5iGsBXAa3jv=9q1RxJZnv27ZBmEG-i_VJ5vqi1WfogQWfxZA@mail.gmail.com>

On Thu, Sep 19, 2019 at 8:29 PM Hans Hagen <j.hagen at xs4all.nl> wrote:

> On 9/17/2019 2:56 PM, luigi scarso wrote:
> >
> >
> > On Tue, Sep 17, 2019 at 2:52 PM Marcel Fabian KrÃ¼ger <tex at 2krueger.de
> > <mailto:tex at 2krueger.de>> wrote:
> >
> >     Hi,
> >
> >     the node(.direct).uses_font helpers currently always return false for
> >     glyph nodes:
> >     In the implementation
> >
> >     static int lua_nodelib_direct_uses_font(lua_State * L)
> >     {
> >          halfword n = lua_tointeger(L,1);
> >          halfword f = lua_tointeger(L,2);
> >          halfword p;
> >          if (type(n) == glyph_node) {
> >              lua_pushboolean(L,font(n) == f);
> >          } else if (type(n) == disc_node) {
> >              uses_font_disc(pre_break,p,n);
> >              uses_font_disc(post_break,p,n);
> >              uses_font_disc(no_break,p,n);
> >          }
> >          /* todo: other node types */
> >          lua_pushboolean(L,0);
> >          return 1;
> >     }
> >
> >     the actual result is first calculated, but then the last pushboolean
> >     pushes a `false` on top of the stack and return this false.
> >     It could e.g. be fixed by adding a `return 1;` at the end of the
> first
> >     if block. `disc` nodes are not affected because uses_font_disc is a
> >     macro containing `return`.
> >
> >     A minimal example in plain LuaTeX:
> >
> >     \directlua{
> >        local g = node.new'glyph'
> >        g.font = font.current()
> >        if not node.uses_font(g, font.current()) then
> >          error'This should not happen'
> >        end
> >        node.free(g)
> >     }
> >     \bye
> >
> >
> >
> > hm, probably a missed else, ie
> >
> > } else {
> >      /* todo: other node types */
> >      lua_pushboolean(L,0);
> >   }
>         if (type(n) == glyph_node) {
>                lua_pushboolean(L,font(n) == f);
>                return 1;
>
> in the luatex version two times return 1 needs to be added (sorry, it
> went unnoticed because in lm hese returns are there)
>
> Hans
>

Committed revision 7191

-- 
luigi
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mailman.ntg.nl/pipermail/dev-luatex/attachments/20190921/57b66a90/attachment.html>

