From luigi.scarso at gmail.com  Mon Jul  1 00:04:10 2019
From: luigi.scarso at gmail.com (luigi scarso)
Date: Mon, 1 Jul 2019 00:04:10 +0200
Subject: [Dev-luatex] luatex 1.11: bfchar entry empty in mode=harf
In-Reply-To: <CAKgnQDRR+OBCLdDpWuqs9QvMoxkqmwk7YfOrDyYKiPNgvzpzig@mail.gmail.com>
References: <zm6r2yf3pytg.dlg@nililand.de>
 <CAKgnQDT_WZTS96kRMW5Y+udCQiQ0Y8PDfFeOY6CZDeEfXUERcQ@mail.gmail.com>
 <13qiq73p749qq.dlg@nililand.de>
 <CAKgnQDRR+OBCLdDpWuqs9QvMoxkqmwk7YfOrDyYKiPNgvzpzig@mail.gmail.com>
Message-ID: <CAG5iGsBBmb1OBXANoedmiNbAe2xQPnzhfUnyqWPqXn=0J2-diQ@mail.gmail.com>

here it  seems ok
# luatex --credits
This is LuaTeX, Version 1.11.0 (TeX Live 2020/dev)

The LuaTeX team is Hans Hagen, Hartmut Henkel, Taco Hoekwater, Luigi Scarso.

LuaTeX merges and builds upon (parts of) the code from these projects:

tex       : Donald Knuth
etex      : Peter Breitenlohner, Phil Taylor and friends
omega     : John Plaice and Yannis Haralambous
aleph     : Giuseppe Bilotta
pdftex    : Han The Thanh and friends
kpathsea  : Karl Berry, Olaf Weber and others
lua       : Roberto Ierusalimschy, Waldemar Celes and Luiz Henrique de
Figueiredo
metapost  : John Hobby, Taco Hoekwater, Luigi Scarso, Hans Hagen and friends
pplib     : PaweÅ Jackowski
fontforge : George Williams (partial)
luajit    : Mike Pall (used in LuajitTeX)

Compiled with libharfbuzz 2.5.3; using 2.5.3
Compiled with libpng 1.6.37; using 1.6.37
Compiled with lua version 5.3.5
Compiled with mplib version 2.00
Compiled with zlib 1.2.11; using 1.2.11

Development id: 7169

On Sun, Jun 30, 2019 at 11:52 PM Khaled Hosny <dr.khaled.hosny at gmail.com>
wrote:

> On Sun, Jun 30, 2019 at 11:29 PM Ulrike Fischer <news3 at nililand.de> wrote:
> >
> > Am Sun, 30 Jun 2019 23:09:21 +0200 schrieb Khaled Hosny:
> >
> > > On Sun, Jun 30, 2019 at 12:34 AM Ulrike Fischer <news3 at nililand.de>
> wrote:
> > >> With harftex or an older luatex I get:
> > >>
> > >> 1 beginbfchar
> > >> <0052> <0031>
> > >> endbfchar
> > >
> > > By older luatex I assume luatex with non-harf mode?
> > >
> > >> What's going on here?
> > >
> > > The Lua code for harf mode uses a new callback in HarfTeX to set the
> > > glyphs tounicode values, because the existing mechanisms in luatex are
> > > too slow
> > > for the way I do it. I set tounicode based on shaping output, so need
> > > to be done incrementally after loading the font, while luaotfload does
> > > it by analyzing the fonts cmap and GSUB tables and can set them at
> > > once while loading the font.
> >
> > hm. The interesting thing is that it works with luatex 1.11 if I
> > load harf-luaotfload in the document, it only fails if I load it in
> > \everyjob through a setting in a local lualatex.ini I used to build
> > the format. Why is this?
>
> If you are seeing non-empty tounicodes then most likely the font is
> not processed in harf mode, the only way I set them is through a
> callback that is missing from luatex.
>
> Regards,
> Khaled
> _______________________________________________
> dev-luatex mailing list
> dev-luatex at ntg.nl
> https://mailman.ntg.nl/mailman/listinfo/dev-luatex
>


-- 
luigi
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mailman.ntg.nl/pipermail/dev-luatex/attachments/20190701/6837a28f/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: test3.zip
Type: application/zip
Size: 4936 bytes
Desc: not available
URL: <http://mailman.ntg.nl/pipermail/dev-luatex/attachments/20190701/6837a28f/attachment.zip>

From dr.khaled.hosny at gmail.com  Mon Jul  1 00:19:26 2019
From: dr.khaled.hosny at gmail.com (Khaled Hosny)
Date: Mon, 1 Jul 2019 00:19:26 +0200
Subject: [Dev-luatex] luatex 1.11: bfchar entry empty in mode=harf
In-Reply-To: <zm6r2yf3pytg.dlg@nililand.de>
References: <zm6r2yf3pytg.dlg@nililand.de>
Message-ID: <CAKgnQDRO7pnSFubUxt5MoDKc144kL686AFFngMvcmisQFCqi_g@mail.gmail.com>

On Sun, Jun 30, 2019 at 12:34 AM Ulrike Fischer <news3 at nililand.de> wrote:
> \font\test={texgyreheros:mode=harf;}
> abcÃ¤Ã¼Ã¶

You are defining the font but not actually using it, so what you are
seeing is the default font.

From news3 at nililand.de  Mon Jul  1 14:49:51 2019
From: news3 at nililand.de (Ulrike Fischer)
Date: Mon, 1 Jul 2019 14:49:51 +0200
Subject: [Dev-luatex] luatex 1.11: bfchar entry empty in mode=harf
References: <zm6r2yf3pytg.dlg@nililand.de>
 <CAKgnQDT_WZTS96kRMW5Y+udCQiQ0Y8PDfFeOY6CZDeEfXUERcQ@mail.gmail.com>
 <13qiq73p749qq.dlg@nililand.de>
 <CAKgnQDRR+OBCLdDpWuqs9QvMoxkqmwk7YfOrDyYKiPNgvzpzig@mail.gmail.com>
 <CAG5iGsBBmb1OBXANoedmiNbAe2xQPnzhfUnyqWPqXn=0J2-diQ@mail.gmail.com>
Message-ID: <1km4hpvteagyf$.dlg@nililand.de>

Am Mon, 1 Jul 2019 00:04:10 +0200 schrieb luigi scarso:

> here it  seems ok
> # luatex --credits
 
> Development id: 7169

I still have id 7168, but this clearly don't work correctly (no
ToUnicode-entries for fonts using harf-mode), even if I remove all
my local stuff. And from Khaled's remark it is clear that it is due
to the missing callback.

I will wait for updates of the binaries and then check again.

-- 
Ulrike Fischer 
http://www.troubleshooting-tex.de/


From news3 at nililand.de  Mon Jul  1 14:51:05 2019
From: news3 at nililand.de (Ulrike Fischer)
Date: Mon, 1 Jul 2019 14:51:05 +0200
Subject: [Dev-luatex] luatex 1.11: bfchar entry empty in mode=harf
References: <zm6r2yf3pytg.dlg@nililand.de>
 <CAKgnQDRO7pnSFubUxt5MoDKc144kL686AFFngMvcmisQFCqi_g@mail.gmail.com>
Message-ID: <v2h3f2fhlyth$.dlg@nililand.de>

Am Mon, 1 Jul 2019 00:19:26 +0200 schrieb Khaled Hosny:

>> \font\test={texgyreheros:mode=harf;}
>> abcÃ¤Ã¼Ã¶
> 
> You are defining the font but not actually using it, so what you are
> seeing is the default font.

Ah yes ;-). That explains the difference between harf code in the
format and in the document: only the first affect actually the
default fonts.


-- 
Ulrike Fischer 
http://www.troubleshooting-tex.de/


From luigi.scarso at gmail.com  Mon Jul  1 15:05:36 2019
From: luigi.scarso at gmail.com (luigi scarso)
Date: Mon, 1 Jul 2019 15:05:36 +0200
Subject: [Dev-luatex] luatex 1.11: bfchar entry empty in mode=harf
In-Reply-To: <CAKgnQDT_WZTS96kRMW5Y+udCQiQ0Y8PDfFeOY6CZDeEfXUERcQ@mail.gmail.com>
References: <zm6r2yf3pytg.dlg@nililand.de>
 <CAKgnQDT_WZTS96kRMW5Y+udCQiQ0Y8PDfFeOY6CZDeEfXUERcQ@mail.gmail.com>
Message-ID: <CAG5iGsBRAkK9w7KR_heWtN2Cr1PT2NG8tFCzsFxBXCJjaDchUg@mail.gmail.com>

On Sun, Jun 30, 2019 at 11:09 PM Khaled Hosny <dr.khaled.hosny at gmail.com>
wrote:

> On Sun, Jun 30, 2019 at 12:34 AM Ulrike Fischer <news3 at nililand.de> wrote:
> > With harftex or an older luatex I get:
> >
> > 1 beginbfchar
> > <0052> <0031>
> > endbfchar
>
> By older luatex I assume luatex with non-harf mode?
>
> > What's going on here?
>
> The Lua code for harf mode uses a new callback in HarfTeX to set the
> glyphs tounicode values


of course if it's in harftexdir only , then it's not in  luatex.
I update  only luaharfbuzz.


-- 
luigi
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mailman.ntg.nl/pipermail/dev-luatex/attachments/20190701/0f7e149a/attachment.html>

From luigi.scarso at gmail.com  Mon Jul  8 09:04:51 2019
From: luigi.scarso at gmail.com (luigi scarso)
Date: Mon, 8 Jul 2019 09:04:51 +0200
Subject: [Dev-luatex] luatex and harfbuzz 2.5.1
In-Reply-To: <CAG5iGsA=brP5cTXFWJ4nB_0jKoJfw0A0YHhSp9NDZY=914X7WA@mail.gmail.com>
References: <CAG5iGsA=brP5cTXFWJ4nB_0jKoJfw0A0YHhSp9NDZY=914X7WA@mail.gmail.com>
Message-ID: <CAG5iGsCORmgZgXbHE3HU0FzwbU_HZyzqsj5xrDtEcQ9rn-TU0Q@mail.gmail.com>

On Tue, Jun 18, 2019 at 8:48 PM luigi scarso <luigi.scarso at gmail.com> wrote:

> In experimental there is now
> luatex 1.11.0 with harfbuzz 2.5.1
> It follows from the development of harftex by K. Hosny.
> Please note that the code is
> 1) in experimental
> 2) marked as work in progress
> so  it can stay as is, it can be changed , it can be removed completely.
>
>
>
In experimental and in texlive there are now luatex &  luahbtex and jit
variants.
Briefly, after some discussions emerged the point that luatex with hb
statically linked
very likely doesn't work in workflows that already use luatex with a
dynamic  binding with a dll/so version of harfbuzz,
even considering the API stability of harfbuzz itself and the fact that now
the hb symbols are hidden.
In this way we preserve the workflows that use luatex, because there is no
harfbuzz code in luatex.

It's better to think   luahbtex  as "luatex + a binding to harfbuzz."
and not as a variant of luatex adapted to harfbuzz.
So any change in luatex will be in luahbtex, because there is a single
source.
On the other side, the only constrain  on the hb binding is that it cannot
modify the luatex source,
so in principle it can grow to cover all the  harfbuzz API  --- there are
of course others constrains to consider
as maintenance and compatibility with formats, just to say the  most
obvious.

-- 
luigi
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mailman.ntg.nl/pipermail/dev-luatex/attachments/20190708/a775578d/attachment.html>

From dr.khaled.hosny at gmail.com  Mon Jul  8 10:21:49 2019
From: dr.khaled.hosny at gmail.com (Khaled Hosny)
Date: Mon, 8 Jul 2019 10:21:49 +0200
Subject: [Dev-luatex] luatex and harfbuzz 2.5.1
In-Reply-To: <CAG5iGsCORmgZgXbHE3HU0FzwbU_HZyzqsj5xrDtEcQ9rn-TU0Q@mail.gmail.com>
References: <CAG5iGsA=brP5cTXFWJ4nB_0jKoJfw0A0YHhSp9NDZY=914X7WA@mail.gmail.com>
 <CAG5iGsCORmgZgXbHE3HU0FzwbU_HZyzqsj5xrDtEcQ9rn-TU0Q@mail.gmail.com>
Message-ID: <CAKgnQDQAsNSYVVTSW5+a2Ori9MyRaJtCSzNsEW7TUdR1SxsHQQ@mail.gmail.com>

On Mon, Jul 8, 2019 at 9:05 AM luigi scarso <luigi.scarso at gmail.com> wrote:
>
> even considering the API stability of harfbuzz itself


HarfBuzz has stable ABI/API and has been so even before version 1.0.0.

Regards,
Khaled

From luigi.scarso at gmail.com  Mon Jul  8 10:32:42 2019
From: luigi.scarso at gmail.com (luigi scarso)
Date: Mon, 8 Jul 2019 10:32:42 +0200
Subject: [Dev-luatex] luatex and harfbuzz 2.5.1
In-Reply-To: <CAKgnQDQAsNSYVVTSW5+a2Ori9MyRaJtCSzNsEW7TUdR1SxsHQQ@mail.gmail.com>
References: <CAG5iGsA=brP5cTXFWJ4nB_0jKoJfw0A0YHhSp9NDZY=914X7WA@mail.gmail.com>
 <CAG5iGsCORmgZgXbHE3HU0FzwbU_HZyzqsj5xrDtEcQ9rn-TU0Q@mail.gmail.com>
 <CAKgnQDQAsNSYVVTSW5+a2Ori9MyRaJtCSzNsEW7TUdR1SxsHQQ@mail.gmail.com>
Message-ID: <CAG5iGsDLSJiDucrMsxKG5PToUziEkowgDWY7Gzh1n0ZQEix0BA@mail.gmail.com>

On Mon, Jul 8, 2019 at 10:22 AM Khaled Hosny <dr.khaled.hosny at gmail.com>
wrote:

> On Mon, Jul 8, 2019 at 9:05 AM luigi scarso <luigi.scarso at gmail.com>
> wrote:
> >
> > even considering the API stability of harfbuzz itself
>
>
> HarfBuzz has stable ABI/API and has been so even before version 1.0.0.
>
> Regards,
> Khaled
>

1 )  "stable api" doesn't mean that that private implementation stays the
same.
This is (one of ) the  problem in using dynamic binding

2) "stable api" is a promise by the developer(s)  --- but already in
texlive there are  the TLpatches,
e.g Build/source/libs/harfbuzz/TLpatches


-- 
luigi
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mailman.ntg.nl/pipermail/dev-luatex/attachments/20190708/7233497f/attachment.html>

From luigi.scarso at gmail.com  Sat Jul 20 18:09:35 2019
From: luigi.scarso at gmail.com (luigi scarso)
Date: Sat, 20 Jul 2019 18:09:35 +0200
Subject: [Dev-luatex] linebreak_filter
In-Reply-To: <CAG5iGsA_qGRbxzopG9cmbVWVeQ8GhX=zj1uv4cqDfmqUZSvr0g@mail.gmail.com>
References: <20190627115221.b5hjj6xuynrdn6go@yoga>
 <CAG5iGsA_qGRbxzopG9cmbVWVeQ8GhX=zj1uv4cqDfmqUZSvr0g@mail.gmail.com>
Message-ID: <CAG5iGsCdJjhhV9GAQPPGmVtSjkDkayZrykqQ7nZQPQxX_zgzYg@mail.gmail.com>

On Sun, Jun 30, 2019 at 11:05 AM luigi scarso <luigi.scarso at gmail.com>
wrote:

>
>
> On Thu, Jun 27, 2019 at 2:01 PM Marcel Fabian KrÃ¼ger <tex at 2krueger.de>
> wrote:
>
>> Hi everyone,
>>
>> in current LuaTeX versions, the result of `linebreak` filter is ignored
>> and instead it is always treated as if no node has been returned (so the
>> internal linebreak algorithm is applied). A minimal example:
>>
>>
>> \directlua{
>> callback.register("linebreak_filter", function(nodes)
>>   return node.hpack(nodes)
>> end)
>> }
>> Some very very very very very very very very very very very very very
>> very very very very very very very very very very very very very very
>> very very very very very very very very very very very very very very
>> very very very very very very very very very very very very very very
>> very very very very very very very very very very very very very very
>> very very very long paragraph.
>> \bye
>>
>> You would expect the whole paragraph to be set in a single line, but
>> normal paragraph breaking is applies instead. This is caused by a change
>> in revision 6686 from Mar 29 2018 "experimental) possible fix for for lua
>> stack issue + consistent error handling (HH)". There in the function
>> lua_linebreak_callback, the change
>>
>>          return ret;
>>      }
>> +    lua_settop(Luas, s_top);
>>      p = lua_touserdata(Luas, -1);
>>      if (p != NULL) {
>>          a = nodelist_from_lua(Luas);
>>          try_couple_nodes(*new_head,a);
>>          ret = 1;
>>      }
>> -    lua_settop(Luas, s_top);
>>      return ret;
>>
>> has been applied. I am not sure what kind of stack issue this was
>> supposed to fix, but as a side effect this moves the check for the node
>> return value after `lua_settop`, so the return value is already removed
>> from the stack when the test is done. So it is ignored.
>>
>
> hm, I will try reverting the code to see when the stack issue appears.
>
>


done in r7177, need to be checked.

--
luigi
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mailman.ntg.nl/pipermail/dev-luatex/attachments/20190720/20697e71/attachment.html>

From tex at 2krueger.de  Tue Jul 23 13:03:05 2019
From: tex at 2krueger.de (Marcel Fabian =?utf-8?Q?Kr=C3=BCger?=)
Date: Tue, 23 Jul 2019 13:03:05 +0200
Subject: [Dev-luatex] Embedding minimally used TTF fonts
Message-ID: <20190723110305.tj3kdcofibepers3@yoga>

Hi,

whenever LuaTeX loads a TTF font but only uses a single glyph,
which happens to be the notdef glyph (GID=0), LuaTeX complains about

    (type 2): there are no glyphs in the subset

Of course this isn't true, because the notdef *is* in the subset.

This happens because LuaTeX always includes the notdef glyph, so it is
never counted. The problem can be fixed by explicitly testing for this
case.


Best regards,

Marcel Krueger

diff --git a/source/texk/web2c/luatexdir/font/writetype2.c b/source/texk/web2c/luatexdir/font/writetype2.c
index 49193579b..0f889f707 100644
--- a/source/texk/web2c/luatexdir/font/writetype2.c
+++ b/source/texk/web2c/luatexdir/font/writetype2.c
@@ -289,7 +289,7 @@ boolean make_tt_subset(PDF pdf, fd_entry * fd, unsigned char *buff, int buflen)
             num_glyphs++;
         }
 
-        if (num_glyphs == 1) {
+        if (num_glyphs == 1 && used_chars[0] == 0) {
             normal_error("type 2","there are no glyphs in the subset");
         }
         if (tt_build_tables(sfont, glyphs, fd) < 0) {


From tex at 2krueger.de  Tue Jul 23 17:03:42 2019
From: tex at 2krueger.de (=?ISO-8859-1?Q?Marcel_Kr=FCger?=)
Date: Tue, 23 Jul 2019 17:03:42 +0200
Subject: [Dev-luatex] Embedding minimally used TTF fonts
In-Reply-To: <CAG5iGsD7=jc41YYzfbSNqYZOOnQHUDoyGbpDUjux_9ZOppG81w@mail.gmail.com>
References: <20190723110305.tj3kdcofibepers3@yoga>
 <CAG5iGsD7=jc41YYzfbSNqYZOOnQHUDoyGbpDUjux_9ZOppG81w@mail.gmail.com>
Message-ID: <09A5DFBE-8219-4B8D-9E23-A39EEBF0FDAB@2krueger.de>



On 23 July 2019 16:21:18 CEST, luigi scarso <luigi.scarso at gmail.com> wrote:
>On Tue, Jul 23, 2019 at 1:03 PM Marcel Fabian KrÃ¼ger <tex at 2krueger.de>
>wrote:
>
>> Hi,
>>
>> whenever LuaTeX loads a TTF font but only uses a single glyph,
>> which happens to be the notdef glyph (GID=0), LuaTeX complains about
>>
>>     (type 2): there are no glyphs in the subset
>>
>> Of course this isn't true, because the notdef *is* in the subset.
>>
>> This happens because LuaTeX always includes the notdef glyph, so it
>is
>> never counted. The problem can be fixed by explicitly testing for
>this
>> case.
>>
>>
>Do you have an example ?

Of course:

\starttext
\font\test=logix.ttf\test 
\char"F0000
\stoptext

See https://github.com/u-fischer/luaotfload/issues/73 for some context.

From luigi.scarso at gmail.com  Tue Jul 23 17:05:02 2019
From: luigi.scarso at gmail.com (luigi scarso)
Date: Tue, 23 Jul 2019 17:05:02 +0200
Subject: [Dev-luatex] Embedding minimally used TTF fonts
In-Reply-To: <09A5DFBE-8219-4B8D-9E23-A39EEBF0FDAB@2krueger.de>
References: <20190723110305.tj3kdcofibepers3@yoga>
 <CAG5iGsD7=jc41YYzfbSNqYZOOnQHUDoyGbpDUjux_9ZOppG81w@mail.gmail.com>
 <09A5DFBE-8219-4B8D-9E23-A39EEBF0FDAB@2krueger.de>
Message-ID: <CAG5iGsC14ADX8z7MZOQBiS1yaZhcUC2TZEm1TxhUOk4U-za81g@mail.gmail.com>

On Tue, Jul 23, 2019 at 5:03 PM Marcel KrÃ¼ger <tex at 2krueger.de> wrote:

>
>
> On 23 July 2019 16:21:18 CEST, luigi scarso <luigi.scarso at gmail.com>
> wrote:
> >On Tue, Jul 23, 2019 at 1:03 PM Marcel Fabian KrÃ¼ger <tex at 2krueger.de>
> >wrote:
> >
> >> Hi,
> >>
> >> whenever LuaTeX loads a TTF font but only uses a single glyph,
> >> which happens to be the notdef glyph (GID=0), LuaTeX complains about
> >>
> >>     (type 2): there are no glyphs in the subset
> >>
> >> Of course this isn't true, because the notdef *is* in the subset.
> >>
> >> This happens because LuaTeX always includes the notdef glyph, so it
> >is
> >> never counted. The problem can be fixed by explicitly testing for
> >this
> >> case.
> >>
> >>
> >Do you have an example ?
>
> Of course:
>
> \starttext
> \font\test=logix.ttf\test
> \char"F0000
> \stoptext
>
> See https://github.com/u-fischer/luaotfload/issues/73 for some context.
>

ok, thank you.
I will see it asap .
-- 
luigi
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mailman.ntg.nl/pipermail/dev-luatex/attachments/20190723/cfef72e2/attachment.html>

From luigi.scarso at gmail.com  Tue Jul 23 17:21:46 2019
From: luigi.scarso at gmail.com (luigi scarso)
Date: Tue, 23 Jul 2019 17:21:46 +0200
Subject: [Dev-luatex] Embedding minimally used TTF fonts
In-Reply-To: <CAG5iGsC14ADX8z7MZOQBiS1yaZhcUC2TZEm1TxhUOk4U-za81g@mail.gmail.com>
References: <20190723110305.tj3kdcofibepers3@yoga>
 <CAG5iGsD7=jc41YYzfbSNqYZOOnQHUDoyGbpDUjux_9ZOppG81w@mail.gmail.com>
 <09A5DFBE-8219-4B8D-9E23-A39EEBF0FDAB@2krueger.de>
 <CAG5iGsC14ADX8z7MZOQBiS1yaZhcUC2TZEm1TxhUOk4U-za81g@mail.gmail.com>
Message-ID: <CAG5iGsDy8x01ccwr1M4t0g9dZthqvo2Wd13MvX=1+=goCf+qTQ@mail.gmail.com>

On Tue, Jul 23, 2019 at 5:05 PM luigi scarso <luigi.scarso at gmail.com> wrote:

>
>
> On Tue, Jul 23, 2019 at 5:03 PM Marcel KrÃ¼ger <tex at 2krueger.de> wrote:
>
>>
>>
>> On 23 July 2019 16:21:18 CEST, luigi scarso <luigi.scarso at gmail.com>
>> wrote:
>> >On Tue, Jul 23, 2019 at 1:03 PM Marcel Fabian KrÃ¼ger <tex at 2krueger.de>
>> >wrote:
>> >
>> >> Hi,
>> >>
>> >> whenever LuaTeX loads a TTF font but only uses a single glyph,
>> >> which happens to be the notdef glyph (GID=0), LuaTeX complains about
>> >>
>> >>     (type 2): there are no glyphs in the subset
>> >>
>> >> Of course this isn't true, because the notdef *is* in the subset.
>> >>
>> >> This happens because LuaTeX always includes the notdef glyph, so it
>> >is
>> >> never counted. The problem can be fixed by explicitly testing for
>> >this
>> >> case.
>> >>
>> >>
>> >Do you have an example ?
>>
>> Of course:
>>
>> \starttext
>> \font\test=logix.ttf\test
>> \char"F0000
>> \stoptext
>>
>> See https://github.com/u-fischer/luaotfload/issues/73 for some context.
>>
>
> ok, thank you.
> I will see it asap .
>

ok, it's not a crash as said in
https://github.com/u-fischer/luaotfload/issues/73
but it's a normal error, i.e. something that  luatex  considers as an error
(of the user or of  the the font).

-- 
luigi
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mailman.ntg.nl/pipermail/dev-luatex/attachments/20190723/7647f47f/attachment.html>

