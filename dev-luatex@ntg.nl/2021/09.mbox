From lstonys at vtex.lt  Thu Sep  2 14:48:53 2021
From: lstonys at vtex.lt (Linas Stonys)
Date: Thu, 2 Sep 2021 15:48:53 +0300
Subject: [Dev-luatex] features request 1
In-Reply-To: <CAG5iGsAwf+h3Gv2Z96rY_kSxr5ezEvT515HVNT0BNuzSX2Zk3Q@mail.gmail.com>
References: <20210621145436.ek3h2qlghjfk2heh@beeblebrox>
 <CAG5iGsAf8-=4q1kB6VLHdPZ9BCdjbg0mxxBj_qCt2UsmxT6dLQ@mail.gmail.com>
 <ce4878b1-879e-5eab-bfee-ce459d1bc894@xs4all.nl>
 <CAG5iGsAwf+h3Gv2Z96rY_kSxr5ezEvT515HVNT0BNuzSX2Zk3Q@mail.gmail.com>
Message-ID: <0cfa88f6-45a5-903b-3c3e-683eb9c8a5f4@vtex.lt>

Hi,
1) sometimes styles requires to use small vertical indentation between 
paragraphs
and naturallyÂ  we choose toÂ  use \parskip and it leads to some painful 
programming dealing with spaces
For example after float if there will be paragraphÂ  the space will be 
\|textfloatsep + \parskip.
|The problem is that there is no control on this and I want to ask 
consider the possibility to add
someÂ  tokens list like \everyparskip{} whichÂ  would be inserted before 
\parskip where could be possible
to check \lastskip:

FOR EXAMPLE:
\parskip=5pt
\everypar{\showthe\lastskip}
a
\vskip20pt

\showthe\lastskip
b
\showlists
\bye

STDOUT:
 > 0.0pt.
<everypar> \showthe \lastskip

<to be read again>
a
l.3 a

?
 > 20.0pt.
l.6 \showthe\lastskip

?
 > 0.0pt.
<everypar> \showthe \lastskip

<to be read again>
b
l.7 b

POSSIBLE PLACE OF \everyparskip:
.\tenrm a
.\penalty 10000
.\glue(\parfillskip) 0.0 plus 1.0fil
.\glue(\rightskip) 0.0
\glue 20.0
----------- HERE
\glue(\parskip) 5.0
\glue(\baselineskip) 5.05556
\hbox(6.94444+0.0)x469.75499, glue set 444.1994fil, direction TLT
.\localpar
..\localinterlinepenalty=0
..\localbrokenpenalty=0
..\localleftbox=null
..\localrightbox=null
.\hbox(0.0+0.0)x20.0, direction TLT
.\tenrm b


Or \everyparskip{} could be always in the format like 
\everyparskip{\vskip\parskip} and one could deal with it.

Thanks, Linas


||
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mailman.ntg.nl/pipermail/dev-luatex/attachments/20210902/962af62c/attachment.htm>

From lstonys at vtex.lt  Thu Sep  2 15:15:14 2021
From: lstonys at vtex.lt (Linas Stonys)
Date: Thu, 2 Sep 2021 16:15:14 +0300
Subject: [Dev-luatex] features request 2
In-Reply-To: <CAG5iGsA-K7MEA+SC2T++txXOLyH5PmfYvFSeWeyQJL=o35T16w@mail.gmail.com>
References: <CAG5iGsDQKjZyxE1mwZFhOBbq55Z3ykPUbiy+sJ5D97kMfbDvqw@mail.gmail.com>
 <CAG5iGsA-K7MEA+SC2T++txXOLyH5PmfYvFSeWeyQJL=o35T16w@mail.gmail.com>
Message-ID: <ce29376a-8f9a-e6be-052d-d1adbb973916@vtex.lt>

Hi,
from time to time I face the problem where I need to do something inside 
tex group (simple group or box or table cell)
or to mark up some content with tex4ht tags ( or tagging pdf )
and sometimes \aftergroup is not enough. Â  So I would like to ask about 
new token or token list which would
be inserted before current group end (\beforeendgroup).


EXAMPLE:
\showboxdepth=\maxdimen
\showboxbreadth=\maxdimen
b
\hbox{x\aftergroup dÂ  x}
c
\showlists

LOG OUTPUT:
\tenrm b
\glue(\spaceskip) 3.33333 plus 1.66666 minus 1.11111
\hbox(4.30554+0.0)x13.88893, direction TLT
.\tenrm x
.\glue(\spaceskip) 3.33333 plus 1.66666 minus 1.11111
.\tenrm x
\tenrm d
\glue(\spaceskip) 3.33333 plus 1.66666 minus 1.11111
\tenrm c


COULD BE:
b
\hbox{x\beforeendgroup dÂ  x}
c
\showlists

LOG OUTPUT:
\tenrm b
\glue(\spaceskip) 3.33333 plus 1.66666 minus 1.11111
\hbox(4.30554+0.0)x13.88893, direction TLT
.\tenrm x
.\glue(\spaceskip) 3.33333 plus 1.66666 minus 1.11111
.\tenrm x
.\tenrm d
\tenrm c

Of course here needs to think about several same macros how they should 
queue the content.

Thanks in advance,
Linas


From j.hagen at xs4all.nl  Thu Sep  2 15:31:19 2021
From: j.hagen at xs4all.nl (Hans Hagen)
Date: Thu, 2 Sep 2021 15:31:19 +0200
Subject: [Dev-luatex] features request 1
In-Reply-To: <0cfa88f6-45a5-903b-3c3e-683eb9c8a5f4@vtex.lt>
References: <20210621145436.ek3h2qlghjfk2heh@beeblebrox>
 <CAG5iGsAf8-=4q1kB6VLHdPZ9BCdjbg0mxxBj_qCt2UsmxT6dLQ@mail.gmail.com>
 <ce4878b1-879e-5eab-bfee-ce459d1bc894@xs4all.nl>
 <CAG5iGsAwf+h3Gv2Z96rY_kSxr5ezEvT515HVNT0BNuzSX2Zk3Q@mail.gmail.com>
 <0cfa88f6-45a5-903b-3c3e-683eb9c8a5f4@vtex.lt>
Message-ID: <8cd84169-d745-5115-1c59-2f1b786046bc@xs4all.nl>

On 9/2/2021 2:48 PM, Linas Stonys wrote:
> Hi,
> 1) sometimes styles requires to use small vertical indentation between 
> paragraphs
> and naturallyÂ  we choose toÂ  use \parskip and it leads to some painful 
> programming dealing with spaces
> For example after float if there will be paragraphÂ  the space will be 
> \|textfloatsep + \parskip.
> |The problem is that there is no control on this and I want to ask 
> consider the possibility to add
> someÂ  tokens list like \everyparskip{} whichÂ  would be inserted before 
> \parskip where could be possible
> to check \lastskip:
> 
> FOR EXAMPLE:
> \parskip=5pt
> \everypar{\showthe\lastskip}
> a
> \vskip20pt
> 
> \showthe\lastskip
> b
> \showlists
> \bye
> 
> STDOUT:
>  > 0.0pt.
> <everypar> \showthe \lastskip
> 
> <to be read again>
> a
> l.3 a
> 
> ?
>  > 20.0pt.
> l.6 \showthe\lastskip
> 
> ?
>  > 0.0pt.
> <everypar> \showthe \lastskip
> 
> <to be read again>
> b
> l.7 b
> 
> POSSIBLE PLACE OF \everyparskip:
> .\tenrm a
> .\penalty 10000
> .\glue(\parfillskip) 0.0 plus 1.0fil
> .\glue(\rightskip) 0.0
> \glue 20.0
> ----------- HERE
> \glue(\parskip) 5.0
> \glue(\baselineskip) 5.05556
> \hbox(6.94444+0.0)x469.75499, glue set 444.1994fil, direction TLT
> .\localpar
> ..\localinterlinepenalty=0
> ..\localbrokenpenalty=0
> ..\localleftbox=null
> ..\localrightbox=null
> .\hbox(0.0+0.0)x20.0, direction TLT
> .\tenrm b
> 
> 
> Or \everyparskip{} could be always in the format like 
> \everyparskip{\vskip\parskip} and one could deal with it.
in luametatex we have

\starttext
     test
     \vskip10pt
     \everybeforepar{\writestatus{!}{\the\lastskip}}

     test
\stoptext

(plus more to experiment with)

-----------------------------------------------------------------
                                           Hans Hagen | PRAGMA ADE
               Ridderstraat 27 | 8061 GH Hasselt | The Netherlands
        tel: 038 477 53 69 | www.pragma-ade.nl | www.pragma-pod.nl
-----------------------------------------------------------------

From j.hagen at xs4all.nl  Thu Sep  2 15:32:07 2021
From: j.hagen at xs4all.nl (Hans Hagen)
Date: Thu, 2 Sep 2021 15:32:07 +0200
Subject: [Dev-luatex] features request 2
In-Reply-To: <ce29376a-8f9a-e6be-052d-d1adbb973916@vtex.lt>
References: <CAG5iGsDQKjZyxE1mwZFhOBbq55Z3ykPUbiy+sJ5D97kMfbDvqw@mail.gmail.com>
 <CAG5iGsA-K7MEA+SC2T++txXOLyH5PmfYvFSeWeyQJL=o35T16w@mail.gmail.com>
 <ce29376a-8f9a-e6be-052d-d1adbb973916@vtex.lt>
Message-ID: <62a365aa-c419-d792-cf3f-ea47c7aeb86e@xs4all.nl>

On 9/2/2021 3:15 PM, Linas Stonys wrote:
> Hi,
> from time to time I face the problem where I need to do something inside 
> tex group (simple group or box or table cell)
> or to mark up some content with tex4ht tags ( or tagging pdf )
> and sometimes \aftergroup is not enough. Â  So I would like to ask about 
> new token or token list which would
> be inserted before current group end (\beforeendgroup).
> 
> 
> EXAMPLE:
> \showboxdepth=\maxdimen
> \showboxbreadth=\maxdimen
> b
> \hbox{x\aftergroup dÂ  x}
> c
> \showlists
> 
> LOG OUTPUT:
> \tenrm b
> \glue(\spaceskip) 3.33333 plus 1.66666 minus 1.11111
> \hbox(4.30554+0.0)x13.88893, direction TLT
> .\tenrm x
> .\glue(\spaceskip) 3.33333 plus 1.66666 minus 1.11111
> .\tenrm x
> \tenrm d
> \glue(\spaceskip) 3.33333 plus 1.66666 minus 1.11111
> \tenrm c
> 
> 
> COULD BE:
> b
> \hbox{x\beforeendgroup dÂ  x}
> c
> \showlists
> 
> LOG OUTPUT:
> \tenrm b
> \glue(\spaceskip) 3.33333 plus 1.66666 minus 1.11111
> \hbox(4.30554+0.0)x13.88893, direction TLT
> .\tenrm x
> .\glue(\spaceskip) 3.33333 plus 1.66666 minus 1.11111
> .\tenrm x
> .\tenrm d
> \tenrm c
> 
> Of course here needs to think about several same macros how they should 
> queue the content.
In luametatex we have

\starttext

     {[test\atendofgroup{]}

\stoptext

(plus more)

Hans

-----------------------------------------------------------------
                                           Hans Hagen | PRAGMA ADE
               Ridderstraat 27 | 8061 GH Hasselt | The Netherlands
        tel: 038 477 53 69 | www.pragma-ade.nl | www.pragma-pod.nl
-----------------------------------------------------------------

From lstonys at vtex.lt  Thu Sep  2 16:18:18 2021
From: lstonys at vtex.lt (Linas Stonys)
Date: Thu, 2 Sep 2021 17:18:18 +0300
Subject: [Dev-luatex] features request 2
In-Reply-To: <62a365aa-c419-d792-cf3f-ea47c7aeb86e@xs4all.nl>
References: <CAG5iGsDQKjZyxE1mwZFhOBbq55Z3ykPUbiy+sJ5D97kMfbDvqw@mail.gmail.com>
 <CAG5iGsA-K7MEA+SC2T++txXOLyH5PmfYvFSeWeyQJL=o35T16w@mail.gmail.com>
 <ce29376a-8f9a-e6be-052d-d1adbb973916@vtex.lt>
 <62a365aa-c419-d792-cf3f-ea47c7aeb86e@xs4all.nl>
Message-ID: <c3033704-1c29-df1a-6672-8ae011af6b69@vtex.lt>

wow! Indeed there is a lot useful primitives (\ifempty, ifrelax, ... 
often would be used) Will they ever
be moved to luatex engine? Will any of luatex macros are consider to be 
moved to pdftex
(\toksapp, \tokspre, \glet, ...) Now writing a package for authors we 
still need to stick to pdftex (e-tex primityves)
or some packages (luatex85, shellesc,..) to be sureÂ  that there will be 
less complains about not working something
due to different engine.



On 9/2/2021 4:32 PM, Hans Hagen wrote:
> On 9/2/2021 3:15 PM, Linas Stonys wrote:
>> Hi,
>> from time to time I face the problem where I need to do something 
>> inside tex group (simple group or box or table cell)
>> or to mark up some content with tex4ht tags ( or tagging pdf )
>> and sometimes \aftergroup is not enough. Â  So I would like to ask 
>> about new token or token list which would
>> be inserted before current group end (\beforeendgroup).
>>
>>
>> EXAMPLE:
>> \showboxdepth=\maxdimen
>> \showboxbreadth=\maxdimen
>> b
>> \hbox{x\aftergroup dÂ  x}
>> c
>> \showlists
>>
>> LOG OUTPUT:
>> \tenrm b
>> \glue(\spaceskip) 3.33333 plus 1.66666 minus 1.11111
>> \hbox(4.30554+0.0)x13.88893, direction TLT
>> .\tenrm x
>> .\glue(\spaceskip) 3.33333 plus 1.66666 minus 1.11111
>> .\tenrm x
>> \tenrm d
>> \glue(\spaceskip) 3.33333 plus 1.66666 minus 1.11111
>> \tenrm c
>>
>>
>> COULD BE:
>> b
>> \hbox{x\beforeendgroup dÂ  x}
>> c
>> \showlists
>>
>> LOG OUTPUT:
>> \tenrm b
>> \glue(\spaceskip) 3.33333 plus 1.66666 minus 1.11111
>> \hbox(4.30554+0.0)x13.88893, direction TLT
>> .\tenrm x
>> .\glue(\spaceskip) 3.33333 plus 1.66666 minus 1.11111
>> .\tenrm x
>> .\tenrm d
>> \tenrm c
>>
>> Of course here needs to think about several same macros how they 
>> should queue the content.
> In luametatex we have
>
> \starttext
>
> Â Â Â  {[test\atendofgroup{]}
>
> \stoptext
>
> (plus more)
>
> Hans
>
> -----------------------------------------------------------------
> Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  Hans Hagen | PRAGMA ADE
> Â Â Â Â Â Â Â Â Â Â Â Â Â  Ridderstraat 27 | 8061 GH Hasselt | The Netherlands
> Â Â Â Â Â Â  tel: 038 477 53 69 | www.pragma-ade.nl | www.pragma-pod.nl
> -----------------------------------------------------------------
>


From frank.mittelbach at latex-project.org  Thu Sep  2 16:35:51 2021
From: frank.mittelbach at latex-project.org (Frank Mittelbach)
Date: Thu, 2 Sep 2021 16:35:51 +0200
Subject: [Dev-luatex] ***SPAM*** Re:  features request 2
In-Reply-To: <c3033704-1c29-df1a-6672-8ae011af6b69@vtex.lt>
References: <CAG5iGsDQKjZyxE1mwZFhOBbq55Z3ykPUbiy+sJ5D97kMfbDvqw@mail.gmail.com>
 <CAG5iGsA-K7MEA+SC2T++txXOLyH5PmfYvFSeWeyQJL=o35T16w@mail.gmail.com>
 <ce29376a-8f9a-e6be-052d-d1adbb973916@vtex.lt>
 <62a365aa-c419-d792-cf3f-ea47c7aeb86e@xs4all.nl>
 <c3033704-1c29-df1a-6672-8ae011af6b69@vtex.lt>
Message-ID: <11b04941-a6d6-4871-a587-ab4b3abb2416@latex-project.org>

Am 02.09.21 um 16:18 schrieb Linas Stonys:
 > wow! Indeed there is a lot useful primitives (\ifempty, ifrelax, ...
 > often would be used
I'm not sure that syntactic sugar (ie commands that are trivial to 
implement) is something that should be added to the engines

but the two you suggested, ie gaining control at the very start of 
paragraph processing  and just before a group ends, are two things that 
the engines really don't offer unless you totally disable most of the 
processing and figure out for yourself when it would be time to switch 
to hmode (which while theoretically doable is not really a practical 
option). As both have useful applications (and should be fairly easy to 
provide in all engines those are two that I think are worth pursuing

my 2cents - Frank
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: SpamAssassinReport-comedy_dante_de.txt
URL: <http://mailman.ntg.nl/pipermail/dev-luatex/attachments/20210902/91de5d96/attachment-0001.txt>

From reinhard.kotucha at web.de  Sun Sep  5 02:17:38 2021
From: reinhard.kotucha at web.de (Reinhard Kotucha)
Date: Sun, 5 Sep 2021 02:17:38 +0200
Subject: [Dev-luatex] os.uname on 64 bit Windows
Message-ID: <24884.3234.128522.870985@gargle.gargle.HOWL>

Hi,
on a 64 bit Windows machine os.uname() erroneously returns

  machine	i686

On the same machine I get under Linux

  machine	x86_64

with both, x86_64-linux and i386-linux binaries.  Thus I assume that
the keyword 'machine' refers to the hardware, not to how the binaries
were compiled (32 vs. 64 bit).

The complete output of

  for k,v in pairs(os.uname()) do
    print(k,v)
  end

is

  release       build 9200
  nodename      R804
  version       6.02
  machine       i686
  sysname       Windows 8

Regards,
  Reinhard

--
------------------------------------------------------------------
Reinhard Kotucha                            Phone: +49-511-3373112
Marschnerstr. 25
D-30167 Hannover                    mailto:reinhard.kotucha at web.de
------------------------------------------------------------------

From luigi.scarso at gmail.com  Sun Sep  5 10:43:10 2021
From: luigi.scarso at gmail.com (luigi scarso)
Date: Sun, 5 Sep 2021 10:43:10 +0200
Subject: [Dev-luatex] os.uname on 64 bit Windows
In-Reply-To: <24884.3234.128522.870985@gargle.gargle.HOWL>
References: <24884.3234.128522.870985@gargle.gargle.HOWL>
Message-ID: <CAG5iGsCf9RbWU76LHBpgt3LeT-CjC-jknrRysAm+_7++1DZMvw@mail.gmail.com>

On Sun, Sep 5, 2021 at 2:22 AM Reinhard Kotucha <reinhard.kotucha at web.de>
wrote:

> Hi,
> on a 64 bit Windows machine os.uname() erroneously returns
>
>   machine       i686
>
> On the same machine I get under Linux
>
>   machine       x86_64
>
> with both, x86_64-linux and i386-linux binaries.  Thus I assume that
> the keyword 'machine' refers to the hardware, not to how the binaries
> were compiled (32 vs. 64 bit).
>
> The complete output of
>
>   for k,v in pairs(os.uname()) do
>     print(k,v)
>   end
>
> is
>
>   release       build 9200
>   nodename      R804
>   version       6.02
>   machine       i686
>   sysname       Windows 8
>
>

#ifdef _WIN32
#  define _UTSNAME_LENGTH 65

/* Structure describing the system and machine.  */
struct utsname {
    char sysname[_UTSNAME_LENGTH];
    char nodename[_UTSNAME_LENGTH];
    char release[_UTSNAME_LENGTH];
    char version[_UTSNAME_LENGTH];
    char machine[_UTSNAME_LENGTH];
};

/*
 * Get name and information about current kernel.
 */
static int uname(struct utsname *uts)
:

case WinNT:
            sprintf(uts->machine, "i%d86", sysinfo.wProcessorLevel);
            break;

I guess that wProcessorLevel gives 6 in your case.

-- 
luigi
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mailman.ntg.nl/pipermail/dev-luatex/attachments/20210905/c8782672/attachment.htm>

From reinhard.kotucha at web.de  Sun Sep  5 19:48:05 2021
From: reinhard.kotucha at web.de (Reinhard Kotucha)
Date: Sun, 5 Sep 2021 19:48:05 +0200
Subject: [Dev-luatex] os.uname on 64 bit Windows
In-Reply-To: <CAG5iGsCf9RbWU76LHBpgt3LeT-CjC-jknrRysAm+_7++1DZMvw@mail.gmail.com>
References: <24884.3234.128522.870985@gargle.gargle.HOWL>
 <CAG5iGsCf9RbWU76LHBpgt3LeT-CjC-jknrRysAm+_7++1DZMvw@mail.gmail.com>
Message-ID: <24885.725.760551.720176@gargle.gargle.HOWL>

On 2021-09-05 at 10:43:10 +0200, luigi scarso wrote:

 > On Sun, Sep 5, 2021 at 2:22 AM Reinhard Kotucha <reinhard.kotucha at web.de>
 > wrote:
 >
 > > Hi,
 > > on a 64 bit Windows machine os.uname() erroneously returns
 > >
 > >   machine       i686
 > >
 > > On the same machine I get under Linux
 > >
 > >   machine       x86_64
 > >
 > > with both, x86_64-linux and i386-linux binaries.  Thus I assume that
 > > the keyword 'machine' refers to the hardware, not to how the binaries
 > > were compiled (32 vs. 64 bit).
 > >
 > > The complete output of
 > >
 > >   for k,v in pairs(os.uname()) do
 > >     print(k,v)
 > >   end
 > >
 > > is
 > >
 > >   release       build 9200
 > >   nodename      R804
 > >   version       6.02
 > >   machine       i686
 > >   sysname       Windows 8
 > >
 > >
 >
 > #ifdef _WIN32
 > #  define _UTSNAME_LENGTH 65
 >
 > /* Structure describing the system and machine.  */
 > struct utsname {
 >     char sysname[_UTSNAME_LENGTH];
 >     char nodename[_UTSNAME_LENGTH];
 >     char release[_UTSNAME_LENGTH];
 >     char version[_UTSNAME_LENGTH];
 >     char machine[_UTSNAME_LENGTH];
 > };
 >
 > /*
 >  * Get name and information about current kernel.
 >  */
 > static int uname(struct utsname *uts)
 > :
 >
 > case WinNT:
 >             sprintf(uts->machine, "i%d86", sysinfo.wProcessorLevel);
 >             break;
 >
 > I guess that wProcessorLevel gives 6 in your case.

Obviously.  But I doubt that wProcessorLevel is what's needed here.
Isn't there something like wProcessorArchitecture that distinguishes
between 32 and 64 bit?

Regards,
  Reinhard

--
------------------------------------------------------------------
Reinhard Kotucha                            Phone: +49-511-3373112
Marschnerstr. 25
D-30167 Hannover                    mailto:reinhard.kotucha at web.de
------------------------------------------------------------------

From luigi.scarso at gmail.com  Wed Sep  8 09:56:42 2021
From: luigi.scarso at gmail.com (luigi scarso)
Date: Wed, 8 Sep 2021 09:56:42 +0200
Subject: [Dev-luatex] os.uname on 64 bit Windows
In-Reply-To: <24885.725.760551.720176@gargle.gargle.HOWL>
References: <24884.3234.128522.870985@gargle.gargle.HOWL>
 <CAG5iGsCf9RbWU76LHBpgt3LeT-CjC-jknrRysAm+_7++1DZMvw@mail.gmail.com>
 <24885.725.760551.720176@gargle.gargle.HOWL>
Message-ID: <CAG5iGsADA6rt9n9S0GB57YkwEZbMs7OYWvrUVM3BY+u=osCFrQ@mail.gmail.com>

On Sun, Sep 5, 2021 at 7:48 PM Reinhard Kotucha <reinhard.kotucha at web.de>
wrote:

>
> Obviously.  But I doubt that wProcessorLevel is what's needed here.
> Isn't there something like wProcessorArchitecture that distinguishes
> between 32 and 64 bit?
>

seems so. I will check this weekend .

-- 
luigi
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mailman.ntg.nl/pipermail/dev-luatex/attachments/20210908/d3d26c09/attachment.htm>

