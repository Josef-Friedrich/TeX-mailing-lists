From luigi.scarso at gmail.com  Fri Apr  2 18:27:53 2021
From: luigi.scarso at gmail.com (luigi scarso)
Date: Fri, 2 Apr 2021 18:27:53 +0200
Subject: [Dev-luatex] Luatex 1.13.1 announcement.
In-Reply-To: <CAG5iGsA-K7MEA+SC2T++txXOLyH5PmfYvFSeWeyQJL=o35T16w@mail.gmail.com>
References: <CAG5iGsDQKjZyxE1mwZFhOBbq55Z3ykPUbiy+sJ5D97kMfbDvqw@mail.gmail.com>
 <CAG5iGsA-K7MEA+SC2T++txXOLyH5PmfYvFSeWeyQJL=o35T16w@mail.gmail.com>
Message-ID: <CAG5iGsC0_6cm_3sbL1ifWH_DjGrCQjp3HS6Gx0Z=BTS_=iXSpQ@mail.gmail.com>

==============================================================
LuaTeX 1.13.1 2021-04-02
==============================================================

Fixed an unwanted space in btex etex in metapost, introduced
after a patch for troff.


--
luigi
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mailman.ntg.nl/pipermail/dev-luatex/attachments/20210402/5ce1ee84/attachment.htm>

From news3 at nililand.de  Thu Apr  8 22:18:14 2021
From: news3 at nililand.de (Ulrike Fischer)
Date: Thu, 8 Apr 2021 22:18:14 +0200
Subject: [Dev-luatex] linkarea in rtl context
Message-ID: <toha3vlfhqdu$.dlg@nililand.de>

In luatex 1.13.0 (texlive 2021) this here gives the wrong linkarea:
it stretches to the left from the end of the link instead to the
right. In texlive 2020 the behaviour is correct:


\pardir TRT \textdir TRT \linedir TRT

X
\pdfextension startlink
attr {/Border[0 0 1]}
user{
/Subtype/Link%
/A<<%
/Type/Action%
/S/URI%
/URI(blub)%
>>%
} Linktext
\pdfextension endlink
y

\bye




-- 
Ulrike Fischer 
https://www.troubleshooting-tex.de/


From luigi.scarso at gmail.com  Fri Apr  9 19:29:56 2021
From: luigi.scarso at gmail.com (luigi scarso)
Date: Fri, 9 Apr 2021 19:29:56 +0200
Subject: [Dev-luatex] linkarea in rtl context
In-Reply-To: <toha3vlfhqdu$.dlg@nililand.de>
References: <toha3vlfhqdu$.dlg@nililand.de>
Message-ID: <CAG5iGsDkFFLQAv5ubB+Vt0=Q8LX8sLz71t7GGn3qW2kaxLGvgw@mail.gmail.com>

On Thu, Apr 8, 2021 at 10:23 PM Ulrike Fischer <news3 at nililand.de> wrote:

> In luatex 1.13.0 (texlive 2021) this here gives the wrong linkarea:
> it stretches to the left from the end of the link instead to the
> right. In texlive 2020 the behaviour is correct:
>
>
> \pardir TRT \textdir TRT \linedir TRT
>
> X
> \pdfextension startlink
> attr {/Border[0 0 1]}
> user{
> /Subtype/Link%
> /A<<%
> /Type/Action%
> /S/URI%
> /URI(blub)%
> >>%
> } Linktext
> \pdfextension endlink
> y
>
> \bye
>

confirmed.

-- 
luigi
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mailman.ntg.nl/pipermail/dev-luatex/attachments/20210409/88aaba20/attachment.htm>

From news3 at nililand.de  Fri Apr  9 19:31:29 2021
From: news3 at nililand.de (Ulrike Fischer)
Date: Fri, 9 Apr 2021 19:31:29 +0200
Subject: [Dev-luatex] linkarea in rtl context
References: <toha3vlfhqdu$.dlg@nililand.de>
 <CAG5iGsDkFFLQAv5ubB+Vt0=Q8LX8sLz71t7GGn3qW2kaxLGvgw@mail.gmail.com>
Message-ID: <168i9lkynoxgq$.dlg@nililand.de>

Am Fri, 9 Apr 2021 19:29:56 +0200 schrieb luigi scarso:

> On Thu, Apr 8, 2021 at 10:23 PM Ulrike Fischer <news3 at nililand.de> wrote:
> 
>> In luatex 1.13.0 (texlive 2021) this here gives the wrong linkarea:
>> it stretches to the left from the end of the link instead to the
>> right. In texlive 2020 the behaviour is correct:

> confirmed.

Marcel wrote some explanation and a work around here

https://tex.stackexchange.com/a/592031/2388


-- 
Ulrike Fischer 
https://www.troubleshooting-tex.de/


From luigi.scarso at gmail.com  Sat Apr 10 11:06:12 2021
From: luigi.scarso at gmail.com (luigi scarso)
Date: Sat, 10 Apr 2021 11:06:12 +0200
Subject: [Dev-luatex] linkarea in rtl context
In-Reply-To: <168i9lkynoxgq$.dlg@nililand.de>
References: <toha3vlfhqdu$.dlg@nililand.de>
 <CAG5iGsDkFFLQAv5ubB+Vt0=Q8LX8sLz71t7GGn3qW2kaxLGvgw@mail.gmail.com>
 <168i9lkynoxgq$.dlg@nililand.de>
Message-ID: <CAG5iGsD8wnzqfpy5XLtiLxSe3kZKqTkFqfsnpZ1LxY4h-B29kg@mail.gmail.com>

On Fri, Apr 9, 2021 at 7:31 PM Ulrike Fischer <news3 at nililand.de> wrote:

> Am Fri, 9 Apr 2021 19:29:56 +0200 schrieb luigi scarso:
>
> > On Thu, Apr 8, 2021 at 10:23 PM Ulrike Fischer <news3 at nililand.de>
> wrote:
> >
> >> In luatex 1.13.0 (texlive 2021) this here gives the wrong linkarea:
> >> it stretches to the left from the end of the link instead to the
> >> right. In texlive 2020 the behaviour is correct:
>
> > confirmed.
>
> Marcel wrote some explanation and a work around here
>
> https://tex.stackexchange.com/a/592031/2388
>
>
I think it's due to the fix  for this
[Dev-luatex] linkarea is wrong if startlink is used in an \rlap

-- 
luigi
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mailman.ntg.nl/pipermail/dev-luatex/attachments/20210410/a0e57a13/attachment.htm>

From tex at 2krueger.de  Sun Apr 18 23:10:33 2021
From: tex at 2krueger.de (Marcel Fabian =?utf-8?Q?Kr=C3=BCger?=)
Date: Sun, 18 Apr 2021 23:10:33 +0200
Subject: [Dev-luatex] Uunderdelimiter & friends and mathstyles
Message-ID: <20210418211033.zqf2qzlkmoindjrz@yoga>

Hi,

I noticed some odd behavior about
\U{under,over}delimiter/\Udelimiter{under,over} related to the applied
mathstyles for the nucleus: Take the following example

\input luaotfload.sty
\font\lmmath"Latin Modern Math:script=math,mode=base"
\font\scriptlmmath"Latin Modern Math:script=math,mode=base" at 7pt
\font\scriptscriptlmmath"Latin Modern Math:script=math,mode=base" at 5pt
\textfont42=\lmmath
\scriptfont42=\scriptlmmath
\scriptscriptfont42=\scriptscriptlmmath
$$
\Udelimiterunder42 "2192{\mathstyle x^L}
\Udelimiterover42 "2192{\mathstyle x^L}
\Uunderdelimiter42 "2192{\mathstyle x^L}
\Uoverdelimiter42 "2192{\mathstyle x^L}
$$
\bye

In all four situations \mathstyle shows 1, but neither of the four x^L
are actually set in \mathstyle 1 (crampeddisplay):

\Udelimiterunder sets it's argument in the outer mathstyle. IMO this is
                 the expected behavior but should be reflected in \mathstyle.

\Udelimiterover  sets it's argument in the outer mathstyle. IMO it
                 should be cramped instead.

\Uoverdelimiter  sets it's argument in subscript style (cramped and one
                 size smaller) Since there's nothing printed on top of
                 it' argument, I think that superscript style would be
                 better. (aka not cramped)
                 In any case it should be reflected in \mathstyle.

\Uunderdelimiter sets it's argument in superscript style (one size smaller)
                 Since the delimiter is printed on top of it I think
                 that subscript style would be better (aka cramped).
                 In any case it should be reflected in \mathstyle.

The patch at the end adapts both \mathstyle and changes the actually
used styles.

Best regards,
Marcel


diff --git a/source/texk/web2c/luatexdir/tex/mlist.c b/source/texk/web2c/luatexdir/tex/mlist.c
index 2ac631ea3..71e7c88ea 100644
--- a/source/texk/web2c/luatexdir/tex/mlist.c
+++ b/source/texk/web2c/luatexdir/tex/mlist.c
@@ -2385,7 +2385,7 @@ static void make_over_delimiter(pointer q, int cur_style)
     pointer x, y, v;
     scaled shift_up, shift_down, clr, delta, wd;
     boolean stack;
-    x = clean_box(nucleus(q), sub_style(cur_style), cur_style, math_nucleus_list);
+    x = clean_box(nucleus(q), sup_style(cur_style), cur_style, math_nucleus_list);
     check_widths(q,x);
     y = do_delimiter(q, left_delimiter(q), cur_size, wd, true, cur_style, true, &stack, NULL, NULL);
     left_delimiter(q) = null;
@@ -2416,7 +2416,7 @@ static void make_under_delimiter(pointer q, int cur_style)
     pointer x, y, v;
     scaled shift_up, shift_down, clr, delta, wd;
     boolean stack;
-    y = clean_box(nucleus(q), sup_style(cur_style), cur_style, math_nucleus_list);
+    y = clean_box(nucleus(q), sub_style(cur_style), cur_style, math_nucleus_list);
     check_widths(q,y);
     x = do_delimiter(q, left_delimiter(q), cur_size, wd, true, cur_style, true, &stack, NULL, NULL);
     left_delimiter(q) = null;
@@ -2447,7 +2447,7 @@ static void make_delimiter_over(pointer q, int cur_style)
     pointer x, y, v;
     scaled shift_up, shift_down, clr, actual, wd;
     boolean stack;
-    y = clean_box(nucleus(q), cur_style, cur_style, math_nucleus_list);
+    y = clean_box(nucleus(q), cramped_style(cur_style), cur_style, math_nucleus_list);
     check_widths(q,y);
     x = do_delimiter(q, left_delimiter(q), cur_size + (cur_size == script_script_size ? 0 : 1), wd, true, cur_style, true, &stack, NULL, NULL);
     left_delimiter(q) = null;
diff --git a/source/texk/web2c/luatexdir/tex/texmath.c b/source/texk/web2c/luatexdir/tex/texmath.c
index 461a51578..0c0e8a9cc 100644
--- a/source/texk/web2c/luatexdir/tex/texmath.c
+++ b/source/texk/web2c/luatexdir/tex/texmath.c
@@ -1580,6 +1580,7 @@ static void scan_delimiter(pointer p, int r)
 void math_radical(void)
 {
     halfword q;
+    int new_mstyle;
     int chr_code = cur_chr;
     halfword options = 0;
     tail_append(new_node(radical_noad, chr_code));
@@ -1600,28 +1601,35 @@ void math_radical(void)
         }
     }
     radicaloptions(tail) = options;
-    if (chr_code == 0)
+    if (chr_code == 0) {
         /*tex \.{\\radical} */
         scan_delimiter(left_delimiter(tail), tex_mathcode);
-    else if (chr_code == 1)
+        new_mstyle = cramped_style(m_style);
+    } else if (chr_code == 1) {
         /*tex \.{\\Uradical} */
         scan_delimiter(left_delimiter(tail), umath_mathcode);
-    else if (chr_code == 2)
+        new_mstyle = cramped_style(m_style);
+    } else if (chr_code == 2) {
         /*tex \.{\\Uroot} */
         scan_delimiter(left_delimiter(tail), umath_mathcode);
-    else if (chr_code == 3)
+        new_mstyle = cramped_style(m_style);
+    } else if (chr_code == 3) {
         /*tex \.{\\Uunderdelimiter} */
         scan_delimiter(left_delimiter(tail), umath_mathcode);
-    else if (chr_code == 4)
+        new_mstyle = sub_style(m_style);
+    } else if (chr_code == 4) {
         /*tex \.{\\Uoverdelimiter} */
         scan_delimiter(left_delimiter(tail), umath_mathcode);
-    else if (chr_code == 5)
+        new_mstyle = sup_style(m_style);
+    } else if (chr_code == 5) {
         /*tex \.{\\Udelimiterunder} */
         scan_delimiter(left_delimiter(tail), umath_mathcode);
-    else if (chr_code == 6)
+        new_mstyle = m_style;
+    } else if (chr_code == 6) {
         /*tex \.{\\Udelimiterover} */
         scan_delimiter(left_delimiter(tail), umath_mathcode);
-    else if (chr_code == 7)
+        new_mstyle = cramped_style(m_style);
+    } else if (chr_code == 7)
         /*tex \.{\\Uhextensible} */
         scan_delimiter(left_delimiter(tail), umath_mathcode);
     else
@@ -1645,12 +1653,12 @@ void math_radical(void)
             vlink(degree(tail)) = null;
             q = new_node(math_char_node, 0);
             nucleus(tail) = q;
-            (void) scan_math(nucleus(tail), cramped_style(m_style));
+            (void) scan_math(nucleus(tail), new_mstyle);
         }
     } else {
         q = new_node(math_char_node, 0);
         nucleus(tail) = q;
-        (void) scan_math(nucleus(tail), cramped_style(m_style));
+        (void) scan_math(nucleus(tail), new_mstyle);
     }
 }
 

From luigi.scarso at gmail.com  Mon Apr 19 14:24:30 2021
From: luigi.scarso at gmail.com (luigi scarso)
Date: Mon, 19 Apr 2021 14:24:30 +0200
Subject: [Dev-luatex] linkarea in rtl context
In-Reply-To: <CAG5iGsD8wnzqfpy5XLtiLxSe3kZKqTkFqfsnpZ1LxY4h-B29kg@mail.gmail.com>
References: <toha3vlfhqdu$.dlg@nililand.de>
 <CAG5iGsDkFFLQAv5ubB+Vt0=Q8LX8sLz71t7GGn3qW2kaxLGvgw@mail.gmail.com>
 <168i9lkynoxgq$.dlg@nililand.de>
 <CAG5iGsD8wnzqfpy5XLtiLxSe3kZKqTkFqfsnpZ1LxY4h-B29kg@mail.gmail.com>
Message-ID: <CAG5iGsDRO=NX-E4icsTdVAoJpx0rrxvp2QEoKisE1pcpOCO0NQ@mail.gmail.com>

On Sat, Apr 10, 2021 at 11:06 AM luigi scarso <luigi.scarso at gmail.com>
wrote:

>
>
> On Fri, Apr 9, 2021 at 7:31 PM Ulrike Fischer <news3 at nililand.de> wrote:
>
>> Am Fri, 9 Apr 2021 19:29:56 +0200 schrieb luigi scarso:
>>
>> > On Thu, Apr 8, 2021 at 10:23 PM Ulrike Fischer <news3 at nililand.de>
>> wrote:
>> >
>> >> In luatex 1.13.0 (texlive 2021) this here gives the wrong linkarea:
>> >> it stretches to the left from the end of the link instead to the
>> >> right. In texlive 2020 the behaviour is correct:
>>
>> > confirmed.
>>
>> Marcel wrote some explanation and a work around here
>>
>> https://tex.stackexchange.com/a/592031/2388
>>
>>
> I think it's due to the fix  for this
> [Dev-luatex] linkarea is wrong if startlink is used in an \rlap
>
> --
> luigi
>

It should be fixed in revision 7431.

-- 
luigi
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mailman.ntg.nl/pipermail/dev-luatex/attachments/20210419/7bcd9c58/attachment.htm>

From luigi.scarso at gmail.com  Mon Apr 19 23:57:23 2021
From: luigi.scarso at gmail.com (luigi scarso)
Date: Mon, 19 Apr 2021 23:57:23 +0200
Subject: [Dev-luatex] Uunderdelimiter & friends and mathstyles
In-Reply-To: <20210418211033.zqf2qzlkmoindjrz@yoga>
References: <20210418211033.zqf2qzlkmoindjrz@yoga>
Message-ID: <CAG5iGsCmASzHBAtvVTdTZDKMG9H+redPECnfu-PG_vq-FyGTDg@mail.gmail.com>

On Sun, Apr 18, 2021 at 11:15 PM Marcel Fabian KrÃ¼ger <tex at 2krueger.de>
wrote:

> Hi,
>
> I noticed some odd behavior about
> \U{under,over}delimiter/\Udelimiter{under,over} related to the applied
> mathstyles for the nucleus: Take the following example
>
> \input luaotfload.sty
> \font\lmmath"Latin Modern Math:script=math,mode=base"
> \font\scriptlmmath"Latin Modern Math:script=math,mode=base" at 7pt
> \font\scriptscriptlmmath"Latin Modern Math:script=math,mode=base" at 5pt
> \textfont42=\lmmath
> \scriptfont42=\scriptlmmath
> \scriptscriptfont42=\scriptscriptlmmath
> $$
> \Udelimiterunder42 "2192{\mathstyle x^L}
> \Udelimiterover42 "2192{\mathstyle x^L}
> \Uunderdelimiter42 "2192{\mathstyle x^L}
> \Uoverdelimiter42 "2192{\mathstyle x^L}
> $$
> \bye
>
> In all four situations \mathstyle shows 1, but neither of the four x^L
> are actually set in \mathstyle 1 (crampeddisplay):
>
> \Udelimiterunder sets it's argument in the outer mathstyle. IMO this is
>                  the expected behavior but should be reflected in
> \mathstyle.
>
> \Udelimiterover  sets it's argument in the outer mathstyle. IMO it
>                  should be cramped instead.
>
> \Uoverdelimiter  sets it's argument in subscript style (cramped and one
>                  size smaller) Since there's nothing printed on top of
>                  it' argument, I think that superscript style would be
>                  better. (aka not cramped)
>                  In any case it should be reflected in \mathstyle.
>
> \Uunderdelimiter sets it's argument in superscript style (one size smaller)
>                  Since the delimiter is printed on top of it I think
>                  that subscript style would be better (aka cramped).
>                  In any case it should be reflected in \mathstyle.
>
> The patch at the end adapts both \mathstyle and changes the actually
> used styles.
>
>
hm, changing these  math stuff probably breaks  backward compatibility
--- better if can be implemented as an option.
Can you send the two patches as separated files taking the latest commit
from experimental  as reference ?


-- 
luigi
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mailman.ntg.nl/pipermail/dev-luatex/attachments/20210419/8f235d72/attachment.htm>

From tex at 2krueger.de  Tue Apr 20 00:29:37 2021
From: tex at 2krueger.de (Marcel =?utf-8?Q?Kr=C3=BCger?=)
Date: Tue, 20 Apr 2021 00:29:37 +0200
Subject: [Dev-luatex] Uunderdelimiter & friends and mathstyles
In-Reply-To: <CAG5iGsCmASzHBAtvVTdTZDKMG9H+redPECnfu-PG_vq-FyGTDg@mail.gmail.com>
References: <20210418211033.zqf2qzlkmoindjrz@yoga>
 <CAG5iGsCmASzHBAtvVTdTZDKMG9H+redPECnfu-PG_vq-FyGTDg@mail.gmail.com>
Message-ID: <20210419222937.kvmj6er76kdatmxo@yoga>

On Mon, Apr 19, 2021 at 11:57:23PM +0200, luigi scarso wrote:
> On Sun, Apr 18, 2021 at 11:15 PM Marcel Fabian KrÃ¼ger <tex at 2krueger.de>
> wrote:
> 
> > Hi,
> >
> > I noticed some odd behavior about
> > \U{under,over}delimiter/\Udelimiter{under,over} related to the applied
> > mathstyles for the nucleus: Take the following example
> >
> > \input luaotfload.sty
> > \font\lmmath"Latin Modern Math:script=math,mode=base"
> > \font\scriptlmmath"Latin Modern Math:script=math,mode=base" at 7pt
> > \font\scriptscriptlmmath"Latin Modern Math:script=math,mode=base" at 5pt
> > \textfont42=\lmmath
> > \scriptfont42=\scriptlmmath
> > \scriptscriptfont42=\scriptscriptlmmath
> > $$
> > \Udelimiterunder42 "2192{\mathstyle x^L}
> > \Udelimiterover42 "2192{\mathstyle x^L}
> > \Uunderdelimiter42 "2192{\mathstyle x^L}
> > \Uoverdelimiter42 "2192{\mathstyle x^L}
> > $$
> > \bye
> >
> > In all four situations \mathstyle shows 1, but neither of the four x^L
> > are actually set in \mathstyle 1 (crampeddisplay):
> >
> > \Udelimiterunder sets it's argument in the outer mathstyle. IMO this is
> >                  the expected behavior but should be reflected in
> > \mathstyle.
> >
> > \Udelimiterover  sets it's argument in the outer mathstyle. IMO it
> >                  should be cramped instead.
> >
> > \Uoverdelimiter  sets it's argument in subscript style (cramped and one
> >                  size smaller) Since there's nothing printed on top of
> >                  it' argument, I think that superscript style would be
> >                  better. (aka not cramped)
> >                  In any case it should be reflected in \mathstyle.
> >
> > \Uunderdelimiter sets it's argument in superscript style (one size smaller)
> >                  Since the delimiter is printed on top of it I think
> >                  that subscript style would be better (aka cramped).
> >                  In any case it should be reflected in \mathstyle.
> >
> > The patch at the end adapts both \mathstyle and changes the actually
> > used styles.
> >
> >
> hm, changing these  math stuff probably breaks  backward compatibility
> --- better if can be implemented as an option.
> Can you send the two patches as separated files taking the latest commit
> from experimental  as reference ?

The two diffs are attached.

Marcel
-------------- next part --------------
>From ccb889676e098533b95f6d9c83861af906a628c6 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Marcel=20Fabian=20Kr=C3=BCger?= <tex at 2krueger.de>
Date: Tue, 20 Apr 2021 00:15:38 +0200
Subject: [PATCH 1/2] Adjust cramped-ness of radical_node's

---
 source/texk/web2c/luatexdir/tex/mlist.c | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

diff --git a/source/texk/web2c/luatexdir/tex/mlist.c b/source/texk/web2c/luatexdir/tex/mlist.c
index 2ac631ea3..71e7c88ea 100644
--- a/source/texk/web2c/luatexdir/tex/mlist.c
+++ b/source/texk/web2c/luatexdir/tex/mlist.c
@@ -2385,7 +2385,7 @@ static void make_over_delimiter(pointer q, int cur_style)
     pointer x, y, v;
     scaled shift_up, shift_down, clr, delta, wd;
     boolean stack;
-    x = clean_box(nucleus(q), sub_style(cur_style), cur_style, math_nucleus_list);
+    x = clean_box(nucleus(q), sup_style(cur_style), cur_style, math_nucleus_list);
     check_widths(q,x);
     y = do_delimiter(q, left_delimiter(q), cur_size, wd, true, cur_style, true, &stack, NULL, NULL);
     left_delimiter(q) = null;
@@ -2416,7 +2416,7 @@ static void make_under_delimiter(pointer q, int cur_style)
     pointer x, y, v;
     scaled shift_up, shift_down, clr, delta, wd;
     boolean stack;
-    y = clean_box(nucleus(q), sup_style(cur_style), cur_style, math_nucleus_list);
+    y = clean_box(nucleus(q), sub_style(cur_style), cur_style, math_nucleus_list);
     check_widths(q,y);
     x = do_delimiter(q, left_delimiter(q), cur_size, wd, true, cur_style, true, &stack, NULL, NULL);
     left_delimiter(q) = null;
@@ -2447,7 +2447,7 @@ static void make_delimiter_over(pointer q, int cur_style)
     pointer x, y, v;
     scaled shift_up, shift_down, clr, actual, wd;
     boolean stack;
-    y = clean_box(nucleus(q), cur_style, cur_style, math_nucleus_list);
+    y = clean_box(nucleus(q), cramped_style(cur_style), cur_style, math_nucleus_list);
     check_widths(q,y);
     x = do_delimiter(q, left_delimiter(q), cur_size + (cur_size == script_script_size ? 0 : 1), wd, true, cur_style, true, &stack, NULL, NULL);
     left_delimiter(q) = null;
-- 
2.31.1

-------------- next part --------------
>From 76a471fd6ffed4993bf6b8114676715859ffd6c4 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Marcel=20Fabian=20Kr=C3=BCger?= <tex at 2krueger.de>
Date: Tue, 20 Apr 2021 00:16:55 +0200
Subject: [PATCH 2/2] Right \mathstyle while reading \Udelimiter family

---
 source/texk/web2c/luatexdir/tex/texmath.c | 28 +++++++++++++++--------
 1 file changed, 18 insertions(+), 10 deletions(-)

diff --git a/source/texk/web2c/luatexdir/tex/texmath.c b/source/texk/web2c/luatexdir/tex/texmath.c
index 461a51578..0c0e8a9cc 100644
--- a/source/texk/web2c/luatexdir/tex/texmath.c
+++ b/source/texk/web2c/luatexdir/tex/texmath.c
@@ -1580,6 +1580,7 @@ static void scan_delimiter(pointer p, int r)
 void math_radical(void)
 {
     halfword q;
+    int new_mstyle;
     int chr_code = cur_chr;
     halfword options = 0;
     tail_append(new_node(radical_noad, chr_code));
@@ -1600,28 +1601,35 @@ void math_radical(void)
         }
     }
     radicaloptions(tail) = options;
-    if (chr_code == 0)
+    if (chr_code == 0) {
         /*tex \.{\\radical} */
         scan_delimiter(left_delimiter(tail), tex_mathcode);
-    else if (chr_code == 1)
+        new_mstyle = cramped_style(m_style);
+    } else if (chr_code == 1) {
         /*tex \.{\\Uradical} */
         scan_delimiter(left_delimiter(tail), umath_mathcode);
-    else if (chr_code == 2)
+        new_mstyle = cramped_style(m_style);
+    } else if (chr_code == 2) {
         /*tex \.{\\Uroot} */
         scan_delimiter(left_delimiter(tail), umath_mathcode);
-    else if (chr_code == 3)
+        new_mstyle = cramped_style(m_style);
+    } else if (chr_code == 3) {
         /*tex \.{\\Uunderdelimiter} */
         scan_delimiter(left_delimiter(tail), umath_mathcode);
-    else if (chr_code == 4)
+        new_mstyle = sub_style(m_style);
+    } else if (chr_code == 4) {
         /*tex \.{\\Uoverdelimiter} */
         scan_delimiter(left_delimiter(tail), umath_mathcode);
-    else if (chr_code == 5)
+        new_mstyle = sup_style(m_style);
+    } else if (chr_code == 5) {
         /*tex \.{\\Udelimiterunder} */
         scan_delimiter(left_delimiter(tail), umath_mathcode);
-    else if (chr_code == 6)
+        new_mstyle = m_style;
+    } else if (chr_code == 6) {
         /*tex \.{\\Udelimiterover} */
         scan_delimiter(left_delimiter(tail), umath_mathcode);
-    else if (chr_code == 7)
+        new_mstyle = cramped_style(m_style);
+    } else if (chr_code == 7)
         /*tex \.{\\Uhextensible} */
         scan_delimiter(left_delimiter(tail), umath_mathcode);
     else
@@ -1645,12 +1653,12 @@ void math_radical(void)
             vlink(degree(tail)) = null;
             q = new_node(math_char_node, 0);
             nucleus(tail) = q;
-            (void) scan_math(nucleus(tail), cramped_style(m_style));
+            (void) scan_math(nucleus(tail), new_mstyle);
         }
     } else {
         q = new_node(math_char_node, 0);
         nucleus(tail) = q;
-        (void) scan_math(nucleus(tail), cramped_style(m_style));
+        (void) scan_math(nucleus(tail), new_mstyle);
     }
 }
 
-- 
2.31.1


From luigi.scarso at gmail.com  Tue Apr 20 09:08:20 2021
From: luigi.scarso at gmail.com (luigi scarso)
Date: Tue, 20 Apr 2021 09:08:20 +0200
Subject: [Dev-luatex] Uunderdelimiter & friends and mathstyles
In-Reply-To: <20210419222937.kvmj6er76kdatmxo@yoga>
References: <20210418211033.zqf2qzlkmoindjrz@yoga>
 <CAG5iGsCmASzHBAtvVTdTZDKMG9H+redPECnfu-PG_vq-FyGTDg@mail.gmail.com>
 <20210419222937.kvmj6er76kdatmxo@yoga>
Message-ID: <CAG5iGsA+0pBD3L3+x6DEqAofvf_Uft7ZBNZbMU-RBzfeugALHQ@mail.gmail.com>

On Tue, Apr 20, 2021 at 12:29 AM Marcel KrÃ¼ger <tex at 2krueger.de> wrote:

>
> The two diffs are attached.
>
> Marcel
>

ok --- almost. I had to apply dos2unix to normalize the eof.

-- 
luigi
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mailman.ntg.nl/pipermail/dev-luatex/attachments/20210420/e0cfff99/attachment-0001.htm>

From luigi.scarso at gmail.com  Tue Apr 20 14:29:04 2021
From: luigi.scarso at gmail.com (luigi scarso)
Date: Tue, 20 Apr 2021 14:29:04 +0200
Subject: [Dev-luatex] Uunderdelimiter & friends and mathstyles
In-Reply-To: <CAG5iGsCmASzHBAtvVTdTZDKMG9H+redPECnfu-PG_vq-FyGTDg@mail.gmail.com>
References: <20210418211033.zqf2qzlkmoindjrz@yoga>
 <CAG5iGsCmASzHBAtvVTdTZDKMG9H+redPECnfu-PG_vq-FyGTDg@mail.gmail.com>
Message-ID: <CAG5iGsBgu_wa4REzo=qfOBxD65vqRqVgmP6iwi=Ghv_3jK5s7w@mail.gmail.com>

On Mon, Apr 19, 2021 at 11:57 PM luigi scarso <luigi.scarso at gmail.com>
wrote:

>
>
> On Sun, Apr 18, 2021 at 11:15 PM Marcel Fabian KrÃ¼ger <tex at 2krueger.de>
> wrote:
>
>> Hi,
>>
>> I noticed some odd behavior about
>> \U{under,over}delimiter/\Udelimiter{under,over} related to the applied
>> mathstyles for the nucleus: Take the following example
>>
>> \input luaotfload.sty
>> \font\lmmath"Latin Modern Math:script=math,mode=base"
>> \font\scriptlmmath"Latin Modern Math:script=math,mode=base" at 7pt
>> \font\scriptscriptlmmath"Latin Modern Math:script=math,mode=base" at 5pt
>> \textfont42=\lmmath
>> \scriptfont42=\scriptlmmath
>> \scriptscriptfont42=\scriptscriptlmmath
>> $$
>> \Udelimiterunder42 "2192{\mathstyle x^L}
>> \Udelimiterover42 "2192{\mathstyle x^L}
>> \Uunderdelimiter42 "2192{\mathstyle x^L}
>> \Uoverdelimiter42 "2192{\mathstyle x^L}
>> $$
>> \bye
>>
>> In all four situations \mathstyle shows 1, but neither of the four x^L
>> are actually set in \mathstyle 1 (crampeddisplay):
>>
>> \Udelimiterunder sets it's argument in the outer mathstyle. IMO this is
>>                  the expected behavior but should be reflected in
>> \mathstyle.
>>
>> \Udelimiterover  sets it's argument in the outer mathstyle. IMO it
>>                  should be cramped instead.
>>
>> \Uoverdelimiter  sets it's argument in subscript style (cramped and one
>>                  size smaller) Since there's nothing printed on top of
>>                  it' argument, I think that superscript style would be
>>                  better. (aka not cramped)
>>                  In any case it should be reflected in \mathstyle.
>>
>> \Uunderdelimiter sets it's argument in superscript style (one size
>> smaller)
>>                  Since the delimiter is printed on top of it I think
>>                  that subscript style would be better (aka cramped).
>>                  In any case it should be reflected in \mathstyle.
>>
>> The patch at the end adapts both \mathstyle and changes the actually
>> used styles.
>>
>>
> hm, changing these  math stuff probably breaks  backward compatibility
> --- better if can be implemented as an option.
> Can you send the two patches as separated files taking the latest commit
> from experimental  as reference ?
>
>
> --
> luigi
>

------------------------------------------------------------------------
r7435 | luigi.scarso at gmail.com | 2021-04-20 14:27:58 +0200 (Tue, 20 Apr
2021) | 1 line

\mathdefaultsmode: different radical style defaults (HH)
------------------------------------------------------------------------

-- 
luigi
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mailman.ntg.nl/pipermail/dev-luatex/attachments/20210420/5e7eaa61/attachment.htm>

From naveen at syrusdark.website  Mon Apr 26 12:24:37 2021
From: naveen at syrusdark.website (Naveen M K)
Date: Mon, 26 Apr 2021 15:54:37 +0530
Subject: [Dev-luatex] i686-mingw: texlua.exe FFI module not working
Message-ID: <cd14878c-6e23-a5db-aed7-8bf29e31568c@syrusdark.website>

Hi,

I had been trying to compile TexLive on MINGW compilers on Windows 
provided by MSYS2[0] project. See this PR[1]. It was only for 
i686-mingw. x86-64-mingw worked without any problems.


I found that there was Segmentation Fault(or crash) when running the 
`runscript.exe` the launchers which TexLive provides on Windows and I 
could see it uses LuaTeX. You can find the source here[2]. What is 
essentially does is calls the `texlua.exe` with `runscript.tlu` passed 
it in. I initially thought it was a problem with compiled version of the 
launcher itself, but it wasn't it, it was a problem with `texlua.exe`.


`runscript.exe` just returns the code returned from `texlua.exe` and the 
return code was a crash and there is a popup which say the program isn't 
working correctly and crashed at `ntdll.dll`.


While just running `texlua.exe` on a normal hello world lua script[3] 
works without any crash or error. So, I thought something from the code 
in `runscript.tlu`[4] should be causing this issue. I don't know how to 
debug a lua script, so my plan was to randomly place print statements 
(you know that is the easiest and best way to debug something), and 
whether it printed or not. I first looked over the `runscript.tlu` to 
see if there are parts of code which could crash the interpreter and I 
found this block of code[5] which uses ffi module.

Now I placed print statements before and after

	local runscripthandle = ffi.C.GetModuleHandleA("runscript.dll")

and found that the one before was printed and `texlua.exe` crashed. So 
it is something related to ffi module. I tried the same with 
`texluajit.exe` and it seemed to work. What I did to make the launchers 
work was to patch this [6] and it worked without any problem.

But that isn't the actual fix the Crash in `texlua.exe` on using ffi 
module in `i686-mingw`. I hope anybody will help me fix this. For the 
version, I am building TexLive with this 
`ccb6338507149edf2772bfccb9933b72761f4cc4` commit on GitHub or 
`svn://tug.org/texlive/trunk/Build/source at 58686`.

Best,
Naveen


[0]: https://www.msys2.org
[1]: https://github.com/msys2/MINGW-packages/pull/8271
[2]: 
https://github.com/TeX-Live/texlive-source/blob/9bad8358d2f98a8bed86ecfa238db24c4965b9da/texk/texlive/w64_mingw_wrapper/runscript_dll.c
[3]: https://www.lua.org/pil/1.html
[4]: 
https://github.com/TeX-Live/texlive-source/blob/9bad8358d2f98a8bed86ecfa238db24c4965b9da/texk/texlive/w64_mingw_wrapper/runscript.tlu
[5]: 
https://github.com/TeX-Live/texlive-source/blob/9bad8358d2f98a8bed86ecfa238db24c4965b9da/texk/texlive/w64_mingw_wrapper/runscript.tlu#L419-L455
[6]: 
https://github.com/msys2/MINGW-packages/blob/3e2204b3fa18cd967b7aa616dfef9e2d89efb1ca/mingw-w64-texlive-bin/0002-fix-lauchers-mingw32.patch

From luigi.scarso at gmail.com  Wed Apr 28 08:02:31 2021
From: luigi.scarso at gmail.com (luigi scarso)
Date: Wed, 28 Apr 2021 08:02:31 +0200
Subject: [Dev-luatex] i686-mingw: texlua.exe FFI module not working
In-Reply-To: <cd14878c-6e23-a5db-aed7-8bf29e31568c@syrusdark.website>
References: <cd14878c-6e23-a5db-aed7-8bf29e31568c@syrusdark.website>
Message-ID: <CAG5iGsBFsgv1pW_1He5uR2Y2mT=Dhw_+qRbwx_aMbGaKjATm5A@mail.gmail.com>

On Wed, Apr 28, 2021 at 7:58 AM Naveen M K <naveen at syrusdark.website> wrote:

> Hi,
>
> I had been trying to compile TexLive on MINGW compilers on Windows
> provided by MSYS2[0] project. See this PR[1]. It was only for
> i686-mingw. x86-64-mingw worked without any problems.
>
>
> I found that there was Segmentation Fault(or crash) when running the
> `runscript.exe` the launchers which TexLive provides on Windows and I
> could see it uses LuaTeX. You can find the source here[2]. What is
> essentially does is calls the `texlua.exe` with `runscript.tlu` passed
> it in. I initially thought it was a problem with compiled version of the
> launcher itself, but it wasn't it, it was a problem with `texlua.exe`.
>

Thank you for the report, I will see it this weekend.
-- 
luigi
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mailman.ntg.nl/pipermail/dev-luatex/attachments/20210428/b726400d/attachment.htm>

