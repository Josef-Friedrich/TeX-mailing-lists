From jerome.laurens at u-bourgogne.fr  Tue Feb  1 14:19:05 2022
From: jerome.laurens at u-bourgogne.fr (=?utf-8?Q?J=C3=A9r=C3=B4me_LAURENS?=)
Date: Tue, 1 Feb 2022 14:19:05 +0100
Subject: [Dev-luatex] What is the current lfs version?
Message-ID: <12F17A70-47A8-4E23-A160-FE5E69AA55BA@u-bourgogne.fr>

We can obtain the current lfs version by running

luatex '\directlua{tex.write(lfs._VERSION)}\bye' && open texput.pdf

Then we must remove texput.pdf and texput.log.
This is a bit cumbersome.

It would be great if this information could be in the credits:

luatex --credits
luajittex --credits

BTW, is lfs 1.8 planned in forthcoming? (1.7 does not play with windows very well)

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mailman.ntg.nl/pipermail/dev-luatex/attachments/20220201/85074707/attachment.htm>

From luigi.scarso at gmail.com  Tue Feb  1 14:36:26 2022
From: luigi.scarso at gmail.com (luigi scarso)
Date: Tue, 1 Feb 2022 14:36:26 +0100
Subject: [Dev-luatex] What is the current lfs version?
In-Reply-To: <12F17A70-47A8-4E23-A160-FE5E69AA55BA@u-bourgogne.fr>
References: <12F17A70-47A8-4E23-A160-FE5E69AA55BA@u-bourgogne.fr>
Message-ID: <CAG5iGsD5a-aVuX39BhpDQrLouJ5SxEZWGoZhhge_ATDe+JOBPw@mail.gmail.com>

On Tue, Feb 1, 2022 at 2:25 PM JÃ©rÃ´me LAURENS <jerome.laurens at u-bourgogne.fr>
wrote:

> We can obtain the current lfs version by running
>
> luatex '\directlua{tex.write(lfs._VERSION)}\bye' && open texput.pdf
>
>
also
luatex --fmt=plain  '\directlua{print(lfs._VERSION);}\bye'|grep
LuaFileSystem
(if grep is available )


Then we must remove texput.pdf and texput.log.
> This is a bit cumbersome.
>
> It would be great if this information could be in the credits:
>
> luatex --credits
> luajittex --credits
>
>
we have several lua libs (lfs, socket, lpeg md5 ...); you can always make a
script

-- ver.lua

print(lfs._VERSION)

$>luatex --luaonly ver.lua



> BTW, is lfs 1.8 planned in forthcoming? (1.7 does not play with windows
> very well)
>
>
hm could be.

-- 
luigi
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mailman.ntg.nl/pipermail/dev-luatex/attachments/20220201/05984693/attachment.htm>

From j.hagen at xs4all.nl  Tue Feb  1 14:53:27 2022
From: j.hagen at xs4all.nl (Hans Hagen)
Date: Tue, 1 Feb 2022 14:53:27 +0100
Subject: [Dev-luatex] What is the current lfs version?
In-Reply-To: <12F17A70-47A8-4E23-A160-FE5E69AA55BA@u-bourgogne.fr>
References: <12F17A70-47A8-4E23-A160-FE5E69AA55BA@u-bourgogne.fr>
Message-ID: <bcac7511-8639-9a20-36fe-c6c683ff77e0@xs4all.nl>

On 2/1/2022 2:19 PM, JÃ©rÃ´me LAURENS wrote:
> We can obtain the current lfs version by running
> 
> luatex '\directlua{tex.write(lfs._VERSION)}\bye' && open texput.pdf

if you use print there is no pdf made

luatex --ini "\catcode`\{=1 \catcode`\}=2 \directlua{print(lfs._VERSION)}"

> Then we must remove texput.pdf and texput.log.

echo print(lfs._VERSION) ; os.remove("_temp_.lua") > _temp_.lua & luatex 
--luaonly _temp_.lua

> This is a bit cumbersome.

such is tex ... logs files are part of the game .. normally you query a 
version (if at all) inside a tex or lua run so then there is nothing to 
clean up

> It would be great if this information could be in the credits:
> 
> luatex --credits
> luajittex --credits

no need

> BTW, is lfs 1.8 planned in forthcoming? (1.7 does not play with windows 
> very well)
no plans

Hans

-----------------------------------------------------------------
                                           Hans Hagen | PRAGMA ADE
               Ridderstraat 27 | 8061 GH Hasselt | The Netherlands
        tel: 038 477 53 69 | www.pragma-ade.nl | www.pragma-pod.nl
-----------------------------------------------------------------

From petr at olsak.net  Sat Feb  5 11:43:03 2022
From: petr at olsak.net (Petr Olsak)
Date: Sat, 5 Feb 2022 11:43:03 +0100
Subject: [Dev-luatex] Is \toksapp assignment?
Message-ID: <2799b7f9-7399-6b9b-fb57-443b5f2aa5d9@olsak.net>

Hello,

If I try:

\def\test{test}

\afterassignment\test \advance\count0 by2

then \test is processed immediately after the \advance command. But if I do:

\afterassignment\test \toksapp 0{xx}Â  \the\toks0

then \test waits to another assignment than \toksapp. It means, that 
\toksapp <toks> (and friends \gtoksapp etc.) is not assignment. Is it an 
intention or a bug?

Petr OlÅ¡Ã¡k




From j.hagen at xs4all.nl  Sat Feb  5 12:08:00 2022
From: j.hagen at xs4all.nl (Hans Hagen)
Date: Sat, 5 Feb 2022 12:08:00 +0100
Subject: [Dev-luatex] Is \toksapp assignment?
In-Reply-To: <2799b7f9-7399-6b9b-fb57-443b5f2aa5d9@olsak.net>
References: <2799b7f9-7399-6b9b-fb57-443b5f2aa5d9@olsak.net>
Message-ID: <e560bd4b-1096-5e11-c6d4-40ce2b0d82a5@xs4all.nl>

On 2/5/2022 11:43 AM, Petr Olsak wrote:
> Hello,
> 
> If I try:
> 
> \def\test{test}
> 
> \afterassignment\test \advance\count0 by2
> 
> then \test is processed immediately after the \advance command. But if I 
> do:
> 
> \afterassignment\test \toksapp 0{xx}Â  \the\toks0
> 
> then \test waits to another assignment than \toksapp. It means, that 
> \toksapp <toks> (and friends \gtoksapp etc.) is not assignment. Is it an 
> intention or a bug?
it's intention ... these prepend and append things are a command class 
on their own which is why we have explicit g and x variants

Hans

-----------------------------------------------------------------
                                           Hans Hagen | PRAGMA ADE
               Ridderstraat 27 | 8061 GH Hasselt | The Netherlands
        tel: 038 477 53 69 | www.pragma-ade.nl | www.pragma-pod.nl
-----------------------------------------------------------------

From petr at olsak.net  Sat Feb  5 12:19:05 2022
From: petr at olsak.net (Petr Olsak)
Date: Sat, 5 Feb 2022 12:19:05 +0100
Subject: [Dev-luatex] Is \toksapp assignment?
In-Reply-To: <e560bd4b-1096-5e11-c6d4-40ce2b0d82a5@xs4all.nl>
References: <2799b7f9-7399-6b9b-fb57-443b5f2aa5d9@olsak.net>
 <e560bd4b-1096-5e11-c6d4-40ce2b0d82a5@xs4all.nl>
Message-ID: <e820d48e-dae6-17e5-c97b-59ffb7c91ad2@olsak.net>

On 2/5/22 12:08 PM, Hans Hagen wrote:

> On 2/5/2022 11:43 AM, Petr Olsak wrote:
>> Hello,
>>
>> If I try:
>>
>> \def\test{test}
>>
>> \afterassignment\test \advance\count0 by2
>>
>> then \test is processed immediately after the \advance command. But 
>> if I do:
>>
>> \afterassignment\test \toksapp 0{xx}Â  \the\toks0
>>
>> then \test waits to another assignment than \toksapp. It means, that 
>> \toksapp <toks> (and friends \gtoksapp etc.) is not assignment. Is it 
>> an intention or a bug?
> it's intention ... these prepend and append things are a command class 
> on their own which is why we have explicit g and x variants

I respect the intention but I don't understand your argument. The \def 
is a command on its own too, it has explicit g and x variants and _it 
is_ assignment.

After \tracingall we can see {changing \toks0=} {into \toks0=xx} which 
is similar report asÂ  {changing \m=undefined} {into \m=macro:-> xx} when 
\def\m{xx} is traced.

Petr



From j.hagen at xs4all.nl  Sat Feb  5 13:48:37 2022
From: j.hagen at xs4all.nl (Hans Hagen)
Date: Sat, 5 Feb 2022 13:48:37 +0100
Subject: [Dev-luatex] Is \toksapp assignment?
In-Reply-To: <e820d48e-dae6-17e5-c97b-59ffb7c91ad2@olsak.net>
References: <2799b7f9-7399-6b9b-fb57-443b5f2aa5d9@olsak.net>
 <e560bd4b-1096-5e11-c6d4-40ce2b0d82a5@xs4all.nl>
 <e820d48e-dae6-17e5-c97b-59ffb7c91ad2@olsak.net>
Message-ID: <b3140d02-c609-907b-bd1b-46357dbb2f73@xs4all.nl>

On 2/5/2022 12:19 PM, Petr Olsak wrote:
> On 2/5/22 12:08 PM, Hans Hagen wrote:
> 
>> On 2/5/2022 11:43 AM, Petr Olsak wrote:
>>> Hello,
>>>
>>> If I try:
>>>
>>> \def\test{test}
>>>
>>> \afterassignment\test \advance\count0 by2
>>>
>>> then \test is processed immediately after the \advance command. But 
>>> if I do:
>>>
>>> \afterassignment\test \toksapp 0{xx}Â  \the\toks0
>>>
>>> then \test waits to another assignment than \toksapp. It means, that 
>>> \toksapp <toks> (and friends \gtoksapp etc.) is not assignment. Is it 
>>> an intention or a bug?
>> it's intention ... these prepend and append things are a command class 
>> on their own which is why we have explicit g and x variants
> 
> I respect the intention but I don't understand your argument. The \def 
> is a command on its own too, it has explicit g and x variants and _it 
> is_ assignment.
> 
> After \tracingall we can see {changing \toks0=} {into \toks0=xx} which 
> is similar report asÂ  {changing \m=undefined} {into \m=macro:-> xx} when 
> \def\m{xx} is traced.
this append and prepend mechanism started out as an experiment and it 
has some nasty pitfalls (esp when local and global get mixed) so that is 
why it has its own handler

in luametatex it's a bit different but there i can test what happens 
when the non prefixed variant is also added (but for different reasons) 
to the prefixed handler where afterassignment is handled

but it would anyway be an incompatible change to luatex so be delayed to 
after the upcoming code freeze (it might also have a little performance 
hit)

Hans



-----------------------------------------------------------------
                                           Hans Hagen | PRAGMA ADE
               Ridderstraat 27 | 8061 GH Hasselt | The Netherlands
        tel: 038 477 53 69 | www.pragma-ade.nl | www.pragma-pod.nl
-----------------------------------------------------------------

From blflatex at gmail.com  Sat Feb  5 14:35:56 2022
From: blflatex at gmail.com (Bruno Le Floch)
Date: Sat, 5 Feb 2022 14:35:56 +0100
Subject: [Dev-luatex] Is \toksapp assignment?
In-Reply-To: <b3140d02-c609-907b-bd1b-46357dbb2f73@xs4all.nl>
References: <2799b7f9-7399-6b9b-fb57-443b5f2aa5d9@olsak.net>
 <e560bd4b-1096-5e11-c6d4-40ce2b0d82a5@xs4all.nl>
 <e820d48e-dae6-17e5-c97b-59ffb7c91ad2@olsak.net>
 <b3140d02-c609-907b-bd1b-46357dbb2f73@xs4all.nl>
Message-ID: <135ef7d8-f383-9b50-ad51-dc756d51357e@gmail.com>

On 2022-02-05 13:48, Hans Hagen wrote:
> this append and prepend mechanism started out as an experiment and it 
> has some nasty pitfalls (esp when local and global get mixed) so that is 
> why it has its own handler

Bug related to this: prefixing \toksapp and similar gives a Fatal error, 
where I would expect either that it works, or errors with "You can't use 
a prefix with \toksapp".  (Here I'm removing unrelated lines in the output.)

$ luatex '\global\toksapp'
This is LuaTeX, Version 1.13.2 (TeX Live 2021)
! This can't happen (prefix).
<*> \global\toksapp
!  ==> Fatal error occurred, no output PDF file produced!

Bruno

From j.hagen at xs4all.nl  Sat Feb  5 15:05:15 2022
From: j.hagen at xs4all.nl (Hans Hagen)
Date: Sat, 5 Feb 2022 15:05:15 +0100
Subject: [Dev-luatex] Is \toksapp assignment?
In-Reply-To: <135ef7d8-f383-9b50-ad51-dc756d51357e@gmail.com>
References: <2799b7f9-7399-6b9b-fb57-443b5f2aa5d9@olsak.net>
 <e560bd4b-1096-5e11-c6d4-40ce2b0d82a5@xs4all.nl>
 <e820d48e-dae6-17e5-c97b-59ffb7c91ad2@olsak.net>
 <b3140d02-c609-907b-bd1b-46357dbb2f73@xs4all.nl>
 <135ef7d8-f383-9b50-ad51-dc756d51357e@gmail.com>
Message-ID: <5ecb8fd1-2bba-bd95-3bd1-16334a9adfc4@xs4all.nl>

On 2/5/2022 2:35 PM, Bruno Le Floch wrote:
> On 2022-02-05 13:48, Hans Hagen wrote:
>> this append and prepend mechanism started out as an experiment and it 
>> has some nasty pitfalls (esp when local and global get mixed) so that 
>> is why it has its own handler
> 
> Bug related to this: prefixing \toksapp and similar gives a Fatal error, 
> where I would expect either that it works, or errors with "You can't use 
> a prefix with \toksapp".Â  (Here I'm removing unrelated lines in the 
> output.)
> 
> $ luatex '\global\toksapp'
> This is LuaTeX, Version 1.13.2 (TeX Live 2021)
> ! This can't happen (prefix).
> <*> \global\toksapp
> !Â  ==> Fatal error occurred, no output PDF file produced!
that can be fixed

Hans

-----------------------------------------------------------------
                                           Hans Hagen | PRAGMA ADE
               Ridderstraat 27 | 8061 GH Hasselt | The Netherlands
        tel: 038 477 53 69 | www.pragma-ade.nl | www.pragma-pod.nl
-----------------------------------------------------------------

From luigi.scarso at gmail.com  Mon Feb  7 17:47:23 2022
From: luigi.scarso at gmail.com (luigi scarso)
Date: Mon, 7 Feb 2022 17:47:23 +0100
Subject: [Dev-luatex] Is \toksapp assignment?
In-Reply-To: <5ecb8fd1-2bba-bd95-3bd1-16334a9adfc4@xs4all.nl>
References: <2799b7f9-7399-6b9b-fb57-443b5f2aa5d9@olsak.net>
 <e560bd4b-1096-5e11-c6d4-40ce2b0d82a5@xs4all.nl>
 <e820d48e-dae6-17e5-c97b-59ffb7c91ad2@olsak.net>
 <b3140d02-c609-907b-bd1b-46357dbb2f73@xs4all.nl>
 <135ef7d8-f383-9b50-ad51-dc756d51357e@gmail.com>
 <5ecb8fd1-2bba-bd95-3bd1-16334a9adfc4@xs4all.nl>
Message-ID: <CAG5iGsAYxybbJ86ix=FodqqQN1-8Si7RWrOwF4DF=hXtmay78Q@mail.gmail.com>

On Sat, Feb 5, 2022 at 3:05 PM Hans Hagen <j.hagen at xs4all.nl> wrote:

> On 2/5/2022 2:35 PM, Bruno Le Floch wrote:
> > On 2022-02-05 13:48, Hans Hagen wrote:
> >> this append and prepend mechanism started out as an experiment and it
> >> has some nasty pitfalls (esp when local and global get mixed) so that
> >> is why it has its own handler
> >
> > Bug related to this: prefixing \toksapp and similar gives a Fatal error,
> > where I would expect either that it works, or errors with "You can't use
> > a prefix with \toksapp".  (Here I'm removing unrelated lines in the
> > output.)
> >
> > $ luatex '\global\toksapp'
> > This is LuaTeX, Version 1.13.2 (TeX Live 2021)
> > ! This can't happen (prefix).
> > <*> \global\toksapp
> > !  ==> Fatal error occurred, no output PDF file produced!
> that can be fixed
>
>

Fixed in rev.  7489.
-- 
luigi
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mailman.ntg.nl/pipermail/dev-luatex/attachments/20220207/e520031e/attachment.htm>

From tex at 2krueger.de  Thu Feb 24 20:48:33 2022
From: tex at 2krueger.de (Marcel Fabian =?utf-8?Q?Kr=C3=BCger?=)
Date: Thu, 24 Feb 2022 20:48:33 +0100
Subject: [Dev-luatex] Weird behavior of \exceptionpenalty
Message-ID: <20220224194833.bcybktq2xj6is4ys@beeblebrox>

Hi,

in an discussion on TeX StackExchange \exceptionpenalty came up and it's
current behavior seems a bit odd and is at odds with the documentation:

According to the manual:

> Because we introduced penalties in discretionary nodes, the exception syntax now
> also can take a penalty specification. The value between square brackets is a multiplier for
> \exceptionpenalty. Here we have set it to 10000 so effectively we get
> 30000 in the example.

and then shows the example

    \hyphenation{z{a-}{-b}{z}{a-}{-b}{z}[3]{a-}{-b}{z}[1]{a-}{-b}{z}z}

As the text says, it could be expected that this causes a penalty of 30000. 
But the currently implemented behavior is different: It assigns a
penalty of 10000 to the second discretionary. The reason is that the
number in square brackets is only used as a multiplier if
exception_penalty is higher than 100000 (sic). For any value of
\exceptionpenalty lower or equal to 100000, the number is ignored and
the value of \exceptionpenalty is used as is.

I'm not sure if this is just a bug (maybe 100000 was supposed to be a
upper limit and not a lower limit?) or if this is intended to be used as
a marker which later gets replaced by some callback and therefore 100000
was intentionally used as a unrealistic penalty value, but I think that
at least the documentation should get fixed.

I'm happy to provide a patch for this if you tell me what to implement.
I basically see the following options:

  * Just change the manual to describe the implemented behavior. I think
    that this would be sad since it makes the feature much less useful
    since having multiples of badness higher than 100000 seems to have
    few applications, but this could be picked up by callbacks ansd
    would be the most compatible option.

  * Decide that The documentation is more important than the implemented
    behavior and fix the code to implement the documentation,
    removing the 100000 criterium (or making it an upper limit instead
    of a lower one) If 100000 becomes an upper limit, it would also be
    possible to substract 100000 from exception_penalty before using it
    to allow emulating the old behavior of using a fixed
    exception_penalty. (Of course, the opposite: Keep the current code
    but reduce \exceptionpenalty by 100000 first in the multiplication
    case could also be done, but IMO that would be a weird interface.)

  * Add a new flag to select between the new and old behavior or add a
    new bit to \hyphenationmode.


Best,
Marcel

From j.hagen at xs4all.nl  Fri Feb 25 11:25:31 2022
From: j.hagen at xs4all.nl (Hans Hagen)
Date: Fri, 25 Feb 2022 11:25:31 +0100
Subject: [Dev-luatex] Weird behavior of \exceptionpenalty
In-Reply-To: <20220224194833.bcybktq2xj6is4ys@beeblebrox>
References: <20220224194833.bcybktq2xj6is4ys@beeblebrox>
Message-ID: <fc4bfbb5-38a6-6690-b1d5-220c39740445@xs4all.nl>

On 2/24/2022 8:48 PM, Marcel Fabian KrÃ¼ger wrote:

> in an discussion on TeX StackExchange \exceptionpenalty came up and it's
> current behavior seems a bit odd and is at odds with the documentation:
i'll change it to a max check with 10000 (infinite) ... i don't expect 
many compatibility issues because it actually was just an experiment (i 
never used it myself after that in context)

Hans

-----------------------------------------------------------------
                                           Hans Hagen | PRAGMA ADE
               Ridderstraat 27 | 8061 GH Hasselt | The Netherlands
        tel: 038 477 53 69 | www.pragma-ade.nl | www.pragma-pod.nl
-----------------------------------------------------------------

From tex at 2krueger.de  Mon Feb 28 13:01:34 2022
From: tex at 2krueger.de (Marcel Fabian =?utf-8?Q?Kr=C3=BCger?=)
Date: Mon, 28 Feb 2022 13:01:34 +0100
Subject: [Dev-luatex] Make the late_lua node accessible from the executed
 code
Message-ID: <20220228120134.5ykp2ry7wbinjscv@beeblebrox>

Hi,

one issue I regularly encounter with late_lua whatits is that they don't
allow the executed code to determine which node is currently executed.

Especially this means that attributes and properties can't be reliably
accessed and the code can't access related nodes next to the late_lua
node. This can be worked around by storing a closure in the data field
which captures a reference to the node, but this breaks in hard to debug
ways when the node is copied and the copied node has the same code but a
different identify.

Therefore it would be great if there would be a way to access the
currently evaluated late_lua whatsit node. I would have suggested
passing this as an argument to the executed function, but that could
break compatbility and it would appear odd due to LuaMetaTeX using the
second argument of lua functions is different ways. So the attached
suggested implemention instead adds a separate function which allows to
access this node: node.current_latelua (or node.direct.current_latelua)

Best,
Marcel
-------------- next part --------------
From d4c53f5bdf8e0bb716ef21847306ab24c8e67d3a Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Marcel=20Fabian=20Kr=C3=BCger?= <tex at 2krueger.de>
Date: Mon, 28 Feb 2022 11:59:15 +0100
Subject: [PATCH] Add node.current_latelua

---
 manual/luatex-nodes.tex                    | 12 ++++++++++
 source/texk/web2c/luatexdir/lua/lnodelib.c | 26 ++++++++++++++++++++++
 source/texk/web2c/luatexdir/lua/luastuff.c |  6 +++++
 3 files changed, 44 insertions(+)

diff --git a/manual/luatex-nodes.tex b/manual/luatex-nodes.tex
index 5a48b4c18..aaff0a38c 100644
--- a/manual/luatex-nodes.tex
+++ b/manual/luatex-nodes.tex
@@ -1421,6 +1421,18 @@ attribute list, not a copy thereof. Therefore, changing any of the attributes in
 the list will change these values for all nodes that have the current attribute
 list assigned to them.
 
+\subsection{\type {current_latelua}}
+
+\libindex{current_latelua}
+
+When called directly or indirectly from a \type{late_lua} whatsit, return the
+whatsit node which triggered this execution.
+
+\startfunctioncall
+<node> m =
+    node.current_latelua()
+\stopfunctioncall
+
 \subsection{\type {hpack}}
 
 \libindex {hpack}
diff --git a/source/texk/web2c/luatexdir/lua/lnodelib.c b/source/texk/web2c/luatexdir/lua/lnodelib.c
index 1ff36bc95..84bccee60 100644
--- a/source/texk/web2c/luatexdir/lua/lnodelib.c
+++ b/source/texk/web2c/luatexdir/lua/lnodelib.c
@@ -6541,6 +6541,30 @@ static int lua_nodelib_direct_currentattr(lua_State * L)
 }
 
 
+/* Defined in luastuff.c */
+extern halfword current_latelua;
+
+/* node.current_latelua(node m) */
+
+static int lua_nodelib_currentlatelua(lua_State * L)
+{
+    lua_nodelib_push_fast(L, current_latelua);
+    return 1;
+}
+
+
+/* node.direct.current_latelua() */
+
+static int lua_nodelib_direct_currentlatelua(lua_State * L)
+{
+    if (current_latelua)
+        lua_pushinteger(L, current_latelua);
+    else
+        lua_pushnil(L);
+    return 1;
+}
+
+
 /* node.direct.todirect */
 
 static int lua_nodelib_direct_todirect(lua_State * L)
@@ -8890,6 +8914,7 @@ static const struct luaL_Reg direct_nodelib_f[] = {
     {"copy_list", lua_nodelib_direct_copy_list},
     {"count", lua_nodelib_direct_count},
     {"current_attr", lua_nodelib_direct_currentattr},
+    {"current_latelua", lua_nodelib_direct_currentlatelua},
     {"dimensions", lua_nodelib_direct_dimensions},
     {"rangedimensions", lua_nodelib_direct_rangedimensions},
  /* {"do_ligature_n", lua_nodelib_direct_do_ligature_n}, */
@@ -9036,6 +9061,7 @@ static const struct luaL_Reg nodelib_f[] = {
     {"copy_list", lua_nodelib_copy_list},
     {"count", lua_nodelib_count},
     {"current_attr", lua_nodelib_currentattr},
+    {"current_latelua", lua_nodelib_currentlatelua},
     {"dimensions", lua_nodelib_dimensions},
     {"rangedimensions", lua_nodelib_rangedimensions},
  /* {"do_ligature_n", lua_nodelib_do_ligature_n}, */
diff --git a/source/texk/web2c/luatexdir/lua/luastuff.c b/source/texk/web2c/luatexdir/lua/luastuff.c
index fb05c60dd..469074d8c 100644
--- a/source/texk/web2c/luatexdir/lua/luastuff.c
+++ b/source/texk/web2c/luatexdir/lua/luastuff.c
@@ -32,6 +32,8 @@ lua_State *Luas = NULL;
 int luastate_bytes = 0;
 int lua_active = 0;
 
+halfword current_latelua = null;
+
 #ifdef LuajitTeX
 #define Luas_load(Luas,getS,ls,lua_id) \
     lua_load(Luas,getS,ls,lua_id);
@@ -594,8 +596,11 @@ void luacall_vf(int p, int f, int c)
 
 void late_lua(PDF pdf, halfword p)
 {
+    halfword saved;
     halfword t;
     (void) pdf;
+    saved = current_latelua;
+    current_latelua = p;
     t = late_lua_type(p);
     if (t == normal) {
         /*tex sets |def_ref| */
@@ -609,6 +614,7 @@ void late_lua(PDF pdf, halfword p)
     } else {
         /*tex Let's just ignore it, could be some user specific thing. */
     }
+    current_latelua = saved;
 }
 
 void luatokencall(int p, int nameptr)
-- 
2.35.1


From luigi.scarso at gmail.com  Mon Feb 28 20:15:41 2022
From: luigi.scarso at gmail.com (luigi scarso)
Date: Mon, 28 Feb 2022 20:15:41 +0100
Subject: [Dev-luatex] Make the late_lua node accessible from the
 executed code
In-Reply-To: <20220228120134.5ykp2ry7wbinjscv@beeblebrox>
References: <20220228120134.5ykp2ry7wbinjscv@beeblebrox>
Message-ID: <CAG5iGsC1po-P8yN3zXG6HS8LBzw3Zuw6fZBopg07VWbDVek0NQ@mail.gmail.com>

On Mon, Feb 28, 2022 at 1:02 PM Marcel Fabian KrÃ¼ger <tex at 2krueger.de>
wrote:

> Hi,
>
> one issue I regularly encounter with late_lua whatits is that they don't
> allow the executed code to determine which node is currently executed.
>
> Especially this means that attributes and properties can't be reliably
> accessed and the code can't access related nodes next to the late_lua
> node. This can be worked around by storing a closure in the data field
> which captures a reference to the node, but this breaks in hard to debug
> ways when the node is copied and the copied node has the same code but a
> different identify.
>
> Therefore it would be great if there would be a way to access the
> currently evaluated late_lua whatsit node. I would have suggested
> passing this as an argument to the executed function, but that could
> break compatbility and it would appear odd due to LuaMetaTeX using the
> second argument of lua functions is different ways. So the attached
> suggested implemention instead adds a separate function which allows to
> access this node: node.current_latelua (or node.direct.current_latelua)
>
>
>
Hans has made a patch, see   revision 7504.


-- 
luigi
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mailman.ntg.nl/pipermail/dev-luatex/attachments/20220228/efb0635c/attachment.htm>

