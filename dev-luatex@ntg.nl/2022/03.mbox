From tex at 2krueger.de  Tue Mar  1 00:16:17 2022
From: tex at 2krueger.de (Marcel Fabian =?utf-8?Q?Kr=C3=BCger?=)
Date: Tue, 1 Mar 2022 00:16:17 +0100
Subject: [Dev-luatex] Make the late_lua node accessible from the
 executed code
In-Reply-To: <CAG5iGsC1po-P8yN3zXG6HS8LBzw3Zuw6fZBopg07VWbDVek0NQ@mail.gmail.com>
References: <20220228120134.5ykp2ry7wbinjscv@beeblebrox>
 <CAG5iGsC1po-P8yN3zXG6HS8LBzw3Zuw6fZBopg07VWbDVek0NQ@mail.gmail.com>
Message-ID: <20220228231617.u54jrkfzctododnx@beeblebrox>

On Mon, Feb 28, 2022 at 08:15:41PM +0100, luigi scarso wrote:
> On Mon, Feb 28, 2022 at 1:02 PM Marcel Fabian KrÃ¼ger <tex at 2krueger.de>
> wrote:
> 
> > Hi,
> >
> > one issue I regularly encounter with late_lua whatits is that they don't
> > allow the executed code to determine which node is currently executed.
> >
> > Especially this means that attributes and properties can't be reliably
> > accessed and the code can't access related nodes next to the late_lua
> > node. This can be worked around by storing a closure in the data field
> > which captures a reference to the node, but this breaks in hard to debug
> > ways when the node is copied and the copied node has the same code but a
> > different identify.
> >
> > Therefore it would be great if there would be a way to access the
> > currently evaluated late_lua whatsit node. I would have suggested
> > passing this as an argument to the executed function, but that could
> > break compatbility and it would appear odd due to LuaMetaTeX using the
> > second argument of lua functions is different ways. So the attached
> > suggested implemention instead adds a separate function which allows to
> > access this node: node.current_latelua (or node.direct.current_latelua)
> >
> >
> >
> Hans has made a patch, see   revision 7504.

Thank you, that works great for all my usual usecases.

One remark: It explicitly excludes the case if `lateluafunction`. Now I
never needed that in \lateluafunction, but that's mostly since I barely
ever use that one. Since it requires a pre declared function my primary
issue with it always was that it can't be adapted to a specific
situation at all. I think that this change and especially the ability to
access properties could have made \lateluafunction significantly more
useful since it would have added the option to have limited levels of
customization combined with the generally great behavior with otherwise
static predeclared functions.

So I think it would be nice if you could consider extending this in some
way to work there too.

Best,
Marcel

> 
> 
> -- 
> luigi

> _______________________________________________
> dev-luatex mailing list
> dev-luatex at ntg.nl
> https://mailman.ntg.nl/mailman/listinfo/dev-luatex


From petr at olsak.net  Tue Mar  8 08:55:04 2022
From: petr at olsak.net (Petr Olsak)
Date: Tue, 8 Mar 2022 08:55:04 +0100
Subject: [Dev-luatex] bug with \showbox
Message-ID: <9c7c0f02-add9-0bd0-96de-681ba18f2cc4@olsak.net>

Suppose this file:

--------------

\immediate\openout0=test.ref

\setbox13=\hbox{aha}
\showbox13

\end

--------------

If I run "luatex file", it ends without errors and the \showbox result 
is written in the test.ref file.

But if the \openout line is commented or it is opened another output 
stream than zero, then the behavior is correct: it ends with:

----------------

! OK (see the transcript file).
l.5 \showbox13

?

----------------

luatex --credits:

This is LuaTeX, Version 1.15.0 (TeX Live 2022)

...

Development id: 7503

The luatex from TL2021 (id 7430) does have this problem, i.e the 
\showbox result is in transcript file always.

Regards

Petr Olsak



From luigi.scarso at gmail.com  Tue Mar  8 13:26:30 2022
From: luigi.scarso at gmail.com (luigi scarso)
Date: Tue, 8 Mar 2022 13:26:30 +0100
Subject: [Dev-luatex] bug with \showbox
In-Reply-To: <9c7c0f02-add9-0bd0-96de-681ba18f2cc4@olsak.net>
References: <9c7c0f02-add9-0bd0-96de-681ba18f2cc4@olsak.net>
Message-ID: <CAG5iGsD7DTThfkqSz=OzWqwE5eH6kOHF8JrKhC+vg-uihdwOFw@mail.gmail.com>

On Tue, Mar 8, 2022 at 8:55 AM Petr Olsak <petr at olsak.net> wrote:

> Suppose this file:
>
> --------------
>
> \immediate\openout0=test.ref
>
> \setbox13=\hbox{aha}
> \showbox13
>
> \end
>
> --------------
>
> If I run "luatex file", it ends without errors and the \showbox result
> is written in the test.ref file.
>
> But if the \openout line is commented or it is opened another output
> stream than zero, then the behavior is correct: it ends with:
>
> ----------------
>
> ! OK (see the transcript file).
> l.5 \showbox13
>
> ?
>
> ----------------
>
> luatex --credits:
>
> This is LuaTeX, Version 1.15.0 (TeX Live 2022)
>
> ...
>
> Development id: 7503
>
> The luatex from TL2021 (id 7430) does have this problem, i.e the
> \showbox result is in transcript file always.
>
> Regards
>
> Petr Olsak
>

Ok, I will  check it  during this weekend.

-- 
luigi
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mailman.ntg.nl/pipermail/dev-luatex/attachments/20220308/a770cf60/attachment.htm>

From ikumi at ikumi.que.jp  Thu Mar 10 09:18:56 2022
From: ikumi at ikumi.que.jp (Ikumi Keita)
Date: Thu, 10 Mar 2022 17:18:56 +0900
Subject: [Dev-luatex] 2 characters shift in error context
Message-ID: <93740.1646900336@localhost>

Hello LuaTeX developers,

I have a few questions I'd like to ask you. In log message, luatex
engine produces slightly different error context from what pdftex does.
Here is a sample code:
----------------------------------------------------------------------
Nullam eu ante vel est convallis dignissim. } Nulla posuere.
\bye
----------------------------------------------------------------------
When I process this file by luatex, it results in the following error:
------ luatex result -------------------------------------------------
! Too many }'s.
l.1 Nullam eu ante vel est convallis dignissim. }
                                                Nulla posuere.
----------------------------------------------------------------------
On the other hand, pdftex results in:
------ pdftex result -------------------------------------------------
! Too many }'s.
l.1 Nullam eu ante vel est convallis dignissim. }
                                                  Nulla posuere.
----------------------------------------------------------------------
The output of luatex is shifted by two characters compared with that of
pdftex. (I'm using TeX Live 2021.)

This discrepancy confuses preview-latex (subsystem of AUCTeX), which
depends on the precise position of the log messages:
https://debbugs.gnu.org/cgi/bugreport.cgi?bug=54200

I'm not sure whether this behavior is a bug or not, but is it something
I can expect to be fixed? If not, is there any workaround to make the
output the same as pdftex? (e.g. command line option)

Regards,
Ikumi Keita
#StandWithUkraine #StopWarInUkraine

From luigi.scarso at gmail.com  Thu Mar 10 09:49:29 2022
From: luigi.scarso at gmail.com (luigi scarso)
Date: Thu, 10 Mar 2022 09:49:29 +0100
Subject: [Dev-luatex] 2 characters shift in error context
In-Reply-To: <93740.1646900336@localhost>
References: <93740.1646900336@localhost>
Message-ID: <CAG5iGsB810+sghrzawEnhPO5rvGKzHSGESGNhAsAFb3dFXjdpg@mail.gmail.com>

On Thu, Mar 10, 2022 at 9:25 AM Ikumi Keita <ikumi at ikumi.que.jp> wrote:

> Hello LuaTeX developers,
>
> I have a few questions I'd like to ask you. In log message, luatex
> engine produces slightly different error context from what pdftex does.
> Here is a sample code:
> ----------------------------------------------------------------------
> Nullam eu ante vel est convallis dignissim. } Nulla posuere.
> \bye
> ----------------------------------------------------------------------
> When I process this file by luatex, it results in the following error:
> ------ luatex result -------------------------------------------------
> ! Too many }'s.
> l.1 Nullam eu ante vel est convallis dignissim. }
>                                                 Nulla posuere.
> ----------------------------------------------------------------------
> On the other hand, pdftex results in:
> ------ pdftex result -------------------------------------------------
> ! Too many }'s.
> l.1 Nullam eu ante vel est convallis dignissim. }
>                                                   Nulla posuere.
> ----------------------------------------------------------------------
> The output of luatex is shifted by two characters compared with that of
> pdftex. (I'm using TeX Live 2021.)
>
> This discrepancy confuses preview-latex (subsystem of AUCTeX), which
> depends on the precise position of the log messages:
> https://debbugs.gnu.org/cgi/bugreport.cgi?bug=54200
>
> I'm not sure whether this behavior is a bug or not, but is it something
> I can expect to be fixed? If not, is there any workaround to make the
> output the same as pdftex? (e.g. command line option)
>

I will check, but , in case , for sure no fix for this texlive:
1) the "write to stdout/stderr/log "  apparatus is complex/complicated,
it's very easy to break something;
2) pdftex and luatex are different engines, it is expected that some
outputs are anf will be different. Example:
%%test.tex
%% replace <TEXT> with
%% a very long line in japanese text, longer than 79 "chars", without
newline.
\wlog{%
<TEXT>
}
\bye
You can compare the log with pdftex and luatex.

These are the kind of things that should be addressed at the format level,
if possible, or modifying the parsing method, if possible,
being open to the fact: "different engines, different output".

-- 
luigi
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mailman.ntg.nl/pipermail/dev-luatex/attachments/20220310/56768473/attachment.htm>

From j.hagen at xs4all.nl  Thu Mar 10 11:49:44 2022
From: j.hagen at xs4all.nl (Hans Hagen)
Date: Thu, 10 Mar 2022 11:49:44 +0100
Subject: [Dev-luatex] 2 characters shift in error context
In-Reply-To: <93740.1646900336@localhost>
References: <93740.1646900336@localhost>
Message-ID: <b9bc0bed-cda0-cc40-576a-937cc8808025@xs4all.nl>

On 3/10/2022 9:18 AM, Ikumi Keita wrote:
> Hello LuaTeX developers,
> 
> I have a few questions I'd like to ask you. In log message, luatex
> engine produces slightly different error context from what pdftex does.
> Here is a sample code:
> ----------------------------------------------------------------------
> Nullam eu ante vel est convallis dignissim. } Nulla posuere.
> \bye
> ----------------------------------------------------------------------
> When I process this file by luatex, it results in the following error:
> ------ luatex result -------------------------------------------------
> ! Too many }'s.
> l.1 Nullam eu ante vel est convallis dignissim. }
>                                                  Nulla posuere.
> ----------------------------------------------------------------------
> On the other hand, pdftex results in:
> ------ pdftex result -------------------------------------------------
> ! Too many }'s.
> l.1 Nullam eu ante vel est convallis dignissim. }
>                                                    Nulla posuere.
> ----------------------------------------------------------------------
> The output of luatex is shifted by two characters compared with that of
> pdftex. (I'm using TeX Live 2021.)
> 
> This discrepancy confuses preview-latex (subsystem of AUCTeX), which
> depends on the precise position of the log messages:
> https://debbugs.gnu.org/cgi/bugreport.cgi?bug=54200
> 
> I'm not sure whether this behavior is a bug or not, but is it something
> I can expect to be fixed? If not, is there any workaround to make the
> output the same as pdftex? (e.g. command line option)
Because file and token input follows a different route in luatex an dcan 
also be influenced by lua mix-in (which itself can result in 
intermediate flushing or position adjustments of log outpout) it is best 
to assume that it's not the same as in pdftex. To a large extent is it 
the same but there are definitely differences. In this case I'd strip / 
ignore spaces before comparing. So here it probably more a side effect 
than a bug and 'fixing' this might as well introduce side effects 
someplace else.

(there are various position states wrt logging: terminal as well as log 
file and they can run in sync or out of sync depending on the situation 
and log related parameters, as well as writing from lua or tex, combined 
with configuration setting ... so we have sort of a complex commprimis)

Hans

-----------------------------------------------------------------
                                           Hans Hagen | PRAGMA ADE
               Ridderstraat 27 | 8061 GH Hasselt | The Netherlands
        tel: 038 477 53 69 | www.pragma-ade.nl | www.pragma-pod.nl
-----------------------------------------------------------------

From ikumi at ikumi.que.jp  Thu Mar 10 11:55:16 2022
From: ikumi at ikumi.que.jp (Ikumi Keita)
Date: Thu, 10 Mar 2022 19:55:16 +0900
Subject: [Dev-luatex] 2 characters shift in error context
In-Reply-To: <CAG5iGsB810+sghrzawEnhPO5rvGKzHSGESGNhAsAFb3dFXjdpg@mail.gmail.com>
References: <93740.1646900336@localhost>
 <CAG5iGsB810+sghrzawEnhPO5rvGKzHSGESGNhAsAFb3dFXjdpg@mail.gmail.com>
Message-ID: <94902.1646909716@localhost>

Hi luigi, thanks for response.

>>>>> luigi scarso <luigi.scarso at gmail.com> writes:
> I will check, but , in case , for sure no fix for this texlive:

Of course, no problem.

> 2) pdftex and luatex are different engines, it is expected that some
> outputs are anf will be different. Example:
> %%test.tex
> %% replace <TEXT> with
> %% a very long line in japanese text, longer than 79 "chars", without
> newline.
> \wlog{%
> <TEXT>
> }
> \bye
> You can compare the log with pdftex and luatex.

Indeed.

> These are the kind of things that should be addressed at the format level,
> if possible, or modifying the parsing method, if possible,
> being open to the fact: "different engines, different output".

I think it would be diffcult to address this issue by parsing only,
because the latter part of the error context, placed on the second line,
sometimes begins with whitespace:
----------------------------------------------------------------------
l.6 ...ity of an initial subsequence of length \(n\)
                                                   is \(2^{-n}\). For exampl...
                                                  ^
This whitespace is actually the first character of the latter part.
----------------------------------------------------------------------
Can you tell whether the amount of shift varies or is fixed to 2
characters? If fixed, preview-latex can take care of it.

Regards,
Ikumi Keita
#StandWithUkraine #StopWarInUkraine

From luigi.scarso at gmail.com  Thu Mar 10 12:01:05 2022
From: luigi.scarso at gmail.com (luigi scarso)
Date: Thu, 10 Mar 2022 12:01:05 +0100
Subject: [Dev-luatex] 2 characters shift in error context
In-Reply-To: <94902.1646909716@localhost>
References: <93740.1646900336@localhost>
 <CAG5iGsB810+sghrzawEnhPO5rvGKzHSGESGNhAsAFb3dFXjdpg@mail.gmail.com>
 <94902.1646909716@localhost>
Message-ID: <CAG5iGsCJNg=4Nxpjrx7xj_5ypjt1rMWi-viex64ZHG3g1ewtFQ@mail.gmail.com>

On Thu, Mar 10, 2022 at 11:55 AM Ikumi Keita <ikumi at ikumi.que.jp> wrote:

>
> Can you tell whether the amount of shift varies or is fixed to 2
> characters? If fixed, preview-latex can take care of it.
>

I will check it this weekend.

-- 
luigi
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mailman.ntg.nl/pipermail/dev-luatex/attachments/20220310/257f0a5c/attachment.htm>

From ikumi at ikumi.que.jp  Thu Mar 10 12:25:42 2022
From: ikumi at ikumi.que.jp (Ikumi Keita)
Date: Thu, 10 Mar 2022 20:25:42 +0900
Subject: [Dev-luatex] 2 characters shift in error context
In-Reply-To: <b9bc0bed-cda0-cc40-576a-937cc8808025@xs4all.nl>
References: <93740.1646900336@localhost>
 <b9bc0bed-cda0-cc40-576a-937cc8808025@xs4all.nl>
Message-ID: <95115.1646911542@localhost>

Hi Hans and luigi,

>>>>> Hans Hagen <j.hagen at xs4all.nl> writes:
> Because file and token input follows a different route in luatex an
> dcan also be influenced by lua mix-in (which itself can result in 
> intermediate flushing or position adjustments of log outpout) it is
> best to assume that it's not the same as in pdftex. To a large extent
> is it the same but there are definitely differences. In this case I'd
> strip / ignore spaces before comparing. So here it probably more a
> side effect than a bug and 'fixing' this might as well introduce side
> effects someplace else.

> (there are various position states wrt logging: terminal as well as
> log file and they can run in sync or out of sync depending on the
> situation and log related parameters, as well as writing from lua or
> tex, combined with configuration setting ... so we have sort of a
> complex commprimis)

Thanks for your insights. I understand the complexity involved in this
issue.

>>>>> luigi scarso <luigi.scarso at gmail.com> writes:
> I will check it this weekend.

Thank you, I'll wait.

Regards,
Ikumi Keita
#StandWithUkraine #StopWarInUkraine

From ikumi at ikumi.que.jp  Mon Mar 21 17:12:44 2022
From: ikumi at ikumi.que.jp (Ikumi Keita)
Date: Tue, 22 Mar 2022 01:12:44 +0900
Subject: [Dev-luatex] 2 characters shift in error context
In-Reply-To: <CAG5iGsCJNg=4Nxpjrx7xj_5ypjt1rMWi-viex64ZHG3g1ewtFQ@mail.gmail.com>
References: <93740.1646900336@localhost>
 <CAG5iGsB810+sghrzawEnhPO5rvGKzHSGESGNhAsAFb3dFXjdpg@mail.gmail.com>
 <94902.1646909716@localhost>
 <CAG5iGsCJNg=4Nxpjrx7xj_5ypjt1rMWi-viex64ZHG3g1ewtFQ@mail.gmail.com>
Message-ID: <26333.1647879164@localhost>

Hi Luigi,

>>>>> luigi scarso <luigi.scarso at gmail.com> writes:
> I will check it this weekend.

Was there any progress with respect to this issue?

Regards,
Ikumi Keita
#StandWithUkraine #StopWarInUkraine

From luigi.scarso at gmail.com  Mon Mar 21 17:43:17 2022
From: luigi.scarso at gmail.com (luigi scarso)
Date: Mon, 21 Mar 2022 17:43:17 +0100
Subject: [Dev-luatex] 2 characters shift in error context
In-Reply-To: <26333.1647879164@localhost>
References: <93740.1646900336@localhost>
 <CAG5iGsB810+sghrzawEnhPO5rvGKzHSGESGNhAsAFb3dFXjdpg@mail.gmail.com>
 <94902.1646909716@localhost>
 <CAG5iGsCJNg=4Nxpjrx7xj_5ypjt1rMWi-viex64ZHG3g1ewtFQ@mail.gmail.com>
 <26333.1647879164@localhost>
Message-ID: <CAG5iGsAm-KokjWMH4k_XT6F1A9QQZVMhV==2+EBK6WW_=L1fHw@mail.gmail.com>

On Mon, Mar 21, 2022 at 5:12 PM Ikumi Keita <ikumi at ikumi.que.jp> wrote:

> Hi Luigi,
>
> >>>>> luigi scarso <luigi.scarso at gmail.com> writes:
> > I will check it this weekend.
>
> Was there any progress with respect to this issue?
>
>
I have checked it but  luatex and pdftex manage the split the line in
different way.
For example this gives a different log
 Nullam eu ante vel est convallis dignissim.0123456789} Nulla posuere.
\bye
I will look at the xetex output closely.
-- 
luigi
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mailman.ntg.nl/pipermail/dev-luatex/attachments/20220321/d326e819/attachment.htm>

From ikumi at ikumi.que.jp  Mon Mar 21 18:12:12 2022
From: ikumi at ikumi.que.jp (Ikumi Keita)
Date: Tue, 22 Mar 2022 02:12:12 +0900
Subject: [Dev-luatex] 2 characters shift in error context
In-Reply-To: <CAG5iGsAm-KokjWMH4k_XT6F1A9QQZVMhV==2+EBK6WW_=L1fHw@mail.gmail.com>
References: <93740.1646900336@localhost>
 <CAG5iGsB810+sghrzawEnhPO5rvGKzHSGESGNhAsAFb3dFXjdpg@mail.gmail.com>
 <94902.1646909716@localhost>
 <CAG5iGsCJNg=4Nxpjrx7xj_5ypjt1rMWi-viex64ZHG3g1ewtFQ@mail.gmail.com>
 <26333.1647879164@localhost>
 <CAG5iGsAm-KokjWMH4k_XT6F1A9QQZVMhV==2+EBK6WW_=L1fHw@mail.gmail.com>
Message-ID: <26722.1647882732@localhost>

>>>>> luigi scarso <luigi.scarso at gmail.com> writes:
> I have checked it but  luatex and pdftex manage the split the line in
> different way.
> For example this gives a different log
>  Nullam eu ante vel est convallis dignissim.0123456789} Nulla posuere.
> \bye
> I will look at the xetex output closely.

I see. I'll wait another week.

Regards,
Ikumi Keita
#StandWithUkraine #StopWarInUkraine

From jerome.laurens at u-bourgogne.fr  Fri Mar 25 16:51:07 2022
From: jerome.laurens at u-bourgogne.fr (=?utf-8?Q?J=C3=A9r=C3=B4me_LAURENS?=)
Date: Fri, 25 Mar 2022 16:51:07 +0100
Subject: [Dev-luatex] Problem with directlua and synctex_tag
Message-ID: <B9021CCD-EB08-4A2F-BC28-BFD89D6BCA0D@u-bourgogne.fr>

We can use

```
\directlua{tex.set_synctex_tag(421)}
\directlua{print('421=',tex.get_synctex_tag())}
\bye
```
To set and read the synctex tag.
But if we wrap this into a macro, things get broken and the synctex tag is not changed.
```
\def\test{\directlua{tex.set_synctex_tag(421)}}
\test
\directlua{print('421=',tex.get_synctex_tag())}
\bye
```
For synctex_line there is no such problem.

Is this a bug or a feature ?



From j.hagen at xs4all.nl  Sun Mar 27 14:54:44 2022
From: j.hagen at xs4all.nl (Hans Hagen)
Date: Sun, 27 Mar 2022 14:54:44 +0200
Subject: [Dev-luatex] Problem with directlua and synctex_tag
In-Reply-To: <B9021CCD-EB08-4A2F-BC28-BFD89D6BCA0D@u-bourgogne.fr>
References: <B9021CCD-EB08-4A2F-BC28-BFD89D6BCA0D@u-bourgogne.fr>
Message-ID: <92b51f93-bb5e-0205-be2e-a52823236746@xs4all.nl>

On 3/25/2022 4:51 PM, JÃ©rÃ´me LAURENS wrote:
> We can use
> 
> ```
> \directlua{tex.set_synctex_tag(421)}
> \directlua{print('421=',tex.get_synctex_tag())}
> \bye
> ```
> To set and read the synctex tag.
> But if we wrap this into a macro, things get broken and the synctex tag is not changed.
> ```
> \def\test{\directlua{tex.set_synctex_tag(421)}}
> \test
> \directlua{print('421=',tex.get_synctex_tag())}
> \bye
> ```
> For synctex_line there is no such problem.
> 
> Is this a bug or a feature ?
feature ... but mostly macro package related as that is responsible for 
the catcode of _ which is stored in the macro body

Hans

-----------------------------------------------------------------
                                           Hans Hagen | PRAGMA ADE
               Ridderstraat 27 | 8061 GH Hasselt | The Netherlands
        tel: 038 477 53 69 | www.pragma-ade.nl | www.pragma-pod.nl
-----------------------------------------------------------------

From luigi.scarso at gmail.com  Mon Mar 28 09:57:30 2022
From: luigi.scarso at gmail.com (luigi scarso)
Date: Mon, 28 Mar 2022 09:57:30 +0200
Subject: [Dev-luatex] 2 characters shift in error context
In-Reply-To: <73419.1648393888@localhost>
References: <93740.1646900336@localhost>
 <CAG5iGsB810+sghrzawEnhPO5rvGKzHSGESGNhAsAFb3dFXjdpg@mail.gmail.com>
 <94902.1646909716@localhost>
 <CAG5iGsCJNg=4Nxpjrx7xj_5ypjt1rMWi-viex64ZHG3g1ewtFQ@mail.gmail.com>
 <26333.1647879164@localhost>
 <CAG5iGsAm-KokjWMH4k_XT6F1A9QQZVMhV==2+EBK6WW_=L1fHw@mail.gmail.com>
 <73419.1648393888@localhost>
Message-ID: <CAG5iGsCPF+R8LXRxTU+65EcCpfKHrwjBp2kt_8yhRMSE9FHBSw@mail.gmail.com>

On Sun, Mar 27, 2022 at 5:11 PM Ikumi Keita <ikumikeita at jcom.home.ne.jp>
wrote:

> Hi,
>
> >>>>> luigi scarso <luigi.scarso at gmail.com> writes:
> > I have checked it but  luatex and pdftex manage the split the line in
> > different way.
> > For example this gives a different log
> >  Nullam eu ante vel est convallis dignissim.0123456789} Nulla posuere.
> > \bye
> > I will look at the xetex output closely.
>
> Do you have any news about this?
>

Sorry for the delay.
I have to postpone it, no time now . I am not sure that I will fix it
because I don't see a bug (yet).

-- 
luigi
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mailman.ntg.nl/pipermail/dev-luatex/attachments/20220328/8e8e91ce/attachment.htm>

From frank.mittelbach at latex-project.org  Mon Mar 28 10:49:58 2022
From: frank.mittelbach at latex-project.org (Frank Mittelbach)
Date: Mon, 28 Mar 2022 10:49:58 +0200
Subject: [Dev-luatex] 2 characters shift in error context
In-Reply-To: <CAG5iGsCPF+R8LXRxTU+65EcCpfKHrwjBp2kt_8yhRMSE9FHBSw@mail.gmail.com>
References: <93740.1646900336@localhost>
 <CAG5iGsB810+sghrzawEnhPO5rvGKzHSGESGNhAsAFb3dFXjdpg@mail.gmail.com>
 <94902.1646909716@localhost>
 <CAG5iGsCJNg=4Nxpjrx7xj_5ypjt1rMWi-viex64ZHG3g1ewtFQ@mail.gmail.com>
 <26333.1647879164@localhost>
 <CAG5iGsAm-KokjWMH4k_XT6F1A9QQZVMhV==2+EBK6WW_=L1fHw@mail.gmail.com>
 <73419.1648393888@localhost>
 <CAG5iGsCPF+R8LXRxTU+65EcCpfKHrwjBp2kt_8yhRMSE9FHBSw@mail.gmail.com>
Message-ID: <58566c04-b80d-78e5-ab3c-8bc5afd20af0@latex-project.org>

Luigi
> 
> Sorry for the delay.
> I have to postpone it, no time now . I am not sure that I will fix it
> because I don't see a bug (yet).

clearly it is a borderline case and I know that Hans et al do not see 
log compatibility of any importance and from a certain viewpoint I can 
understand it.

However, for folks that attempt to ensure that TeX code works correctly 
across different engines it makes life quite hard, because any change in 
the log output means you can't certify some outcome as correct and then 
make sure that you get the same output on the next engine.

For LaTeX we already have a larger script that tries to mask most 
differences, but some are difficult to if not impossible to catch late 
in the game (especially if they involve spaces) which means we then end 
up with separately certified logs and that s a nightmare to maintain 
(and leads to overlooking changes that are relevant).

The other type of issue with that (and which is the starting point of 
this thread) are GUI interfaces that try to interpret errors and 
warnings. Of course they can maintain different code branches based on 
engine used, but again that leads to complications which are better 
solved upstream but not producing differences when not necessary.

So no, they aren't necessarily bugs if the log output differs but it 
would be nice and quite helpful if they don't (unnecessarily) when possible.

cheers
frank


From jerome.laurens at u-bourgogne.fr  Mon Mar 28 13:32:08 2022
From: jerome.laurens at u-bourgogne.fr (=?utf-8?Q?J=C3=A9r=C3=B4me_LAURENS?=)
Date: Mon, 28 Mar 2022 13:32:08 +0200
Subject: [Dev-luatex] Problem with directlua and synctex_tag
In-Reply-To: <92b51f93-bb5e-0205-be2e-a52823236746@xs4all.nl>
References: <B9021CCD-EB08-4A2F-BC28-BFD89D6BCA0D@u-bourgogne.fr>
 <92b51f93-bb5e-0205-be2e-a52823236746@xs4all.nl>
Message-ID: <7C18AB89-E9A6-4808-9CF9-B5057A532B17@u-bourgogne.fr>

I do not really understand what is the relation with macro packages and _ because it is just raw luatex.
```
\def\test{\directlua{tex.set_synctex_line(421)}}
\test
\directlua{print('421=',tex.get_synctex_line())}
\bye
```
This code expectedly prints "421=421" to the console.
If we replace line by tag, this does not work
```
\def\test{\directlua{tex.set_synctex_tag(421)}}
\test
\directlua{print('421=',tex.get_synctex_tag())}
\bye
```
This code unexpectedly prints "421=1" to the console.
On the contrary 
```
\directlua{tex.set_synctex_tag(421)}
\directlua{print('421=',tex.get_synctex_tag())}
\bye
```
expectedly prints "421=421" to the console.

If this is a feature it must definitely be documented because it is really special.

> Le 27 mars 2022 Ã  14:54, Hans Hagen <j.hagen at xs4all.nl> a Ã©crit :
> 
> On 3/25/2022 4:51 PM, JÃ©rÃ´me LAURENS wrote:
>> We can use
>> ```
>> \directlua{tex.set_synctex_tag(421)}
>> \directlua{print('421=',tex.get_synctex_tag())}
>> \bye
>> ```
>> To set and read the synctex tag.
>> But if we wrap this into a macro, things get broken and the synctex tag is not changed.
>> ```
>> \def\test{\directlua{tex.set_synctex_tag(421)}}
>> \test
>> \directlua{print('421=',tex.get_synctex_tag())}
>> \bye
>> ```
>> For synctex_line there is no such problem.
>> Is this a bug or a feature ?
> feature ... but mostly macro package related as that is responsible for the catcode of _ which is stored in the macro body
> 
> Hans
> 
> -----------------------------------------------------------------
>                                          Hans Hagen | PRAGMA ADE
>              Ridderstraat 27 | 8061 GH Hasselt | The Netherlands
>       tel: 038 477 53 69 | www.pragma-ade.nl | www.pragma-pod.nl
> -----------------------------------------------------------------


From j.hagen at xs4all.nl  Mon Mar 28 14:40:41 2022
From: j.hagen at xs4all.nl (Hans Hagen)
Date: Mon, 28 Mar 2022 14:40:41 +0200
Subject: [Dev-luatex] Problem with directlua and synctex_tag
In-Reply-To: <7C18AB89-E9A6-4808-9CF9-B5057A532B17@u-bourgogne.fr>
References: <B9021CCD-EB08-4A2F-BC28-BFD89D6BCA0D@u-bourgogne.fr>
 <92b51f93-bb5e-0205-be2e-a52823236746@xs4all.nl>
 <7C18AB89-E9A6-4808-9CF9-B5057A532B17@u-bourgogne.fr>
Message-ID: <e9ff2de8-5ab0-118b-888e-2603e98f3e92@xs4all.nl>

On 3/28/2022 1:32 PM, JÃ©rÃ´me LAURENS wrote:
> I do not really understand what is the relation with macro packages and _ because it is just raw luatex.
depends. i've seen it being an active character; anyway,

     \directlua{
         tex.set_synctex_tag(99)
         print(tex.get_synctex_tag())
         tex.set_synctex_tag(199)
         print(tex.get_synctex_tag())
     }

does what it is supposed to do: sets the tag of the current input and 
reports the tag of the current input and every \directlua pushed the 
stack so after such a call that state is gone

Hans


-----------------------------------------------------------------
                                           Hans Hagen | PRAGMA ADE
               Ridderstraat 27 | 8061 GH Hasselt | The Netherlands
        tel: 038 477 53 69 | www.pragma-ade.nl | www.pragma-pod.nl
-----------------------------------------------------------------

From ikumi at ikumi.que.jp  Mon Mar 28 14:42:52 2022
From: ikumi at ikumi.que.jp (Ikumi Keita)
Date: Mon, 28 Mar 2022 21:42:52 +0900
Subject: [Dev-luatex] 2 characters shift in error context
In-Reply-To: <CAG5iGsCPF+R8LXRxTU+65EcCpfKHrwjBp2kt_8yhRMSE9FHBSw@mail.gmail.com>
References: <93740.1646900336@localhost>
 <CAG5iGsB810+sghrzawEnhPO5rvGKzHSGESGNhAsAFb3dFXjdpg@mail.gmail.com>
 <94902.1646909716@localhost>
 <CAG5iGsCJNg=4Nxpjrx7xj_5ypjt1rMWi-viex64ZHG3g1ewtFQ@mail.gmail.com>
 <26333.1647879164@localhost>
 <CAG5iGsAm-KokjWMH4k_XT6F1A9QQZVMhV==2+EBK6WW_=L1fHw@mail.gmail.com>
 <73419.1648393888@localhost>
 <CAG5iGsCPF+R8LXRxTU+65EcCpfKHrwjBp2kt_8yhRMSE9FHBSw@mail.gmail.com>
Message-ID: <79711.1648471372@localhost>

[ To list moderator; sorry for having posted with wrong From address. ]

Hi Luigi,
>>>>> luigi scarso <luigi.scarso at gmail.com> writes:
> Sorry for the delay.
> I have to postpone it, no time now . I am not sure that I will fix it
> because I don't see a bug (yet).

I see, then I'll wait in a long span, not anticipating too much.

Regards,
Ikumi Keita
#StandWithUkraine #StopWarInUkraine

From jerome.laurens at u-bourgogne.fr  Mon Mar 28 18:53:30 2022
From: jerome.laurens at u-bourgogne.fr (=?utf-8?Q?J=C3=A9r=C3=B4me_LAURENS?=)
Date: Mon, 28 Mar 2022 18:53:30 +0200
Subject: [Dev-luatex] Problem with directlua and synctex_tag
In-Reply-To: <e9ff2de8-5ab0-118b-888e-2603e98f3e92@xs4all.nl>
References: <B9021CCD-EB08-4A2F-BC28-BFD89D6BCA0D@u-bourgogne.fr>
 <92b51f93-bb5e-0205-be2e-a52823236746@xs4all.nl>
 <7C18AB89-E9A6-4808-9CF9-B5057A532B17@u-bourgogne.fr>
 <e9ff2de8-5ab0-118b-888e-2603e98f3e92@xs4all.nl>
Message-ID: <170B7732-7D27-4B06-8182-FC51ED9CFB63@u-bourgogne.fr>

Things seem not as simple as you suggest, at least on luatex 1.13.2.

In next example, synctex_tag and synctex_line both survive the first \directlua call, so the state is not gone, which is a good thing

 \directlua{
tex.set_synctex_tag(99)
print(tex.get_synctex_tag())
tex.set_synctex_tag(199)
tex.set_synctex_line(299)
print(tex.get_synctex_line())
tex.set_synctex_line(399)
}
\directlua{
print(tex.get_synctex_tag())
print(tex.get_synctex_line())
}
\bye

In next example where \directlua is called from a macro, synctex_line survives the call but not synctex_tag.
So some part of the state is gone, which is not practical.

\def\Setter{
\directlua{
tex.set_synctex_tag(99)
print(tex.get_synctex_tag())
tex.set_synctex_tag(199)
tex.set_synctex_line(299)
print(tex.get_synctex_line())
tex.set_synctex_line(399)
}
}
\Setter
\def\Getter{
\directlua{
print(tex.get_synctex_tag())
print(tex.get_synctex_line())
}
}
\Getter
\bye


> Le 28 mars 2022 Ã  14:40, Hans Hagen <j.hagen at xs4all.nl> a Ã©crit :
> 
> On 3/28/2022 1:32 PM, JÃ©rÃ´me LAURENS wrote:
>> I do not really understand what is the relation with macro packages and _ because it is just raw luatex.
> depends. i've seen it being an active character; anyway,
> 
>    \directlua{
>        tex.set_synctex_tag(99)
>        print(tex.get_synctex_tag())
>        tex.set_synctex_tag(199)
>        print(tex.get_synctex_tag())
>    }
> 
> does what it is supposed to do: sets the tag of the current input and reports the tag of the current input and every \directlua pushed the stack so after such a call that state is gone
> 
> Hans
> 
> 
> -----------------------------------------------------------------
>                                          Hans Hagen | PRAGMA ADE
>              Ridderstraat 27 | 8061 GH Hasselt | The Netherlands
>       tel: 038 477 53 69 | www.pragma-ade.nl | www.pragma-pod.nl
> -----------------------------------------------------------------
> _______________________________________________
> dev-luatex mailing list
> dev-luatex at ntg.nl
> https://mailman.ntg.nl/mailman/listinfo/dev-luatex


From tex at 2krueger.de  Mon Mar 28 19:46:42 2022
From: tex at 2krueger.de (Marcel Fabian =?utf-8?Q?Kr=C3=BCger?=)
Date: Mon, 28 Mar 2022 19:46:42 +0200
Subject: [Dev-luatex] Problem with directlua and synctex_tag
In-Reply-To: <170B7732-7D27-4B06-8182-FC51ED9CFB63@u-bourgogne.fr>
References: <B9021CCD-EB08-4A2F-BC28-BFD89D6BCA0D@u-bourgogne.fr>
 <92b51f93-bb5e-0205-be2e-a52823236746@xs4all.nl>
 <7C18AB89-E9A6-4808-9CF9-B5057A532B17@u-bourgogne.fr>
 <e9ff2de8-5ab0-118b-888e-2603e98f3e92@xs4all.nl>
 <170B7732-7D27-4B06-8182-FC51ED9CFB63@u-bourgogne.fr>
Message-ID: <20220328174642.bf6puh7ifxssdaif@beeblebrox>

On Mon, Mar 28, 2022 at 06:53:30PM +0200, JÃ©rÃ´me LAURENS wrote:
> Things seem not as simple as you suggest, at least on luatex 1.13.2.
> 
> In next example, synctex_tag and synctex_line both survive the first \directlua call, so the state is not gone, which is a good thing
> 
>  \directlua{
> tex.set_synctex_tag(99)
> print(tex.get_synctex_tag())
> tex.set_synctex_tag(199)
> tex.set_synctex_line(299)
> print(tex.get_synctex_line())
> tex.set_synctex_line(399)
> }
> \directlua{
> print(tex.get_synctex_tag())
> print(tex.get_synctex_line())
> }
> \bye
> 
> In next example where \directlua is called from a macro, synctex_line survives the call but not synctex_tag.
> So some part of the state is gone, which is not practical.
> 
> \def\Setter{
> \directlua{
> tex.set_synctex_tag(99)
> print(tex.get_synctex_tag())
> tex.set_synctex_tag(199)
> tex.set_synctex_line(299)
> print(tex.get_synctex_line())
> tex.set_synctex_line(399)
> }
> }
> \Setter
> \def\Getter{
> \directlua{
> print(tex.get_synctex_tag())
> print(tex.get_synctex_line())
> }
> }
> \Getter
> \bye
> 

As Hans wrote the tag is set for the current input level. A macro
expansion is a new input level, while \directlua in general is not
(except of course if new input is added from the Lua code)

- Marcel

From jerome.laurens at u-bourgogne.fr  Mon Mar 28 21:09:53 2022
From: jerome.laurens at u-bourgogne.fr (=?utf-8?Q?J=C3=A9r=C3=B4me_LAURENS?=)
Date: Mon, 28 Mar 2022 21:09:53 +0200
Subject: [Dev-luatex] Problem with directlua and synctex_tag
In-Reply-To: <20220328174642.bf6puh7ifxssdaif@beeblebrox>
References: <B9021CCD-EB08-4A2F-BC28-BFD89D6BCA0D@u-bourgogne.fr>
 <92b51f93-bb5e-0205-be2e-a52823236746@xs4all.nl>
 <7C18AB89-E9A6-4808-9CF9-B5057A532B17@u-bourgogne.fr>
 <e9ff2de8-5ab0-118b-888e-2603e98f3e92@xs4all.nl>
 <170B7732-7D27-4B06-8182-FC51ED9CFB63@u-bourgogne.fr>
 <20220328174642.bf6puh7ifxssdaif@beeblebrox>
Message-ID: <B43A2DD0-E322-49B9-BAB6-1B600A132D78@u-bourgogne.fr>

I have a better understanding now, but the problem still remains that synctex_tag and synctex_line are not managed accordingly,
as illustrated by all the examples given so far.
My first thinking was that synctex_tag behavior should follow synctex_line behavior, now it clearly appears that synctex_line should follow synctex_tag instead.

Consider next code
```
\directlua{
tex.set_synctex_tag(99)
tex.set_synctex_line(299)
}
\MyMacro
\directlua{
print(tex.get_synctex_tag())
print(tex.get_synctex_line())
}
\bye
```
Whatever \MyMacro is, synctex_tag is 99, but synctex_line is unpredictable.
That is a problem.


> Le 28 mars 2022 Ã  19:46, Marcel Fabian KrÃ¼ger <tex at 2krueger.de> a Ã©crit :
> 
> On Mon, Mar 28, 2022 at 06:53:30PM +0200, JÃ©rÃ´me LAURENS wrote:
>> Things seem not as simple as you suggest, at least on luatex 1.13.2.
>> 
>> In next example, synctex_tag and synctex_line both survive the first \directlua call, so the state is not gone, which is a good thing
>> 
>> \directlua{
>> tex.set_synctex_tag(99)
>> print(tex.get_synctex_tag())
>> tex.set_synctex_tag(199)
>> tex.set_synctex_line(299)
>> print(tex.get_synctex_line())
>> tex.set_synctex_line(399)
>> }
>> \directlua{
>> print(tex.get_synctex_tag())
>> print(tex.get_synctex_line())
>> }
>> \bye
>> 
>> In next example where \directlua is called from a macro, synctex_line survives the call but not synctex_tag.
>> So some part of the state is gone, which is not practical.
>> 
>> \def\Setter{
>> \directlua{
>> tex.set_synctex_tag(99)
>> print(tex.get_synctex_tag())
>> tex.set_synctex_tag(199)
>> tex.set_synctex_line(299)
>> print(tex.get_synctex_line())
>> tex.set_synctex_line(399)
>> }
>> }
>> \Setter
>> \def\Getter{
>> \directlua{
>> print(tex.get_synctex_tag())
>> print(tex.get_synctex_line())
>> }
>> }
>> \Getter
>> \bye
>> 
> 
> As Hans wrote the tag is set for the current input level. A macro
> expansion is a new input level, while \directlua in general is not
> (except of course if new input is added from the Lua code)
> 
> - Marcel


From jerome.laurens at u-bourgogne.fr  Tue Mar 29 06:12:14 2022
From: jerome.laurens at u-bourgogne.fr (=?utf-8?Q?J=C3=A9r=C3=B4me_LAURENS?=)
Date: Tue, 29 Mar 2022 06:12:14 +0200
Subject: [Dev-luatex] Problem with directlua and synctex_tag
In-Reply-To: <B43A2DD0-E322-49B9-BAB6-1B600A132D78@u-bourgogne.fr>
References: <B9021CCD-EB08-4A2F-BC28-BFD89D6BCA0D@u-bourgogne.fr>
 <92b51f93-bb5e-0205-be2e-a52823236746@xs4all.nl>
 <7C18AB89-E9A6-4808-9CF9-B5057A532B17@u-bourgogne.fr>
 <e9ff2de8-5ab0-118b-888e-2603e98f3e92@xs4all.nl>
 <170B7732-7D27-4B06-8182-FC51ED9CFB63@u-bourgogne.fr>
 <20220328174642.bf6puh7ifxssdaif@beeblebrox>
 <B43A2DD0-E322-49B9-BAB6-1B600A132D78@u-bourgogne.fr>
Message-ID: <B9EF7234-044A-495E-AE2D-9C15B0B4BABA@u-bourgogne.fr>

I think I know understand what is really meant by "obeys save stack" in the documentation, but that was not easy to catch due to 3 bugs in the implementation: contrary to the documentation

1 - force_synctex_tag obeys save stack
2 - set_synctex_line does not obey save stack
3 - force_synctex_line obeys save stack

\directlua{
tex.set_synctex_tag(11)
tex.set_synctex_line(22)
}\def\MyMacro{
\directlua{
tex.set_synctex_tag(111)
tex.set_synctex_line(222)
}}
\MyMacro
\directlua{
print("SUCCESS 11 expected:", tex.get_synctex_tag())
print("FAILURE 22 expected:", tex.get_synctex_line())
}
\directlua{
tex.set_synctex_tag(11)
tex.set_synctex_line(22)
}
\def\MyMacro{
\directlua{
tex.force_synctex_tag(111)
tex.force_synctex_line(222)
}}
\MyMacro
\directlua{
print("FAILURE 111 expected:", tex.get_synctex_tag())
print("FAILURE 222 expected:", tex.get_synctex_line())
}
\bye


> Le 28 mars 2022 Ã  21:09, JÃ©rÃ´me LAURENS <jerome.laurens at u-bourgogne.fr> a Ã©crit :
> 
> I have a better understanding now, but the problem still remains that synctex_tag and synctex_line are not managed accordingly,
> as illustrated by all the examples given so far.
> My first thinking was that synctex_tag behavior should follow synctex_line behavior, now it clearly appears that synctex_line should follow synctex_tag instead.
> 
> Consider next code
> ```
> \directlua{
> tex.set_synctex_tag(99)
> tex.set_synctex_line(299)
> }
> \MyMacro
> \directlua{
> print(tex.get_synctex_tag())
> print(tex.get_synctex_line())
> }
> \bye
> ```
> Whatever \MyMacro is, synctex_tag is 99, but synctex_line is unpredictable.
> That is a problem.
> 
> 
>> Le 28 mars 2022 Ã  19:46, Marcel Fabian KrÃ¼ger <tex at 2krueger.de> a Ã©crit :
>> 
>> On Mon, Mar 28, 2022 at 06:53:30PM +0200, JÃ©rÃ´me LAURENS wrote:
>>> Things seem not as simple as you suggest, at least on luatex 1.13.2.
>>> 
>>> In next example, synctex_tag and synctex_line both survive the first \directlua call, so the state is not gone, which is a good thing
>>> 
>>> \directlua{
>>> tex.set_synctex_tag(99)
>>> print(tex.get_synctex_tag())
>>> tex.set_synctex_tag(199)
>>> tex.set_synctex_line(299)
>>> print(tex.get_synctex_line())
>>> tex.set_synctex_line(399)
>>> }
>>> \directlua{
>>> print(tex.get_synctex_tag())
>>> print(tex.get_synctex_line())
>>> }
>>> \bye
>>> 
>>> In next example where \directlua is called from a macro, synctex_line survives the call but not synctex_tag.
>>> So some part of the state is gone, which is not practical.
>>> 
>>> \def\Setter{
>>> \directlua{
>>> tex.set_synctex_tag(99)
>>> print(tex.get_synctex_tag())
>>> tex.set_synctex_tag(199)
>>> tex.set_synctex_line(299)
>>> print(tex.get_synctex_line())
>>> tex.set_synctex_line(399)
>>> }
>>> }
>>> \Setter
>>> \def\Getter{
>>> \directlua{
>>> print(tex.get_synctex_tag())
>>> print(tex.get_synctex_line())
>>> }
>>> }
>>> \Getter
>>> \bye
>>> 
>> 
>> As Hans wrote the tag is set for the current input level. A macro
>> expansion is a new input level, while \directlua in general is not
>> (except of course if new input is added from the Lua code)
>> 
>> - Marcel
> 
> _______________________________________________
> dev-luatex mailing list
> dev-luatex at ntg.nl
> https://mailman.ntg.nl/mailman/listinfo/dev-luatex


From skvenkat at tnqsoftware.co.in  Sat Mar 26 14:44:31 2022
From: skvenkat at tnqsoftware.co.in (Suki, Venkatesan (TNQ Software))
Date: Sat, 26 Mar 2022 19:14:31 +0530
Subject: [Dev-luatex] LuaLaTeX -- hyperlink with ragged right
In-Reply-To: <a4ff65f0-e743-6b4c-5c33-389a6d4b5d64@tnqsoftware.co.in>
References: <a4ff65f0-e743-6b4c-5c33-389a6d4b5d64@tnqsoftware.co.in>
Message-ID: <CADggAEz94CrQdTXMT9ZNR8BGM4w7r3zVzcsSGNAVgvzQATd5WA@mail.gmail.com>

Please send the LaTeX markup code also...

SKV


On Sat, 26 Mar, 2022, 8:34 am Kunchitapadam, Baskaran (TNQ Software), <
n.k.baskaran at tnqsoftware.co.in> wrote:

> Hi Team,
>
> I am working in LuaLaTeX templates. I have face the below issue in title
> formatting. I have ragged right title content which is hyperlinked.
>
> Each line end blank also covered hyper link. We need to format like the
> last line in below image. Kindly suggest a solution.
>
> --
>
> Thanks and Regards
>
> Baskaran NK
>
> Tech. Lead â 4722 / 4847
>
> M : +91 9840928250
>
> TNQ Technologies Pvt. Ltd.
>
> Linkedin <https://www.linkedin.com/company/tnqtechnologies/> | Twitter
> <https://twitter.com/TNQtechnologies> | Facebook
> <https://www.facebook.com/TNQTechnologies>
>
> T : +91 44 4596 4800 | tnq.co.in <http://www.tnq.co.in/>
>
>
>

-- 


Disclaimer: The entire content of this email message, including any files 
transmitted with it are confidential and intended solely for the use of the 
individual or entity to whom they are addressed. If you are not the named 
addressee or part of the entity, you should not disseminate, distribute, or 
copy this email. Please notify the sender immediately by e-mail if you have 
received this email by mistake and delete this e-mail from your system. If 
you are not the intended recipient you are notified that disclosing, 
copying, distributing, or taking any action in reliance on the contents of 
this information is strictly prohibited.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mailman.ntg.nl/pipermail/dev-luatex/attachments/20220326/1825742c/attachment-0001.htm>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: wGQA05cFzsbgMIfo.png
Type: image/png
Size: 33499 bytes
Desc: not available
URL: <http://mailman.ntg.nl/pipermail/dev-luatex/attachments/20220326/1825742c/attachment-0002.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: wGQA05cFzsbgMIfo.png
Type: image/png
Size: 33499 bytes
Desc: not available
URL: <http://mailman.ntg.nl/pipermail/dev-luatex/attachments/20220326/1825742c/attachment-0003.png>

From j.hagen at xs4all.nl  Tue Mar 29 09:57:18 2022
From: j.hagen at xs4all.nl (Hans Hagen)
Date: Tue, 29 Mar 2022 09:57:18 +0200
Subject: [Dev-luatex] Problem with directlua and synctex_tag
In-Reply-To: <B9EF7234-044A-495E-AE2D-9C15B0B4BABA@u-bourgogne.fr>
References: <B9021CCD-EB08-4A2F-BC28-BFD89D6BCA0D@u-bourgogne.fr>
 <92b51f93-bb5e-0205-be2e-a52823236746@xs4all.nl>
 <7C18AB89-E9A6-4808-9CF9-B5057A532B17@u-bourgogne.fr>
 <e9ff2de8-5ab0-118b-888e-2603e98f3e92@xs4all.nl>
 <170B7732-7D27-4B06-8182-FC51ED9CFB63@u-bourgogne.fr>
 <20220328174642.bf6puh7ifxssdaif@beeblebrox>
 <B43A2DD0-E322-49B9-BAB6-1B600A132D78@u-bourgogne.fr>
 <B9EF7234-044A-495E-AE2D-9C15B0B4BABA@u-bourgogne.fr>
Message-ID: <9d2bc4ac-9a3d-82d6-6447-749db244ca81@xs4all.nl>

On 3/29/2022 6:12 AM, JÃ©rÃ´me LAURENS wrote:
> I think I know understand what is really meant by "obeys save stack" in the documentation, but that was not easy to catch due to 3 bugs in the implementation: contrary to the documentation
> 
> 1 - force_synctex_tag obeys save stack
> 2 - set_synctex_line does not obey save stack
> 3 - force_synctex_line obeys save stack
> 
> \directlua{
> tex.set_synctex_tag(11)
> tex.set_synctex_line(22)
> }\def\MyMacro{
> \directlua{
> tex.set_synctex_tag(111)
> tex.set_synctex_line(222)
> }}
> \MyMacro
> \directlua{
> print("SUCCESS 11 expected:", tex.get_synctex_tag())
> print("FAILURE 22 expected:", tex.get_synctex_line())
> }
> \directlua{
> tex.set_synctex_tag(11)
> tex.set_synctex_line(22)
> }
> \def\MyMacro{
> \directlua{
> tex.force_synctex_tag(111)
> tex.force_synctex_line(222)
> }}
> \MyMacro
> \directlua{
> print("FAILURE 111 expected:", tex.get_synctex_tag())
> print("FAILURE 222 expected:", tex.get_synctex_line())
> }
> \bye
the tag is stores in the input state and reading from (pseudo) files as 
well as macro expansion and expanding pushed (back) token lists bump the 
pointer

a line in tex is only reliable when it refers to a file; the extra 
synctex line states are global and can be used as overload but it 
assumes one knows where and what happens at that point

the setters and getters are pretty simple and consistent: tag is 
stacked, the others aren't

depending on what detail is enabled the synctex node line field get from 
the overloads or the built in line state handler

one can of course maintain a purpose specific stack in lua

\directlua{
tex.set_synctex_tag(11)
tex.set_synctex_line(22)
print("set value at level N  :", 
status.input_ptr,11,22,tex.get_synctex_tag(),tex.get_synctex_line())
}\def\MyMacro{%
\directlua{
tex.set_synctex_tag(111)
tex.set_synctex_line(222)
print("set value at level N+1:", 
status.input_ptr,111,222,tex.get_synctex_tag(),tex.get_synctex_line())
}}
\MyMacro
\directlua{
print("get value at level N  :", 
status.input_ptr,tex.get_synctex_tag(),tex.get_synctex_line())
}
\directlua{
tex.set_synctex_tag(11)
tex.set_synctex_line(22)
print("set value at level N  :", 
status.input_ptr,11,22,tex.get_synctex_tag(),tex.get_synctex_line())
}
\def\MyMacro{
\directlua{
tex.force_synctex_tag(111)
tex.force_synctex_line(222)
print("set force at level N+1:", 
status.input_ptr,111,222,tex.get_synctex_tag(),tex.get_synctex_line())
}}
\MyMacro
\directlua{
print("get value at level N  :", 
status.input_ptr,tex.get_synctex_tag(),tex.get_synctex_line())
}

\bye

-----------------------------------------------------------------
                                           Hans Hagen | PRAGMA ADE
               Ridderstraat 27 | 8061 GH Hasselt | The Netherlands
        tel: 038 477 53 69 | www.pragma-ade.nl | www.pragma-pod.nl
-----------------------------------------------------------------

From jerome.laurens at u-bourgogne.fr  Wed Mar 30 10:15:28 2022
From: jerome.laurens at u-bourgogne.fr (=?utf-8?Q?J=C3=A9r=C3=B4me_LAURENS?=)
Date: Wed, 30 Mar 2022 10:15:28 +0200
Subject: [Dev-luatex] Problem with directlua and synctex_tag
In-Reply-To: <9d2bc4ac-9a3d-82d6-6447-749db244ca81@xs4all.nl>
References: <B9021CCD-EB08-4A2F-BC28-BFD89D6BCA0D@u-bourgogne.fr>
 <92b51f93-bb5e-0205-be2e-a52823236746@xs4all.nl>
 <7C18AB89-E9A6-4808-9CF9-B5057A532B17@u-bourgogne.fr>
 <e9ff2de8-5ab0-118b-888e-2603e98f3e92@xs4all.nl>
 <170B7732-7D27-4B06-8182-FC51ED9CFB63@u-bourgogne.fr>
 <20220328174642.bf6puh7ifxssdaif@beeblebrox>
 <B43A2DD0-E322-49B9-BAB6-1B600A132D78@u-bourgogne.fr>
 <B9EF7234-044A-495E-AE2D-9C15B0B4BABA@u-bourgogne.fr>
 <9d2bc4ac-9a3d-82d6-6447-749db244ca81@xs4all.nl>
Message-ID: <D1B7BE40-E22B-4376-9AAF-F8283AF622E3@u-bourgogne.fr>

Very interesting indeed. So the documentation is inaccurate when it states that synctex_line is stacked (p210 of the manual).
The second interesting thing is that getters can only access values changed by setters, but how can we access values changed by force?


> Le 29 mars 2022 Ã  09:57, Hans Hagen <j.hagen at xs4all.nl> a Ã©crit :
> 
> On 3/29/2022 6:12 AM, JÃ©rÃ´me LAURENS wrote:
>> [â¦]
>> \directlua{
>> tex.set_synctex_tag(11)
>> tex.set_synctex_line(22)
>> }
>> \def\MyMacro{
>> \directlua{
>> tex.force_synctex_tag(111)
>> tex.force_synctex_line(222)
>> }}
>> \MyMacro
>> \directlua{
>> print("FAILURE 111 expected:", tex.get_synctex_tag())
>> print("FAILURE 222 expected:", tex.get_synctex_line())
>> }
>> \bye
> the tag is stores in the input state and reading from (pseudo) files as well as macro expansion and expanding pushed (back) token lists bump the pointer
> 
> a line in tex is only reliable when it refers to a file; the extra synctex line states are global and can be used as overload but it assumes one knows where and what happens at that point
> 
> the setters and getters are pretty simple and consistent: tag is stacked, the others aren't
> [â¦]
> 
> -----------------------------------------------------------------
>                                          Hans Hagen | PRAGMA ADE
>              Ridderstraat 27 | 8061 GH Hasselt | The Netherlands
>       tel: 038 477 53 69 | www.pragma-ade.nl <http://www.pragma-ade.nl/> | www.pragma-pod.nl <http://www.pragma-pod.nl/>
> -----------------------------------------------------------------

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mailman.ntg.nl/pipermail/dev-luatex/attachments/20220330/a629c456/attachment.htm>

From luigi.scarso at gmail.com  Wed Mar 30 14:01:35 2022
From: luigi.scarso at gmail.com (luigi scarso)
Date: Wed, 30 Mar 2022 14:01:35 +0200
Subject: [Dev-luatex] Problem with directlua and synctex_tag
In-Reply-To: <D1B7BE40-E22B-4376-9AAF-F8283AF622E3@u-bourgogne.fr>
References: <B9021CCD-EB08-4A2F-BC28-BFD89D6BCA0D@u-bourgogne.fr>
 <92b51f93-bb5e-0205-be2e-a52823236746@xs4all.nl>
 <7C18AB89-E9A6-4808-9CF9-B5057A532B17@u-bourgogne.fr>
 <e9ff2de8-5ab0-118b-888e-2603e98f3e92@xs4all.nl>
 <170B7732-7D27-4B06-8182-FC51ED9CFB63@u-bourgogne.fr>
 <20220328174642.bf6puh7ifxssdaif@beeblebrox>
 <B43A2DD0-E322-49B9-BAB6-1B600A132D78@u-bourgogne.fr>
 <B9EF7234-044A-495E-AE2D-9C15B0B4BABA@u-bourgogne.fr>
 <9d2bc4ac-9a3d-82d6-6447-749db244ca81@xs4all.nl>
 <D1B7BE40-E22B-4376-9AAF-F8283AF622E3@u-bourgogne.fr>
Message-ID: <CAG5iGsBXJxJKeJBzpZ4EmvauUCnQDojf14729VgyCUCsnp+_0g@mail.gmail.com>

On Wed, Mar 30, 2022 at 10:15 AM JÃ©rÃ´me LAURENS <
jerome.laurens at u-bourgogne.fr> wrote:

> Very interesting indeed. So the documentation is inaccurate when it states
> that synctex_line is stacked (p210 of the manual).
>

hm I don't see it on page 210... Can you give more context ?

-- 
luigi
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mailman.ntg.nl/pipermail/dev-luatex/attachments/20220330/d31be5f2/attachment.htm>

From jerome.laurens at u-bourgogne.fr  Wed Mar 30 14:31:11 2022
From: jerome.laurens at u-bourgogne.fr (=?utf-8?Q?J=C3=A9r=C3=B4me_LAURENS?=)
Date: Wed, 30 Mar 2022 14:31:11 +0200
Subject: [Dev-luatex] Problem with directlua and synctex_tag
In-Reply-To: <CAG5iGsBXJxJKeJBzpZ4EmvauUCnQDojf14729VgyCUCsnp+_0g@mail.gmail.com>
References: <B9021CCD-EB08-4A2F-BC28-BFD89D6BCA0D@u-bourgogne.fr>
 <92b51f93-bb5e-0205-be2e-a52823236746@xs4all.nl>
 <7C18AB89-E9A6-4808-9CF9-B5057A532B17@u-bourgogne.fr>
 <e9ff2de8-5ab0-118b-888e-2603e98f3e92@xs4all.nl>
 <170B7732-7D27-4B06-8182-FC51ED9CFB63@u-bourgogne.fr>
 <20220328174642.bf6puh7ifxssdaif@beeblebrox>
 <B43A2DD0-E322-49B9-BAB6-1B600A132D78@u-bourgogne.fr>
 <B9EF7234-044A-495E-AE2D-9C15B0B4BABA@u-bourgogne.fr>
 <9d2bc4ac-9a3d-82d6-6447-749db244ca81@xs4all.nl>
 <D1B7BE40-E22B-4376-9AAF-F8283AF622E3@u-bourgogne.fr>
 <CAG5iGsBXJxJKeJBzpZ4EmvauUCnQDojf14729VgyCUCsnp+_0g@mail.gmail.com>
Message-ID: <A56D93ED-4AB5-46A9-BC97-DE0C97D38EDA@u-bourgogne.fr>

https://www.pragma-ade.com/general/manuals/luatex.pdf
P210 the 3 last lines
"(obeys save stack)" also appears for set_synctex_line


> Le 30 mars 2022 Ã  14:01, luigi scarso <luigi.scarso at gmail.com> a Ã©crit :
> 
> 
> 
> On Wed, Mar 30, 2022 at 10:15 AM JÃ©rÃ´me LAURENS <jerome.laurens at u-bourgogne.fr <mailto:jerome.laurens at u-bourgogne.fr>> wrote:
> Very interesting indeed. So the documentation is inaccurate when it states that synctex_line is stacked (p210 of the manual).
> 
> hm I don't see it on page 210... Can you give more context ?
> 
> -- 
> luigi
> _______________________________________________
> dev-luatex mailing list
> dev-luatex at ntg.nl
> https://mailman.ntg.nl/mailman/listinfo/dev-luatex

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mailman.ntg.nl/pipermail/dev-luatex/attachments/20220330/7b25db0d/attachment.htm>

From luigi.scarso at gmail.com  Wed Mar 30 14:50:01 2022
From: luigi.scarso at gmail.com (luigi scarso)
Date: Wed, 30 Mar 2022 14:50:01 +0200
Subject: [Dev-luatex] Problem with directlua and synctex_tag
In-Reply-To: <A56D93ED-4AB5-46A9-BC97-DE0C97D38EDA@u-bourgogne.fr>
References: <B9021CCD-EB08-4A2F-BC28-BFD89D6BCA0D@u-bourgogne.fr>
 <92b51f93-bb5e-0205-be2e-a52823236746@xs4all.nl>
 <7C18AB89-E9A6-4808-9CF9-B5057A532B17@u-bourgogne.fr>
 <e9ff2de8-5ab0-118b-888e-2603e98f3e92@xs4all.nl>
 <170B7732-7D27-4B06-8182-FC51ED9CFB63@u-bourgogne.fr>
 <20220328174642.bf6puh7ifxssdaif@beeblebrox>
 <B43A2DD0-E322-49B9-BAB6-1B600A132D78@u-bourgogne.fr>
 <B9EF7234-044A-495E-AE2D-9C15B0B4BABA@u-bourgogne.fr>
 <9d2bc4ac-9a3d-82d6-6447-749db244ca81@xs4all.nl>
 <D1B7BE40-E22B-4376-9AAF-F8283AF622E3@u-bourgogne.fr>
 <CAG5iGsBXJxJKeJBzpZ4EmvauUCnQDojf14729VgyCUCsnp+_0g@mail.gmail.com>
 <A56D93ED-4AB5-46A9-BC97-DE0C97D38EDA@u-bourgogne.fr>
Message-ID: <CAG5iGsDdc+JDhE7ABD9Nu01-1PEu+Yg_DoUyKf7S_bokZN_8AA@mail.gmail.com>

On Wed, Mar 30, 2022 at 2:31 PM JÃ©rÃ´me LAURENS <
jerome.laurens at u-bourgogne.fr> wrote:

> https://www.pragma-ade.com/general/manuals/luatex.pdf
> P210 the 3 last lines
> "(obeys save stack)" also appears for set_synctex_line
>
>
ah ok, 1.10, an old one.
This is the latest
https://tug.org/svn/texlive/trunk/Master/texmf-dist/doc/luatex/base/
(trunk  should be https://tug.org/svn/texlive/tags/texlive-2022.0
 soon).

-- 
luigi
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mailman.ntg.nl/pipermail/dev-luatex/attachments/20220330/8fde2f84/attachment.htm>

From jerome.laurens at u-bourgogne.fr  Wed Mar 30 15:13:42 2022
From: jerome.laurens at u-bourgogne.fr (=?utf-8?Q?J=C3=A9r=C3=B4me_LAURENS?=)
Date: Wed, 30 Mar 2022 15:13:42 +0200
Subject: [Dev-luatex] Problem with directlua and synctex_tag
In-Reply-To: <CAG5iGsDdc+JDhE7ABD9Nu01-1PEu+Yg_DoUyKf7S_bokZN_8AA@mail.gmail.com>
References: <B9021CCD-EB08-4A2F-BC28-BFD89D6BCA0D@u-bourgogne.fr>
 <92b51f93-bb5e-0205-be2e-a52823236746@xs4all.nl>
 <7C18AB89-E9A6-4808-9CF9-B5057A532B17@u-bourgogne.fr>
 <e9ff2de8-5ab0-118b-888e-2603e98f3e92@xs4all.nl>
 <170B7732-7D27-4B06-8182-FC51ED9CFB63@u-bourgogne.fr>
 <20220328174642.bf6puh7ifxssdaif@beeblebrox>
 <B43A2DD0-E322-49B9-BAB6-1B600A132D78@u-bourgogne.fr>
 <B9EF7234-044A-495E-AE2D-9C15B0B4BABA@u-bourgogne.fr>
 <9d2bc4ac-9a3d-82d6-6447-749db244ca81@xs4all.nl>
 <D1B7BE40-E22B-4376-9AAF-F8283AF622E3@u-bourgogne.fr>
 <CAG5iGsBXJxJKeJBzpZ4EmvauUCnQDojf14729VgyCUCsnp+_0g@mail.gmail.com>
 <A56D93ED-4AB5-46A9-BC97-DE0C97D38EDA@u-bourgogne.fr>
 <CAG5iGsDdc+JDhE7ABD9Nu01-1PEu+Yg_DoUyKf7S_bokZN_8AA@mail.gmail.com>
Message-ID: <3F37ECD0-11C1-4E8E-B2A8-79AD6705E4D1@u-bourgogne.fr>

The error is in page 208 for version 1.13 and in 212 in svn, but it is still there

> Le 30 mars 2022 Ã  14:50, luigi scarso <luigi.scarso at gmail.com> a Ã©crit :
> 
> 
> 
> On Wed, Mar 30, 2022 at 2:31 PM JÃ©rÃ´me LAURENS <jerome.laurens at u-bourgogne.fr <mailto:jerome.laurens at u-bourgogne.fr>> wrote:
> https://www.pragma-ade.com/general/manuals/luatex.pdf <https://www.pragma-ade.com/general/manuals/luatex.pdf>
> P210 the 3 last lines
> "(obeys save stack)" also appears for set_synctex_line
> 
> 
> ah ok, 1.10, an old one. 
> This is the latest 
> https://tug.org/svn/texlive/trunk/Master/texmf-dist/doc/luatex/base/ <https://tug.org/svn/texlive/trunk/Master/texmf-dist/doc/luatex/base/>
> (trunk  should be https://tug.org/svn/texlive/tags/texlive-2022.0 <https://tug.org/svn/texlive/tags/texlive-2022.0>
>  soon).
> 
> -- 
> luigi
> _______________________________________________
> dev-luatex mailing list
> dev-luatex at ntg.nl
> https://mailman.ntg.nl/mailman/listinfo/dev-luatex

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mailman.ntg.nl/pipermail/dev-luatex/attachments/20220330/1cd61448/attachment.htm>

From jerome.laurens at u-bourgogne.fr  Wed Mar 30 21:18:00 2022
From: jerome.laurens at u-bourgogne.fr (=?utf-8?Q?J=C3=A9r=C3=B4me_LAURENS?=)
Date: Wed, 30 Mar 2022 21:18:00 +0200
Subject: [Dev-luatex] Feature request: SyncTeX support
Message-ID: <66113AD9-37A5-4ABF-ADAD-AA4D4088966C@u-bourgogne.fr>

There are situations where synctex info is not available: consider
```
\immediate\openin 0 {subfile.tex}
\immediate\read 0 to \My
\immediate\closein 0
\My
\bye
```
Synctex does not see `subfile.tex` at all, which forbids any kind of synchronization between subfile.tex and main.pdf.

It would be very cool if the \openin could create a new tag and the \read could use that tag while parsing subfile.tex.
A synctex information about the line number would be very nice as well, a default of 1 is far better than nothing.

A tex.get_synctex_tag_for_name(âfoo') would be extremely handy. 

Finally, raw setters and getters should be provided for synctex tag and line, to control exactly what tag and line is written to the .synctex file. No save stack for them, no mode. Simply raw. 

Some global synctex state stack would help: save_synctex_state/restore_synctex_stateâ¦

BTW that would be great to deactivate set_synctex_tag for mode 0 just like set_synctex_line is.


From j.hagen at xs4all.nl  Wed Mar 30 22:16:17 2022
From: j.hagen at xs4all.nl (Hans Hagen)
Date: Wed, 30 Mar 2022 22:16:17 +0200
Subject: [Dev-luatex] Feature request: SyncTeX support
In-Reply-To: <66113AD9-37A5-4ABF-ADAD-AA4D4088966C@u-bourgogne.fr>
References: <66113AD9-37A5-4ABF-ADAD-AA4D4088966C@u-bourgogne.fr>
Message-ID: <0f345197-7b25-6e7b-8cb2-68df323e8861@xs4all.nl>

On 3/30/2022 9:18 PM, JÃ©rÃ´me LAURENS wrote:
> There are situations where synctex info is not available: consider
> ```
> \immediate\openin 0 {subfile.tex}
> \immediate\read 0 to \My
> \immediate\closein 0
> \My
> \bye
> ```
> Synctex does not see `subfile.tex` at all, which forbids any kind of synchronization between subfile.tex and main.pdf.
> 
> It would be very cool if the \openin could create a new tag and the \read could use that tag while parsing subfile.tex.
> A synctex information about the line number would be very nice as well, a default of 1 is far better than nothing.
> 
> A tex.get_synctex_tag_for_name(âfoo') would be extremely handy.
> 
> Finally, raw setters and getters should be provided for synctex tag and line, to control exactly what tag and line is written to the .synctex file. No save stack for them, no mode. Simply raw.
> 
> Some global synctex state stack would help: save_synctex_state/restore_synctex_stateâ¦
> 
> BTW that would be great to deactivate set_synctex_tag for mode 0 just like set_synctex_line is.
the 'forced' tag and line always win and opening files is under callback 
control so basically one can (only) use those in combination with 
synctex mode set from the lua end; it has never been the intention to 
provide interfaces to synctex beyond forcing tag and line numbers that 
end up in nodes;

the only reason that there is that little bit of (lua) alternative 
interfacing is that in context we had to get around some limitations 
(afaiwn synctex works ok with plain latex but not that well with context 
so we had to hack around a bit) .. basically synctex support is just a 
black box as in the other tex engines and not really part of 'opening up 
the internals' (also because in the end the output should be useable by 
the synctex file interpretation code)

Hans


-----------------------------------------------------------------
                                           Hans Hagen | PRAGMA ADE
               Ridderstraat 27 | 8061 GH Hasselt | The Netherlands
        tel: 038 477 53 69 | www.pragma-ade.nl | www.pragma-pod.nl
-----------------------------------------------------------------

From jerome.laurens at u-bourgogne.fr  Thu Mar 31 09:33:05 2022
From: jerome.laurens at u-bourgogne.fr (=?utf-8?Q?J=C3=A9r=C3=B4me_LAURENS?=)
Date: Thu, 31 Mar 2022 09:33:05 +0200
Subject: [Dev-luatex] Feature request: SyncTeX support
In-Reply-To: <0f345197-7b25-6e7b-8cb2-68df323e8861@xs4all.nl>
References: <66113AD9-37A5-4ABF-ADAD-AA4D4088966C@u-bourgogne.fr>
 <0f345197-7b25-6e7b-8cb2-68df323e8861@xs4all.nl>
Message-ID: <A14CF8BE-AF71-44A0-8E39-58CAD698C07F@u-bourgogne.fr>

After one night, let me rephrase my feature request. I am aware that context has big problems with redirection but latex is also facing similar problems.

I do not know the internals of synctex support in luatex but let me just infer that there is a storage for the tag and a storage for the line which are used as is when feeding the synctex attributes of the nodes. Let me call them <current tag> and <current line>.

I assume also that there is a tagâ file name key value storage and a function to create a new entry in that table, let me call them <tag map> and <new entry>.

I need a lua table named "synctex" with following methods

synctex.set_tag(<n>): change <current tag> to <n>

synctex.get_tag(<file>):
  if <file> == nil: return <current tag>
  If  <file>  is not a value of <tag map>: call <new entry>
  return the key for <file> in <tag map>

synctex.set_line(<n>): change <current line> to <n>
synctex.get_line(): get <current line>

These cannot be replaced by the actual force methods which are too aggressive. 

Finally

synctex.save_state, synctex.restore_state a public API to the already existing stack mechanism used by \input for example

This will certainly solve the \openin and \read requests due to the callbacks.

Being an addition, this low level implementation does not break anything existing. If you do not feel the need for such API, then I would be happy to propose a contribution when I know how to start.


> Le 30 mars 2022 Ã  22:16, Hans Hagen <j.hagen at xs4all.nl> a Ã©crit :
> 
> On 3/30/2022 9:18 PM, JÃ©rÃ´me LAURENS wrote:
>> There are situations where synctex info is not available: consider
>> ```
>> \immediate\openin 0 {subfile.tex}
>> \immediate\read 0 to \My
>> \immediate\closein 0
>> \My
>> \bye
>> ```
>> Synctex does not see `subfile.tex` at all, which forbids any kind of synchronization between subfile.tex and main.pdf.
>> It would be very cool if the \openin could create a new tag and the \read could use that tag while parsing subfile.tex.
>> A synctex information about the line number would be very nice as well, a default of 1 is far better than nothing.
>> A tex.get_synctex_tag_for_name(âfoo') would be extremely handy.
>> Finally, raw setters and getters should be provided for synctex tag and line, to control exactly what tag and line is written to the .synctex file. No save stack for them, no mode. Simply raw.
>> Some global synctex state stack would help: save_synctex_state/restore_synctex_stateâ¦
>> BTW that would be great to deactivate set_synctex_tag for mode 0 just like set_synctex_line is.
> the 'forced' tag and line always win and opening files is under callback control so basically one can (only) use those in combination with synctex mode set from the lua end; it has never been the intention to provide interfaces to synctex beyond forcing tag and line numbers that end up in nodes;
> 
> the only reason that there is that little bit of (lua) alternative interfacing is that in context we had to get around some limitations (afaiwn synctex works ok with plain latex but not that well with context so we had to hack around a bit) .. basically synctex support is just a black box as in the other tex engines and not really part of 'opening up the internals' (also because in the end the output should be useable by the synctex file interpretation code)
> 
> Hans
> 
> 
> -----------------------------------------------------------------
>                                          Hans Hagen | PRAGMA ADE
>              Ridderstraat 27 | 8061 GH Hasselt | The Netherlands
>       tel: 038 477 53 69 | www.pragma-ade.nl | www.pragma-pod.nl
> -----------------------------------------------------------------
> _______________________________________________
> dev-luatex mailing list
> dev-luatex at ntg.nl
> https://mailman.ntg.nl/mailman/listinfo/dev-luatex


From j.hagen at xs4all.nl  Thu Mar 31 10:32:09 2022
From: j.hagen at xs4all.nl (Hans Hagen)
Date: Thu, 31 Mar 2022 10:32:09 +0200
Subject: [Dev-luatex] Feature request: SyncTeX support
In-Reply-To: <A14CF8BE-AF71-44A0-8E39-58CAD698C07F@u-bourgogne.fr>
References: <66113AD9-37A5-4ABF-ADAD-AA4D4088966C@u-bourgogne.fr>
 <0f345197-7b25-6e7b-8cb2-68df323e8861@xs4all.nl>
 <A14CF8BE-AF71-44A0-8E39-58CAD698C07F@u-bourgogne.fr>
Message-ID: <fb23801f-7e1b-f64d-57b1-490ec4ba066e@xs4all.nl>

On 3/31/2022 9:33 AM, JÃ©rÃ´me LAURENS wrote:
> After one night, let me rephrase my feature request. I am aware that context has big problems with redirection but latex is also facing similar problems.

i remember discussions long ago (early luatex times) where there wasn't 
much room for adding control over filenames in synctex etc as needed in 
context otherwise we could have taken it into account then; so in the 
end context implemented its own synctex file generator that works ok 
(complications more arise from the switch to a new syntex file format 
and editors/viewers that get confused but that also get sorted out 
eventually);

so the 'good' news is that the library doesn't have to keep context in 
mind as it is not used

> I do not know the internals of synctex support in luatex but let me just infer that there is a storage for the tag and a storage for the line which are used as is when feeding the synctex attributes of the nodes. Let me call them <current tag> and <current line>.

not that much code; just what other engines do, but one can enforce 
tag/line when in a different synctex mode (controlled by parameter) ... 
as with everything luatex that then assumes that one handles specific 
wishes / features in lua (one can also run over nodelists and tweak 
synctex fields)

> I assume also that there is a tagâ file name key value storage and a function to create a new entry in that table, let me call them <tag map> and <new entry>.

there is no such list (there is the input stack that has filenames but 
that's a regular tex thing, adapted to luatex); if one sets tags from 
lua one can also maintain additional info there (there are methods to 
fetch the current filename but not wrt synctex)

> I need a lua table named "synctex" with following methods
> 
> synctex.set_tag(<n>): change <current tag> to <n>

that's not how it works in luatex, we don't really manage lua tables 
(there are some interfaces that look like that but they either generate 
the table on demand or they are virtual tables); so in this case, say

tex.synctextable

would have to call out to the library and build that table (not that 
hard assuming there are methods in the library to loop)

so, e.g. latex can implement a synctex (namespace) table with whatever 
methods it needs using the few tex.*synctex* calls that interface to the 
library; it is the library itself that has to do the work; a few extra 
interface function from lua to the library are cheap; the luatex file 
related machinery is already complex enough

> synctex.get_tag(<file>):
>    if <file> == nil: return <current tag>
>    If  <file>  is not a value of <tag map>: call <new entry>
>    return the key for <file> in <tag map>
> 
> synctex.set_line(<n>): change <current line> to <n>
> synctex.get_line(): get <current line>

whatever gets added (maybe accessors to info available in the library) 
will not add logic at the lua end; because of frequent callout to lua an 
dprint from and that also being input / output it would add 
complications and overhead; that's why we have callbacks, because no 
solution si good for all macro packages (now or in the future)

> These cannot be replaced by the actual force methods which are too aggressive.

one can maintain a stack in lua and push pop the forced settings but if 
the library itself does it that's also an option

> Finally
> 
> synctex.save_state, synctex.restore_state a public API to the already existing stack mechanism used by \input for example

it it's just calling a synctex library function that can be added, 
something:

               tex.synctex_save_state()
               tex.synctex_restore_state()
tagnumber   = tex.synctex_save_tag(filename)
filename    = tex.synctex_restore_tag(n)
               tex.synctex_save_line(n)
linennumber = tex.synctex_restore_line()

where the library implements those .. for lua these are just calls to 
the library ... it would also limite the changes to the default synxtex 
mode (read: no need to use the force setters because those operate in 
the non standard  mode)

> This will certainly solve the \openin and \read requests due to the callbacks.

ok

Hans

-----------------------------------------------------------------
                                           Hans Hagen | PRAGMA ADE
               Ridderstraat 27 | 8061 GH Hasselt | The Netherlands
        tel: 038 477 53 69 | www.pragma-ade.nl | www.pragma-pod.nl
-----------------------------------------------------------------

