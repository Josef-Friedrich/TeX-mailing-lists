From mjbaars1977.tex-live at cyberfiber.eu  Wed Jul  1 07:54:04 2020
From: mjbaars1977.tex-live at cyberfiber.eu (Michael J. Baars)
Date: Wed, 01 Jul 2020 07:54:04 +0200
Subject: [EXT] Re: rendering brackets
In-Reply-To: <20200623045455.qgtyzrawblrr2ws3@vento15post8>
References: <CAEW6iOg+RYuz=TVHQZ5L55A6zobzYGuu-b2x4=CGfaWe+Gr4YA@mail.gmail.com>
 <da188555c92d777bd239b6935ce36ac785def6ec.camel@cyberfiber.eu>
 <CAEW6iOjdyjRJwnv=0UreTn2yksZ0O17KnDyd_WOwKBp-wwMdgw@mail.gmail.com>
 <8265d83f82b20d8c9f43e7a1121921b42ac0e066.camel@cyberfiber.eu>
 <CAEW6iOi5JOOQ0d8GgzhqDLbbM8ozvZjX0ebt+rhY=6E20CDA9w@mail.gmail.com>
 <6a112e50bab4a2622ff7e077ba247ed0c6d4efbf.camel@cyberfiber.eu>
 <e1a21a08-c23f-e42b-87f5-4cc9dd053c5f@Rhul.Ac.Uk>
 <8341684941a57dc500fc2a76db4cc8fb829cf205.camel@cyberfiber.eu>
 <18df7124-2a57-a044-90bf-0de563b5dc84@Hellenic-Institute.Uk>
 <c8016d98eff476e41e90920de210f4a4c4d50b05.camel@cyberfiber.eu>
 <20200623045455.qgtyzrawblrr2ws3@vento15post8>
Message-ID: <b4c0e428bee4d2a98d1a675ef1abb42c5bbe5647.camel@cyberfiber.eu>

On Tue, 2020-06-23 at 16:54 +1200, Henri Menke wrote:
> On 17/06/20, 16:29, Michael J. Baars wrote:
> > Hi Philip,
> > 
> > Well, you can do whatever you like with the .tex example, trow it
> > away
> > for all I care.
> > 
> > I'm just trying to tell you, as a friend, that that
> > "\left(\frac{1}{a}\right)" and "\left(\frac{a}{1}\right)" are
> > rendered
> > with brackets of different size, while the brackets of
> > "\left(\frac{1}{2}\right" and "\left(\frac{2}{1}\right)" are
> > rendered
> > with brackets of the same size.
> 
> It has already been pointed out that this is due to the fact that the
> number `1' is taller than the letter `a'.  Here is the relevant bit
> of
> the make_fraction routine:
> 
> https://github.com/TeX-Live/texlive-source/blob/35f189ca2c2866a9ed817da1db5d0bd165a3ec61/texk/web2c/tex.web#L14624-L14627
> 
> The height of the resulting vlist is the height of the numerator plus
> the shift to compensate for numerator's depth and the fraction bar.
> 
> Cheers, Henri

Thank you, Henri, for pointing me in the right direction. I'll have a
look at the sources when I'm ready, little busy at the moment.

Best regards,
Mischa.

> 
> > That's all :)
> > 
> > Best regards,
> > Mischa.
> > 
> > On Tue, 2020-06-16 at 13:01 +0100, Philip Taylor wrote:
> > > Mischa, I am not sure where the misunderstanding lies, but as far
> > > as
> > > I 
> > > can tell this has nothing to do with TeX Live.  You stated "as
> > > you
> > > can 
> > > see from the attachment, both '1' and 'a' are first placed in
> > > boxes
> > > of 
> > > the same height" and I asked "at which point in your code are
> > > both
> > > '1' 
> > > and 'a' first placed in boxes of the same height  ?".  This
> > > question
> > > is 
> > > purely about your coding ? TeX Live is not involved in any way.
> > > 
> > > Philip Taylor
> > > --------
> > > > Hi Philip,
> > > > 
> > > > Have you been looking in my code? I think you should be looking
> > > > in
> > > > the 
> > > > tex-live code.
> > > > 
> > > > Also, perhaps you should be looking not for code that places
> > > > the 
> > > > characters in a box of equal height, but for code that places
> > > > the 
> > > > characters in a box of unequal height? As I pointed out right
> > > > from
> > > > the 
> > > > start, I have quite some experience with .tex files but little 
> > > > experience with the tex-live code.
> > > > 
> > > > Best regards,
> > > > Mischa.


From shunsaku.hirata74 at gmail.com  Wed Jul  1 21:51:03 2020
From: shunsaku.hirata74 at gmail.com (Shunsaku Hirata)
Date: Thu, 2 Jul 2020 04:51:03 +0900
Subject: improving color stack in xdvipdfmx
In-Reply-To: <CAOyMh2r4r_VLXbaxPt0bs00oKvhyoozyjPch0Pzxr5nccEGgzA@mail.gmail.com>
References: <ic7zoqzr6ctp$.dlg@nililand.de>
 <CAOyMh2rRKDC2ANGF9c44VV49ONeN55b3LwRrGp0MBLrrDXraTg@mail.gmail.com>
 <8c47fff3-91b2-25f3-79d2-1ec6700169bf@Hellenic-Institute.Uk>
 <CAOyMh2rvu+K8W1aTTAZGG8LuWiW0UeH-q35w_13UH-b6n5VE5Q@mail.gmail.com>
 <1744318271.20200624192234@nililand.de>
 <CAOyMh2opdAfya5+_LS2_qNbEcFWG3GR-7kaKkOfu_ejEycF6SA@mail.gmail.com>
 <998962759.20200625121142@nililand.de>
 <CAOyMh2r4r_VLXbaxPt0bs00oKvhyoozyjPch0Pzxr5nccEGgzA@mail.gmail.com>
Message-ID: <CAOyMh2qXavTCechqmVE5PWzCkCU_wNZVu1NxwuRRFLjh3vPd0g@mail.gmail.com>

The change for extended color support was already included.

Here is a simple example (Indexed and CalGray) for XeLaTeX
and LaTeX+dvipdfmx:

\documentclass{article}
\begin{document}
%% Indexed: [balck red green blue]
\special{pdf:obj @colorspace:indexed [/Indexed
/DeviceRGB 3 <000000 FF0000 00FF00 0000FF>]}
Indexed:
\special{pdf:bcolor @colorspace:indexed [2]}
Green
\special{pdf:ecolor}
\special{pdf:bcolor @colorspace:indexed [3]}
Blue
\special{pdf:ecolor}
\special{pdf:bcolor @colorspace:indexed [1]}
Red
\special{pdf:ecolor}
\special{pdf:bcolor @colorspace:indexed [0]}
Black
\special{pdf:ecolor}
%% CalGray
\special{pdf:obj @colorspace:calgray [ /CalGray <<
/WhitePoint [0.95505 1.00000 1.0890] /Gamma 2.222 >> ]}
\special{pdf:bcolor @colorspace:calgray [0.4]}
CalGray example.
\special{pdf:ecolor}
\end{document}

Thanks,
Shunsaku Hirata

2020?6?26?(?) 6:08 Shunsaku Hirata <shunsaku.hirata74 at gmail.com>:
>
> > If xdvipdfmx does the management then something like this
> >
> > \special{pdf:obj @pgfpattern [/Pattern/DeviceRGB]}
> >
> > \special{pdf:bcolor @pgfpattern [1.0 0.4 0]} .... \special{pdf:ecolor}
> >
> > should work and add the pattern to the ColorSpace resource, doesn't it?
>
> It should work and dvipdfmx automatically adds a ColorSpace resource
> and a Pattern resource to the current page's resource dictionary with
> automatically assigned resource names as dictionary keys.
> (The example above should be something like
>
>    \special{pdf:bcolor @pgfpattern [1.0 0.4 0 @pattern_definition]}
> .... \special{pdf:ecolor}
>
> since a Pattern resource is also required for the "set color" PDF operator.)
>
> > This would mean that pgf should adapt its backend code (and would need
> > a way to identify the xdvipdfmx version).
>
> Unless the new syntax is used, the old approach continues to work.
> Furthermore I will consider some tricks so that both approaches can coexist.
>
> Thanks,
> Shunsaku Hirata


From Stefan.Junge at micro-epsilon.de  Thu Jul  2 09:44:41 2020
From: Stefan.Junge at micro-epsilon.de (Junge, Stefan)
Date: Thu, 2 Jul 2020 07:44:41 +0000
Subject: Bug, window of installation wizard is empty (no content)
Message-ID: <abd4b755c0c1437987ab325868336207@micro-epsilon.de>

Hello,
i want to install the current TexLive but when the main installation program
was started the window is empty and nothing happens over minutes.
This "Wish Application" is not closeable und must be killed using the taskmgr.
I can't find any log file to see what is going wrong.
Greetings
Stefan


Gesch?ftsf?hrer: Prof. Dr. Martin Sellen, Dr. Alexander Wisspeintner, Dr. Thomas Wisspeintner
Sitz der KG: Ortenburg | Passau HRA 6224
Komplement?r: Micro-Epsilon Messtechnik
Verwaltungs-GmbH Ortenburg | Passau HRB 2896



-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://tug.org/pipermail/tex-live/attachments/20200702/3b31d5b9/attachment-0001.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: Bug_TeXLive_Failed.png
Type: image/png
Size: 21602 bytes
Desc: Bug_TeXLive_Failed.png
URL: <https://tug.org/pipermail/tex-live/attachments/20200702/3b31d5b9/attachment-0001.png>

From lists at openlilylib.org  Thu Jul  2 17:20:28 2020
From: lists at openlilylib.org (Urs Liska)
Date: Thu, 02 Jul 2020 17:20:28 +0200
Subject: lilyglyphs.sty missing?
Message-ID: <878e898c3ef6d4fef04262c9fbd120ad6cd0b8b1.camel@openlilylib.org>

Someone posted an issue that lilyglyphs.sty seems to be missing in TeX
Live after updating to Ubuntu 20.04.

Further investigation showed that it is still present in the TeX Live
source tree at
https://tug.org/svn/texlive/trunk/Master/texmf-dist/tex/lualatex/lilyglyphs/

but in Ubuntu and Debian it seems to have been removed from the
packages:

lilyglyphs is shown in
Ubuntu 19.10 - texlive-music (2019.20190710-1)
Debian buster - texlive-music (2018.20190227-2)

but not in
Ubuntu 20.04 - texlive-music (2019.202000218-1)
Debian Bullseye - texlive-music (2020.20200522-1)

Can anyone point me to something here?

Thanks
Urs


From siepo at bitmuis.nl  Thu Jul  2 17:45:30 2020
From: siepo at bitmuis.nl (Siep Kroonenberg)
Date: Thu, 2 Jul 2020 17:45:30 +0200
Subject: Bug, window of installation wizard is empty (no content)
In-Reply-To: <abd4b755c0c1437987ab325868336207@micro-epsilon.de>
References: <abd4b755c0c1437987ab325868336207@micro-epsilon.de>
Message-ID: <20200702154530.GA1413@bitmuis.nl>

On Thu, Jul 02, 2020 at 07:44:41AM +0000, Junge, Stefan wrote:
> Hello,
> i want to install the current TexLive but when the main installation program
> was started the window is empty and nothing happens over minutes.
> This "Wish Application" is not closeable und must be killed using the taskmgr.
> I can't find any log file to see what is going wrong.
> Greetings
> Stefan

I can reproduce this when running the installer as administrator.
While we are figuring out what is going on, you can meanwhile choose
the unpack option and run install-tl-windows.bat from the unpacked
installer.

-- 
Siep Kroonenberg

From siepo at bitmuis.nl  Thu Jul  2 20:45:59 2020
From: siepo at bitmuis.nl (Siep Kroonenberg)
Date: Thu, 2 Jul 2020 20:45:59 +0200
Subject: Bug, window of installation wizard is empty (no content)
In-Reply-To: <20200702154530.GA1413@bitmuis.nl>
References: <abd4b755c0c1437987ab325868336207@micro-epsilon.de>
 <20200702154530.GA1413@bitmuis.nl>
Message-ID: <20200702184559.GB1413@bitmuis.nl>

On Thu, Jul 02, 2020 at 05:45:30PM +0200, Siep Kroonenberg wrote:
> On Thu, Jul 02, 2020 at 07:44:41AM +0000, Junge, Stefan wrote:
> > Hello,
> > i want to install the current TexLive but when the main installation program
> > was started the window is empty and nothing happens over minutes.
> > This "Wish Application" is not closeable und must be killed using the taskmgr.
> > I can't find any log file to see what is going wrong.
> > Greetings
> > Stefan
> 
> I can reproduce this when running the installer as administrator.
> While we are figuring out what is going on, you can meanwhile choose
> the unpack option and run install-tl-windows.bat from the unpacked
> installer.

On re-testing, I could reproduce the problem only if the repository
was not reachable. However, in that case there should have been a
button to either abort the installation or choose another
repository.

-- 
Siep Kroonenberg

From norbert at preining.info  Fri Jul  3 00:41:04 2020
From: norbert at preining.info (Norbert Preining)
Date: Fri, 3 Jul 2020 07:41:04 +0900
Subject: lilyglyphs.sty missing?
In-Reply-To: <878e898c3ef6d4fef04262c9fbd120ad6cd0b8b1.camel@openlilylib.org>
References: <878e898c3ef6d4fef04262c9fbd120ad6cd0b8b1.camel@openlilylib.org>
Message-ID: <20200702224104.GA3155@burischnitzel.preining.info>

Hi Urs,

> Someone posted an issue that lilyglyphs.sty seems to be missing in TeX
> Live after updating to Ubuntu 20.04.

And in Debian. Because it depends on Python2 the last time I checked,
and Python2 programs are not acceptable anymore in Debian and Ubuntu:

>From my Debian package building config file (ignore the syntax around)
	# python3 purge - blacklist all packages that don't have py3 support
	blacklist;tpm;ebong;*
	blacklist;tpm;de-macro;*
	blacklist;tpm;lilyglyphs;*
	blacklist;tpm;pygmentex;*
	blacklist;tpm;sympytexpackage;*

Update to Python3 version of the scripts is necessary.

Best

Norbert

--
PREINING Norbert                              https://www.preining.info
Accelia Inc. + IFMGA ProGuide + TU Wien + JAIST + TeX Live + Debian Dev
GPG: 0x860CDC13   fp: F7D8 A928 26E3 16A1 9FA0 ACF0 6CAC A448 860C DC13

From josef at friedrich.rocks  Mon Jul  6 16:22:27 2020
From: josef at friedrich.rocks (Josef Friedrich)
Date: Mon, 6 Jul 2020 16:22:27 +0200
Subject: Bug: cloze.tex in wrong directory
Message-ID: <9c552ad7-f2d8-432c-9387-4de1adefb257@friedrich.rocks>

Hello!

I recently added a plain (Lua)TeX version of my cloze package named
cloze.tex. I got a bug report that the package currently is broken.

cloze.tex is not the documentation:

./texmf-dist/doc/luatex/cloze/cloze.tex (wrong)

It should be there:

./texmf-dist/tex/luatex/cloze/cloze.tex

Thank you very much for moving the file.

Many Greetings

Josef

From karl at freefriends.org  Mon Jul  6 23:24:02 2020
From: karl at freefriends.org (Karl Berry)
Date: Mon, 6 Jul 2020 15:24:02 -0600
Subject: Bug: cloze.tex in wrong directory
In-Reply-To: <9c552ad7-f2d8-432c-9387-4de1adefb257@friedrich.rocks>
Message-ID: <202007062124.066LO2MM004242@freefriends.org>

    ./texmf-dist/tex/luatex/cloze/cloze.tex

Thanks for the report. Fixed for tonight's update. -k

From siepo at bitmuis.nl  Sun Jul 12 10:55:34 2020
From: siepo at bitmuis.nl (Siep Kroonenberg)
Date: Sun, 12 Jul 2020 10:55:34 +0200
Subject: PostScript viewer
Message-ID: <20200712085534.GA1854@bitmuis.nl>

With no near prospect for a fix to PS_View, we created a simple
utility named psviewer, which converts the postscript file to a
temporary pdf file and displays it in whatever is configured as
default pdf viewer. You can invoke it from the command-line, but
also from a file manager, by right-clicking an eps- or ps file.

It is included in the latest update of the wintools.win32 package,
which should already be installed on any windows texlive
installation.

-- 
Siep Kroonenberg

From cacousin at eng.ua.edu  Wed Jul 15 20:06:38 2020
From: cacousin at eng.ua.edu (Cousin, Christian)
Date: Wed, 15 Jul 2020 18:06:38 +0000
Subject: Custom File Location
Message-ID: <BN8PR15MB26269DEA9C6A213AC275A783F97E0@BN8PR15MB2626.namprd15.prod.outlook.com>

Good afternoon,

Is there any way to store local .bib files anywhere other than in the C:\Users\<username>\texmf directory? I?d like to sync a .bib with other people using the BoxSync software which paths to C:\Users\<username>\Box Sync\

I can subsequently add the path C:\Users\<username>\Box Sync\texmf\ but will need to point TexLive to the Box Sync directory first.

Thanks for all your great work!

Best,
Christian A. Cousin
Assistant Professor
Department of Mechanical Engineering
The University of Alabama<https://www.ua.edu/>
Office: 205-348-8076
3011 SERC, Box 870276, Tuscaloosa, AL 35487
cacousin at eng.ua.edu<mailto:cacousin at eng.ua.edu> | http://me.eng.ua.edu/
[The University of Alabama]<https://www.ua.edu/>


-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://tug.org/pipermail/tex-live/attachments/20200715/7e1f5b9e/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: 6DC1BC0B5AB74E26A46A70F73B57FF9D[2516092].gif
Type: image/gif
Size: 3710 bytes
Desc: 6DC1BC0B5AB74E26A46A70F73B57FF9D[2516092].gif
URL: <https://tug.org/pipermail/tex-live/attachments/20200715/7e1f5b9e/attachment.gif>

From reinhard.kotucha at web.de  Thu Jul 16 01:58:13 2020
From: reinhard.kotucha at web.de (Reinhard Kotucha)
Date: Thu, 16 Jul 2020 01:58:13 +0200
Subject: Custom File Location
In-Reply-To: <BN8PR15MB26269DEA9C6A213AC275A783F97E0@BN8PR15MB2626.namprd15.prod.outlook.com>
References: <BN8PR15MB26269DEA9C6A213AC275A783F97E0@BN8PR15MB2626.namprd15.prod.outlook.com>
Message-ID: <24335.38933.662606.229124@gargle.gargle.HOWL>

On 2020-07-15 at 18:06:38 +0000, Cousin, Christian wrote:

 > Good afternoon,
 > 
 > Is there any way to store local .bib files anywhere other than in
 > the C:\Users\<username>\texmf directory? I?d like to sync a .bib
 > with other people using the BoxSync software which paths to
 > C:\Users\<username>\Box Sync\
 > 
 > I can subsequently add the path C:\Users\<username>\Box Sync\texmf\
 > but will need to point TexLive to the Box Sync directory first.

Hi Christian,
the standard configuration file

  texlive/2020/texmf-dist/web2c/texmf.cnf

contains the line

  BIBINPUTS = $TEXMFDOTDIR;$TEXMF/bibtex/bib//

Copy this line and only this line to the file

  texlive/2020/texmf.cnf

and modify it as appropriate: 

  BIBINPUTS = $TEXMFDOTDIR;C:/Users/.....;$TEXMF/bibtex/bib//

Never change anything in web2c/texmf.cnf because all changes might get
lost after the next TeX Live update.

BTW, whenever your local directory must precede the standard
directories in the search path there is something wrong.  It's better
to prefix all your local files with "ua-" (for University of Alabama)
in order to avoid name clashes.  The search order only matters if
filenames are not unique.

The recommended way is to _append_ local stuff to the search path.

Regards,
  Reinhard

-- 
------------------------------------------------------------------
Reinhard Kotucha                            Phone: +49-511-3373112
Marschnerstr. 25
D-30167 Hannover                    mailto:reinhard.kotucha at web.de
------------------------------------------------------------------


From Herbert.Voss at fu-berlin.de  Thu Jul 16 08:30:52 2020
From: Herbert.Voss at fu-berlin.de (Herbert Voss)
Date: Thu, 16 Jul 2020 08:30:52 +0200
Subject: Custom File Location
In-Reply-To: <BN8PR15MB26269DEA9C6A213AC275A783F97E0@BN8PR15MB2626.namprd15.prod.outlook.com>
References: <BN8PR15MB26269DEA9C6A213AC275A783F97E0@BN8PR15MB2626.namprd15.prod.outlook.com>
Message-ID: <bba83991-0818-b29e-632e-def410def78e@fu-berlin.de>



Am 15.07.20 um 20:06 schrieb Cousin, Christian:
>
> Good afternoon,
>

Goos morning,

> Is there any way to store local .bib files anywhere other than in the 
> C:\Users\<username>\texmf directory? I?d like to sync a .bib with 
> other people using the BoxSync software which paths to 
> C:\Users\<username>\Box Sync\
>
> I can subsequently add the path C:\Users\<username>\Box Sync\texmf\ 
> but will need to point TexLive to the Box Sync directory first.
>

With package biblatex and bibprogram biber you can save the bibliography
on a server and then load it by the remote key:

\documentclass{article}
\usepackage{biblatex}
\addbibresource[location=remote]{https://ctan.org/tex-archive/macros/latex/contrib/biblatex/bibtex/bib/biblatex/biblatex-examples.bib}
\begin{document}

\nocite{*}
\printbibliography[type=book]
\end{document}



Herbert

From joseph.wright at morningstar2.co.uk  Thu Jul 16 09:07:57 2020
From: joseph.wright at morningstar2.co.uk (Joseph Wright)
Date: Thu, 16 Jul 2020 08:07:57 +0100
Subject: Custom File Location
In-Reply-To: <24335.38933.662606.229124@gargle.gargle.HOWL>
References: <BN8PR15MB26269DEA9C6A213AC275A783F97E0@BN8PR15MB2626.namprd15.prod.outlook.com>
 <24335.38933.662606.229124@gargle.gargle.HOWL>
Message-ID: <fd4d4406-2cb5-a603-a22a-3bf529b84f63@morningstar2.co.uk>

On 16/07/2020 00:58, Reinhard Kotucha wrote:
> On 2020-07-15 at 18:06:38 +0000, Cousin, Christian wrote:
> 
>   > Good afternoon,
>   >
>   > Is there any way to store local .bib files anywhere other than in
>   > the C:\Users\<username>\texmf directory? I?d like to sync a .bib
>   > with other people using the BoxSync software which paths to
>   > C:\Users\<username>\Box Sync\
>   >
>   > I can subsequently add the path C:\Users\<username>\Box Sync\texmf\
>   > but will need to point TexLive to the Box Sync directory first.
> 
> Hi Christian,
> the standard configuration file
> 
>    texlive/2020/texmf-dist/web2c/texmf.cnf
> 
> contains the line
> 
>    BIBINPUTS = $TEXMFDOTDIR;$TEXMF/bibtex/bib//
> 
> Copy this line and only this line to the file
> 
>    texlive/2020/texmf.cnf
> 
> and modify it as appropriate:
> 
>    BIBINPUTS = $TEXMFDOTDIR;C:/Users/.....;$TEXMF/bibtex/bib//
> 
> Never change anything in web2c/texmf.cnf because all changes might get
> lost after the next TeX Live update.
> 
> BTW, whenever your local directory must precede the standard
> directories in the search path there is something wrong.  It's better
> to prefix all your local files with "ua-" (for University of Alabama)
> in order to avoid name clashes.  The search order only matters if
> filenames are not unique.
> 
> The recommended way is to _append_ local stuff to the search path.

The same approach can be used in your environment (Environmental 
Variables on Windows, .profile or similar on Unix): I do that to add a 
local database available to all of my files.

Joseph


From manfred at dante.de  Fri Jul 17 10:13:49 2020
From: manfred at dante.de (Manfred Lotz)
Date: Fri, 17 Jul 2020 10:13:49 +0200
Subject: Collections and packages
Message-ID: <20200717101349.17ec18c9@hogwart>

Hi all,
Don't know if this is trivial but I couldn't persuade tlmgr to help me.

How can I query which collections I have installed? 

How can I query which packages belong to a certain collection?

Thanks.

-- 
Manfred


From tex at 2krueger.de  Fri Jul 17 15:00:08 2020
From: tex at 2krueger.de (Marcel Fabian =?utf-8?Q?Kr=C3=BCger?=)
Date: Fri, 17 Jul 2020 15:00:08 +0200
Subject: Collections and packages
In-Reply-To: <20200717101349.17ec18c9@hogwart>
References: <20200717101349.17ec18c9@hogwart>
Message-ID: <20200717130008.5gndulhyv2wjftwe@yoga>

On Fri, Jul 17, 2020 at 10:13:49AM +0200, Manfred Lotz wrote:
> Hi all,
> Don't know if this is trivial but I couldn't persuade tlmgr to help me.
> 
> How can I query which collections I have installed? 

Hi Manfred,

you can query the installed collections using

    tlmgr info --only-installed collections

> 
> How can I query which packages belong to a certain collection?

AFAIR belonging to a collection is equivalent to the package being a
dependency of the collection, so you get the list using e.g.

    tlmgr info --data=depends collection-games

Best,
Marcel

From norbert at preining.info  Fri Jul 17 16:34:12 2020
From: norbert at preining.info (Norbert Preining)
Date: Fri, 17 Jul 2020 23:34:12 +0900
Subject: Collections and packages
In-Reply-To: <20200717101349.17ec18c9@hogwart>
References: <20200717101349.17ec18c9@hogwart>
Message-ID: <20200717143412.GB45356@bulldog.preining.info>

Hi Manfred,

Marcel has already answered everything, but let me chime in anyway.

First of all
	tlmgr help
helps ;-)

Then
	tlmgr info collections
gives you the list of all collections and whether they are installed
(initial `i').

For a specific collection you can do
	tlmgr info collection-music
but that does not give you the "dependencies". Do achieve this you can
either do
	tlmgr info --list collection-music
(which lists the included files and dependencies), or, as Marcel
suggested,
	tlmgr info --data depends collection-music
but in a maybe inconvenient format ;-)

You can get only the documentation of info with
	tlmgr info --help
attached below for your convenience:

All the best

Norbert

Name:
    tlmgr - the native TeX Live Manager

Usage:
    tlmgr [option...] action [option...] [operand...]

  info:
    info [option...] pkg...
    info [option...] collections
    info [option...] schemes
        With no argument, lists all packages available at the package
        repository, prefixing those already installed with "i".

        With the single word "collections" or "schemes" as the argument,
        lists the request type instead of all packages.

        With any other arguments, display information about pkg: the name,
        category, short and long description, sizes, installation status,
        and TeX Live revision number. If pkg is not locally installed,
        searches in the remote installation source.

        For normal packages (not collections or schemes), the sizes of the
        four groups of files (run/src/doc/bin files) are shown separately.
        For collections, the cumulative size is shown, including all
        directly-dependent packages (but not dependent collections). For
        schemes, the cumulative size is also shown, including all
        directly-dependent collections and packages.

        If pkg is not found locally or remotely, the search action is used
        and lists matching packages and files.

        It also displays information taken from the TeX Catalogue, namely
        the package version, date, and license. Consider these, especially
        the package version, as approximations only, due to timing skew of
        the updates of the different pieces. By contrast, the "revision"
        value comes directly from TL and is reliable.

        The former actions "show" and "list" are merged into this action,
        but are still supported for backward compatibility.

        Options:

        --list
            If the option "--list" is given with a package, the list of
            contained files is also shown, including those for
            platform-specific dependencies. When given with schemes and
            collections, "--list" outputs their dependencies in a similar
            way.

        --only-installed
            If this option is given, the installation source will not be
            used; only locally installed packages, collections, or schemes
            are listed.

        --only-remote
            Only list packages from the remote repository. Useful when
            checking what is available in a remote repository using "tlmgr
            --repo ... --only-remote info". Note that "--only-installed" and
            "--only-remote" cannot both be specified.

        --data "item1,item2,..."
            If the option "--data" is given, its argument must be a comma
            separated list of field names from: "name", "category",
            "localrev", "remoterev", "shortdesc", "longdesc", "installed",
            "size", "relocatable", "depends", "cat-version", "cat-date", or
            "cat-license". In this case the requested packages' information
            is listed in CSV format one package per line, and the column
            information is given by the "itemN". The "depends" column
            contains the name of all dependencies separated by ":".

        --json
            In case "--json" is specified, the output is a JSON encoded
            array where each array element is the JSON representation of a
            single "TLPOBJ" but with additional information. For details see
            "tlpkg/doc/JSON-formats.txt", format definition: "TLPOBJINFO".
            If both "--json" and "--data" are given, "--json" takes
            precedence.


--
PREINING Norbert                              https://www.preining.info
Accelia Inc. + IFMGA ProGuide + TU Wien + JAIST + TeX Live + Debian Dev
GPG: 0x860CDC13   fp: F7D8 A928 26E3 16A1 9FA0 ACF0 6CAC A448 860C DC13

From manfred at dante.de  Fri Jul 17 16:48:29 2020
From: manfred at dante.de (Manfred Lotz)
Date: Fri, 17 Jul 2020 16:48:29 +0200
Subject: Collections and packages
In-Reply-To: <20200717143412.GB45356@bulldog.preining.info>
References: <20200717101349.17ec18c9@hogwart>
 <20200717143412.GB45356@bulldog.preining.info>
Message-ID: <20200717164829.1beb493d@hogwart>

Hi Norbert,
First thanks  to you and Marcel.

On Fri, 17 Jul 2020 23:34:12 +0900
Norbert Preining <norbert at preining.info> wrote:

> Hi Manfred,
> 
> Marcel has already answered everything, but let me chime in anyway.
> 
> First of all
> 	tlmgr help
> helps ;-)
> 

I tried and got lost somehow and I knew that presumably there was a
problem between my keyboard and chair. 

No surprise, all suggestions working fine. Thanks again.


> Then
> 	tlmgr info collections
> gives you the list of all collections and whether they are installed
> (initial `i').
> 
> For a specific collection you can do
> 	tlmgr info collection-music
> but that does not give you the "dependencies". Do achieve this you can
> either do
> 	tlmgr info --list collection-music
> (which lists the included files and dependencies), or, as Marcel
> suggested,
> 	tlmgr info --data depends collection-music
> but in a maybe inconvenient format ;-)
> 
> You can get only the documentation of info with
> 	tlmgr info --help
> attached below for your convenience:
> 
> All the best
> 
> Norbert
> 
> Name:
>     tlmgr - the native TeX Live Manager
> 
> Usage:
>     tlmgr [option...] action [option...] [operand...]
> 
>   info:
>     info [option...] pkg...
>     info [option...] collections
>     info [option...] schemes
>         With no argument, lists all packages available at the package
>         repository, prefixing those already installed with "i".
> 
>         With the single word "collections" or "schemes" as the
> argument, lists the request type instead of all packages.
> 
>         With any other arguments, display information about pkg: the
> name, category, short and long description, sizes, installation
> status, and TeX Live revision number. If pkg is not locally installed,
>         searches in the remote installation source.
> 
>         For normal packages (not collections or schemes), the sizes
> of the four groups of files (run/src/doc/bin files) are shown
> separately. For collections, the cumulative size is shown, including
> all directly-dependent packages (but not dependent collections). For
>         schemes, the cumulative size is also shown, including all
>         directly-dependent collections and packages.
> 
>         If pkg is not found locally or remotely, the search action is
> used and lists matching packages and files.
> 
>         It also displays information taken from the TeX Catalogue,
> namely the package version, date, and license. Consider these,
> especially the package version, as approximations only, due to timing
> skew of the updates of the different pieces. By contrast, the
> "revision" value comes directly from TL and is reliable.
> 
>         The former actions "show" and "list" are merged into this
> action, but are still supported for backward compatibility.
> 
>         Options:
> 
>         --list
>             If the option "--list" is given with a package, the list
> of contained files is also shown, including those for
>             platform-specific dependencies. When given with schemes
> and collections, "--list" outputs their dependencies in a similar
>             way.
> 
>         --only-installed
>             If this option is given, the installation source will not
> be used; only locally installed packages, collections, or schemes
>             are listed.
> 
>         --only-remote
>             Only list packages from the remote repository. Useful when
>             checking what is available in a remote repository using
> "tlmgr --repo ... --only-remote info". Note that "--only-installed"
> and "--only-remote" cannot both be specified.
> 
>         --data "item1,item2,..."
>             If the option "--data" is given, its argument must be a
> comma separated list of field names from: "name", "category",
>             "localrev", "remoterev", "shortdesc", "longdesc",
> "installed", "size", "relocatable", "depends", "cat-version",
> "cat-date", or "cat-license". In this case the requested packages'
> information is listed in CSV format one package per line, and the
> column information is given by the "itemN". The "depends" column
>             contains the name of all dependencies separated by ":".
> 
>         --json
>             In case "--json" is specified, the output is a JSON
> encoded array where each array element is the JSON representation of a
>             single "TLPOBJ" but with additional information. For
> details see "tlpkg/doc/JSON-formats.txt", format definition:
> "TLPOBJINFO". If both "--json" and "--data" are given, "--json" takes
>             precedence.
> 
> 
> --
> PREINING Norbert
> https://www.preining.info Accelia Inc. + IFMGA ProGuide + TU Wien +
> JAIST + TeX Live + Debian Dev GPG: 0x860CDC13   fp: F7D8 A928 26E3
> 16A1 9FA0 ACF0 6CAC A448 860C DC13


From karl at freefriends.org  Sat Jul 18 00:20:03 2020
From: karl at freefriends.org (Karl Berry)
Date: Fri, 17 Jul 2020 16:20:03 -0600
Subject: Collections and packages
In-Reply-To: <20200717101349.17ec18c9@hogwart>
Message-ID: <202007172220.06HMK31x012042@freefriends.org>

In addition to the other answers, if you like running Unix commands
instead of "front ends" ...

    How can I query which collections I have installed? 

tlpdb=/usr/local/texlive/2020/tlpkg/texlive.tlpdb # or whatever

grep '^name collection-' $tlpdb

    How can I query which packages belong to a certain collection?

sed -n '/^name collection-games/,/^$/p' $tlpdb | grep '^depend '

Happy querying,
Karl

From rdtennent at gmail.com  Sat Jul 18 18:09:22 2020
From: rdtennent at gmail.com (Bob Tennent)
Date: Sat, 18 Jul 2020 12:09:22 -0400
Subject: Collections and packages
Message-ID: <20200718160922.CyyUyjZYX%rdt@cs.queensu.ca>

It is amazing that tlmgr.1, the only documentation on the
management application for a document-preparation system
intended to produce beautiful documents is itself a massive,
unstructured and, frankly, unusable man page which typesets
to no less than 26 pages.

I propose to LaTeX-ify tlmgr.1.  Would that be
acceptable?

Bob T.

From rdtennent at gmail.com  Sat Jul 18 18:25:53 2020
From: rdtennent at gmail.com (Bob Tennent)
Date: Sat, 18 Jul 2020 12:25:53 -0400
Subject: Collections and packages
In-Reply-To: <068c937c-44e3-995a-6401-7708d23b44bb@Hellenic-Institute.Uk>
References: <20200718160922.CyyUyjZYX%rdt@cs.queensu.ca>
 <068c937c-44e3-995a-6401-7708d23b44bb@Hellenic-Institute.Uk>
Message-ID: <CAGtK6=GM1LSuPv_MGJ7=0qLXH+6JRYOFw-2pZG-cUNj63sr1+A@mail.gmail.com>

Thanks Philip.  I was not aware that that existed.  texdoc tlmgr only
listed tlmgr.man1.pdf.

On Sat, Jul 18, 2020 at 12:18 PM Philip Taylor <
P.Taylor at hellenic-institute.uk> wrote:

> Bob Tennent wrote:
>
> It is amazing that tlmgr.1, the only documentation on the
> management application for a document-preparation system
> intended to produce beautiful documents is itself a massive,
> unstructured and, frankly, unusable man page which typesets
> to no less than 26 pages.
>
> I propose to LaTeX-ify tlmgr.1.  Would that be
> acceptable?
>
>
> Visiting the TUG web site, one can find an HTML version of same (whether
> from the same master source I have no idea) but
>
> https://tug.org/texlive/doc/tlmgr.html
>
> seems to me a not unacceptable way of viewing the documentation.  What
> would you hope to achieve by converting it to LaTeX source, Bob ?
>
> *Philip Taylor*
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://tug.org/pipermail/tex-live/attachments/20200718/ec480e26/attachment.html>

From karl at freefriends.org  Sat Jul 18 23:53:40 2020
From: karl at freefriends.org (Karl Berry)
Date: Sat, 18 Jul 2020 15:53:40 -0600
Subject: Collections and packages
In-Reply-To: <20200718160922.CyyUyjZYX%rdt@cs.queensu.ca>
Message-ID: <202007182153.06ILreju002512@freefriends.org>

Hi Bob,

   massive,

There's a lot of functionality.

    unstructured 
    
Well, there are many sections and lists, so it's not exactly completely
unstructured.

    and, frankly, unusable 

I know what you mean, but, there's the information.

    man page which typesets to no less than 26 pages.

There's a lot of functionality. It's not going to get shorter.

    I propose to LaTeX-ify tlmgr.1.  Would that be acceptable?

No. It would be unmaintainable. Sorry.

Right now, tlmgr.1 and tlmgr.html are generated from the pod
documentation that is at the end of tlmgr.pl.

There is also a program pod2latex (standard with Perl) which generates
LaTeX source meant to be included in a document.  If you can devise a
preamble for it (there is that makes you happier than the current man
page pdf, we can distribute that. If there are changes to the pod that
would make it better, that's fine too. (Doc for pod itself is at, e.g.,
https://perldoc.perl.org/perlpod.html. It is not complicated.)

But the pod has to remain the ultimate source. --thanks, karl.

From reinhard.kotucha at web.de  Sun Jul 19 02:26:54 2020
From: reinhard.kotucha at web.de (Reinhard Kotucha)
Date: Sun, 19 Jul 2020 02:26:54 +0200
Subject: Collections and packages
In-Reply-To: <20200718160922.CyyUyjZYX%rdt@cs.queensu.ca>
References: <20200718160922.CyyUyjZYX%rdt@cs.queensu.ca>
Message-ID: <24339.37710.405365.228052@gargle.gargle.HOWL>

On 2020-07-18 at 12:09:22 -0400, Bob Tennent wrote:

 > It is amazing that tlmgr.1, the only documentation on the
 > management application for a document-preparation system
 > intended to produce beautiful documents is itself a massive,
 > unstructured and, frankly, unusable man page which typesets
 > to no less than 26 pages.

Most features were requested by users.  The size of the man page
somehow reflects the activity of the TeX community and, of course,
the power of the tool itself.

And it's not unstructured at all.  Actions are sorted alphabetically
because it's a reference, not a text book.  The HTML version comes
with an index at least.  Maybe this helps to recognize the structure.

I also disagree when you say that tlmgr.1 is unusable.  This is
definitely not true.  The statement is certainly the result of your
frustration when you didn't find immediately what you looked for.
But this happens to me all the time with other documentation too and
is by far not resticted to documentation within the TeX world.

tlmgr is a powerful tool and there is nothing which can be omitted
from the documentation.  It's biggest strength is that everything can
be controlled from the command line.

Some other powerful tools come with shorter man pages (perl, python)
but almost everything you need to know is in external documents.
The tlmgr manual page describes tlmgr comprehensively.

 > I propose to LaTeX-ify tlmgr.1.  Would that be acceptable?

In order to finally create PDF from the LaTeX file?  If so, just try

  texdoc tlmgr

and you get the PDF version.  PDF versions of manual pages are mainly
created for Windows users who can't use man(1).

If you are still interested in LaTeX-ifying the manual page:

  The source of the documentation is included in tlmgr.pl itself.
  On CentOS or RHEL install pod2latex:

      yum install perl-Pod-LaTeX

  On other systems download the program "pod2latex" from CPAN unless
  you can determine the name of the package containing it.

  Follow the instructions at

      https://metacpan.org/pod/pod2latex

  This works for me:

      cd texmf-dist/scripts/texlive
      pod2latex -full tlmgr.pl
      pdftex tlmgr.tex

  Don't expect high typographic quality.  But without the -full option
  you can provide your own preamble at least.  I suppose that a script
  is needed to fix some problems with Perl's comment characters (#) at
  the end of the file.  I also remember that older versions took a
  backslash from a math font instead from a typewriter font which
  always looked ugly.  I don't know whether this has been fixed in the
  meantime.  I last used pod2latex 12 years ago.

  I don't know whether all the effort is worthwhile but the pod2latex
  approach allows to add \usepackage{hyperref} so that PDF viewers
  display a navigation panel.  This is definitely useful and desired.
  The PDF versions of man pages we currently have in TeX Live don't
  support hyperref.


If text book style documentation is preferred I can only encourage
users who found out how to solve a particular problem with tlmgr
(add a new user tree, install a local font, etc.) to write a TUGboat
article about it.

Regards,
  Reinhard

--
------------------------------------------------------------------
Reinhard Kotucha                            Phone: +49-511-3373112
Marschnerstr. 25
D-30167 Hannover                    mailto:reinhard.kotucha at web.de
------------------------------------------------------------------


From rdtennent at gmail.com  Sun Jul 19 04:23:20 2020
From: rdtennent at gmail.com (Bob Tennent)
Date: Sat, 18 Jul 2020 22:23:20 -0400
Subject: Collections and packages
In-Reply-To: <202007182153.06ILreju002512@freefriends.org>
References: <20200718160922.CyyUyjZYX%rdt@cs.queensu.ca>
 <202007182153.06ILreju002512@freefriends.org>
Message-ID: <CAGtK6=Gmf87YTEE5mWsGbqu=wBZqPvEx1ijzuVD1ao_Hk2bDuw@mail.gmail.com>

Hi Karl.
I realize that complete reference documentation for tlmgr will be massive,
but massive *and* unstructured is not good. By "structure" I mean sections
and sub-sections with headings, table of contents, index, separation of
basic and essential material from advanced or rarely-used actions/options,
etc.
Okay, I can see that it wouldn't be feasible to replace the current
documentation format and I'm certainly not the person who is
going to try and make it better.  But does a "preamble" that summarizes the
most useful  actions and options have to be in pod format?

Bob

On Sat, Jul 18, 2020 at 5:53 PM Karl Berry <karl at freefriends.org> wrote:

> Hi Bob,
>
>    massive,
>
> There's a lot of functionality.
>
>     unstructured
>
> Well, there are many sections and lists, so it's not exactly completely
> unstructured.
>
>     and, frankly, unusable
>
> I know what you mean, but, there's the information.
>
>     man page which typesets to no less than 26 pages.
>
> There's a lot of functionality. It's not going to get shorter.
>
>     I propose to LaTeX-ify tlmgr.1.  Would that be acceptable?
>
> No. It would be unmaintainable. Sorry.
>
> Right now, tlmgr.1 and tlmgr.html are generated from the pod
> documentation that is at the end of tlmgr.pl.
>
> There is also a program pod2latex (standard with Perl) which generates
> LaTeX source meant to be included in a document.  If you can devise a
> preamble for it (there is that makes you happier than the current man
> page pdf, we can distribute that. If there are changes to the pod that
> would make it better, that's fine too. (Doc for pod itself is at, e.g.,
> https://perldoc.perl.org/perlpod.html. It is not complicated.)
>
> But the pod has to remain the ultimate source. --thanks, karl.
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://tug.org/pipermail/tex-live/attachments/20200718/dcbfacd6/attachment.html>

From semihozlemsemihozlem at gmail.com  Sun Jul 19 21:05:57 2020
From: semihozlemsemihozlem at gmail.com (semih ozlem)
Date: Sun, 19 Jul 2020 22:05:57 +0300
Subject: error on tlmgr
Message-ID: <CALkUsGsOTvgm=kYten0qP3B6UNx18gOuOgsB17pdhsPJpR-E6A@mail.gmail.com>

Hi I am trying to run update of texlive, that has been downloaded from
debian repository.
When I run the update command as below, I get the response below. What
should I do

Thanks in advance for your help.
-----------------------------
user at debian:/media/user/sd/latexfiles_sample$ tlmgr update --all
(running on Debian, switching to user mode!)
query_ctan_mirror: Programs not set up, trying wget
cannot contact mirror.ctan.org, returning a backbone server!

/usr/bin/tlmgr: signature verification error of /tmp/dtiRH6vt47/nBHVmI8h_b
from
http://www.ctan.org/tex-archive/systems/texlive/tlnet/tlpkg/texlive.tlpdb:
cryptographic signature verification of
  /tmp/dtiRH6vt47/F6Qp6G4owt
against

http://www.ctan.org/tex-archive/systems/texlive/tlnet/tlpkg/texlive.tlpdb.sha512.asc
failed. Output was
gpg: Signature made Sun 19 Jul 2020 02:58:16 AM +03
gpg:                using RSA key 4CE1877E19438C70
gpg: Note: trustdb not writable
gpg: BAD signature from "TeX Live Distribution <tex-live at tug.org>"
[ultimate]

Please report to texlive at tug.org
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://tug.org/pipermail/tex-live/attachments/20200719/95282dfd/attachment.html>

From spalax at gresille.org  Sun Jul 19 22:19:36 2020
From: spalax at gresille.org (Louis)
Date: Sun, 19 Jul 2020 22:19:36 +0200
Subject: How to package executables
Message-ID: <f485c55b-2626-c4ac-125d-a9ba2767c700@gresille.org>

Hi,
I hope I am posting this to the right mailing list.

I recently released a simple python package on CTAN [1] (simple in that
is has no (python) dependencies). When I released it, Manfred Lotz (of
the CTAN team) mentionned that it might be shipped with texlive, and
advised me to ask for help on this mailing list.

[1] https://www.ctan.org/pkg/spix

The only documentation about releasing executables on texlive I found is
here [2], but I found no precise instructions.

[2] https://tug.org/texlive/pkgcontrib.html#exec

My question is: how can I get my python executable on texlive? Is there
an expected way to release a python executable on ctan, so that it can
be included in texlive?

I do not ask for a custom way to release my specific package to texlive:
I am asking if there is a standard way to release a (python) executable
to texlive.

Thanks,
Louis

From karl at freefriends.org  Mon Jul 20 00:54:34 2020
From: karl at freefriends.org (Karl Berry)
Date: Sun, 19 Jul 2020 16:54:34 -0600
Subject: How to package executables
In-Reply-To: <f485c55b-2626-c4ac-125d-a9ba2767c700@gresille.org>
Message-ID: <202007192254.06JMsYKK000347@freefriends.org>

Hi Louis,

    I hope I am posting this to the right mailing list.

Indeed you are.

    [1] https://www.ctan.org/pkg/spix

    The only documentation about releasing executables on texlive I found is
    here [2], but I found no precise instructions.
    [2] https://tug.org/texlive/pkgcontrib.html#exec

Inded, that is all I've written about it. Well done finding it :).

I can think of a few things that I should add, but too-precise
instructions have the downside of often not fitting a given case. I try
to adapt to whatever is presented.

    My question is: how can I get my python executable on texlive? 

Good question. Thanks for asking. I don't know a lot about Python, so
I bet you can help.

The key point with TL is that we distribute scripts that users just
run. That is, users (=people who have installed TL) cannot run
setup.py. We need to distribute a script named "spix" (in your case)
that will just work. (I don't think it's a factor in your case, but in
general an implication is that it needs to use argv[0] find any and all
external files that are installed along with the script, and not
hardwire any paths to config files and the like.)

What I saw in your spix-1.0.0.tar.gz was the usual Python setup.py ,
__main__.py, and __init__.py. Is there a way to tell setup.py to
produce a standalone "spix" executable that I install in the TL bin/*
dirs?  That is what I have never been able to discern, I expect through
ignorance.

Also, in many cases (though not yours, I realize, which is all to the
good), there are numerous Python dependencies. In those cases I cannot
run setup.py at all (my build machine won't have all the
dependencies). We can still install the script, and leave it to users to
install the dependencies in their Python installation (as we do for Perl
and everything else), but only if the script, just as TL should install
it, is provided as part of the CTAN upload.

So, I guess the direct answer to your question is, if you provide a
"spix" executable in the CTAN upload, I will install it in TL. And my
question in return is, is there a way to coax a provided setup.py to
produce that executable, at least in non-dependency cases like yours?

A separate (non-crucial) point: it would be good to provide a man page
(however short). Ultimately most everything in TL ends up in /usr/bin or
whatever when repackaged by distros, and it's good to have man pages for
installed programs.

Another minor point: it is simpler to deal with an unpacked distribution
on CTAN, that is, instead of one spix-1.0.0.tar.gz file, upload the
contents as individual files. People often include a VERSION_1_0_0 or
similar file to be able to identify the version just from a file
listing, if that's desired.

Hope this clarifies the situation to some extent. Feel free to ask
further or tell me where I've gone astray ... --thanks, karl.

From norbert at preining.info  Mon Jul 20 02:03:04 2020
From: norbert at preining.info (Norbert Preining)
Date: Mon, 20 Jul 2020 09:03:04 +0900
Subject: error on tlmgr
In-Reply-To: <CALkUsGsOTvgm=kYten0qP3B6UNx18gOuOgsB17pdhsPJpR-E6A@mail.gmail.com>
References: <CALkUsGsOTvgm=kYten0qP3B6UNx18gOuOgsB17pdhsPJpR-E6A@mail.gmail.com>
Message-ID: <20200720000304.GC169658@bulldog.preining.info>

Hi Semih,

On Sun, 19 Jul 2020, semih ozlem wrote:
> Hi I am trying to run update of texlive, that has been downloaded from
> debian repository.

Then please use Debian tools, that is
	sudo apt-get update
	sudo apt-get upgrade
tlmgr does **NOT** work for system upgrades on Debian.

> user at debian:/media/user/sd/latexfiles_sample$ tlmgr update --all
> (running on Debian, switching to user mode!)

If you want details, read 
	man tlmgr
or
	tlmgr help
and search for
	USER MODE

Best

Norbert

--
PREINING Norbert                              https://www.preining.info
Accelia Inc. + IFMGA ProGuide + TU Wien + JAIST + TeX Live + Debian Dev
GPG: 0x860CDC13   fp: F7D8 A928 26E3 16A1 9FA0 ACF0 6CAC A448 860C DC13

From preining at logic.at  Mon Jul 20 02:25:01 2020
From: preining at logic.at (Norbert Preining)
Date: Mon, 20 Jul 2020 09:25:01 +0900
Subject: How to package executables
In-Reply-To: <202007192254.06JMsYKK000347@freefriends.org>
References: <f485c55b-2626-c4ac-125d-a9ba2767c700@gresille.org>
 <202007192254.06JMsYKK000347@freefriends.org>
Message-ID: <20200720002501.GG169658@bulldog.preining.info>

Hi Louis, hi Karl,

> So, I guess the direct answer to your question is, if you provide a
> "spix" executable in the CTAN upload, I will install it in TL. And my

I looked into the git repo of spix (not what is on CTAN), and it seems
quite simple to do what is requested, since there is already a bin/spix
that used dirname $0 ../

Thus, suggestion:
- put spix directory containing __init__.py and __main__.py into
	texmf-dist/scripts/spix/spix/
  (mind the double "spix")
- put the bin/spix into
	texmf-dist/scripts/spix/
  or
	texmf-dist/scripts/spix/bin/
- as usual, link
	bin/$ARCH/spix -> ../../texmf-dist/scripts/spix{/bin}/spix
- adjust the spix wrapper (bin/spix) to use realpath in addition
  to dirname to get the texmf-dist/scripts/spix directory
- adjust whether to use (dirname...)/.. or (dirname...)/ only depending
  on the script location (including the bin directory in CTAN or not)

So I think it is rather simple to install, in principle.

> Another minor point: it is simpler to deal with an unpacked distribution
> on CTAN, that is, instead of one spix-1.0.0.tar.gz file, upload the

100% agreed!

Best

Norbert

--
PREINING Norbert                              https://www.preining.info
Accelia Inc. + IFMGA ProGuide + TU Wien + JAIST + TeX Live + Debian Dev
GPG: 0x860CDC13   fp: F7D8 A928 26E3 16A1 9FA0 ACF0 6CAC A448 860C DC13

From karl at freefriends.org  Mon Jul 20 23:48:13 2020
From: karl at freefriends.org (Karl Berry)
Date: Mon, 20 Jul 2020 15:48:13 -0600
Subject: How to package executables
In-Reply-To: <20200720002501.GG169658@bulldog.preining.info>
Message-ID: <202007202148.06KLmDeI027615@freefriends.org>

    - put spix directory containing __init__.py and __main__.py into

Names like __*__.py with no package name are inherently ambiguous in the
TeX world.

Maybe that doesn't matter in this particular case, since there's
presumably no reason to ever look up __main__.py with kpsewhich. On the
other hand, this is breaking new ground -- there are no __*__.py files
in TL now. I am automatically leery. 

    since there is already a bin/spix that used dirname $0 ../

Well, good. I await its next CTAN upload :). --thanks, karl.

From norbert at preining.info  Tue Jul 21 02:08:27 2020
From: norbert at preining.info (Norbert Preining)
Date: Tue, 21 Jul 2020 09:08:27 +0900
Subject: How to package executables
In-Reply-To: <202007202148.06KLmDeI027615@freefriends.org>
References: <20200720002501.GG169658@bulldog.preining.info>
 <202007202148.06KLmDeI027615@freefriends.org>
Message-ID: <20200721000827.GA108002@burischnitzel.preining.info>

On Mon, 20 Jul 2020, Karl Berry wrote:
>     - put spix directory containing __init__.py and __main__.py into
> 
> Names like __*__.py with no package name are inherently ambiguous in the
> TeX world.

Indeed, that is a good point, and problematic. These files should not be
searched via kpsewhich. Maybe texmf-dist/python/ hierarchy?

> Maybe that doesn't matter in this particular case, since there's
> presumably no reason to ever look up __main__.py with kpsewhich. On the

But we might and up with many of the __main__.py files if python module
based programs proliferate. And they will, because Python is designed to
be a PITA and force people to strange naming requirements. (Been there,
done that, always asked myself why Python is popular).

> other hand, this is breaking new ground -- there are no __*__.py files
> in TL now. I am automatically leery. 

Of course it would be possible to merge the __init__.py and __main__.py
into one file, and use that as ultimate source and binary. This is what
i would suggests.

Splitting functionality into modules is only useful if there will be an
actual use of the module.

But then, it is Python, and object encapsulation is based on file level
and file naming *and* directory naming, how retro.

Best

Norbert

--
PREINING Norbert                              https://www.preining.info
Accelia Inc. + IFMGA ProGuide + TU Wien + JAIST + TeX Live + Debian Dev
GPG: 0x860CDC13   fp: F7D8 A928 26E3 16A1 9FA0 ACF0 6CAC A448 860C DC13

From amaxwell at mac.com  Tue Jul 21 05:40:36 2020
From: amaxwell at mac.com (Adam R. Maxwell)
Date: Mon, 20 Jul 2020 20:40:36 -0700
Subject: How to package executables
In-Reply-To: <20200721000827.GA108002@burischnitzel.preining.info>
References: <20200720002501.GG169658@bulldog.preining.info>
 <202007202148.06KLmDeI027615@freefriends.org>
 <20200721000827.GA108002@burischnitzel.preining.info>
Message-ID: <11DA41B2-2277-497B-AEEB-9D58C360A101@mac.com>


> On Jul 20, 2020, at 17:08 , Norbert Preining <norbert at preining.info> wrote:
> 
> But we might and up with many of the __main__.py files if python module
> based programs proliferate. And they will, because Python is designed to
> be a PITA and force people to strange naming requirements. (Been there,
> done that, always asked myself why Python is popular).

Because it's more readable than Perl, Norbert (but so is line
noise, for that matter) :P.

> 
>> other hand, this is breaking new ground -- there are no __*__.py files
>> in TL now. I am automatically leery. 
> 
> Of course it would be possible to merge the __init__.py and __main__.py
> into one file, and use that as ultimate source and binary. This is what
> i would suggests.

Yes, and it can still be loaded as a module. I've never seen a
module with all code directly in the __init__.py file; it's
a sentinel to tell Python that a directory is a package, as I
understand. I could be wrong, as it's been years since I
set up my own module for distribution, and I recall it being kind of
confusing. Maybe Python 3 changes things.

> Splitting functionality into modules is only useful if there will be an
> actual use of the module.

Agreed. A single file makes more sense for TL, and you can still put
a __main__ function in it and make it executable. I put everything
into a file called spix.py, but my testing failed since I don't have
python3 installed. File here, if it's helpful as a starting point:

https://www.dropbox.com/s/rwj7m4yi20rf1bb/spix.py?dl=0

> But then, it is Python, and object encapsulation is based on file level
> and file naming *and* directory naming, how retro.

Well, for search path and module naming, but you can also get
around that, IIRC. I think of object encapsulation as your code,
and you can put classes in whatever filename(s) you want, as I'm
sure you know.

-- 
Adam


From norbert at preining.info  Tue Jul 21 06:29:35 2020
From: norbert at preining.info (Norbert Preining)
Date: Tue, 21 Jul 2020 13:29:35 +0900
Subject: How to package executables
In-Reply-To: <11DA41B2-2277-497B-AEEB-9D58C360A101@mac.com>
References: <20200720002501.GG169658@bulldog.preining.info>
 <202007202148.06KLmDeI027615@freefriends.org>
 <20200721000827.GA108002@burischnitzel.preining.info>
 <11DA41B2-2277-497B-AEEB-9D58C360A101@mac.com>
Message-ID: <20200721042935.GB4017@burischnitzel.preining.info>

Hi Adam,

funny discussion that is ;-)

> Because it's more readable than Perl, Norbert (but so is line
> noise, for that matter) :P.

Kind of disagree, even after long long time or writing Python code.

> Yes, and it can still be loaded as a module. I've never seen a
> module with all code directly in the __init__.py file; it's
> a sentinel to tell Python that a directory is a package, as I

No, there are lots of modules that put all the code into __init__,
and yes, it is still the sentinel so it might be empty, too.
Nothing has changed in this respect.

> Agreed. A single file makes more sense for TL, and you can still put
> a __main__ function in it and make it executable. I put everything

That is what I normally do.

> into a file called spix.py, but my testing failed since I don't have
> python3 installed. File here, if it's helpful as a starting point:

Nearly there, only two changes where necessary:
	import argparse
was dropped, and two occurrences of
	spix.XXXXXX
need to be replaced simply with
	XXXXXX

spix.compiletex -> compiletex
spix.SpixError -> SpixError

That's it.

> Well, for search path and module naming, but you can also get
> around that, IIRC. I think of object encapsulation as your code,

Yes, of course, you **can** get around it, but it is a huge pain in the
butt. Trying to import not module files from outside the CWD is eg
a huge pain, something like
	import XXX from .foo.bar
etc will throw off Python(3).

So yes, as with any turing complete programming language with a minimal
level of introspection, you can do whatever you want. It is just - first
shoot yourself 20 times and then give up.

I know, Pythonistas will come after me and tell me what they always do
	You are not doing it the Python way!
	Use proper modules!
And that is one of the reasons I despise Python. I don't want to get
forced into a specific way of doing things. It should be a
recommendation, but not forced upon us.

Anyway, that is all off topic ranting.

Best

Norbert

--
PREINING Norbert                              https://www.preining.info
Accelia Inc. + IFMGA ProGuide + TU Wien + JAIST + TeX Live + Debian Dev
GPG: 0x860CDC13   fp: F7D8 A928 26E3 16A1 9FA0 ACF0 6CAC A448 860C DC13

From kakuto at w32tex.org  Tue Jul 21 06:55:11 2020
From: kakuto at w32tex.org (Akira Kakuto)
Date: Tue, 21 Jul 2020 13:55:11 +0900
Subject: How to package executables
In-Reply-To: <11DA41B2-2277-497B-AEEB-9D58C360A101@mac.com>
References: <20200720002501.GG169658@bulldog.preining.info>
 <202007202148.06KLmDeI027615@freefriends.org>
 <20200721000827.GA108002@burischnitzel.preining.info>
 <11DA41B2-2277-497B-AEEB-9D58C360A101@mac.com>
Message-ID: <64781617CE1340AAA879E0AA877F9D70@CJ3001517A>

Dear Adam,

> https://www.dropbox.com/s/rwj7m4yi20rf1bb/spix.py?dl=0

By applying an attached spix.py.diff.gz (compressed),
spix test.tex
worked on Windows for

% Compile this file twice with lualatex.
% test.tex
%$ lualatex test.tex
%$ lualatex test.tex

\documentclass{article}
\begin{document}
Hello, world!
\end{document}

I added a wrapper spix.exe in the bin directory,
and put $TEXMFDIST/scripts/spix/spix.py.

In the case of
filename = pathlib.PosixPath(filename)
I encountered "not implemented error" probably because
OS is Windows.

Best,
Akira
-------------- next part --------------
A non-text attachment was scrubbed...
Name: spix.py.diff.gz
Type: application/x-gzip
Size: 527 bytes
Desc: not available
URL: <https://tug.org/pipermail/tex-live/attachments/20200721/84b6cb8a/attachment.bin>

From tkt.asakura at gmail.com  Tue Jul 21 07:26:16 2020
From: tkt.asakura at gmail.com (Takuto ASAKURA)
Date: Tue, 21 Jul 2020 14:26:16 +0900
Subject: How to package executables
In-Reply-To: <20200721042935.GB4017@burischnitzel.preining.info>
References: <20200720002501.GG169658@bulldog.preining.info>
 <202007202148.06KLmDeI027615@freefriends.org>
 <20200721000827.GA108002@burischnitzel.preining.info>
 <11DA41B2-2277-497B-AEEB-9D58C360A101@mac.com>
 <20200721042935.GB4017@burischnitzel.preining.info>
Message-ID: <DD044702-A692-4B21-9547-DA98AC43CC58@gmail.com>


Hi Adam,

sorry for break into the discussion, but may I ask why you want to put
your Python script into TeX Live from the first place?
Why not a repository for the Python world such as PyPI?

For instance in PyPI, I could find a number of packages related to TeX/LaTeX:

	https://pypi.org/search/?q=tex+live

Of course some (perhaps most) of them require TeX Live (or other TeX distribution)
to utilize their features. I guess they don't handle installation of TeX
distributions themselves, but the users are responsible to install TeX.
As far as I know, this way is typical for TeX-related projects which are
not directly inside the TeX world (CTAN).

Since TeX Live do not include Python interpreter and also not require the
interpreter, there is no guarantee that an user of TeX Live have a Python
interpreter in their environment. Thus, TeX Live users who can use your
Python script are somewhat limited.

I imagine that, for the general Python users (and who also use TeX Live),
it might be just fine if your python package can be installed via pip, conda,
or whatever in the Python world. This way, I think you can be much
comfortable with the typical Python manner, without thinking about naming
issue and so on.

Best,
Takuto

> On 2020/07/21, at 13:29, Norbert Preining <norbert at preining.info> wrote:
> 
> Hi Adam,
> 
> funny discussion that is ;-)
> 
>> Because it's more readable than Perl, Norbert (but so is line
>> noise, for that matter) :P.
> 
> Kind of disagree, even after long long time or writing Python code.
> 
>> Yes, and it can still be loaded as a module. I've never seen a
>> module with all code directly in the __init__.py file; it's
>> a sentinel to tell Python that a directory is a package, as I
> 
> No, there are lots of modules that put all the code into __init__,
> and yes, it is still the sentinel so it might be empty, too.
> Nothing has changed in this respect.
> 
>> Agreed. A single file makes more sense for TL, and you can still put
>> a __main__ function in it and make it executable. I put everything
> 
> That is what I normally do.
> 
>> into a file called spix.py, but my testing failed since I don't have
>> python3 installed. File here, if it's helpful as a starting point:
> 
> Nearly there, only two changes where necessary:
> 	import argparse
> was dropped, and two occurrences of
> 	spix.XXXXXX
> need to be replaced simply with
> 	XXXXXX
> 
> spix.compiletex -> compiletex
> spix.SpixError -> SpixError
> 
> That's it.
> 
>> Well, for search path and module naming, but you can also get
>> around that, IIRC. I think of object encapsulation as your code,
> 
> Yes, of course, you **can** get around it, but it is a huge pain in the
> butt. Trying to import not module files from outside the CWD is eg
> a huge pain, something like
> 	import XXX from .foo.bar
> etc will throw off Python(3).
> 
> So yes, as with any turing complete programming language with a minimal
> level of introspection, you can do whatever you want. It is just - first
> shoot yourself 20 times and then give up.
> 
> I know, Pythonistas will come after me and tell me what they always do
> 	You are not doing it the Python way!
> 	Use proper modules!
> And that is one of the reasons I despise Python. I don't want to get
> forced into a specific way of doing things. It should be a
> recommendation, but not forced upon us.
> 
> Anyway, that is all off topic ranting.
> 
> Best
> 
> Norbert
> 
> --
> PREINING Norbert                              https://www.preining.info
> Accelia Inc. + IFMGA ProGuide + TU Wien + JAIST + TeX Live + Debian Dev
> GPG: 0x860CDC13   fp: F7D8 A928 26E3 16A1 9FA0 ACF0 6CAC A448 860C DC13



From henrimenke at gmail.com  Tue Jul 21 08:13:04 2020
From: henrimenke at gmail.com (Henri Menke)
Date: Tue, 21 Jul 2020 18:13:04 +1200
Subject: How to package executables
In-Reply-To: <DD044702-A692-4B21-9547-DA98AC43CC58@gmail.com>
References: <20200720002501.GG169658@bulldog.preining.info>
 <202007202148.06KLmDeI027615@freefriends.org>
 <20200721000827.GA108002@burischnitzel.preining.info>
 <11DA41B2-2277-497B-AEEB-9D58C360A101@mac.com>
 <20200721042935.GB4017@burischnitzel.preining.info>
 <DD044702-A692-4B21-9547-DA98AC43CC58@gmail.com>
Message-ID: <20200721061304.shupt7qse3wto5y4@vento15post8>

On 21/07/20, 14:26, Takuto ASAKURA wrote:
> 
> Hi Adam,
> 
> sorry for break into the discussion, but may I ask why you want to put
> your Python script into TeX Live from the first place?
> Why not a repository for the Python world such as PyPI?
> 
> For instance in PyPI, I could find a number of packages related to TeX/LaTeX:
> 
> 	https://pypi.org/search/?q=tex+live
> 
> Of course some (perhaps most) of them require TeX Live (or other TeX distribution)
> to utilize their features. I guess they don't handle installation of TeX
> distributions themselves, but the users are responsible to install TeX.
> As far as I know, this way is typical for TeX-related projects which are
> not directly inside the TeX world (CTAN).
> 
> Since TeX Live do not include Python interpreter and also not require the
> interpreter, there is no guarantee that an user of TeX Live have a Python
> interpreter in their environment. Thus, TeX Live users who can use your
> Python script are somewhat limited.
> 
> I imagine that, for the general Python users (and who also use TeX Live),
> it might be just fine if your python package can be installed via pip, conda,
> or whatever in the Python world. This way, I think you can be much
> comfortable with the typical Python manner, without thinking about naming
> issue and so on.

I second the opinion, that Python modules really should not be in TeX
Live.  As Takuto mentioned, there are already multiple channels for
distributing Python packages and it is strongly recommended to use
these, especially when it comes down to dependencies.  It will not be
possible to ship all the Python dependencies of your code with TeX Live,
pushing the burden onto the user.  However, not being installed via an
official channel makes installing dependencies much more awkward and
there are multiple pitfalls (PYTHONPATH, virtualenv, etc.).  Already
Linux distributions which have been packaging software for decades have
problems integrating properly with the Python ecosystem.  It is
therefore recommended to make your package available via PyPI or
Anaconda Cloud (or whatever the name is).

Cheers, Henri

> 
> Best,
> Takuto
> 
> > On 2020/07/21, at 13:29, Norbert Preining <norbert at preining.info> wrote:
> > 
> > Hi Adam,
> > 
> > funny discussion that is ;-)
> > 
> >> Because it's more readable than Perl, Norbert (but so is line
> >> noise, for that matter) :P.
> > 
> > Kind of disagree, even after long long time or writing Python code.
> > 
> >> Yes, and it can still be loaded as a module. I've never seen a
> >> module with all code directly in the __init__.py file; it's
> >> a sentinel to tell Python that a directory is a package, as I
> > 
> > No, there are lots of modules that put all the code into __init__,
> > and yes, it is still the sentinel so it might be empty, too.
> > Nothing has changed in this respect.
> > 
> >> Agreed. A single file makes more sense for TL, and you can still put
> >> a __main__ function in it and make it executable. I put everything
> > 
> > That is what I normally do.
> > 
> >> into a file called spix.py, but my testing failed since I don't have
> >> python3 installed. File here, if it's helpful as a starting point:
> > 
> > Nearly there, only two changes where necessary:
> > 	import argparse
> > was dropped, and two occurrences of
> > 	spix.XXXXXX
> > need to be replaced simply with
> > 	XXXXXX
> > 
> > spix.compiletex -> compiletex
> > spix.SpixError -> SpixError
> > 
> > That's it.
> > 
> >> Well, for search path and module naming, but you can also get
> >> around that, IIRC. I think of object encapsulation as your code,
> > 
> > Yes, of course, you **can** get around it, but it is a huge pain in the
> > butt. Trying to import not module files from outside the CWD is eg
> > a huge pain, something like
> > 	import XXX from .foo.bar
> > etc will throw off Python(3).
> > 
> > So yes, as with any turing complete programming language with a minimal
> > level of introspection, you can do whatever you want. It is just - first
> > shoot yourself 20 times and then give up.
> > 
> > I know, Pythonistas will come after me and tell me what they always do
> > 	You are not doing it the Python way!
> > 	Use proper modules!
> > And that is one of the reasons I despise Python. I don't want to get
> > forced into a specific way of doing things. It should be a
> > recommendation, but not forced upon us.
> > 
> > Anyway, that is all off topic ranting.
> > 
> > Best
> > 
> > Norbert
> > 
> > --
> > PREINING Norbert                              https://www.preining.info
> > Accelia Inc. + IFMGA ProGuide + TU Wien + JAIST + TeX Live + Debian Dev
> > GPG: 0x860CDC13   fp: F7D8 A928 26E3 16A1 9FA0 ACF0 6CAC A448 860C DC13
> 
> 

From norbert at preining.info  Tue Jul 21 08:34:26 2020
From: norbert at preining.info (Norbert Preining)
Date: Tue, 21 Jul 2020 15:34:26 +0900
Subject: How to package executables
In-Reply-To: <20200721061304.shupt7qse3wto5y4@vento15post8>
 <DD044702-A692-4B21-9547-DA98AC43CC58@gmail.com>
Message-ID: <20200721063426.GA25343@burischnitzel.preining.info>

Hi Takuto, hi Henri,

On Tue, 21 Jul 2020, Takuto ASAKURA wrote:
> sorry for break into the discussion, but may I ask why you want to put

It was not Adam, he only answered to the thread about how to package
and prepared a merged version - but that is from someone else.

On Tue, 21 Jul 2020, Henri Menke wrote:
> I second the opinion, that Python modules really should not be in TeX
> Live.  As Takuto mentioned, there are already multiple channels for


I disagree with both of you! Ok, so should we get rid of arara, latexmk,
and maybe hundreds of other packages, too?

We don't distribute java, there are many other Python programs that are
very useful.

That is not an argument. And putting the script into pypi is nice, but
nobody in the TeX world will probably find it, while including it in TeX
Live is natural.

Best

Norbert

--
PREINING Norbert                              https://www.preining.info
Accelia Inc. + IFMGA ProGuide + TU Wien + JAIST + TeX Live + Debian Dev
GPG: 0x860CDC13   fp: F7D8 A928 26E3 16A1 9FA0 ACF0 6CAC A448 860C DC13

From norbert at preining.info  Tue Jul 21 10:22:08 2020
From: norbert at preining.info (Norbert Preining)
Date: Tue, 21 Jul 2020 17:22:08 +0900
Subject: How to package executables
In-Reply-To: <64781617CE1340AAA879E0AA877F9D70@CJ3001517A>
References: <20200720002501.GG169658@bulldog.preining.info>
 <202007202148.06KLmDeI027615@freefriends.org>
 <20200721000827.GA108002@burischnitzel.preining.info>
 <11DA41B2-2277-497B-AEEB-9D58C360A101@mac.com>
 <64781617CE1340AAA879E0AA877F9D70@CJ3001517A>
Message-ID: <20200721082208.GC4613@bulldog.preining.info>

Hi Akira,

> By applying an attached spix.py.diff.gz (compressed),

Yes, that is fine, and looks more or less what I have done.

BUT, whatever we do, it is not up to Adam or you or me ;-)

Best

Norbert

--
PREINING Norbert                              https://www.preining.info
Accelia Inc. + IFMGA ProGuide + TU Wien + JAIST + TeX Live + Debian Dev
GPG: 0x860CDC13   fp: F7D8 A928 26E3 16A1 9FA0 ACF0 6CAC A448 860C DC13

From tkt.asakura at gmail.com  Tue Jul 21 10:23:15 2020
From: tkt.asakura at gmail.com (Takuto ASAKURA)
Date: Tue, 21 Jul 2020 17:23:15 +0900
Subject: How to package executables
In-Reply-To: <20200721063426.GA25343@burischnitzel.preining.info>
References: <20200721063426.GA25343@burischnitzel.preining.info>
Message-ID: <33584ED6-4DD4-45B9-83BD-FF9AB5DD7BCB@gmail.com>


Hi Norbert,

> It was not Adam, he only answered to the thread about how to package
> and prepared a merged version - but that is from someone else.

sorry, I was careless.

> I disagree with both of you! Ok, so should we get rid of arara, latexmk,
> and maybe hundreds of other packages, too?

Well, I carefully not to say "TeX Live should not include Python packages"
or "Any user should not post a python package to CTAN" because I do not
think so. Instead, I just wanted to mention another option (in case the
usual python manner does really not work well with the TeX Live).
I believed there is no "disagree" on this.

> nobody in the TeX world will probably find it, while including it in TeX
> Live is natural.

I didn't think so, but is that so? That means, the TeX-related packages
on PyPI, which I mentioned in the last message, are almost invisible to
the people in the TeX world...

Anyway, it is good for me to confirm that TeX Live also welcome packages
written in Python and other languages.

Best,
Takuto

> On 2020/07/21, at 15:34, Norbert Preining <norbert at preining.info> wrote:
> 
> Hi Takuto, hi Henri,
> 
> On Tue, 21 Jul 2020, Takuto ASAKURA wrote:
>> sorry for break into the discussion, but may I ask why you want to put
> 
> It was not Adam, he only answered to the thread about how to package
> and prepared a merged version - but that is from someone else.
> 
> On Tue, 21 Jul 2020, Henri Menke wrote:
>> I second the opinion, that Python modules really should not be in TeX
>> Live.  As Takuto mentioned, there are already multiple channels for
> 
> 
> I disagree with both of you! Ok, so should we get rid of arara, latexmk,
> and maybe hundreds of other packages, too?
> 
> We don't distribute java, there are many other Python programs that are
> very useful.
> 
> That is not an argument. And putting the script into pypi is nice, but
> nobody in the TeX world will probably find it, while including it in TeX
> Live is natural.
> 
> Best
> 
> Norbert
> 
> --
> PREINING Norbert                              https://www.preining.info
> Accelia Inc. + IFMGA ProGuide + TU Wien + JAIST + TeX Live + Debian Dev
> GPG: 0x860CDC13   fp: F7D8 A928 26E3 16A1 9FA0 ACF0 6CAC A448 860C DC13


From norbert at preining.info  Tue Jul 21 10:27:02 2020
From: norbert at preining.info (Norbert Preining)
Date: Tue, 21 Jul 2020 17:27:02 +0900
Subject: How to package executables
In-Reply-To: <33584ED6-4DD4-45B9-83BD-FF9AB5DD7BCB@gmail.com>
References: <20200721063426.GA25343@burischnitzel.preining.info>
 <33584ED6-4DD4-45B9-83BD-FF9AB5DD7BCB@gmail.com>
Message-ID: <20200721082702.GF4613@bulldog.preining.info>

On Tue, 21 Jul 2020, Takuto ASAKURA wrote:
> think so. Instead, I just wanted to mention another option (in case the
> usual python manner does really not work well with the TeX Live).
> I believed there is no "disagree" on this.

Agreed ;-)

> I didn't think so, but is that so? That means, the TeX-related packages
> on PyPI, which I mentioned in the last message, are almost invisible to
> the people in the TeX world...

That is my feeling ... I would never search for anything TeX related on
PyPi, although I use it daily.

> Anyway, it is good for me to confirm that TeX Live also welcome packages
> written in Python and other languages.

Sure enough, there are already lots of Python programs!

Best

Norbert

--
PREINING Norbert                              https://www.preining.info
Accelia Inc. + IFMGA ProGuide + TU Wien + JAIST + TeX Live + Debian Dev
GPG: 0x860CDC13   fp: F7D8 A928 26E3 16A1 9FA0 ACF0 6CAC A448 860C DC13

From henrimenke at gmail.com  Tue Jul 21 10:32:02 2020
From: henrimenke at gmail.com (Henri Menke)
Date: Tue, 21 Jul 2020 20:32:02 +1200
Subject: How to package executables
In-Reply-To: <20200721063426.GA25343@burischnitzel.preining.info>
References: <20200721061304.shupt7qse3wto5y4@vento15post8>
 <DD044702-A692-4B21-9547-DA98AC43CC58@gmail.com>
 <20200721063426.GA25343@burischnitzel.preining.info>
Message-ID: <20200721083202.srwa7qtjoklnptpy@vento15post8>

On 21/07/20, 15:34, Norbert Preining wrote:
> Hi Takuto, hi Henri,
> 
> On Tue, 21 Jul 2020, Takuto ASAKURA wrote:
> > sorry for break into the discussion, but may I ask why you want to put
> 
> It was not Adam, he only answered to the thread about how to package
> and prepared a merged version - but that is from someone else.
> 
> On Tue, 21 Jul 2020, Henri Menke wrote:
> > I second the opinion, that Python modules really should not be in TeX
> > Live.  As Takuto mentioned, there are already multiple channels for
> 
> 
> I disagree with both of you! Ok, so should we get rid of arara, latexmk,
> and maybe hundreds of other packages, too?

There is a major difference between these and the proposed Python
pacakges, which is that these are already in TeX Live and it would be a
big inconvenience for users if these were removed all of a sudden.

Also there is no standard cross-platform way comparable to pip install
Java and Perl programs.  I would think that users rather expect Python
software to be installable via pip than anything else.  It is of course
not my call whether you are going to maintain Python packages in TeX
Live, but I have the feeling that you might be doing the users a
disservice.

Cheers,
Henri

> 
> We don't distribute java, there are many other Python programs that are
> very useful.
> 
> That is not an argument. And putting the script into pypi is nice, but
> nobody in the TeX world will probably find it, while including it in TeX
> Live is natural.
> 
> Best
> 
> Norbert
> 
> --
> PREINING Norbert                              https://www.preining.info
> Accelia Inc. + IFMGA ProGuide + TU Wien + JAIST + TeX Live + Debian Dev
> GPG: 0x860CDC13   fp: F7D8 A928 26E3 16A1 9FA0 ACF0 6CAC A448 860C DC13

From norbert at preining.info  Tue Jul 21 10:36:15 2020
From: norbert at preining.info (Norbert Preining)
Date: Tue, 21 Jul 2020 17:36:15 +0900
Subject: How to package executables
In-Reply-To: <20200721083202.srwa7qtjoklnptpy@vento15post8>
References: <20200721061304.shupt7qse3wto5y4@vento15post8>
 <DD044702-A692-4B21-9547-DA98AC43CC58@gmail.com>
 <20200721063426.GA25343@burischnitzel.preining.info>
 <20200721083202.srwa7qtjoklnptpy@vento15post8>
Message-ID: <20200721083615.GG4613@bulldog.preining.info>

Hi Henri,

> There is a major difference between these and the proposed Python
> pacakges, which is that these are already in TeX Live and it would be a

Hmm, but those packages have entered TL at some point, without
objections.

> Also there is no standard cross-platform way comparable to pip install
> Java and Perl programs.  I would think that users rather expect Python
> software to be installable via pip than anything else.  It is of course

I would rather not. I prefer users to use their distribution package
manager, or at least TeX Live. pip is a source of trouble for those who
don't know what it is for and how it is used and should be used.

All the best

Norbert

--
PREINING Norbert                              https://www.preining.info
Accelia Inc. + IFMGA ProGuide + TU Wien + JAIST + TeX Live + Debian Dev
GPG: 0x860CDC13   fp: F7D8 A928 26E3 16A1 9FA0 ACF0 6CAC A448 860C DC13

From henrimenke at gmail.com  Tue Jul 21 11:10:41 2020
From: henrimenke at gmail.com (Henri Menke)
Date: Tue, 21 Jul 2020 21:10:41 +1200
Subject: How to package executables
In-Reply-To: <20200721083615.GG4613@bulldog.preining.info>
References: <20200721061304.shupt7qse3wto5y4@vento15post8>
 <DD044702-A692-4B21-9547-DA98AC43CC58@gmail.com>
 <20200721063426.GA25343@burischnitzel.preining.info>
 <20200721083202.srwa7qtjoklnptpy@vento15post8>
 <20200721083615.GG4613@bulldog.preining.info>
Message-ID: <20200721091041.tlyeqmy3igwifhzc@vento15post8>

On 21/07/20, 17:36, Norbert Preining wrote:
> Hi Henri,
> 
> > There is a major difference between these and the proposed Python
> > pacakges, which is that these are already in TeX Live and it would be a
> 
> Hmm, but those packages have entered TL at some point, without
> objections.
> 
> > Also there is no standard cross-platform way comparable to pip install
> > Java and Perl programs.  I would think that users rather expect Python
> > software to be installable via pip than anything else.  It is of course
> 
> I would rather not. I prefer users to use their distribution package
> manager, or at least TeX Live. pip is a source of trouble for those who
> don't know what it is for and how it is used and should be used.

That would ideal, but the two most popular operating systems, Windows
and macOS, both do not have a package manager, which is the reason why
all that trash with pip, rvm, npm, cargo, and so on exists in the first
place.  TeX Live with its tlmgr is not a good example either.  At least
there you can snapshot yearly releases, as you do in Debian.

Just to clarify, I'm not at all against distributing Python packages
with TeX Live.  I only wanted to bring these, in my opinion, valid
concerns to your attention such that you can make an informed decision.

Cheers,
Henri

> 
> All the best
> 
> Norbert
> 
> --
> PREINING Norbert                              https://www.preining.info
> Accelia Inc. + IFMGA ProGuide + TU Wien + JAIST + TeX Live + Debian Dev
> GPG: 0x860CDC13   fp: F7D8 A928 26E3 16A1 9FA0 ACF0 6CAC A448 860C DC13

From norbert at preining.info  Tue Jul 21 12:11:10 2020
From: norbert at preining.info (Norbert Preining)
Date: Tue, 21 Jul 2020 19:11:10 +0900
Subject: How to package executables
In-Reply-To: <20200721091041.tlyeqmy3igwifhzc@vento15post8>
References: <20200721061304.shupt7qse3wto5y4@vento15post8>
 <DD044702-A692-4B21-9547-DA98AC43CC58@gmail.com>
 <20200721063426.GA25343@burischnitzel.preining.info>
 <20200721083202.srwa7qtjoklnptpy@vento15post8>
 <20200721083615.GG4613@bulldog.preining.info>
 <20200721091041.tlyeqmy3igwifhzc@vento15post8>
Message-ID: <20200721101110.GH4613@bulldog.preining.info>

Hi Henri,

> Just to clarify, I'm not at all against distributing Python packages
> with TeX Live.  I only wanted to bring these, in my opinion, valid
> concerns to your attention such that you can make an informed decision.

Thanks, appreciated. I am well aware of all the mess. Even on Linux it
**is** a mess with the explosion of middleware and language specific
package managers. But I don't see an alternative (I often rant about
this in Debian cycles, where the middleware is painfully incomplete and
out of date, so real development can simply not use it).

That said, I still prefer to have TeX related stuff in TeX Live than in
the programming language specific distribution. The reason is very
simple, users don't give a .... about which language was used for
implementation, they just want a tool that works. Whether it runs
Python, Perl, Lua, Java, FOobar in the background, is irrelevant (up to
the point that the interpreter/vm needs to be installed, of course).

Best

Norbert

--
PREINING Norbert                              https://www.preining.info
Accelia Inc. + IFMGA ProGuide + TU Wien + JAIST + TeX Live + Debian Dev
GPG: 0x860CDC13   fp: F7D8 A928 26E3 16A1 9FA0 ACF0 6CAC A448 860C DC13

From P.Taylor at Hellenic-Institute.Uk  Tue Jul 21 13:27:54 2020
From: P.Taylor at Hellenic-Institute.Uk (Philip Taylor)
Date: Tue, 21 Jul 2020 12:27:54 +0100
Subject: How to package executables
In-Reply-To: <20200721083615.GG4613@bulldog.preining.info>
References: <20200721061304.shupt7qse3wto5y4@vento15post8>
 <DD044702-A692-4B21-9547-DA98AC43CC58@gmail.com>
 <20200721063426.GA25343@burischnitzel.preining.info>
 <20200721083202.srwa7qtjoklnptpy@vento15post8>
 <20200721083615.GG4613@bulldog.preining.info>
Message-ID: <9e461fa3-a07b-4713-576f-b3e601ca9a09@Hellenic-Institute.Uk>

An HTML attachment was scrubbed...
URL: <https://tug.org/pipermail/tex-live/attachments/20200721/27005798/attachment.html>

From spalax at gresille.org  Tue Jul 21 16:58:38 2020
From: spalax at gresille.org (Louis)
Date: Tue, 21 Jul 2020 16:58:38 +0200
Subject: How to package executables
In-Reply-To: <20200721082208.GC4613@bulldog.preining.info>
References: <20200720002501.GG169658@bulldog.preining.info>
 <202007202148.06KLmDeI027615@freefriends.org>
 <20200721000827.GA108002@burischnitzel.preining.info>
 <11DA41B2-2277-497B-AEEB-9D58C360A101@mac.com>
 <64781617CE1340AAA879E0AA877F9D70@CJ3001517A>
 <20200721082208.GC4613@bulldog.preining.info>
Message-ID: <a1d5f887-15f0-ae86-b5e9-6d2618271602@gresille.org>

Hi,
sorry to answer to days later, but I am in holidays with my daughter :)
which means I have even less time to hack than usual? :'(

First, to answer to Takuto as why I would want to put my python script
in texlive: when I published it on CTAN, Manfred Lotz (of the CTAN team)
mentioned that "[he] thought about how [my] package could reside in
texlive" (before giving some ideas, then redirecting me to this mailing
list). As someone else mentioned, TeX folks probably won't look for TeX
tools in Pypi, so I thought this would be nice if they could install my
program from texlive (although it is on CTAN, so tex people should be
able to find it anyways). But you know texlive better than I do, and you
are the people in charge, so I would totally understand if you decided
that spix should not be in texlive for any reason (because it's written
in python, because it's a pain to include in texlive, because of too
many issues, because?).

Now, assuming that spix has its place into texlive?

As suggested, I merged __init__.py and __main__.py files into a single
spix.py file (work is done in branch texlive [1] for those interested).
It can even simply be renamed as "spix", which would work on GNU/Linux
(and MacOS?), but maybe it would not work on Windows, as Windows
wouldn't care about the shebang, so I don't know whether this is a good
idea or not.

[1] https://framagit.org/spalax/spix/-/tree/texlive

I will write a man page.

Would a CTAN package with those files be OK?

spix/CHANGELOG.md
spix/LICENSE.txt
spix/README.md
spix/spix.py (executable)
spix/spix.pdf (documentation)
spix/spix.1 (man page)

Or should I add subdirectories (spix/bin/spix.py ? spix/man/spix.1?
other?). Then, once I uploaded it to CTAN, is there anything else I
should do, or will you (the texlive team) handle everything?

At last, once everything works, I offer to write some documentation
about how to package a python script for easy integration in texlive
based on this thread (that you would review and publish on [2]). Are you
interested (or is this just another burden for you)?

[2] https://tug.org/texlive/pkgcontrib.html#exec

Thanks for your work,
Louis

From tkt.asakura at gmail.com  Tue Jul 21 17:27:15 2020
From: tkt.asakura at gmail.com (Takuto ASAKURA)
Date: Wed, 22 Jul 2020 00:27:15 +0900
Subject: How to package executables
In-Reply-To: <a1d5f887-15f0-ae86-b5e9-6d2618271602@gresille.org>
References: <20200720002501.GG169658@bulldog.preining.info>
 <202007202148.06KLmDeI027615@freefriends.org>
 <20200721000827.GA108002@burischnitzel.preining.info>
 <11DA41B2-2277-497B-AEEB-9D58C360A101@mac.com>
 <64781617CE1340AAA879E0AA877F9D70@CJ3001517A>
 <20200721082208.GC4613@bulldog.preining.info>
 <a1d5f887-15f0-ae86-b5e9-6d2618271602@gresille.org>
Message-ID: <FE5E0234-5318-4C57-A86E-E00FE61AC7B9@gmail.com>


Hi,

by roughly looking at the argument, I misunderstood that the author (Louis)
wants to serve the script not simply as a command line tool but also
as a python library (because I saw that the names "__init__" and "__main__"
were thought somewhat sources of the issue.) But it was not the case, and
now I got in this particular case, it can be regarded as "just a simple
single file command line tool". Then, it seems 100% reasonable to put the
single script file to the bin directory in TeX Live.

> At last, once everything works, I offer to write some documentation
> about how to package a python script for easy integration in texlive
> based on this thread (that you would review and publish on [2]). Are you
> interested (or is this just another burden for you)?

In my opinion, it would be nice to have such an extended instruction.
I personally also prefer, even for projects irrelevant to TeX, single
"<command>.py" for command line tool implemented in python. However, as far
as I know, the standard way of python packaging scheme is not like that,
but provide __init__.py, __main__.py, and so on. I guess this way would
be convenient if one also want to utilize the package as "a python library"
at the same time. However, this "python standard way" would not work well
in TeX Live, if I understand correctly. It would be nice if it is clearly
documented that "TeX Live prefers single file executable even for python."
and possibly with other useful advices.

Best,
Takuto

> On 2020/07/21, at 23:58, Louis <spalax at gresille.org> wrote:
> 
> Hi,
> sorry to answer to days later, but I am in holidays with my daughter :)
> which means I have even less time to hack than usual? :'(
> 
> First, to answer to Takuto as why I would want to put my python script
> in texlive: when I published it on CTAN, Manfred Lotz (of the CTAN team)
> mentioned that "[he] thought about how [my] package could reside in
> texlive" (before giving some ideas, then redirecting me to this mailing
> list). As someone else mentioned, TeX folks probably won't look for TeX
> tools in Pypi, so I thought this would be nice if they could install my
> program from texlive (although it is on CTAN, so tex people should be
> able to find it anyways). But you know texlive better than I do, and you
> are the people in charge, so I would totally understand if you decided
> that spix should not be in texlive for any reason (because it's written
> in python, because it's a pain to include in texlive, because of too
> many issues, because?).
> 
> Now, assuming that spix has its place into texlive?
> 
> As suggested, I merged __init__.py and __main__.py files into a single
> spix.py file (work is done in branch texlive [1] for those interested).
> It can even simply be renamed as "spix", which would work on GNU/Linux
> (and MacOS?), but maybe it would not work on Windows, as Windows
> wouldn't care about the shebang, so I don't know whether this is a good
> idea or not.
> 
> [1] https://framagit.org/spalax/spix/-/tree/texlive
> 
> I will write a man page.
> 
> Would a CTAN package with those files be OK?
> 
> spix/CHANGELOG.md
> spix/LICENSE.txt
> spix/README.md
> spix/spix.py (executable)
> spix/spix.pdf (documentation)
> spix/spix.1 (man page)
> 
> Or should I add subdirectories (spix/bin/spix.py ? spix/man/spix.1?
> other?). Then, once I uploaded it to CTAN, is there anything else I
> should do, or will you (the texlive team) handle everything?
> 
> At last, once everything works, I offer to write some documentation
> about how to package a python script for easy integration in texlive
> based on this thread (that you would review and publish on [2]). Are you
> interested (or is this just another burden for you)?
> 
> [2] https://tug.org/texlive/pkgcontrib.html#exec
> 
> Thanks for your work,
> Louis



From gnwiii at gmail.com  Tue Jul 21 21:53:12 2020
From: gnwiii at gmail.com (George N. White III)
Date: Tue, 21 Jul 2020 16:53:12 -0300
Subject: How to package executables
In-Reply-To: <FE5E0234-5318-4C57-A86E-E00FE61AC7B9@gmail.com>
References: <20200720002501.GG169658@bulldog.preining.info>
 <202007202148.06KLmDeI027615@freefriends.org>
 <20200721000827.GA108002@burischnitzel.preining.info>
 <11DA41B2-2277-497B-AEEB-9D58C360A101@mac.com>
 <64781617CE1340AAA879E0AA877F9D70@CJ3001517A>
 <20200721082208.GC4613@bulldog.preining.info>
 <a1d5f887-15f0-ae86-b5e9-6d2618271602@gresille.org>
 <FE5E0234-5318-4C57-A86E-E00FE61AC7B9@gmail.com>
Message-ID: <CAKTOP4540ZEYoMN80oiBrfU23eWFRo_3XZJBkEDN8Ha8zpy2YA@mail.gmail.com>

On Tue, 21 Jul 2020 at 12:28, Takuto ASAKURA <tkt.asakura at gmail.com> wrote:

>
> Hi,
>
> by roughly looking at the argument, I misunderstood that the author (Louis)
> wants to serve the script not simply as a command line tool but also
> as a python library (because I saw that the names "__init__" and "__main__"
> were thought somewhat sources of the issue.) But it was not the case, and
> now I got in this particular case, it can be regarded as "just a simple
> single file command line tool". Then, it seems 100% reasonable to put the
> single script file to the bin directory in TeX Live.
>
> > At last, once everything works, I offer to write some documentation
> > about how to package a python script for easy integration in texlive
> > based on this thread (that you would review and publish on [2]). Are you
> > interested (or is this just another burden for you)?
>
> In my opinion, it would be nice to have such an extended instruction.
> I personally also prefer, even for projects irrelevant to TeX, single
> "<command>.py" for command line tool implemented in python. However, as far
> as I know, the standard way of python packaging scheme is not like that,
> but provide __init__.py, __main__.py, and so on. I guess this way would
> be convenient if one also want to utilize the package as "a python
> library"

at the same time. However, this "python standard way" would not work well
> in TeX Live, if I understand correctly. It would be nice if it is clearly
> documented that "TeX Live prefers single file executable even for python."
> and possibly with other useful advices.
>

This should work for linux or macOS users (especially if the script
supports both
python2 and python3) but many Windows systems won't have python, or if they
do have python, it was installed by an application such as ArcGIS or QGIS.
 For
Windows, PyInstaller <https://pyinstaller.readthedocs.io/en/stable/> makes
a .exe file combining a Python interpreter with
a script.

-- 
George N. White III
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://tug.org/pipermail/tex-live/attachments/20200721/ea0fa9fc/attachment-0001.html>

From mojca.miklavec.lists at gmail.com  Tue Jul 21 22:17:40 2020
From: mojca.miklavec.lists at gmail.com (Mojca Miklavec)
Date: Tue, 21 Jul 2020 22:17:40 +0200
Subject: How to package executables
In-Reply-To: <f485c55b-2626-c4ac-125d-a9ba2767c700@gresille.org>
References: <f485c55b-2626-c4ac-125d-a9ba2767c700@gresille.org>
Message-ID: <CALBOmsY4mZQZAtsEbwbNaFSRqvz4PT_aeter6wZWZoffXLhy0w@mail.gmail.com>

Hi,

On Sun, 19 Jul 2020 at 22:58, Louis wrote:
>
> I recently released a simple python package on CTAN [1] (simple in that
> is has no (python) dependencies). When I released it, Manfred Lotz (of
> the CTAN team) mentionned that it might be shipped with texlive, and
> advised me to ask for help on this mailing list.
>
> [1] https://www.ctan.org/pkg/spix

I'm asking just in case.

Given the super extra care about what commands may or may not be
executed by tex/latex: are there no security concerns over executing
random commands in shell? Or is it simply that we can (and should)
guarantee that tex/latex (at least for pdftex and xetex) etc. will not
themselves execute malicious code by accident, while it's totally up
to the user running spix to be aware that they need to manually check
the source code downloaded from internet before compiling anything?

**********

My second concern (less important, irrelevant to the question of how
to include etc.) is roughly the following:
    https://xkcd.com/927/

I certainly find the tool useful (assuming I would still be using latex).
But on the other hand the users now no longer have a clue whether to
compile the file with tex, latex, pdftex, pdflatex, xetex, xelatex,
luatex, lualatex, context, mklatex or spix. It's not like you could
educate users to simply always run "spix hello.tex" to get their job
done on any given .tex file. And anyone writing the file will need to
possess some knowledge about how to write the code to be compliant
with the tool. There's no special suffix and no identifiable header to
distinguish spix-compliant TeX documents (neither manually nor by
machine) from the rest of the "regular" TeX document, and if there are
ten .tex documents in the folder (say, for different chapters), it's
still not clear which one to process. (I mean: if the tool became
widely adopted, at some point vi, emacs, texshop, texworks, textmate,
... could in principle automatically identify that the file is
spix-compatible and process it with spix. Not yet sure if this could
be reliably done with the current design.) It's still useful in many
cases and can spare the author lots of headaches and typing when
processing complex workflows. It's much easier to write than a
Makefile (but you also cannot do stuff like "only run bibtex if
something has changed in the bib database", or "only fetch that large
image from the internet if the file doesn't already exist locally").
So I'm not in any way arguing against inclusion, just pointing out
some potential drawbacks.

ConTeXt comes with this kind of functionality built-in since a very
long time (but the number of runs, processing of bibliography,
metapost etc. is done automatically; and picking the correct engine
like pdftex/xetex/luatex was also there).

It certainly sounds like a core functionality that is extremely
helpful and useful in the LaTeX world as well.
And the more people stick to the same standard, the more useful it becomes.
By having such an important script written in lua, many of the
packaging nightmares could vanish.
And by some coordinated effort with the core LaTeX team, I guess that
one could arrive at a single solution that gets "officially promoted"
as the recommended way to pick the correct engine, run complex
workflows, with improved security etc. Or maybe I'm just too big of an
optimist?

Mojca

From kakuto at w32tex.org  Tue Jul 21 23:00:11 2020
From: kakuto at w32tex.org (Akira Kakuto)
Date: Wed, 22 Jul 2020 06:00:11 +0900
Subject: How to package executables
In-Reply-To: <a1d5f887-15f0-ae86-b5e9-6d2618271602@gresille.org>
References: <20200720002501.GG169658@bulldog.preining.info>
 <202007202148.06KLmDeI027615@freefriends.org>
 <20200721000827.GA108002@burischnitzel.preining.info>
 <11DA41B2-2277-497B-AEEB-9D58C360A101@mac.com>
 <64781617CE1340AAA879E0AA877F9D70@CJ3001517A>
 <20200721082208.GC4613@bulldog.preining.info>
 <a1d5f887-15f0-ae86-b5e9-6d2618271602@gresille.org>
Message-ID: <B6B77BB4380C4824986831AAD38A9516@CJ3001517A>

Dear Louis,

> As suggested, I merged __init__.py and __main__.py files into a
> single spix.py file (work is done in branch texlive [1] for those
> interested). It can even simply be renamed as "spix", which would
> work on GNU/Linux (and MacOS?), but maybe it would not work on
> Windows, as Windows wouldn't care about the shebang, so I don't
> know whether this is a good idea or not.

I confirmed that your spix.py worked ok on Windows with
$TEXMFDIST/scripts/spix/spix.py.

On Windows, shebang is interpreted well by a wrapper
spix.exe in the bin directory.

Best,
Akira


From karl at freefriends.org  Tue Jul 21 23:36:34 2020
From: karl at freefriends.org (Karl Berry)
Date: Tue, 21 Jul 2020 15:36:34 -0600
Subject: How to package executables
In-Reply-To: <CALBOmsY4mZQZAtsEbwbNaFSRqvz4PT_aeter6wZWZoffXLhy0w@mail.gmail.com>
Message-ID: <202007212136.06LLaYv2026534@freefriends.org>

    totally up to the user running spix to be aware that they need to
    manually check the source code downloaded from internet before
    compiling anything?

Right. There are many scripts in TL. We cannot check them. And anyway
many of them need to run "dangerous" things to do their jobs.
Every command is dangerous (rm, cc, ...).

    guarantee that tex/latex (at least for pdftex and xetex) etc. 

Thanks to Luigi, I believe LuaTeX is safer by default than it used to be. -k

From karl at freefriends.org  Tue Jul 21 23:50:42 2020
From: karl at freefriends.org (Karl Berry)
Date: Tue, 21 Jul 2020 15:50:42 -0600
Subject: How to package executables
In-Reply-To: <a1d5f887-15f0-ae86-b5e9-6d2618271602@gresille.org>
Message-ID: <202007212150.06LLog0c027212@freefriends.org>

Hi Louis,

    Would a CTAN package with those files be OK?

Yes. Ideal.

    Or should I add subdirectories

No need for subdirectories for this small package. It is better for
people browsing CTAN (and for importing into TL) to avoid subdirectories
"by default".

    once I uploaded it to CTAN, is there anything else I
    should do, or will you (the texlive team) handle everything?

You don't need to do anything. Given this thread, I'll tell you when
it's done (most likely by me) so you can review and try it out.

    about how to package a python script for easy integration in texlive

That would be nice. Thanks much for offering. Maybe it should even be
its own page, as pkgcontrib.html is getting too long. We'll see.

    https://tug.org/texlive/pkgcontrib.html#exec

FYI, I added a few more words there this morning, most notably (for this
context) a caveat about setup.py. --thanks, karl.

From reinhard.kotucha at web.de  Wed Jul 22 00:06:05 2020
From: reinhard.kotucha at web.de (Reinhard Kotucha)
Date: Wed, 22 Jul 2020 00:06:05 +0200
Subject: How to package executables
In-Reply-To: <CALBOmsY4mZQZAtsEbwbNaFSRqvz4PT_aeter6wZWZoffXLhy0w@mail.gmail.com>
References: <f485c55b-2626-c4ac-125d-a9ba2767c700@gresille.org>
 <CALBOmsY4mZQZAtsEbwbNaFSRqvz4PT_aeter6wZWZoffXLhy0w@mail.gmail.com>
Message-ID: <24343.26317.61431.617010@gargle.gargle.HOWL>

On 2020-07-21 at 22:17:40 +0200, Mojca Miklavec wrote:

 > I certainly find the tool useful (assuming I would still be using
 > latex).

I'm not _that_ sure.  If we are talking about LaTeX, all one has to do
is to put a .latexmkrc file into the directory containing the main
LaTeX source file and run "latexmk <filename>" without any other
arguments.  There is nothing the user has to remember either.

Here is my .latexmkrc file:

  -----------------------------------------
  $pdflatex = 'lualatex --synctex=1 %O %S';
  $pdf_mode = 1;
  $dvi_mode = $postscript_mode = 0;
  -----------------------------------------

The advantage over spix is that latexmk determines dynamically which
programs to run and how many compilations are necessary.  From the
viewpoint of a user this is by far the simplest approach.

The only advantage of spix which comes to my mind is that you can have
different LaTeX projects which depend on different engines in one and
the same directory.

Regards,
  Reinhard

--
------------------------------------------------------------------
Reinhard Kotucha                            Phone: +49-511-3373112
Marschnerstr. 25
D-30167 Hannover                    mailto:reinhard.kotucha at web.de
------------------------------------------------------------------


From spalax at gresille.org  Wed Jul 22 21:04:38 2020
From: spalax at gresille.org (Louis)
Date: Wed, 22 Jul 2020 21:04:38 +0200
Subject: How to package executables
In-Reply-To: <24343.26317.61431.617010@gargle.gargle.HOWL>
References: <f485c55b-2626-c4ac-125d-a9ba2767c700@gresille.org>
 <CALBOmsY4mZQZAtsEbwbNaFSRqvz4PT_aeter6wZWZoffXLhy0w@mail.gmail.com>
 <24343.26317.61431.617010@gargle.gargle.HOWL>
Message-ID: <c8ed10fd-9023-77a6-5caf-42da6de9b7db@gresille.org>

Hello,
I am replying to both Reinhard's message, and its parent message
(Mojca's one).

> The only advantage of spix which comes to my mind is that you can have
> different LaTeX projects which depend on different engines in one and
> the same directory.

Exactly. I am a math teacher, and for each of my courses (up to four
hours a week), I have a repository with everything I hand out or show to
my students (stuff from current year, and old stuff from previous years
I no longer use but never cared to delete). For instance, in this
repository [1], I have 588 .tex files. Most of them are compiled with
one pass of lualatex, but some of them need several passes, and some
others need latex+dvipdf. I considered or tried several tools, but
having the latex compilation information *inside* the tex file itself,
in a human-readable format, is convenient.

[1] https://framagit.org/lpaternault/cours-2-math

I (author of SpiX) actually never call spix manually. I either use it to
make sure everything is compiled on the USB key I will use with my
students (I work on my laptop at home, "git push" files to a server,
"git pull" files from my USB key, and run spix on changed files to
update the PDF files), or I use it as part of a CI workflow, to compile
and publish both the source and pdf of those files [2].

[2] https://lpaternault.frama.io/cours-2-math/

As for security (to answer Mojca's remark/concern), it is stated in the
documentation that running spix on an untrusted tex files is like
running an untrusted shell script. But I think that arara has the same
issue (maybe less obvious), as one can enable the --shell-escape option
in the arara configuration in the tex file.

As a side note, I totally agree with Mojca that it would be nice to have
an "officially promoted [?] way to pick the correct engine, run complex
workflows, with improved security etc.". I hope I could drop spix for
such a solution.

Louis

From rvoland at tds.net  Thu Jul 30 14:14:01 2020
From: rvoland at tds.net (Rick Voland)
Date: Thu, 30 Jul 2020 08:14:01 -0400 (EDT)
Subject: TeXworks very slow to open or close files
In-Reply-To: <1199868510.8166221.1596110252208.JavaMail.zimbra@tds.net>
Message-ID: <1626915766.8210985.1596111241652.JavaMail.zimbra@tds.net>



TeXworks is now very slow to open or close files.  I have TeXworks from TeXlive 2020 for Windows 10 Pro installed on the c: drive in the usual place, and have all the TeXlive updates including today.  I made no changes to file paths in TeXworks.  

TeXworks now takes maybe 15+ minutes to open or close even the simplest *.tex document (with its *.pdf).  Once the files are open, the normal typesetting with pdflatex is very fast (seconds), just like before.  I use a minimal new test.tex file from the article template in TeXworks.  I am using M$-Windows 10 Pro with 16GB RAM, a solid-state drive, and a fast CPU.   While TeXworks is opening or closing a file, the windows taskmanager indicates 2 instances of texworks with one at 25% of my CPU (and it still takes >>10 minutes to open or close!!).  

The problem developed 1-2 weeks ago after a TeXlive update.  I am suspicious about a new directory created on 07-18-20

~\TeXworks

Normally, TeXlive for windows puts all user configurations at:

~\.texlive2020

so TeXworks details should be at:

~\.texlive2020\texmf-config\texworks


Thanks,


Rick

From P.Taylor at Hellenic-Institute.Uk  Thu Jul 30 16:41:09 2020
From: P.Taylor at Hellenic-Institute.Uk (Philip Taylor)
Date: Thu, 30 Jul 2020 15:41:09 +0100
Subject: TeXworks very slow to open or close files
In-Reply-To: <1626915766.8210985.1596111241652.JavaMail.zimbra@tds.net>
References: <1626915766.8210985.1596111241652.JavaMail.zimbra@tds.net>
Message-ID: <440dae34-6608-38bc-5043-9f31941d93c9@Hellenic-Institute.Uk>

An HTML attachment was scrubbed...
URL: <https://tug.org/pipermail/tex-live/attachments/20200730/a8cd9d77/attachment.html>

From rvoland at tds.net  Thu Jul 30 17:23:11 2020
From: rvoland at tds.net (Rick Voland)
Date: Thu, 30 Jul 2020 11:23:11 -0400 (EDT)
Subject: TeXworks very slow to open or close files
In-Reply-To: <440dae34-6608-38bc-5043-9f31941d93c9@Hellenic-Institute.Uk>
References: <1626915766.8210985.1596111241652.JavaMail.zimbra@tds.net>
 <440dae34-6608-38bc-5043-9f31941d93c9@Hellenic-Institute.Uk>
Message-ID: <2004336440.8628862.1596122590998.JavaMail.zimbra@tds.net>


3 folders 
configuration 
scripts 
translations 
1 file 
TwFileVersions.db 

all still have the date stamp 
7/18/20 

I tried putting my dictionary files here and they weren't recognized. 

Rick 



----- Original Message -----

From: "Philip Taylor" <P.Taylor at Hellenic-Institute.Uk> 
To: "Rick Voland" <rvoland at tds.net> 
Cc: texlive at tug.org 
Sent: Thursday, July 30, 2020 9:41:09 AM 
Subject: Re: TeXworks very slow to open or close files 

Rick Voland wrote: 




I am suspicious about a new directory created on 07-18-20

~\TeXworks 



And what are the contents of that directory, Rick, and the content of the contents ? 
Philip Taylor 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://tug.org/pipermail/tex-live/attachments/20200730/468501e2/attachment.html>

From ziegenhagen at gmail.com  Thu Jul 30 17:27:05 2020
From: ziegenhagen at gmail.com (Uwe Ziegenhagen)
Date: Thu, 30 Jul 2020 17:27:05 +0200
Subject: TeXworks very slow to open or close files
In-Reply-To: <2004336440.8628862.1596122590998.JavaMail.zimbra@tds.net>
References: <1626915766.8210985.1596111241652.JavaMail.zimbra@tds.net>
 <440dae34-6608-38bc-5043-9f31941d93c9@Hellenic-Institute.Uk>
 <2004336440.8628862.1596122590998.JavaMail.zimbra@tds.net>
Message-ID: <CAML7JCigNUFLPhp2p0MVYJVaWdwmDgsBYCyEf-2vMe5cMig4MA@mail.gmail.com>

I am experiencing the same problem on windows 10. TeXworks takes ages
(several minutes) to start, requires a lot of computing time (around 16% on
my i7) but does not show the GUI.

There is neither a .texworks nor a _texworks directory but a TeXworks
directory (same content as on Rick's machine). I had already reinstalled
TeXworks, this did not improve the situation.

Uwe

Am Do., 30. Juli 2020 um 17:23 Uhr schrieb Rick Voland <rvoland at tds.net>:

>
> 3 folders
> configuration
> scripts
> translations
> 1 file
> TwFileVersions.db
>
> all still have the date stamp
> 7/18/20
>
> I tried putting my dictionary files here and they weren't recognized.
>
> Rick
>
>
>
> ------------------------------
> *From: *"Philip Taylor" <P.Taylor at Hellenic-Institute.Uk>
> *To: *"Rick Voland" <rvoland at tds.net>
> *Cc: *texlive at tug.org
> *Sent: *Thursday, July 30, 2020 9:41:09 AM
> *Subject: *Re: TeXworks very slow to open or close files
>
> Rick Voland wrote:
>
> I am suspicious about a new directory created on 07-18-20
>
> ~\TeXworks
>
>
> And what are the contents of that directory, Rick, and the content of the
> contents ?
> *Philip Taylor*
>
>

-- 
Dr. Uwe Ziegenhagen
0179-7476050
<http://www.uweziegenhagen.de>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://tug.org/pipermail/tex-live/attachments/20200730/03a41ee1/attachment.html>

From rvoland at tds.net  Thu Jul 30 17:31:43 2020
From: rvoland at tds.net (Rick Voland)
Date: Thu, 30 Jul 2020 11:31:43 -0400 (EDT)
Subject: TeXworks very slow to open or close files
In-Reply-To: <1930665451.8642733.1596123070943.JavaMail.zimbra@tds.net>
Message-ID: <1853056888.8643734.1596123103787.JavaMail.zimbra@tds.net>

I am not using Microsoft "OneDrive", at least not deliberately. My test file is on my desktop. 

The solid-state drive is very new and has 93% storage space free. 

The test file is on the desktop. I keep most of my files on an external USB drive. I can connect that USB drive to another computer with Windows 7 and TeXlive 2020 that lacks those most recent updates and can open those existing tex files just fine on the other computer. 

Rick 



----- Original Message -----

From: "George N. White III" <gnwiii at gmail.com> 
To: "Rick Voland" <rvoland at tds.net> 
Sent: Thursday, July 30, 2020 10:07:31 AM 
Subject: Re: TeXworks very slow to open or close files 

On Thu, 30 Jul 2020 at 09:15, Rick Voland < rvoland at tds.net > wrote: 




TeXworks is now very slow to open or close files. I have TeXworks from TeXlive 2020 for Windows 10 Pro installed on the c: drive in the usual place, and have all the TeXlive updates including today. I made no changes to file paths in TeXworks. 

TeXworks now takes maybe 15+ minutes to open or close even the simplest *.tex document (with its *.pdf). Once the files are open, the normal typesetting with pdflatex is very fast (seconds), just like before. I use a minimal new test.tex file from the article template in TeXworks. I am using M$-Windows 10 Pro with 16GB RAM, a solid-state drive, and a fast CPU. While TeXworks is opening or closing a file, the windows taskmanager indicates 2 instances of texworks with one at 25% of my CPU (and it still takes >>10 minutes to open or close!!). 

The problem developed 1-2 weeks ago after a TeXlive update. I am suspicious about a new directory created on 07-18-20 

~\TeXworks 

Normally, TeXlive for windows puts all user configurations at: 

~\.texlive2020 

so TeXworks details should be at: 

~\.texlive2020\texmf-config\texworks 




Are you using Microsoft "OneDrive"? I have encountered systems where many files in a user's "Documents" folder had been moved to Microsoft's "cloud" and were being retrieved on demand, resulting in the sort of delays you experienced. 

Is the system overheating? At my former work (older building and budget cuts resulting in reduced cleaning) there were many identical laptops that were prone to dust accumulating in the CPU cooling fins. Affected systems would get slower and slower and eventually just stop. Short of disassembly and thorough cleaning, liberal application of "canned air" to cooling vents would produce a cloud of dust (so do it outdoors) and make the system usable for a few weeks to months. 

How full is your SSD (after running the cleanup tool)? I have encountered Windows systems where files in the recycle bin were not included in the Windows "free space" calculation, so a drive that was out of space was shown with ample space available. 

-- 
George N. White III 



From P.Taylor at Hellenic-Institute.Uk  Thu Jul 30 17:35:58 2020
From: P.Taylor at Hellenic-Institute.Uk (Philip Taylor)
Date: Thu, 30 Jul 2020 16:35:58 +0100
Subject: TeXworks very slow to open or close files
In-Reply-To: <1853056888.8643734.1596123103787.JavaMail.zimbra@tds.net>
References: <1853056888.8643734.1596123103787.JavaMail.zimbra@tds.net>
Message-ID: <72c6e2ad-d0ec-f3fb-8c70-7fcbdcb84f86@Hellenic-Institute.Uk>

An HTML attachment was scrubbed...
URL: <https://tug.org/pipermail/tex-live/attachments/20200730/3dc8a3f4/attachment.html>

From rvoland at tds.net  Thu Jul 30 18:36:04 2020
From: rvoland at tds.net (Rick Voland)
Date: Thu, 30 Jul 2020 12:36:04 -0400 (EDT)
Subject: TeXworks very slow to open or close files
In-Reply-To: <72c6e2ad-d0ec-f3fb-8c70-7fcbdcb84f86@Hellenic-Institute.Uk>
References: <1853056888.8643734.1596123103787.JavaMail.zimbra@tds.net>
 <72c6e2ad-d0ec-f3fb-8c70-7fcbdcb84f86@Hellenic-Institute.Uk>
Message-ID: <1087915853.8794370.1596126964681.JavaMail.zimbra@tds.net>


Texworks (the binary executable) has a file date stamp of 6-26-20 on my computer. That sounds right because I don't remember that it was updated recently. 

Texworks is version 0.6.5 ("travis-ci") [r.649699a, 3/25/2020 1:49 PM] 


So, it looks like texworks itself may not be the problem since it was working fine back then. 

By the way, it took Texworks that very long time just to open to the default, not even opening a specific file. 



Rick 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://tug.org/pipermail/tex-live/attachments/20200730/afc3ed10/attachment-0001.html>

From ziegenhagen at gmail.com  Thu Jul 30 20:12:54 2020
From: ziegenhagen at gmail.com (Uwe Ziegenhagen)
Date: Thu, 30 Jul 2020 20:12:54 +0200
Subject: TeXworks very slow to open or close files
In-Reply-To: <2004336440.8628862.1596122590998.JavaMail.zimbra@tds.net>
References: <1626915766.8210985.1596111241652.JavaMail.zimbra@tds.net>
 <440dae34-6608-38bc-5043-9f31941d93c9@Hellenic-Institute.Uk>
 <2004336440.8628862.1596122590998.JavaMail.zimbra@tds.net>
Message-ID: <CAML7JCjqsJAGBkvkJj2kU6+N=qJbwwS0B+h314DhK1PyUmoWxg@mail.gmail.com>

I have created a bug report: https://github.com/TeXworks/texworks/issues/904

Uwe

Am Do., 30. Juli 2020 um 17:23 Uhr schrieb Rick Voland <rvoland at tds.net>:

>
> 3 folders
> configuration
> scripts
> translations
> 1 file
> TwFileVersions.db
>
> all still have the date stamp
> 7/18/20
>
> I tried putting my dictionary files here and they weren't recognized.
>
> Rick
>
>
>
> ------------------------------
> *From: *"Philip Taylor" <P.Taylor at Hellenic-Institute.Uk>
> *To: *"Rick Voland" <rvoland at tds.net>
> *Cc: *texlive at tug.org
> *Sent: *Thursday, July 30, 2020 9:41:09 AM
> *Subject: *Re: TeXworks very slow to open or close files
>
> Rick Voland wrote:
>
> I am suspicious about a new directory created on 07-18-20
>
> ~\TeXworks
>
>
> And what are the contents of that directory, Rick, and the content of the
> contents ?
> *Philip Taylor*
>
>

-- 
Dr. Uwe Ziegenhagen
0179-7476050
<http://www.uweziegenhagen.de>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://tug.org/pipermail/tex-live/attachments/20200730/6d4e89ea/attachment.html>

