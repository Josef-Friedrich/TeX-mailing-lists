From stephane.goujet at wanadoo.fr  Sun Jun  1 13:24:15 2014
From: stephane.goujet at wanadoo.fr (=?ISO-8859-15?Q?St=E9phane_Goujet?=)
Date: Sun, 1 Jun 2014 13:24:15 +0200
Subject: [luatex] Error: "! This can't happen (add_disc_widths)."
In-Reply-To: <20140531183042.GA4974@attila>
References: <538A069A.5000504@free.fr> <20140531170155.GA3619@attila>
 <20140531183042.GA4974@attila>
Message-ID: <alpine.LNX.2.00.1406011319540.20127@zbox.seix>

Hello,

On Sat, 31 May 2014, Paul Isambert wrote:

> I forgot an important point:
> French ?guillemets continus? can be easily implemented with
> \localleftbox (originally from Omega). No need for a hack.

   Oh God... I have been struggling for weeks and months with Tex, with 
Context, with Luatex to get such result and only one command was 
needed but I was not aware of its existence... D'oh !


Goodbye,
   St?phane.

From sobenlee at gmail.com  Mon Jun  2 05:43:08 2014
From: sobenlee at gmail.com (Qing Lee)
Date: Mon, 2 Jun 2014 11:43:08 +0800
Subject: [luatex] LuaTeX crashes with Unicode.sfd
Message-ID: <538BF2CC.8020602@gmail.com>

Hello all,

With the one line test:

     \pdfmapline{test at Unicode@ <ipam.ttf}

A fatal error is raised by LuaTeX:

     This is LuaTeX, Version beta-0.79.1 (TeX Live 2014/W32TeX) (rev 4971)  (format=luatex 2014.5.21)  2 JUN 2014 11:20
      \write18 enabled.
     **test.tex
     (./test.tex{d:/texlive/2014/texmf-dist/fonts/sfd/ttf2pk/Unicode.sfd
     !LuaTeX error (file d:/texlive/2014/texmf-dist/fonts/sfd/ttf2pk/Unicode.sfd): in
     valid token:
     FF00_0x10FFFF
     
      ==> Fatal error occurred, no output PDF file produced!

My OS is Win7 64-bit.

Best wishes,
-- 
Qing Lee


From joseph.wright at morningstar2.co.uk  Mon Jun  2 08:24:31 2014
From: joseph.wright at morningstar2.co.uk (Joseph Wright)
Date: Mon, 2 Jun 2014 07:24:31 +0100
Subject: [luatex] \luaescapestring and # tokens
Message-ID: <538C189F.6080205@morningstar2.co.uk>

Hello all,

The usual approach to emulating \pdfstrcmp in LuaTeX involves escaping
input using \luaescapestring and then doing a Lua-based comparison,
something like:

\catcode`\@=11 %
\ifdefined\directlua
  \directlua{%
    function strcmp (A, B)
      if A == B then
        tex.write ("0")
      elseif A < B then
        tex.write ("-1")
      else
        tex.write ("1")
      end
    end
  }%
  \long\def\pdf at strcmp#1#2{%
    \directlua{%
      strcmp ("\luaescapestring{#1}", "\luaescapestring{#2}")
    }%
  }%
\else
  \ifdefined\pdfstrcmp
    \let\pdf at strcmp\pdfstrcmp
  \else
    \let\pdf at strcmp\strcmp
  \fi
\fi
\message{Value is: \pdf at strcmp{#}{\detokenize{#}}}
\bye

However, as is shown by the demo, this may fail to give the same result
as for the 'real' primitive if # tokens (more generally, catcode 6
tokens). The reason is \luaescapestring doesn't double # tokens.

\message{"\luaescapestring{#}" "\detokenize{#}"}

Is this deliberate, and if so is there a reliable way of emulating
\pdfstrcmp in it's entirety?
--
Joseph Wright


From joseph.wright at morningstar2.co.uk  Mon Jun  2 09:46:26 2014
From: joseph.wright at morningstar2.co.uk (Joseph Wright)
Date: Mon, 2 Jun 2014 08:46:26 +0100
Subject: [luatex] \luaescapestring and # tokens
In-Reply-To: <538C189F.6080205@morningstar2.co.uk>
References: <538C189F.6080205@morningstar2.co.uk>
Message-ID: <538C2BD2.50100@morningstar2.co.uk>

On 02/06/2014 07:24, Joseph Wright wrote:
> Hello all,
> 
> The usual approach to emulating \pdfstrcmp in LuaTeX involves escaping
> input using \luaescapestring and then doing a Lua-based comparison,
> something like:
> 
> \catcode`\@=11 %
> \ifdefined\directlua
>   \directlua{%
>     function strcmp (A, B)
>       if A == B then
>         tex.write ("0")
>       elseif A < B then
>         tex.write ("-1")
>       else
>         tex.write ("1")
>       end
>     end
>   }%
>   \long\def\pdf at strcmp#1#2{%
>     \directlua{%
>       strcmp ("\luaescapestring{#1}", "\luaescapestring{#2}")
>     }%
>   }%
> \else
>   \ifdefined\pdfstrcmp
>     \let\pdf at strcmp\pdfstrcmp
>   \else
>     \let\pdf at strcmp\strcmp
>   \fi
> \fi
> \message{Value is: \pdf at strcmp{#}{\detokenize{#}}}
> \bye
> 
> However, as is shown by the demo, this may fail to give the same result
> as for the 'real' primitive if # tokens (more generally, catcode 6
> tokens). The reason is \luaescapestring doesn't double # tokens.
> 
> \message{"\luaescapestring{#}" "\detokenize{#}"}
> 
> Is this deliberate, and if so is there a reliable way of emulating
> \pdfstrcmp in it's entirety?

Suggestion from Bruno Le Floch to the LaTeX team:

  \long\def\pdf at strcmp#1#2{%
    \directlua{%
      strcmp (
        "\luaescapestring{\detokenize\expandafter{\expanded{#1}}}",
        "\luaescapestring{\detokenize\expandafter{\expanded{#2}}}"
      )
    }%
  }

which does certainly work. Thoughts?
--
Joseph Wright



From taco at elvenkind.com  Mon Jun  2 09:52:58 2014
From: taco at elvenkind.com (Taco Hoekwater)
Date: Mon, 2 Jun 2014 09:52:58 +0200
Subject: [luatex] \luaescapestring and # tokens
In-Reply-To: <538C2BD2.50100@morningstar2.co.uk>
References: <538C189F.6080205@morningstar2.co.uk>
 <538C2BD2.50100@morningstar2.co.uk>
Message-ID: <730A5DBC-13FC-4BA5-9D67-B857B1AA7D96@elvenkind.com>


On 02 Jun 2014, at 09:46, Joseph Wright <joseph.wright at morningstar2.co.uk> wrote:

>> 
>> Is this deliberate, and if so is there a reliable way of emulating
>> \pdfstrcmp in it's entirety?

\luaescapestring does nothing except making sure that the argument
is valid lua string content. So yes, then lack of doubling is deliberate.

To get matching strings, you will need to detokenize both, as done below.

Best wishes,
Taco


> 
> Suggestion from Bruno Le Floch to the LaTeX team:
> 
>  \long\def\pdf at strcmp#1#2{%
>    \directlua{%
>      strcmp (
>        "\luaescapestring{\detokenize\expandafter{\expanded{#1}}}",
>        "\luaescapestring{\detokenize\expandafter{\expanded{#2}}}"
>      )
>    }%
>  }
> 
> which does certainly work. Thoughts?
> --
> Joseph Wright
> 
> 




From joseph.wright at morningstar2.co.uk  Mon Jun  2 10:01:21 2014
From: joseph.wright at morningstar2.co.uk (Joseph Wright)
Date: Mon, 2 Jun 2014 09:01:21 +0100
Subject: [luatex] \luaescapestring and # tokens
In-Reply-To: <730A5DBC-13FC-4BA5-9D67-B857B1AA7D96@elvenkind.com>
References: <538C189F.6080205@morningstar2.co.uk>
 <538C2BD2.50100@morningstar2.co.uk>
 <730A5DBC-13FC-4BA5-9D67-B857B1AA7D96@elvenkind.com>
Message-ID: <538C2F51.1040600@morningstar2.co.uk>

On 02/06/2014 08:52, Taco Hoekwater wrote:
> 
> On 02 Jun 2014, at 09:46, Joseph Wright <joseph.wright at morningstar2.co.uk> wrote:
> 
>>>
>>> Is this deliberate, and if so is there a reliable way of emulating
>>> \pdfstrcmp in it's entirety?
> 
> \luaescapestring does nothing except making sure that the argument
> is valid lua string content. So yes, then lack of doubling is deliberate.
> 
> To get matching strings, you will need to detokenize both, as done below.
> 
> Best wishes,
> Taco

OK, was what I suspected: will use the more elaborate approach involving
\expanded.

Thanks for fast response.
-- 
Joseph Wright


From kakuto at fuk.kindai.ac.jp  Wed Jun  4 14:51:05 2014
From: kakuto at fuk.kindai.ac.jp (Akira Kakuto)
Date: Wed, 4 Jun 2014 21:51:05 +0900
Subject: [luatex]  LuaTeX crashes with Unicode.sfd
Message-ID: <4C6199BDAAC144B68C7E22D80F9546F3@CJ3001517A>

Dear Qing,

> With the one line test:
>
>   \pdfmapline{test at Unicode@ <ipam.ttf}
>
> A fatal error is raised by LuaTeX:
>
>   This is LuaTeX, Version beta-0.79.1 (TeX Live 2014/W32TeX) (rev 4971)  (format=luatex 2014.5.21)  2 JUN 2014 11:20
>    \write18 enabled.
>   **test.tex
>   (./test.tex{d:/texlive/2014/texmf-dist/fonts/sfd/ttf2pk/Unicode.sfd
>   !LuaTeX error (file d:/texlive/2014/texmf-dist/fonts/sfd/ttf2pk/Unicode.sfd): in
>   valid token:
>   FF00_0x10FFFF
>    
>    ==> Fatal error occurred, no output PDF file produced!

If I use subfont.c in pdftex instead of subfont.w
with the following 4 changes, it worked fine.
Therefore there must be bugs in subfont.w for luatex.

Thank you for your report.
Akira


(1)
#define sfd_open()      open_input(&sfd_file, kpse_sfd_format, FOPEN_RBIN_MODE)
--->
#define sfd_open(a)     (sfd_file = fopen((char *)(a), FOPEN_RBIN_MODE))

(2)
set_cur_file_name(sfd_name);
if (!sfd_open()) {
--->
if (!sfd_open(sfd_name)) {

(3)
pdftex_warn
--->
luatex_warn

(4)
pdftex_fail
--->
luatex_fail



From kakuto at fuk.kindai.ac.jp  Wed Jun  4 15:34:32 2014
From: kakuto at fuk.kindai.ac.jp (Akira Kakuto)
Date: Wed, 4 Jun 2014 22:34:32 +0900
Subject: [luatex] LuaTeX crashes with Unicode.sfd
Message-ID: <7B2954A16C964372BD4C62863ED0EF1A@CJ3001517A>

> (1)
> #define sfd_open()      open_input(&sfd_file, kpse_sfd_format, FOPEN_RBIN_MODE)
> --->
> #define sfd_open(a)     (sfd_file = fopen((char *)(a), FOPEN_RBIN_MODE))

Correction:
The change should be
#define sfd_open(a)     (sfd_file = fopen((char *)kpse_find_file((char *)(a),kpse_sfd_format, 0), FOPEN_RBIN_MODE))

Best,
Akira



From kakuto at fuk.kindai.ac.jp  Wed Jun  4 16:16:01 2014
From: kakuto at fuk.kindai.ac.jp (Akira Kakuto)
Date: Wed, 4 Jun 2014 23:16:01 +0900
Subject: [luatex] LuaTeX crashes with Unicode.sfd
Message-ID: <81412074739E40538E4063E207A367D2@CJ3001517A>

Dear Qing,

The bug is fixed by an attached patch: subfont.w.diff.
Here subfont.w.orig is the source in the TeX Live
repository. We are with the bug in TeX Live 2014, since
subfonts may rarely be used in LuaTeX.
The bug will be fixed in the next year.

Thanks,
Akira
-------------- next part --------------
A non-text attachment was scrubbed...
Name: subfont.w.diff
Type: application/octet-stream
Size: 346 bytes
Desc: not available
URL: <http://tug.org/pipermail/luatex/attachments/20140604/a5d220e2/attachment.obj>

From Herbert.Voss at FU-Berlin.DE  Wed Jun  4 20:00:02 2014
From: Herbert.Voss at FU-Berlin.DE (Herbert Voss)
Date: Wed, 4 Jun 2014 20:00:02 +0200
Subject: [luatex] loading the font database -- luaotfload
Message-ID: <538F5EA2.2010608@FU-Berlin.DE>

One year ago it was

local myfonts = dofile(fonts.names.path.localdir.."/otfl-names.lua")

then it changes to

local myfonts = dofile(fonts.names.path.path)

But this is now also invalid. What is the correct way to load the
font database located in
$TEXMFVAR/luatex-cache/generic/names/luaotfload-names.lua ??

Herbert


From philipp.gesang at alumni.uni-heidelberg.de  Wed Jun  4 20:41:56 2014
From: philipp.gesang at alumni.uni-heidelberg.de (Philipp Gesang)
Date: Wed, 4 Jun 2014 20:41:56 +0200
Subject: [luatex] loading the font database -- luaotfload
In-Reply-To: <538F5EA2.2010608@FU-Berlin.DE>
References: <538F5EA2.2010608@FU-Berlin.DE>
Message-ID: <20140604184156.GA19935@acheron>

Hi Herbert!

???<date: 2014-06-04, Wednesday>???<from: Herbert Voss>???

> One year ago it was
> 
> local myfonts = dofile(fonts.names.path.localdir.."/otfl-names.lua")
> 
> then it changes to
> 
> local myfonts = dofile(fonts.names.path.path)
> 
> But this is now also invalid. What is the correct way to load the
> font database located in
> $TEXMFVAR/luatex-cache/generic/names/luaotfload-names.lua ??

1. The function load() in the namespace fonts.names is how it?s
   done internally, e.g.:
   https://bitbucket.org/phg/lua-la-tex-tests/src/tip/pln-access-db.tex

   Note that this reads the names database from at the default
   location, you can?t pass it a path or something like that.

2. The file luaotfload-names.lua is compressed by default [0] and
   will only be read if luaotfload-names.luc (the bytecode dump)
   is missing.

Best,
Philipp

[0] Unless of course you pass ``--no-compress`` to
    luaotfload-tool when updating.


-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 490 bytes
Desc: not available
URL: <http://tug.org/pipermail/luatex/attachments/20140604/c8e3b1a2/attachment.bin>

From Herbert.Voss at FU-Berlin.DE  Wed Jun  4 21:03:34 2014
From: Herbert.Voss at FU-Berlin.DE (Herbert Voss)
Date: Wed, 4 Jun 2014 21:03:34 +0200
Subject: [luatex] loading the font database -- luaotfload
In-Reply-To: <20140604184156.GA19935@acheron>
References: <538F5EA2.2010608@FU-Berlin.DE> <20140604184156.GA19935@acheron>
Message-ID: <538F6D86.7060202@FU-Berlin.DE>

Am 04.06.2014 20:41, schrieb Philipp Gesang:

> 1. The function load() in the namespace fonts.names is how it?s
>    done internally, e.g.:
>    https://bitbucket.org/phg/lua-la-tex-tests/src/tip/pln-access-db.tex

Thanks Philipp,

that helped. However, is it possible to have an user interface
to the fontmap, something like

local myfonttable = loadfontmap()

then a normal user, like me, can use always the same command:

for i, v in ipairs (myfonttable.mappings) do ...

That would be very helpful and I suppose not a big deal for luaotfload.


Herbert




From phg at phi-gamma.net  Wed Jun  4 21:25:44 2014
From: phg at phi-gamma.net (Philipp Gesang)
Date: Wed, 4 Jun 2014 21:25:44 +0200
Subject: [luatex] loading the font database -- luaotfload
In-Reply-To: <538F6D86.7060202@FU-Berlin.DE>
References: <538F5EA2.2010608@FU-Berlin.DE> <20140604184156.GA19935@acheron>
 <538F6D86.7060202@FU-Berlin.DE>
Message-ID: <20140604192544.GB19935@acheron>

???<date: 2014-06-04, Wednesday>???<from: Herbert Voss>???

> Am 04.06.2014 20:41, schrieb Philipp Gesang:
> 
> > 1. The function load() in the namespace fonts.names is how it?s
> >    done internally, e.g.:
> >    https://bitbucket.org/phg/lua-la-tex-tests/src/tip/pln-access-db.tex
> 
> Thanks Philipp,
> 
> that helped. However, is it possible to have an user interface
> to the fontmap, something like
> 
> local myfonttable = loadfontmap()
> 
> then a normal user, like me, can use always the same command:
> 
> for i, v in ipairs (myfonttable.mappings) do ...
> 
> That would be very helpful and I suppose not a big deal for luaotfload.

Indeed. I thought about adding something like that -- Luatex
attracts users that like to investigate the internals, so stuff
like that should be made easy. I guess there could be two
different functions:

    luaotfload.aux.read_font_index ()
    luaotfload.aux.font_index ()

The former forces ?luaotfload-names.luc? to be read and returns
the contents of the table. Manipulating that table will not
affect the behavior of Luaotfload. The other function would
return a reference into the table that is actually used by
Luaotfload.

I can?t guarantee the layout of the tables or data fields though,
e.g. the contents of the entries of the .mappings array changed
quite a bit from version 2.3 to 2.4.

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 490 bytes
Desc: not available
URL: <http://tug.org/pipermail/luatex/attachments/20140604/a9042d88/attachment.bin>

From Herbert.Voss at FU-Berlin.DE  Thu Jun  5 11:04:08 2014
From: Herbert.Voss at FU-Berlin.DE (Herbert Voss)
Date: Thu, 5 Jun 2014 11:04:08 +0200
Subject: [luatex] loading the font database -- luaotfload
In-Reply-To: <20140604192544.GB19935@acheron>
References: <538F5EA2.2010608@FU-Berlin.DE> <20140604184156.GA19935@acheron>
 <538F6D86.7060202@FU-Berlin.DE> <20140604192544.GB19935@acheron>
Message-ID: <53903288.6000003@FU-Berlin.DE>

Am 04.06.2014 21:25, schrieb Philipp Gesang:

>> That would be very helpful and I suppose not a big deal for luaotfload.
> 
> Indeed. I thought about adding something like that -- Luatex
> attracts users that like to investigate the internals, so stuff
> like that should be made easy. I guess there could be two
> different functions:
> 
>     luaotfload.aux.read_font_index ()
>     luaotfload.aux.font_index ()
> 

Philipp,
that would be nice :-)

Herbert




> The former forces ?luaotfload-names.luc? to be read and returns
> the contents of the table. Manipulating that table will not
> affect the behavior of Luaotfload. The other function would
> return a reference into the table that is actually used by
> Luaotfload.
> 
> I can?t guarantee the layout of the tables or data fields though,
> e.g. the contents of the entries of the .mappings array changed
> quite a bit from version 2.3 to 2.4.
> 




From sobenlee at gmail.com  Thu Jun  5 15:13:56 2014
From: sobenlee at gmail.com (Qing Lee)
Date: Thu, 5 Jun 2014 21:13:56 +0800
Subject: [luatex] LuaTeX crashes with Unicode.sfd
In-Reply-To: <81412074739E40538E4063E207A367D2@CJ3001517A>
References: <81412074739E40538E4063E207A367D2@CJ3001517A>
Message-ID: <53906D14.9080404@gmail.com>

On 2014-06-04 at 22:16:01 +0800 GMT, Akira Kakuto wrote:
> Dear Qing,
>
> The bug is fixed by an attached patch: subfont.w.diff.
> Here subfont.w.orig is the source in the TeX Live
> repository. We are with the bug in TeX Live 2014, since
> subfonts may rarely be used in LuaTeX.
> The bug will be fixed in the next year.
>
> Thanks,
> Akira

Thanks!

I downloaded latest LuaTeX binaries from CTAN/systems/win32/w32tex/
and put them into TeX Live 2014.

There is still a similar error after running the same test:

     This is LuaTeX, Version beta-0.79.1 (TeX Live 2014/W32TeX) (rev 4971)  (format=luatex 2014.6.5)  5 JUN 2014 21:09
      \write18 enabled.
     **test.tex
     (./test.tex{d:/texlive/2014/texmf-dist/fonts/sfd/ttf2pk/Unicode.sfd
     !LuaTeX error (file d:/texlive/2014/texmf-dist/fonts/sfd/ttf2pk/Unicode.sfd): in
     valid token:
     eof
     
      ==> Fatal error occurred, no output PDF file produced!

Best,
Qing Lee


From kakuto at fuk.kindai.ac.jp  Thu Jun  5 15:42:14 2014
From: kakuto at fuk.kindai.ac.jp (Akira Kakuto)
Date: Thu, 5 Jun 2014 22:42:14 +0900
Subject: [luatex] LuaTeX crashes with Unicode.sfd
In-Reply-To: <53906D14.9080404@gmail.com>
References: <81412074739E40538E4063E207A367D2@CJ3001517A>
 <53906D14.9080404@gmail.com>
Message-ID: <9EFBF431466E49FEA4E269AEEA302E26@CJ3001517A>

Dear Qing,

> There is still a similar error after running the same test:
>
>     This is LuaTeX, Version beta-0.79.1 (TeX Live 2014/W32TeX) (rev 4971)  (format=luatex 2014.6.5)  5 JUN 2014 21:09
>      \write18 enabled.
>     **test.tex
>     (./test.tex{d:/texlive/2014/texmf-dist/fonts/sfd/ttf2pk/Unicode.sfd
>     !LuaTeX error (file d:/texlive/2014/texmf-dist/fonts/sfd/ttf2pk/Unicode.sfd): in
>     valid token:
>     eof
>     
>      ==> Fatal error occurred, no output PDF file produced!

The latest one fixes the above. Please wait a little.
If your are in a hurry,

cd /d d:/texlive/2014/texmf-dist/fonts/sfd/ttf2pk
todos Unicode.sfd

(I don't recommend that. Please wait and get the latest luatex.dll).

If you try to use subfonts actually, assert error may appear.
At present, simply ignore the error. The obtained pdf seems
to be correct.

Thanks,
Akira



From philipp.gesang at alumni.uni-heidelberg.de  Thu Jun  5 19:08:06 2014
From: philipp.gesang at alumni.uni-heidelberg.de (Philipp Gesang)
Date: Thu, 5 Jun 2014 19:08:06 +0200
Subject: [luatex] loading the font database -- luaotfload
In-Reply-To: <53903288.6000003@FU-Berlin.DE>
References: <538F5EA2.2010608@FU-Berlin.DE> <20140604184156.GA19935@acheron>
 <538F6D86.7060202@FU-Berlin.DE> <20140604192544.GB19935@acheron>
 <53903288.6000003@FU-Berlin.DE>
Message-ID: <20140605170806.GA22909@acheron>

???<date: 2014-06-05, Thursday>???<from: Herbert Voss>???

> Am 04.06.2014 21:25, schrieb Philipp Gesang:
> 
> >> That would be very helpful and I suppose not a big deal for luaotfload.
> > 
> > Indeed. I thought about adding something like that -- Luatex
> > attracts users that like to investigate the internals, so stuff
> > like that should be made easy. I guess there could be two
> > different functions:
> > 
> >     luaotfload.aux.read_font_index ()
> >     luaotfload.aux.font_index ()
> > 
> 
> Philipp,
> that would be nice :-)

In my dev repo since yesterday, will be part of v2.5.

Best,
Philipp

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 490 bytes
Desc: not available
URL: <http://tug.org/pipermail/luatex/attachments/20140605/689aa3e1/attachment.bin>

From joseph.wright at morningstar2.co.uk  Fri Jun  6 17:33:21 2014
From: joseph.wright at morningstar2.co.uk (Joseph Wright)
Date: Fri, 6 Jun 2014 16:33:21 +0100
Subject: [luatex] 'Out by one' error (?) in \csname messages
Message-ID: <5391DF41.2090909@morningstar2.co.uk>

Hello all,

With the TL2014 pretest version of LuaTeX,

    \csname\csname\endcsname

leads to the error

    ! Missing \endcsname inserted.
    <to be read again>
    \^^@csnam\^^@endcsnam
    l.1 \csname\csname\endcsname

which looks like some form of 'out by one' issue.
-- 
Joseph Wright


From luigi.scarso at gmail.com  Fri Jun  6 17:46:39 2014
From: luigi.scarso at gmail.com (luigi scarso)
Date: Fri, 6 Jun 2014 17:46:39 +0200
Subject: [luatex] 'Out by one' error (?) in \csname messages
In-Reply-To: <5391DF41.2090909@morningstar2.co.uk>
References: <5391DF41.2090909@morningstar2.co.uk>
Message-ID: <CAG5iGsCP36Ok_wx=tSJBQDo_uDkD9ZPNQoqjDhzhntJo=JwjtA@mail.gmail.com>

On Fri, Jun 6, 2014 at 5:33 PM, Joseph Wright <
joseph.wright at morningstar2.co.uk> wrote:

> Hello all,
>
> With the TL2014 pretest version of LuaTeX,
>
>     \csname\csname\endcsname
>
> leads to the error
>
>     ! Missing \endcsname inserted.
>     <to be read again>
>     \^^@csnam\^^@endcsnam
>     l.1 \csname\csname\endcsname
>
> which looks like some form of 'out by one' issue.
> --
> Joseph Wright
>
> I have the same with pdftex

$ mtxrun texexec  test.tex
This is pdfTeX, Version 3.1415926-2.5-1.40.14 (TeX Live 2013)
 \write18 enabled.
entering extended mode
(./test.tex

ConTeXt  ver: 2013.06.07 17:34 MKII  fmt: 2014.4.23  int: english/english

system          : test.top loaded
(./test.top)
bodyfont        : 12pt rm is loaded
language        : patterns nl->texnansi:texnansi->1->2:2 nl->ec:ec->2->2:2
us->
ec:ec->3->2:3 de->texnansi:texnansi->4->3:3 de->ec:ec->5->3:3
da->ec:ec->6->2:2
 sv->ec:ec->7->2:2 af->ec:ec->8->2:2 gb->ec:ec->9->2:2
fr->texnansi:texnansi->1
0->2:2 fr->ec:ec->11->2:2 es->ec:ec->12->2:2 ca->ec:ec->13->2:2
it->texnansi:te
xnansi->14->2:2 it->ec:ec->15->2:2 la->ec:ec->16->2:2
pt->texnansi:texnansi->17
->2:2 pt->ec:ec->18->2:2 ro->ec:ec->19->2:2 pl->pl0:pl0->20->2:2
pl->ec:ec->21-
>2:2 pl->qx:qx->22->2:2 cs->il2:il2->23->2:2 cs->ec:ec->24->2:2
sk->il2:il2->25
->2:2 sk->ec:ec->26->2:2 hr->ec:ec->27->2:2 sl->ec:ec->28->2:2
tr->ec:ec->29->2
:2 tk->ec:ec->30->1:2 lt->l7x:l7x->31->2:2 agr->agr:agr->33->2:2
fi->ec:ec->34-
>2:2 hu->ec:ec->35->2:2 ru->t2a:t2a->37->2:2 uk->t2a:t2a->38->3:3  loaded
specials        : dvips loaded
systems         : system commands are enabled
language        : language en is active
publications    : file test.bbl not found, waiting for bibtex
systems         : begin file test at line 1
! Missing \endcsname inserted.
<to be read again>
                   \csname\endcsname
l.2 \csname\csname\endcsname

?


-- 
luigi
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://tug.org/pipermail/luatex/attachments/20140606/f61ea1d5/attachment.html>

From heiko.oberdiek at googlemail.com  Fri Jun  6 17:53:58 2014
From: heiko.oberdiek at googlemail.com (Heiko Oberdiek)
Date: Fri, 6 Jun 2014 17:53:58 +0200
Subject: [luatex] 'Out by one' error (?) in \csname messages
In-Reply-To: <CAG5iGsCP36Ok_wx=tSJBQDo_uDkD9ZPNQoqjDhzhntJo=JwjtA@mail.gmail.com>
References: <5391DF41.2090909@morningstar2.co.uk>
 <CAG5iGsCP36Ok_wx=tSJBQDo_uDkD9ZPNQoqjDhzhntJo=JwjtA@mail.gmail.com>
Message-ID: <5391E416.9010809@googlemail.com>

On 06.06.2014 17:46, luigi scarso wrote:
> 
> On Fri, Jun 6, 2014 at 5:33 PM, Joseph Wright
> <joseph.wright at morningstar2.co.uk
> <mailto:joseph.wright at morningstar2.co.uk>> wrote:
> 
>         \csname\csname\endcsname
> 
>     leads to the error
> 
>         ! Missing \endcsname inserted.
>         <to be read again>
>         \^^@csnam\^^@endcsnam
>         l.1 \csname\csname\endcsname
> 
>     which looks like some form of 'out by one' issue.

> I have the same with pdftex

> ! Missing \endcsname inserted.
> <to be read again> 
>                    \csname\endcsname
> l.2 \csname\csname\endcsname

I think, Joseph is referring to the messed up error message in LuaTeX.

The error itself is correct. Usually `\csname\endcsname` is an undefined
command becoming `\relax` which breaks the first `\csname`.

Yours sincerely
  Heiko Oberdiek


From luigi.scarso at gmail.com  Fri Jun  6 17:57:58 2014
From: luigi.scarso at gmail.com (luigi scarso)
Date: Fri, 6 Jun 2014 17:57:58 +0200
Subject: [luatex] 'Out by one' error (?) in \csname messages
In-Reply-To: <5391E416.9010809@googlemail.com>
References: <5391DF41.2090909@morningstar2.co.uk>
 <CAG5iGsCP36Ok_wx=tSJBQDo_uDkD9ZPNQoqjDhzhntJo=JwjtA@mail.gmail.com>
 <5391E416.9010809@googlemail.com>
Message-ID: <CAG5iGsCOQ4y2gZ3zwvO9bGDfgAQb9gJvJH9KH9CcaOTRP9v5dw@mail.gmail.com>

On Fri, Jun 6, 2014 at 5:53 PM, Heiko Oberdiek <
heiko.oberdiek at googlemail.com> wrote:

> On 06.06.2014 17:46, luigi scarso wrote:
> >
> > On Fri, Jun 6, 2014 at 5:33 PM, Joseph Wright
> > <joseph.wright at morningstar2.co.uk
> > <mailto:joseph.wright at morningstar2.co.uk>> wrote:
> >
> >         \csname\csname\endcsname
> >
> >     leads to the error
> >
> >         ! Missing \endcsname inserted.
> >         <to be read again>
> >         \^^@csnam\^^@endcsnam
> >         l.1 \csname\csname\endcsname
> >
> >     which looks like some form of 'out by one' issue.
>
> > I have the same with pdftex
>
> > ! Missing \endcsname inserted.
> > <to be read again>
> >                    \csname\endcsname
> > l.2 \csname\csname\endcsname
>
> I think, Joseph is referring to the messed up error message in LuaTeX.
>
ah ok, "off by one" in the string printed.


-- 
luigi
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://tug.org/pipermail/luatex/attachments/20140606/962771a0/attachment.html>

From joseph.wright at morningstar2.co.uk  Fri Jun  6 20:48:55 2014
From: joseph.wright at morningstar2.co.uk (Joseph Wright)
Date: Fri, 6 Jun 2014 19:48:55 +0100
Subject: [luatex] 'Out by one' error (?) in \csname messages
In-Reply-To: <5391E416.9010809@googlemail.com>
References: <5391DF41.2090909@morningstar2.co.uk>
 <CAG5iGsCP36Ok_wx=tSJBQDo_uDkD9ZPNQoqjDhzhntJo=JwjtA@mail.gmail.com>
 <5391E416.9010809@googlemail.com>
Message-ID: <53920D17.5040401@morningstar2.co.uk>

On 06/06/2014 16:53, Heiko Oberdiek wrote:
> I think, Joseph is referring to the messed up error message in LuaTeX.

Excatly: another issue that shows up doing log file comparisons.
-- 
Joseph Wright


From dluecking at sbcglobal.net  Sun Jun  8 21:11:35 2014
From: dluecking at sbcglobal.net (Dan Luecking)
Date: Sun, 8 Jun 2014 14:11:35 -0500
Subject: [luatex] 'Out by one' error (?) in \csname messages
Message-ID: <554591.49116.bm@smtp111.sbc.mail.gq1.yahoo.com>

On Fri Jun 6, 2014, at 17:57:58 CEST luigi scarso (luigi.scarso at 
gmail.com) wrote:


> >
> > I think, Joseph is referring to the messed up error message in LuaTeX.
> >
>ah ok, "off by one" in the string printed.

Actually, the string printed has the correct number of characters,
but it has an extra null (^^@) after the "\" and is missing the
ending "e". Could it rather be a bug in printing \escapechar?


Dan


Daniel H. Luecking
Department of Mathematical Sciences
Fayetteville, Arkansas
http://www-cs-faculty.stanford.edu/~knuth/iaq.html 



From kakuto at fuk.kindai.ac.jp  Mon Jun  9 01:36:26 2014
From: kakuto at fuk.kindai.ac.jp (Akira Kakuto)
Date: Mon, 9 Jun 2014 08:36:26 +0900
Subject: [luatex]  'Out by one' error (?) in \csname messages
Message-ID: <7BE27EE519774A93A45662F632E15B04@CJ3001517A>

> With the TL2014 pretest version of LuaTeX,
> 
>     \csname\csname\endcsname
> 
> leads to the error
> 
>     ! Missing \endcsname inserted.
>     <to be read again>
>     \^^@csnam\^^@endcsnam
>     l.1 \csname\csname\endcsname
> 
> which looks like some form of 'out by one' issue.

I think that is related to the following, since
it is already fixed in the LuaTeX trunk.

%
% s.tex
%
\def\use#1{#1}
\use\fXabc
\bye

(./s.tex
! Undefined control sequence.
<argument> \fXabc 
       
\use #1X-#1
           
l.2 \use\fXabc

Best,
Akira



From luigi.scarso at gmail.com  Mon Jun  9 10:57:03 2014
From: luigi.scarso at gmail.com (luigi scarso)
Date: Mon, 9 Jun 2014 10:57:03 +0200
Subject: [luatex] 'Out by one' error (?) in \csname messages
In-Reply-To: <7BE27EE519774A93A45662F632E15B04@CJ3001517A>
References: <7BE27EE519774A93A45662F632E15B04@CJ3001517A>
Message-ID: <CAG5iGsAWfZF0zr=aeO9_RG=7_QmjL0dELeg=Lf8XwA0JS0oXpw@mail.gmail.com>

On Mon, Jun 9, 2014 at 1:36 AM, Akira Kakuto <kakuto at fuk.kindai.ac.jp>
wrote:

> With the TL2014 pretest version of LuaTeX,
>>
>>     \csname\csname\endcsname
>>
>> leads to the error
>>
>>     ! Missing \endcsname inserted.
>>     <to be read again>
>>     \^^@csnam\^^@endcsnam
>>     l.1 \csname\csname\endcsname
>>
>> which looks like some form of 'out by one' issue.
>>
>
> I think that is related to the following, since
> it is already fixed in the LuaTeX trunk.
>
> %
> % s.tex
> %
> \def\use#1{#1}
> \use\fXabc
> \bye
>
> (./s.tex
> ! Undefined control sequence.
> <argument> \fXabc       \use #1X-#1
>           l.2 \use\fXabc
>
> Best,
> Akira
>
>
>
The problem is here in tex/printing.w

luatex calls tprint_esc("csname")

   573 void tprint_esc(const char *s)
    574 {                               /* prints escape character, then
|s| */
    575     int c;                      /* the escape character code */
    576     /* Set variable |c| to the current escape character */
    577     c = int_par(escape_char_code);
    578     if (c >= 0 && c < STRING_OFFSET)
    579         print(c);
    580     tprint(s);
    581 }


At line 579 the '\' is stored into  the global trick_buf[0],
and tally is incremented, so that trick_buf[tally] is the location of the
next char to be saved
Then luatex calls tprint("csname")


    323 @ |char *| versions of the same procedures. |tprint| is
    324 different because it uses buffering, which works well because
    325 most of the output actually comes through |tprint|.
    326
    327 @c
    328 void tprint(const char *sss)
    329 {
    330     char *buffer = NULL;
    331     int i = 0; /* buffer index */
    332     int newlinechar = int_par(new_line_char_code);
    333     int dolog = 0;
    334     int doterm = 0;
    335     switch (selector) {
    336     case new_string:
    337         append_string((const unsigned char *)sss, (unsigned)
strlen(sss));
    338         return;
    339         break;
    340     case pseudo:
    341         while (*sss) {
    342            if (tally++ < trick_count) {
    343                trick_buf[tally % error_line] = (packed_ASCII_code)
*sss++;
    344            } else {
    345                return;
    346            }
    347         }

At line 342 the if statement increments tally again, so the first time  the
'c' of "csname"
is saved in (assuming error_line=79 as usual)
trick_buf[tally % error_line] = trick_buf[2] .
The  content of trick_buf[1] depends on the format.
The while loop at line 341 stops when it sees '\0' of csname , so this is
the reason why we don't see the final character.

-- 
luigi
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://tug.org/pipermail/luatex/attachments/20140609/f6bab0b3/attachment.html>

From h_kitagawa2001 at yahoo.co.jp  Tue Jun 17 14:07:43 2014
From: h_kitagawa2001 at yahoo.co.jp (Hironori KITAGAWA)
Date: Tue, 17 Jun 2014 21:07:43 +0900
Subject: [luatex] Setting internal parameters of TeX in a callback
Message-ID: <20140617210743.8f6896dc7eafb338fc2c1551@yahoo.co.jp>

Hello,

When I processed the following source (test1.tex) by LuaTeX rev 5021,
I got "assertion failed" error:

----
%#!luatex
\directlua{
  callback.register('vpack_filter',
    function(h)
      tex.set('vbadness', 2000)
      return h
    end
  )
}

\vbox{}
\bye
----
$ luatex test1
This is LuaTeX, Version beta-0.79.1 (TeX Live 2014/dev) (rev 5021) 
 restricted \write18 enabled.
(./test1.texluatex: ../../../source/texk/web2c/luatexdir/tex/texnodes.w:1022: free_error: Assertion `p> my_prealloc' failed.
----

Is it dangerous to assign internal parameters of TeX 
in a callback, as in test1.tex above?


Regards
Hironori KITAGAWA <h_kitagawa2001 at yahoo.co.jp>


From taco at elvenkind.com  Wed Jun 18 10:26:47 2014
From: taco at elvenkind.com (Taco Hoekwater)
Date: Wed, 18 Jun 2014 10:26:47 +0200
Subject: [luatex] Setting internal parameters of TeX in a callback
In-Reply-To: <20140617210743.8f6896dc7eafb338fc2c1551@yahoo.co.jp>
References: <20140617210743.8f6896dc7eafb338fc2c1551@yahoo.co.jp>
Message-ID: <01FDEA6E-164D-4BC3-825F-157574C338B0@elvenkind.com>


On 17 Jun 2014, at 14:07, Hironori KITAGAWA <h_kitagawa2001 at yahoo.co.jp> wrote:

> Hello,
> 
> When I processed the following source (test1.tex) by LuaTeX rev 5021,
> I got "assertion failed" error:
> 
> ----
> %#!luatex
> \directlua{
>  callback.register('vpack_filter',
>    function(h)
>      tex.set('vbadness', 2000)
>      return h
>    end
>  )
> }
> 
> \vbox{}
> \bye
> ----
> $ luatex test1
> This is LuaTeX, Version beta-0.79.1 (TeX Live 2014/dev) (rev 5021) 
> restricted \write18 enabled.
> (./test1.texluatex: ../../../source/texk/web2c/luatexdir/tex/texnodes.w:1022: free_error: Assertion `p> my_prealloc' failed.
> ----
> 
> Is it dangerous to assign internal parameters of TeX 
> in a callback, as in test1.tex above?

The crash was a bug, and that was easily fixed (already committed to the luatex repo). However,
what assignments there do, is probably not what you want: it is functionally equivalent to:


   \vbox{}
   \vbadness2000

(to put it another way: any tex.set() inside the filter are acted upon *after* the closing brace of the box.

Best wishes,
Taco




From h_kitagawa2001 at yahoo.co.jp  Wed Jun 18 13:00:09 2014
From: h_kitagawa2001 at yahoo.co.jp (Hironori KITAGAWA)
Date: Wed, 18 Jun 2014 20:00:09 +0900
Subject: [luatex] Setting internal parameters of TeX in a callback
In-Reply-To: <01FDEA6E-164D-4BC3-825F-157574C338B0@elvenkind.com>
References: <20140617210743.8f6896dc7eafb338fc2c1551@yahoo.co.jp>
 <01FDEA6E-164D-4BC3-825F-157574C338B0@elvenkind.com>
Message-ID: <20140618200009.b6006a46c10952a406ee7138@yahoo.co.jp>

Hello,

On Wed, 18 Jun 2014 10:26:47 +0200, Taco Hoekwater <taco at elvenkind.com> wrote:
> The crash was a bug, and that was easily fixed (already committed to the luatex repo). 

Thanks. I confirmed that rev 5024 works fine.

Regards
Hironori KITAGAWA <h_kitagawa2001 at yahoo.co.jp>


From ustun at ustunozgur.com  Thu Jun 19 15:28:23 2014
From: ustun at ustunozgur.com (Ustun Ozgur)
Date: Thu, 19 Jun 2014 16:28:23 +0300
Subject: [luatex] Typo on website
Message-ID: <4B367683-96A8-4686-99BC-515C9B16F1CD@ustunozgur.com>

At http://www.luatex.org/, it reads "Each engine has it's benefits and drawbacks?. I believe it should be ?its?.

Best,

Ustun




From christophe.devalland at gmail.com  Sun Jun 22 14:38:19 2014
From: christophe.devalland at gmail.com (Christophe Devalland)
Date: Sun, 22 Jun 2014 14:38:19 +0200
Subject: [luatex] Add a callback "process_input_buffer" for an argument,
	not a line.
Message-ID: <CAA5vxo-37SSyFAb-WMTOkQ4Tq8tC=i4Q2GhZ4js+u8EUQk0-gg@mail.gmail.com>

Hello,
I tried to pass an argument to my_lua_function but I want it as verbatim
argument because it may contain any characters TeX doesn't like.

It's ok with this callback for reading just one line after \Cmath:

\def\Cmath{\directlua{luatexbase.add_to_callback("process_input_buffer",parseCmath,"parseCmath")}}

\directlua{

function parseCmath(line)

luatexbase.remove_from_callback("process_input_buffer","parseCmath")
return my_lua_function(line)

end

}

\begin{document}

\Cmath

1/2

\end{document}


But I'd want to do the same with this syntax \Cmath{1/2}

Is it possible with a callback or anything else ?

Thank's for ideas.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://tug.org/pipermail/luatex/attachments/20140622/9044b410/attachment.html>

From daniel.flipo at free.fr  Mon Jun 23 18:58:38 2014
From: daniel.flipo at free.fr (Daniel Flipo)
Date: Mon, 23 Jun 2014 18:58:38 +0200
Subject: [luatex] TL2014, realsuperscript, Linux Libertine O
Message-ID: <53A85CBE.7010903@free.fr>

Hi all,

I stumble upon a new ``feature'' with TL2014 when compiling the 
following file in LuaLaTeX:
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\documentclass{article}
\usepackage{fontspec}
\usepackage{realscripts}
\setmainfont{Linux Libertine O}
%\setmainfont{Iwona}
\begin{document}
\showoutput
X\realsuperscript{123abc}X\par
X\realsubscript{123abc}X\par
\end{document}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

The \realsuperscript command prints no superscript;
-- it did with TL2013 (checked today, I kept the latest TL2013 ;-),
-- it does also with font "Iwona" instead of "Linux Libertine O",
-- it does also with font "Linux Libertine O" when compiled with XeLaTeX.
-- Strange is that \realsubscript works fine anytime?

Best wishes,
--
Daniel Flipo



From luatex at nililand.de  Mon Jun 23 19:34:50 2014
From: luatex at nililand.de (Ulrike Fischer)
Date: Mon, 23 Jun 2014 19:34:50 +0200
Subject: [luatex] TL2014, realsuperscript, Linux Libertine O
References: <53A85CBE.7010903@free.fr>
Message-ID: <dqg0yqbka471$.dlg@nililand.de>

Am Mon, 23 Jun 2014 18:58:38 +0200 schrieb Daniel Flipo:

> Hi all,
> 
> I stumble upon a new ``feature'' with TL2014 when compiling the 
> following file in LuaLaTeX:
> %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
> \documentclass{article}
> \usepackage{fontspec}
> \usepackage{realscripts}
> \setmainfont{Linux Libertine O}
> %\setmainfont{Iwona}
> \begin{document}
> \showoutput
> X\realsuperscript{123abc}X\par
> X\realsubscript{123abc}X\par
> \end{document}
> %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
> 
> The \realsuperscript command prints no superscript;
> -- it did with TL2013 (checked today, I kept the latest TL2013 ;-),
> -- it does also with font "Iwona" instead of "Linux Libertine O",
> -- it does also with font "Linux Libertine O" when compiled with XeLaTeX.
> -- Strange is that \realsubscript works fine anytime?

That's this problem:

https://github.com/wspr/fontspec/issues/176

I would avoid \addfontfeature. The combination of such features
doesn't always work.  Some months ago I had the problem that a
feature added this way appeared only randomly every second
compilation. 

Use 

\setmainfont[VerticalPosition=Superior]{Linux Libertine O}

instead. Or define a new fontfamily. 

-- 
Ulrike Fischer 
http://www.troubleshooting-tex.de/




From daniel.flipo at free.fr  Mon Jun 23 21:42:13 2014
From: daniel.flipo at free.fr (Daniel Flipo)
Date: Mon, 23 Jun 2014 21:42:13 +0200
Subject: [luatex] TL2014, realsuperscript, Linux Libertine O
In-Reply-To: <dqg0yqbka471$.dlg@nililand.de>
References: <53A85CBE.7010903@free.fr> <dqg0yqbka471$.dlg@nililand.de>
Message-ID: <53A88315.7000904@free.fr>

Ulrike Fischer a ?crit le 23/06/2014 19:34 :
> Am Mon, 23 Jun 2014 18:58:38 +0200 schrieb Daniel Flipo:
>
>> Hi all,
>>
>> I stumble upon a new ``feature'' with TL2014 when compiling the
>> following file in LuaLaTeX:
>> %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
>> \documentclass{article}
>> \usepackage{fontspec}
>> \usepackage{realscripts}
>> \setmainfont{Linux Libertine O}
>> %\setmainfont{Iwona}
>> \begin{document}
>> \showoutput
>> X\realsuperscript{123abc}X\par
>> X\realsubscript{123abc}X\par
>> \end{document}
>> %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
>>
>> The \realsuperscript command prints no superscript;
>> -- it did with TL2013 (checked today, I kept the latest TL2013 ;-),
>> -- it does also with font "Iwona" instead of "Linux Libertine O",
>> -- it does also with font "Linux Libertine O" when compiled with XeLaTeX.
>> -- Strange is that \realsubscript works fine anytime?
>
> That's this problem:
>
> https://github.com/wspr/fontspec/issues/176

Thanks for this link!

> I would avoid \addfontfeature. The combination of such features
> doesn't always work.  Some months ago I had the problem that a
> feature added this way appeared only randomly every second
> compilation.
>
> Use
>
> \setmainfont[VerticalPosition=Superior]{Linux Libertine O}
>
> instead. Or define a new fontfamily.

Humm... sorry, I'll rather stick to TL2013 until this mess is fixed. 
Imho the realscripts package should either work as intended in LuaLaTeX 
or be replaced by something more reliable.

Best wishes,
-- 
Daniel Flipo



From luatex at nililand.de  Tue Jun 24 10:42:08 2014
From: luatex at nililand.de (Ulrike Fischer)
Date: Tue, 24 Jun 2014 10:42:08 +0200
Subject: [luatex] TL2014, realsuperscript, Linux Libertine O
References: <53A85CBE.7010903@free.fr> <dqg0yqbka471$.dlg@nililand.de>
 <53A88315.7000904@free.fr>
Message-ID: <j9h6qgwkl9gj$.dlg@nililand.de>

Am Mon, 23 Jun 2014 21:42:13 +0200 schrieb Daniel Flipo:


>> That's this problem:
>> https://github.com/wspr/fontspec/issues/176
 
 
> Humm... sorry, I'll rather stick to TL2013 until this mess is fixed. 
> Imho the realscripts package should either work as intended in LuaLaTeX 
> or be replaced by something more reliable.

I just tested with fontspec 2.4a (on CTAN, not yet in texlive) and
the VerticalPosition-key is working again, and so also the
realscript package.

Until it find its way in texlive you could add this to your
preamble:

\ExplSyntaxOn
\DeclareDocumentCommand \realsuperscript {m} {%
  \fontspec_if_fontspec_font:TF
  { \fontspec_if_opentype:TF
    { \fontspec_if_feature:nTF {+sups}
      {{\addfontfeature{RawFeature=+sups}#1} } %
      {\fakesuperscript{#1} }
    }
    { \fontspec_if_aat_feature:nnTF {10} {1}
      { {\addfontfeature{VerticalPosition=Superior}#1} }
      { \fakesuperscript{#1} }
    }
  }
  { \fakesuperscript{#1} }
}
\ExplSyntaxOff

-- 
Ulrike Fischer 
http://www.troubleshooting-tex.de/



From daniel.flipo at free.fr  Tue Jun 24 11:14:49 2014
From: daniel.flipo at free.fr (Daniel Flipo)
Date: Tue, 24 Jun 2014 11:14:49 +0200
Subject: [luatex] TL2014, realsuperscript, Linux Libertine O
In-Reply-To: <j9h6qgwkl9gj$.dlg@nililand.de>
References: <53A85CBE.7010903@free.fr> <dqg0yqbka471$.dlg@nililand.de>
 <53A88315.7000904@free.fr> <j9h6qgwkl9gj$.dlg@nililand.de>
Message-ID: <53A94189.1090000@free.fr>

Ulrike Fischer a ?crit le 24/06/2014 10:42 :

> I just tested with fontspec 2.4a (on CTAN, not yet in texlive) and
> the VerticalPosition-key is working again, and so also the
> realscript package.
>
> Until it find its way in texlive you could add this to your
> preamble:
>
> \ExplSyntaxOn
> \DeclareDocumentCommand \realsuperscript {m} {%
>    \fontspec_if_fontspec_font:TF
>    { \fontspec_if_opentype:TF
>      { \fontspec_if_feature:nTF {+sups}
>        {{\addfontfeature{RawFeature=+sups}#1} } %
>        {\fakesuperscript{#1} }
>      }
>      { \fontspec_if_aat_feature:nnTF {10} {1}
>        { {\addfontfeature{VerticalPosition=Superior}#1} }
>        { \fakesuperscript{#1} }
>      }
>    }
>    { \fakesuperscript{#1} }
> }
> \ExplSyntaxOff
>

Thanks Ulrike for this very good news and for the patch!

Best wishes,
-- 
Daniel Flipo



From skostysh at lyx.org  Sun Jun 29 02:44:13 2014
From: skostysh at lyx.org (Scott Kostyshak)
Date: Sat, 28 Jun 2014 20:44:13 -0400
Subject: [luatex] lualatex runs in an infinite loop with JASATeX +
	system fonts
In-Reply-To: <CAO7dr0gxpWL9VNXJEoQ-NYg89odt8PMd825AG=N8hoqsTyj4OA@mail.gmail.com>
References: <CAO7dr0hu7pquCgAw+Lc6dkyi-Sf+Y2S_z0AdYDEp3SFSBE+Rwg@mail.gmail.com>
 <CAO7dr0gSd0cYHQUeF6Wc-0ft8RMWZbDN54HxtCnvsJd=wFZ-7Q@mail.gmail.com>
 <1578296.hRNmlpCN6h@amd64>
 <CAO7dr0gxpWL9VNXJEoQ-NYg89odt8PMd825AG=N8hoqsTyj4OA@mail.gmail.com>
Message-ID: <CAO7dr0hoWMgKZbMKm9HLHb89RQBvN20rELTv60ggzTKwuhkVUw@mail.gmail.com>

I just reproduced this on a fresh install of Ubuntu with TeX Live
2014. I haven't had a reply on the github issue so I thought I'd check
in here again. I'm not trying to find a way to compile (the document
is not mine), I'm just worried there's an underlying bug and am trying
to find the right place to report to.

Best,

Scott

On Mon, Jan 13, 2014 at 8:55 AM, Scott Kostyshak <skostysh at lyx.org> wrote:
> I posted an issue on fontspec, but haven't heard back yet:
> https://github.com/wspr/fontspec/issues/164
>
> I'm still looking for confirmation that it was the correct place to report to.
>
> Scott
>
> On Mon, Jan 13, 2014 at 8:48 AM, Kornel Benko <Kornel.Benko at berlin.de> wrote:
>> Is really nobody there to help in this issue?
>>
>>
>>
>> Kornel
>>
>>
>>
>> Am Mittwoch, 25. Dezember 2013 um 18:09:24, schrieb Scott Kostyshak
>> <skostysh at lyx.org>
>>
>>> On Wed, Dec 25, 2013 at 5:50 PM, Scott Kostyshak <skostysh at lyx.org> wrote:
>>
>>> > Dear all,
>>
>>> >
>>
>>> > My guess is that the following behavior is not caused by a problem in
>>
>>> > LuaTeX (it would be nice to have confirmation for this though), but
>>
>>> > this seemed the most appropriate place to ask for advice.
>>
>>>
>>
>>> Now I'm guessing (based on the observation that it happens in both
>>
>>> xelatex and lualatex and only with fontspec loaded) that this is
>>
>>> either a fontspec issue or a bug in the class file.
>>
>>>
>>
>>> Scott


From listas at tex-tipografia.com  Mon Jun 30 19:00:33 2014
From: listas at tex-tipografia.com (Javier Bezos)
Date: Mon, 30 Jun 2014 19:00:33 +0200
Subject: [luatex] Expanded fonts
Message-ID: <53B197B1.8030406@tex-tipografia.com>

Hi all,

I need to expand slightly an OTF, but I haven't managed to do it.
What I've done until now is:

local factor = 1.3 -- large, just to see it

local i = font.id("testfont")
local f = font.getfont(i)

for n = 0x21, 0x7d do -- restricted range, as test
   f.characters[n].width = f.characters[n].width * factor
end

f.extend = 1000 * factor

font.setfont(i, f)

So far so good, but of course kerning is, as you could expect, wrong,
and here I'm stuck. I have also to create somehow a new font (virtual
I presume). How to do both is my question.

Javier



