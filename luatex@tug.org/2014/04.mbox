From persian-tex at tug.org  Fri Apr  4 15:10:41 2014
From: persian-tex at tug.org (Vafa Khalighi)
Date: Sat, 5 Apr 2014 00:10:41 +1100
Subject: [luatex] Lollipop (A new TeX format): help needed
Message-ID: <CAMi7-OXZ+-ycembaXBGAJmPTk8Bp00_m9EU74xdUvV_8sqfGAA@mail.gmail.com>

*Please forward this email to anyone who has an interest in TeX or
typesetting.*



Lollipop is an advanced new TeX format like Plain TeX, ConTeXt, LaTeX, and
other TeX formats that is built on top of the TeX engine. Lollipop was
written by Victor Eijkhout in 1992--1993 and then was unmaintained until
this year. I took the maintenance of Lollipop over this year and currently
I am the only team member of Lollipop project. Lollipop was licensed under
"No Commercial usage" and I just changed the license to GPL v3. Please see
http://ctan.org/pkg/lollipop




Lollipop is TeX made easy. Lollipop is a macro package that functions as a
toolbox for writing TeX macros. Its main aim is to make macro writing so
easy that implementing a fully new layout in TeX would become a matter of
less than an hour for an average document, and that it would be a task that
could be accomplished by someone with only a very basic training in TeX
programming.

Lollipop is an attempt to make structured text formatting available for
environments where previously only WYSIWYG packages could be used because
adapting the layout is so much more easy with them than with traditional
TeX macro packages.

One of the goals of Lollipop is perfect mathematical typesetting; for
example I am interested in developing a mechanism that Lollipop would be
able to break your equations smartly into multilines; something that you do
with align environment manually in LaTeX. The development of mathematical
typesetting of Lollipop is on an early stage and I would like to get some
feedback from mathematicians or other people that typeset mathematics with
TeX to improve the design level of Lollipop for mathematical typesetting.

If you have any wish for mathematical typesetting with TeX; something that
you think it would be good if it existed; something that could be improved
please make an official feature request for the Lollipop project. The
repository of Lollipop project can be fount at
https://github.com/vafa/lollipop.

If you want to suggest any feature/wish, etc for mathematical typesetting,
please post that at the issues section of Lollipop project page at
https://github.com/vafa/lollipop/issues

I also need volunteers to test the development versions of Lollipop and
report bugs; if you are happy to help, then please let me know.

Could you please post this to anyone with might be interested.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://tug.org/pipermail/luatex/attachments/20140405/63408df3/attachment.html>

From and.delmonaco at gmail.com  Thu Apr 10 22:46:39 2014
From: and.delmonaco at gmail.com (andrea del monaco)
Date: Thu, 10 Apr 2014 22:46:39 +0200
Subject: [luatex] setting metadata for pdf
Message-ID: <CAM_58DnhuP-BfmMWWWzZssdhPxyFmpFjFgoo=xvhL7AxToy2ZA@mail.gmail.com>

Hi everyone!
I'm writing about the metadata of pdf.
The point is that I would like to set them for the file generated by
lualatex.
So, the question: how to do this?

I know that it can be done via \pdfinfo from pdftex, but I would like to
know if it is possible to achieve the same result via lua(la)tex.
I am aware of the existence of the library pdf, but I didn't really get how
to use it.

Moreover, I would like to know if it is even possible to set other fields,
for instance those ones that  the combo hyperxmp+hyperref lets you set.

Finally: does there exist a way to set a password to protect the pdf using
luatex?

Thanks!

All the best,
andrea
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://tug.org/pipermail/luatex/attachments/20140410/da204c41/attachment.html>

From reinhard.kotucha at web.de  Mon Apr 14 20:50:52 2014
From: reinhard.kotucha at web.de (Reinhard Kotucha)
Date: Mon, 14 Apr 2014 20:50:52 +0200
Subject: [luatex] setting metadata for pdf
In-Reply-To: <CAM_58DnhuP-BfmMWWWzZssdhPxyFmpFjFgoo=xvhL7AxToy2ZA@mail.gmail.com>
References: <CAM_58DnhuP-BfmMWWWzZssdhPxyFmpFjFgoo=xvhL7AxToy2ZA@mail.gmail.com>
Message-ID: <21324.11788.691608.461719@zaphod.ms25.net>

On 2014-04-10 at 22:46:39 +0200, andrea del monaco wrote:

 > Hi everyone!
 > I'm writing about the metadata of pdf.
 > The point is that I would like to set them for the file generated by
 > lualatex.
 > So, the question: how to do this?
 > 
 > I know that it can be done via \pdfinfo from pdftex, but I would like
 > to know if it is possible to achieve the same result via lua(la)tex.
 > I am aware of the existence of the library pdf, but I didn't really
 > get how to use it.

pdf.info="/Title (Some Document) /Author (Ben Lee User)"

 > Moreover, I would like to know if it is even possible to set other
 > fields, for instance those ones that the combo hyperxmp+hyperref
 > lets you set.

If you intend to create PDF/A or PDF/X then you could join the mailing
list

  http://lists.river-valley.com/cgi-bin/mailman/listinfo/tex

There is very low traffic.
  
 
You can try the following example as a starting point.
 
testXMP.lua:
------------------------------------------------------------------
xmpobj = pdf.obj{
  type='stream',
       immediate=true,
       attr='/Type/Metadata/Subtype/XML',
       compresslevel=0,
       string='*** XMP matadata supposed to be inserted here ***'
  }
pdf.refobj(xmpobj)
meta=string.format('/Metadata %d 0 R', xmpobj)
pdf.catalog=meta
------------------------------------------------------------------

testXMP.tex:
------------------------------------------------------------------
\pdfminorversion=4
\pdfobjcompresslevel=0
\pdfcompresslevel=0

\documentclass{article}
\nofiles\pagestyle{empty}

\directlua{dofile("testXMP.lua")}

\begin{document}
\leavevmode
\end{document}
------------------------------------------------------------------

 > Finally: does there exist a way to set a password to protect the
 > pdf using luatex?

No, password protection requires encryption.  Adding encryption to
pdfTeX or LuaTeX is nearly impossible.  An attempt was made several
years ago with pdfTeX but it turned out that it makes the code
unmaintainable.  You can use a post-processor like pdftk or qpdf.

qpdf supports AES encryption.  I don't know which algorithms are
supported by pdftk.  Keep in mind that MD5 is utterly insecure.

Regards,
  Reinhard

-- 
----------------------------------------------------------------------------
Reinhard Kotucha                                      Phone: +49-511-3373112
Marschnerstr. 25
D-30167 Hannover                              mailto:reinhard.kotucha at web.de
----------------------------------------------------------------------------
Microsoft isn't the answer. Microsoft is the question, and the answer is NO.
----------------------------------------------------------------------------


From mico.loretan at mac.com  Mon Apr 21 13:35:16 2014
From: mico.loretan at mac.com (Mico Loretan)
Date: Mon, 21 Apr 2014 13:35:16 +0200
Subject: [luatex] Still having problems with loading an external lua library
 after upgrading to luatex 0.79.1
Message-ID: <AC5A3A54-291F-4CFB-A3C1-CA82C3A1BE0B@mac.com>

Dear all,

In late February -- see http://tug.org/pipermail/luatex/2014-February/004768.html -- I posted a message to this group about not being able to run a program which tries to load an external Lua library named "bn" (short for "big numbers", I suppose; see http://www.tecgraf.puc-rio.br/~lhf/ftp/lua for the source code). Two months ago, I was using MacTeX2013 (luatex version 0.76), MacOSX 10.7.5, and Lua 5.2.3. 

Consider the following MWE (which is actually even simpler than the one I posted earlier):

    % !TEX TS-program = lualatex
    \documentclass{article}
    \directlua{ require "bn" }
    \begin{document}
    Hello World.
    \end{document}

The error messages I was getting centered around "_luaL_checklstring not being found" in "bn.so". Most responders reported not being able to replicate the errors I was encountering. One person (Patrick G.) suggested that the problem could be related to the one reported in http://tracker.luatex.org/view.php?id=555, i.e., that it might be caused by a (missing) compilation flag. According to Hans Hagen's note dated 2013-12-20, this bug was "closed in 0.78".

Incidentally, to create the lua library file "bn.so", I tweaked the package's Makefile to set "MAKESO= $(CC) -bundle -undefined dynamic_lookup" rather than the default "MAKESO= $(CC) -shared". This is per the instructions provided at http://www.tecgraf.puc-rio.br/~lhf/ftp/lua/install.html for compiling the library under MacOSX. I was able to compile it without problems.

In the meantime, I've upgraded my system to TeXLive2014 (pretest, luatex version 0.79.1), MacOSX 10.9.2, and Lua 5.3. Unfortunately, the problem I was encountering earlier is still there. Specifically, running the MWE above, I now get:

     This is LuaTeX, Version beta-0.79.1 (TeX Live 2014/dev) (rev 4971)  (format=lualatex 2014.4.20)  21 APR 2014 13:13
    ...
    ! LuaTeX error error loading module 'bn' from file './bn.so':
    	dlopen(./bn.so, 6): Symbol not found: _luaL_checklstring
      Referenced from: ./bn.so
      Expected in: flat namespace
     in ./bn.so
    stack traceback:
    	[C]: in ?
    	[C]: in ?
    	[C]: in function 'require'
    	[\directlua]:1: in main chunk.
    l.3     \directlua{ require "bn" }
                                    
    ?

Given that I'm now running LuaTeX 0.91.1, the problem I continue to encounter would appear to be distinct from the one mentioned above. 

Is there a flag I need to set during the compilation of the "bn" library so as to assure that the symbol "_luaL_checklstring" is created/defined? Can anyone replicate this problem? Please advise.

Best, Mico

    


From stephane.goujet at wanadoo.fr  Wed Apr 23 15:31:17 2014
From: stephane.goujet at wanadoo.fr (=?ISO-8859-15?Q?St=E9phane_Goujet?=)
Date: Wed, 23 Apr 2014 15:31:17 +0200
Subject: [luatex] Problem with node.has_attribute
Message-ID: <alpine.LNX.2.00.1404231515120.19528@zbox.seix>

Hello,

   In my opinion, node.has_attribute behaves wrongly when the attribute 
number passed as parameter is nil. Since the attribute number is 
incorrect, it should return nil; but it returns a valid result.

   This is the current code in lnodelib.c :
====================
static int lua_nodelib_has_attribute(lua_State * L)
{
     halfword *n;
     int i, val;
     n = check_isnode(L, 1);
     if (n != NULL) {
         i = (int) lua_tointeger(L, 2);
         val = (int) luaL_optinteger(L, 3, UNUSED_ATTRIBUTE);
         if ((val = has_attribute(*n, i, val)) > UNUSED_ATTRIBUTE) {
             lua_pushnumber(L, val);
             return 1;
         }
     }
     lua_pushnil(L);
     return 1;
}
=====================

   lua_tointeger() may return anything if the parameter is not an integer. 
So a check should be added before calling lua_tointeger(). I am not sure 
if the exact integer correctness should be tested, but I think it should 
be at least tested against nil.


Goodbye,
   St?phane Goujet.

From mico.loretan at mac.com  Sat Apr 26 13:53:04 2014
From: mico.loretan at mac.com (Mico Loretan)
Date: Sat, 26 Apr 2014 13:53:04 +0200
Subject: [luatex] Problems with ligatures and kerning under LuaTeX 0.79.1
 when using certain fonts
Message-ID: <C247BC0F-4023-4DD8-B8C2-FDA8E8BBD53B@mac.com>

Greetings all!

I have a MacBookPro that runs MacOSX 10.9.2. I have both MacTeX2013 and TeXLive2014/dev installed on this system. Consider the following MWE:

    % !TEX TS-program = lualatex
    \documentclass{article}
    \listfiles
    \usepackage{fontspec}
    \setmainfont[Ligatures={Common,Rare}]{Hoefler Text}
    \begin{document}
    ff fi fl ffi ffl fj ct st

    To VAW
    \end{document}

When compiling this program under TeXLive2014/dev, which employs LuaTeX 0.79.1, none of the ligatures are being created, and there's no extra kerning between the "T" and the "o" in "To", or between the letters in the triple "VAW". In contrast, there are no kerning and ligaturing problems if I (a) compile it under MacTeX2013, which uses LuaTeX 0.76.0; (b) use XeLaTeX under TeXLive2014/dev; or (c) use other fonts (such as "Latin Modern Roman") with the TeXLive2014dev/LuaTeX 0.79.1 combo. Incidentally, the list of files that are loaded when running either MacTeX2013/LuaTeX0.76 or TeXLive2014/LuaTeX0.79.1 is identical; the difference in behavior thus does not seem to be due to differences in, say, versions of the luaotfload package. I've also tried deleting the cache before recompiling with TeXLive2014, but still no luck.

What needs to be done to (re)enable kerning and ligaturing if I want to use the font "Hoefler Text"?

I seem to recall a recent announcement -- either on this list or somewhere else, I honestly can't remember where -- that AAT font support was going to be dropped from LuaTeX. At the time I didn't understand what that might entail in practice. Given that the ligaturing and kerning works fine under XeLaTeX 2014 (which is known to make use of OS-level font support), I'm now concerned that the problems I'm encountering are related to the new lack of AAT font technology support.

Sincerely, Mico



From taco at elvenkind.com  Sat Apr 26 15:30:54 2014
From: taco at elvenkind.com (Taco Hoekwater)
Date: Sat, 26 Apr 2014 15:30:54 +0200
Subject: [luatex] Problems with ligatures and kerning under LuaTeX
 0.79.1 when using certain fonts
In-Reply-To: <C247BC0F-4023-4DD8-B8C2-FDA8E8BBD53B@mac.com>
References: <C247BC0F-4023-4DD8-B8C2-FDA8E8BBD53B@mac.com>
Message-ID: <535BB50E.6020507@elvenkind.com>

On 04/26/2014 01:53 PM, Mico Loretan wrote:
>
> I seem to recall a recent announcement -- either on this list or
> somewhere else, I honestly can't remember where -- that AAT font
> support was going to be dropped from LuaTeX.

Yes, AAT support was dropped in luatex 0.78.0. There was a short
thread early december last year:

   http://tug.org/pipermail/luatex/2013-December/004657.html

which explains why.

Best wishes,
Taco





