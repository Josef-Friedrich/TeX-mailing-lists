From patrick at gundla.ch  Sun Sep 13 19:21:57 2009
From: patrick at gundla.ch (Patrick Gundlach)
Date: Sun, 13 Sep 2009 19:21:57 +0200
Subject: [luatex] lua equivalent of vbox...ht
Message-ID: <m1r5ua4v62.fsf@levana.de>

Hi,

what would be the lua equivalent of

\setbox0\vbox{hello world}
\the\ht0

? That is, what would I write inside \directlua{ ... } to get the same
effect?

Pseudo code appreciated.

Patrick

From luigi.scarso at gmail.com  Sun Sep 13 20:20:59 2009
From: luigi.scarso at gmail.com (luigi scarso)
Date: Sun, 13 Sep 2009 20:20:59 +0200
Subject: [luatex] lua equivalent of vbox...ht
In-Reply-To: <m1r5ua4v62.fsf@levana.de>
References: <m1r5ua4v62.fsf@levana.de>
Message-ID: <fe8d59da0909131120r457e0032y79ee30bbf4d23f72@mail.gmail.com>

On Sun, Sep 13, 2009 at 7:21 PM, Patrick Gundlach <patrick at gundla.ch> wrote:
> Hi,
>
> what would be the lua equivalent of
>
> \setbox0\vbox{hello world}
> \the\ht0
>
> ? That is, what would I write inside \directlua{ ... } to get the same
> effect?
>
> Pseudo code appreciated.
>
> Patrick
>

download last source
luatex-beta-0.43.0/manual/luatexref-t.pdf
and see  4.1.5 Box registers


-- 

luigi

From patrick at gundla.ch  Sun Sep 13 21:21:03 2009
From: patrick at gundla.ch (Patrick Gundlach)
Date: Sun, 13 Sep 2009 21:21:03 +0200
Subject: [luatex] lua equivalent of vbox...ht
In-Reply-To: <fe8d59da0909131120r457e0032y79ee30bbf4d23f72@mail.gmail.com>
References: <m1r5ua4v62.fsf@levana.de>
	<fe8d59da0909131120r457e0032y79ee30bbf4d23f72@mail.gmail.com>
Message-ID: <7BED5A7A-EB22-4700-A50B-469771BB23ED@gundla.ch>

Hello all,

>> what would be the lua equivalent of
>>
>> \setbox0\vbox{hello world}
>> \the\ht0
>>
>> ? That is, what would I write inside \directlua{ ... } to get the  
>> same
>> effect?
>>
>> Pseudo code appreciated.
>>
>> Patrick
>>
>
> download last source
> luatex-beta-0.43.0/manual/luatexref-t.pdf
> and see  4.1.5 Box registers

OK, let's start with a simple hbox. This very naive approach does not  
work:

\directlua{
% create to glyph nodes
a=node.new(37)
a.char=144
a.font=1

b=node.new(37)
b.char=145
b.font=1

h,n=node.insert_after(nil,a,b)

% turn it into an hbox:
p=node.hpack(h)

tex.setbox(0,p)

texio.write_nl(tex.wd[0])
% result: 0
}


What should I do? Any idea? Probably this would be obvious if I knew  
TeX internals. But I don't.

Patrick


From luigi.scarso at gmail.com  Mon Sep 14 00:06:20 2009
From: luigi.scarso at gmail.com (luigi scarso)
Date: Mon, 14 Sep 2009 00:06:20 +0200
Subject: [luatex] lua equivalent of vbox...ht
In-Reply-To: <7BED5A7A-EB22-4700-A50B-469771BB23ED@gundla.ch>
References: <m1r5ua4v62.fsf@levana.de>
	<fe8d59da0909131120r457e0032y79ee30bbf4d23f72@mail.gmail.com>
	<7BED5A7A-EB22-4700-A50B-469771BB23ED@gundla.ch>
Message-ID: <fe8d59da0909131506o3c3088d1v9123f2de408ce8a8@mail.gmail.com>

On Sun, Sep 13, 2009 at 9:21 PM, Patrick Gundlach <patrick at gundla.ch> wrote:
> Hello all,
>
>>> what would be the lua equivalent of
>>>
>>> \setbox0\vbox{hello world}
>>> \the\ht0
>>>
>>> ? That is, what would I write inside \directlua{ ... } to get the same
>>> effect?
>>>
>>> Pseudo code appreciated.
>>>
>>> Patrick
>>>
>>
>> download last source
>> luatex-beta-0.43.0/manual/luatexref-t.pdf
>> and see ?4.1.5 Box registers
>
> OK, let's start with a simple hbox. This very naive approach does not work:
>
> \directlua{
> % create to glyph nodes
> a=node.new(37)
> a.char=144
> a.font=1
>
> b=node.new(37)
> b.char=145
> b.font=1
>
> h,n=node.insert_after(nil,a,b)
>
> % turn it into an hbox:
> p=node.hpack(h)
>
> tex.setbox(0,p)
>
> texio.write_nl(tex.wd[0])
> % result: 0
> }
>
>
> What should I do? Any idea? Probably this would be obvious if I knew TeX
> internals. But I don't.
>
> Patrick
>
>



\starttext
\directlua{
% create to glyph nodes
T=node.new(37)
T.char=84
T.font=1

E=node.new(37)
E.char=69
E.font=1

h,n=node.insert_after(nil,T,E)

% turn it into an hbox:
p=node.hpack(h)

tex.setbox(0,p)

texio.write_nl(tex.wd[0])
% result: 523764
}

\box0
\stoptext

There is something wrong: \box0 is 'E' , not 'TE'
maybe this is not ok :
h,n=node.insert_after(nil,T,E)


-- 
luigi

From patrick at gundla.ch  Mon Sep 14 10:18:29 2009
From: patrick at gundla.ch (Patrick Gundlach)
Date: Mon, 14 Sep 2009 10:18:29 +0200
Subject: [luatex] lua equivalent of vbox...ht
In-Reply-To: <m1r5ua4v62.fsf@levana.de>
References: <m1r5ua4v62.fsf@levana.de>
Message-ID: <6A0BCA3B-6869-4FB8-8858-6526AB5736BE@gundla.ch>

Another related question:

> what would be the lua equivalent of
>
> \setbox0\vbox{hello world}
> \the\ht0
>
> ? That is, what would I write inside \directlua{ ... } to get the same
> effect?

Is it even possible to write this in Lua? I need to invoke the line  
breaking algorithm at some time, how do I do this in Lua?

Patrick


From luigi.scarso at gmail.com  Mon Sep 14 10:33:54 2009
From: luigi.scarso at gmail.com (luigi scarso)
Date: Mon, 14 Sep 2009 10:33:54 +0200
Subject: [luatex] lua equivalent of vbox...ht
In-Reply-To: <6A0BCA3B-6869-4FB8-8858-6526AB5736BE@gundla.ch>
References: <m1r5ua4v62.fsf@levana.de>
	<6A0BCA3B-6869-4FB8-8858-6526AB5736BE@gundla.ch>
Message-ID: <fe8d59da0909140133x5cf1eaeew16579dffd4693ac6@mail.gmail.com>

On Mon, Sep 14, 2009 at 10:18 AM, Patrick Gundlach <patrick at gundla.ch> wrote:
> Another related question:
Does the example before work for you ?

>
>> what would be the lua equivalent of
>>
>> \setbox0\vbox{hello world}
>> \the\ht0
>>
>> ? That is, what would I write inside \directlua{ ... } to get the same
>> effect?
>
> Is it even possible to write this in Lua? I need to invoke the line breaking
> algorithm at some time, how do I do this in Lua?

Write "what" ?
Yes, it's possible to write lua code for this
\setbox0\vbox{hello world}
\the\ht0

but it's longer than the two lines before -- AFAIK  you must build
each node by hands
and pack into a vbox (I don't remember how to pack nodes in vlist )
and then print.

I don't know how to invoke line break algo.
In my opinion
\setbox100=\vbox{\hsize=5cm \input tufte }
is much clearer then basic lua code
You  need some lua layer -- maybe there is something in context base folder.


-- 
luigi

From patrick at gundla.ch  Mon Sep 14 10:56:39 2009
From: patrick at gundla.ch (Patrick Gundlach)
Date: Mon, 14 Sep 2009 10:56:39 +0200
Subject: [luatex] lua equivalent of vbox...ht
In-Reply-To: <fe8d59da0909140133x5cf1eaeew16579dffd4693ac6@mail.gmail.com>
References: <m1r5ua4v62.fsf@levana.de>
	<6A0BCA3B-6869-4FB8-8858-6526AB5736BE@gundla.ch>
	<fe8d59da0909140133x5cf1eaeew16579dffd4693ac6@mail.gmail.com>
Message-ID: <1C8BA0C6-32D8-4A0A-A52E-AADE9193DE93@gundla.ch>

>>
>> Is it even possible to write this in Lua? I need to invoke the line  
>> breaking
>> algorithm at some time, how do I do this in Lua?
>
> Write "what" ?

\setbox0\vbox{long text that breaks into lines}

and immediately afterwards get the dimensions of this box 0


> Yes, it's possible to write lua code for this
> \setbox0\vbox{hello world}
> \the\ht0
>
> but it's longer than the two lines before -- AFAIK  you must build
> each node by hands
> and pack into a vbox (I don't remember how to pack nodes in vlist )
> and then print.
>
> I don't know how to invoke line break algo.
> In my opinion
> \setbox100=\vbox{\hsize=5cm \input tufte }
> is much clearer then basic lua code
> You  need some lua layer -- maybe there is something in context base  
> folder.

I am not asking which version is clearer :)

I want to know if this can be done without any TeX code at all.

Patrick


From luigi.scarso at gmail.com  Mon Sep 14 11:06:49 2009
From: luigi.scarso at gmail.com (luigi scarso)
Date: Mon, 14 Sep 2009 11:06:49 +0200
Subject: [luatex] lua equivalent of vbox...ht
In-Reply-To: <1C8BA0C6-32D8-4A0A-A52E-AADE9193DE93@gundla.ch>
References: <m1r5ua4v62.fsf@levana.de>
	<6A0BCA3B-6869-4FB8-8858-6526AB5736BE@gundla.ch>
	<fe8d59da0909140133x5cf1eaeew16579dffd4693ac6@mail.gmail.com>
	<1C8BA0C6-32D8-4A0A-A52E-AADE9193DE93@gundla.ch>
Message-ID: <fe8d59da0909140206s24d9c7b4v2cf8c65dfc65b899@mail.gmail.com>

On Mon, Sep 14, 2009 at 10:56 AM, Patrick Gundlach <patrick at gundla.ch> wrote:
>>>
>>> Is it even possible to write this in Lua? I need to invoke the line
>>> breaking
>>> algorithm at some time, how do I do this in Lua?
>>
>> Write "what" ?
>
> \setbox0\vbox{long text that breaks into lines}
>
> and immediately afterwards get the dimensions of this box 0
>
> I want to know if this can be done without any TeX code at all.
Ah ok.
No, I don't know -- but I will investigate


(I don't understand why you insist to drop TeX -- TeX and Lua cooperate.)

-- 
luigi

From taco at elvenkind.com  Mon Sep 14 11:30:55 2009
From: taco at elvenkind.com (Taco Hoekwater)
Date: Mon, 14 Sep 2009 11:30:55 +0200
Subject: [luatex] lua equivalent of vbox...ht
In-Reply-To: <1C8BA0C6-32D8-4A0A-A52E-AADE9193DE93@gundla.ch>
References: <m1r5ua4v62.fsf@levana.de>	<6A0BCA3B-6869-4FB8-8858-6526AB5736BE@gundla.ch>	<fe8d59da0909140133x5cf1eaeew16579dffd4693ac6@mail.gmail.com>
	<1C8BA0C6-32D8-4A0A-A52E-AADE9193DE93@gundla.ch>
Message-ID: <4AAE0D4F.9040507@elvenkind.com>

Patrick Gundlach wrote:

> I want to know if this can be done without any TeX code at all.

No time now, but yes: it can be done.

Best wishes,
Taco



From luigi.scarso at gmail.com  Mon Sep 14 11:46:03 2009
From: luigi.scarso at gmail.com (luigi scarso)
Date: Mon, 14 Sep 2009 11:46:03 +0200
Subject: [luatex] lua equivalent of vbox...ht
In-Reply-To: <4AAE0D4F.9040507@elvenkind.com>
References: <m1r5ua4v62.fsf@levana.de>
	<6A0BCA3B-6869-4FB8-8858-6526AB5736BE@gundla.ch>
	<fe8d59da0909140133x5cf1eaeew16579dffd4693ac6@mail.gmail.com>
	<1C8BA0C6-32D8-4A0A-A52E-AADE9193DE93@gundla.ch>
	<4AAE0D4F.9040507@elvenkind.com>
Message-ID: <fe8d59da0909140246p7feceea9xfc21c5b5e8ecfede@mail.gmail.com>

On Mon, Sep 14, 2009 at 11:30 AM, Taco Hoekwater <taco at elvenkind.com> wrote:
> Patrick Gundlach wrote:
>
>> I want to know if this can be done without any TeX code at all.
>
> No time now, but yes: it can be done.
>
> Best wishes,
> Taco
>
>
>
Taco, is there a
node.vpack(..)

function ?

I see this in  texk/web2c/luatexdir/NEWS

* New lua function: node.vpack() via a patch from Khaled Hosny
  that also improves error handling in node.hpack().

but anything in manual .

-- 
luigi

From luigi.scarso at gmail.com  Mon Sep 14 14:48:04 2009
From: luigi.scarso at gmail.com (luigi scarso)
Date: Mon, 14 Sep 2009 14:48:04 +0200
Subject: [luatex] lua equivalent of vbox...ht
In-Reply-To: <7BED5A7A-EB22-4700-A50B-469771BB23ED@gundla.ch>
References: <m1r5ua4v62.fsf@levana.de>
	<fe8d59da0909131120r457e0032y79ee30bbf4d23f72@mail.gmail.com>
	<7BED5A7A-EB22-4700-A50B-469771BB23ED@gundla.ch>
Message-ID: <fe8d59da0909140548g66713f14t5a38b0bf45d8fd04@mail.gmail.com>

On Sun, Sep 13, 2009 at 9:21 PM, Patrick Gundlach <patrick at gundla.ch> wrote:
> Hello all,
>
>>> what would be the lua equivalent of
>>>
>>> \setbox0\vbox{hello world}
>>> \the\ht0
>>>
>>> ? That is, what would I write inside \directlua{ ... } to get the same
>>> effect?
>>>
>>> Pseudo code appreciated.

\starttext
\directlua{
% create to glyph nodes
T=node.new(37)
T.char=84
T.font=1

E=node.new(37)
E.char=69
E.font=1

X=node.new(37)
X.char=88
X.font=1


space=node.new(37)
space.char=32
space.font=1


head=node.hpack(T)
head.dir = 'TLT'
h,n=node.insert_after(head,T,E)
h,n=node.insert_after(head,E,X)
head.width = 1451240

tex.setbox(0,head)

texio.write_nl(tex.wd[0])
}

\framed{\box0}
\stoptext

It's not correct -- I must set head.width = 1451240 by try and error

-- 
luigi

From patrick at gundla.ch  Mon Sep 14 15:02:09 2009
From: patrick at gundla.ch (Patrick Gundlach)
Date: Mon, 14 Sep 2009 15:02:09 +0200
Subject: [luatex] lua equivalent of vbox...ht
In-Reply-To: <fe8d59da0909140548g66713f14t5a38b0bf45d8fd04@mail.gmail.com>
References: <m1r5ua4v62.fsf@levana.de>
	<fe8d59da0909131120r457e0032y79ee30bbf4d23f72@mail.gmail.com>
	<7BED5A7A-EB22-4700-A50B-469771BB23ED@gundla.ch>
	<fe8d59da0909140548g66713f14t5a38b0bf45d8fd04@mail.gmail.com>
Message-ID: <69EF2EAD-8F93-4269-8F57-198CE20F52B1@gundla.ch>

Hello Luigi, all,

> It's not correct -- I must set head.width = 1451240 by try and error

I'll wait for Taco to get back from vacation :)

Patrick


From luigi.scarso at gmail.com  Mon Sep 14 15:41:00 2009
From: luigi.scarso at gmail.com (luigi scarso)
Date: Mon, 14 Sep 2009 15:41:00 +0200
Subject: [luatex] lua equivalent of vbox...ht
In-Reply-To: <69EF2EAD-8F93-4269-8F57-198CE20F52B1@gundla.ch>
References: <m1r5ua4v62.fsf@levana.de>
	<fe8d59da0909131120r457e0032y79ee30bbf4d23f72@mail.gmail.com>
	<7BED5A7A-EB22-4700-A50B-469771BB23ED@gundla.ch>
	<fe8d59da0909140548g66713f14t5a38b0bf45d8fd04@mail.gmail.com>
	<69EF2EAD-8F93-4269-8F57-198CE20F52B1@gundla.ch>
Message-ID: <fe8d59da0909140641q26371a9ei141ef8273e3747c9@mail.gmail.com>

On Mon, Sep 14, 2009 at 3:02 PM, Patrick Gundlach <patrick at gundla.ch> wrote:
> Hello Luigi, all,
>
>> It's not correct -- I must set head.width = 1451240 by try and error
>
> I'll wait for Taco to get back from vacation :)
>
> Patrick
>
>
ok , in the meanwhile this looks better

\starttext
\directlua{
T=node.new(37)
T.char=84
T.font=1

E=node.new(37)
E.char=69
E.font=1

X=node.new(37)
X.char=88
X.font=1

space=node.new(37)
space.char=32
space.font=1


T.next = E
E.next = X
X.next = space


head=node.hpack(T)
tex.setbox(0,head)
texio.write_nl(tex.wd[0])

}

\framed{\box0}
\stoptext


-- 
luigi

From reinhard.kotucha at web.de  Mon Sep 14 23:03:38 2009
From: reinhard.kotucha at web.de (Reinhard Kotucha)
Date: Mon, 14 Sep 2009 23:03:38 +0200
Subject: [luatex] lua equivalent of vbox...ht
In-Reply-To: <fe8d59da0909140206s24d9c7b4v2cf8c65dfc65b899@mail.gmail.com>
References: <m1r5ua4v62.fsf@levana.de>
	<6A0BCA3B-6869-4FB8-8858-6526AB5736BE@gundla.ch>
	<fe8d59da0909140133x5cf1eaeew16579dffd4693ac6@mail.gmail.com>
	<1C8BA0C6-32D8-4A0A-A52E-AADE9193DE93@gundla.ch>
	<fe8d59da0909140206s24d9c7b4v2cf8c65dfc65b899@mail.gmail.com>
Message-ID: <19118.44970.392899.804069@zaphod.ms25.net>

On 14 September 2009 luigi scarso wrote:

 > (I don't understand why you insist to drop TeX -- TeX and Lua
 > cooperate.)

Hi Luigi,
it's an interesting idea, though.  I think that it's worthwhile to
investigate.  \setbox and \vbox are primitives and the easiest way is
to invoke them by their names (in TeX), of course.  At a first glance
it doesn't make much sense to replace them by Lua code.  But once all
the low-level stuff is hidden in Lua functions, the whole thing
becomes extremely interesting.  I'm quite interested in the results.

Nevertheless, no catcodes, no fun.

Regards,
  Reinhard

-- 
----------------------------------------------------------------------------
Reinhard Kotucha			              Phone: +49-511-3373112
Marschnerstr. 25
D-30167 Hannover	                      mailto:reinhard.kotucha at web.de
----------------------------------------------------------------------------
Microsoft isn't the answer. Microsoft is the question, and the answer is NO.
----------------------------------------------------------------------------

From pragma at wxs.nl  Fri Sep 18 14:50:51 2009
From: pragma at wxs.nl (Hans Hagen)
Date: Fri, 18 Sep 2009 14:50:51 +0200
Subject: [luatex] lua equivalent of vbox...ht
In-Reply-To: <69EF2EAD-8F93-4269-8F57-198CE20F52B1@gundla.ch>
References: <m1r5ua4v62.fsf@levana.de>	<fe8d59da0909131120r457e0032y79ee30bbf4d23f72@mail.gmail.com>	<7BED5A7A-EB22-4700-A50B-469771BB23ED@gundla.ch>	<fe8d59da0909140548g66713f14t5a38b0bf45d8fd04@mail.gmail.com>
	<69EF2EAD-8F93-4269-8F57-198CE20F52B1@gundla.ch>
Message-ID: <4AB3822B.3070009@wxs.nl>

Patrick Gundlach wrote:
> Hello Luigi, all,
> 
>> It's not correct -- I must set head.width = 1451240 by try and error
> 
> I'll wait for Taco to get back from vacation :)

Hi Patrick and Luigi ..

(as i'm not monitoring this list constantly - as it's mostly latex 
issues - next ask such things on the context list)

The kind of things you're asking for (basically doing tex things at the 
lua end) are on the agenda but for later once the whoile machinery is 
opened up and it does not make much sense to run ahead of the agenda

we need to sort out backend issues, directionality, more control over 
the par and pagebuilder etc and as soon as something is opened up it's 
likely that there is a function that does similar things at the lua end 
(hpack is an example); ideally one would like to have expansion and 
typesetiing at the lua end but we're not yet there

anyhow, here's an example ...

\starttext

\startluacode
     function mylist(str,fontid,spacing)
         local head, prev = nil, nil
         for s in string.utfvalues(str) do
             local next
              if spacing and s == 32 then
                 next = node.new(node.id("glue"))
                 next.spec = node.new(node.id("glue_spec"))
                 next.spec.width = spacing or 64*1024*10
             else
                 next = node.new(node.id("glyph"))
                 next.char = s
                 next.font = fontid or 1
             end
             if not head then
                 head = next
             else
                 prev.next = next
                 next.prev = prev
             end
             prev = next
         end
         return head
     end
     function myhpack(str,fontid,spacing)
         return node.hpack(mylist(str,fontid,spacing))
     end
     function myvpack(str,fontid,spacing)
         -- vpack is just a hack, and a proper implentation is on the agenda
         -- as it needs more info etc than currently available
     end
     node.write(myhpack("Hello World!"))
     node.write(myhpack("Hello World!",1,100*1024*10))

\stopluacode

\stoptext

Don't expect vpack to work before the par builder is opened up (all 
those parameters).

I'll start adding some examples to the context mkiv code base.

Hans




-----------------------------------------------------------------
                                           Hans Hagen | PRAGMA ADE
               Ridderstraat 27 | 8061 GH Hasselt | The Netherlands
      tel: 038 477 53 69 | fax: 038 477 53 74 | www.pragma-ade.com
                                              | www.pragma-pod.nl
-----------------------------------------------------------------

From luigi.scarso at gmail.com  Fri Sep 18 15:26:40 2009
From: luigi.scarso at gmail.com (luigi scarso)
Date: Fri, 18 Sep 2009 15:26:40 +0200
Subject: [luatex] lua equivalent of vbox...ht
In-Reply-To: <4AB3822B.3070009@wxs.nl>
References: <m1r5ua4v62.fsf@levana.de>
	<fe8d59da0909131120r457e0032y79ee30bbf4d23f72@mail.gmail.com>
	<7BED5A7A-EB22-4700-A50B-469771BB23ED@gundla.ch>
	<fe8d59da0909140548g66713f14t5a38b0bf45d8fd04@mail.gmail.com>
	<69EF2EAD-8F93-4269-8F57-198CE20F52B1@gundla.ch>
	<4AB3822B.3070009@wxs.nl>
Message-ID: <fe8d59da0909180626q614b19d4l48f98c1bdad49d55@mail.gmail.com>

>
> anyhow, here's an example ...
>
> \starttext
>
> \startluacode
> ? ?function mylist(str,fontid,spacing)
> ? ? ? ?local head, prev = nil, nil
> ? ? ? ?for s in string.utfvalues(str) do
> ? ? ? ? ? ?local next
> ? ? ? ? ? ? if spacing and s == 32 then
> ? ? ? ? ? ? ? ?next = node.new(node.id("glue"))
> ? ? ? ? ? ? ? ?next.spec = node.new(node.id("glue_spec"))
> ? ? ? ? ? ? ? ?next.spec.width = spacing or 64*1024*10
> ? ? ? ? ? ?else
> ? ? ? ? ? ? ? ?next = node.new(node.id("glyph"))
> ? ? ? ? ? ? ? ?next.char = s
> ? ? ? ? ? ? ? ?next.font = fontid or 1
> ? ? ? ? ? ?end
> ? ? ? ? ? ?if not head then
> ? ? ? ? ? ? ? ?head = next
> ? ? ? ? ? ?else
> ? ? ? ? ? ? ? ?prev.next = next
> ? ? ? ? ? ? ? ?next.prev = prev
> ? ? ? ? ? ?end
> ? ? ? ? ? ?prev = next
> ? ? ? ?end
> ? ? ? ?return head
> ? ?end
> ? ?function myhpack(str,fontid,spacing)
> ? ? ? ?return node.hpack(mylist(str,fontid,spacing))
> ? ?end
> ? ?function myvpack(str,fontid,spacing)
> ? ? ? ?-- vpack is just a hack, and a proper implentation is on the agenda
> ? ? ? ?-- as it needs more info etc than currently available
> ? ?end
> ? ?node.write(myhpack("Hello World!"))
> ? ?node.write(myhpack("Hello World!",1,100*1024*10))
>
> \stopluacode
>
> \stoptext
>
> Don't expect vpack to work before the par builder is opened up (all those
> parameters).
>
> I'll start adding some examples to the context mkiv code base.

Cool...

-- 
luigi

From patrick at gundla.ch  Fri Sep 18 16:09:50 2009
From: patrick at gundla.ch (Patrick Gundlach)
Date: Fri, 18 Sep 2009 16:09:50 +0200
Subject: [luatex] lua equivalent of vbox...ht
In-Reply-To: <4AB3822B.3070009@wxs.nl>
References: <m1r5ua4v62.fsf@levana.de>	<fe8d59da0909131120r457e0032y79ee30bbf4d23f72@mail.gmail.com>	<7BED5A7A-EB22-4700-A50B-469771BB23ED@gundla.ch>	<fe8d59da0909140548g66713f14t5a38b0bf45d8fd04@mail.gmail.com>
	<69EF2EAD-8F93-4269-8F57-198CE20F52B1@gundla.ch>
	<4AB3822B.3070009@wxs.nl>
Message-ID: <4A6C73B6-4942-4A49-BC20-DB77A6EA0CFF@gundla.ch>


>
> anyhow, here's an example ...

[...]

great! Thanks
>
> Don't expect vpack to work before the par builder is opened up (all  
> those parameters).

OK, so now I am in "expectation mode" :)

Patrick


From vafa at users.berlios.de  Sun Sep 20 07:03:42 2009
From: vafa at users.berlios.de (Vafa Khalighi)
Date: Sun, 20 Sep 2009 15:03:42 +1000
Subject: [luatex] LuaTeX Bug
Message-ID: <605202f20909192203j502ba224we696c2564068eef8@mail.gmail.com>

having

$$1+2=3\eqno(1)$$
$$1+2=3\eqno(1)$$
$$1+2=3\eqno(1)$$
$$1+2=3\eqno(1)$$
$$1+2=3\eqno(1)$$
$$1+2=3\eqno(1)$$
$$1+2=3\eqno(1)$$
$$1+2=3\eqno(1)$$
$$1+2=3\eqno(1)$$
\end

as the example document and running pdftex and luatex on it, it makes clear
that with space between equations is too much  when compiled with luatex.
both PDFTeX and LuaTeX outputs are attached.

-- 
Vafa
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://tug.org/pipermail/luatex/attachments/20090920/26ad992d/attachment-0001.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: test-luatex.pdf
Type: application/pdf
Size: 10111 bytes
Desc: not available
URL: <http://tug.org/pipermail/luatex/attachments/20090920/26ad992d/attachment-0002.pdf>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: test-pdftex.pdf
Type: application/pdf
Size: 10120 bytes
Desc: not available
URL: <http://tug.org/pipermail/luatex/attachments/20090920/26ad992d/attachment-0003.pdf>

From taco at elvenkind.com  Sun Sep 20 09:10:37 2009
From: taco at elvenkind.com (Taco Hoekwater)
Date: Sun, 20 Sep 2009 09:10:37 +0200
Subject: [luatex] [Dev-luatex] LuaTeX Bug
In-Reply-To: <605202f20909192203j502ba224we696c2564068eef8@mail.gmail.com>
References: <605202f20909192203j502ba224we696c2564068eef8@mail.gmail.com>
Message-ID: <4AB5D56D.603@elvenkind.com>


Hi Vafa,

Vafa Khalighi wrote:
> having
> 
> $$1+2=3\eqno(1)$$
> $$1+2=3\eqno(1)$$
> ...


Thanks for the bug report, moved to the tracker as item 270

   http://tracker.luatex.org/view.php?id=270

Best wishes,
Taco

From patrick at gundla.ch  Sun Sep 20 13:16:00 2009
From: patrick at gundla.ch (Patrick Gundlach)
Date: Sun, 20 Sep 2009 13:16:00 +0200
Subject: [luatex] fontloader lib: encoding for type1 fonts
Message-ID: <C056204E-B090-4C13-91A3-520A52A5CED3@gundla.ch>

Hi,

when I load a type1 font with the fontloader tex-library, I get a  
custom 8 bit encoding in map.map. Is there a trivial way to convert  
this to a more unicode like mapping? Such as one I get when I load an  
otf-font with the fontloader library?

font = fontloader.to_table(fontloader.open("texgyreheros-bold.otf"))
-- font.map.enc.enccount is now 65572 ("ok")

font = fontloader.to_table(fontloader.open("cmr10.pfb"))
-- font.map.enc.enccount is now 256 ("not ok")

For example the greek ? (GREEK CAPITAL LETTER GAMMA, U+0393) is mapped  
in cmr10.pfb to char 161 and so not useable for direct input of that  
glyph.

So the question is: is there a built-in mechanism to re-map the type1  
fonts?

Patrick


From patrick at gundla.ch  Sun Sep 20 18:48:45 2009
From: patrick at gundla.ch (Patrick Gundlach)
Date: Sun, 20 Sep 2009 18:48:45 +0200
Subject: [luatex] fontloader lib: encoding for type1 fonts
In-Reply-To: <C056204E-B090-4C13-91A3-520A52A5CED3@gundla.ch>
References: <C056204E-B090-4C13-91A3-520A52A5CED3@gundla.ch>
Message-ID: <C1EA6304-A8B5-4D10-BE53-A7DFE62681FC@gundla.ch>


> So the question is: is there a built-in mechanism to re-map the  
> type1 fonts?

I hate to answer my own questions. I have not seen the unicode entry  
in the glyph table. So I can do the mapping myself. The example on the  
wiki (http://luatex.bluwiki.com/go/Use_a_TrueType_font) confused me.

Patrick


From patrick at gundla.ch  Sun Sep 20 19:57:09 2009
From: patrick at gundla.ch (Patrick Gundlach)
Date: Sun, 20 Sep 2009 19:57:09 +0200
Subject: [luatex] How to access fonts from TeX
Message-ID: <871D2155-407F-4FC2-A07F-37DA8F81D2B3@gundla.ch>

Sorry for my continuous questions...

when I use font.define() to define a font, can I access this font from  
the TeX side? Similar to \font\myfont=... ?

Patrick


From luigi.scarso at gmail.com  Sun Sep 20 21:11:02 2009
From: luigi.scarso at gmail.com (luigi scarso)
Date: Sun, 20 Sep 2009 21:11:02 +0200
Subject: [luatex] fontloader lib: encoding for type1 fonts
In-Reply-To: <C1EA6304-A8B5-4D10-BE53-A7DFE62681FC@gundla.ch>
References: <C056204E-B090-4C13-91A3-520A52A5CED3@gundla.ch>
	<C1EA6304-A8B5-4D10-BE53-A7DFE62681FC@gundla.ch>
Message-ID: <fe8d59da0909201211s388a6579m95ff8e90691043a7@mail.gmail.com>

On Sun, Sep 20, 2009 at 6:48 PM, Patrick Gundlach <patrick at gundla.ch> wrote:
>
>> So the question is: is there a built-in mechanism to re-map the type1
>> fonts?
>
> I hate to answer my own questions. I have not seen the unicode entry in the
> glyph table. So I can do the mapping myself. The example on the wiki
> (http://luatex.bluwiki.com/go/Use_a_TrueType_font) confused me.
can you wikify it ?


-- 
luigi

From patrick at gundla.ch  Sun Sep 20 21:31:31 2009
From: patrick at gundla.ch (Patrick Gundlach)
Date: Sun, 20 Sep 2009 21:31:31 +0200
Subject: [luatex] fontloader lib: encoding for type1 fonts
In-Reply-To: <fe8d59da0909201211s388a6579m95ff8e90691043a7@mail.gmail.com>
References: <C056204E-B090-4C13-91A3-520A52A5CED3@gundla.ch>
	<C1EA6304-A8B5-4D10-BE53-A7DFE62681FC@gundla.ch>
	<fe8d59da0909201211s388a6579m95ff8e90691043a7@mail.gmail.com>
Message-ID: <F0E0FC0E-4DEF-41EA-AF97-B926019A2535@gundla.ch>


Am 20.09.2009 um 21:11 schrieb luigi scarso:

> On Sun, Sep 20, 2009 at 6:48 PM, Patrick Gundlach  
> <patrick at gundla.ch> wrote:
>>
>>> So the question is: is there a built-in mechanism to re-map the  
>>> type1
>>> fonts?
>>
>> I hate to answer my own questions. I have not seen the unicode  
>> entry in the
>> glyph table. So I can do the mapping myself. The example on the wiki
>> (http://luatex.bluwiki.com/go/Use_a_TrueType_font) confused me.
> can you wikify it ?

I will. Need to make a clean example first.

Patrick


From patrick at gundla.ch  Sun Sep 20 21:54:41 2009
From: patrick at gundla.ch (Patrick Gundlach)
Date: Sun, 20 Sep 2009 21:54:41 +0200
Subject: [luatex] Setting language inside nodelist
Message-ID: <04B77656-20DD-457D-A87F-06A94807E89B@gundla.ch>

Hello again...

I try to set the language inside a nodelist. Let's say I have done  
something like

l=lang.new()
l:patterns([==[
... for example german hyphenation patterns ..
]==])
l:id()  -- returns 1

Now \language1 switches to the german hyphenation patterns.

But when I go thru the nodelist with the pre_linebreak_filter, it is  
not enough to set the lang fields in the glyph nodes to 1. I have to  
explicitly say \language1 in my TeX text. Why is this? There are no  
other nodes where I can set the lang field.

How do I switch to another language completely inside the  
pre_linebreak_filter?

Patrick




From taco at elvenkind.com  Mon Sep 21 10:03:13 2009
From: taco at elvenkind.com (Taco Hoekwater)
Date: Mon, 21 Sep 2009 10:03:13 +0200
Subject: [luatex] How to access fonts from TeX
In-Reply-To: <871D2155-407F-4FC2-A07F-37DA8F81D2B3@gundla.ch>
References: <871D2155-407F-4FC2-A07F-37DA8F81D2B3@gundla.ch>
Message-ID: <4AB73341.7030703@elvenkind.com>

Patrick Gundlach wrote:
> Sorry for my continuous questions...
> 
> when I use font.define() to define a font, can I access this font from 
> the TeX side? Similar to \font\myfont=... ?

Not directly, because there is no command name attached (the situation
is a bit like the \font\preloaded= statements in plain.tex). But you
can use tex.definefont() to create that mapping.

Best wishes,
Taco

From taco at elvenkind.com  Mon Sep 21 10:07:16 2009
From: taco at elvenkind.com (Taco Hoekwater)
Date: Mon, 21 Sep 2009 10:07:16 +0200
Subject: [luatex] Setting language inside nodelist
In-Reply-To: <04B77656-20DD-457D-A87F-06A94807E89B@gundla.ch>
References: <04B77656-20DD-457D-A87F-06A94807E89B@gundla.ch>
Message-ID: <4AB73434.8020300@elvenkind.com>

Patrick Gundlach wrote:
> Hello again...
> 
> I try to set the language inside a nodelist. Let's say I have done 
> something like
> 
> l=lang.new()
> l:patterns([==[
> ... for example german hyphenation patterns ..
> ]==])
> l:id()  -- returns 1
> 
> Now \language1 switches to the german hyphenation patterns.
> 
> But when I go thru the nodelist with the pre_linebreak_filter, it is not 
> enough to set the lang fields in the glyph nodes to 1. I have to 
> explicitly say \language1 in my TeX text. Why is this? There are no 
> other nodes where I can set the lang field.

Hm, this sounds a bit like a bug. Can you create a tracker.luatex.org
item along with a full example file?

Best wishes,
Taco

From patrick at gundla.ch  Mon Sep 21 10:27:09 2009
From: patrick at gundla.ch (Patrick Gundlach)
Date: Mon, 21 Sep 2009 10:27:09 +0200
Subject: [luatex] Setting language inside nodelist
In-Reply-To: <4AB73434.8020300@elvenkind.com>
References: <04B77656-20DD-457D-A87F-06A94807E89B@gundla.ch>
	<4AB73434.8020300@elvenkind.com>
Message-ID: <A12A2658-90D7-413A-A69F-DF5BB3590028@gundla.ch>


Am 21.09.2009 um 10:07 schrieb Taco Hoekwater:

> Patrick Gundlach wrote:
>> Hello again...
>> I try to set the language inside a nodelist. Let's say I have done  
>> something like
>> l=lang.new()
>> l:patterns([==[
>> ... for example german hyphenation patterns ..
>> ]==])
>> l:id()  -- returns 1
>> Now \language1 switches to the german hyphenation patterns.
>> But when I go thru the nodelist with the pre_linebreak_filter, it  
>> is not enough to set the lang fields in the glyph nodes to 1. I  
>> have to explicitly say \language1 in my TeX text. Why is this?  
>> There are no other nodes where I can set the lang field.
>
> Hm, this sounds a bit like a bug. Can you create a tracker.luatex.org
> item along with a full example file?

I will do so.

Patrick


From elie.roux at telecom-bretagne.eu  Wed Sep 23 09:01:29 2009
From: elie.roux at telecom-bretagne.eu (=?UTF-8?Q?=C3=89lie_Roux?=)
Date: Wed, 23 Sep 2009 10:01:29 +0300
Subject: [luatex] tex.enableprimitives producing non-primitives?
Message-ID: <eba574420909230001p2528909cx81f9e31d6870b964@mail.gmail.com>

Hello,

this mininal example fails with   tex.enableprimitives('',
tex.extraprimitives()) in the (plain) format :

\directlua{tex.enableprimitives('testprefix', {'attribute'})}

\testprefixattribute 3 = 4

\pdfprimitive\attribute 4=5

\pdfprimitive\testprefixattribute 3 = 4

\end

it says "Missing primitive name on l7". Is it normal ? This behaviour
looks strange to me, as testprefixattribute should be a primitive...

Thank you!
-- 
Elie

From oberdiek at uni-freiburg.de  Wed Sep 23 10:43:15 2009
From: oberdiek at uni-freiburg.de (Heiko Oberdiek)
Date: Wed, 23 Sep 2009 10:43:15 +0200
Subject: [luatex] tex.enableprimitives producing non-primitives?
In-Reply-To: <eba574420909230001p2528909cx81f9e31d6870b964@mail.gmail.com>
References: <eba574420909230001p2528909cx81f9e31d6870b964@mail.gmail.com>
Message-ID: <20090923084315.GA5011@irwin.vpn.uni-freiburg.de>

On Wed, Sep 23, 2009 at 10:01:29AM +0300, ?lie Roux wrote:

> this mininal example fails with   tex.enableprimitives('',
> tex.extraprimitives()) in the (plain) format :
> 
> \directlua{tex.enableprimitives('testprefix', {'attribute'})}
> 
> \testprefixattribute 3 = 4
> 
> \pdfprimitive\attribute 4=5
> 
> \pdfprimitive\testprefixattribute 3 = 4
> 
> \end
> 
> it says "Missing primitive name on l7". Is it normal ?

Afaik yes.

> This behaviour
> looks strange to me, as testprefixattribute should be a primitive...

Yes, but that doesn't matter, it needs the original primitive name.
The purpose is, to get the primitive meaning, even if the command
is redefined later as macro or whatever, e.g. after

  \let\attribute\hbox
  \pdfprimitive\attribute

you get the original meaning of \attribute, not a \hbox.

Yours sincerely
  Heiko <oberdiek at uni-freiburg.de>

From elie.roux at telecom-bretagne.eu  Wed Sep 23 11:30:40 2009
From: elie.roux at telecom-bretagne.eu (=?UTF-8?Q?=C3=89lie_Roux?=)
Date: Wed, 23 Sep 2009 12:30:40 +0300
Subject: [luatex] tex.enableprimitives producing non-primitives?
In-Reply-To: <20090923084315.GA5011@irwin.vpn.uni-freiburg.de>
References: <eba574420909230001p2528909cx81f9e31d6870b964@mail.gmail.com>
	<20090923084315.GA5011@irwin.vpn.uni-freiburg.de>
Message-ID: <eba574420909230230y77af292bk875169030882a280@mail.gmail.com>

2009/9/23 Heiko Oberdiek <oberdiek at uni-freiburg.de>:
>
>> it says "Missing primitive name on l7". Is it normal ?
>
> Afaik yes.

Ok, so it should not be a primitive...

>> This behaviour
>> looks strange to me, as testprefixattribute should be a primitive...
>
> Yes, but that doesn't matter.

Hmmm now you say that it should be one... I don't really understand...

> it needs the original primitive name.
> The purpose is, to get the primitive meaning, even if the command
> is redefined later as macro or whatever, e.g. after
>
> ?\let\attribute\hbox
> ?\pdfprimitive\attribute
>
> you get the original meaning of \attribute, not a \hbox.

I know, but in TeXLive 2009, attribute does not exist for LaTeX (like
other luatex-specific promitives), so you cannot say
\pdfprimitive\attribute. What I wanted is to do the same with
luatexattribute, which is the only "primitive" (I still don't know if
it's one or not) available in TeXLive 2009 for LaTeX... It's not a
really big issue as it seems strangefor people to do such a thing as
\let\luatexattribute\hbox, but I report it in case it's a bug.

Thank you,
-- 
Elie

From oberdiek at uni-freiburg.de  Wed Sep 23 12:34:32 2009
From: oberdiek at uni-freiburg.de (Heiko Oberdiek)
Date: Wed, 23 Sep 2009 12:34:32 +0200
Subject: [luatex] tex.enableprimitives producing non-primitives?
In-Reply-To: <eba574420909230230y77af292bk875169030882a280@mail.gmail.com>
References: <eba574420909230001p2528909cx81f9e31d6870b964@mail.gmail.com>
	<20090923084315.GA5011@irwin.vpn.uni-freiburg.de>
	<eba574420909230230y77af292bk875169030882a280@mail.gmail.com>
Message-ID: <20090923103431.GB2895@irwin.vpn.uni-freiburg.de>

On Wed, Sep 23, 2009 at 12:30:40PM +0300, ?lie Roux wrote:

> 2009/9/23 Heiko Oberdiek <oberdiek at uni-freiburg.de>:
> >
> >> it says "Missing primitive name on l7". Is it normal ?
> >
> > Afaik yes.
> 
> Ok, so it should not be a primitive...

The error message says "primitive *name*". How does \pdfprimitive know,
which primitive meaning you want from the following control sequence?

> >> This behaviour
> >> looks strange to me, as testprefixattribute should be a primitive...
> >
> > Yes, but that doesn't matter.
> 
> Hmmm now you say that it should be one... I don't really understand...

The control sequence after \pdfprimitive is a control sequence with
the name of a primitive, regardless of the current meaning of
this control sequence.

\def\hbox{I am not an \string\hbox}
\pdfprimitive\hbox{This is an \string\hbox again}
\footnote{BTW, what is correct English: "a hbox" or "an hbox"?}

> > it needs the original primitive name.
> > The purpose is, to get the primitive meaning, even if the command
> > is redefined later as macro or whatever, e.g. after
> >
> > ?\let\attribute\hbox
> > ?\pdfprimitive\attribute
> >
> > you get the original meaning of \attribute, not a \hbox.
> 
> I know, but in TeXLive 2009, attribute does not exist for LaTeX (like
> other luatex-specific promitives), so you cannot say
> \pdfprimitive\attribute.

It is irrelevant, which format you use. The question is, whether the
TeX engine knows the *primitive* \attribute. For example, pdfTeX
does not know the primitive \attribute, thus you get an error.
However, luaTeX knows it, thus it will work there.

> What I wanted is to do the same with
> luatexattribute, which is the only "primitive" (I still don't know if
> it's one or not) available in TeXLive 2009 for LaTeX...

Thus your real question is, that you want to know, whether the
TeX engine does provide the primitive in question, even if the
control sequence is redefined?

AFAIK, there is no easy way:
* \pdfprimitive throws an error, if the control sequence is not
  primitive name.
* Even without an error \pdfprimitive does not allow you to save
  the primitive meaning to another control sequence. Thus you could not
  check, whether \pdfprimitve was successful without looking at the
  side effects of executing the primitive in question.
* \ifpdfprimitive is just a shortcut for testing a control sequence,
  whether it has its primitive meaning. \ifpdfprimitive can be replaced
  at macro level via \meaning and a expandable string comparison.

Therefore I think, you need some kind of heuristic to find the
primitive:
* Check for LuaTeX and its tex.enableprimitives and check the
  result, whether the control sequence has the meaning of the
  wanted primitive.
* Check for engines and versions.
* Try out various names of probable candidates.

Yours sincerely
  Heiko <oberdiek at uni-freiburg.de>

From oberdiek at uni-freiburg.de  Wed Sep 23 12:11:23 2009
From: oberdiek at uni-freiburg.de (Heiko Oberdiek)
Date: Wed, 23 Sep 2009 12:11:23 +0200
Subject: [luatex] tex.enableprimitives producing non-primitives?
In-Reply-To: <eba574420909230230y77af292bk875169030882a280@mail.gmail.com>
References: <eba574420909230001p2528909cx81f9e31d6870b964@mail.gmail.com>
	<20090923084315.GA5011@irwin.vpn.uni-freiburg.de>
	<eba574420909230230y77af292bk875169030882a280@mail.gmail.com>
Message-ID: <20090923101123.GA2895@irwin.vpn.uni-freiburg.de>

On Wed, Sep 23, 2009 at 12:30:40PM +0300, ?lie Roux wrote:

> [discussion about the use of \pdfprimitive]

Perhaps it becomes clearer, if I quote the pdfTeX manual:

| \pdfprimitive control sequence
|
| This command executes the primitive meaning of the following control
| sequence, if it has been redefined or made undefined. If the following
| control sequence is undefined and never was a primitive, nothing happens
| and no error is raised. If the control sequence was initially expandable,
| \pdfprimitive expands either. Otherwise \pdfprimitive doesn't expand. The
| primitive has been introduced in pdfTEX 1.40.0.

BTW, as you have seen, the second sentence is wrong:

\catcode`\{=1
\catcode`\}=2
\ifx\directlua\undefined
\else
  \directlua{tex.enableprimitives('',{'pdfprimitive'})}
\fi
\pdfprimitive\FooBar
\end

pdftex -ini:

  This is pdfTeX, Version 3.1415926-1.40.10 (TeX Live 2009) (INITEX)
  ...
  ! Missing primitive name.
  <to be read again> 
                     \FooBar 
  l.7 \pdfprimitive\FooBar

luatex -ini:

  This is LuaTeX, Version beta-0.40.6-2009090421 (TeX Live 2009) (INITEX)
  ...
  ! Missing primitive name.
  <to be read again> 
                     \FooBar 
  l.7 \pdfprimitive\FooBar

I think, the error message is a good thing, thus the manual should be fixed.
(Therefore I have added ntg-pdftex). Also the manual could meantion, that
\pdfprimitive was fixed in 1.40.4.

Yours sincerely
  Heiko <oberdiek at uni-freiburg.de>

From elie.roux at telecom-bretagne.eu  Wed Sep 23 12:52:07 2009
From: elie.roux at telecom-bretagne.eu (=?UTF-8?Q?=C3=89lie_Roux?=)
Date: Wed, 23 Sep 2009 13:52:07 +0300
Subject: [luatex] tex.enableprimitives producing non-primitives?
In-Reply-To: <20090923103431.GB2895@irwin.vpn.uni-freiburg.de>
References: <eba574420909230001p2528909cx81f9e31d6870b964@mail.gmail.com>
	<20090923084315.GA5011@irwin.vpn.uni-freiburg.de>
	<eba574420909230230y77af292bk875169030882a280@mail.gmail.com>
	<20090923103431.GB2895@irwin.vpn.uni-freiburg.de>
Message-ID: <eba574420909230352h17c21e73ra2987d19208c028b@mail.gmail.com>

2009/9/23 Heiko Oberdiek <oberdiek at uni-freiburg.de>:
>
> Thus your real question is, that you want to know, whether the
> TeX engine does provide the primitive in question, even if the
> control sequence is redefined?

I think there is quite a misunderstanding...

I reformulate my thought: in the following example:

\catcode`\{=1
\catcode`\}=2
\ifx\directlua\undefined
\else
 \directlua{tex.enableprimitives('',{'pdfprimitive'})}
 \directlua{tex.enableprimitives('',{'attribute'})}
 \directlua{tex.enableprimitives('testprefix',{'attribute'})}
\fi

\testprefixattribute 3 = 4

\pdfprimitive\attribute 4=5

\pdfprimitive\testprefixattribute 3 = 4

\end

to be compiled with luatex -ini:

we see that I enable the primitive attribute with no prefix, thus
\pdfprimitive\attribute works, until here all is ok. But I also enable
the primitive attribute with the prefix testprefix, so I expect the
same behaviour: \pdfprimitive\testprefixattribute should be working,
but it's not... So the question is: why? Is it normal that primitives
enabled with no prefix are considered by \pdfprimitive as primitives,
and not the ones enabled with no prefix? I tested also removing the
enabling of the attribute primitive with no prefix, it's the same, so
it does not come from enabling it twice, it comes from enabling it
with a prefix.

Thank you,
-- 
Elie

From elie.roux at telecom-bretagne.eu  Wed Sep 23 12:53:52 2009
From: elie.roux at telecom-bretagne.eu (=?UTF-8?Q?=C3=89lie_Roux?=)
Date: Wed, 23 Sep 2009 13:53:52 +0300
Subject: [luatex] tex.enableprimitives producing non-primitives?
In-Reply-To: <eba574420909230352h17c21e73ra2987d19208c028b@mail.gmail.com>
References: <eba574420909230001p2528909cx81f9e31d6870b964@mail.gmail.com>
	<20090923084315.GA5011@irwin.vpn.uni-freiburg.de>
	<eba574420909230230y77af292bk875169030882a280@mail.gmail.com>
	<20090923103431.GB2895@irwin.vpn.uni-freiburg.de>
	<eba574420909230352h17c21e73ra2987d19208c028b@mail.gmail.com>
Message-ID: <eba574420909230353w28070591sf1ff9a5aa0ef3fff@mail.gmail.com>

2009/9/23 ?lie Roux <elie.roux at telecom-bretagne.eu>:
> Is it normal that primitives
> enabled with no prefix are considered by \pdfprimitive as primitives,
> and not the ones enabled with no prefix?

Sorry, I meant "and not the ones enabled with a prefix?"
-- 
Elie

From oberdiek at uni-freiburg.de  Wed Sep 23 14:16:55 2009
From: oberdiek at uni-freiburg.de (Heiko Oberdiek)
Date: Wed, 23 Sep 2009 14:16:55 +0200
Subject: [luatex] tex.enableprimitives producing non-primitives?
In-Reply-To: <eba574420909230352h17c21e73ra2987d19208c028b@mail.gmail.com>
References: <eba574420909230001p2528909cx81f9e31d6870b964@mail.gmail.com>
	<20090923084315.GA5011@irwin.vpn.uni-freiburg.de>
	<eba574420909230230y77af292bk875169030882a280@mail.gmail.com>
	<20090923103431.GB2895@irwin.vpn.uni-freiburg.de>
	<eba574420909230352h17c21e73ra2987d19208c028b@mail.gmail.com>
Message-ID: <20090923121655.GA5693@irwin.vpn.uni-freiburg.de>

On Wed, Sep 23, 2009 at 01:52:07PM +0300, ?lie Roux wrote:

> 2009/9/23 Heiko Oberdiek <oberdiek at uni-freiburg.de>:
> >
> > Thus your real question is, that you want to know, whether the
> > TeX engine does provide the primitive in question, even if the
> > control sequence is redefined?
> 
> I think there is quite a misunderstanding...
> 
> I reformulate my thought: in the following example:
> 
> \catcode`\{=1
> \catcode`\}=2
> \ifx\directlua\undefined
> \else
>  \directlua{tex.enableprimitives('',{'pdfprimitive'})}
>  \directlua{tex.enableprimitives('',{'attribute'})}
>  \directlua{tex.enableprimitives('testprefix',{'attribute'})}
> \fi
> 
> \testprefixattribute 3 = 4
> 
> \pdfprimitive\attribute 4=5
> 
> \pdfprimitive\testprefixattribute 3 = 4
> 
> \end
> 
> to be compiled with luatex -ini:
> 
> we see that I enable the primitive attribute with no prefix, thus
> \pdfprimitive\attribute works, until here all is ok. But I also enable
> the primitive attribute with the prefix testprefix, so I expect the
> same behaviour: \pdfprimitive\testprefixattribute should be working,

\pdfprimitive does not know about tex.enableprimitives and does
not care for the current meaning of \testprefixattribute.
\pdfprimitive expects the same name as you use in the second
argument of tex.enableprimitives.

> but it's not... So the question is: why? Is it normal that primitives
> enabled with no prefix are considered by \pdfprimitive as primitives,
> and not the ones enabled with no prefix?

A prefix does not matter for \pdfprimitive, because it doesn't
know anything about a prefix.
Example:
\catcode`\{=1
\catcode`\}=2
\directlua{tex.enableprimitives('',{'pdfprimitive','box'})}
\directlua{tex.enableprimitives('h',{'box','relax'})}
\pdfprimitive\hbox{}% works by accident
\pdfprimitive\hrelax{}% generates expected error
\end

Yours sincerely
  Heiko <oberdiek at uni-freiburg.de>

From nomosnomos at gmail.com  Wed Sep 23 14:35:47 2009
From: nomosnomos at gmail.com (Dohyun Kim)
Date: Wed, 23 Sep 2009 21:35:47 +0900
Subject: [luatex] tex.enableprimitives producing non-primitives?
In-Reply-To: <20090923121655.GA5693@irwin.vpn.uni-freiburg.de>
References: <eba574420909230001p2528909cx81f9e31d6870b964@mail.gmail.com>
	<20090923084315.GA5011@irwin.vpn.uni-freiburg.de>
	<eba574420909230230y77af292bk875169030882a280@mail.gmail.com>
	<20090923103431.GB2895@irwin.vpn.uni-freiburg.de>
	<eba574420909230352h17c21e73ra2987d19208c028b@mail.gmail.com>
	<20090923121655.GA5693@irwin.vpn.uni-freiburg.de>
Message-ID: <bfeb3bf10909230535o4789a3dcl90e75e108ce70f43@mail.gmail.com>

2009/9/23 Heiko Oberdiek <oberdiek at uni-freiburg.de>:
>
> \pdfprimitive does not know about tex.enableprimitives and does
> not care for the current meaning of \testprefixattribute.
> \pdfprimitive expects the same name as you use in the second
> argument of tex.enableprimitives.
>

But... what about \ifprimitive?
Please test a file as follows with "luatex -ini":
neither \attribute nor \testprefixattribute is treated as a primitive.
This makes \ifprimitive command useless.
In this respect, I agree with ?lie Roux and think that this issue is a
luatex's bug.

\catcode`\{=1
\catcode`\}=2
\ifx\directlua\undefined
\else
 \directlua{tex.enableprimitives('',{'ifpdfprimitive'})}
 \directlua{tex.enableprimitives('testprefix',{'attribute'})}
\fi
\immediate\write17{ !!! attribute is
  \ifpdfprimitive\attribute\else NOT \fi a primitive.}
\immediate\write17{ !!! testprefixattribute is
  \ifpdfprimitive\testprefixattribute\else NOT \fi a primitive.}
\end

Regards,
Dohyun Kim

From joseph.wright at morningstar2.co.uk  Wed Sep 23 14:47:58 2009
From: joseph.wright at morningstar2.co.uk (Joseph Wright)
Date: Wed, 23 Sep 2009 13:47:58 +0100
Subject: [luatex] tex.enableprimitives producing non-primitives?
In-Reply-To: <bfeb3bf10909230535o4789a3dcl90e75e108ce70f43@mail.gmail.com>
References: <eba574420909230001p2528909cx81f9e31d6870b964@mail.gmail.com>	<20090923084315.GA5011@irwin.vpn.uni-freiburg.de>	<eba574420909230230y77af292bk875169030882a280@mail.gmail.com>	<20090923103431.GB2895@irwin.vpn.uni-freiburg.de>	<eba574420909230352h17c21e73ra2987d19208c028b@mail.gmail.com>	<20090923121655.GA5693@irwin.vpn.uni-freiburg.de>
	<bfeb3bf10909230535o4789a3dcl90e75e108ce70f43@mail.gmail.com>
Message-ID: <4ABA18FE.3090406@morningstar2.co.uk>

Dohyun Kim wrote:
> 
> But... what about \ifprimitive?
> Please test a file as follows with "luatex -ini":
> neither \attribute nor \testprefixattribute is treated as a primitive.
> This makes \ifprimitive command useless.
> In this respect, I agree with ?lie Roux and think that this issue is a
> luatex's bug.

No, \ifpdfprimitve is meant for dealing with circumstances where an
*available* primitive has been redefined. In your test, \attribute is
not available, so of course you also cannot call the primitive.
-- 
Joseph Wright

From elie.roux at telecom-bretagne.eu  Wed Sep 23 14:51:17 2009
From: elie.roux at telecom-bretagne.eu (=?UTF-8?Q?=C3=89lie_Roux?=)
Date: Wed, 23 Sep 2009 15:51:17 +0300
Subject: [luatex] tex.enableprimitives producing non-primitives?
In-Reply-To: <4ABA18FE.3090406@morningstar2.co.uk>
References: <eba574420909230001p2528909cx81f9e31d6870b964@mail.gmail.com>
	<20090923084315.GA5011@irwin.vpn.uni-freiburg.de>
	<eba574420909230230y77af292bk875169030882a280@mail.gmail.com>
	<20090923103431.GB2895@irwin.vpn.uni-freiburg.de>
	<eba574420909230352h17c21e73ra2987d19208c028b@mail.gmail.com>
	<20090923121655.GA5693@irwin.vpn.uni-freiburg.de>
	<bfeb3bf10909230535o4789a3dcl90e75e108ce70f43@mail.gmail.com>
	<4ABA18FE.3090406@morningstar2.co.uk>
Message-ID: <eba574420909230551j4f0b80fco39ac74bf1037385e@mail.gmail.com>

2009/9/23 Joseph Wright <joseph.wright at morningstar2.co.uk>:
>
> No, \ifpdfprimitve is meant for dealing with circumstances where an
> *available* primitive has been redefined. In your test, \attribute is
> not available, so of course you also cannot call the primitive.

In fact the surprising thing it that tex.enableprimitives does not
produce primitives (when used with a prefix), so it is the name of the
function that leads to errors... maybe renaming it to producecsname or
something like that would help...
-- 
Elie

From elie.roux at telecom-bretagne.eu  Wed Sep 23 14:22:49 2009
From: elie.roux at telecom-bretagne.eu (=?UTF-8?Q?=C3=89lie_Roux?=)
Date: Wed, 23 Sep 2009 15:22:49 +0300
Subject: [luatex] tex.enableprimitives producing non-primitives?
In-Reply-To: <20090923121655.GA5693@irwin.vpn.uni-freiburg.de>
References: <eba574420909230001p2528909cx81f9e31d6870b964@mail.gmail.com>
	<20090923084315.GA5011@irwin.vpn.uni-freiburg.de>
	<eba574420909230230y77af292bk875169030882a280@mail.gmail.com>
	<20090923103431.GB2895@irwin.vpn.uni-freiburg.de>
	<eba574420909230352h17c21e73ra2987d19208c028b@mail.gmail.com>
	<20090923121655.GA5693@irwin.vpn.uni-freiburg.de>
Message-ID: <eba574420909230522k1a5d7ee4u3bb633abff7bf4c2@mail.gmail.com>

2009/9/23 Heiko Oberdiek <oberdiek at uni-freiburg.de>:
>
> A prefix does not matter for \pdfprimitive, because it doesn't
> know anything about a prefix.

Ok, so the behaviour is normal. Thank you for your explanations!
-- 
Elie

From oberdiek at uni-freiburg.de  Wed Sep 23 15:13:20 2009
From: oberdiek at uni-freiburg.de (Heiko Oberdiek)
Date: Wed, 23 Sep 2009 15:13:20 +0200
Subject: [luatex] tex.enableprimitives producing non-primitives?
In-Reply-To: <eba574420909230551j4f0b80fco39ac74bf1037385e@mail.gmail.com>
References: <eba574420909230001p2528909cx81f9e31d6870b964@mail.gmail.com>
	<20090923084315.GA5011@irwin.vpn.uni-freiburg.de>
	<eba574420909230230y77af292bk875169030882a280@mail.gmail.com>
	<20090923103431.GB2895@irwin.vpn.uni-freiburg.de>
	<eba574420909230352h17c21e73ra2987d19208c028b@mail.gmail.com>
	<20090923121655.GA5693@irwin.vpn.uni-freiburg.de>
	<bfeb3bf10909230535o4789a3dcl90e75e108ce70f43@mail.gmail.com>
	<4ABA18FE.3090406@morningstar2.co.uk>
	<eba574420909230551j4f0b80fco39ac74bf1037385e@mail.gmail.com>
Message-ID: <20090923131320.GB13578@irwin.vpn.uni-freiburg.de>

On Wed, Sep 23, 2009 at 03:51:17PM +0300, ?lie Roux wrote:

> 2009/9/23 Joseph Wright <joseph.wright at morningstar2.co.uk>:
> >
> > No, \ifpdfprimitve is meant for dealing with circumstances where an
> > *available* primitive has been redefined. In your test, \attribute is
> > not available, so of course you also cannot call the primitive.
> 
> In fact the surprising thing it that tex.enableprimitives does not
> produce primitives (when used with a prefix),

It does. See the result of \meaning.

> so it is the name of the
> function that leads to errors... maybe renaming it to producecsname or
> something like that would help...

A little misleading is \if(pdf)primitive perhaps as shortcut
for something like \if(pdf)IsSameAsOriginalPrimitive.

Yours sincerely
  Heiko <oberdiek at uni-freiburg.de>

From oberdiek at uni-freiburg.de  Wed Sep 23 15:10:51 2009
From: oberdiek at uni-freiburg.de (Heiko Oberdiek)
Date: Wed, 23 Sep 2009 15:10:51 +0200
Subject: [luatex] tex.enableprimitives producing non-primitives?
In-Reply-To: <bfeb3bf10909230535o4789a3dcl90e75e108ce70f43@mail.gmail.com>
References: <eba574420909230001p2528909cx81f9e31d6870b964@mail.gmail.com>
	<20090923084315.GA5011@irwin.vpn.uni-freiburg.de>
	<eba574420909230230y77af292bk875169030882a280@mail.gmail.com>
	<20090923103431.GB2895@irwin.vpn.uni-freiburg.de>
	<eba574420909230352h17c21e73ra2987d19208c028b@mail.gmail.com>
	<20090923121655.GA5693@irwin.vpn.uni-freiburg.de>
	<bfeb3bf10909230535o4789a3dcl90e75e108ce70f43@mail.gmail.com>
Message-ID: <20090923131050.GA13578@irwin.vpn.uni-freiburg.de>

On Wed, Sep 23, 2009 at 09:35:47PM +0900, Dohyun Kim wrote:

> 2009/9/23 Heiko Oberdiek <oberdiek at uni-freiburg.de>:
> >
> > \pdfprimitive does not know about tex.enableprimitives and does
> > not care for the current meaning of \testprefixattribute.
> > \pdfprimitive expects the same name as you use in the second
> > argument of tex.enableprimitives.
> >
> 
> But... what about \ifprimitive?
> Please test a file as follows with "luatex -ini":
> neither \attribute nor \testprefixattribute is treated as a primitive.
> This makes \ifprimitive command useless.
> In this respect, I agree with ?lie Roux and think that this issue is a
> luatex's bug.
> 
> \catcode`\{=1
> \catcode`\}=2
> \ifx\directlua\undefined
> \else
>  \directlua{tex.enableprimitives('',{'ifpdfprimitive'})}
>  \directlua{tex.enableprimitives('testprefix',{'attribute'})}
> \fi
> \immediate\write17{ !!! attribute is
>   \ifpdfprimitive\attribute\else NOT \fi a primitive.}

\attribute is undefined (not yet enabled), thus the result
is "NOT a primitive".

> \immediate\write17{ !!! testprefixattribute is
>   \ifpdfprimitive\testprefixattribute\else NOT \fi a primitive.}

\ifpdfprimitive applied to a control sequence that isn't one
of the engine's primitives (see list of tex.enableprimitives)
will never report a positive result.

If you want to check, if a control sequence has the meaning
of a special primitive, then look at package `pdftexcmds':
Stimulated by the current discussion I implemented \pdf at isprimitive:

\input pdftexcmds.sty\relax
\catcode`\@=11 %
\pdf at isprimitive\testprefixattribute\attribute{true}{false}

will report "true" in the above example.

\ifpdfprimitive\cmd is similar to
\pdf at isprimitive\cmd\cmd{\iftrue}{\iffalse}

Update of pdftexcmds is on its way to CTAN, for the impatient
(dtx is attached, and sty can be extracted by running tex):
  http://www.informatik.uni-freiburg.de/~oberdiek/tmp/pdftexcmds.pdf

Yours sincerely
  Heiko <oberdiek at uni-freiburg.de>

From P.Taylor at Rhul.Ac.Uk  Wed Sep 23 12:58:34 2009
From: P.Taylor at Rhul.Ac.Uk (Philip TAYLOR)
Date: Wed, 23 Sep 2009 11:58:34 +0100
Subject: [luatex] [NTG-pdftex]
	tex.enableprimitives	producing	non-primitives?
In-Reply-To: <20090923101123.GA2895@irwin.vpn.uni-freiburg.de>
References: <eba574420909230001p2528909cx81f9e31d6870b964@mail.gmail.com>	<20090923084315.GA5011@irwin.vpn.uni-freiburg.de>	<eba574420909230230y77af292bk875169030882a280@mail.gmail.com>
	<20090923101123.GA2895@irwin.vpn.uni-freiburg.de>
Message-ID: <4AB9FF5A.8030308@Rhul.Ac.Uk>



Heiko Oberdiek wrote:

>> [discussion about the use of \pdfprimitive]

I was unaware of this interesting (and potentially useful)
command, so may I make a suggestion as to the documentation ?
Where it currently reads : "If the control sequence was
initially expandable, \pdfprimitive expands either.", a more
idiomatic version might end "..., \pdfprimitive also expands."

** Phil.

From mpg at elzevir.fr  Wed Sep 23 16:06:07 2009
From: mpg at elzevir.fr (=?ISO-8859-1?Q?Manuel_P=E9gouri=E9-Gonnard?=)
Date: Wed, 23 Sep 2009 16:06:07 +0200
Subject: [luatex] tex.enableprimitives producing non-primitives?
In-Reply-To: <20090923131320.GB13578@irwin.vpn.uni-freiburg.de>
References: <eba574420909230001p2528909cx81f9e31d6870b964@mail.gmail.com>	<20090923084315.GA5011@irwin.vpn.uni-freiburg.de>	<eba574420909230230y77af292bk875169030882a280@mail.gmail.com>	<20090923103431.GB2895@irwin.vpn.uni-freiburg.de>	<eba574420909230352h17c21e73ra2987d19208c028b@mail.gmail.com>	<20090923121655.GA5693@irwin.vpn.uni-freiburg.de>	<bfeb3bf10909230535o4789a3dcl90e75e108ce70f43@mail.gmail.com>	<4ABA18FE.3090406@morningstar2.co.uk>	<eba574420909230551j4f0b80fco39ac74bf1037385e@mail.gmail.com>
	<20090923131320.GB13578@irwin.vpn.uni-freiburg.de>
Message-ID: <4ABA2B4F.1050305@elzevir.fr>

Heiko Oberdiek a ?crit :
> On Wed, Sep 23, 2009 at 03:51:17PM +0300, ?lie Roux wrote:
> 
>> 2009/9/23 Joseph Wright <joseph.wright at morningstar2.co.uk>:
>>> No, \ifpdfprimitve is meant for dealing with circumstances where an
>>> *available* primitive has been redefined. In your test, \attribute is
>>> not available, so of course you also cannot call the primitive.
>> In fact the surprising thing it that tex.enableprimitives does not
>> produce primitives (when used with a prefix),
> 
> It does. See the result of \meaning.
> 
Actually, I think that the result of

tex.enableprimitives('prefix', {'relax'})

is the same as

\let\prefixrelax\relax

(assuming \prefixrelax was previously undefined). And I wouldn't expect

\primitive\prefixrelax

to work after this. So I agree with you that this behaviour is perfectly
consistent: \primitive expects the *natural name* of a primitive. Actually, the
set of names that \primitive accepts is hard-coded in the engine and will not
change at runtime, and it is exactly what I would expect.

Manuel.


From patrick at gundla.ch  Tue Sep 29 10:25:16 2009
From: patrick at gundla.ch (Patrick Gundlach)
Date: Tue, 29 Sep 2009 10:25:16 +0200
Subject: [luatex] Encoding of fonts (fontloader/fontforge)
Message-ID: <5453239E-C8AD-42C1-8FFF-92C77396BF03@gundla.ch>

Hello,

I still have a question concerning the fontloader library.

* When I load a truetype/opentype font, I can use map.map and  
map.backmap to get a mapping between unicode positions and glyph  
numbers.
* When I load a type1 font, map.map and map.backmap give me a non  
usable mapping. I have to use the glyph[i].unicode field (which seems  
to be ok)
* The glyph[i].unicode field seems to be useless in case of truetype  
fonts.

So it looks as if I have to do this code:

if "type1" then use glyph[i].unicode
else use map.map/map.backmap

Q1: Is this correct?

Q2: How can I check if the loaded font is a type1 font? Is there any  
field in the fontlaoder table that can be checked against? I currently  
use the presence of pfminfo.unicoderanges. Is it guaranteed that  
pfminfo.unicoderanges is present, if (and only if) map.map/map.backmap  
is useable?


Patrick


From patrick at gundla.ch  Tue Sep 29 13:52:42 2009
From: patrick at gundla.ch (Patrick Gundlach)
Date: Tue, 29 Sep 2009 13:52:42 +0200
Subject: [luatex] Hyphenchar
Message-ID: <59C28E4A-6EA9-4E9D-B6D8-D6FA6A70AE3B@gundla.ch>

Hello...

the unicode hyphenation character is U+2010 (HYPHEN) (correct?). But  
LuaTeX tries to insert U+002D (HYPHEN-MINUS) when breaking a paragraph.

Shouldn't LuaTeX insert the U+2010 at the end of the line? (assuming  
that no backward compatibility is needed).

How can I tell LuaTeX to insert U+2010 instead of U+002D

Thanks

Patrick


From arthur.reutenauer at normalesup.org  Tue Sep 29 15:07:12 2009
From: arthur.reutenauer at normalesup.org (Arthur Reutenauer)
Date: Tue, 29 Sep 2009 15:07:12 +0200
Subject: [luatex] Hyphenchar
In-Reply-To: <59C28E4A-6EA9-4E9D-B6D8-D6FA6A70AE3B@gundla.ch>
References: <59C28E4A-6EA9-4E9D-B6D8-D6FA6A70AE3B@gundla.ch>
Message-ID: <20090929130712.GJ7756@phare.normalesup.org>

> the unicode hyphenation character is U+2010 (HYPHEN) (correct?). But  
> LuaTeX tries to insert U+002D (HYPHEN-MINUS) when breaking a paragraph.

  (I assume you mean breaking a paragraph into lines)

  As a matter of principle, you're right, the correct Unicode character is
U+2010 HYPHEN, but it's very poorly supported in actual fonts even if that
would be trivial, so it makes sense to use the formally ambiguous HYPHEN-MINUS
instead.  At least until HYPHEN is supported more widely.

	Arthur

From patrick at gundla.ch  Tue Sep 29 15:15:10 2009
From: patrick at gundla.ch (Patrick Gundlach)
Date: Tue, 29 Sep 2009 15:15:10 +0200
Subject: [luatex] Hyphenchar
In-Reply-To: <20090929130712.GJ7756@phare.normalesup.org>
References: <59C28E4A-6EA9-4E9D-B6D8-D6FA6A70AE3B@gundla.ch>
	<20090929130712.GJ7756@phare.normalesup.org>
Message-ID: <106EFA99-7507-4A4E-A38F-9FE1C8C8C76E@gundla.ch>

Hello Arthur,

>> the unicode hyphenation character is U+2010 (HYPHEN) (correct?). But
>> LuaTeX tries to insert U+002D (HYPHEN-MINUS) when breaking a  
>> paragraph.
>
>  (I assume you mean breaking a paragraph into lines)

Yes.


>  As a matter of principle, you're right, the correct Unicode  
> character is
> U+2010 HYPHEN, but it's very poorly supported in actual fonts even  
> if that
> would be trivial, so it makes sense to use the formally ambiguous  
> HYPHEN-MINUS
> instead.  At least until HYPHEN is supported more widely.

OK, then for my applications I map the glyph from codepoint x2010 to  
x2d.

Thanks,

Patrick



From taco at elvenkind.com  Tue Sep 29 15:41:02 2009
From: taco at elvenkind.com (Taco Hoekwater)
Date: Tue, 29 Sep 2009 15:41:02 +0200
Subject: [luatex] Hyphenchar
In-Reply-To: <106EFA99-7507-4A4E-A38F-9FE1C8C8C76E@gundla.ch>
References: <59C28E4A-6EA9-4E9D-B6D8-D6FA6A70AE3B@gundla.ch>	<20090929130712.GJ7756@phare.normalesup.org>
	<106EFA99-7507-4A4E-A38F-9FE1C8C8C76E@gundla.ch>
Message-ID: <4AC20E6E.5050004@elvenkind.com>


Hi,

Patrick Gundlach wrote:
> 
>>  As a matter of principle, you're right, the correct Unicode character is
>> U+2010 HYPHEN, but it's very poorly supported in actual fonts even if
>> that
>> would be trivial, so it makes sense to use the formally ambiguous
>> HYPHEN-MINUS
>> instead.  At least until HYPHEN is supported more widely.
> 
> OK, then for my applications I map the glyph from codepoint x2010 to x2d.

To answer the original question: the character that luatex inserts is
configurable (per language, just like \hyphenation and \patterns) via
the primitive \prehyphenchar, which just happens to default to `\- for
backward compatibility (see section 6.4 in the manual for the details).

Best wishes,
Taco

From patrick at gundla.ch  Wed Sep 30 17:30:26 2009
From: patrick at gundla.ch (Patrick Gundlach)
Date: Wed, 30 Sep 2009 17:30:26 +0200
Subject: [luatex] font.fonts error "error: attempt to index a thread value"
Message-ID: <5569CAC0-F292-41CD-AB49-2070E6171AE7@gundla.ch>

Hi,

I know this is a very vague question:

Sometimes (while going through the node list on a pre_linebreak_filter  
on a glue item) I get an error when using font.fonts[x] or font.getfont 
(x). The fonts are defined by using font.define(f) (f is a table that  
is constructed from the fontloader lib similar to the page on the  
bluwiki). The error I get is:

error: attempt to index a thread value

Does anyone by chance have an idea where to start looking? I know I  
have to make a minimal example, but perhaps somebody can tell me from  
the error message.

Patrick


From taco at elvenkind.com  Wed Sep 30 18:17:33 2009
From: taco at elvenkind.com (Taco Hoekwater)
Date: Wed, 30 Sep 2009 18:17:33 +0200
Subject: [luatex] font.fonts error "error: attempt to index a thread
	value"
In-Reply-To: <5569CAC0-F292-41CD-AB49-2070E6171AE7@gundla.ch>
References: <5569CAC0-F292-41CD-AB49-2070E6171AE7@gundla.ch>
Message-ID: <4AC3849D.1020009@elvenkind.com>

Patrick Gundlach wrote:
> Hi,
> 
> I know this is a very vague question:
> 
> Sometimes (while going through the node list on a pre_linebreak_filter 
> on a glue item) I get an error when using font.fonts[x] or 
> font.getfont(x). The fonts are defined by using font.define(f) (f is a 
> table that is constructed from the fontloader lib similar to the page on 
> the bluwiki). The error I get is:
> 
> error: attempt to index a thread value

> Does anyone by chance have an idea where to start looking?

Assuming you are not using lua threads yourself, this is most likely
a case of uninitialized memory (luatex itself doesn't use threads at
all). I really need a test file from you, I doubt you can do anything
useful yourself without actual executable debugging.

Best wishes,
Taco

From patrick at gundla.ch  Wed Sep 30 20:08:32 2009
From: patrick at gundla.ch (Patrick Gundlach)
Date: Wed, 30 Sep 2009 20:08:32 +0200
Subject: [luatex] strategy for margin kerning and pre_linebreak_filter?
Message-ID: <2581D31C-67F4-4D8F-8C10-A5E3F6C0907D@gundla.ch>

Hello,

I have a question concerning margin kerning (\pdfprotrudechars) and  
pre_linebreak_filter.

When I define a font with right_protruding (\rpcode, see font table in  
manual p. 130) and using it as a TeX font, margin kerning is ok.

------------------------ example 1, works ok -------------------------
\directlua{
  local f = define_font("texgyreheros-regular.otf", "12pt")  -- sets  
right_protruding to a value > 0
  local num = font.define(f)
  tex.definefont("heros",num)
}
\heros
long paragraph with margin kerning (works fine)
----------------------------------------------------------------------



------------------------ example 2, does not work as expected --------
\directlua{
  local f = define_font("texgyreheros-regular.otf", "12pt")  -- same  
as above, sets rpcode > 0
  local num = font.define(f)

-- and now in pre_linebreak_filter I set for all glyphs the font code  
to the num above
}

\tenrm % some dummy font without rpcode
% no font switch to \heros!
long paragraph, the hyphen does not get into the margin! But all other  
glyphs I set the \rpcode for do.
----------------------------------------------------------------------

So the problem seems to be that when hyphenating the second paragraph,  
the hyphen will stick inside the paragraph. Am I missing something  
here? See also tracker item #274

Patrick



