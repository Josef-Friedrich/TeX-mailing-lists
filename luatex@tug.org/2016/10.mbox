From jorssen.leraincy at free.fr  Mon Oct  3 13:08:44 2016
From: jorssen.leraincy at free.fr (Christophe Jorssen)
Date: Mon, 3 Oct 2016 13:08:44 +0200
Subject: [luatex] A few luatex related questions on tex.stackexchange.com
Message-ID: <CAN1usO0AwSEEaR7Nh9iqk+eP6QS=y7=PgEJitsHKHjE=A1AV1g@mail.gmail.com>

Hello all,

First of all: many thanks to the luatex team for all their efforts to
get luatex version up to 1.0.0.

luatex is now my default engine. I'm slowly learning luatex specific
thanks to the manual, the luatex wiki and
http://tex.stackexchange.com/ Q&A site.

I've asked there some questions that remains unanswered. I was
thinking that maybe there are some experts here kindly wishing to
spend some spare time to answer them. So please forgive my
"crossposting":

* Select a font via luaotfload on lua side :
http://tex.stackexchange.com/q/330839/8425

A bounty is pending for 23 hours for this question.

* Can I downsize lua tables generated by luaotfload?
http://tex.stackexchange.com/q/329935/8425

A feature request for luaotfload and/or context fontloader?

* How can I use attributes to change color?
http://tex.stackexchange.com/q/326732/8425

For this last question, I think that I can use the
post_linebreak_filter callback and insert a pdf_litteral node whenever
a change of attribute is detected. But I don't undersand how I can
insert a new node (all my experiments with node.next or node.prev or
node.slide did not work, based on trial and error: a not so good
programming practice I must confess).

Many thanks for you time.

Best regards

-- 
Christophe

From pragma at wxs.nl  Mon Oct  3 15:11:49 2016
From: pragma at wxs.nl (Hans Hagen)
Date: Mon, 3 Oct 2016 15:11:49 +0200
Subject: [luatex] A few luatex related questions on tex.stackexchange.com
In-Reply-To: <CAN1usO0AwSEEaR7Nh9iqk+eP6QS=y7=PgEJitsHKHjE=A1AV1g@mail.gmail.com>
References: <CAN1usO0AwSEEaR7Nh9iqk+eP6QS=y7=PgEJitsHKHjE=A1AV1g@mail.gmail.com>
Message-ID: <340c0110-977c-3ccf-2083-2fc51f43f328@wxs.nl>

On 10/3/2016 1:08 PM, Christophe Jorssen wrote:
> Hello all,
>
> First of all: many thanks to the luatex team for all their efforts to
> get luatex version up to 1.0.0.
>
> luatex is now my default engine. I'm slowly learning luatex specific
> thanks to the manual, the luatex wiki and
> http://tex.stackexchange.com/ Q&A site.
>
> I've asked there some questions that remains unanswered. I was
> thinking that maybe there are some experts here kindly wishing to
> spend some spare time to answer them. So please forgive my
> "crossposting":
>
> * Select a font via luaotfload on lua side :
> http://tex.stackexchange.com/q/330839/8425

this is not a question for this list as it's also macro package 
dependent; best ask this on a luaotfload related list (or wait for an 
answer on se)

> A bounty is pending for 23 hours for this question.
>
> * Can I downsize lua tables generated by luaotfload?
> http://tex.stackexchange.com/q/329935/8425

you can hook in code that does such things but for sure it will break 
something if you use the same font otherwise; there is nothing to gain 
anyway as loading a cached table is pretty fast (esp compared to other 
things done in an average document); also, these tables are already 
optimized quite well

> A feature request for luaotfload and/or context fontloader?
>
> * How can I use attributes to change color?
> http://tex.stackexchange.com/q/326732/8425

this is macro package specific and as the latex loader is modelled after 
xetex i suppose something is provided (context doesn't do it that way)

> For this last question, I think that I can use the
> post_linebreak_filter callback and insert a pdf_litteral node whenever
> a change of attribute is detected. But I don't undersand how I can
> insert a new node (all my experiments with node.next or node.prev or
> node.slide did not work, based on trial and error: a not so good
> programming practice I must confess).

you probably need to use some kind of plug in system that your macro 
package provides

Hans


-----------------------------------------------------------------
                                           Hans Hagen | PRAGMA ADE
               Ridderstraat 27 | 8061 GH Hasselt | The Netherlands
        tel: 038 477 53 69 | www.pragma-ade.nl | www.pragma-pod.nl
-----------------------------------------------------------------

From antonis.tsolomitis at gmail.com  Fri Oct  7 13:39:19 2016
From: antonis.tsolomitis at gmail.com (Antonis Tsolomitis)
Date: Fri, 7 Oct 2016 14:39:19 +0300
Subject: [luatex] question about ScriptPercentScaleDown
Message-ID: <d698c646-a812-27ba-6c36-e721d0a908f1@gmail.com>


Hello,

I am not sure if this is the correct list for such a question... if not, 
I would be glad if
someone can direct me to the correct list.

I am developing a Math Table for a font (to be released with OFL 
license) and I have a
difficulty with the parameters ScriptPercentScaleDown and 
ScriptScriptPercentScaleDown.

If I do not set any point size in the documentclass (so it defaults to 
10pt) everything works fine.
But if I set the 12pt option, lualatex (as well as xelatex) ignore the 
ScriptPercentScaleDown and ScriptScriptPercentScaleDown
parameters and default to 80% and 60% respectively.

Do I miss something here or have I hit a bug..., maybe?

Thanks for any hint,

Antonis.


From herbs at wideopenwest.com  Mon Oct 10 17:50:16 2016
From: herbs at wideopenwest.com (Herbert Schulz)
Date: Mon, 10 Oct 2016 10:50:16 -0500
Subject: [luatex] Question about LuaTeX 1.0.0
Message-ID: <53CF1A91-DFDD-46BA-AA3B-8C89D4A8D0DC@wideopenwest.com>

Howdy,

I have had multiple font problems using fontspec and lualatex under LuaTeX 0.95.0, supplied with TeX Live 2016; e.g., major problems using the Lucida Bright fonts. Have these problems been addressed in LuaTeX 1.0.0?

If so, is there a repository, to be used with tlmgr, that will update my 0.95.0 to 1.0.0 on my Mac using x86_64-darwin binaries?

Good Luck,

Herb Schulz
(herbs at wideopenwest dot com)







From martin at oneiros.de  Mon Oct 10 23:10:35 2016
From: martin at oneiros.de (=?UTF-8?Q?Martin_Schr=C3=B6der?=)
Date: Mon, 10 Oct 2016 23:10:35 +0200
Subject: [luatex] Question about LuaTeX 1.0.0
In-Reply-To: <53CF1A91-DFDD-46BA-AA3B-8C89D4A8D0DC@wideopenwest.com>
References: <53CF1A91-DFDD-46BA-AA3B-8C89D4A8D0DC@wideopenwest.com>
Message-ID: <CAP7DCDdbemTmxA26xsujwqoVPKtHruLPctuvvNbYv9YR3WaicA@mail.gmail.com>

2016-10-10 17:50 GMT+02:00 Herbert Schulz <herbs at wideopenwest.com>:
> If so, is there a repository, to be used with tlmgr, that will update my 0.95.0 to 1.0.0 on my Mac using x86_64-darwin binaries?

At ConTeXt 2016 a context repository (with LuaTeX binaries) was
tested. Mojca knows more...

Best
   Martin

From mojca.miklavec.lists at gmail.com  Mon Oct 10 23:18:44 2016
From: mojca.miklavec.lists at gmail.com (Mojca Miklavec)
Date: Mon, 10 Oct 2016 23:18:44 +0200
Subject: [luatex] Question about LuaTeX 1.0.0
In-Reply-To: <CAP7DCDdbemTmxA26xsujwqoVPKtHruLPctuvvNbYv9YR3WaicA@mail.gmail.com>
References: <53CF1A91-DFDD-46BA-AA3B-8C89D4A8D0DC@wideopenwest.com>
 <CAP7DCDdbemTmxA26xsujwqoVPKtHruLPctuvvNbYv9YR3WaicA@mail.gmail.com>
Message-ID: <CALBOmsaqUmBHdtJdb4hUAcMn7ufAaYqdwyTYzHo9WKavuNyF_w@mail.gmail.com>

On 10 October 2016 at 23:10, Martin Schr?der wrote:
> 2016-10-10 17:50 GMT+02:00 Herbert Schulz:
>> If so, is there a repository, to be used with tlmgr, that will update my 0.95.0 to 1.0.0 on my Mac using x86_64-darwin binaries?
>
> At ConTeXt 2016 a context repository (with LuaTeX binaries) was
> tested. Mojca knows more...

A testing repository is here:
- http://texlive.contextgarden.net/

I can easily add more platforms (if the repository turns out to work
well in the first place :), but 64-bit Darwin is there already.

There was absolutely zero testing done on Windows, so I would be
surprised if it worked out of the box. Darwin worked for me after I
managed to convince tlmgr to force upgrade.

I didn't automate any upgrades yet.

Mojca


From preining at logic.at  Tue Oct 11 03:18:51 2016
From: preining at logic.at (Norbert Preining)
Date: Tue, 11 Oct 2016 10:18:51 +0900
Subject: [luatex] Question about LuaTeX 1.0.0
In-Reply-To: <CALBOmsaqUmBHdtJdb4hUAcMn7ufAaYqdwyTYzHo9WKavuNyF_w@mail.gmail.com>
References: <53CF1A91-DFDD-46BA-AA3B-8C89D4A8D0DC@wideopenwest.com>
 <CAP7DCDdbemTmxA26xsujwqoVPKtHruLPctuvvNbYv9YR3WaicA@mail.gmail.com>
 <CALBOmsaqUmBHdtJdb4hUAcMn7ufAaYqdwyTYzHo9WKavuNyF_w@mail.gmail.com>
Message-ID: <20161011011851.5t47gc2reunua3w3@wienerschnitzel>

Hi Mojca,

> - http://texlive.contextgarden.net/

You might want to sign the repo and publish your public key ...
tl-update-tlnet normally cares for that already if you set some
env-vars which key should be used.

Norbert

--
PREINING Norbert + TeX Live & Debian Developer + http://www.preining.info
GPG: 0x860CDC13    fp: F7D8 A928 26E3 16A1 9FA0  ACF0 6CAC A448 860C DC13

From joseph.wright at morningstar2.co.uk  Thu Oct 13 08:33:19 2016
From: joseph.wright at morningstar2.co.uk (Joseph Wright)
Date: Thu, 13 Oct 2016 07:33:19 +0100
Subject: [luatex] LuaTeX v1: Two questions from testing
Message-ID: <44d3e7c4-0888-46d6-c14f-001b31985627@morningstar2.co.uk>

Hello,

Testing LuaTeX v1, there are relatively few changes from v0.95. However,
I've found one logging (?) change and one hyphenation change I didn't
expect. With example

    \hsize 15em
    This is a supercalifragilisticexpialidocious%
     \hbox to 1em{}
     sentence.
    \tracingall
    \belowdisplayskip=0pt %
    $$
    y = mx + c
    $$
     \bye

The results are different from pdfTeX in two ways. The empty \hbox does
not prevent hyphenation, which it has to-date (so this is not a result
of other hyphenation changes). The log also lacks the zero skip after
the display.

It's not clear to me if either of these changes is deliberate: what's
the situation?

Josph

From joseph.wright at morningstar2.co.uk  Thu Oct 13 09:01:12 2016
From: joseph.wright at morningstar2.co.uk (Joseph Wright)
Date: Thu, 13 Oct 2016 08:01:12 +0100
Subject: [luatex] LuaTeX v1: Two questions from testing
In-Reply-To: <44d3e7c4-0888-46d6-c14f-001b31985627@morningstar2.co.uk>
References: <44d3e7c4-0888-46d6-c14f-001b31985627@morningstar2.co.uk>
Message-ID: <8fcd9f92-8302-0aac-4260-96134d16b582@morningstar2.co.uk>

On 13/10/2016 07:33, Joseph Wright wrote:
> Hello,
> 
> Testing LuaTeX v1, there are relatively few changes from v0.95. However,
> I've found one logging (?) change and one hyphenation change I didn't
> expect. With example
> 
>     \hsize 15em
>     This is a supercalifragilisticexpialidocious%
>      \hbox to 1em{}
>      sentence.
>     \tracingall
>     \belowdisplayskip=0pt %
>     $$
>     y = mx + c
>     $$
>      \bye
> 
> The results are different from pdfTeX in two ways. The empty \hbox does
> not prevent hyphenation, which it has to-date (so this is not a result
> of other hyphenation changes). The log also lacks the zero skip after
> the display.
> 
> It's not clear to me if either of these changes is deliberate: what's
> the situation?
> 
> Josph

Also, I assume that the fact the following doesn't show a \discretionary
is deliberate:

    \tracingall
    119-139
     \bye

Joseph


From joseph.wright at morningstar2.co.uk  Thu Oct 13 10:08:28 2016
From: joseph.wright at morningstar2.co.uk (Joseph Wright)
Date: Thu, 13 Oct 2016 09:08:28 +0100
Subject: [luatex] LuaTeX v1: Two questions from testing
In-Reply-To: <8fcd9f92-8302-0aac-4260-96134d16b582@morningstar2.co.uk>
References: <44d3e7c4-0888-46d6-c14f-001b31985627@morningstar2.co.uk>
 <8fcd9f92-8302-0aac-4260-96134d16b582@morningstar2.co.uk>
Message-ID: <9bd40b05-901f-1478-4a9d-35a17f5c60b4@morningstar2.co.uk>

On 13/10/2016 08:01, Joseph Wright wrote:
> On 13/10/2016 07:33, Joseph Wright wrote:
>> Hello,
>>
>> Testing LuaTeX v1, there are relatively few changes from v0.95. However,
>> I've found one logging (?) change and one hyphenation change I didn't
>> expect. With example
>>
>>     \hsize 15em
>>     This is a supercalifragilisticexpialidocious%
>>      \hbox to 1em{}
>>      sentence.
>>     \tracingall
>>     \belowdisplayskip=0pt %
>>     $$
>>     y = mx + c
>>     $$
>>      \bye
>>
>> The results are different from pdfTeX in two ways. The empty \hbox does
>> not prevent hyphenation, which it has to-date (so this is not a result
>> of other hyphenation changes). The log also lacks the zero skip after
>> the display.
>>
>> It's not clear to me if either of these changes is deliberate: what's
>> the situation?
>>
>> Josph
> 
> Also, I assume that the fact the following doesn't show a \discretionary
> is deliberate:
> 
>     \tracingall
>     119-139
>      \bye
> 
> Joseph

BTW, my main concern with these is to know if it's deliberate: I'm well
aware that the log for LuaTeX is different from that for pdfTeX :)

Joseph


From joseph.wright at morningstar2.co.uk  Thu Oct 13 10:42:29 2016
From: joseph.wright at morningstar2.co.uk (Joseph Wright)
Date: Thu, 13 Oct 2016 09:42:29 +0100
Subject: [luatex] LuaTeX v1: Two questions from testing
In-Reply-To: <8fcd9f92-8302-0aac-4260-96134d16b582@morningstar2.co.uk>
References: <44d3e7c4-0888-46d6-c14f-001b31985627@morningstar2.co.uk>
 <8fcd9f92-8302-0aac-4260-96134d16b582@morningstar2.co.uk>
Message-ID: <875da70a-9910-cbc5-8225-baafa7fb5643@morningstar2.co.uk>

On 13/10/2016 08:01, Joseph Wright wrote:
> On 13/10/2016 07:33, Joseph Wright wrote:
>> Hello,
>>
>> Testing LuaTeX v1, there are relatively few changes from v0.95. However,
>> I've found one logging (?) change and one hyphenation change I didn't
>> expect. With example
>>
>>     \hsize 15em
>>     This is a supercalifragilisticexpialidocious%
>>      \hbox to 1em{}
>>      sentence.
>>     \tracingall
>>     \belowdisplayskip=0pt %
>>     $$
>>     y = mx + c
>>     $$
>>      \bye
>>
>> The results are different from pdfTeX in two ways. The empty \hbox does
>> not prevent hyphenation, which it has to-date (so this is not a result
>> of other hyphenation changes). The log also lacks the zero skip after
>> the display.
>>
>> It's not clear to me if either of these changes is deliberate: what's
>> the situation?
>>
>> Josph
> 
> Also, I assume that the fact the following doesn't show a \discretionary
> is deliberate:
> 
>     \tracingall
>     119-139
>      \bye
> 
> Joseph

Another oddity, perhaps related:

    \parindent0pt \hsize=0.1cm \relax
    12-34-56-78-12-34-56-78 \par \bye

gives unexpected lack of hyphenation for the first "-".

Joseph


From pragma at wxs.nl  Thu Oct 13 10:51:21 2016
From: pragma at wxs.nl (Hans Hagen)
Date: Thu, 13 Oct 2016 10:51:21 +0200
Subject: [luatex] LuaTeX v1: Two questions from testing
In-Reply-To: <44d3e7c4-0888-46d6-c14f-001b31985627@morningstar2.co.uk>
References: <44d3e7c4-0888-46d6-c14f-001b31985627@morningstar2.co.uk>
Message-ID: <35891b34-e411-01aa-496e-f84d02fa5eee@wxs.nl>

On 10/13/2016 8:33 AM, Joseph Wright wrote:
> Hello,
>
> Testing LuaTeX v1, there are relatively few changes from v0.95. However,
> I've found one logging (?) change and one hyphenation change I didn't
> expect. With example
>
>     \hsize 15em
>     This is a supercalifragilisticexpialidocious%
>      \hbox to 1em{}
>      sentence.
>     \tracingall
>     \belowdisplayskip=0pt %
>     $$
>     y = mx + c
>     $$
>      \bye
>
> The results are different from pdfTeX in two ways. The empty \hbox does
> not prevent hyphenation, which it has to-date (so this is not a result
> of other hyphenation changes). The log also lacks the zero skip after
> the display.
>
> It's not clear to me if either of these changes is deliberate: what's
> the situation?

The criteria for not hyphenating are somewhat arbitrary esp since 
engines started adding features (literals, whatsits, etc). So, why stop 
at a whatsit that in fact could be a box (ximage) but not at a hbox and 
what about rules (ximages are no longer whatsits but a kind of rule). So 
this is what happens now:

\hyphenationbounds:

0 : not strict
1 : strict start
2 : strict end
3 : strict start and strict end

So the rules are (i'll add the next info to the manual):

start:

boundary  : yes when wordboundary
hlist     : when hyphenationbounds 1 or 3
vlist     : when hyphenationbounds 1 or 3
rule      : when hyphenationbounds 1 or 3
dir       : when hyphenationbounds 1 or 3
whatsit   : when hyphenationbounds 1 or 3
glue      : yes
math      : skipped
glyph     : exhyphenchar (one only) : yes (so no -- ---)
otherwise : yes

end:

boundary  : yes
glyph     : yes when different language
glue      : yes
penalty   : yes
kern      : yes when not italic (for some historic reason)
hlist     : when hyphenationbounds 2 or 3
vlist     : when hyphenationbounds 2 or 3
rule      : when hyphenationbounds 2 or 3
dir       : when hyphenationbounds 2 or 3
whatsit   : when hyphenationbounds 2 or 3
ins       : when hyphenationbounds 2 or 3
adjust    : when hyphenationbounds 2 or 3

So you can decide to default to \hyphenationbounds=3

Hans

-----------------------------------------------------------------
                                           Hans Hagen | PRAGMA ADE
               Ridderstraat 27 | 8061 GH Hasselt | The Netherlands
        tel: 038 477 53 69 | www.pragma-ade.nl | www.pragma-pod.nl
-----------------------------------------------------------------

From pragma at wxs.nl  Thu Oct 13 10:58:18 2016
From: pragma at wxs.nl (Hans Hagen)
Date: Thu, 13 Oct 2016 10:58:18 +0200
Subject: [luatex] LuaTeX v1: Two questions from testing
In-Reply-To: <8fcd9f92-8302-0aac-4260-96134d16b582@morningstar2.co.uk>
References: <44d3e7c4-0888-46d6-c14f-001b31985627@morningstar2.co.uk>
 <8fcd9f92-8302-0aac-4260-96134d16b582@morningstar2.co.uk>
Message-ID: <5796c01f-361e-a7ab-a425-25619dffae77@wxs.nl>

On 10/13/2016 9:01 AM, Joseph Wright wrote:
> On 13/10/2016 07:33, Joseph Wright wrote:
>> Hello,
>>
>> Testing LuaTeX v1, there are relatively few changes from v0.95. However,
>> I've found one logging (?) change and one hyphenation change I didn't
>> expect. With example
>>
>>     \hsize 15em
>>     This is a supercalifragilisticexpialidocious%
>>      \hbox to 1em{}
>>      sentence.
>>     \tracingall
>>     \belowdisplayskip=0pt %
>>     $$
>>     y = mx + c
>>     $$
>>      \bye
>>
>> The results are different from pdfTeX in two ways. The empty \hbox does
>> not prevent hyphenation, which it has to-date (so this is not a result
>> of other hyphenation changes). The log also lacks the zero skip after
>> the display.
>>
>> It's not clear to me if either of these changes is deliberate: what's
>> the situation?
>>
>> Josph
>
> Also, I assume that the fact the following doesn't show a \discretionary
> is deliberate:
>
>     \tracingall
>     119-139
>      \bye

\hjcode`1=`1 \hjcode`2=`1 \hjcode`3=`1 \hjcode`4=`1

\hsize1mm 12-34 \par

btw, disc nodes are now logged differently (pre,post,replace and penalty)

-----------------------------------------------------------------
                                           Hans Hagen | PRAGMA ADE
               Ridderstraat 27 | 8061 GH Hasselt | The Netherlands
        tel: 038 477 53 69 | www.pragma-ade.nl | www.pragma-pod.nl
-----------------------------------------------------------------

From joseph.wright at morningstar2.co.uk  Thu Oct 13 11:06:16 2016
From: joseph.wright at morningstar2.co.uk (Joseph Wright)
Date: Thu, 13 Oct 2016 10:06:16 +0100
Subject: [luatex] LuaTeX v1: Two questions from testing
In-Reply-To: <5796c01f-361e-a7ab-a425-25619dffae77@wxs.nl>
References: <44d3e7c4-0888-46d6-c14f-001b31985627@morningstar2.co.uk>
 <8fcd9f92-8302-0aac-4260-96134d16b582@morningstar2.co.uk>
 <5796c01f-361e-a7ab-a425-25619dffae77@wxs.nl>
Message-ID: <e67da85b-fd53-e04e-40fc-02a31fa59800@morningstar2.co.uk>

On 13/10/2016 09:58, Hans Hagen wrote:
> btw, disc nodes are now logged differently (pre,post,replace and penalty)

Indeed, but this can largely be normalised to look the same as TeX90 (so
for cross-engine testing that's OK).

Joseph


From joseph.wright at morningstar2.co.uk  Thu Oct 13 11:10:43 2016
From: joseph.wright at morningstar2.co.uk (Joseph Wright)
Date: Thu, 13 Oct 2016 10:10:43 +0100
Subject: [luatex] LuaTeX v1: Two questions from testing
In-Reply-To: <35891b34-e411-01aa-496e-f84d02fa5eee@wxs.nl>
References: <44d3e7c4-0888-46d6-c14f-001b31985627@morningstar2.co.uk>
 <35891b34-e411-01aa-496e-f84d02fa5eee@wxs.nl>
Message-ID: <e836ec4b-c602-39c9-b391-797c47217c8b@morningstar2.co.uk>

On 13/10/2016 09:51, Hans Hagen wrote:
> On 10/13/2016 8:33 AM, Joseph Wright wrote:
>> Hello,
>>
>> Testing LuaTeX v1, there are relatively few changes from v0.95. However,
>> I've found one logging (?) change and one hyphenation change I didn't
>> expect. With example
>>
>>     \hsize 15em
>>     This is a supercalifragilisticexpialidocious%
>>      \hbox to 1em{}
>>      sentence.
>>     \tracingall
>>     \belowdisplayskip=0pt %
>>     $$
>>     y = mx + c
>>     $$
>>      \bye
>>
>> The results are different from pdfTeX in two ways. The empty \hbox does
>> not prevent hyphenation, which it has to-date (so this is not a result
>> of other hyphenation changes). The log also lacks the zero skip after
>> the display.
>>
>> It's not clear to me if either of these changes is deliberate: what's
>> the situation?
> 
> The criteria for not hyphenating are somewhat arbitrary esp since
> engines started adding features (literals, whatsits, etc). So, why stop
> at a whatsit that in fact could be a box (ximage) but not at a hbox and
> what about rules (ximages are no longer whatsits but a kind of rule). So
> this is what happens now:
> 
> \hyphenationbounds:
> 
> 0 : not strict
> 1 : strict start
> 2 : strict end
> 3 : strict start and strict end
> 
> So the rules are (i'll add the next info to the manual):
> 
> start:
> 
> boundary  : yes when wordboundary
> hlist     : when hyphenationbounds 1 or 3
> vlist     : when hyphenationbounds 1 or 3
> rule      : when hyphenationbounds 1 or 3
> dir       : when hyphenationbounds 1 or 3
> whatsit   : when hyphenationbounds 1 or 3
> glue      : yes
> math      : skipped
> glyph     : exhyphenchar (one only) : yes (so no -- ---)
> otherwise : yes
> 
> end:
> 
> boundary  : yes
> glyph     : yes when different language
> glue      : yes
> penalty   : yes
> kern      : yes when not italic (for some historic reason)
> hlist     : when hyphenationbounds 2 or 3
> vlist     : when hyphenationbounds 2 or 3
> rule      : when hyphenationbounds 2 or 3
> dir       : when hyphenationbounds 2 or 3
> whatsit   : when hyphenationbounds 2 or 3
> ins       : when hyphenationbounds 2 or 3
> adjust    : when hyphenationbounds 2 or 3
> 
> So you can decide to default to \hyphenationbounds=3
> 
> Hans

Thanks: works as you suggest.

Joseph


From mingranina at gmail.com  Tue Oct 18 12:05:24 2016
From: mingranina at gmail.com (Mingranina Gingranina)
Date: Tue, 18 Oct 2016 13:35:24 +0330
Subject: [luatex] Documentation about fonts.handlers.otf.addfeature, etc.
Message-ID: <CAEEu-TjF5y9BFP3b1-+T=ygRw9iPMvPY2JrbMfODvjaY-0tA_g@mail.gmail.com>

 Dear List,
 Hello,

 Sorry if this isn't the right place to post this, but wasn't sure.
The following commands are used in some of the examples of Lua(La)TeX
on the net:

 fonts.handlers.otf.addfeature, fonts.protrusions.vectors,
fonts.expansions.classes, etc.

 I searched too much to find some kind of documentation about them but
I couldn't find anything

 Are there any documentation about these commands?

 Any help would be gratefully appreciated.

 Thanks,
 Mingranina

From deepak.jois at gmail.com  Thu Oct 20 08:25:49 2016
From: deepak.jois at gmail.com (Deepak Jois)
Date: Thu, 20 Oct 2016 11:55:49 +0530
Subject: [luatex] Building a PDF with Lua code, without a TeX stub
Message-ID: <CABR1-XYmZs--Rymr3-03QDcb==1zj4UuVrxjUdN_+fr14tWf7Q@mail.gmail.com>

Hi
I would like to invoke the LuaTeX interpreter with a Lua file which
does the node building etc, and then calls something like
tex.shipout(), which can generate a PDF. I am aware of the --lua flag,
but the file passed to that flag executes before the TeX engine is
fully initialised. So that?s not what I am looking for

For example, lets say I have a Lua file with code:

<code>
-- Page settings
tex.pagewidth = "210mm"
tex.pageheight = "297mm"
tex.hsize = "210mm"

-- Set the paragraph indentation
tex.parindent = "20pt"

tex.sprint("hello world")
</code>

and I want to generate a PDF from it directly using the luatex
command. I cannot seem to do that right now, and I require a stub TeX
file like this.

<code>
\outputmode=1 % this could be avoided if I pass --output-format=pdf
\directlua{dofile('code.lua')}
\bye
</code>

Questions:

- Is there a way to avoid creating the stub TeX file?

- If not, is it something worth adding (or possible to add) as a
feature to the LuaTeX program?

Deepak


From patrick at gundla.ch  Thu Oct 20 08:47:50 2016
From: patrick at gundla.ch (Patrick Gundlach)
Date: Thu, 20 Oct 2016 08:47:50 +0200
Subject: [luatex] Building a PDF with Lua code, without a TeX stub
In-Reply-To: <CABR1-XYmZs--Rymr3-03QDcb==1zj4UuVrxjUdN_+fr14tWf7Q@mail.gmail.com>
References: <CABR1-XYmZs--Rymr3-03QDcb==1zj4UuVrxjUdN_+fr14tWf7Q@mail.gmail.com>
Message-ID: <DABB01D7-82CD-409B-8716-7A844D59ECD4@gundla.ch>

Hello Deepak,

as far as I know, there is no such thing as a "Lua only" mode with TeX capabilities enabled (but I can't give an authoritative answer). I have the same issue and my stub is the following

https://github.com/speedata/publisher/blob/develop/src/tex/publisher.tex

---------
\catcode`\{=1
\catcode`\}=2
\directlua{require("filename")}
\end
---------

I use LuaTeX 0.79 with luatex --ini ... and set the output mode in a Lua file.

While I'd really appreciate a "no TeX mode", I don't have any problems with this setup. It works just fine and never gets in my way.

Patrick





From luigi.scarso at gmail.com  Thu Oct 20 08:53:00 2016
From: luigi.scarso at gmail.com (luigi scarso)
Date: Thu, 20 Oct 2016 08:53:00 +0200
Subject: [luatex] Building a PDF with Lua code, without a TeX stub
In-Reply-To: <CABR1-XYmZs--Rymr3-03QDcb==1zj4UuVrxjUdN_+fr14tWf7Q@mail.gmail.com>
References: <CABR1-XYmZs--Rymr3-03QDcb==1zj4UuVrxjUdN_+fr14tWf7Q@mail.gmail.com>
Message-ID: <CAG5iGsA=Shwv=MEQBbFwPnBqJ6MmXnmvZMAC6R2LcdPdts=8Pw@mail.gmail.com>

On Thu, Oct 20, 2016 at 8:25 AM, Deepak Jois <deepak.jois at gmail.com> wrote:
> Hi
> I would like to invoke the LuaTeX interpreter with a Lua file which
> does the node building etc, and then calls something like
> tex.shipout(), which can generate a PDF. I am aware of the --lua flag,
> but the file passed to that flag executes before the TeX engine is
> fully initialised. So that?s not what I am looking for
>
> For example, lets say I have a Lua file with code:
>
> <code>
> -- Page settings
> tex.pagewidth = "210mm"
> tex.pageheight = "297mm"
> tex.hsize = "210mm"
>
> -- Set the paragraph indentation
> tex.parindent = "20pt"
>
> tex.sprint("hello world")
> </code>
>
> and I want to generate a PDF from it directly using the luatex
> command. I cannot seem to do that right now, and I require a stub TeX
> file like this.
>
> <code>
> \outputmode=1 % this could be avoided if I pass --output-format=pdf
> \directlua{dofile('code.lua')}
> \bye
> </code>
>
> Questions:
>
> - Is there a way to avoid creating the stub TeX file?
>
> - If not, is it something worth adding (or possible to add) as a
> feature to the LuaTeX program?
>
> Deepak
>
you can consider to build your own format and run it by a wrapper
as done in context in the minimals

$ cat z.lua
for k,v in pairs(_G) do print(k,v) end

$ mtxrun --script plain z.lua

mtx-plain       | running command 'luatex --fmt=luatex-plain  "z.lua"'
_G table: 0x20f4390
status table: 0x21a38f0
loadfile function: 0x50dda4
rawlen function: 0x718c9c
tostring function: 0x719886
font table: 0x21a40a0
coroutine table: 0x20f60d0
collectgarbage function: 0x718dd4
lua table: 0x2104f10
string table: 0x20f7c40
mbox table: 0x210ea60
print function: 0x718695
zlib table: 0x21601c0
arg table: 0x21b6c00
fontloader table: 0x2199f90
ltn12 table: 0x2128ab0
lpeg table: 0x20fd7b0
lfs table: 0x20fcc70
module function: 0x20f5ff0
load function: 0x71934c
io table: 0x20f6bb0
socket table: 0x20f7ce0
texio table: 0x21a12e0
tex table: 0x2145ad0
error function: 0x718a97
md5 table: 0x20fc700
ipairs function: 0x719117
profiler table: 0x20fd2d0
rawset function: 0x718d67
mplib table: 0x21a5bf0
rawequal function: 0x718c41
table: 0x20f4390
tonumber function: 0x718803
unicode table: 0x20f7710
getmetatable function: 0x718b29
epdf table: 0x21b1f60
require function: 0x20f6060
pairs function: 0x719068
rawget function: 0x718d0b
vf table: 0x21a5db0
_VERSION Lua 5.2
select function: 0x7195bb
setmetatable function: 0x718b8b
lang table: 0x21a4910
type function: 0x718ee0
callback table: 0x21a2370
debug table: 0x20f95e0
zip table: 0x20fbc80
texconfig table: 0x21b2b00
kpse table: 0x21050f0
dofile function: 0x50debd
next function: 0x719006
xpcall function: 0x7197cf
bit32 table: 0x20fc1c0
assert function: 0x719556
os table: 0x20f72a0
gzip table: 0x21607d0
package table: 0x20f4b80
pcall function: 0x719747
math table: 0x20f5bf0
table table: 0x20f68d0
mime table: 0x2106c90
pdfscanner table: 0x21b2a60

-- 
luigi


From mojca.miklavec.lists at gmail.com  Thu Oct 20 08:55:54 2016
From: mojca.miklavec.lists at gmail.com (Mojca Miklavec)
Date: Thu, 20 Oct 2016 08:55:54 +0200
Subject: [luatex] Building a PDF with Lua code, without a TeX stub
In-Reply-To: <CABR1-XYmZs--Rymr3-03QDcb==1zj4UuVrxjUdN_+fr14tWf7Q@mail.gmail.com>
References: <CABR1-XYmZs--Rymr3-03QDcb==1zj4UuVrxjUdN_+fr14tWf7Q@mail.gmail.com>
Message-ID: <CALBOmsbYV6gLzJotdZ_ZtTiX+JaTYq7cqbFLHGn+1=6z5xHBpg@mail.gmail.com>

On 20 October 2016 at 08:25, Deepak Jois wrote:
> Hi
> I would like to invoke the LuaTeX interpreter with a Lua file which
> does the node building etc, and then calls something like
> tex.shipout(), which can generate a PDF. I am aware of the --lua flag,
> but the file passed to that flag executes before the TeX engine is
> fully initialised. So that?s not what I am looking for
>
> For example, lets say I have a Lua file with code:
>
> <code>
> -- Page settings
> tex.pagewidth = "210mm"
> tex.pageheight = "297mm"
> tex.hsize = "210mm"
>
> -- Set the paragraph indentation
> tex.parindent = "20pt"
>
> tex.sprint("hello world")
> </code>
>
> and I want to generate a PDF from it directly using the luatex
> command.

Others will give you a more definitive answer, but this works out of
the box with
    context hello.cld

See for example:
- http://wiki.contextgarden.net/CLD
- http://www.pragma-ade.com/general/manuals/cld-mkiv.pdf

I'm sure there must be a way to switch to a different format (or at
lest it should not be to difficult to add that functionality in case
it's not there yet).

Mojca


From deepak.jois at gmail.com  Thu Oct 20 09:10:33 2016
From: deepak.jois at gmail.com (Deepak Jois)
Date: Thu, 20 Oct 2016 12:40:33 +0530
Subject: [luatex] Building a PDF with Lua code, without a TeX stub
In-Reply-To: <CAG5iGsA=Shwv=MEQBbFwPnBqJ6MmXnmvZMAC6R2LcdPdts=8Pw@mail.gmail.com>
References: <CABR1-XYmZs--Rymr3-03QDcb==1zj4UuVrxjUdN_+fr14tWf7Q@mail.gmail.com>
 <CAG5iGsA=Shwv=MEQBbFwPnBqJ6MmXnmvZMAC6R2LcdPdts=8Pw@mail.gmail.com>
Message-ID: <CABR1-Xb+75mU9f1iJ8PFNBnjfs4AoF2egXm_SkbX0ZssxuyVKg@mail.gmail.com>

On Thu, Oct 20, 2016 at 12:23 PM, luigi scarso <luigi.scarso at gmail.com> wrote:
> you can consider to build your own format and run it by a wrapper
> as done in context in the minimals

I have never used ConTeXt, so could you please elaborate on your answer.

Where can I find this custom format in the context source code. Is
there a path I can look in. I am looking at the context-mirror here:
https://bitbucket.org/phg/context-mirror/overview

From luigi.scarso at gmail.com  Thu Oct 20 09:32:16 2016
From: luigi.scarso at gmail.com (luigi scarso)
Date: Thu, 20 Oct 2016 09:32:16 +0200
Subject: [luatex] Building a PDF with Lua code, without a TeX stub
In-Reply-To: <CABR1-Xb+75mU9f1iJ8PFNBnjfs4AoF2egXm_SkbX0ZssxuyVKg@mail.gmail.com>
References: <CABR1-XYmZs--Rymr3-03QDcb==1zj4UuVrxjUdN_+fr14tWf7Q@mail.gmail.com>
 <CAG5iGsA=Shwv=MEQBbFwPnBqJ6MmXnmvZMAC6R2LcdPdts=8Pw@mail.gmail.com>
 <CABR1-Xb+75mU9f1iJ8PFNBnjfs4AoF2egXm_SkbX0ZssxuyVKg@mail.gmail.com>
Message-ID: <CAG5iGsC0A67DA7RQHB9hEWhGz-Bfu=HSHvTji7q4chiSNcw1mw@mail.gmail.com>

On Thu, Oct 20, 2016 at 9:10 AM, Deepak Jois <deepak.jois at gmail.com> wrote:
> On Thu, Oct 20, 2016 at 12:23 PM, luigi scarso <luigi.scarso at gmail.com> wrote:
>> you can consider to build your own format and run it by a wrapper
>> as done in context in the minimals
>
> I have never used ConTeXt, so could you please elaborate on your answer.
>
> Where can I find this custom format in the context source code. Is
> there a path I can look in. I am looking at the context-mirror here:
> https://bitbucket.org/phg/context-mirror/overview

http://wiki.contextgarden.net/ConTeXt_Standalone

-- 
luigi

From deepak.jois at gmail.com  Thu Oct 20 09:37:23 2016
From: deepak.jois at gmail.com (Deepak Jois)
Date: Thu, 20 Oct 2016 13:07:23 +0530
Subject: [luatex] Building a PDF with Lua code, without a TeX stub
In-Reply-To: <DABB01D7-82CD-409B-8716-7A844D59ECD4@gundla.ch>
References: <CABR1-XYmZs--Rymr3-03QDcb==1zj4UuVrxjUdN_+fr14tWf7Q@mail.gmail.com>
 <DABB01D7-82CD-409B-8716-7A844D59ECD4@gundla.ch>
Message-ID: <CABR1-XZTLMVqNfphgT1x3+0AhfmCzffhRf7sKynVhnyf4XxHHg@mail.gmail.com>

On Thu, Oct 20, 2016 at 12:17 PM, Patrick Gundlach <patrick at gundla.ch> wrote:
> While I'd really appreciate a "no TeX mode", I don't have any problems with this setup. It works just fine and never gets in my way.

I have a similar setup to yours now. In fact, I copied and adapted it
from that exact file you linked, so thank you!

I agree that there are no major issues with this setup. But for my
specific use case it does get a little bit inconvenient:

* I am trying to write a Lua module that can act as a higher level API
for the tex modules and functions exposed by LuaTeX.

* This module should be available to install by a standard Lua package
management mechanism like LuaRocks

* This module (and consumers of this module) should be able to use
other Lua modules packaged with LuaRocks as well.

All of the above can be achieved by some sort of wrapping. I have a
wrapper[1] that currently:

1. Creates a pre-init Lua file to load a package from LuaRocks. This
is because, just after that kpse is initialized and the the "require"
function starts using a different mechanism to search for packages

2. Creates a stub tex file in the local directory with the same name
as the lua file (for e.g. hello.lua -> hello.tex) and writes some stub
code with \directlua that calls the preloaded module in step 1 to do
some initializations, like augmenting the package loading mechanism[2]
to use LuaRocks before using kpse.

* Invokes the LuaTeX interpreter (with the --lua flag to call the
pre-init file) to call the stub tex file and generates the PDF.

It would be really nice to be just able to do something like:

> luatex --ini --some-other-flag hello.lua

and get a PDF :). Or maybe if we want to keep the functionality in a format:

> luatex --fmt=my-custom-format.fmt hello.lua

Although that would mean I still need a TEXMF tree somewhere to keep a
format file around.

Deepak


[1]: https://github.com/deepakjois/ufy/blob/master/bin/ufy

[2]: https://github.com/deepakjois/ufy/blob/master/src/ufy/init.lua#L4

From deepak.jois at gmail.com  Thu Oct 20 10:20:46 2016
From: deepak.jois at gmail.com (Deepak Jois)
Date: Thu, 20 Oct 2016 13:50:46 +0530
Subject: [luatex] Building a PDF with Lua code, without a TeX stub
In-Reply-To: <CAG5iGsA=Shwv=MEQBbFwPnBqJ6MmXnmvZMAC6R2LcdPdts=8Pw@mail.gmail.com>
References: <CABR1-XYmZs--Rymr3-03QDcb==1zj4UuVrxjUdN_+fr14tWf7Q@mail.gmail.com>
 <CAG5iGsA=Shwv=MEQBbFwPnBqJ6MmXnmvZMAC6R2LcdPdts=8Pw@mail.gmail.com>
Message-ID: <CABR1-XYzH=OdaON=z1xfsWgtUagLo_p7P4NUipbXLf8JBzJmCA@mail.gmail.com>

On Thu, Oct 20, 2016 at 12:23 PM, luigi scarso <luigi.scarso at gmail.com> wrote:
> you can consider to build your own format and run it by a wrapper
> as done in context in the minimals
>
> $ cat z.lua
> for k,v in pairs(_G) do print(k,v) end
>
> $ mtxrun --script plain z.lua
>

I installed ConTeXt standalone and did the same thing as you, but with
tex related invocations, and I got this:

$ cat hello.lua
tex.sprint("Hello World")
tex.sprint("\bye")

$ mtxrun --script plain hello.lua
mtx-plain       | running command 'luatex --fmt=luatex-plain  "hello.lua"'
hello.lua:1: attempt to call field 'sprint' (a nil value)

From mojca.miklavec.lists at gmail.com  Thu Oct 20 10:38:07 2016
From: mojca.miklavec.lists at gmail.com (Mojca Miklavec)
Date: Thu, 20 Oct 2016 10:38:07 +0200
Subject: [luatex] Building a PDF with Lua code, without a TeX stub
In-Reply-To: <CABR1-Xb+75mU9f1iJ8PFNBnjfs4AoF2egXm_SkbX0ZssxuyVKg@mail.gmail.com>
References: <CABR1-XYmZs--Rymr3-03QDcb==1zj4UuVrxjUdN_+fr14tWf7Q@mail.gmail.com>
 <CAG5iGsA=Shwv=MEQBbFwPnBqJ6MmXnmvZMAC6R2LcdPdts=8Pw@mail.gmail.com>
 <CABR1-Xb+75mU9f1iJ8PFNBnjfs4AoF2egXm_SkbX0ZssxuyVKg@mail.gmail.com>
Message-ID: <CALBOmsYFiEhEEW=PGg9_iDMcU4AfdJejXbyvb4Y-=xB85b6k5Q@mail.gmail.com>

On 20 October 2016 at 09:10, Deepak Jois <deepak.jois at gmail.com> wrote:
> On Thu, Oct 20, 2016 at 12:23 PM, luigi scarso <luigi.scarso at gmail.com> wrote:
>> you can consider to build your own format and run it by a wrapper
>> as done in context in the minimals
>
> I have never used ConTeXt, so could you please elaborate on your answer.

If you use TeX Live, you should already have it installed (or you can
install it via tlmgr or your package manager, but ideally don't go for
anything older that TeX Live 2016).

If you have MikTeX, it won't work.

(Or you can install the standalone ConTeXt distribution, but don't
worry about it just yet.)

You can try to save the following to test.cld and process it with
"context.cld" just to answer yourself whether this could help you in
any way:

context.setupindenting({"yes", "20pt", "first"})
context.starttext()
context("hello world")
context.par()
context.input("knuth")
context.stoptext()

If it does, it might be possible to replace ConTeXt with plain TeX.

> Where can I find this custom format in the context source code. Is
> there a path I can look in.

With a custom format I meant LaTeX or plain TeX (or something else of
your choice). The above example uses ConTeXt to typeset text, but it
is able to typeset from lua directly.

Mojca

From d.p.carlisle at gmail.com  Thu Oct 20 10:47:04 2016
From: d.p.carlisle at gmail.com (David Carlisle)
Date: Thu, 20 Oct 2016 09:47:04 +0100
Subject: [luatex] Building a PDF with Lua code, without a TeX stub
In-Reply-To: <CABR1-XYmZs--Rymr3-03QDcb==1zj4UuVrxjUdN_+fr14tWf7Q@mail.gmail.com>
References: <CABR1-XYmZs--Rymr3-03QDcb==1zj4UuVrxjUdN_+fr14tWf7Q@mail.gmail.com>
Message-ID: <CAEW6iOh_cDnsrEpw6cQ=3hB2_kq8cb8fB4RX+zOK-q9NAWw7Mg@mail.gmail.com>

On 20 October 2016 at 07:25, Deepak Jois <deepak.jois at gmail.com> wrote:
> Hi
> I would like to invoke the LuaTeX interpreter with a Lua file which
> does the node building etc, and then calls something like
> tex.shipout(), which can generate a PDF. I am aware of the --lua flag,
> but the file passed to that flag executes before the TeX engine is
> fully initialised. So that?s not what I am looking for
>
> For example, lets say I have a Lua file with code:
>
> <code>
> -- Page settings
> tex.pagewidth = "210mm"
> tex.pageheight = "297mm"
> tex.hsize = "210mm"
>
> -- Set the paragraph indentation
> tex.parindent = "20pt"
>
> tex.sprint("hello world")
> </code>
>
> and I want to generate a PDF from it directly using the luatex
> command. I cannot seem to do that right now, and I require a stub TeX
> file like this.
>
> <code>
> \outputmode=1 % this could be avoided if I pass --output-format=pdf
> \directlua{dofile('code.lua')}
> \bye
> </code>
>
> Questions:
>
> - Is there a way to avoid creating the stub TeX file?
>
> - If not, is it something worth adding (or possible to add) as a
> feature to the LuaTeX program?
>
> Deepak
>

You don't need a file, although you do need some tex code,
 this produces a pdf with hello world if I save your lua as zz.lua

luatex '\directlua{require("zz")}\end'

of course you could have written the \end from lua as well so you
really just need
a calling line as

luatex '\directlua{require("zz")}'

David


From deepak.jois at gmail.com  Thu Oct 20 11:38:39 2016
From: deepak.jois at gmail.com (Deepak Jois)
Date: Thu, 20 Oct 2016 15:08:39 +0530
Subject: [luatex] Building a PDF with Lua code, without a TeX stub
In-Reply-To: <CAEW6iOh_cDnsrEpw6cQ=3hB2_kq8cb8fB4RX+zOK-q9NAWw7Mg@mail.gmail.com>
References: <CABR1-XYmZs--Rymr3-03QDcb==1zj4UuVrxjUdN_+fr14tWf7Q@mail.gmail.com>
 <CAEW6iOh_cDnsrEpw6cQ=3hB2_kq8cb8fB4RX+zOK-q9NAWw7Mg@mail.gmail.com>
Message-ID: <CABR1-XZWbNPfNEsoP_-MHGa+1EZ05+wPp_2W3JPfbOrDpVos+w@mail.gmail.com>

On Thu, Oct 20, 2016 at 2:17 PM, David Carlisle <d.p.carlisle at gmail.com> wrote:
> You don't need a file, although you do need some tex code,
>  this produces a pdf with hello world if I save your lua as zz.lua

Thank you for that. I had not realised that it is possible to pass in
TeX commands as arguments.

I should really read the help output more carefully (or maybe this
should be in the manual?).

I managed to reduce the size of my wrapper script[1] using this
method. It would be nice to get  rid of the rest of it as well.

Deepak

[1]: https://github.com/deepakjois/ufy/commit/4ab51c761a5be3750281cbbcc9ab9bc45d17c265

From deepak.jois at gmail.com  Thu Oct 20 11:49:27 2016
From: deepak.jois at gmail.com (Deepak Jois)
Date: Thu, 20 Oct 2016 15:19:27 +0530
Subject: [luatex] Building a PDF with Lua code, without a TeX stub
In-Reply-To: <CALBOmsYFiEhEEW=PGg9_iDMcU4AfdJejXbyvb4Y-=xB85b6k5Q@mail.gmail.com>
References: <CABR1-XYmZs--Rymr3-03QDcb==1zj4UuVrxjUdN_+fr14tWf7Q@mail.gmail.com>
 <CAG5iGsA=Shwv=MEQBbFwPnBqJ6MmXnmvZMAC6R2LcdPdts=8Pw@mail.gmail.com>
 <CABR1-Xb+75mU9f1iJ8PFNBnjfs4AoF2egXm_SkbX0ZssxuyVKg@mail.gmail.com>
 <CALBOmsYFiEhEEW=PGg9_iDMcU4AfdJejXbyvb4Y-=xB85b6k5Q@mail.gmail.com>
Message-ID: <CABR1-XbeF_TU0urDUr1g+aTw5Hke8wZJ61J9mnhk+OG2A7aEyQ@mail.gmail.com>

On Thu, Oct 20, 2016 at 2:08 PM, Mojca Miklavec
<mojca.miklavec.lists at gmail.com> wrote:
> (Or you can install the standalone ConTeXt distribution, but don't
> worry about it just yet.)
>
> You can try to save the following to test.cld and process it with
> "context.cld" just to answer yourself whether this could help you in
> any way:
>
> context.setupindenting({"yes", "20pt", "first"})
> context.starttext()
> context("hello world")
> context.par()
> context.input("knuth")
> context.stoptext()
>
> If it does, it might be possible to replace ConTeXt with plain TeX.

I was able to install ConTeXt standalone quite easily. So I will
definitely be checking this out. It will also provide some inspiration
for the API I am trying to build.

However, my goals are a bit different. I would like to build a Lua
based API module for typesetting, that can work nicely with LuaRocks,
and depends on nothing but the LuaTeX binary: no complicated wrapping,
no stub files, no format files, no TEXMF trees etc.

From mojca.miklavec.lists at gmail.com  Thu Oct 20 12:00:46 2016
From: mojca.miklavec.lists at gmail.com (Mojca Miklavec)
Date: Thu, 20 Oct 2016 12:00:46 +0200
Subject: [luatex] Building a PDF with Lua code, without a TeX stub
In-Reply-To: <CABR1-XbeF_TU0urDUr1g+aTw5Hke8wZJ61J9mnhk+OG2A7aEyQ@mail.gmail.com>
References: <CABR1-XYmZs--Rymr3-03QDcb==1zj4UuVrxjUdN_+fr14tWf7Q@mail.gmail.com>
 <CAG5iGsA=Shwv=MEQBbFwPnBqJ6MmXnmvZMAC6R2LcdPdts=8Pw@mail.gmail.com>
 <CABR1-Xb+75mU9f1iJ8PFNBnjfs4AoF2egXm_SkbX0ZssxuyVKg@mail.gmail.com>
 <CALBOmsYFiEhEEW=PGg9_iDMcU4AfdJejXbyvb4Y-=xB85b6k5Q@mail.gmail.com>
 <CABR1-XbeF_TU0urDUr1g+aTw5Hke8wZJ61J9mnhk+OG2A7aEyQ@mail.gmail.com>
Message-ID: <CALBOmsbXR=EO=eDAw78QQUt3zR7o8Ui8dZC5pXyR02Gh7WwiYQ@mail.gmail.com>

On 20 October 2016 at 11:49, Deepak Jois wrote:
>
> I would like to build a Lua
> based API module for typesetting, that can work nicely with LuaRocks,

That would be nice, but ...

> and depends on nothing but the LuaTeX binary: no complicated wrapping,
> no stub files, no format files, no TEXMF trees etc.

That last part will be super tricky.

I have no clue how you could possibly support typesetting without
shipping any fonts or some basic files. I'm not saying that you need
to depend on a working 4 GB installation of TeX Live or that you need
to use TDS, but you *will* need some subset of files somewhere, you'll
probably have to install some small subset of TeX Live tree along with
your package in any case.

Mojca

From pfitzen at web.de  Thu Oct 20 12:18:08 2016
From: pfitzen at web.de (Juergen  Pfitzenmaier)
Date: Thu, 20 Oct 2016 12:18:08 +0200
Subject: [luatex] Hinweis auf luatex Digest, Vol 94, Issue 12
In-Reply-To: <mailman.3516.1476956991.16616.luatex@tug.org>
References: <mailman.3516.1476956991.16616.luatex@tug.org>
Message-ID: <trinity-b64cd2d3-7a04-444d-a2e5-2e1f8c3bb6c5-1476958688437@3capp-webde-bs57>

Hallo Alex,
das ist Teil einer aktuellen Diskussion. Und k?nnte Deinen
Wunsch nach ant oder etwas ?hnlichem erf?llen. Da baut
jemand auf der aktuellen luatex eine allgemeine Printengine,
die man von au?en steuern kann -- siehe die Bemerkung
ganz am Ende der Meldung.

Viele Gr??e
J?rgen

> Gesendet: Donnerstag, 20. Oktober 2016 um 11:49 Uhr
> Von: luatex-request at tug.org
> An: luatex at tug.org
> Betreff: luatex Digest, Vol 94, Issue 12
>
> Send luatex mailing list submissions to
> 	luatex at tug.org
> 
> To subscribe or unsubscribe via the World Wide Web, visit
> 	http://tug.org/mailman/listinfo/luatex
> or, via email, send a message with subject or body 'help' to
> 	luatex-request at tug.org
> 
> You can reach the person managing the list at
> 	luatex-owner at tug.org
> 
> When replying, please edit your Subject line so it is more specific
> than "Re: Contents of luatex digest..."
> 
> 
> Today's Topics:
> 
>    1. Re: Building a PDF with Lua code, without a TeX stub
>       (David Carlisle)
>    2. Re: Building a PDF with Lua code, without a TeX stub (Deepak Jois)
>    3. Re: Building a PDF with Lua code, without a TeX stub (Deepak Jois)
> 
> 
> ----------------------------------------------------------------------
> 
> Message: 1
> Date: Thu, 20 Oct 2016 09:47:04 +0100
> From: David Carlisle <d.p.carlisle at gmail.com>
> To: "LuaTeX discussion." <luatex at tug.org>
> Subject: Re: [luatex] Building a PDF with Lua code, without a TeX stub
> Message-ID:
> 	<CAEW6iOh_cDnsrEpw6cQ=3hB2_kq8cb8fB4RX+zOK-q9NAWw7Mg at mail.gmail.com>
> Content-Type: text/plain; charset="UTF-8"
> 
> On 20 October 2016 at 07:25, Deepak Jois <deepak.jois at gmail.com> wrote:
> > Hi
> > I would like to invoke the LuaTeX interpreter with a Lua file which
> > does the node building etc, and then calls something like
> > tex.shipout(), which can generate a PDF. I am aware of the --lua flag,
> > but the file passed to that flag executes before the TeX engine is
> > fully initialised. So that?s not what I am looking for
> >
> > For example, lets say I have a Lua file with code:
> >
> > <code>
> > -- Page settings
> > tex.pagewidth = "210mm"
> > tex.pageheight = "297mm"
> > tex.hsize = "210mm"
> >
> > -- Set the paragraph indentation
> > tex.parindent = "20pt"
> >
> > tex.sprint("hello world")
> > </code>
> >
> > and I want to generate a PDF from it directly using the luatex
> > command. I cannot seem to do that right now, and I require a stub TeX
> > file like this.
> >
> > <code>
> > \outputmode=1 % this could be avoided if I pass --output-format=pdf
> > \directlua{dofile('code.lua')}
> > \bye
> > </code>
> >
> > Questions:
> >
> > - Is there a way to avoid creating the stub TeX file?
> >
> > - If not, is it something worth adding (or possible to add) as a
> > feature to the LuaTeX program?
> >
> > Deepak
> >
> 
> You don't need a file, although you do need some tex code,
>  this produces a pdf with hello world if I save your lua as zz.lua
> 
> luatex '\directlua{require("zz")}\end'
> 
> of course you could have written the \end from lua as well so you
> really just need
> a calling line as
> 
> luatex '\directlua{require("zz")}'
> 
> David
> 
> 
> 
> ------------------------------
> 
> Message: 2
> Date: Thu, 20 Oct 2016 15:08:39 +0530
> From: Deepak Jois <deepak.jois at gmail.com>
> To: "LuaTeX discussion." <luatex at tug.org>
> Subject: Re: [luatex] Building a PDF with Lua code, without a TeX stub
> Message-ID:
> 	<CABR1-XZWbNPfNEsoP_-MHGa+1EZ05+wPp_2W3JPfbOrDpVos+w at mail.gmail.com>
> Content-Type: text/plain; charset="UTF-8"
> 
> On Thu, Oct 20, 2016 at 2:17 PM, David Carlisle <d.p.carlisle at gmail.com> wrote:
> > You don't need a file, although you do need some tex code,
> >  this produces a pdf with hello world if I save your lua as zz.lua
> 
> Thank you for that. I had not realised that it is possible to pass in
> TeX commands as arguments.
> 
> I should really read the help output more carefully (or maybe this
> should be in the manual?).
> 
> I managed to reduce the size of my wrapper script[1] using this
> method. It would be nice to get  rid of the rest of it as well.
> 
> Deepak
> 
> [1]: https://github.com/deepakjois/ufy/commit/4ab51c761a5be3750281cbbcc9ab9bc45d17c265
> 
> 
> ------------------------------
> 
> Message: 3
> Date: Thu, 20 Oct 2016 15:19:27 +0530
> From: Deepak Jois <deepak.jois at gmail.com>
> To: "LuaTeX discussion." <luatex at tug.org>
> Subject: Re: [luatex] Building a PDF with Lua code, without a TeX stub
> Message-ID:
> 	<CABR1-XbeF_TU0urDUr1g+aTw5Hke8wZJ61J9mnhk+OG2A7aEyQ at mail.gmail.com>
> Content-Type: text/plain; charset="UTF-8"
> 
> On Thu, Oct 20, 2016 at 2:08 PM, Mojca Miklavec
> <mojca.miklavec.lists at gmail.com> wrote:
> > (Or you can install the standalone ConTeXt distribution, but don't
> > worry about it just yet.)
> >
> > You can try to save the following to test.cld and process it with
> > "context.cld" just to answer yourself whether this could help you in
> > any way:
> >
> > context.setupindenting({"yes", "20pt", "first"})
> > context.starttext()
> > context("hello world")
> > context.par()
> > context.input("knuth")
> > context.stoptext()
> >
> > If it does, it might be possible to replace ConTeXt with plain TeX.
> 
> I was able to install ConTeXt standalone quite easily. So I will
> definitely be checking this out. It will also provide some inspiration
> for the API I am trying to build.
> 
> However, my goals are a bit different. I would like to build a Lua
> based API module for typesetting, that can work nicely with LuaRocks,
> and depends on nothing but the LuaTeX binary: no complicated wrapping,
> no stub files, no format files, no TEXMF trees etc.
> 
> 
> End of luatex Digest, Vol 94, Issue 12
> **************************************
>


From deepak.jois at gmail.com  Thu Oct 20 12:34:37 2016
From: deepak.jois at gmail.com (Deepak Jois)
Date: Thu, 20 Oct 2016 16:04:37 +0530
Subject: [luatex] Building a PDF with Lua code, without a TeX stub
In-Reply-To: <CALBOmsbXR=EO=eDAw78QQUt3zR7o8Ui8dZC5pXyR02Gh7WwiYQ@mail.gmail.com>
References: <CABR1-XYmZs--Rymr3-03QDcb==1zj4UuVrxjUdN_+fr14tWf7Q@mail.gmail.com>
 <CAG5iGsA=Shwv=MEQBbFwPnBqJ6MmXnmvZMAC6R2LcdPdts=8Pw@mail.gmail.com>
 <CABR1-Xb+75mU9f1iJ8PFNBnjfs4AoF2egXm_SkbX0ZssxuyVKg@mail.gmail.com>
 <CALBOmsYFiEhEEW=PGg9_iDMcU4AfdJejXbyvb4Y-=xB85b6k5Q@mail.gmail.com>
 <CABR1-XbeF_TU0urDUr1g+aTw5Hke8wZJ61J9mnhk+OG2A7aEyQ@mail.gmail.com>
 <CALBOmsbXR=EO=eDAw78QQUt3zR7o8Ui8dZC5pXyR02Gh7WwiYQ@mail.gmail.com>
Message-ID: <CABR1-XZBW08==X-AnAM5_ggA87XnEzLbZXN2M+5hLxbBxfmORw@mail.gmail.com>

On Thu, Oct 20, 2016 at 3:30 PM, Mojca Miklavec
<mojca.miklavec.lists at gmail.com> wrote:
> That last part will be super tricky.
>
> I have no clue how you could possibly support typesetting without
> shipping any fonts or some basic files. I'm not saying that you need
> to depend on a working 4 GB installation of TeX Live or that you need
> to use TDS, but you *will* need some subset of files somewhere, you'll
> probably have to install some small subset of TeX Live tree along with
> your package in any case.

It?s possible to support a quite a few use cases without needing any
TeX related files.

* We can still leverage Lua code available in the standard Lua
installation (LuaRocks modules, other places in LUA_PATH etc) to make
up for any loss of functionality in terms of code. We do not strictly
need to use TeX macro packages. I know the TeX ecosystem is huge and
cannot be replaced easily, but it is still in the realm of possibility
to provide equivalent functionality using Lua.

* If we invoke LuaTeX with `--ini` we can eliminate the need for any
format files, and hence the need for any TEXMF trees.

*  LuaTeX's font.define function to define a font directly. It is
possible to load OpenType fonts directly from the filesystem using the
LuaTeX?s fontloader API, and define a font using them. Consumers of
the API can have OpenType font files in their working folder for their
specific typesetting requirements.

* It is also rely on fonts bundled in the OS. We can have a LuaRocks
module (it does not exist yet, but it?s possible to write one) that
can locate fonts on an OS, and use them.

Deepak


From d.p.carlisle at gmail.com  Thu Oct 20 13:59:42 2016
From: d.p.carlisle at gmail.com (David Carlisle)
Date: Thu, 20 Oct 2016 12:59:42 +0100
Subject: [luatex] Building a PDF with Lua code, without a TeX stub
In-Reply-To: <CABR1-XZBW08==X-AnAM5_ggA87XnEzLbZXN2M+5hLxbBxfmORw@mail.gmail.com>
References: <CABR1-XYmZs--Rymr3-03QDcb==1zj4UuVrxjUdN_+fr14tWf7Q@mail.gmail.com>
 <CAG5iGsA=Shwv=MEQBbFwPnBqJ6MmXnmvZMAC6R2LcdPdts=8Pw@mail.gmail.com>
 <CABR1-Xb+75mU9f1iJ8PFNBnjfs4AoF2egXm_SkbX0ZssxuyVKg@mail.gmail.com>
 <CALBOmsYFiEhEEW=PGg9_iDMcU4AfdJejXbyvb4Y-=xB85b6k5Q@mail.gmail.com>
 <CABR1-XbeF_TU0urDUr1g+aTw5Hke8wZJ61J9mnhk+OG2A7aEyQ@mail.gmail.com>
 <CALBOmsbXR=EO=eDAw78QQUt3zR7o8Ui8dZC5pXyR02Gh7WwiYQ@mail.gmail.com>
 <CABR1-XZBW08==X-AnAM5_ggA87XnEzLbZXN2M+5hLxbBxfmORw@mail.gmail.com>
Message-ID: <CAEW6iOjcpZ1Z7xW_dThktn5awr8aJndhoETk=f59H6ry2U=p0g@mail.gmail.com>

with zz.lua as posted at the start of the thread and

luafmt.ini looking like


\catcode`\{=1
\catcode`\}=2
\let\DUMP\dump
\let\dump\relax
\input{luatex.ini}
\expandafter\everyjob\expandafter{\the\everyjob
\directlua{require("\jobname")}\end}
\DUMP




then

luatex --ini luafmt.ini



makes a format file and



 luatex \&luafmt zz.lua


makes

Output written on zz.pdf (1 page, 11241 bytes).


with zz.pdf saying hello world.

David

From deepak.jois at gmail.com  Thu Oct 20 16:03:40 2016
From: deepak.jois at gmail.com (Deepak Jois)
Date: Thu, 20 Oct 2016 19:33:40 +0530
Subject: [luatex] Building a PDF with Lua code, without a TeX stub
In-Reply-To: <CAEW6iOjcpZ1Z7xW_dThktn5awr8aJndhoETk=f59H6ry2U=p0g@mail.gmail.com>
References: <CABR1-XYmZs--Rymr3-03QDcb==1zj4UuVrxjUdN_+fr14tWf7Q@mail.gmail.com>
 <CAG5iGsA=Shwv=MEQBbFwPnBqJ6MmXnmvZMAC6R2LcdPdts=8Pw@mail.gmail.com>
 <CABR1-Xb+75mU9f1iJ8PFNBnjfs4AoF2egXm_SkbX0ZssxuyVKg@mail.gmail.com>
 <CALBOmsYFiEhEEW=PGg9_iDMcU4AfdJejXbyvb4Y-=xB85b6k5Q@mail.gmail.com>
 <CABR1-XbeF_TU0urDUr1g+aTw5Hke8wZJ61J9mnhk+OG2A7aEyQ@mail.gmail.com>
 <CALBOmsbXR=EO=eDAw78QQUt3zR7o8Ui8dZC5pXyR02Gh7WwiYQ@mail.gmail.com>
 <CABR1-XZBW08==X-AnAM5_ggA87XnEzLbZXN2M+5hLxbBxfmORw@mail.gmail.com>
 <CAEW6iOjcpZ1Z7xW_dThktn5awr8aJndhoETk=f59H6ry2U=p0g@mail.gmail.com>
Message-ID: <CABR1-XaqunJTNxKWRhYaAR2i6ed1NSXtV1KT7x0THK2npXDHRg@mail.gmail.com>

On Thu, Oct 20, 2016 at 5:29 PM, David Carlisle <d.p.carlisle at gmail.com> wrote:
>
>  luatex \&luafmt zz.lua
>
>
> makes
>
> Output written on zz.pdf (1 page, 11241 bytes).

Great, thank you once again. Incorporated this into my script as well:
https://github.com/deepakjois/ufy/commit/96bdb4d77f5b3c32a985002792f8fe3a39d17610

From patrick at gundla.ch  Thu Oct 20 19:56:22 2016
From: patrick at gundla.ch (Patrick Gundlach)
Date: Thu, 20 Oct 2016 19:56:22 +0200
Subject: [luatex] Building a PDF with Lua code, without a TeX stub
In-Reply-To: <CALBOmsbXR=EO=eDAw78QQUt3zR7o8Ui8dZC5pXyR02Gh7WwiYQ@mail.gmail.com>
References: <CABR1-XYmZs--Rymr3-03QDcb==1zj4UuVrxjUdN_+fr14tWf7Q@mail.gmail.com>
 <CAG5iGsA=Shwv=MEQBbFwPnBqJ6MmXnmvZMAC6R2LcdPdts=8Pw@mail.gmail.com>
 <CABR1-Xb+75mU9f1iJ8PFNBnjfs4AoF2egXm_SkbX0ZssxuyVKg@mail.gmail.com>
 <CALBOmsYFiEhEEW=PGg9_iDMcU4AfdJejXbyvb4Y-=xB85b6k5Q@mail.gmail.com>
 <CABR1-XbeF_TU0urDUr1g+aTw5Hke8wZJ61J9mnhk+OG2A7aEyQ@mail.gmail.com>
 <CALBOmsbXR=EO=eDAw78QQUt3zR7o8Ui8dZC5pXyR02Gh7WwiYQ@mail.gmail.com>
Message-ID: <B39DFE80-9389-42AD-AC8E-FDAD173FB2D6@gundla.ch>


>> and depends on nothing but the LuaTeX binary: no complicated wrapping,
>> no stub files, no format files, no TEXMF trees etc.
> 
> That last part will be super tricky.

no, not at all. 

I ship four fonts (the texgyre helvetica clone), two binaries and a few Lua files (total 15 megabytes including documentation) and have no external dependencies. The tricky part was providing the right file-related callbacks when I disable kpse.


https://speedata.github.io/publisher/index.html

and some examples:

https://github.com/speedata/examples

Patrick




From slitt at troubleshooters.com  Fri Oct 21 16:31:03 2016
From: slitt at troubleshooters.com (Steve Litt)
Date: Fri, 21 Oct 2016 10:31:03 -0400
Subject: [luatex] Building a PDF with Lua code, without a TeX stub
In-Reply-To: <CABR1-XYmZs--Rymr3-03QDcb==1zj4UuVrxjUdN_+fr14tWf7Q@mail.gmail.com>
References: <CABR1-XYmZs--Rymr3-03QDcb==1zj4UuVrxjUdN_+fr14tWf7Q@mail.gmail.com>
Message-ID: <20161021103103.7b995dbf@mydesk.domain.cxm>

On Thu, 20 Oct 2016 11:55:49 +0530
Deepak Jois <deepak.jois at gmail.com> wrote:

> Hi
> I would like to invoke the LuaTeX interpreter with a Lua file which
> does the node building etc, and then calls something like
> tex.shipout(), which can generate a PDF. I am aware of the --lua flag,
> but the file passed to that flag executes before the TeX engine is
> fully initialised. So that?s not what I am looking for
> 
> For example, lets say I have a Lua file with code:
> 
> <code>
> -- Page settings
> tex.pagewidth = "210mm"
> tex.pageheight = "297mm"
> tex.hsize = "210mm"
> 
> -- Set the paragraph indentation
> tex.parindent = "20pt"
> 
> tex.sprint("hello world")
> </code>
> 
> and I want to generate a PDF from it directly using the luatex
> command. I cannot seem to do that right now, and I require a stub TeX
> file like this.
> 
> <code>
> \outputmode=1 % this could be avoided if I pass --output-format=pdf
> \directlua{dofile('code.lua')}
> \bye
> </code>
> 
> Questions:
> 
> - Is there a way to avoid creating the stub TeX file?
> 
> - If not, is it something worth adding (or possible to add) as a
> feature to the LuaTeX program?
> 
> Deepak

Hi Deepak,

You could always have your Lua code create the stub as a temp file, and
remove it when done. I know that's an ugly kludge, but it *is* one way
to do it.

SteveT

Steve Litt 
September 2016 featured book: Twenty Eight Tales of Troubleshooting
http://www.troubleshooters.com/28




From deepak.jois at gmail.com  Fri Oct 21 16:40:59 2016
From: deepak.jois at gmail.com (Deepak Jois)
Date: Fri, 21 Oct 2016 20:10:59 +0530
Subject: [luatex] Bug in io.popen
Message-ID: <CABR1-XaStaZrEdV6j_MkQ4FN6wUgF1XPtmNAVEPu819gzwBpCg@mail.gmail.com>

See below for a minimal example of how io.popen behavior seems to be
different in LuaTeX, which leads to an error. It seems that the 'read'
method is not present on whatever is returned from io.popen.

I ran across this issue when trying to use LuaRocks within LuaTeX.
LuaRocks runs something like:

===
local version = io.popen("sw_vers -productVersion"):read("*l")
===

which errors out.

This happens even when I disable kpse and set texconfig.shell_escape to 't'.

Is this a bug?

======
Regular Lua interpreter:
$ lua
Lua 5.2.4  Copyright (C) 1994-2015 Lua.org, PUC-Rio
> io.popen("ls"):read("*l")

Luatex:

$ cat popen.tex
\directlua{io.popen("ls"):read("*l")}

$ luatex popen.tex
This is LuaTeX, Version 0.95.0 (TeX Live 2016)
 restricted system commands enabled.
(./popen.tex[\directlua]:1: attempt to index a nil value
stack traceback:
        [\directlua]:1: in main chunk.
l.1 \directlua{io.popen("ls"):read("*l")}

? ^D
! Emergency stop.
l.1 \directlua{io.popen("ls"):read("*l")}

!  ==> Fatal error occurred, no output PDF file produced!
Transcript written on popen.log.
===

From taco at elvenkind.com  Fri Oct 21 16:49:19 2016
From: taco at elvenkind.com (Taco Hoekwater)
Date: Fri, 21 Oct 2016 16:49:19 +0200
Subject: [luatex] Bug in io.popen
In-Reply-To: <CABR1-XaStaZrEdV6j_MkQ4FN6wUgF1XPtmNAVEPu819gzwBpCg@mail.gmail.com>
References: <CABR1-XaStaZrEdV6j_MkQ4FN6wUgF1XPtmNAVEPu819gzwBpCg@mail.gmail.com>
Message-ID: <C50E8E2F-1B17-419E-8ADD-1914AD61147D@elvenkind.com>

Hi,

> On 21 Oct 2016, at 16:40, Deepak Jois <deepak.jois at gmail.com> wrote:
> 
> $ luatex popen.tex
> This is LuaTeX, Version 0.95.0 (TeX Live 2016)
> restricted system commands enabled.


I am pretty sure that would have said:

> $ luatex popen.tex
> This is LuaTeX, Version 0.95.0 (TeX Live 2016)
>  system commands enabled.

if kpathsea?s texmf.cnf variable shell_escape was set to ?t?. 

In ?restricted? mode (that you appear to be running in), only a preset 
list of commands may be executed, these are stored in the kpathsea 
shell_escape_commands variable.

Best wishes,
Taco






From deepak.jois at gmail.com  Fri Oct 21 16:50:44 2016
From: deepak.jois at gmail.com (Deepak Jois)
Date: Fri, 21 Oct 2016 20:20:44 +0530
Subject: [luatex] Building a PDF with Lua code, without a TeX stub
In-Reply-To: <20161021103103.7b995dbf@mydesk.domain.cxm>
References: <CABR1-XYmZs--Rymr3-03QDcb==1zj4UuVrxjUdN_+fr14tWf7Q@mail.gmail.com>
 <20161021103103.7b995dbf@mydesk.domain.cxm>
Message-ID: <CABR1-XaVWNfj7ui=0gWN-d4iDVd2kinGV84BQ73MH0dGqatetg@mail.gmail.com>

On Fri, Oct 21, 2016 at 8:01 PM, Steve Litt <slitt at troubleshooters.com> wrote:
> You could always have your Lua code create the stub as a temp file, and
> remove it when done. I know that's an ugly kludge, but it *is* one way
> to do it.

That is what I was doing earlier. I was auto-generating the stub code
using a bash script. But David?s clever hack eliminates the need for
that, at least for my use case.

Deepak


From deepak.jois at gmail.com  Fri Oct 21 17:09:18 2016
From: deepak.jois at gmail.com (Deepak Jois)
Date: Fri, 21 Oct 2016 20:39:18 +0530
Subject: [luatex] Bug in io.popen
In-Reply-To: <C50E8E2F-1B17-419E-8ADD-1914AD61147D@elvenkind.com>
References: <CABR1-XaStaZrEdV6j_MkQ4FN6wUgF1XPtmNAVEPu819gzwBpCg@mail.gmail.com>
 <C50E8E2F-1B17-419E-8ADD-1914AD61147D@elvenkind.com>
Message-ID: <CABR1-XaYg-wmeWcJh8OZ4AR4eJWQajLP7k2qQ6B+s=wM2kUa_w@mail.gmail.com>

On Fri, Oct 21, 2016 at 8:19 PM, Taco Hoekwater <taco at elvenkind.com> wrote:
> I am pretty sure that would have said:
>
>> $ luatex popen.tex
>> This is LuaTeX, Version 0.95.0 (TeX Live 2016)
>>  system commands enabled.
>
> if kpathsea?s texmf.cnf variable shell_escape was set to ?t?.
>
> In ?restricted? mode (that you appear to be running in), only a preset
> list of commands may be executed, these are stored in the kpathsea
> shell_escape_commands variable.

Fair enough. I actually have a more elaborate setup where I disable
kpse and set texconfig.shell_escape to 't' as the first two things in
a Lua file passed as an argument to the --lua flag. Replicating that
as a minimal working example might take a bit of effort.

However, why does this not work?

$ cat popen.lua
texconfig.kpse_init = false
texconfig.shell_escape = 't'
io.popen("ls"):read("*l")

$ ~/.ufy/luatex --lua=popen.lua  "\bye"
popen.lua:3: attempt to index a nil value


From deepak.jois at gmail.com  Fri Oct 21 17:27:58 2016
From: deepak.jois at gmail.com (Deepak Jois)
Date: Fri, 21 Oct 2016 20:57:58 +0530
Subject: [luatex] Bug in io.popen
In-Reply-To: <CABR1-XaYg-wmeWcJh8OZ4AR4eJWQajLP7k2qQ6B+s=wM2kUa_w@mail.gmail.com>
References: <CABR1-XaStaZrEdV6j_MkQ4FN6wUgF1XPtmNAVEPu819gzwBpCg@mail.gmail.com>
 <C50E8E2F-1B17-419E-8ADD-1914AD61147D@elvenkind.com>
 <CABR1-XaYg-wmeWcJh8OZ4AR4eJWQajLP7k2qQ6B+s=wM2kUa_w@mail.gmail.com>
Message-ID: <CABR1-XZGETy65nKjV22zY7fMJ7yvmAQYqD1cjDpptFTxOMnabA@mail.gmail.com>

On Fri, Oct 21, 2016 at 8:39 PM, Deepak Jois <deepak.jois at gmail.com> wrote:
>
> However, why does this not work?
>
> $ cat popen.lua
> texconfig.kpse_init = false
> texconfig.shell_escape = 't'
> io.popen("ls"):read("*l")
>
> $ ~/.ufy/luatex --lua=popen.lua  "\bye"
> popen.lua:3: attempt to index a nil value

More investigation reveals that if I do set these texconfig values,
the io.popen call does work a little bit later on, in my TeX document.
So looks like it does not work only in the Lua initialization script.

From luigi.scarso at gmail.com  Fri Oct 21 17:32:16 2016
From: luigi.scarso at gmail.com (luigi scarso)
Date: Fri, 21 Oct 2016 17:32:16 +0200
Subject: [luatex] Bug in io.popen
In-Reply-To: <CABR1-XaYg-wmeWcJh8OZ4AR4eJWQajLP7k2qQ6B+s=wM2kUa_w@mail.gmail.com>
References: <CABR1-XaStaZrEdV6j_MkQ4FN6wUgF1XPtmNAVEPu819gzwBpCg@mail.gmail.com>
 <C50E8E2F-1B17-419E-8ADD-1914AD61147D@elvenkind.com>
 <CABR1-XaYg-wmeWcJh8OZ4AR4eJWQajLP7k2qQ6B+s=wM2kUa_w@mail.gmail.com>
Message-ID: <CAG5iGsBf4fX6BVwutH14cBFG0BEmLokMJvx4oauxhc1XXEBEkQ@mail.gmail.com>

On Fri, Oct 21, 2016 at 5:09 PM, Deepak Jois <deepak.jois at gmail.com> wrote:
as a minimal working example might take a bit of effort.
>
> However, why does this not work?
>
> $ cat popen.lua
> texconfig.kpse_init = false
> texconfig.shell_escape = 't'
> io.popen("ls"):read("*l")
>
> $ ~/.ufy/luatex --lua=popen.lua  "\bye"
> popen.lua:3: attempt to index a nil value
>
It should be explained at
3.1.3 Other command
of the manual

--
luigi

From deepak.jois at gmail.com  Fri Oct 21 18:10:14 2016
From: deepak.jois at gmail.com (Deepak Jois)
Date: Fri, 21 Oct 2016 21:40:14 +0530
Subject: [luatex] Bug in io.popen
In-Reply-To: <CAG5iGsBf4fX6BVwutH14cBFG0BEmLokMJvx4oauxhc1XXEBEkQ@mail.gmail.com>
References: <CABR1-XaStaZrEdV6j_MkQ4FN6wUgF1XPtmNAVEPu819gzwBpCg@mail.gmail.com>
 <C50E8E2F-1B17-419E-8ADD-1914AD61147D@elvenkind.com>
 <CABR1-XaYg-wmeWcJh8OZ4AR4eJWQajLP7k2qQ6B+s=wM2kUa_w@mail.gmail.com>
 <CAG5iGsBf4fX6BVwutH14cBFG0BEmLokMJvx4oauxhc1XXEBEkQ@mail.gmail.com>
Message-ID: <CABR1-XY50SN-zzOe3SzHwj+6wRr_eibR+X0MBCg8FWtHBseBEw@mail.gmail.com>

On Fri, Oct 21, 2016 at 9:02 PM, luigi scarso <luigi.scarso at gmail.com> wrote:
>> However, why does this not work?
>>
>> $ cat popen.lua
>> texconfig.kpse_init = false
>> texconfig.shell_escape = 't'
>> io.popen("ls"):read("*l")
>>
>> $ ~/.ufy/luatex --lua=popen.lua  "\bye"
>> popen.lua:3: attempt to index a nil value
>>
> It should be explained at
> 3.1.3 Other command
> of the manual

Thanks for pointing me to that. I just re-read it and tried something
which worked, but it was still not very intuitive :).

This invocation below works and does not give me a Lua error:

$ cat popen.lua
texconfig.kpse_init = false
texconfig.shell_escape = 't'
io.popen("ls"):read("*l")

$ ~/.ufy/luatex --shell-escape --lua=popen.lua  "\bye"
no format given, quitting

From kalrish.baakjen at gmail.com  Tue Oct 25 00:18:34 2016
From: kalrish.baakjen at gmail.com (=?UTF-8?Q?Kalrish_B=C3=A4akjen?=)
Date: Tue, 25 Oct 2016 00:18:34 +0200
Subject: [luatex] Lua module preloader
Message-ID: <CA+FEEpyyrAdEQc9ZQvrUWZ5TtuROLTVYzcihp=PtjbbZieegZw@mail.gmail.com>

Hello,

I've created a script that allows to preload Lua modules in the
format. It doesn't give any noticeable speedup with normal documents,
but it could lighten custom LuaTeX deployments, as the Lua sources
would no longer have to be distributed.

https://github.com/kalrish/luatex-lua-module-preloader

In the hope that this will be useful or interesting to you,

Kalrish

From d.p.carlisle at gmail.com  Wed Oct 26 13:39:55 2016
From: d.p.carlisle at gmail.com (David Carlisle)
Date: Wed, 26 Oct 2016 12:39:55 +0100
Subject: [luatex] scanning for undefined command names
Message-ID: <CAEW6iOi1DsD=_yw4HYPKs6P_ca6+YuDoiMOX6kbfkUxjA6jmxA@mail.gmail.com>

This is following up a user query at


http://tex.stackexchange.com/q/335994/

The following (plain) luatex logs

[par]
[par]
[]
[]

that is the input \UNDEFINED is scanned (and removed) as a token but
given the name as empty string not "UNDEFINED" .

It isn't exactly clear from the manual that this would be the case, is
that intentional? (and if so is there any way to get "UNDEFINED"
without scanning letter by letter and checking catcodes "by hand" ?

David

\directlua{texio.write_nl("[" .. token.scan_csname() .. "]")}\par
\directlua{texio.write_nl("[" .. token.get_next().csname .. "]")}\par
\directlua{texio.write_nl("[" .. token.scan_csname() .. "]")}\UNDEFINED
\directlua{texio.write_nl("[" .. token.get_next().csname .. "]")}\UNDEFINED


\bye

From pragma at wxs.nl  Wed Oct 26 14:03:39 2016
From: pragma at wxs.nl (Hans Hagen)
Date: Wed, 26 Oct 2016 14:03:39 +0200
Subject: [luatex] scanning for undefined command names
In-Reply-To: <CAEW6iOi1DsD=_yw4HYPKs6P_ca6+YuDoiMOX6kbfkUxjA6jmxA@mail.gmail.com>
References: <CAEW6iOi1DsD=_yw4HYPKs6P_ca6+YuDoiMOX6kbfkUxjA6jmxA@mail.gmail.com>
Message-ID: <97d3909c-0ff8-c819-64c6-b83c79002779@wxs.nl>

On 10/26/2016 1:39 PM, David Carlisle wrote:
> This is following up a user query at
>
>
> http://tex.stackexchange.com/q/335994/
>
> The following (plain) luatex logs
>
> [par]
> [par]
> []
> []
>
> that is the input \UNDEFINED is scanned (and removed) as a token but
> given the name as empty string not "UNDEFINED" .
>
> It isn't exactly clear from the manual that this would be the case, is
> that intentional? (and if so is there any way to get "UNDEFINED"
> without scanning letter by letter and checking catcodes "by hand" ?
>
> David
>
> \directlua{texio.write_nl("[" .. token.scan_csname() .. "]")}\par
> \directlua{texio.write_nl("[" .. token.get_next().csname .. "]")}\par
> \directlua{texio.write_nl("[" .. token.scan_csname() .. "]")}\UNDEFINED
> \directlua{texio.write_nl("[" .. token.get_next().csname .. "]")}\UNDEFINED

there is no token \UNDEFINED so it cannot be reported as such, but you 
can check with

\directlua{texio.write_nl("[" .. token.get_next().cmdname .. "]")}\UNDEFINED

which gives you [undefined_cs]

-----------------------------------------------------------------
                                           Hans Hagen | PRAGMA ADE
               Ridderstraat 27 | 8061 GH Hasselt | The Netherlands
        tel: 038 477 53 69 | www.pragma-ade.nl | www.pragma-pod.nl
-----------------------------------------------------------------

From d.p.carlisle at gmail.com  Wed Oct 26 14:25:56 2016
From: d.p.carlisle at gmail.com (David Carlisle)
Date: Wed, 26 Oct 2016 13:25:56 +0100
Subject: [luatex] scanning for undefined command names
In-Reply-To: <97d3909c-0ff8-c819-64c6-b83c79002779@wxs.nl>
References: <CAEW6iOi1DsD=_yw4HYPKs6P_ca6+YuDoiMOX6kbfkUxjA6jmxA@mail.gmail.com>
 <97d3909c-0ff8-c819-64c6-b83c79002779@wxs.nl>
Message-ID: <CAEW6iOjGGefHTU_B1Df8HwXJ4kUCYyq4kUKx0hvOddMOoRER8w@mail.gmail.com>

Hans,

> there is no token \UNDEFINED so it cannot be reported as such

I think that is a terminology problem that is the source of the confusion.

there is no entry in the internal table of control names that
presumably you are looking up here but \UNDEFINED is a token in the
usual TeX sense \UNDEFINED can take part in token lists
\def\foo{\UNDEFINED}  if  \UNDEFINED isn't a "token" what is it?

Actually while writing the above, I guessed that the following would
work and in fact it does


\def\z{\UNDEFINED}
\directlua{texio.write_nl("[" .. token.scan_csname() .. "]")}\par
\directlua{texio.write_nl("[" .. token.get_next().csname .. "]")}\par
\directlua{texio.write_nl("[" .. token.scan_csname() .. "]")}\UNDEFINED
\directlua{texio.write_nl("[" .. token.get_next().csname .. "]")}\UNDEFINED

produces

[par]
[par]
[UNDEFINED]
[UNDEFINED]


but I wonder if the manual could be clarified, not everyone would guess that:-)

David

From pragma at wxs.nl  Wed Oct 26 15:08:03 2016
From: pragma at wxs.nl (Hans Hagen)
Date: Wed, 26 Oct 2016 15:08:03 +0200
Subject: [luatex] scanning for undefined command names
In-Reply-To: <CAEW6iOjGGefHTU_B1Df8HwXJ4kUCYyq4kUKx0hvOddMOoRER8w@mail.gmail.com>
References: <CAEW6iOi1DsD=_yw4HYPKs6P_ca6+YuDoiMOX6kbfkUxjA6jmxA@mail.gmail.com>
 <97d3909c-0ff8-c819-64c6-b83c79002779@wxs.nl>
 <CAEW6iOjGGefHTU_B1Df8HwXJ4kUCYyq4kUKx0hvOddMOoRER8w@mail.gmail.com>
Message-ID: <19b22763-f40b-8a9c-64c5-2364b42b6ec7@wxs.nl>

On 10/26/2016 2:25 PM, David Carlisle wrote:
> Hans,
>
>> there is no token \UNDEFINED so it cannot be reported as such
>
> I think that is a terminology problem that is the source of the confusion.
>
> there is no entry in the internal table of control names that
> presumably you are looking up here but \UNDEFINED is a token in the
> usual TeX sense \UNDEFINED can take part in token lists
> \def\foo{\UNDEFINED}  if  \UNDEFINED isn't a "token" what is it?
>
> Actually while writing the above, I guessed that the following would
> work and in fact it does
>
>
> \def\z{\UNDEFINED}
> \directlua{texio.write_nl("[" .. token.scan_csname() .. "]")}\par
> \directlua{texio.write_nl("[" .. token.get_next().csname .. "]")}\par
> \directlua{texio.write_nl("[" .. token.scan_csname() .. "]")}\UNDEFINED
> \directlua{texio.write_nl("[" .. token.get_next().csname .. "]")}\UNDEFINED
>
> produces
>
> [par]
> [par]
> [UNDEFINED]
> [UNDEFINED]
>
>
> but I wonder if the manual could be clarified, not everyone would guess that:-)

indeed (i bet that there are a few more confusing cases, esp because tex 
itself when scanning puts stuff back while the token.* functions are 
just picking things up)

i think can add your example as explanation somewhere

Hans


-----------------------------------------------------------------
                                           Hans Hagen | PRAGMA ADE
               Ridderstraat 27 | 8061 GH Hasselt | The Netherlands
        tel: 038 477 53 69 | www.pragma-ade.nl | www.pragma-pod.nl
-----------------------------------------------------------------

