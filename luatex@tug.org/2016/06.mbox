From bruno.voisin at legi.cnrs.fr  Wed Jun  1 21:13:28 2016
From: bruno.voisin at legi.cnrs.fr (Bruno Voisin)
Date: Wed, 1 Jun 2016 21:13:28 +0200
Subject: [luatex] Magnification broken in different ways in luatex and
 dviluatex
Message-ID: <B717826C-EBD7-4F7B-B045-467AA9AC7C3F@legi.cnrs.fr>

Hi All,

\mag and \magnification seem broken in luatex and dviluatex, in different ways for each:

- For luatex, the specified magnification seems not to be applied to anything.

- For dviluatex, the specified magnification seems to be applied to everything, whether or not true units are specified.

This on Mac OS X 10.11.5 (the latest version) with mactex-20160523 (the latest build of tlpretest for the Mac).

Attached is a test file slightly adapted from <http://tracker.luatex.org/view.php?id=971>, and the output with pdftex, tex+dvips+gs, xetex (same for all 3), luatex and dviluatex.

The same can also be observed with the minimal test file in the comments at the end of pdftexmagfix.tex.

Bruno Voisin

(Please cc replies to my address, as I'm not subscribed to the list.)

-------------- next part --------------
A non-text attachment was scrubbed...
Name: testmag2-dviluatex.pdf
Type: application/pdf
Size: 3817 bytes
Desc: not available
URL: <http://tug.org/pipermail/luatex/attachments/20160601/ad9168dc/attachment-0005.pdf>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: testmag2-dvips.pdf
Type: application/pdf
Size: 3907 bytes
Desc: not available
URL: <http://tug.org/pipermail/luatex/attachments/20160601/ad9168dc/attachment-0006.pdf>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: testmag2-luatex.pdf
Type: application/pdf
Size: 13059 bytes
Desc: not available
URL: <http://tug.org/pipermail/luatex/attachments/20160601/ad9168dc/attachment-0007.pdf>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: testmag2-pdftex.pdf
Type: application/pdf
Size: 13250 bytes
Desc: not available
URL: <http://tug.org/pipermail/luatex/attachments/20160601/ad9168dc/attachment-0008.pdf>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: testmag2-xetex.pdf
Type: application/pdf
Size: 3039 bytes
Desc: not available
URL: <http://tug.org/pipermail/luatex/attachments/20160601/ad9168dc/attachment-0009.pdf>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: testmag2.tex
Type: application/x-tex
Size: 414 bytes
Desc: not available
URL: <http://tug.org/pipermail/luatex/attachments/20160601/ad9168dc/attachment-0001.tex>

From pragma at wxs.nl  Wed Jun  1 23:54:23 2016
From: pragma at wxs.nl (Hans Hagen)
Date: Wed, 1 Jun 2016 23:54:23 +0200
Subject: [luatex] Magnification broken in different ways in luatex and
 dviluatex
In-Reply-To: <B717826C-EBD7-4F7B-B045-467AA9AC7C3F@legi.cnrs.fr>
References: <B717826C-EBD7-4F7B-B045-467AA9AC7C3F@legi.cnrs.fr>
Message-ID: <7f35f70b-0a6e-5903-39ce-694b50982aa3@wxs.nl>

On 6/1/2016 9:13 PM, Bruno Voisin wrote:
> Hi All,
>
> \mag and \magnification seem broken in luatex and dviluatex, in different ways for each:
>
> - For luatex, the specified magnification seems not to be applied to anything.
>
> - For dviluatex, the specified magnification seems to be applied to everything, whether or not true units are specified.
>
> This on Mac OS X 10.11.5 (the latest version) with mactex-20160523 (the latest build of tlpretest for the Mac).
>
> Attached is a test file slightly adapted from <http://tracker.luatex.org/view.php?id=971>, and the output with pdftex, tex+dvips+gs, xetex (same for all 3), luatex and dviluatex.
>
> The same can also be observed with the minimal test file in the comments at the end of pdftexmagfix.tex.

In pdf output mode \mag is not supported (has to do with accuracy, which 
is different in different spots in the backend and sensitive for 
overflow; graphics etc.).

In dvi mode we (stil) support it bit one needs to be aware of side 
effects when switching output modes while typesetting the first page 
because the output mode is only frozen when the first page ships out. 
(This is no big deal as using pdf backend features while going dvi 
afterwards is also messy, i.e. one has to set up these things as soon as 
possible.)

I fixed the dvi bit.

Hans

-----------------------------------------------------------------
                                           Hans Hagen | PRAGMA ADE
               Ridderstraat 27 | 8061 GH Hasselt | The Netherlands
       tel: 038 477 53 69 | www.pragma-ade.com | www.pragma-pod.nl
-----------------------------------------------------------------

From herbs at wideopenwest.com  Thu Jun  2 02:39:56 2016
From: herbs at wideopenwest.com (Herbert Schulz)
Date: Wed, 1 Jun 2016 19:39:56 -0500
Subject: [luatex] Lucida Bright OT
Message-ID: <A5ADBB3E-2A30-4677-972F-78438923B09B@wideopenwest.com>

Howdy,

Enclosed are two font sample files for Lucida Bright OT. One was created with XeLaTeX and the other with LuaLaTeX (both using the latest fontspec with a full up to date tlpretest). Please notice that Bold-Italic in the sample compiled with LuaLaTeX is wrong.

-------------- next part --------------
A non-text attachment was scrubbed...
Name: XeLaTeXVersion.pdf
Type: application/pdf
Size: 35334 bytes
Desc: not available
URL: <http://tug.org/pipermail/luatex/attachments/20160601/f87aef51/attachment-0002.pdf>
-------------- next part --------------
 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: LuaLaTeXVersion.pdf
Type: application/pdf
Size: 26046 bytes
Desc: not available
URL: <http://tug.org/pipermail/luatex/attachments/20160601/f87aef51/attachment-0003.pdf>
-------------- next part --------------


Good Luck,

Herb Schulz
(herbs at wideopenwest dot com)






From luigi.scarso at gmail.com  Mon Jun  6 15:59:06 2016
From: luigi.scarso at gmail.com (luigi scarso)
Date: Mon, 6 Jun 2016 15:59:06 +0200
Subject: [luatex] Luatex 0.95.0 announcement
Message-ID: <CAG5iGsBqNFy-6zEK4ufWCs_3BpjvvqfobdLFw6P8fweywwWgug@mail.gmail.com>

==============================================================
LuaTeX Release 0.95 for TeX Live 2016 was released 2016042515
==============================================================

This is the official frozen TeXlive 2016 version and
a prerelease of the stable 1.0 version.

- deleted 'beta' from the luatex_version_string
- glues now have gluespec merged in (idem math and insert)
- registers are still glue specs
- the spec field in glues are gone
- extra tex.setglue and tex.setmuglue
- obsolete dvi related dir fields removed



Have fun,
Hans, Luigi, Taco
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://tug.org/pipermail/luatex/attachments/20160606/6aa19e72/attachment.html>

From ulrich.laube at dfs.de  Tue Jun  7 08:23:35 2016
From: ulrich.laube at dfs.de (Laube, Ulrich)
Date: Tue, 7 Jun 2016 06:23:35 +0000
Subject: [luatex] shell-escape broken?
Message-ID: <1465280615567.70973@dfs.de>

?
Hi!

I have tried TL16 on different computers running Linux by now and one thing I noticed is the following:

\documentclass{minimal}
\begin{document}
\immediate\write18{uname -s > "foobar"}
\end{document}

With

pdflatex --shell-escape test.tex

the file foobar is created. With 

lualatex --shell-escape test.text

it is not. Can someone confirm this?

This seems to break (at least)
minted.sty (which tries to do \write18{which "pygmentize" && touch \jobname.aex})
and
ifplatform.sty.


Kind regards
Uli Laube

DFS Deutsche Flugsicherung GmbH
Am DFS-Campus
D - 63225 Langen

Tel.: +49-(0)6103-707-0

Sitz der Gesellschaft: Langen/Hessen
Zust?ndiges Registergericht: AG Offenbach am Main, HRB 34977
Vorsitzende des Aufsichtsrats: Dr. Martina Hinricher
Gesch?ftsf?hrer: Prof. Klaus-Dieter Scheurle (Vors.), Robert Schickling, Dr. Michael Hann

Internet: http://www.dfs.de
Public-Key der DFS: http://www.dfs.de/dfs/public_key.asc <http://www.dfs.de/dfs/public_key.asc>


From Herbert.Voss at FU-Berlin.DE  Tue Jun  7 14:37:55 2016
From: Herbert.Voss at FU-Berlin.DE (Herbert Voss)
Date: Tue, 7 Jun 2016 14:37:55 +0200
Subject: [luatex] shell-escape broken?
In-Reply-To: <1465280615567.70973@dfs.de>
References: <1465280615567.70973@dfs.de>
Message-ID: <5756C023.1000003@FU-Berlin.DE>

Am 07.06.2016 um 08:23 schrieb Laube, Ulrich:

> I have tried TL16 on different computers running Linux by now and one thing I noticed is the following:

With latest LuaTeX:

> \documentclass{minimal}

\usepackage{shellesc}

> \begin{document}
% \immediate\write18{uname -s > "foobar"}

\ShellEscape{uname -s > "foobar"}

> \end{document}


Herbert

From joseph.wright at morningstar2.co.uk  Tue Jun  7 14:39:29 2016
From: joseph.wright at morningstar2.co.uk (Joseph Wright)
Date: Tue, 7 Jun 2016 13:39:29 +0100
Subject: [luatex] shell-escape broken?
In-Reply-To: <1465280615567.70973@dfs.de>
References: <1465280615567.70973@dfs.de>
Message-ID: <8063ad6f-4891-f490-0943-8449004cf749@morningstar2.co.uk>

On 07/06/2016 07:23, Laube, Ulrich wrote:
> ?
> Hi!
> 
> I have tried TL16 on different computers running Linux by now and one thing I noticed is the following:
> 
> \documentclass{minimal}
> \begin{document}
> \immediate\write18{uname -s > "foobar"}
> \end{document}
> 
> With
> 
> pdflatex --shell-escape test.tex
> 
> the file foobar is created. With 
> 
> lualatex --shell-escape test.text
> 
> it is not. Can someone confirm this?
> 
> This seems to break (at least)
> minted.sty (which tries to do \write18{which "pygmentize" && touch \jobname.aex})
> and
> ifplatform.sty.
> 
> 
> Kind regards
> Uli Laube

With the latest LuaTeX \write18 is no longer 'special'.  The LaTeX team
have a new package shellesc to address this.

Joseph


From msch at fa.uni-tuebingen.de  Tue Jun  7 15:17:56 2016
From: msch at fa.uni-tuebingen.de (Mathias Schickel)
Date: Tue, 7 Jun 2016 15:17:56 +0200
Subject: [luatex] Bug in LuaTeX regarding Math Kerning
Message-ID: <D678C7AC-FF7A-4094-8A42-C31D96E3A544@fa.uni-tuebingen.de>

Dear LuaTeX team,

some minutes ago I sent the email attached to the mailing list dev-luatex at ntg.nl. I think that has been the wrong list and this is why I am sending this email to you now. I hope I have found the right email list this time.

Yours sincerely
Mathias Schickel


> Dear LuaTeX team,
> 
> I am not really sure if this email list is the right one to address this email to, but I hope the report reaches the right developers. If you can tell to which address I should send this report, too, then feel free to name the address or to simply pass on my mail.
> 
> So now the report: Today I installed the new TeXLive 2016 and have found that the MathKerning seems to be disabled in LuaLaTeX and in ConTeXt as well. In TeXLive 2015 everything did work fine. I have attached a minimal working example and two outputs: One done by TeXLive 2015 and it?s LuaTeX version, and one by TeXLive 2016 with the updated version of LuaTeX. You can see that the MathKerning for the indices and for the integral borders is not working in the version produced by TeXLive 2016. I compiled both versions under MacOS X (newest version). I did not test Windows or MikTeX and I have tested various OpenType fonts and all of them showed up the same behavior.
> 
> Yours sincerely
> Mathias Schickel
> 
> 
> 
> 
> 
> 
> 
> -------------------------------------------------------------------------------
> Mathias Schickel
> -------------------------------------------------------------------------------
> Arbeitsbereich Funktionalanalysis
> Universitaet Tuebingen
> Mathematisches Institut
> Auf der Morgenstelle 10
> D-72076 Tuebingen
> -------------------------------------------------------------------------------
> E-mail: msch at fa.uni-tuebingen.de <mailto:msch at fa.uni-tuebingen.de>
> -------------------------------------------------------------------------------
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://tug.org/pipermail/luatex/attachments/20160607/1ca80b3c/attachment-0004.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: LuaLaTeX.tex
Type: application/x-tex
Size: 296 bytes
Desc: not available
URL: <http://tug.org/pipermail/luatex/attachments/20160607/1ca80b3c/attachment-0001.tex>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://tug.org/pipermail/luatex/attachments/20160607/1ca80b3c/attachment-0005.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: LuaLaTeX-output-texlive2015.pdf
Type: application/pdf
Size: 9789 bytes
Desc: not available
URL: <http://tug.org/pipermail/luatex/attachments/20160607/1ca80b3c/attachment-0002.pdf>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://tug.org/pipermail/luatex/attachments/20160607/1ca80b3c/attachment-0006.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: LuaLaTeX-output-texlive2016.pdf
Type: application/pdf
Size: 9790 bytes
Desc: not available
URL: <http://tug.org/pipermail/luatex/attachments/20160607/1ca80b3c/attachment-0003.pdf>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://tug.org/pipermail/luatex/attachments/20160607/1ca80b3c/attachment-0007.html>

From luatex at nililand.de  Tue Jun  7 16:09:23 2016
From: luatex at nililand.de (Ulrike Fischer)
Date: Tue, 7 Jun 2016 16:09:23 +0200
Subject: [luatex] Bug in LuaTeX regarding Math Kerning
References: <D678C7AC-FF7A-4094-8A42-C31D96E3A544@fa.uni-tuebingen.de>
Message-ID: <19nts3m8ikqqk.dlg@nililand.de>

Am Tue, 7 Jun 2016 15:17:56 +0200 schrieb Mathias Schickel:

>> I did not test Windows or MikTeX and I have tested various OpenType
>> fonts and all of them showed up the same behavior.

I can confirm the problem for windows and miktex. And this context
example (from a minimals of today) has wrong kerning too:

\starttext
\startformula F_j = \int\nolimits_a^b \stopformula
\stoptext


It is perhaps related to this discussion:

https://mailman.ntg.nl/pipermail/ntg-context/2016/085765.html

-- 
Ulrike Fischer 
http://www.troubleshooting-tex.de/


From d.p.carlisle at gmail.com  Tue Jun  7 16:12:44 2016
From: d.p.carlisle at gmail.com (David Carlisle)
Date: Tue, 7 Jun 2016 15:12:44 +0100
Subject: [luatex] shell-escape broken?
In-Reply-To: <8063ad6f-4891-f490-0943-8449004cf749@morningstar2.co.uk>
References: <1465280615567.70973@dfs.de>
 <8063ad6f-4891-f490-0943-8449004cf749@morningstar2.co.uk>
Message-ID: <CAEW6iOj_nH9sxaSnEyzqiYUfeTgsVCDnzKB=9DR+isCq1buuHg@mail.gmail.com>

shellesc should address this in general but for minted it is fixed in
github see


https://github.com/gpoore/minted/issues/112

I expect this version will be pushed to ctan/texlive/miktex soon.

David
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://tug.org/pipermail/luatex/attachments/20160607/18043836/attachment.html>

From preining at logic.at  Tue Jun  7 16:25:43 2016
From: preining at logic.at (Norbert Preining)
Date: Tue, 7 Jun 2016 23:25:43 +0900
Subject: [luatex] shell-escape broken?
In-Reply-To: <CAEW6iOj_nH9sxaSnEyzqiYUfeTgsVCDnzKB=9DR+isCq1buuHg@mail.gmail.com>
References: <1465280615567.70973@dfs.de>
 <8063ad6f-4891-f490-0943-8449004cf749@morningstar2.co.uk>
 <CAEW6iOj_nH9sxaSnEyzqiYUfeTgsVCDnzKB=9DR+isCq1buuHg@mail.gmail.com>
Message-ID: <20160607142543.GD19163@logic.at>

David,

one thing ..

> shellesc should address this in general but for minted it is fixed in


I was hacking support for new luatex into pgf and pgfplots which use
write18, too, to call gnuplot etc. But these packages are not 
necessarily latex only, and as far as I can see I cannot load the
shellesc package into a plain tex session. I just copied the
minimal code for detection, and submitted it to pgf people, but
maybe you can do something about shellesc.sty to make it generic?

Thanks

Norbert

--
PREINING Norbert + TeX Live & Debian Developer + http://www.preining.info
GPG: 0x860CDC13    fp: F7D8 A928 26E3 16A1 9FA0  ACF0 6CAC A448 860C DC13

From d.p.carlisle at gmail.com  Tue Jun  7 16:37:08 2016
From: d.p.carlisle at gmail.com (David Carlisle)
Date: Tue, 7 Jun 2016 15:37:08 +0100
Subject: [luatex] shell-escape broken?
In-Reply-To: <20160607142543.GD19163@logic.at>
References: <1465280615567.70973@dfs.de>
 <8063ad6f-4891-f490-0943-8449004cf749@morningstar2.co.uk>
 <CAEW6iOj_nH9sxaSnEyzqiYUfeTgsVCDnzKB=9DR+isCq1buuHg@mail.gmail.com>
 <20160607142543.GD19163@logic.at>
Message-ID: <CAEW6iOi3euREVXro_wDi67uzqQicNbum2qnnNxuSYj=8nonX5A@mail.gmail.com>

On 7 June 2016 at 15:25, Norbert Preining <preining at logic.at> wrote:

> David,
>
> one thing ..
>
> > shellesc should address this in general but for minted it is fixed in
>
>
> I was hacking support for new luatex into pgf and pgfplots which use
> write18, too, to call gnuplot etc. But these packages are not
> necessarily latex only, and as far as I can see I cannot load the
> shellesc package into a plain tex session. I just copied the
> minimal code for detection, and submitted it to pgf people, but
> maybe you can do something about shellesc.sty to make it generic?
>
> Thanks
>
> Norbert


It should work now, in plain tex, as far as i can see

The first line is

\ifx\ProvidesPackage\undefined

which allows it to skip ProvidesPackage in plain

David
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://tug.org/pipermail/luatex/attachments/20160607/c4a443f5/attachment.html>

From frank.mittelbach at latex-project.org  Tue Jun  7 16:41:47 2016
From: frank.mittelbach at latex-project.org (Frank Mittelbach)
Date: Tue, 7 Jun 2016 16:41:47 +0200
Subject: [luatex] shell-escape broken?
In-Reply-To: <CAEW6iOi3euREVXro_wDi67uzqQicNbum2qnnNxuSYj=8nonX5A@mail.gmail.com>
References: <1465280615567.70973@dfs.de>
 <8063ad6f-4891-f490-0943-8449004cf749@morningstar2.co.uk>
 <CAEW6iOj_nH9sxaSnEyzqiYUfeTgsVCDnzKB=9DR+isCq1buuHg@mail.gmail.com>
 <20160607142543.GD19163@logic.at>
 <CAEW6iOi3euREVXro_wDi67uzqQicNbum2qnnNxuSYj=8nonX5A@mail.gmail.com>
Message-ID: <b5fb52da-d891-31d4-8f31-da2f0d4ec0b1@latex-project.org>

Am 07.06.16 um 16:37 schrieb David Carlisle:
>
> It should work now, in plain tex, as far as i can see
>
> The first line is
>
> \ifx\ProvidesPackage\undefined
>
> which allows it to skip ProvidesPackage in plain


perhaps worth advertising in the package that it works with LaTeX and 
"plain" even though it is distributed as part of LaTeX.

frank

From joseph.wright at morningstar2.co.uk  Tue Jun  7 16:47:41 2016
From: joseph.wright at morningstar2.co.uk (Joseph Wright)
Date: Tue, 7 Jun 2016 15:47:41 +0100
Subject: [luatex] shell-escape broken?
In-Reply-To: <CAEW6iOi3euREVXro_wDi67uzqQicNbum2qnnNxuSYj=8nonX5A@mail.gmail.com>
References: <1465280615567.70973@dfs.de>
 <8063ad6f-4891-f490-0943-8449004cf749@morningstar2.co.uk>
 <CAEW6iOj_nH9sxaSnEyzqiYUfeTgsVCDnzKB=9DR+isCq1buuHg@mail.gmail.com>
 <20160607142543.GD19163@logic.at>
 <CAEW6iOi3euREVXro_wDi67uzqQicNbum2qnnNxuSYj=8nonX5A@mail.gmail.com>
Message-ID: <2872c6e5-66b1-8fc7-6ac0-1cd02ebd76dd@morningstar2.co.uk>

On 07/06/2016 15:37, David Carlisle wrote:

> It should work now, in plain tex, as far as i can see
> 
> The first line is
> 
> \ifx\ProvidesPackage\undefined
> 
> which allows it to skip ProvidesPackage in plain
> 
> David

'Fraid not

    \catcode`\@=11
    \input shellesc.sty %

...

    ! Undefined control sequence.
    l.67   \PackageInfo
                          {shellesc}{Restricted shell escape ensabled}
    ?

Joseph

From frank.mittelbach at latex-project.org  Tue Jun  7 16:56:45 2016
From: frank.mittelbach at latex-project.org (Frank Mittelbach)
Date: Tue, 7 Jun 2016 16:56:45 +0200
Subject: [luatex] shell-escape broken?
In-Reply-To: <2872c6e5-66b1-8fc7-6ac0-1cd02ebd76dd@morningstar2.co.uk>
References: <1465280615567.70973@dfs.de>
 <8063ad6f-4891-f490-0943-8449004cf749@morningstar2.co.uk>
 <CAEW6iOj_nH9sxaSnEyzqiYUfeTgsVCDnzKB=9DR+isCq1buuHg@mail.gmail.com>
 <20160607142543.GD19163@logic.at>
 <CAEW6iOi3euREVXro_wDi67uzqQicNbum2qnnNxuSYj=8nonX5A@mail.gmail.com>
 <2872c6e5-66b1-8fc7-6ac0-1cd02ebd76dd@morningstar2.co.uk>
Message-ID: <22a2c92a-eee9-8415-64fb-54a0d5c13e36@latex-project.org>

Am 07.06.16 um 16:47 schrieb Joseph Wright:
> 'Fraid not
>
>     \catcode`\@=11
>     \input shellesc.sty %
>
> ...
>
>     ! Undefined control sequence.
>     l.67   \PackageInfo
>                           {shellesc}{Restricted shell escape ensabled}
>     ?


how boring to test against reality Joseph :-)

but I guess that can and should be fixed rather than replicating code 
all over the generic packages

also fwisw my mail editor does know "ensabled"

frank

From pragma at wxs.nl  Tue Jun  7 22:02:10 2016
From: pragma at wxs.nl (Hans Hagen)
Date: Tue, 7 Jun 2016 22:02:10 +0200
Subject: [luatex] Bug in LuaTeX regarding Math Kerning
In-Reply-To: <19nts3m8ikqqk.dlg@nililand.de>
References: <D678C7AC-FF7A-4094-8A42-C31D96E3A544@fa.uni-tuebingen.de>
 <19nts3m8ikqqk.dlg@nililand.de>
Message-ID: <9d8c609f-1cbd-7bbf-5f10-206714bb1d98@wxs.nl>

On 6/7/2016 4:09 PM, Ulrike Fischer wrote:
> Am Tue, 7 Jun 2016 15:17:56 +0200 schrieb Mathias Schickel:
>
>>> I did not test Windows or MikTeX and I have tested various OpenType
>>> fonts and all of them showed up the same behavior.
>
> I can confirm the problem for windows and miktex. And this context
> example (from a minimals of today) has wrong kerning too:
>
> \starttext
> \startformula F_j = \int\nolimits_a^b \stopformula
> \stoptext
>
>
> It is perhaps related to this discussion:
>
> https://mailman.ntg.nl/pipermail/ntg-context/2016/085765.html

It has to do with the fact that only a few fonts currently provide math 
kerns (cambria does, as does lucida). The lm fonts use a mixture of
(old school) fake width + italics to do kerning, and pagella has none of 
it. The next version of the gyre/lm fonts will be fixed in this respect. 
So, some patience is needed.

Hans


-----------------------------------------------------------------
                                           Hans Hagen | PRAGMA ADE
               Ridderstraat 27 | 8061 GH Hasselt | The Netherlands
       tel: 038 477 53 69 | www.pragma-ade.com | www.pragma-pod.nl
-----------------------------------------------------------------

From preining at logic.at  Wed Jun  8 07:56:25 2016
From: preining at logic.at (Norbert Preining)
Date: Wed, 8 Jun 2016 14:56:25 +0900
Subject: [luatex] shell-escape broken?
In-Reply-To: <CAEW6iOi3euREVXro_wDi67uzqQicNbum2qnnNxuSYj=8nonX5A@mail.gmail.com>
References: <1465280615567.70973@dfs.de>
 <8063ad6f-4891-f490-0943-8449004cf749@morningstar2.co.uk>
 <CAEW6iOj_nH9sxaSnEyzqiYUfeTgsVCDnzKB=9DR+isCq1buuHg@mail.gmail.com>
 <20160607142543.GD19163@logic.at>
 <CAEW6iOi3euREVXro_wDi67uzqQicNbum2qnnNxuSYj=8nonX5A@mail.gmail.com>
Message-ID: <20160608055625.GG19163@logic.at>

Hi David,

> The first line is
> 
> \ifx\ProvidesPackage\undefined

That does not suffice:
[~] pdftex
This is pdfTeX, Version 3.14159265-2.6-1.40.17 (TeX Live 2016) (preloaded format=pdftex)
 restricted \write18 enabled.
**\relax
entering extended mode

*\input shellesc.sty
(/home/norbert/tl/2016/texmf-dist/tex/latex/tools/shellesc.sty
! Undefined control sequence.
l.67   \PackageInfo
                      {shellesc}{Restricted shell escape ensabled}
? 


All the best

Norbert

--
PREINING Norbert + TeX Live & Debian Developer + http://www.preining.info
GPG: 0x860CDC13    fp: F7D8 A928 26E3 16A1 9FA0  ACF0 6CAC A448 860C DC13

From d.p.carlisle at gmail.com  Wed Jun  8 08:45:22 2016
From: d.p.carlisle at gmail.com (David Carlisle)
Date: Wed, 8 Jun 2016 07:45:22 +0100
Subject: [luatex] shell-escape broken?
In-Reply-To: <20160608055625.GG19163@logic.at>
References: <1465280615567.70973@dfs.de>
 <8063ad6f-4891-f490-0943-8449004cf749@morningstar2.co.uk>
 <CAEW6iOj_nH9sxaSnEyzqiYUfeTgsVCDnzKB=9DR+isCq1buuHg@mail.gmail.com>
 <20160607142543.GD19163@logic.at>
 <CAEW6iOi3euREVXro_wDi67uzqQicNbum2qnnNxuSYj=8nonX5A@mail.gmail.com>
 <20160608055625.GG19163@logic.at>
Message-ID: <CAEW6iOjC4De-J3-_a++CLwDxJqv=iA+BBxbytBxNqV90YLHZLQ@mail.gmail.com>

On 8 June 2016 at 06:56, Norbert Preining <preining at logic.at> wrote:

> Hi David,
>
> > The first line is
> >
> > \ifx\ProvidesPackage\undefined
>
> That does not suffice:
> [~] pdftex
> This is pdfTeX, Version 3.14159265-2.6-1.40.17 (TeX Live 2016) (preloaded
> format=pdftex)
>  restricted \write18 enabled.
> **\relax
> entering extended mode
>
> *\input shellesc.sty
> (/home/norbert/tl/2016/texmf-dist/tex/latex/tools/shellesc.sty
> ! Undefined control sequence.
> l.67   \PackageInfo
>                       {shellesc}{Restricted shell escape ensabled}
> ?
>
>
> All the best
>
> Norbert
>


yes sorry, that's why it was there, but as Joseph also commented, it isn't
enough.
I've fixed that in the latex svn yesterday after your message.

https://latex-project.org/svnroot/latex2e-public/trunk/required/tools/

so you could now go

\catcode`@=11 \input shellesc.sty

in (extended) plain tex (needs \protected still as I haven't guarded that)

I could guard guard \protected and the catcode of @ but really I think it
isn't worth it, the actual code needed is one ifx and a couple of def so
adding too much code to guard latex constructs for plain tex seems out of
proportion.

overloading \write to check for 18 is just a short term compatibility hack
to ease the changeover, and I plan to add an option to shellesc not to do
it, so the real code you need is just a switch between write18 and
os.execute so something like

\ifx\lastsavedimageresourcepages\undefined
  \protected\def\ShellEscape{\immediate\write18 }
\else
  \protected\def\ShellEscape#1{%
    \directlua{os.execute("\luaescapestring{#1}")}}
\fi

and defining that in plain is (even with the changes I just made) is
simpler than loading shellesc.sty

David
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://tug.org/pipermail/luatex/attachments/20160608/9de81eba/attachment.html>

From pali.rohar at gmail.com  Thu Jun  9 22:44:56 2016
From: pali.rohar at gmail.com (Pali =?utf-8?q?Roh=C3=A1r?=)
Date: Thu, 9 Jun 2016 22:44:56 +0200
Subject: [luatex] luatex - font encoding for type 1 fonts
Message-ID: <201606092244.56067@pali>

Hello,

how I can specify font encoding for specific type 1 font?

E.g. font csr10 (stored in fonts/type1/public/cs/csr10.pfb) is in IL2 
encoding which means that character ? (Latin Small Letter C with caron) 
is at position 232.

Code 232 is invalid in UTF-8 and therefore I cannot enter it normally 
for luatex. So for printing it I need to use sequence \char232, which 
works.

\font\csr=csr10
\csr\char232
\bye

Is there any simple way to tell luatex font encoding table (unicode 
character --> code in type 1 font)? So I could be able to write utf8 
string "?" directly in text editor instead \char232.

My very quick hack for this was changing catcode of ? to 13 and then 
defining macro ? as \char232.

\catcode`\?=\active
\def?{\char232}
\font\csr=csr10
\csr?
\bye

But I would like to avoid changing catcode of unicode characters and fix 
this at font level.

-- 
Pali Roh?r
pali.rohar at gmail.com
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 198 bytes
Desc: This is a digitally signed message part.
URL: <http://tug.org/pipermail/luatex/attachments/20160609/e4fc23bc/attachment.bin>

From listas at tex-tipografia.com  Sat Jun 11 12:09:57 2016
From: listas at tex-tipografia.com (Javier Bezos)
Date: Sat, 11 Jun 2016 12:09:57 +0200
Subject: [luatex] Duplicated textdir's
Message-ID: <575BE375.8040207@tex-tipografia.com>

Consider the following document:

\documentclass{article}
\begin{document}
one {{\textdir TRT two} three} four
\end{document}

I get "one owt three four", as expected. Now consider:

\documentclass{article}
\begin{document}
one {{\textdir TRT \textdir TRT two} three} four
\end{document}

The result is "one rouf eerht owt" (ie, the textdir
is set globally).

Is this the intended behaviour? I don't find the logic
behind it. (Tested with TL15 and TL16.)

Javier

From pragma at wxs.nl  Sun Jun 12 13:05:50 2016
From: pragma at wxs.nl (Hans Hagen)
Date: Sun, 12 Jun 2016 13:05:50 +0200
Subject: [luatex] Duplicated textdir's
In-Reply-To: <575BE375.8040207@tex-tipografia.com>
References: <575BE375.8040207@tex-tipografia.com>
Message-ID: <0608af2e-5443-d920-9dc8-d275f467b23a@wxs.nl>

On 6/11/2016 12:09 PM, Javier Bezos wrote:
> Consider the following document:
>
> \documentclass{article}
> \begin{document}
> one {{\textdir TRT two} three} four
> \end{document}
>
> I get "one owt three four", as expected. Now consider:
>
> \documentclass{article}
> \begin{document}
> one {{\textdir TRT \textdir TRT two} three} four
> \end{document}
>
> The result is "one rouf eerht owt" (ie, the textdir
> is set globally).
>
> Is this the intended behaviour? I don't find the logic
> behind it. (Tested with TL15 and TL16.)

i'll look into it

-----------------------------------------------------------------
                                           Hans Hagen | PRAGMA ADE
               Ridderstraat 27 | 8061 GH Hasselt | The Netherlands
       tel: 038 477 53 69 | www.pragma-ade.com | www.pragma-pod.nl
-----------------------------------------------------------------

From Arno.Trautmann at gmx.de  Mon Jun 13 11:35:11 2016
From: Arno.Trautmann at gmx.de (Arno Trautmann)
Date: Mon, 13 Jun 2016 11:35:11 +0200
Subject: [luatex] sub and superscripts in Lua(La)TeX with tfm/otf
Message-ID: <eedd96d5-3d0a-64d3-a070-c99d29353e32@gmx.de>

Hi all,

I encountered some strange behaviour regarding the subscript and 
superscripts in LuaLaTeX compared to pdfLaTeX. Consider the following 
small example:

%\RequirePackage{luatex85}
\documentclass{scrartcl}
%\usepackage{subdepth}
%\usepackage{unicode-math}

\begin{document}
\[a_ia_i^+a^+a_i^\dagger\]
\[M_n M_n^\dagger M_n^+\]
\end{document}

Compilation with pdfLaTeX results in shifted positions for the sub and 
super scripts according to the TeXbook. The package subdepth equalizes 
them, which in this case looks nicer.
With LuaLaTeX, the subdepth package does not work, and has no effect on 
the positioning whatsoever. David suggested to ask for a reason for this 
behaviour on the luatex-list.
Making things more complicated: If I load unicode-math and thus 
lm-math.otf, the subdepth package still has no effect. BUT: The 
positions of the subscrips is plain wrong in my opinion in the second 
line, as in M_n^\dagger the subscript is placed *higher* than in the 
other cases. Which does not happen for the a_i^\dagger.

In total, I see a lot of different placements of the sub/superscripts 
and I am a bit lost which one is the right one, which one might be a bug 
and which one is intendedly different ? the placement depends on the 
engine, the font, the size of the nucleus and the size of the 
superscript. Can anybody help me figure this one out?
(What I *want* is the behaviour of pdfLaTeX + subdepth to work in 
LuaLaTeX + unicode-math)

Best,
Arno

From luatex at nililand.de  Mon Jun 13 14:53:01 2016
From: luatex at nililand.de (Ulrike Fischer)
Date: Mon, 13 Jun 2016 14:53:01 +0200
Subject: [luatex] sub and superscripts in Lua(La)TeX with tfm/otf
References: <eedd96d5-3d0a-64d3-a070-c99d29353e32@gmx.de>
Message-ID: <sapzs2500dnx$.dlg@nililand.de>

Am Mon, 13 Jun 2016 11:35:11 +0200 schrieb Arno Trautmann:

> Hi all,
> 
> I encountered some strange behaviour regarding the subscript and 
> superscripts in LuaLaTeX compared to pdfLaTeX. Consider the following 
> small example:
> 
> %\RequirePackage{luatex85}
> \documentclass{scrartcl}
> %\usepackage{subdepth}
> %\usepackage{unicode-math}
> 
> \begin{document}
> \[a_ia_i^+a^+a_i^\dagger\]
> \[M_n M_n^\dagger M_n^+\]
> \end{document}
> 
> Compilation with pdfLaTeX results in shifted positions for the sub and 
> super scripts according to the TeXbook. The package subdepth equalizes 
> them, which in this case looks nicer.
> With LuaLaTeX, the subdepth package does not work, and has no effect on 
> the positioning whatsoever. David suggested to ask for a reason for this 
> behaviour on the luatex-list.

As far as I understand the documentation (and the result of some
tests) luatex uses the relevant \fontdimens only when loading the
font to setup some primitive parameters. If you later want to change
the values you have to change the primitives and not the \fontdimens
(as the subdepth package does). 

This here works with and without unicode-math and moves one of the
subscripts n down:

\documentclass{scrartcl}
%\usepackage{subdepth}
%\usepackage{unicode-math}

\begin{document}

\[M_n M_n^\dagger M_n^+\]

\Umathsubshiftdown\displaystyle=5pt
\Umathsubshiftdown\textstyle=5pt

$M_n M_n^\dagger M_n^+$

\[M_n M_n^\dagger M_n^+\]

\end{document}

For more parameters see 6.4 Math parameter settings in the luatex
documentation.

-- 
Ulrike Fischer 
http://www.troubleshooting-tex.de/


From Arno.Trautmann at gmx.de  Mon Jun 13 16:31:20 2016
From: Arno.Trautmann at gmx.de (Arno Trautmann)
Date: Mon, 13 Jun 2016 16:31:20 +0200
Subject: [luatex] sub and superscripts in Lua(La)TeX with tfm/otf
In-Reply-To: <sapzs2500dnx$.dlg@nililand.de>
References: <eedd96d5-3d0a-64d3-a070-c99d29353e32@gmx.de>
 <sapzs2500dnx$.dlg@nililand.de>
Message-ID: <a7d5d8e6-a6c4-f3b7-f546-05d3c920ce03@gmx.de>

On 06/13/2016 02:53 PM, Ulrike Fischer wrote:
> Am Mon, 13 Jun 2016 11:35:11 +0200 schrieb Arno Trautmann:
>
>> Hi all,
>>
>> I encountered some strange behaviour regarding the subscript and
>> superscripts in LuaLaTeX compared to pdfLaTeX. Consider the following
>> small example:
>>
>> %\RequirePackage{luatex85}
>> \documentclass{scrartcl}
>> %\usepackage{subdepth}
>> %\usepackage{unicode-math}
>>
>> \begin{document}
>> \[a_ia_i^+a^+a_i^\dagger\]
>> \[M_n M_n^\dagger M_n^+\]
>> \end{document}
>>
>> Compilation with pdfLaTeX results in shifted positions for the sub and
>> super scripts according to the TeXbook. The package subdepth equalizes
>> them, which in this case looks nicer.
>> With LuaLaTeX, the subdepth package does not work, and has no effect on
>> the positioning whatsoever. David suggested to ask for a reason for this
>> behaviour on the luatex-list.
>
> As far as I understand the documentation (and the result of some
> tests) luatex uses the relevant \fontdimens only when loading the
> font to setup some primitive parameters. If you later want to change
> the values you have to change the primitives and not the \fontdimens
> (as the subdepth package does).
>
> This here works with and without unicode-math and moves one of the
> subscripts n down:
>
> \documentclass{scrartcl}
> %\usepackage{subdepth}
> %\usepackage{unicode-math}
>
> \begin{document}
>
> \[M_n M_n^\dagger M_n^+\]
>
> \Umathsubshiftdown\displaystyle=5pt
> \Umathsubshiftdown\textstyle=5pt
>
> $M_n M_n^\dagger M_n^+$
>
> \[M_n M_n^\dagger M_n^+\]
>
> \end{document}
>
> For more parameters see 6.4 Math parameter settings in the luatex
> documentation.

Thank you very much, I had read that section indeed (after posting here 
?) and found the following working solution, basically the same as yours:

\documentclass{minimal}
\begin{document}
\[M_n M_n^\dagger M_n^+\]

\Umathsubshiftdown\displaystyle=2.84pt
\Umathsubsupshiftdown\displaystyle=2.84pt
\Umathsubsupvgap\displaystyle=1pt

\[M_n M_n^\dagger M_n^+\]
\end{document}

One question remains here (besides asking the authors of subdepth to 
adapt the package to LuaLaTeX if possible) ? When I try to apply the 
\Umath... settings before the first equation, they are ignored. So 
setting them in the preamble does not work. In plainLuaTeX, otoh, it works:

\Umathsubshiftdown\displaystyle=2.84pt
\Umathsubsupshiftdown\displaystyle=2.84pt
\Umathsubsupvgap\displaystyle=1pt

$$M_n M_n^\dagger M_n^+$$
\bye

Is that related to font loading in LuaLaTeX?

Best,
Arno





From luatex at nililand.de  Mon Jun 13 17:16:42 2016
From: luatex at nililand.de (Ulrike Fischer)
Date: Mon, 13 Jun 2016 17:16:42 +0200
Subject: [luatex] sub and superscripts in Lua(La)TeX with tfm/otf
References: <eedd96d5-3d0a-64d3-a070-c99d29353e32@gmx.de>
 <sapzs2500dnx$.dlg@nililand.de> <a7d5d8e6-a6c4-f3b7-f546-05d3c920ce03@gmx.de>
Message-ID: <of8xjwxmr56h.dlg@nililand.de>

Am Mon, 13 Jun 2016 16:31:20 +0200 schrieb Arno Trautmann:

> When I try to apply the \Umath... settings before the first equation, they are ignored.

This here should work in the preamble:

\makeatletter 
\AtBeginDocument{%
\check at mathfonts
\Umathsubshiftdown\displaystyle=10pt
\Umathsubsupshiftdown\displaystyle=2.84pt
\Umathsubsupvgap\displaystyle=1pt
}


-- 
Ulrike Fischer 
http://www.troubleshooting-tex.de/


From will at wspr.io  Tue Jun 14 02:00:05 2016
From: will at wspr.io (Will Robertson)
Date: Tue, 14 Jun 2016 09:30:05 +0930
Subject: [luatex] sub and superscripts in Lua(La)TeX with tfm/otf
In-Reply-To: <a7d5d8e6-a6c4-f3b7-f546-05d3c920ce03@gmx.de>
References: <eedd96d5-3d0a-64d3-a070-c99d29353e32@gmx.de>
 <sapzs2500dnx$.dlg@nililand.de> <a7d5d8e6-a6c4-f3b7-f546-05d3c920ce03@gmx.de>
Message-ID: <8E1AA24B-2DD0-4728-B60C-61ED9925A4F1@wspr.io>

Hi all,

Thanks Ulrike for the quick solutions.

On 14 Jun 2016, at 12:01 AM, Arno Trautmann <Arno.Trautmann at gmx.de> wrote:
> 
> One question remains here (besides asking the authors of subdepth to adapt the package to LuaLaTeX if possible) ? When I try to apply the \Umath... settings before the first equation, they are ignored. 

I?ve added an ?issue? to address this at some stage:

https://github.com/wspr/unicode-math/issues/358

I?m not managing to spend much time on LaTeX matters at the moment so no guarantee of timely action from me I?m afraid :(

Will



From listas at tex-tipografia.com  Tue Jun 14 18:46:38 2016
From: listas at tex-tipografia.com (Javier Bezos)
Date: Tue, 14 Jun 2016 18:46:38 +0200
Subject: [luatex] Request for Arabic and Hebrew [and now Hindi]
In-Reply-To: <56AA3729.5060707@tex-tipografia.com>
References: <56AA3729.5060707@tex-tipografia.com>
Message-ID: <576034EE.1010407@tex-tipografia.com>

A few months ago I wrote:

> I intend to work with Arabic and Hebrew for babel (luatex
> and lualatex) and I'd like to get some complex examples
> - including footnotes, lists, indexes, math, floats with
> captions and so on - to do some tests and have a clearer
> idea of what I need to do (volunteers are welcome :-)).
> Of course, I won't publish  them, just for private use.

Thank you to those who replied and sent to me sample files.
Now I'd like documents in Hindi (or any other language
written with the Davanagari script) using luatex or lualatex
(or even context).

Javier

From jbezosl at gmail.com  Thu Jun 16 08:26:10 2016
From: jbezosl at gmail.com (Javier B)
Date: Thu, 16 Jun 2016 08:26:10 +0200
Subject: [luatex] Detecting script
Message-ID: <CABVEUFJxEquPnjHG+-9k98rUqrBSxnwvKvA+QevW4DcWskKXMQ@mail.gmail.com>

Which is the best way to detect a change of script and inject some
(more or less) arbitrary code? At first I thought token_filter could be
a possibility, but it will be gone and I presume there are other options.
Any hint or pointer will be appeciated.

Javier
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://tug.org/pipermail/luatex/attachments/20160616/2ef1a181/attachment.html>

From arthur.reutenauer at normalesup.org  Thu Jun 16 10:01:40 2016
From: arthur.reutenauer at normalesup.org (Arthur Reutenauer)
Date: Thu, 16 Jun 2016 09:01:40 +0100
Subject: [luatex] Detecting script
In-Reply-To: <CABVEUFJxEquPnjHG+-9k98rUqrBSxnwvKvA+QevW4DcWskKXMQ@mail.gmail.com>
References: <CABVEUFJxEquPnjHG+-9k98rUqrBSxnwvKvA+QevW4DcWskKXMQ@mail.gmail.com>
Message-ID: <20160616080140.GG330775@phare.normalesup.org>

> Which is the best way to detect a change of script and inject some
> (more or less) arbitrary code? At first I thought token_filter could be
> a possibility, but it will be gone and I presume there are other options.

  Could you describe your use case a bit more?  I suppose it involves
operations you can?t do at the node level, so the suggestion to use
pre_linebreak_filter doesn?t work.

	Best,

		Arthur

From listas at tex-tipografia.com  Thu Jun 16 11:43:32 2016
From: listas at tex-tipografia.com (Javier Bezos)
Date: Thu, 16 Jun 2016 11:43:32 +0200
Subject: [luatex] Detecting script
In-Reply-To: <20160616080140.GG330775@phare.normalesup.org>
References: <CABVEUFJxEquPnjHG+-9k98rUqrBSxnwvKvA+QevW4DcWskKXMQ@mail.gmail.com>
 <20160616080140.GG330775@phare.normalesup.org>
Message-ID: <CABVEUFKySDh7H-ChpG6d1XPHU-WJQtC4rSA94G4du7w+ickUKQ@mail.gmail.com>

> Could you describe your use case a bit more?  I suppose it involves
> operations you can?t do at the node level, so the suggestion to use
> pre_linebreak_filter doesn?t work.

For example:

if char is cyrillic and previouschar is arabic:
   \fontspec{SomeCyrillicFont}
end

And also:

http://wiki.luatex.org/index.php/Token_filter

I'm thinking mainly in short chunks of texts, like a proper noun
inside an Arabic o Devanagari text.

I think pre_linebreak_filte is too late and process_input_buffer
is too soon, but I may be wrong. Or perhaps the best solution is
not based on a callback at all.

Javier





On Thu, Jun 16, 2016 at 10:01 AM, Arthur Reutenauer <
arthur.reutenauer at normalesup.org> wrote:

> > Which is the best way to detect a change of script and inject some
> > (more or less) arbitrary code? At first I thought token_filter could be
> > a possibility, but it will be gone and I presume there are other options.
>
>
>
>         Best,
>
>                 Arthur
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://tug.org/pipermail/luatex/attachments/20160616/28c47627/attachment-0001.html>

From pragma at wxs.nl  Thu Jun 16 12:12:14 2016
From: pragma at wxs.nl (Hans Hagen)
Date: Thu, 16 Jun 2016 12:12:14 +0200
Subject: [luatex] Detecting script
In-Reply-To: <CABVEUFKySDh7H-ChpG6d1XPHU-WJQtC4rSA94G4du7w+ickUKQ@mail.gmail.com>
References: <CABVEUFJxEquPnjHG+-9k98rUqrBSxnwvKvA+QevW4DcWskKXMQ@mail.gmail.com>
 <20160616080140.GG330775@phare.normalesup.org>
 <CABVEUFKySDh7H-ChpG6d1XPHU-WJQtC4rSA94G4du7w+ickUKQ@mail.gmail.com>
Message-ID: <48673df5-7a94-2976-7e8d-4216089e4a81@wxs.nl>

On 6/16/2016 11:43 AM, Javier Bezos wrote:
>> Could you describe your use case a bit more?  I suppose it involves
>> operations you can?t do at the node level, so the suggestion to use
>> pre_linebreak_filter doesn?t work.
>
> For example:
>
> if char is cyrillic and previouschar is arabic:
>    \fontspec{SomeCyrillicFont}
> end
>
> And also:
>
> http://wiki.luatex.org/index.php/Token_filter
>
> I'm thinking mainly in short chunks of texts, like a proper noun
> inside an Arabic o Devanagari text.
>
> I think pre_linebreak_filte is too late and process_input_buffer
> is too soon, but I may be wrong. Or perhaps the best solution is
> not based on a callback at all.

hpack_filter is probably the place you want

> Javier
>
>
>
>
>
> On Thu, Jun 16, 2016 at 10:01 AM, Arthur Reutenauer
> <arthur.reutenauer at normalesup.org
> <mailto:arthur.reutenauer at normalesup.org>> wrote:
>
>     > Which is the best way to detect a change of script and inject some
>     > (more or less) arbitrary code? At first I thought token_filter
>     could be
>     > a possibility, but it will be gone and I presume there are other
>     options.
>
>
>
>             Best,
>
>                     Arthur
>
>


-- 

-----------------------------------------------------------------
                                           Hans Hagen | PRAGMA ADE
               Ridderstraat 27 | 8061 GH Hasselt | The Netherlands
       tel: 038 477 53 69 | www.pragma-ade.com | www.pragma-pod.nl
-----------------------------------------------------------------

From listas at tex-tipografia.com  Thu Jun 16 15:16:15 2016
From: listas at tex-tipografia.com (Javier Bezos)
Date: Thu, 16 Jun 2016 15:16:15 +0200
Subject: [luatex] Detecting script
In-Reply-To: <48673df5-7a94-2976-7e8d-4216089e4a81@wxs.nl>
References: <CABVEUFJxEquPnjHG+-9k98rUqrBSxnwvKvA+QevW4DcWskKXMQ@mail.gmail.com>
 <20160616080140.GG330775@phare.normalesup.org>
 <CABVEUFKySDh7H-ChpG6d1XPHU-WJQtC4rSA94G4du7w+ickUKQ@mail.gmail.com>
 <48673df5-7a94-2976-7e8d-4216089e4a81@wxs.nl>
Message-ID: <5762A69F.2010809@tex-tipografia.com>

Hans,

>> I'm thinking mainly in short chunks of texts, like a proper noun
>> inside an Arabic o Devanagari text.
>>
>> I think pre_linebreak_filte is too late and process_input_buffer is
>> too soon, but I may be wrong. Or perhaps the best solution is not
>> based on a callback at all.
>
> hpack_filter is probably the place you want

Thank you. I'll have a look at it.

Javier

From listas at tex-tipografia.com  Thu Jun 16 16:44:48 2016
From: listas at tex-tipografia.com (Javier Bezos)
Date: Thu, 16 Jun 2016 16:44:48 +0200
Subject: [luatex] Crash: type(r) == unset_node
Message-ID: <5762BB60.6030102@tex-tipografia.com>

The following minimal file crashes with TL2016 (win7/64)
and TL2015:

\documentclass{article}

\directlua{
luatexbase.add_to_callback("hpack_filter", function() end, 'desc')
}

------------
Assertion failed!

Program: C:\...\lualatex.exe
File: ./tex/align.w
Line: 966

Expression: type(r) == unset_node
------------

Unfortunately, using directly callback.register() doesn't work
in LaTeX any more :-(, but it seems the problem is in luatexbase
because using the latter in plain passes.

Javier

From luigi.scarso at gmail.com  Thu Jun 16 17:31:51 2016
From: luigi.scarso at gmail.com (luigi scarso)
Date: Thu, 16 Jun 2016 17:31:51 +0200
Subject: [luatex] Crash: type(r) == unset_node
In-Reply-To: <5762BB60.6030102@tex-tipografia.com>
References: <5762BB60.6030102@tex-tipografia.com>
Message-ID: <CAG5iGsBjbe0fnVu9o6uNiiDGir8EccYLdJnUN6d95B1uJUg5kg@mail.gmail.com>

On Thu, Jun 16, 2016 at 4:44 PM, Javier Bezos <listas at tex-tipografia.com>
wrote:

> The following minimal file crashes with TL2016 (win7/64)
> and TL2015:
>
> \documentclass{article}
>
> \directlua{
> luatexbase.add_to_callback("hpack_filter", function() end, 'desc')
> }
>
> ------------
> Assertion failed!
>
> Program: C:\...\lualatex.exe
> File: ./tex/align.w
> Line: 966
>
> Expression: type(r) == unset_node
> ------------
>
> Unfortunately, using directly callback.register() doesn't work
> in LaTeX any more :-(, but it seems the problem is in luatexbase
> because using the latter in plain passes.
>
> Javier
>

your example gives
# lualatex test.tex
This is LuaTeX, Version 0.95.0 (TeX Live 2016)
 restricted system commands enabled.
(./test1.tex
LaTeX2e <2016/03/31>
Babel <3.9r> and hyphenation patterns for 1 language(s) loaded.

(/media/Iomega_Ext_Drive/opt/luatex/texlive/2016/texmf-dist/tex/latex/base/arti
cle.cls
Document Class: article 2014/09/29 v1.4h Standard LaTeX document class

(/media/Iomega_Ext_Drive/opt/luatex/texlive/2016/texmf-dist/tex/latex/base/size
10.clo)))
*



# cat test1.tex
\documentclass{article}
\begin{document}
\directlua{
luatexbase.add_to_callback("hpack_filter", function() end, 'desc')
}
\end{document}

# lualatex test1.tex
This is LuaTeX, Version 0.95.0 (TeX Live 2016)
 restricted system commands enabled.
(./test1.tex
LaTeX2e <2016/03/31>
Babel <3.9r> and hyphenation patterns for 1 language(s) loaded.

(/media/Iomega_Ext_Drive/opt/luatex/texlive/2016/texmf-dist/tex/latex/base/arti
cle.cls
Document Class: article 2014/09/29 v1.4h Standard LaTeX document class

(/media/Iomega_Ext_Drive/opt/luatex/texlive/2016/texmf-dist/tex/latex/base/size
10.clo)) (./test1.aux) (./test1.aux))
 349 words of node memory still in use:
   2 hlist, 1 vlist, 1 rule, 7 glue, 39 glue_spec, 2 write nodes
   avail lists: 2:12,3:1,4:1,5:3,7:1,8:1,9:1

warning  (pdf backend): no pages of output.
Transcript written on test1.log.




-- 
luigi
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://tug.org/pipermail/luatex/attachments/20160616/24dbb10c/attachment.html>

From jbezosl at gmail.com  Thu Jun 16 17:50:12 2016
From: jbezosl at gmail.com (Javier Bezos)
Date: Thu, 16 Jun 2016 17:50:12 +0200
Subject: [luatex] Crash: type(r) == unset_node
In-Reply-To: <CAG5iGsBjbe0fnVu9o6uNiiDGir8EccYLdJnUN6d95B1uJUg5kg@mail.gmail.com>
References: <5762BB60.6030102@tex-tipografia.com>
 <CAG5iGsBjbe0fnVu9o6uNiiDGir8EccYLdJnUN6d95B1uJUg5kg@mail.gmail.com>
Message-ID: <5762CAB4.80808@gmail.com>

Luigi,

> your example gives
> # lualatex test.tex
> This is LuaTeX, Version 0.95.0 (TeX Live 2016)
>   restricted system commands enabled.
> (./test1.tex
> LaTeX2e <2016/03/31>
> Babel <3.9r> and hyphenation patterns for 1 language(s) loaded.
>
> (/media/Iomega_Ext_Drive/opt/luatex/texlive/2016/texmf-dist/tex/latex/base/arti
> cle.cls
> Document Class: article 2014/09/29 v1.4h Standard LaTeX document class

Unix? (with / for directories). It sounds like an issue with
the Windows binary, then.

Javier

From jbezosl at gmail.com  Thu Jun 16 18:03:13 2016
From: jbezosl at gmail.com (Javier Bezos)
Date: Thu, 16 Jun 2016 18:03:13 +0200
Subject: [luatex] Detecting script
In-Reply-To: <5762A69F.2010809@tex-tipografia.com>
References: <CABVEUFJxEquPnjHG+-9k98rUqrBSxnwvKvA+QevW4DcWskKXMQ@mail.gmail.com>
 <20160616080140.GG330775@phare.normalesup.org>
 <CABVEUFKySDh7H-ChpG6d1XPHU-WJQtC4rSA94G4du7w+ickUKQ@mail.gmail.com>
 <48673df5-7a94-2976-7e8d-4216089e4a81@wxs.nl>
 <5762A69F.2010809@tex-tipografia.com>
Message-ID: <5762CDC1.7080405@gmail.com>

El 16/06/2016 15:16, Javier Bezos escribi?:
> Hans,
>
>>> I'm thinking mainly in short chunks of texts, like a proper noun
>>> inside an Arabic o Devanagari text.
>>>
>>> I think pre_linebreak_filte is too late and process_input_buffer is
>>> too soon, but I may be wrong. Or perhaps the best solution is not
>>> based on a callback at all.
>>
>> hpack_filter is probably the place you want

It works at the node level and apparently it doesn't work at
the outer horizontal mode, only hboxes. I want something
at the token level.

Javier


From pragma at wxs.nl  Thu Jun 16 22:19:10 2016
From: pragma at wxs.nl (Hans Hagen)
Date: Thu, 16 Jun 2016 22:19:10 +0200
Subject: [luatex] Detecting script
In-Reply-To: <5762CDC1.7080405@gmail.com>
References: <CABVEUFJxEquPnjHG+-9k98rUqrBSxnwvKvA+QevW4DcWskKXMQ@mail.gmail.com>
 <20160616080140.GG330775@phare.normalesup.org>
 <CABVEUFKySDh7H-ChpG6d1XPHU-WJQtC4rSA94G4du7w+ickUKQ@mail.gmail.com>
 <48673df5-7a94-2976-7e8d-4216089e4a81@wxs.nl>
 <5762A69F.2010809@tex-tipografia.com> <5762CDC1.7080405@gmail.com>
Message-ID: <c777a677-442e-145e-39f3-7c2c20735ba7@wxs.nl>

On 6/16/2016 6:03 PM, Javier Bezos wrote:
> El 16/06/2016 15:16, Javier Bezos escribi?:
>> Hans,
>>
>>>> I'm thinking mainly in short chunks of texts, like a proper noun
>>>> inside an Arabic o Devanagari text.
>>>>
>>>> I think pre_linebreak_filte is too late and process_input_buffer is
>>>> too soon, but I may be wrong. Or perhaps the best solution is not
>>>> based on a callback at all.
>>>
>>> hpack_filter is probably the place you want
>
> It works at the node level and apparently it doesn't work at
> the outer horizontal mode, only hboxes. I want something
> at the token level.

it helps to read the manual -)

pre_linebreak_filter

-----------------------------------------------------------------
                                           Hans Hagen | PRAGMA ADE
               Ridderstraat 27 | 8061 GH Hasselt | The Netherlands
       tel: 038 477 53 69 | www.pragma-ade.com | www.pragma-pod.nl
-----------------------------------------------------------------

From listas at tex-tipografia.com  Thu Jun 16 22:32:06 2016
From: listas at tex-tipografia.com (Javier Bezos)
Date: Thu, 16 Jun 2016 22:32:06 +0200
Subject: [luatex] Detecting script
In-Reply-To: <c777a677-442e-145e-39f3-7c2c20735ba7@wxs.nl>
References: <CABVEUFJxEquPnjHG+-9k98rUqrBSxnwvKvA+QevW4DcWskKXMQ@mail.gmail.com>
 <20160616080140.GG330775@phare.normalesup.org>
 <CABVEUFKySDh7H-ChpG6d1XPHU-WJQtC4rSA94G4du7w+ickUKQ@mail.gmail.com>
 <48673df5-7a94-2976-7e8d-4216089e4a81@wxs.nl>
 <5762A69F.2010809@tex-tipografia.com> <5762CDC1.7080405@gmail.com>
 <c777a677-442e-145e-39f3-7c2c20735ba7@wxs.nl>
Message-ID: <57630CC6.70405@tex-tipografia.com>


>>>>> I think pre_linebreak_filte is too late and
...
>>>> hpack_filter is probably the place you want
>>
>> It works at the node level and apparently it doesn't work at the
>> outer horizontal mode, only hboxes. I want something at the token
>> level.
>
> it helps to read the manual -)
>
> pre_linebreak_filter

And also to read the original post :-). As I said, I think 
pre_linebreak_filter is too late (I made some tests with it
before posting my question). Like hpack_filter it works at
the node level and I don't see how to inject TeX code.

Javier

From luatex at nililand.de  Thu Jun 16 22:58:11 2016
From: luatex at nililand.de (Ulrike Fischer)
Date: Thu, 16 Jun 2016 22:58:11 +0200
Subject: [luatex] Crash: type(r) == unset_node
References: <5762BB60.6030102@tex-tipografia.com>
Message-ID: <1plg6ovg59d9x$.dlg@nililand.de>

Am Thu, 16 Jun 2016 16:44:48 +0200 schrieb Javier Bezos:

> The following minimal file crashes with TL2016 (win7/64)
> and TL2015:

I have no problems on win10, can't test win7 now. 


-- 
Ulrike Fischer 
http://www.troubleshooting-tex.de/


From pragma at wxs.nl  Thu Jun 16 23:34:09 2016
From: pragma at wxs.nl (Hans Hagen)
Date: Thu, 16 Jun 2016 23:34:09 +0200
Subject: [luatex] Detecting script
In-Reply-To: <57630CC6.70405@tex-tipografia.com>
References: <CABVEUFJxEquPnjHG+-9k98rUqrBSxnwvKvA+QevW4DcWskKXMQ@mail.gmail.com>
 <20160616080140.GG330775@phare.normalesup.org>
 <CABVEUFKySDh7H-ChpG6d1XPHU-WJQtC4rSA94G4du7w+ickUKQ@mail.gmail.com>
 <48673df5-7a94-2976-7e8d-4216089e4a81@wxs.nl>
 <5762A69F.2010809@tex-tipografia.com> <5762CDC1.7080405@gmail.com>
 <c777a677-442e-145e-39f3-7c2c20735ba7@wxs.nl>
 <57630CC6.70405@tex-tipografia.com>
Message-ID: <fb26a553-1651-5ba9-4aa5-6165a5a8a1eb@wxs.nl>

On 6/16/2016 10:32 PM, Javier Bezos wrote:
>
>>>>>> I think pre_linebreak_filte is too late and
> ...
>>>>> hpack_filter is probably the place you want
>>>
>>> It works at the node level and apparently it doesn't work at the
>>> outer horizontal mode, only hboxes. I want something at the token
>>> level.
>>
>> it helps to read the manual -)
>>
>> pre_linebreak_filter
>
> And also to read the original post :-). As I said, I think
> pre_linebreak_filter is too late (I made some tests with it
> before posting my question). Like hpack_filter it works at
> the node level and I don't see how to inject TeX code.

it all depends on what you want to do .. change a font of a glyph? that 
can be done in these two callbacks as fonts still needs to be processed 
then (of course one can also inject glues and kerns and penalties etc)

injecting tokens into the input can be done by intercepting the input 
(file level) but that can interfere with macros and expansion (of course 
that is also true for intercepting tokens)

the new token handler can be used to implement macros but is no longer a 
callback so using that for injecting tex code is not different from 
injecting tex code using macros (so forget about the old token library 
approach as that functionality is gone)

Hans




-----------------------------------------------------------------
                                           Hans Hagen | PRAGMA ADE
               Ridderstraat 27 | 8061 GH Hasselt | The Netherlands
       tel: 038 477 53 69 | www.pragma-ade.com | www.pragma-pod.nl
-----------------------------------------------------------------

From kakuto at fuk.kindai.ac.jp  Fri Jun 17 01:34:38 2016
From: kakuto at fuk.kindai.ac.jp (Akira Kakuto)
Date: Fri, 17 Jun 2016 08:34:38 +0900
Subject: [luatex]  Crash: type(r) == unset_node
Message-ID: <291F2F310B5E41B08A4AB7E5FD1E47A6@CJ3001517A>

> I have no problems on win10, can't test win7 now. 

Here I have no problem also on win7:

This is LuaTeX, Version 0.95.0 (TeX Live 2016/W32TeX) 
restricted system commands enabled.
(./test1.tex
LaTeX2e <2016/03/31> patch level 1
Babel <3.9r> and hyphenation patterns for 1 language(s) loaded.
(c:/usr/local/share/texmf-dist/tex/latex/base/article.cls
Document Class: article 2014/09/29 v1.4h Standard LaTeX document class
(c:/usr/local/share/texmf-dist/tex/latex/base/size10.clo)) (./test1.aux)
(./test1.aux))
349 words of node memory still in use:
   2 hlist, 1 vlist, 1 rule, 7 glue, 39 glue_spec, 2 write nodes
   avail lists: 2:12,3:1,4:1,5:3,7:1,8:1,9:1

warning  (pdf backend): no pages of output.
Transcript written on test1.log.

Best,
Akira


From listas at tex-tipografia.com  Fri Jun 17 08:08:46 2016
From: listas at tex-tipografia.com (Javier Bezos)
Date: Fri, 17 Jun 2016 08:08:46 +0200
Subject: [luatex] Crash: type(r) == unset_node
In-Reply-To: <291F2F310B5E41B08A4AB7E5FD1E47A6@CJ3001517A>
References: <291F2F310B5E41B08A4AB7E5FD1E47A6@CJ3001517A>
Message-ID: <CABVEUF+h6XQpHgnfcG8XkiVUHTjGZ80Rcxhr7377q-eas+W8QQ@mail.gmail.com>

Thanks. Then I presume there is a problem with some dll
on my system.

Javier

On Fri, Jun 17, 2016 at 1:34 AM, Akira Kakuto <kakuto at fuk.kindai.ac.jp>
wrote:

> I have no problems on win10, can't test win7 now.
>>
>
> Here I have no problem also on win7:
>
> This is LuaTeX, Version 0.95.0 (TeX Live 2016/W32TeX) restricted system
> commands enabled.
> (./test1.tex
> LaTeX2e <2016/03/31> patch level 1
> Babel <3.9r> and hyphenation patterns for 1 language(s) loaded.
> (c:/usr/local/share/texmf-dist/tex/latex/base/article.cls
> Document Class: article 2014/09/29 v1.4h Standard LaTeX document class
> (c:/usr/local/share/texmf-dist/tex/latex/base/size10.clo)) (./test1.aux)
> (./test1.aux))
> 349 words of node memory still in use:
>   2 hlist, 1 vlist, 1 rule, 7 glue, 39 glue_spec, 2 write nodes
>   avail lists: 2:12,3:1,4:1,5:3,7:1,8:1,9:1
>
> warning  (pdf backend): no pages of output.
> Transcript written on test1.log.
>
> Best,
> Akira
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://tug.org/pipermail/luatex/attachments/20160617/ffd093b8/attachment-0001.html>

From listas at tex-tipografia.com  Fri Jun 17 10:14:27 2016
From: listas at tex-tipografia.com (Javier Bezos)
Date: Fri, 17 Jun 2016 10:14:27 +0200
Subject: [luatex] Detecting script
In-Reply-To: <fb26a553-1651-5ba9-4aa5-6165a5a8a1eb@wxs.nl>
References: <CABVEUFJxEquPnjHG+-9k98rUqrBSxnwvKvA+QevW4DcWskKXMQ@mail.gmail.com>
 <20160616080140.GG330775@phare.normalesup.org>
 <CABVEUFKySDh7H-ChpG6d1XPHU-WJQtC4rSA94G4du7w+ickUKQ@mail.gmail.com>
 <48673df5-7a94-2976-7e8d-4216089e4a81@wxs.nl>
 <5762A69F.2010809@tex-tipografia.com> <5762CDC1.7080405@gmail.com>
 <c777a677-442e-145e-39f3-7c2c20735ba7@wxs.nl>
 <57630CC6.70405@tex-tipografia.com>
 <fb26a553-1651-5ba9-4aa5-6165a5a8a1eb@wxs.nl>
Message-ID: <CABVEUF+EOLx4DwASyjqU3R8wHsRhGzwr_YuR=0pL_gq2Mn14aw@mail.gmail.com>

Hans,

> it all depends on what you want to do .. change a font
> of a glyph? that can be done in these two callbacks as
> fonts still needs to be processed then (of course one
> can also inject glues and kerns and penalties etc)
> [...]
> (so forget about the old token library approach as that
> functionality is gone)

Thank you. Therefore the short answer to my original question
is ?you can't? :-).

I'll use pre_linebreak_filter then. This requires some extra effort
to create the user interface (I'd prefer something like
\everyscript{cyrillic}{\fontspec{CyrFont}}, which I think is more
transparent) and it's not as general as I'd like, but at least it
solves the basic problem.

Javier
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://tug.org/pipermail/luatex/attachments/20160617/3af63039/attachment.html>

From listas at tex-tipografia.com  Fri Jun 17 17:26:23 2016
From: listas at tex-tipografia.com (Javier Bezos)
Date: Fri, 17 Jun 2016 17:26:23 +0200
Subject: [luatex] Detecting script
In-Reply-To: <CABVEUF+EOLx4DwASyjqU3R8wHsRhGzwr_YuR=0pL_gq2Mn14aw@mail.gmail.com>
References: <CABVEUFJxEquPnjHG+-9k98rUqrBSxnwvKvA+QevW4DcWskKXMQ@mail.gmail.com>
 <20160616080140.GG330775@phare.normalesup.org>
 <CABVEUFKySDh7H-ChpG6d1XPHU-WJQtC4rSA94G4du7w+ickUKQ@mail.gmail.com>
 <48673df5-7a94-2976-7e8d-4216089e4a81@wxs.nl>
 <5762A69F.2010809@tex-tipografia.com> <5762CDC1.7080405@gmail.com>
 <c777a677-442e-145e-39f3-7c2c20735ba7@wxs.nl>
 <57630CC6.70405@tex-tipografia.com>
 <fb26a553-1651-5ba9-4aa5-6165a5a8a1eb@wxs.nl>
 <CABVEUF+EOLx4DwASyjqU3R8wHsRhGzwr_YuR=0pL_gq2Mn14aw@mail.gmail.com>
Message-ID: <5764169F.5010300@tex-tipografia.com>

I wrote:

> I'll use pre_linebreak_filter then.

Unfortunately, it doesn't work either. If I need to change
the font for a short Arabic text, the isolated  forms are
used. After tracing what pre_linebreak_filter receives it's
clear at this point the contextual analysis has been already
done. How can I fix it?

Javier

From pragma at wxs.nl  Fri Jun 17 17:46:23 2016
From: pragma at wxs.nl (Hans Hagen)
Date: Fri, 17 Jun 2016 17:46:23 +0200
Subject: [luatex] Detecting script
In-Reply-To: <5764169F.5010300@tex-tipografia.com>
References: <CABVEUFJxEquPnjHG+-9k98rUqrBSxnwvKvA+QevW4DcWskKXMQ@mail.gmail.com>
 <20160616080140.GG330775@phare.normalesup.org>
 <CABVEUFKySDh7H-ChpG6d1XPHU-WJQtC4rSA94G4du7w+ickUKQ@mail.gmail.com>
 <48673df5-7a94-2976-7e8d-4216089e4a81@wxs.nl>
 <5762A69F.2010809@tex-tipografia.com> <5762CDC1.7080405@gmail.com>
 <c777a677-442e-145e-39f3-7c2c20735ba7@wxs.nl>
 <57630CC6.70405@tex-tipografia.com>
 <fb26a553-1651-5ba9-4aa5-6165a5a8a1eb@wxs.nl>
 <CABVEUF+EOLx4DwASyjqU3R8wHsRhGzwr_YuR=0pL_gq2Mn14aw@mail.gmail.com>
 <5764169F.5010300@tex-tipografia.com>
Message-ID: <f5ca95c1-5b77-951f-87bf-d9a674ef1229@wxs.nl>

On 6/17/2016 5:26 PM, Javier Bezos wrote:
> I wrote:
>
>> I'll use pre_linebreak_filter then.
>
> Unfortunately, it doesn't work either. If I need to change
> the font for a short Arabic text, the isolated  forms are
> used. After tracing what pre_linebreak_filter receives it's
> clear at this point the contextual analysis has been already
> done. How can I fix it?

push your callback function in front of the font handler .. but that 
kind of control is highly macro package dependent (so best consult 
mailing lists that relate to latex)

Hans


-----------------------------------------------------------------
                                           Hans Hagen | PRAGMA ADE
               Ridderstraat 27 | 8061 GH Hasselt | The Netherlands
       tel: 038 477 53 69 | www.pragma-ade.com | www.pragma-pod.nl
-----------------------------------------------------------------

From jbezosl at gmail.com  Fri Jun 17 18:29:25 2016
From: jbezosl at gmail.com (Javier Bezos)
Date: Fri, 17 Jun 2016 18:29:25 +0200
Subject: [luatex] Detecting script
In-Reply-To: <f5ca95c1-5b77-951f-87bf-d9a674ef1229@wxs.nl>
References: <CABVEUFJxEquPnjHG+-9k98rUqrBSxnwvKvA+QevW4DcWskKXMQ@mail.gmail.com>
 <20160616080140.GG330775@phare.normalesup.org>
 <CABVEUFKySDh7H-ChpG6d1XPHU-WJQtC4rSA94G4du7w+ickUKQ@mail.gmail.com>
 <48673df5-7a94-2976-7e8d-4216089e4a81@wxs.nl>
 <5762A69F.2010809@tex-tipografia.com> <5762CDC1.7080405@gmail.com>
 <c777a677-442e-145e-39f3-7c2c20735ba7@wxs.nl>
 <57630CC6.70405@tex-tipografia.com>
 <fb26a553-1651-5ba9-4aa5-6165a5a8a1eb@wxs.nl>
 <CABVEUF+EOLx4DwASyjqU3R8wHsRhGzwr_YuR=0pL_gq2Mn14aw@mail.gmail.com>
 <5764169F.5010300@tex-tipografia.com>
 <f5ca95c1-5b77-951f-87bf-d9a674ef1229@wxs.nl>
Message-ID: <57642565.50108@gmail.com>

Hans,

> push your callback function in front of the font handler .. but that kind
> of control is highly macro package dependent (so best consult mailing lists
> that relate to latex)

Thank you again (and for your patience).

Javier


From pali.rohar at gmail.com  Fri Jun 17 22:28:36 2016
From: pali.rohar at gmail.com (Pali =?utf-8?B?Um9ow6Fy?=)
Date: Fri, 17 Jun 2016 22:28:36 +0200
Subject: [luatex] luatex - font encoding for type 1 fonts
In-Reply-To: <201606092244.56067@pali>
References: <201606092244.56067@pali>
Message-ID: <20160617202836.GC29844@pali>

On Thursday 09 June 2016 22:44:56 Pali Roh?r wrote:
> Hello,
> 
> how I can specify font encoding for specific type 1 font?
> 
> E.g. font csr10 (stored in fonts/type1/public/cs/csr10.pfb) is in IL2 
> encoding which means that character ? (Latin Small Letter C with caron) 
> is at position 232.
> 
> Code 232 is invalid in UTF-8 and therefore I cannot enter it normally 
> for luatex. So for printing it I need to use sequence \char232, which 
> works.
> 
> \font\csr=csr10
> \csr\char232
> \bye
> 
> Is there any simple way to tell luatex font encoding table (unicode 
> character --> code in type 1 font)? So I could be able to write utf8 
> string "?" directly in text editor instead \char232.
> 
> My very quick hack for this was changing catcode of ? to 13 and then 
> defining macro ? as \char232.
> 
> \catcode`\?=\active
> \def?{\char232}
> \font\csr=csr10
> \csr?
> \bye
> 
> But I would like to avoid changing catcode of unicode characters and fix 
> this at font level.
> 

Hello, has anybody idea about this problem?

-- 
Pali Roh?r
pali.rohar at gmail.com

From pragma at wxs.nl  Sat Jun 18 00:14:45 2016
From: pragma at wxs.nl (Hans Hagen)
Date: Sat, 18 Jun 2016 00:14:45 +0200
Subject: [luatex] luatex - font encoding for type 1 fonts
In-Reply-To: <20160617202836.GC29844@pali>
References: <201606092244.56067@pali> <20160617202836.GC29844@pali>
Message-ID: <8e9f9a2f-a596-bbe9-dd4d-d881b8414ee0@wxs.nl>

On 6/17/2016 10:28 PM, Pali Roh?r wrote:
> On Thursday 09 June 2016 22:44:56 Pali Roh?r wrote:
>> Hello,
>>
>> how I can specify font encoding for specific type 1 font?
>>
>> E.g. font csr10 (stored in fonts/type1/public/cs/csr10.pfb) is in IL2
>> encoding which means that character ? (Latin Small Letter C with caron)
>> is at position 232.
>>
>> Code 232 is invalid in UTF-8 and therefore I cannot enter it normally
>> for luatex. So for printing it I need to use sequence \char232, which
>> works.
>>
>> \font\csr=csr10
>> \csr\char232
>> \bye
>>
>> Is there any simple way to tell luatex font encoding table (unicode
>> character --> code in type 1 font)? So I could be able to write utf8
>> string "?" directly in text editor instead \char232.
>>
>> My very quick hack for this was changing catcode of ? to 13 and then
>> defining macro ? as \char232.
>>
>> \catcode`\?=\active
>> \def?{\char232}
>> \font\csr=csr10
>> \csr?
>> \bye
>>
>> But I would like to avoid changing catcode of unicode characters and fix
>> this at font level.
>>
>
> Hello, has anybody idea about this problem?

if you use those fonts indeed you need to map from input encoding to 
font encoding and active characters are the way to go then

the context distribution ships with plain font support in which case you 
can best use the lm fonts instead of csr (i can't even locate those files)

\font\csr=lmroman10-regular.otf:+liga;+kern at 10pt

% \font\csr=csr.afm:+liga;+kern at 10pt

\csr ? \bye

and then somehging like:

luatex --fmt=luatex-plain \dump

luatex --fmt=luatex-plain yourfile.tex

(here i test plain code with:

mtxrun --script plain --make
mtxrun --script plain        yourfile.tex

but that assumes a context installation)

(alternatively you can write a simple font loader in lua that does the 
mapping)

Hans

-----------------------------------------------------------------
                                           Hans Hagen | PRAGMA ADE
               Ridderstraat 27 | 8061 GH Hasselt | The Netherlands
       tel: 038 477 53 69 | www.pragma-ade.com | www.pragma-pod.nl
-----------------------------------------------------------------

From patrick at gundla.ch  Sat Jun 18 12:13:29 2016
From: patrick at gundla.ch (Patrick Gundlach)
Date: Sat, 18 Jun 2016 12:13:29 +0200
Subject: [luatex] Override image resolution?
Message-ID: <082EE4F7-B7BA-4F96-98F4-BBF2CEBEA53F@gundla.ch>

Hi all,

some images (jpg) have a broken resolution field. Now when loading the image in LuaTeX (0.79), I get strange results for img.width and img.height, probably because of the resolution.

Is there a way to force a resolution (300x300 for example) when loading an image and ignore the setting in the file?

I know of img.xsize and img.ysize, so that is not a real problem, but I am just asking.

Patrick



From luigi.scarso at gmail.com  Sat Jun 18 12:25:00 2016
From: luigi.scarso at gmail.com (luigi scarso)
Date: Sat, 18 Jun 2016 12:25:00 +0200
Subject: [luatex] Override image resolution?
In-Reply-To: <082EE4F7-B7BA-4F96-98F4-BBF2CEBEA53F@gundla.ch>
References: <082EE4F7-B7BA-4F96-98F4-BBF2CEBEA53F@gundla.ch>
Message-ID: <CAG5iGsDN3LG5H_oApBYLmmJ18KQyDJdcKT2_Y4WPiesFeTS3CQ@mail.gmail.com>

Il 18/giu/2016 12:14, "Patrick Gundlach" <patrick at gundla.ch> ha scritto:
>
> Hi all,
>
> some images (jpg) have a broken resolution field. Now when loading the
image in LuaTeX (0.79), I get strange results for img.width and img.height,
probably because of the resolution.
>
> Is there a way to force a resolution (300x300 for example) when loading
an image and ignore the setting in the file?
>
> I know of img.xsize and img.ysize, so that is not a real problem, but I
am just asking.
>
> Patrick
>
>
0.79.0...quite old. Can  you use 0.95.0?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://tug.org/pipermail/luatex/attachments/20160618/453c1022/attachment.html>

From indiego at gmx.net  Sat Jun 18 12:49:50 2016
From: indiego at gmx.net (Peter Rolf)
Date: Sat, 18 Jun 2016 12:49:50 +0200
Subject: [luatex] Override image resolution?
In-Reply-To: <082EE4F7-B7BA-4F96-98F4-BBF2CEBEA53F@gundla.ch>
References: <082EE4F7-B7BA-4F96-98F4-BBF2CEBEA53F@gundla.ch>
Message-ID: <4e075c6e-fca7-f5ae-deef-c83085a70e1b@gmx.net>

Hi Patrick,

Am 18.06.2016 um 12:13 schrieb Patrick Gundlach:
> Hi all,
> 
> some images (jpg) have a broken resolution field. Now when loading the image in LuaTeX (0.79), I get strange results for img.width and img.height, probably because of the resolution.
> 
> Is there a way to force a resolution (300x300 for example) when loading an image and ignore the setting in the file?
> 
> I know of img.xsize and img.ysize, so that is not a real problem, but I am just asking.
> 

I used \pdfimageresolution a few years ago. Should still be accessible
via \pdfvariable.

\pdfimageresolution 300

Best wishes,  Peter


From patrick at gundla.ch  Sat Jun 18 14:36:40 2016
From: patrick at gundla.ch (Patrick Gundlach)
Date: Sat, 18 Jun 2016 14:36:40 +0200
Subject: [luatex] Override image resolution?
In-Reply-To: <4e075c6e-fca7-f5ae-deef-c83085a70e1b@gmx.net>
References: <082EE4F7-B7BA-4F96-98F4-BBF2CEBEA53F@gundla.ch>
 <4e075c6e-fca7-f5ae-deef-c83085a70e1b@gmx.net>
Message-ID: <9A73572B-9EDC-4CA2-9105-1614DB235105@gundla.ch>

Hello Peter,

> I used \pdfimageresolution a few years ago. Should still be accessible
> via \pdfvariable.
> 
> \pdfimageresolution 300

there is a variable mentioned in the manual, but it has no effect:

tex.pdfimageresolution = 300

Thanks a lot anyway!
   Patrick

From patrick at gundla.ch  Sat Jun 18 14:37:41 2016
From: patrick at gundla.ch (Patrick Gundlach)
Date: Sat, 18 Jun 2016 14:37:41 +0200
Subject: [luatex] Override image resolution?
In-Reply-To: <CAG5iGsDN3LG5H_oApBYLmmJ18KQyDJdcKT2_Y4WPiesFeTS3CQ@mail.gmail.com>
References: <082EE4F7-B7BA-4F96-98F4-BBF2CEBEA53F@gundla.ch>
 <CAG5iGsDN3LG5H_oApBYLmmJ18KQyDJdcKT2_Y4WPiesFeTS3CQ@mail.gmail.com>
Message-ID: <436DA36E-66F1-4868-89D6-45B61D497CC5@gundla.ch>

Hi Luigi,

> 0.79.0...quite old. Can  you use 0.95.0?

not at the moment. I will change in a year or two, but the changes introduced in the meantime are too big for a quick change.

Patrick




From pragma at wxs.nl  Sat Jun 18 16:30:28 2016
From: pragma at wxs.nl (Hans Hagen)
Date: Sat, 18 Jun 2016 16:30:28 +0200
Subject: [luatex] Override image resolution?
In-Reply-To: <9A73572B-9EDC-4CA2-9105-1614DB235105@gundla.ch>
References: <082EE4F7-B7BA-4F96-98F4-BBF2CEBEA53F@gundla.ch>
 <4e075c6e-fca7-f5ae-deef-c83085a70e1b@gmx.net>
 <9A73572B-9EDC-4CA2-9105-1614DB235105@gundla.ch>
Message-ID: <38c33411-3f44-31ae-8d95-674651fc39f4@wxs.nl>

On 6/18/2016 2:36 PM, Patrick Gundlach wrote:
> Hello Peter,
>
>> I used \pdfimageresolution a few years ago. Should still be accessible
>> via \pdfvariable.
>>
>> \pdfimageresolution 300
>
> there is a variable mentioned in the manual, but it has no effect:
>
> tex.pdfimageresolution = 300

the imageresolution is only used when the x or y resolutions in the file 
is zero

Hans




-----------------------------------------------------------------
                                           Hans Hagen | PRAGMA ADE
               Ridderstraat 27 | 8061 GH Hasselt | The Netherlands
       tel: 038 477 53 69 | www.pragma-ade.com | www.pragma-pod.nl
-----------------------------------------------------------------

From reinhard.kotucha at web.de  Sun Jun 19 01:51:26 2016
From: reinhard.kotucha at web.de (Reinhard Kotucha)
Date: Sun, 19 Jun 2016 01:51:26 +0200
Subject: [luatex] Override image resolution?
In-Reply-To: <082EE4F7-B7BA-4F96-98F4-BBF2CEBEA53F@gundla.ch>
References: <082EE4F7-B7BA-4F96-98F4-BBF2CEBEA53F@gundla.ch>
Message-ID: <22373.56958.924117.226762@zaphod.ms25.net>

On 2016-06-18 at 12:13:29 +0200, Patrick Gundlach wrote:

 > Hi all,
 > 
 > some images (jpg) have a broken resolution field. Now when loading
 > the image in LuaTeX (0.79), I get strange results for img.width and
 > img.height, probably because of the resolution.
 > 
 > Is there a way to force a resolution (300x300 for example) when
 > loading an image and ignore the setting in the file?

Hi Patrick,
what I would try first is to check whether other programs like sam2p
or convert (ImageMagigck) can process the broken files properly.

Maybe it's even possible to use convert(1) in order to convert from
JPEG to JPEG.  I can imagine that ImageMagigck tries to repair the
broken entries, at least if they are obviously wrong.

What happens if you run

 convert foo.jpg -resize 100% foo2.jpg

? Do you get a different result?

If you are using one of the programs mentioned above in order to
convert to PDF directly, check whether the /MediaBox looks reasonable.

There are many things one can try.

Regards,
  Reinhard

-- 
------------------------------------------------------------------
Reinhard Kotucha                            Phone: +49-511-3373112
Marschnerstr. 25
D-30167 Hannover                    mailto:reinhard.kotucha at web.de
------------------------------------------------------------------

From listas at tex-tipografia.com  Sun Jun 19 10:23:26 2016
From: listas at tex-tipografia.com (Javier Bezos)
Date: Sun, 19 Jun 2016 10:23:26 +0200
Subject: [luatex] Detecting script
In-Reply-To: <f5ca95c1-5b77-951f-87bf-d9a674ef1229@wxs.nl>
References: <CABVEUFJxEquPnjHG+-9k98rUqrBSxnwvKvA+QevW4DcWskKXMQ@mail.gmail.com>
 <20160616080140.GG330775@phare.normalesup.org>
 <CABVEUFKySDh7H-ChpG6d1XPHU-WJQtC4rSA94G4du7w+ickUKQ@mail.gmail.com>
 <48673df5-7a94-2976-7e8d-4216089e4a81@wxs.nl>
 <5762A69F.2010809@tex-tipografia.com> <5762CDC1.7080405@gmail.com>
 <c777a677-442e-145e-39f3-7c2c20735ba7@wxs.nl>
 <57630CC6.70405@tex-tipografia.com>
 <fb26a553-1651-5ba9-4aa5-6165a5a8a1eb@wxs.nl>
 <CABVEUF+EOLx4DwASyjqU3R8wHsRhGzwr_YuR=0pL_gq2Mn14aw@mail.gmail.com>
 <5764169F.5010300@tex-tipografia.com>
 <f5ca95c1-5b77-951f-87bf-d9a674ef1229@wxs.nl>
Message-ID: <5766567E.6050307@tex-tipografia.com>


>>> I'll use pre_linebreak_filter then.
[...]
> push your callback function in front of the font handler .. but that kind
> of control is highly macro package dependent (so best consult mailing lists
> that relate to latex)

And here is:

http://wiki.luatex.org/index.php/Changing_the_font_for_a_script

Javier

From luigi.scarso at gmail.com  Sun Jun 19 10:28:16 2016
From: luigi.scarso at gmail.com (luigi scarso)
Date: Sun, 19 Jun 2016 10:28:16 +0200
Subject: [luatex] Detecting script
In-Reply-To: <5766567E.6050307@tex-tipografia.com>
References: <CABVEUFJxEquPnjHG+-9k98rUqrBSxnwvKvA+QevW4DcWskKXMQ@mail.gmail.com>
 <20160616080140.GG330775@phare.normalesup.org>
 <CABVEUFKySDh7H-ChpG6d1XPHU-WJQtC4rSA94G4du7w+ickUKQ@mail.gmail.com>
 <48673df5-7a94-2976-7e8d-4216089e4a81@wxs.nl>
 <5762A69F.2010809@tex-tipografia.com> <5762CDC1.7080405@gmail.com>
 <c777a677-442e-145e-39f3-7c2c20735ba7@wxs.nl>
 <57630CC6.70405@tex-tipografia.com>
 <fb26a553-1651-5ba9-4aa5-6165a5a8a1eb@wxs.nl>
 <CABVEUF+EOLx4DwASyjqU3R8wHsRhGzwr_YuR=0pL_gq2Mn14aw@mail.gmail.com>
 <5764169F.5010300@tex-tipografia.com>
 <f5ca95c1-5b77-951f-87bf-d9a674ef1229@wxs.nl>
 <5766567E.6050307@tex-tipografia.com>
Message-ID: <CAG5iGsD4JF_NG4QUQ5wD3Sikc+MEFJEt2H2X6JdR1LV6EdQ+Ug@mail.gmail.com>

On Sun, Jun 19, 2016 at 10:23 AM, Javier Bezos <listas at tex-tipografia.com>
wrote:

>
> I'll use pre_linebreak_filter then.
>>>>
>>> [...]
>
>> push your callback function in front of the font handler .. but that kind
>> of control is highly macro package dependent (so best consult mailing
>> lists
>> that relate to latex)
>>
>
> And here is:
>
> http://wiki.luatex.org/index.php/Changing_the_font_for_a_script
>
> Javier
>

ok, thank you very much !

-- 
luigi
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://tug.org/pipermail/luatex/attachments/20160619/bdcd327a/attachment-0001.html>

From patrick at gundla.ch  Mon Jun 20 10:31:54 2016
From: patrick at gundla.ch (Patrick Gundlach)
Date: Mon, 20 Jun 2016 10:31:54 +0200
Subject: [luatex] Override image resolution?
In-Reply-To: <22373.56958.924117.226762@zaphod.ms25.net>
References: <082EE4F7-B7BA-4F96-98F4-BBF2CEBEA53F@gundla.ch>
 <22373.56958.924117.226762@zaphod.ms25.net>
Message-ID: <D9668F74-D1EB-4E16-8012-AB548647066C@gundla.ch>

Hello Reinhard,

> what I would try first is to check whether other programs like sam2p
> or convert (ImageMagigck) can process the broken files properly.

I don't know what tools the user has, so I cannot rely on any external tools for now.

Thank you for your suggestions

  Patrick

(I'll stick for xsize and ysize for now, which seems to be fine except for a LuaTeX warning about an arithmetic overflow or something similar)

From pali.rohar at gmail.com  Thu Jun 23 10:19:34 2016
From: pali.rohar at gmail.com (Pali =?utf-8?B?Um9ow6Fy?=)
Date: Thu, 23 Jun 2016 10:19:34 +0200
Subject: [luatex] luatex - font encoding for type 1 fonts
In-Reply-To: <8e9f9a2f-a596-bbe9-dd4d-d881b8414ee0@wxs.nl>
References: <201606092244.56067@pali> <20160617202836.GC29844@pali>
 <8e9f9a2f-a596-bbe9-dd4d-d881b8414ee0@wxs.nl>
Message-ID: <20160623081934.GN29844@pali>

On Saturday 18 June 2016 00:14:45 Hans Hagen wrote:
> On 6/17/2016 10:28 PM, Pali Roh?r wrote:
> >On Thursday 09 June 2016 22:44:56 Pali Roh?r wrote:
> >>Hello,
> >>
> >>how I can specify font encoding for specific type 1 font?
> >>
> >>E.g. font csr10 (stored in fonts/type1/public/cs/csr10.pfb) is in IL2
> >>encoding which means that character ? (Latin Small Letter C with caron)
> >>is at position 232.
> >>
> >>Code 232 is invalid in UTF-8 and therefore I cannot enter it normally
> >>for luatex. So for printing it I need to use sequence \char232, which
> >>works.
> >>
> >>\font\csr=csr10
> >>\csr\char232
> >>\bye
> >>
> >>Is there any simple way to tell luatex font encoding table (unicode
> >>character --> code in type 1 font)? So I could be able to write utf8
> >>string "?" directly in text editor instead \char232.
> >>
> >>My very quick hack for this was changing catcode of ? to 13 and then
> >>defining macro ? as \char232.
> >>
> >>\catcode`\?=\active
> >>\def?{\char232}
> >>\font\csr=csr10
> >>\csr?
> >>\bye
> >>
> >>But I would like to avoid changing catcode of unicode characters and fix
> >>this at font level.
> >>
> >
> >Hello, has anybody idea about this problem?
> 
> if you use those fonts indeed you need to map from input encoding to font
> encoding and active characters are the way to go then

I would like to not use this...

> the context distribution ships with plain font support in which case you can
> best use the lm fonts instead of csr (i can't even locate those files)

Sorry, I need this for plain not context.

CSFonts (csr*) are included in cstex support. On Debian it is in package
named texlive-lang-czechslovak. You can also find it on ctan:

https://www.ctan.org/pkg/csfonts
https://www.ctan.org/pkg/csfonts-t1

> \font\csr=lmroman10-regular.otf:+liga;+kern at 10pt
> 
> % \font\csr=csr.afm:+liga;+kern at 10pt

There is no afm file. Only tex metrics, mf sources and type1 fonts:
csr10.tfm csr10.mf csr10.pfb

> \csr ? \bye
> 
> and then somehging like:
> 
> luatex --fmt=luatex-plain \dump
> 
> luatex --fmt=luatex-plain yourfile.tex
> 
> (here i test plain code with:
> 
> mtxrun --script plain --make
> mtxrun --script plain        yourfile.tex
> 
> but that assumes a context installation)
> 
> (alternatively you can write a simple font loader in lua that does the
> mapping)

Can you give me some hints about this? I think that simple lua code
which properly loads+translate font from IL2 encoding to UTF-8 is
correct way.

PS: I'm not subscribed to list, so CC me.

-- 
Pali Roh?r
pali.rohar at gmail.com

From d.p.carlisle at gmail.com  Thu Jun 23 10:40:05 2016
From: d.p.carlisle at gmail.com (David Carlisle)
Date: Thu, 23 Jun 2016 09:40:05 +0100
Subject: [luatex] luatex - font encoding for type 1 fonts
In-Reply-To: <20160623081934.GN29844@pali>
References: <201606092244.56067@pali> <20160617202836.GC29844@pali>
 <8e9f9a2f-a596-bbe9-dd4d-d881b8414ee0@wxs.nl> <20160623081934.GN29844@pali>
Message-ID: <CAEW6iOjTo4qjiSr8x5CAYdj=v2q-_OjNp2BcYfFHmHywu1C1tA@mail.gmail.com>

Aren't the csr fonts essentially extended cm fonts with accented
characters for latin2 range? If so can't you just use a
computer-modern based  unicode font such as latin modern?

It is possible to do all the re-encodings necessary to use a classic
8bit font, but why, when existing extensions of computer modern to
much larger ranges exist?

David

From pali.rohar at gmail.com  Thu Jun 23 10:53:49 2016
From: pali.rohar at gmail.com (Pali =?utf-8?B?Um9ow6Fy?=)
Date: Thu, 23 Jun 2016 10:53:49 +0200
Subject: [luatex] luatex - font encoding for type 1 fonts
In-Reply-To: <CAEW6iOjTo4qjiSr8x5CAYdj=v2q-_OjNp2BcYfFHmHywu1C1tA@mail.gmail.com>
References: <201606092244.56067@pali> <20160617202836.GC29844@pali>
 <8e9f9a2f-a596-bbe9-dd4d-d881b8414ee0@wxs.nl> <20160623081934.GN29844@pali>
 <CAEW6iOjTo4qjiSr8x5CAYdj=v2q-_OjNp2BcYfFHmHywu1C1tA@mail.gmail.com>
Message-ID: <20160623085349.GO29844@pali>

On Thursday 23 June 2016 09:40:05 David Carlisle wrote:
> Aren't the csr fonts essentially extended cm fonts with accented
> characters for latin2 range?

Yes.

> If so can't you just use a
> computer-modern based  unicode font such as latin modern?

Currently no.

There are two reasons:

1) I want be able to compile old documents without change in luatex
(switch from pdftex to luatex with ability to compile old documents)

2) Latin Modern fonts are some problems, like missing (or incorrect)
kerning between some pairs frequently used in Slovak texts (V? or V?).
So currently I would like to still use csfonts as those have better
quality.

> It is possible to do all the re-encodings necessary to use a classic
> 8bit font

Can you give me some hints how to do that?

> but why, when existing extensions of computer modern to
> much larger ranges exist?

See 1) and 2).

-- 
Pali Roh?r
pali.rohar at gmail.com

From mq at joja.cz  Thu Jun 23 11:11:49 2016
From: mq at joja.cz (Jan =?utf-8?Q?Mat=C4=9Bjka?=)
Date: Thu, 23 Jun 2016 11:11:49 +0200
Subject: [luatex] luatex - font encoding for type 1 fonts
In-Reply-To: <CAEW6iOjTo4qjiSr8x5CAYdj=v2q-_OjNp2BcYfFHmHywu1C1tA@mail.gmail.com>
References: <201606092244.56067@pali> <20160617202836.GC29844@pali>
 <8e9f9a2f-a596-bbe9-dd4d-d881b8414ee0@wxs.nl> <20160623081934.GN29844@pali>
 <CAEW6iOjTo4qjiSr8x5CAYdj=v2q-_OjNp2BcYfFHmHywu1C1tA@mail.gmail.com>
Message-ID: <20160623091149.GA12128@kastrol.joja.cz>

> Aren't the csr fonts essentially extended cm fonts with accented
> characters for latin2 range? If so can't you just use a
> computer-modern based  unicode font such as latin modern?

Yes, they are. No, we can't.

> It is possible to do all the re-encodings necessary to use a classic
> 8bit font, but why, when existing extensions of computer modern to
> much larger ranges exist?

Because of nuances in final result. See the attachments. One was
generated by running

$ luatex lm-csr.tex
the another by
$ pdfcsplain lm-csr.tex

MQ
-------------- next part --------------
A non-text attachment was scrubbed...
Name: lm-csr-luatex.pdf
Type: application/pdf
Size: 4496 bytes
Desc: not available
URL: <http://tug.org/pipermail/luatex/attachments/20160623/34a9423d/attachment.pdf>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: lm-csr-pdfcsplain.pdf
Type: application/pdf
Size: 7418 bytes
Desc: not available
URL: <http://tug.org/pipermail/luatex/attachments/20160623/34a9423d/attachment-0001.pdf>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: lm-csr.tex
Type: text/x-tex
Size: 541 bytes
Desc: not available
URL: <http://tug.org/pipermail/luatex/attachments/20160623/34a9423d/attachment.bin>

From pragma at wxs.nl  Fri Jun 24 01:59:59 2016
From: pragma at wxs.nl (Hans Hagen)
Date: Fri, 24 Jun 2016 01:59:59 +0200
Subject: [luatex] luatex - font encoding for type 1 fonts
In-Reply-To: <20160623091149.GA12128@kastrol.joja.cz>
References: <201606092244.56067@pali> <20160617202836.GC29844@pali>
 <8e9f9a2f-a596-bbe9-dd4d-d881b8414ee0@wxs.nl> <20160623081934.GN29844@pali>
 <CAEW6iOjTo4qjiSr8x5CAYdj=v2q-_OjNp2BcYfFHmHywu1C1tA@mail.gmail.com>
 <20160623091149.GA12128@kastrol.joja.cz>
Message-ID: <8c7ce17f-abba-57b9-21e7-046f7aaa9d6f@wxs.nl>

On 6/23/2016 11:11 AM, Jan Mat?jka wrote:
>> Aren't the csr fonts essentially extended cm fonts with accented
>> characters for latin2 range? If so can't you just use a
>> computer-modern based  unicode font such as latin modern?
>
> Yes, they are. No, we can't.
>
>> It is possible to do all the re-encodings necessary to use a classic
>> 8bit font, but why, when existing extensions of computer modern to
>> much larger ranges exist?
>
> Because of nuances in final result. See the attachments. One was
> generated by running

In that case, stick to using pdftex (or find someone who is willing to 
spend time on making a setup for that specific font encoding in an 
otherwise unicode environment).

It's not that hard to use a type 1 font (just \font\csr10.afm with the 
appropriate features enabled should work, of if not one can construct a 
virtual unicode font using built in vf features). I already had a look 
at where to find the fonts, and tried again, but (1) the csr fonts are 
not in ctan's font directory, (2) the several cs related packages don't 
seem to come with afm files, and (3) I can't motivate myself to go back 
in time, so you have to fall back on those who ship and maintain those 
packages.

As said, if you mostly use a fixed set of fonts and plain tex, and 
depend on others for support, I suggest you stick to pdftex. as there is 
not much to gain with luatex then. Keep in min dthat when you manage to 
use the old font encoding somehow, you also have to deal with patterns 
files in that encoding.

Of course you can also make an active character mapping (as you 
mentioned before) which might be enough for your case.

Hans


-----------------------------------------------------------------
                                           Hans Hagen | PRAGMA ADE
               Ridderstraat 27 | 8061 GH Hasselt | The Netherlands
       tel: 038 477 53 69 | www.pragma-ade.com | www.pragma-pod.nl
-----------------------------------------------------------------

From mojca.miklavec.lists at gmail.com  Fri Jun 24 08:36:39 2016
From: mojca.miklavec.lists at gmail.com (Mojca Miklavec)
Date: Fri, 24 Jun 2016 08:36:39 +0200
Subject: [luatex] luatex - font encoding for type 1 fonts
In-Reply-To: <8c7ce17f-abba-57b9-21e7-046f7aaa9d6f@wxs.nl>
References: <201606092244.56067@pali> <20160617202836.GC29844@pali>
 <8e9f9a2f-a596-bbe9-dd4d-d881b8414ee0@wxs.nl> <20160623081934.GN29844@pali>
 <CAEW6iOjTo4qjiSr8x5CAYdj=v2q-_OjNp2BcYfFHmHywu1C1tA@mail.gmail.com>
 <20160623091149.GA12128@kastrol.joja.cz>
 <8c7ce17f-abba-57b9-21e7-046f7aaa9d6f@wxs.nl>
Message-ID: <CALBOmsYBuk=boJbNd40HkiUPbGVafdtsc9XY7veLDbydSG7YFg@mail.gmail.com>

On 24 June 2016 at 01:59, Hans Hagen wrote:
>
> Keep in mind that when you manage to use the old font
> encoding somehow, you also have to deal with patterns files in that
> encoding.

No; if he manages to create a virtual font from Latin 2-encoded Type
1, then Unicode hyphenation patterns should work just fine. Or am I
missing something?

> Of course you can also make an active character mapping (as you mentioned
> before) which might be enough for your case.

That one will however break hyphenation (unless the hyphenation
patterns are loaded as Latin 2).

(I would argue that the best way forward in the long run would be to
eventually add the missing features to LM.)

Mojca

From pragma at wxs.nl  Fri Jun 24 10:06:57 2016
From: pragma at wxs.nl (Hans Hagen)
Date: Fri, 24 Jun 2016 10:06:57 +0200
Subject: [luatex] luatex - font encoding for type 1 fonts
In-Reply-To: <CALBOmsYBuk=boJbNd40HkiUPbGVafdtsc9XY7veLDbydSG7YFg@mail.gmail.com>
References: <201606092244.56067@pali> <20160617202836.GC29844@pali>
 <8e9f9a2f-a596-bbe9-dd4d-d881b8414ee0@wxs.nl> <20160623081934.GN29844@pali>
 <CAEW6iOjTo4qjiSr8x5CAYdj=v2q-_OjNp2BcYfFHmHywu1C1tA@mail.gmail.com>
 <20160623091149.GA12128@kastrol.joja.cz>
 <8c7ce17f-abba-57b9-21e7-046f7aaa9d6f@wxs.nl>
 <CALBOmsYBuk=boJbNd40HkiUPbGVafdtsc9XY7veLDbydSG7YFg@mail.gmail.com>
Message-ID: <f19b50e9-12d7-9036-65d2-8cca05282f6f@wxs.nl>

On 6/24/2016 8:36 AM, Mojca Miklavec wrote:
> On 24 June 2016 at 01:59, Hans Hagen wrote:
>>
>> Keep in mind that when you manage to use the old font
>> encoding somehow, you also have to deal with patterns files in that
>> encoding.
>
> No; if he manages to create a virtual font from Latin 2-encoded Type
> 1, then Unicode hyphenation patterns should work just fine. Or am I
> missing something?

sure, and quite trivial to make, but that is not an out-of-the-box 
solution (when gyre showed up i removed such code from context)

>> Of course you can also make an active character mapping (as you mentioned
>> before) which might be enough for your case.
>
> That one will however break hyphenation (unless the hyphenation
> patterns are loaded as Latin 2).

which makes sense in such a workflow ... probably all fonts are in that 
encoding then anyway

> (I would argue that the best way forward in the long run would be to
> eventually add the missing features to LM.)

We had that discussion ... differences in positioning of some accents 
between aer, plr, csr, vnr, anyr fonts (plus german hackery to get 
umlauts lower) and the principles behind lm / gyre was to get a uniform 
consistent font. There have been discussions at BT about these issues 
and representatives of countries present in the end agreed that it's 
also a matter of getting accustomed to.

Hans

-----------------------------------------------------------------
                                           Hans Hagen | PRAGMA ADE
               Ridderstraat 27 | 8061 GH Hasselt | The Netherlands
       tel: 038 477 53 69 | www.pragma-ade.com | www.pragma-pod.nl
-----------------------------------------------------------------

From pali.rohar at gmail.com  Fri Jun 24 13:33:58 2016
From: pali.rohar at gmail.com (Pali =?utf-8?q?Roh=C3=A1r?=)
Date: Fri, 24 Jun 2016 13:33:58 +0200
Subject: [luatex] luatex - font encoding for type 1 fonts
In-Reply-To: <8c7ce17f-abba-57b9-21e7-046f7aaa9d6f@wxs.nl>
References: <201606092244.56067@pali> <20160623091149.GA12128@kastrol.joja.cz>
 <8c7ce17f-abba-57b9-21e7-046f7aaa9d6f@wxs.nl>
Message-ID: <201606241333.58239@pali>

On Friday 24 June 2016 01:59:59 Hans Hagen wrote:
> It's not that hard to use a type 1 font (just \font\csr10.afm with

I already wrote (in other email), that there are no afm files. So 
\font\csr10.afm cannot work. Use just \font\csr10

> the appropriate features enabled should work, of if not one can
> construct a virtual unicode font using built in vf features). I
> already had a look at where to find the fonts, and tried again, but
> (1) the csr fonts are not in ctan's font directory,

In previous email I sent links to ctan. Here are:

https://www.ctan.org/pkg/csfonts
https://www.ctan.org/pkg/csfonts-t1

> (2) the several
> cs related packages don't seem to come with afm files,

Not several, but all! Metrics are stored in ftm files, e.g. csr10.tfm. 
For each font there is metafont source code, tex metrics and for some 
also type1 variant (as pfb file): csr10.mf csr10.tfm csr10.pfb

-- 
Pali Roh?r
pali.rohar at gmail.com
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 198 bytes
Desc: This is a digitally signed message part.
URL: <http://tug.org/pipermail/luatex/attachments/20160624/f9471c09/attachment.bin>

From pali.rohar at gmail.com  Fri Jun 24 13:39:19 2016
From: pali.rohar at gmail.com (Pali =?utf-8?q?Roh=C3=A1r?=)
Date: Fri, 24 Jun 2016 13:39:19 +0200
Subject: [luatex] luatex - font encoding for type 1 fonts
In-Reply-To: <f19b50e9-12d7-9036-65d2-8cca05282f6f@wxs.nl>
References: <201606092244.56067@pali>
 <CALBOmsYBuk=boJbNd40HkiUPbGVafdtsc9XY7veLDbydSG7YFg@mail.gmail.com>
 <f19b50e9-12d7-9036-65d2-8cca05282f6f@wxs.nl>
Message-ID: <201606241339.19100@pali>

On Friday 24 June 2016 10:06:57 Hans Hagen wrote:
> On 6/24/2016 8:36 AM, Mojca Miklavec wrote:
> > On 24 June 2016 at 01:59, Hans Hagen wrote:
> >> Keep in mind that when you manage to use the old font
> >> encoding somehow, you also have to deal with patterns files in
> >> that encoding.
> > 
> > No; if he manages to create a virtual font from Latin 2-encoded
> > Type 1, then Unicode hyphenation patterns should work just fine.
> > Or am I missing something?
> 
> sure, and quite trivial to make, but that is not an out-of-the-box
> solution (when gyre showed up i removed such code from context)

So... I'm asking again, can you give me some hints how to achieve it?

In whole dicussion is nothing which could help me how to load Type 1 
fonts encoded in Latin2.

I do not want from you to do it, I'm searching for solution (with 
working hyphen patterns) which I could try to use, but until now nobody 
pointed me to anything which could be start point for me...

-- 
Pali Roh?r
pali.rohar at gmail.com
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 198 bytes
Desc: This is a digitally signed message part.
URL: <http://tug.org/pipermail/luatex/attachments/20160624/00c2ed67/attachment.bin>

From pragma at wxs.nl  Fri Jun 24 14:01:25 2016
From: pragma at wxs.nl (Hans Hagen)
Date: Fri, 24 Jun 2016 14:01:25 +0200
Subject: [luatex] luatex - font encoding for type 1 fonts
In-Reply-To: <201606241333.58239@pali>
References: <201606092244.56067@pali> <20160623091149.GA12128@kastrol.joja.cz>
 <8c7ce17f-abba-57b9-21e7-046f7aaa9d6f@wxs.nl>
 <201606241333.58239@pali>
Message-ID: <b3a76fb3-92ac-bfb9-7bf8-13b3f74bf2d8@wxs.nl>

On 6/24/2016 1:33 PM, Pali Roh?r wrote:

>> (2) the several
>> cs related packages don't seem to come with afm files,
>
> Not several, but all! Metrics are stored in ftm files, e.g. csr10.tfm.
> For each font there is metafont source code, tex metrics and for some
> also type1 variant (as pfb file): csr10.mf csr10.tfm csr10.pfb

afaiks no afm files

Hans

-----------------------------------------------------------------
                                           Hans Hagen | PRAGMA ADE
               Ridderstraat 27 | 8061 GH Hasselt | The Netherlands
       tel: 038 477 53 69 | www.pragma-ade.com | www.pragma-pod.nl
-----------------------------------------------------------------

From pragma at wxs.nl  Fri Jun 24 14:04:13 2016
From: pragma at wxs.nl (Hans Hagen)
Date: Fri, 24 Jun 2016 14:04:13 +0200
Subject: [luatex] luatex - font encoding for type 1 fonts
In-Reply-To: <201606241339.19100@pali>
References: <201606092244.56067@pali>
 <CALBOmsYBuk=boJbNd40HkiUPbGVafdtsc9XY7veLDbydSG7YFg@mail.gmail.com>
 <f19b50e9-12d7-9036-65d2-8cca05282f6f@wxs.nl> <201606241339.19100@pali>
Message-ID: <89d39c17-8053-8fe5-0448-bd61ab2f2fe8@wxs.nl>

On 6/24/2016 1:39 PM, Pali Roh?r wrote:
> On Friday 24 June 2016 10:06:57 Hans Hagen wrote:
>> On 6/24/2016 8:36 AM, Mojca Miklavec wrote:
>>> On 24 June 2016 at 01:59, Hans Hagen wrote:
>>>> Keep in mind that when you manage to use the old font
>>>> encoding somehow, you also have to deal with patterns files in
>>>> that encoding.
>>>
>>> No; if he manages to create a virtual font from Latin 2-encoded
>>> Type 1, then Unicode hyphenation patterns should work just fine.
>>> Or am I missing something?
>>
>> sure, and quite trivial to make, but that is not an out-of-the-box
>> solution (when gyre showed up i removed such code from context)
>
> So... I'm asking again, can you give me some hints how to achieve it?
>
> In whole dicussion is nothing which could help me how to load Type 1
> fonts encoded in Latin2.
>
> I do not want from you to do it, I'm searching for solution (with
> working hyphen patterns) which I could try to use, but until now nobody
> pointed me to anything which could be start point for me...

the manual: 1.3.3 Example virtual font

-----------------------------------------------------------------
                                           Hans Hagen | PRAGMA ADE
               Ridderstraat 27 | 8061 GH Hasselt | The Netherlands
       tel: 038 477 53 69 | www.pragma-ade.com | www.pragma-pod.nl
-----------------------------------------------------------------

From pali.rohar at gmail.com  Fri Jun 24 14:10:25 2016
From: pali.rohar at gmail.com (Pali =?utf-8?B?Um9ow6Fy?=)
Date: Fri, 24 Jun 2016 14:10:25 +0200
Subject: [luatex] luatex - font encoding for type 1 fonts
In-Reply-To: <b3a76fb3-92ac-bfb9-7bf8-13b3f74bf2d8@wxs.nl>
References: <201606092244.56067@pali> <20160623091149.GA12128@kastrol.joja.cz>
 <8c7ce17f-abba-57b9-21e7-046f7aaa9d6f@wxs.nl>
 <201606241333.58239@pali>
 <b3a76fb3-92ac-bfb9-7bf8-13b3f74bf2d8@wxs.nl>
Message-ID: <20160624121025.GV29844@pali>

On Friday 24 June 2016 14:01:25 Hans Hagen wrote:
> On 6/24/2016 1:33 PM, Pali Roh?r wrote:
> 
> >>(2) the several
> >>cs related packages don't seem to come with afm files,
> >
> >Not several, but all! Metrics are stored in ftm files, e.g. csr10.tfm.
> >For each font there is metafont source code, tex metrics and for some
> >also type1 variant (as pfb file): csr10.mf csr10.tfm csr10.pfb
> 
> afaiks no afm files

And why do you need afm files? Are not TeX metrics (tfm) enough?

-- 
Pali Roh?r
pali.rohar at gmail.com

From pali.rohar at gmail.com  Fri Jun 24 14:10:51 2016
From: pali.rohar at gmail.com (Pali =?utf-8?B?Um9ow6Fy?=)
Date: Fri, 24 Jun 2016 14:10:51 +0200
Subject: [luatex] luatex - font encoding for type 1 fonts
In-Reply-To: <89d39c17-8053-8fe5-0448-bd61ab2f2fe8@wxs.nl>
References: <201606092244.56067@pali>
 <CALBOmsYBuk=boJbNd40HkiUPbGVafdtsc9XY7veLDbydSG7YFg@mail.gmail.com>
 <f19b50e9-12d7-9036-65d2-8cca05282f6f@wxs.nl> <201606241339.19100@pali>
 <89d39c17-8053-8fe5-0448-bd61ab2f2fe8@wxs.nl>
Message-ID: <20160624121051.GW29844@pali>

On Friday 24 June 2016 14:04:13 Hans Hagen wrote:
> the manual: 1.3.3 Example virtual font

Thank you, going to look at it!

-- 
Pali Roh?r
pali.rohar at gmail.com

From pragma at wxs.nl  Fri Jun 24 14:14:24 2016
From: pragma at wxs.nl (Hans Hagen)
Date: Fri, 24 Jun 2016 14:14:24 +0200
Subject: [luatex] luatex - font encoding for type 1 fonts
In-Reply-To: <20160624121025.GV29844@pali>
References: <201606092244.56067@pali> <20160623091149.GA12128@kastrol.joja.cz>
 <8c7ce17f-abba-57b9-21e7-046f7aaa9d6f@wxs.nl>
 <201606241333.58239@pali>
 <b3a76fb3-92ac-bfb9-7bf8-13b3f74bf2d8@wxs.nl> <20160624121025.GV29844@pali>
Message-ID: <e7192d44-be78-b4bc-5ffb-f941e1867973@wxs.nl>

On 6/24/2016 2:10 PM, Pali Roh?r wrote:
> On Friday 24 June 2016 14:01:25 Hans Hagen wrote:
>> On 6/24/2016 1:33 PM, Pali Roh?r wrote:
>>
>>>> (2) the several
>>>> cs related packages don't seem to come with afm files,
>>>
>>> Not several, but all! Metrics are stored in ftm files, e.g. csr10.tfm.
>>> For each font there is metafont source code, tex metrics and for some
>>> also type1 variant (as pfb file): csr10.mf csr10.tfm csr10.pfb
>>
>> afaiks no afm files
>
> And why do you need afm files? Are not TeX metrics (tfm) enough?

then you can just load the font (given that the afm matches the pfb)

Hans

-----------------------------------------------------------------
                                           Hans Hagen | PRAGMA ADE
               Ridderstraat 27 | 8061 GH Hasselt | The Netherlands
       tel: 038 477 53 69 | www.pragma-ade.com | www.pragma-pod.nl
-----------------------------------------------------------------

From pali.rohar at gmail.com  Fri Jun 24 14:18:18 2016
From: pali.rohar at gmail.com (Pali =?utf-8?B?Um9ow6Fy?=)
Date: Fri, 24 Jun 2016 14:18:18 +0200
Subject: [luatex] luatex - font encoding for type 1 fonts
In-Reply-To: <e7192d44-be78-b4bc-5ffb-f941e1867973@wxs.nl>
References: <201606092244.56067@pali> <20160623091149.GA12128@kastrol.joja.cz>
 <8c7ce17f-abba-57b9-21e7-046f7aaa9d6f@wxs.nl>
 <201606241333.58239@pali>
 <b3a76fb3-92ac-bfb9-7bf8-13b3f74bf2d8@wxs.nl> <20160624121025.GV29844@pali>
 <e7192d44-be78-b4bc-5ffb-f941e1867973@wxs.nl>
Message-ID: <20160624121818.GX29844@pali>

On Friday 24 June 2016 14:14:24 Hans Hagen wrote:
> On 6/24/2016 2:10 PM, Pali Roh?r wrote:
> >On Friday 24 June 2016 14:01:25 Hans Hagen wrote:
> >>On 6/24/2016 1:33 PM, Pali Roh?r wrote:
> >>
> >>>>(2) the several
> >>>>cs related packages don't seem to come with afm files,
> >>>
> >>>Not several, but all! Metrics are stored in ftm files, e.g. csr10.tfm.
> >>>For each font there is metafont source code, tex metrics and for some
> >>>also type1 variant (as pfb file): csr10.mf csr10.tfm csr10.pfb
> >>
> >>afaiks no afm files
> >
> >And why do you need afm files? Are not TeX metrics (tfm) enough?
> 
> then you can just load the font (given that the afm matches the pfb)

AFM file contains just font metrics, right? Why is TFM file (which
contains also metrics) usable? What I trying understand is where is the
problem as until now TFM + PFB was enough...

-- 
Pali Roh?r
pali.rohar at gmail.com

From pali.rohar at gmail.com  Fri Jun 24 15:44:01 2016
From: pali.rohar at gmail.com (Pali =?utf-8?q?Roh=C3=A1r?=)
Date: Fri, 24 Jun 2016 15:44:01 +0200
Subject: [luatex] luatex - font encoding for type 1 fonts
In-Reply-To: <20160624121051.GW29844@pali>
References: <201606092244.56067@pali>
 <89d39c17-8053-8fe5-0448-bd61ab2f2fe8@wxs.nl> <20160624121051.GW29844@pali>
Message-ID: <201606241544.01800@pali>

On Friday 24 June 2016 14:10:51 Pali Roh?r wrote:
> On Friday 24 June 2016 14:04:13 Hans Hagen wrote:
> > the manual: 1.3.3 Example virtual font
> 
> Thank you, going to look at it!

Now I have something working. If somebody is interesting see attachment. 
PDF output from both pdftex and luatex (on pdfcsplain format) is exactly 
same.

Hans & Mojca, it is correct way? Will hyphenation works correctly?

(Sorry for long lua code, I'm new to lua, it is quick & dirty solution, 
code deduplication could be possible.)

-- 
Pali Roh?r
pali.rohar at gmail.com
-------------- next part --------------
A non-text attachment was scrubbed...
Name: fix-csfonts.tex
Type: text/x-tex
Size: 9325 bytes
Desc: not available
URL: <http://tug.org/pipermail/luatex/attachments/20160624/74241051/attachment-0002.bin>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 198 bytes
Desc: This is a digitally signed message part.
URL: <http://tug.org/pipermail/luatex/attachments/20160624/74241051/attachment-0003.bin>

From michal.h21 at gmail.com  Fri Jun 24 15:54:34 2016
From: michal.h21 at gmail.com (Michal Hoftich)
Date: Fri, 24 Jun 2016 15:54:34 +0200
Subject: [luatex] luatex - font encoding for type 1 fonts
In-Reply-To: <201606092244.56067@pali>
References: <201606092244.56067@pali>
Message-ID: <CAOCj1OdtbUsQ-LKZJLPg6uYZ0D6U-mgFqKX4xY_2q0C+saez0g@mail.gmail.com>

>
> Is there any simple way to tell luatex font encoding table (unicode
> character --> code in type 1 font)? So I could be able to write utf8
> string "?" directly in text editor instead \char232.

I've made an experimental LuaLaTeX support for 8 bit fonts and fontenc
package using node callbacks. Basically, Unicode characters are
translated to 8 bit chars using translation tables, based on selected
font encoding. I am not sure whether it is a correct way to do this,
but it seems to work, including hyphenation:

https://github.com/michal-h21/luafontenc

While it is intended to work with fontenc package, you can use the Lua
modules to work with Plain. Support file for il2 encoding, il2lua.tex:

%%%%
\directlua{%
 encoding = require "encoding"
 callback.register("pre_linebreak_filter",encoding.callback, "fontenc")
callback.register("hpack_filter",encoding.callback, "fontenc")
}
\luatexattribute999=\directlua{%
 local enc = encoding.getEncId("il2")%
 tex.write(enc)%
 }
%%%%

and simple usage:

%%%%
\input il2lua
\font\csr=csr10
\uselanguage{czech}
\csr P??li? ?lu?ou?k? k?? ?p?l ??belsk? ?dy.

\bye
%%%%

Best regards,
Michal


From pragma at wxs.nl  Fri Jun 24 16:03:11 2016
From: pragma at wxs.nl (Hans Hagen)
Date: Fri, 24 Jun 2016 16:03:11 +0200
Subject: [luatex] luatex - font encoding for type 1 fonts
In-Reply-To: <20160624121818.GX29844@pali>
References: <201606092244.56067@pali> <20160623091149.GA12128@kastrol.joja.cz>
 <8c7ce17f-abba-57b9-21e7-046f7aaa9d6f@wxs.nl>
 <201606241333.58239@pali>
 <b3a76fb3-92ac-bfb9-7bf8-13b3f74bf2d8@wxs.nl> <20160624121025.GV29844@pali>
 <e7192d44-be78-b4bc-5ffb-f941e1867973@wxs.nl> <20160624121818.GX29844@pali>
Message-ID: <8596bc33-d682-30ca-fdea-5f4225e06008@wxs.nl>

On 6/24/2016 2:18 PM, Pali Roh?r wrote:
> On Friday 24 June 2016 14:14:24 Hans Hagen wrote:
>> On 6/24/2016 2:10 PM, Pali Roh?r wrote:
>>> On Friday 24 June 2016 14:01:25 Hans Hagen wrote:
>>>> On 6/24/2016 1:33 PM, Pali Roh?r wrote:
>>>>
>>>>>> (2) the several
>>>>>> cs related packages don't seem to come with afm files,
>>>>>
>>>>> Not several, but all! Metrics are stored in ftm files, e.g. csr10.tfm.
>>>>> For each font there is metafont source code, tex metrics and for some
>>>>> also type1 variant (as pfb file): csr10.mf csr10.tfm csr10.pfb
>>>>
>>>> afaiks no afm files
>>>
>>> And why do you need afm files? Are not TeX metrics (tfm) enough?
>>
>> then you can just load the font (given that the afm matches the pfb)
>
> AFM file contains just font metrics, right? Why is TFM file (which
> contains also metrics) usable? What I trying understand is where is the
> problem as until now TFM + PFB was enough...

because afm/pfb files contain info about what characters we have while 
the tfm file only has metrics (in which case one also needs to interpret 
the encoding vector)

Hans

-----------------------------------------------------------------
                                           Hans Hagen | PRAGMA ADE
               Ridderstraat 27 | 8061 GH Hasselt | The Netherlands
       tel: 038 477 53 69 | www.pragma-ade.com | www.pragma-pod.nl
-----------------------------------------------------------------

From pragma at wxs.nl  Fri Jun 24 16:11:39 2016
From: pragma at wxs.nl (Hans Hagen)
Date: Fri, 24 Jun 2016 16:11:39 +0200
Subject: [luatex] luatex - font encoding for type 1 fonts
In-Reply-To: <201606241544.01800@pali>
References: <201606092244.56067@pali>
 <89d39c17-8053-8fe5-0448-bd61ab2f2fe8@wxs.nl> <20160624121051.GW29844@pali>
 <201606241544.01800@pali>
Message-ID: <928bea13-6890-e5de-9e25-b44e147b28d9@wxs.nl>

On 6/24/2016 3:44 PM, Pali Roh?r wrote:
> On Friday 24 June 2016 14:10:51 Pali Roh?r wrote:
>> On Friday 24 June 2016 14:04:13 Hans Hagen wrote:
>>> the manual: 1.3.3 Example virtual font
>>
>> Thank you, going to look at it!
>
> Now I have something working. If somebody is interesting see attachment.
> PDF output from both pdftex and luatex (on pdfcsplain format) is exactly
> same.
>
> Hans & Mojca, it is correct way?

you need to do the ligatures and kerns too

 > Will hyphenation works correctly?

if it's unicoded, yes

Hans

-----------------------------------------------------------------
                                           Hans Hagen | PRAGMA ADE
               Ridderstraat 27 | 8061 GH Hasselt | The Netherlands
       tel: 038 477 53 69 | www.pragma-ade.com | www.pragma-pod.nl
-----------------------------------------------------------------

From reinhard.kotucha at web.de  Sat Jun 25 02:06:53 2016
From: reinhard.kotucha at web.de (Reinhard Kotucha)
Date: Sat, 25 Jun 2016 02:06:53 +0200
Subject: [luatex] luatex - font encoding for type 1 fonts
In-Reply-To: <f19b50e9-12d7-9036-65d2-8cca05282f6f@wxs.nl>
References: <201606092244.56067@pali>	<20160617202836.GC29844@pali>
 <8e9f9a2f-a596-bbe9-dd4d-d881b8414ee0@wxs.nl>	<20160623081934.GN29844@pali>
 <CAEW6iOjTo4qjiSr8x5CAYdj=v2q-_OjNp2BcYfFHmHywu1C1tA@mail.gmail.com>
 <20160623091149.GA12128@kastrol.joja.cz>
 <8c7ce17f-abba-57b9-21e7-046f7aaa9d6f@wxs.nl>
 <CALBOmsYBuk=boJbNd40HkiUPbGVafdtsc9XY7veLDbydSG7YFg@mail.gmail.com>
 <f19b50e9-12d7-9036-65d2-8cca05282f6f@wxs.nl>
Message-ID: <22381.51997.657471.461722@zaphod.ms25.net>

On 2016-06-24 at 10:06:57 +0200, Hans Hagen wrote:

 > On 6/24/2016 8:36 AM, Mojca Miklavec wrote:
 >> (I would argue that the best way forward in the long run would be to
 >> eventually add the missing features to LM.)
 > 
 > We had that discussion ... differences in positioning of some accents 
 > between aer, plr, csr, vnr, anyr fonts (plus german hackery to get 
 > umlauts lower) and the principles behind lm / gyre was to get a uniform 
 > consistent font. There have been discussions at BT about these issues 
 > and representatives of countries present in the end agreed that it's 
 > also a matter of getting accustomed to.

I can at least confirm that the German and Vietnamese accents are
placed correctly now in LM.

However, in the first beta releases of LM the Vietnamese accents were
placed incorrectly and later the correct positions of accents were
derived from the fonts created by Th?nh.

If there is an acute or grave accent above another accent, it's
usually moved to the right, sometimes an acute accent is moved to the
left.  

I've spent two months in Vietnam and I can assure you that these
horizontal movements are a must. It's neiter a matter of taste nor a
matter of getting accustomed to.

As far as I understand, the problem with Czech is related to kerning
pairs.  I suppose that it's no big deal to add some kerning pairs,
especially if only Czech is concerned.

If people report that they have to use csr instead of LM because LM
doesn't support Czech properly, I strongly recommend to contact the
authors of LM.  Not everything is a matter of taste.

In short: I fully agree with Mojca.

Regards,
  Reinhard

-- 
------------------------------------------------------------------
Reinhard Kotucha                            Phone: +49-511-3373112
Marschnerstr. 25
D-30167 Hannover                    mailto:reinhard.kotucha at web.de
------------------------------------------------------------------


From pragma at wxs.nl  Sat Jun 25 12:09:49 2016
From: pragma at wxs.nl (Hans Hagen)
Date: Sat, 25 Jun 2016 12:09:49 +0200
Subject: [luatex] luatex - font encoding for type 1 fonts
In-Reply-To: <22381.51997.657471.461722@zaphod.ms25.net>
References: <201606092244.56067@pali> <20160617202836.GC29844@pali>
 <8e9f9a2f-a596-bbe9-dd4d-d881b8414ee0@wxs.nl> <20160623081934.GN29844@pali>
 <CAEW6iOjTo4qjiSr8x5CAYdj=v2q-_OjNp2BcYfFHmHywu1C1tA@mail.gmail.com>
 <20160623091149.GA12128@kastrol.joja.cz>
 <8c7ce17f-abba-57b9-21e7-046f7aaa9d6f@wxs.nl>
 <CALBOmsYBuk=boJbNd40HkiUPbGVafdtsc9XY7veLDbydSG7YFg@mail.gmail.com>
 <f19b50e9-12d7-9036-65d2-8cca05282f6f@wxs.nl>
 <22381.51997.657471.461722@zaphod.ms25.net>
Message-ID: <4b2ba072-6ef7-1890-e6d4-c49a3850c63e@wxs.nl>

On 6/25/2016 2:06 AM, Reinhard Kotucha wrote:
> On 2016-06-24 at 10:06:57 +0200, Hans Hagen wrote:
>
>  > On 6/24/2016 8:36 AM, Mojca Miklavec wrote:
>  >> (I would argue that the best way forward in the long run would be to
>  >> eventually add the missing features to LM.)
>  >
>  > We had that discussion ... differences in positioning of some accents
>  > between aer, plr, csr, vnr, anyr fonts (plus german hackery to get
>  > umlauts lower) and the principles behind lm / gyre was to get a uniform
>  > consistent font. There have been discussions at BT about these issues
>  > and representatives of countries present in the end agreed that it's
>  > also a matter of getting accustomed to.
>
> I can at least confirm that the German and Vietnamese accents are
> placed correctly now in LM.
>
> However, in the first beta releases of LM the Vietnamese accents were
> placed incorrectly and later the correct positions of accents were
> derived from the fonts created by Th?nh.

Sure they were betas ... even now things get fixed (there are still bugs).

> If there is an acute or grave accent above another accent, it's
> usually moved to the right, sometimes an acute accent is moved to the
> left.
>
> I've spent two months in Vietnam and I can assure you that these
> horizontal movements are a must. It's neiter a matter of taste nor a
> matter of getting accustomed to.

At BT the discussion was more about how high should the diaeresis 
(umlaut) and similar accents or .. be above the u a e v s ... should we 
have several variants, should it be language dependent, what if one 
mixes languages ... it was compared to other fonts and one of the 
conclusions was that in most cases it was done consistent across latin 
scripts.

> As far as I understand, the problem with Czech is related to kerning
> pairs.  I suppose that it's no big deal to add some kerning pairs,
> especially if only Czech is concerned.

At BT the discussions i refer to were about the heights of accents (and 
consistency of the common ones among the cm derived fonts \^ \" \' etc etc.

Kerns can of course be added (there often are already more kerns in lm 
than in the originals) and in case of doubt can even be language 
dependent and it's mostly a matter of telling the lm folks (i don't 
remember seeing proposals for that). Btw, lm is also better for Dutch 
wrt kerns.

> If people report that they have to use csr instead of LM because LM
> doesn't support Czech properly, I strongly recommend to contact the
> authors of LM.  Not everything is a matter of taste.

Of course that also applies to other fonts. But the original question 
was more about how to support an old school 8 bit font in some special 
encoding (a dozen or so in the tex world) in an unicode / utf environment.

Anyway, I again looked at an easy way to load with the old csr and I am 
surprised about the availability: several packages, vf and non vf ... 
it's all geared to a specific kind of use I guess. It's a bit of trial 
and error case,

Hans

-----------------------------------------------------------------
                                           Hans Hagen | PRAGMA ADE
               Ridderstraat 27 | 8061 GH Hasselt | The Netherlands
       tel: 038 477 53 69 | www.pragma-ade.com | www.pragma-pod.nl
-----------------------------------------------------------------

From pali.rohar at gmail.com  Sat Jun 25 12:16:10 2016
From: pali.rohar at gmail.com (Pali =?utf-8?q?Roh=C3=A1r?=)
Date: Sat, 25 Jun 2016 12:16:10 +0200
Subject: [luatex] luatex - font encoding for type 1 fonts
In-Reply-To: <928bea13-6890-e5de-9e25-b44e147b28d9@wxs.nl>
References: <201606092244.56067@pali> <201606241544.01800@pali>
 <928bea13-6890-e5de-9e25-b44e147b28d9@wxs.nl>
Message-ID: <201606251216.10358@pali>

On Friday 24 June 2016 16:11:39 Hans Hagen wrote:
> On 6/24/2016 3:44 PM, Pali Roh?r wrote:
> > On Friday 24 June 2016 14:10:51 Pali Roh?r wrote:
> >> On Friday 24 June 2016 14:04:13 Hans Hagen wrote:
> >>> the manual: 1.3.3 Example virtual font
> >> 
> >> Thank you, going to look at it!
> > 
> > Now I have something working. If somebody is interesting see
> > attachment. PDF output from both pdftex and luatex (on pdfcsplain
> > format) is exactly same.
> > 
> > Hans & Mojca, it is correct way?
> 
> you need to do the ligatures and kerns too

Snip from my lua code:

local characters = {}                                                                                                                                                                            
for uni, cs in pairs(csbase) do                                                                                                                                                                  
        if f.characters[cs] then                                                                                                                                                                 
                characters[uni] = {}                                                                                                                                                             
                for key, val in pairs(f.characters[cs]) do                                                                                                                                       
                        characters[uni][key] = val                                                                                                                                               
                end                                                                                                                                                                              
                characters[uni].commands = {{ 'char', cs }}                                                                                                                                      
        end                                                                                                                                                                                      
end

Inner for loop should copy whole structure of font with ligatures and 
kerns, or not?

Or is something more needed for ligatures and kerns?

>  > Will hyphenation works correctly?
> 
> if it's unicoded, yes

New virtual font has defined unicode chars (as commands to other chars), 
so it is unicoded, right?

-- 
Pali Roh?r
pali.rohar at gmail.com
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 198 bytes
Desc: This is a digitally signed message part.
URL: <http://tug.org/pipermail/luatex/attachments/20160625/66c97649/attachment.bin>

From pali.rohar at gmail.com  Sat Jun 25 12:18:59 2016
From: pali.rohar at gmail.com (Pali =?utf-8?q?Roh=C3=A1r?=)
Date: Sat, 25 Jun 2016 12:18:59 +0200
Subject: [luatex] luatex - font encoding for type 1 fonts
In-Reply-To: <CAOCj1OdtbUsQ-LKZJLPg6uYZ0D6U-mgFqKX4xY_2q0C+saez0g@mail.gmail.com>
References: <201606092244.56067@pali>
 <CAOCj1OdtbUsQ-LKZJLPg6uYZ0D6U-mgFqKX4xY_2q0C+saez0g@mail.gmail.com>
Message-ID: <201606251218.59484@pali>

On Friday 24 June 2016 15:54:34 Michal Hoftich wrote:
> > Is there any simple way to tell luatex font encoding table (unicode
> > character --> code in type 1 font)? So I could be able to write
> > utf8 string "?" directly in text editor instead \char232.
> 
> I've made an experimental LuaLaTeX support for 8 bit fonts and
> fontenc package using node callbacks. Basically, Unicode characters
> are translated to 8 bit chars using translation tables, based on
> selected font encoding. I am not sure whether it is a correct way to
> do this, but it seems to work, including hyphenation:
> 
> https://github.com/michal-h21/luafontenc
> 
> While it is intended to work with fontenc package, you can use the
> Lua modules to work with Plain. Support file for il2 encoding,
> il2lua.tex:
> 
> %%%%
> \directlua{%
>  encoding = require "encoding"
>  callback.register("pre_linebreak_filter",encoding.callback,
> "fontenc") callback.register("hpack_filter",encoding.callback,
> "fontenc") }
> \luatexattribute999=\directlua{%
>  local enc = encoding.getEncId("il2")%
>  tex.write(enc)%
>  }
> %%%%
> 
> and simple usage:
> 
> %%%%
> \input il2lua
> \font\csr=csr10
> \uselanguage{czech}
> \csr P??li? ?lu?ou?k? k?? ?p?l ??belsk? ?dy.
> 
> \bye
> %%%%
> 
> Best regards,
> Michal

With your package, can I use in one document csr10 font and also some 
new unicode font? Or ideally mix fonts with different encodings in one 
document?

-- 
Pali Roh?r
pali.rohar at gmail.com
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 198 bytes
Desc: This is a digitally signed message part.
URL: <http://tug.org/pipermail/luatex/attachments/20160625/f44822d8/attachment-0001.bin>

From pali.rohar at gmail.com  Sat Jun 25 12:24:53 2016
From: pali.rohar at gmail.com (Pali =?utf-8?q?Roh=C3=A1r?=)
Date: Sat, 25 Jun 2016 12:24:53 +0200
Subject: [luatex] luatex - font encoding for type 1 fonts
In-Reply-To: <22381.51997.657471.461722@zaphod.ms25.net>
References: <201606092244.56067@pali>
 <f19b50e9-12d7-9036-65d2-8cca05282f6f@wxs.nl>
 <22381.51997.657471.461722@zaphod.ms25.net>
Message-ID: <201606251224.53528@pali>

On Saturday 25 June 2016 02:06:53 Reinhard Kotucha wrote:
> As far as I understand, the problem with Czech is related to kerning
> pairs.  I suppose that it's no big deal to add some kerning pairs,
> especially if only Czech is concerned.
> 
> If people report that they have to use csr instead of LM because LM
> doesn't support Czech properly, I strongly recommend to contact the
> authors of LM.  Not everything is a matter of taste.

It is more for Slovak texts as I do not think that pair "V?" is common 
in Czech. Anyway, Mojca already contacted author of LM fonts, but until 
now no response yet...

-- 
Pali Roh?r
pali.rohar at gmail.com
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 198 bytes
Desc: This is a digitally signed message part.
URL: <http://tug.org/pipermail/luatex/attachments/20160625/962eddc6/attachment.bin>

From pali.rohar at gmail.com  Sat Jun 25 12:30:12 2016
From: pali.rohar at gmail.com (Pali =?utf-8?q?Roh=C3=A1r?=)
Date: Sat, 25 Jun 2016 12:30:12 +0200
Subject: [luatex] luatex - font encoding for type 1 fonts
In-Reply-To: <8596bc33-d682-30ca-fdea-5f4225e06008@wxs.nl>
References: <201606092244.56067@pali> <20160624121818.GX29844@pali>
 <8596bc33-d682-30ca-fdea-5f4225e06008@wxs.nl>
Message-ID: <201606251230.12136@pali>

On Friday 24 June 2016 16:03:11 Hans Hagen wrote:
> On 6/24/2016 2:18 PM, Pali Roh?r wrote:
> > On Friday 24 June 2016 14:14:24 Hans Hagen wrote:
> >> On 6/24/2016 2:10 PM, Pali Roh?r wrote:
> >>> On Friday 24 June 2016 14:01:25 Hans Hagen wrote:
> >>>> On 6/24/2016 1:33 PM, Pali Roh?r wrote:
> >>>>>> (2) the several
> >>>>>> cs related packages don't seem to come with afm files,
> >>>>> 
> >>>>> Not several, but all! Metrics are stored in ftm files, e.g.
> >>>>> csr10.tfm. For each font there is metafont source code, tex
> >>>>> metrics and for some also type1 variant (as pfb file):
> >>>>> csr10.mf csr10.tfm csr10.pfb
> >>>> 
> >>>> afaiks no afm files
> >>> 
> >>> And why do you need afm files? Are not TeX metrics (tfm) enough?
> >> 
> >> then you can just load the font (given that the afm matches the
> >> pfb)
> > 
> > AFM file contains just font metrics, right? Why is TFM file (which
> > contains also metrics) usable? What I trying understand is where is
> > the problem as until now TFM + PFB was enough...
> 
> because afm/pfb files contain info about what characters we have
> while the tfm file only has metrics (in which case one also needs to
> interpret the encoding vector)

Do you have some link about description of AFM and TFM files?

IIRC, PFB file has vector of glyph names. So from this information can 
be generated encoding font table as for each glyph name can be assigned 
unicode character. And this could work for any Type 1 font in PFB format 
Or I'm missing something?

-- 
Pali Roh?r
pali.rohar at gmail.com
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 198 bytes
Desc: This is a digitally signed message part.
URL: <http://tug.org/pipermail/luatex/attachments/20160625/51262605/attachment.bin>

From pragma at wxs.nl  Sat Jun 25 14:47:43 2016
From: pragma at wxs.nl (Hans Hagen)
Date: Sat, 25 Jun 2016 14:47:43 +0200
Subject: [luatex] luatex - font encoding for type 1 fonts
In-Reply-To: <201606251216.10358@pali>
References: <201606092244.56067@pali> <201606241544.01800@pali>
 <928bea13-6890-e5de-9e25-b44e147b28d9@wxs.nl> <201606251216.10358@pali>
Message-ID: <56ec8797-f969-0b2f-e983-2522bea33e26@wxs.nl>

On 6/25/2016 12:16 PM, Pali Roh?r wrote:
> On Friday 24 June 2016 16:11:39 Hans Hagen wrote:
>> On 6/24/2016 3:44 PM, Pali Roh?r wrote:
>>> On Friday 24 June 2016 14:10:51 Pali Roh?r wrote:
>>>> On Friday 24 June 2016 14:04:13 Hans Hagen wrote:
>>>>> the manual: 1.3.3 Example virtual font
>>>>
>>>> Thank you, going to look at it!
>>>
>>> Now I have something working. If somebody is interesting see
>>> attachment. PDF output from both pdftex and luatex (on pdfcsplain
>>> format) is exactly same.
>>>
>>> Hans & Mojca, it is correct way?
>>
>> you need to do the ligatures and kerns too
>
> Snip from my lua code:
>
> local characters = {}
> for uni, cs in pairs(csbase) do
>         if f.characters[cs] then
>                 characters[uni] = {}
>                 for key, val in pairs(f.characters[cs]) do
>                         characters[uni][key] = val
>                 end
>                 characters[uni].commands = {{ 'char', cs }}
>         end
> end
>
> Inner for loop should copy whole structure of font with ligatures and
> kerns, or not?
>
> Or is something more needed for ligatures and kerns?

you need to remap the kerns hash keys as well as ligatures hash keys O 
chained chars too

>>  > Will hyphenation works correctly?
>>
>> if it's unicoded, yes
>
> New virtual font has defined unicode chars (as commands to other chars),
> so it is unicoded, right?

yes

Anyway, in the next context distribution upload (context also ships with 
a plain variant) I have added a loader script. If you use luaotfload you 
probably have to wait for an update at their end. The luatex-plain 
format that ships with context can do this then:

\font\foo=file:luatex-plain-tfm.lua:tfm=csr10;enc=csr;pfb=csr10 at 12pt

\foo ?????????????????? fiets ff ffi

\bye

(It uses a few helpers from the existing font code, like cached loading 
and glyph names to unicode mapping using the enc file which saves 
resources and is also more generic than hard coded font vectors. It's 
still a pitty that these csr fonts don't come as a full package like plr 
which has afm files too; in which case the regular afm/pfb loader could 
be used instead. I only tested csr10.tfm / csr10.pfb / css.enc as I 
don't want to install the whole lot.

Hans

-----------------------------------------------------------------
                                           Hans Hagen | PRAGMA ADE
               Ridderstraat 27 | 8061 GH Hasselt | The Netherlands
       tel: 038 477 53 69 | www.pragma-ade.com | www.pragma-pod.nl
-----------------------------------------------------------------

From pragma at wxs.nl  Sat Jun 25 14:51:17 2016
From: pragma at wxs.nl (Hans Hagen)
Date: Sat, 25 Jun 2016 14:51:17 +0200
Subject: [luatex] luatex - font encoding for type 1 fonts
In-Reply-To: <201606251230.12136@pali>
References: <201606092244.56067@pali> <20160624121818.GX29844@pali>
 <8596bc33-d682-30ca-fdea-5f4225e06008@wxs.nl> <201606251230.12136@pali>
Message-ID: <cccd7750-362f-9200-0c85-27feb65c7bf1@wxs.nl>

On 6/25/2016 12:30 PM, Pali Roh?r wrote:
> On Friday 24 June 2016 16:03:11 Hans Hagen wrote:
>> On 6/24/2016 2:18 PM, Pali Roh?r wrote:
>>> On Friday 24 June 2016 14:14:24 Hans Hagen wrote:
>>>> On 6/24/2016 2:10 PM, Pali Roh?r wrote:
>>>>> On Friday 24 June 2016 14:01:25 Hans Hagen wrote:
>>>>>> On 6/24/2016 1:33 PM, Pali Roh?r wrote:
>>>>>>>> (2) the several
>>>>>>>> cs related packages don't seem to come with afm files,
>>>>>>>
>>>>>>> Not several, but all! Metrics are stored in ftm files, e.g.
>>>>>>> csr10.tfm. For each font there is metafont source code, tex
>>>>>>> metrics and for some also type1 variant (as pfb file):
>>>>>>> csr10.mf csr10.tfm csr10.pfb
>>>>>>
>>>>>> afaiks no afm files
>>>>>
>>>>> And why do you need afm files? Are not TeX metrics (tfm) enough?
>>>>
>>>> then you can just load the font (given that the afm matches the
>>>> pfb)
>>>
>>> AFM file contains just font metrics, right? Why is TFM file (which
>>> contains also metrics) usable? What I trying understand is where is
>>> the problem as until now TFM + PFB was enough...
>>
>> because afm/pfb files contain info about what characters we have
>> while the tfm file only has metrics (in which case one also needs to
>> interpret the encoding vector)
>
> Do you have some link about description of AFM and TFM files?
>
> IIRC, PFB file has vector of glyph names. So from this information can
> be generated encoding font table as for each glyph name can be assigned
> unicode character. And this could work for any Type 1 font in PFB format
> Or I'm missing something?

an afm file has the metrics as well as the kerns and ligature info; the 
pfb is needed to sort out the glyph index (there is a name <-> index 
mapping in between)

normally a pfb file ships with an afm file (from that one can make a 
tfm); if i'm bored i can make a tfm to afm converter but even then there 
might be some hand-crafting needed so better make sure the csr fonts 
ship as a proper pfb/afm package

Hans


-----------------------------------------------------------------
                                           Hans Hagen | PRAGMA ADE
               Ridderstraat 27 | 8061 GH Hasselt | The Netherlands
       tel: 038 477 53 69 | www.pragma-ade.com | www.pragma-pod.nl
-----------------------------------------------------------------

From pali.rohar at gmail.com  Sat Jun 25 15:16:31 2016
From: pali.rohar at gmail.com (Pali =?utf-8?q?Roh=C3=A1r?=)
Date: Sat, 25 Jun 2016 15:16:31 +0200
Subject: [luatex] luatex - font encoding for type 1 fonts
In-Reply-To: <cccd7750-362f-9200-0c85-27feb65c7bf1@wxs.nl>
References: <201606092244.56067@pali> <201606251230.12136@pali>
 <cccd7750-362f-9200-0c85-27feb65c7bf1@wxs.nl>
Message-ID: <201606251516.31292@pali>

On Saturday 25 June 2016 14:51:17 Hans Hagen wrote:
> On 6/25/2016 12:30 PM, Pali Roh?r wrote:
> > On Friday 24 June 2016 16:03:11 Hans Hagen wrote:
> >> On 6/24/2016 2:18 PM, Pali Roh?r wrote:
> >>> On Friday 24 June 2016 14:14:24 Hans Hagen wrote:
> >>>> On 6/24/2016 2:10 PM, Pali Roh?r wrote:
> >>>>> On Friday 24 June 2016 14:01:25 Hans Hagen wrote:
> >>>>>> On 6/24/2016 1:33 PM, Pali Roh?r wrote:
> >>>>>>>> (2) the several
> >>>>>>>> cs related packages don't seem to come with afm files,
> >>>>>>> 
> >>>>>>> Not several, but all! Metrics are stored in ftm files, e.g.
> >>>>>>> csr10.tfm. For each font there is metafont source code, tex
> >>>>>>> metrics and for some also type1 variant (as pfb file):
> >>>>>>> csr10.mf csr10.tfm csr10.pfb
> >>>>>> 
> >>>>>> afaiks no afm files
> >>>>> 
> >>>>> And why do you need afm files? Are not TeX metrics (tfm)
> >>>>> enough?
> >>>> 
> >>>> then you can just load the font (given that the afm matches the
> >>>> pfb)
> >>> 
> >>> AFM file contains just font metrics, right? Why is TFM file
> >>> (which contains also metrics) usable? What I trying understand
> >>> is where is the problem as until now TFM + PFB was enough...
> >> 
> >> because afm/pfb files contain info about what characters we have
> >> while the tfm file only has metrics (in which case one also needs
> >> to interpret the encoding vector)
> > 
> > Do you have some link about description of AFM and TFM files?
> > 
> > IIRC, PFB file has vector of glyph names. So from this information
> > can be generated encoding font table as for each glyph name can be
> > assigned unicode character. And this could work for any Type 1
> > font in PFB format Or I'm missing something?
> 
> an afm file has the metrics as well as the kerns and ligature info;
> the pfb is needed to sort out the glyph index (there is a name <->
> index mapping in between)
> 
> normally a pfb file ships with an afm file (from that one can make a
> tfm); if i'm bored i can make a tfm to afm converter but even then
> there might be some hand-crafting needed so better make sure the csr
> fonts ship as a proper pfb/afm package

Problem is that there are no AFM files for CSFonts (and IIRC never 
were). CSFonts are written in MetaFont and (from which were generated 
TFM files) and some subset of CSFonts (those which are often used) were 
later converted to Type 1 variant... Probably nobody generated yet AFM 
files for CSFonts as they were not needed, TeX handle just TFM files.

So if AFM files are really needed and combination PFB+TFM plus MetaFont 
source code is not enough, how to correctly generate AFM files?

And why cannot be still used TFM files which contains all kerns and 
ligature information?

-- 
Pali Roh?r
pali.rohar at gmail.com
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 198 bytes
Desc: This is a digitally signed message part.
URL: <http://tug.org/pipermail/luatex/attachments/20160625/664c23bd/attachment.bin>

From pali.rohar at gmail.com  Sat Jun 25 23:32:54 2016
From: pali.rohar at gmail.com (Pali =?utf-8?q?Roh=C3=A1r?=)
Date: Sat, 25 Jun 2016 23:32:54 +0200
Subject: [luatex] luatex - font encoding for type 1 fonts
In-Reply-To: <56ec8797-f969-0b2f-e983-2522bea33e26@wxs.nl>
References: <201606092244.56067@pali> <201606251216.10358@pali>
 <56ec8797-f969-0b2f-e983-2522bea33e26@wxs.nl>
Message-ID: <201606252332.54183@pali>

On Saturday 25 June 2016 14:47:43 Hans Hagen wrote:
> Anyway, in the next context distribution upload (context also ships
> with a plain variant) I have added a loader script. If you use
> luaotfload you probably have to wait for an update at their end. The
> luatex-plain format that ships with context can do this then:
> 
> \font\foo=file:luatex-plain-tfm.lua:tfm=csr10;enc=csr;pfb=csr10 at
> 12pt
> 
> \foo ?????????????????? fiets ff ffi
> 
> \bye

Great, that looks really good!

What I still do not understand is why it is needed to specify enc=csr. 
Encoding vector is present in PFB file.

Also, I have another question, is there ability to load PK font file 
(generated from MetaFont)? Specifying metric file (tfm) and encoding 
vector (enc) should work similarly (or maybe same?) as for Type 1 PFB 
font.

> (It uses a few helpers from the existing font code, like cached
> loading and glyph names to unicode mapping using the enc file which
> saves resources and is also more generic than hard coded font
> vectors. It's still a pitty that these csr fonts don't come as a
> full package like plr which has afm files too; in which case the
> regular afm/pfb loader could be used instead. I only tested
> csr10.tfm / csr10.pfb / css.enc as I don't want to install the whole
> lot.

If one is working, others must too.

Where I can find your changes, so I could test it? Ideally if I could 
download tex/lua files into working directory and use system luatex 
instead building whole texlive and luatex from some sources...

-- 
Pali Roh?r
pali.rohar at gmail.com
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 198 bytes
Desc: This is a digitally signed message part.
URL: <http://tug.org/pipermail/luatex/attachments/20160625/fd9a405a/attachment-0001.bin>

From pragma at wxs.nl  Sun Jun 26 11:30:44 2016
From: pragma at wxs.nl (Hans Hagen)
Date: Sun, 26 Jun 2016 11:30:44 +0200
Subject: [luatex] luatex - font encoding for type 1 fonts
In-Reply-To: <201606251516.31292@pali>
References: <201606092244.56067@pali> <201606251230.12136@pali>
 <cccd7750-362f-9200-0c85-27feb65c7bf1@wxs.nl> <201606251516.31292@pali>
Message-ID: <c688040e-a45f-10c6-d5e2-f757d6f3942f@wxs.nl>

On 6/25/2016 3:16 PM, Pali Roh?r wrote:

> Problem is that there are no AFM files for CSFonts (and IIRC never
> were). CSFonts are written in MetaFont and (from which were generated
> TFM files) and some subset of CSFonts (those which are often used) were
> later converted to Type 1 variant... Probably nobody generated yet AFM
> files for CSFonts as they were not needed, TeX handle just TFM files.

with an afm file one can also use the fonts in other applications than tex

> So if AFM files are really needed and combination PFB+TFM plus MetaFont
> source code is not enough, how to correctly generate AFM files?

manual, its a text file

> And why cannot be still used TFM files which contains all kerns and
> ligature information?

because one then also needs an encoding vector (an enc file is actually 
a blob of postscript, kind of weird as it could also have been a list)

I'm speaking ConTeXt now: the reason for not bothering about tfm (but 
use afm instead) is that we can use *all* glyphs in a font, not just as 
subset and that made it possible in the early days of luatex to use 
type 1 fonts without bothering about encodings (we only use tfm in 
context for traditional math fonts).

Hans


-- 

-----------------------------------------------------------------
                                           Hans Hagen | PRAGMA ADE
               Ridderstraat 27 | 8061 GH Hasselt | The Netherlands
       tel: 038 477 53 69 | www.pragma-ade.com | www.pragma-pod.nl
-----------------------------------------------------------------

From pragma at wxs.nl  Sun Jun 26 12:37:35 2016
From: pragma at wxs.nl (Hans Hagen)
Date: Sun, 26 Jun 2016 12:37:35 +0200
Subject: [luatex] luatex - font encoding for type 1 fonts
In-Reply-To: <201606252332.54183@pali>
References: <201606092244.56067@pali> <201606251216.10358@pali>
 <56ec8797-f969-0b2f-e983-2522bea33e26@wxs.nl> <201606252332.54183@pali>
Message-ID: <5caf9bda-cbfe-a9db-09b1-57cb7f4d4c33@wxs.nl>

On 6/25/2016 11:32 PM, Pali Roh?r wrote:
> On Saturday 25 June 2016 14:47:43 Hans Hagen wrote:
>> Anyway, in the next context distribution upload (context also ships
>> with a plain variant) I have added a loader script. If you use
>> luaotfload you probably have to wait for an update at their end. The
>> luatex-plain format that ships with context can do this then:
>>
>> \font\foo=file:luatex-plain-tfm.lua:tfm=csr10;enc=csr;pfb=csr10 at
>> 12pt
>>
>> \foo ?????????????????? fiets ff ffi
>>
>> \bye
>
> Great, that looks really good!
>
> What I still do not understand is why it is needed to specify enc=csr.
> Encoding vector is present in PFB file.

because the order in a pfb can be different and there can be more than 
256 glyphs in a pfb ... the glyphname is what links them

index in tfm -> name -> index in pfb

> Also, I have another question, is there ability to load PK font file
> (generated from MetaFont)? Specifying metric file (tfm) and encoding
> vector (enc) should work similarly (or maybe same?) as for Type 1 PFB
> font.

sure, i can do that (omitting the pfb entry will then revert to bitmaps 
plus a bit of safeguarding against inconsistent names and so) but keep 
in mind that a mixture in one document will then always use the outline 
(as the map entry wins)

>> (It uses a few helpers from the existing font code, like cached
>> loading and glyph names to unicode mapping using the enc file which
>> saves resources and is also more generic than hard coded font
>> vectors. It's still a pitty that these csr fonts don't come as a
>> full package like plr which has afm files too; in which case the
>> regular afm/pfb loader could be used instead. I only tested
>> csr10.tfm / csr10.pfb / css.enc as I don't want to install the whole
>> lot.
>
> If one is working, others must too.
>
> Where I can find your changes, so I could test it? Ideally if I could
> download tex/lua files into working directory and use system luatex
> instead building whole texlive and luatex from some sources...

you have to wait till i update context and then fetch it from the 
context garden (i'll update later today)

Hans

-----------------------------------------------------------------
                                           Hans Hagen | PRAGMA ADE
               Ridderstraat 27 | 8061 GH Hasselt | The Netherlands
       tel: 038 477 53 69 | www.pragma-ade.com | www.pragma-pod.nl
-----------------------------------------------------------------

From pali.rohar at gmail.com  Sun Jun 26 13:25:11 2016
From: pali.rohar at gmail.com (Pali =?utf-8?q?Roh=C3=A1r?=)
Date: Sun, 26 Jun 2016 13:25:11 +0200
Subject: [luatex] luatex - font encoding for type 1 fonts
In-Reply-To: <5caf9bda-cbfe-a9db-09b1-57cb7f4d4c33@wxs.nl>
References: <201606092244.56067@pali> <201606252332.54183@pali>
 <5caf9bda-cbfe-a9db-09b1-57cb7f4d4c33@wxs.nl>
Message-ID: <201606261325.11366@pali>

On Sunday 26 June 2016 12:37:35 Hans Hagen wrote:
> On 6/25/2016 11:32 PM, Pali Roh?r wrote:
> > On Saturday 25 June 2016 14:47:43 Hans Hagen wrote:
> >> Anyway, in the next context distribution upload (context also
> >> ships with a plain variant) I have added a loader script. If you
> >> use luaotfload you probably have to wait for an update at their
> >> end. The luatex-plain format that ships with context can do this
> >> then:
> >> 
> >> \font\foo=file:luatex-plain-tfm.lua:tfm=csr10;enc=csr;pfb=csr10 at
> >> 12pt
> >> 
> >> \foo ?????????????????? fiets ff ffi
> >> 
> >> \bye
> > 
> > Great, that looks really good!
> > 
> > What I still do not understand is why it is needed to specify
> > enc=csr. Encoding vector is present in PFB file.
> 
> because the order in a pfb can be different and there can be more
> than 256 glyphs in a pfb ... the glyphname is what links them
> 
> index in tfm -> name -> index in pfb

Yes, this is how it works.

But I'm trying to point something else, that csr.enc file does not have 
to be specified.

File csr.enc contains:

  /il2Encoding [
  /Gamma /Delta /Theta /Lambda /Xi /Pi /Sigma /Upsilon
  ...
  /quotedblbase /csquotedblright
  ] def

File csr10.pfb contains:

  /FontName /csr10 def
  /Encoding 256 array
  0 1 255 {1 index exch /.notdef put} for
  dup 0 /Gamma put
  dup 1 /Delta put
  dup 2 /Theta put
  dup 3 /Lambda put
  dup 4 /Xi put
  dup 5 /Pi put
  dup 6 /Sigma put
  dup 7 /Upsilon put
  ...
  dup 254 /quotedblbase put
  dup 255 /csquotedblright put
  readonly def
  ...
  2 index /CharStrings 183 dict dup begin
  /Xi {
  ...
  }
  /dotlessi {
  ...
  }
  /oslash {
  ...
  }
  ...

So glyphs are really in random order in csr10.pfb file (first is /Xi, 
second /dotlessi, ...) but at beginning of csr10.pfb file is /Encoding 
table where is that mapping from index to glyph name. Same what is in 
csr.enc file.

And I'm trying to tell you that in this case (when /Encoding array in 
pfb file is available), external *.enc is not needed to specify. Looks 
like that pdftex uses this /Encoding array.

Do you know now, what I means?

> > Also, I have another question, is there ability to load PK font
> > file (generated from MetaFont)? Specifying metric file (tfm) and
> > encoding vector (enc) should work similarly (or maybe same?) as
> > for Type 1 PFB font.
> 
> sure, i can do that (omitting the pfb entry will then revert to
> bitmaps plus a bit of safeguarding against inconsistent names and
> so) but keep in mind that a mixture in one document will then always
> use the outline (as the map entry wins)

When I'm preparing document for printer (at resolution 600dpi), I think 
it does not matter if font is Type 1 or bitmap PK (generated by MetaFont 
for 600dpi). There are no problems with bitmap fonts as it is not needed 
scale it.

I think it could be useful if that your loader was able to understand 
command also when pfb file is not specified. It could try to load either 
pfb file (preferred) or fallback to PK/metafont.

For example, in CSFonts are fonts csb10 and csb12. Both are written in 
MetaFont (one for 10pt, second prepared for 12pt), but only first one 
has Type 1 variant. Second only MetaFont. So when I need to specify font 
in TeX (with your loader), it would be easier to use same "font command" 
syntax to load font as need to distinguish if there is available Type 1 
variant or not. For pdftex I do not need to tell if I want Type 1 or PK, 
it has (internal/system pdftex.map) database of Type 1 fonts and 
automatically choose Type 1 if is available. If not but PK is available, 
then it is used. And even PK font file is not available, it starts 
MetaPost and generate metric file TFM and PK font. 

> >> (It uses a few helpers from the existing font code, like cached
> >> loading and glyph names to unicode mapping using the enc file
> >> which saves resources and is also more generic than hard coded
> >> font vectors. It's still a pitty that these csr fonts don't come
> >> as a full package like plr which has afm files too; in which case
> >> the regular afm/pfb loader could be used instead. I only tested
> >> csr10.tfm / csr10.pfb / css.enc as I don't want to install the
> >> whole lot.
> > 
> > If one is working, others must too.
> > 
> > Where I can find your changes, so I could test it? Ideally if I
> > could download tex/lua files into working directory and use system
> > luatex instead building whole texlive and luatex from some
> > sources...
> 
> you have to wait till i update context and then fetch it from the
> context garden (i'll update later today)

Ok, let me know when you publish it (and where) and I would be happy to 
test your changes!

-- 
Pali Roh?r
pali.rohar at gmail.com
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 198 bytes
Desc: This is a digitally signed message part.
URL: <http://tug.org/pipermail/luatex/attachments/20160626/bb116c95/attachment-0001.bin>

From pali.rohar at gmail.com  Sun Jun 26 13:44:42 2016
From: pali.rohar at gmail.com (Pali =?utf-8?q?Roh=C3=A1r?=)
Date: Sun, 26 Jun 2016 13:44:42 +0200
Subject: [luatex] luatex - font encoding for type 1 fonts
In-Reply-To: <c688040e-a45f-10c6-d5e2-f757d6f3942f@wxs.nl>
References: <201606092244.56067@pali> <201606251516.31292@pali>
 <c688040e-a45f-10c6-d5e2-f757d6f3942f@wxs.nl>
Message-ID: <201606261344.42931@pali>

On Sunday 26 June 2016 11:30:44 Hans Hagen wrote:
> On 6/25/2016 3:16 PM, Pali Roh?r wrote:
> > Problem is that there are no AFM files for CSFonts (and IIRC never
> > were). CSFonts are written in MetaFont and (from which were
> > generated TFM files) and some subset of CSFonts (those which are
> > often used) were later converted to Type 1 variant... Probably
> > nobody generated yet AFM files for CSFonts as they were not
> > needed, TeX handle just TFM files.
> 
> with an afm file one can also use the fonts in other applications
> than tex

Ok, but I do not think that somebody is interested in CSFonts outside of 
TeX :-) At least I have not hear about it...

> > So if AFM files are really needed and combination PFB+TFM plus
> > MetaFont source code is not enough, how to correctly generate AFM
> > files?
> 
> manual, its a text file

Hm... I thought that there is tools which can generate it. Manually 
writing file is hard and mistakes (in metrics, etc) are often...

> > And why cannot be still used TFM files which contains all kerns and
> > ligature information?
> 
> because one then also needs an encoding vector (an enc file is
> actually a blob of postscript, kind of weird as it could also have
> been a list)

(see my previous email about /Encoding array available in PFB file)

> I'm speaking ConTeXt now: the reason for not bothering about tfm (but
> use afm instead) is that we can use *all* glyphs in a font, not just
> as subset and that made it possible in the early days of luatex to
> use type 1 fonts without bothering about encodings (we only use tfm
> in context for traditional math fonts).

Right, in AFM file (I looked at sent sample by luigi) there is for each 
glyph name metric information. That make sense.

But in case I do not have AFM file and have only TFM + PFB I can use 
only what I have. Unless there is fully automatic conversion tool (which 
get TFM file, PFB file, ENC file, whatever...) which generate AFM file 
correctly.

-- 
Pali Roh?r
pali.rohar at gmail.com
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 198 bytes
Desc: This is a digitally signed message part.
URL: <http://tug.org/pipermail/luatex/attachments/20160626/9e82ede1/attachment.bin>

From pragma at wxs.nl  Sun Jun 26 15:15:31 2016
From: pragma at wxs.nl (Hans Hagen)
Date: Sun, 26 Jun 2016 15:15:31 +0200
Subject: [luatex] luatex - font encoding for type 1 fonts
In-Reply-To: <201606261344.42931@pali>
References: <201606092244.56067@pali> <201606251516.31292@pali>
 <c688040e-a45f-10c6-d5e2-f757d6f3942f@wxs.nl> <201606261344.42931@pali>
Message-ID: <01bff777-cc06-d0a1-7a10-bd8c0db5dbe6@wxs.nl>

On 6/26/2016 1:44 PM, Pali Roh?r wrote:
> On Sunday 26 June 2016 11:30:44 Hans Hagen wrote:
>> On 6/25/2016 3:16 PM, Pali Roh?r wrote:
>>> Problem is that there are no AFM files for CSFonts (and IIRC never
>>> were). CSFonts are written in MetaFont and (from which were
>>> generated TFM files) and some subset of CSFonts (those which are
>>> often used) were later converted to Type 1 variant... Probably
>>> nobody generated yet AFM files for CSFonts as they were not
>>> needed, TeX handle just TFM files.
>>
>> with an afm file one can also use the fonts in other applications
>> than tex
>
> Ok, but I do not think that somebody is interested in CSFonts outside of
> TeX :-) At least I have not hear about it...

well, maybe not csr but others fonts ... (imagine you need to make a 
graphic is some application using fonts that match the main document) 
... anyway, csr is probably one of the few fonts not having an afm 
alongside

Hans


-----------------------------------------------------------------
                                           Hans Hagen | PRAGMA ADE
               Ridderstraat 27 | 8061 GH Hasselt | The Netherlands
       tel: 038 477 53 69 | www.pragma-ade.com | www.pragma-pod.nl
-----------------------------------------------------------------

From pragma at wxs.nl  Sun Jun 26 15:24:11 2016
From: pragma at wxs.nl (Hans Hagen)
Date: Sun, 26 Jun 2016 15:24:11 +0200
Subject: [luatex] luatex - font encoding for type 1 fonts
In-Reply-To: <201606261325.11366@pali>
References: <201606092244.56067@pali> <201606252332.54183@pali>
 <5caf9bda-cbfe-a9db-09b1-57cb7f4d4c33@wxs.nl> <201606261325.11366@pali>
Message-ID: <16d1191c-524e-39c9-4be1-a1117061f48f@wxs.nl>

On 6/26/2016 1:25 PM, Pali Roh?r wrote:

> But I'm trying to point something else, that csr.enc file does not have
> to be specified.
>
> File csr.enc contains:
>
>   /il2Encoding [
>   /Gamma /Delta /Theta /Lambda /Xi /Pi /Sigma /Upsilon
>   ...
>   /quotedblbase /csquotedblright
>   ] def
>
> File csr10.pfb contains:
>
>   /FontName /csr10 def
>   /Encoding 256 array
>   0 1 255 {1 index exch /.notdef put} for
>   dup 0 /Gamma put
>   dup 1 /Delta put
>   dup 2 /Theta put
>   dup 3 /Lambda put
>   dup 4 /Xi put
>   dup 5 /Pi put
>   dup 6 /Sigma put
>   dup 7 /Upsilon put
>   ...
>   dup 254 /quotedblbase put
>   dup 255 /csquotedblright put
>   readonly def
>   ...
>   2 index /CharStrings 183 dict dup begin
>   /Xi {
>   ...
>   }
>   /dotlessi {
>   ...
>   }
>   /oslash {
>   ...
>   }
>   ...
>
> So glyphs are really in random order in csr10.pfb file (first is /Xi,
> second /dotlessi, ...) but at beginning of csr10.pfb file is /Encoding
> table where is that mapping from index to glyph name. Same what is in
> csr.enc file.
>
> And I'm trying to tell you that in this case (when /Encoding array in
> pfb file is available), external *.enc is not needed to specify. Looks
> like that pdftex uses this /Encoding array.

the enc files shows what glyphs (by name) are in the tfm file and the 
vector in the pfb file tels what glyphs (by name) are in what slot .. 
these are different indexes and the name makes it possibel to go from 
the tex one to the pfb one

(for adobe standard encoding it in parallel but tex encodings are hardly 
standard)

> I think it could be useful if that your loader was able to understand
> command also when pfb file is not specified. It could try to load either
> pfb file (preferred) or fallback to PK/metafont.

the more hardcoded logic is in there, the harder it is to beat (i can 
impose some logic in context but want to stay away from intefreing in 
other macro packages logic)

> it has (internal/system pdftex.map) database of Type 1 fonts and

only system .. in luatex i never use map files

Hans


-----------------------------------------------------------------
                                           Hans Hagen | PRAGMA ADE
               Ridderstraat 27 | 8061 GH Hasselt | The Netherlands
       tel: 038 477 53 69 | www.pragma-ade.com | www.pragma-pod.nl
-----------------------------------------------------------------

From pali.rohar at gmail.com  Sun Jun 26 16:13:51 2016
From: pali.rohar at gmail.com (Pali =?utf-8?q?Roh=C3=A1r?=)
Date: Sun, 26 Jun 2016 16:13:51 +0200
Subject: [luatex] luatex - font encoding for type 1 fonts
In-Reply-To: <201606261325.11366@pali>
References: <201606092244.56067@pali>
 <5caf9bda-cbfe-a9db-09b1-57cb7f4d4c33@wxs.nl> <201606261325.11366@pali>
Message-ID: <201606261613.51693@pali>

On Sunday 26 June 2016 13:25:11 Pali Roh?r wrote:
>   dup 34 /quotedblright put
>   dup 92 /quotedblleft put
>   dup 254 /quotedblbase put
>   dup 255 /csquotedblright put

Hans, this remind me, how to print above characters with your font 
loader? In pdftex it is done by:

  \chardef\clqq=254\sfcode254=0
  \chardef\crqq=255\sfcode255=0
  \def\uv#1{\clqq#1\crqq}

  \chardef\elqq=92
  \chardef\erqq=34
  \def\qq#1{\elqq#1\erqq}

  \uv{text in czech quotes}
  \qq{text in english quotes}

In czech and slovak text is used different style of quoting and CSFonts 
are prepared for it. Right czech quote is very similar to left english 
quote and for these reasons lot of fonts have only one glyph for both 
right czech and left english (under name quotedblleft).

But CSFonts differs between two characters and have two very similar 
(but slightly different) glyphs. Left english quote is under name 
quotedblleft and right czech under csquotedblright.

Glyph name csquotedblright is custom non-standard and so it is not in 
any glyphtounicode mapping list. There is also no special Unicode 
character for it and U+201C should be used.

Now I'm thinking that luatex must have problem if there are two 
characters which needs to be mapped to U+201C...

But it should be enough if user is able to define own macro \uv to works 
correctly (no need to type unicoded quotes in input tex file). How to do 
that?

Also I think that your font loader could have problems with glyph name 
"csquotedblright" as it is not any standard one...

-- 
Pali Roh?r
pali.rohar at gmail.com
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 198 bytes
Desc: This is a digitally signed message part.
URL: <http://tug.org/pipermail/luatex/attachments/20160626/fb4559a0/attachment.bin>

From pali.rohar at gmail.com  Sun Jun 26 16:22:44 2016
From: pali.rohar at gmail.com (Pali =?utf-8?q?Roh=C3=A1r?=)
Date: Sun, 26 Jun 2016 16:22:44 +0200
Subject: [luatex] luatex - font encoding for type 1 fonts
In-Reply-To: <16d1191c-524e-39c9-4be1-a1117061f48f@wxs.nl>
References: <201606092244.56067@pali> <201606261325.11366@pali>
 <16d1191c-524e-39c9-4be1-a1117061f48f@wxs.nl>
Message-ID: <201606261622.44192@pali>

On Sunday 26 June 2016 15:24:11 Hans Hagen wrote:
> On 6/26/2016 1:25 PM, Pali Roh?r wrote:
> > But I'm trying to point something else, that csr.enc file does not
> > have to be specified.
> > 
> > File csr.enc contains:
> >   /il2Encoding [
> >   /Gamma /Delta /Theta /Lambda /Xi /Pi /Sigma /Upsilon
> >   ...
> >   /quotedblbase /csquotedblright
> >   ] def
> > 
> > File csr10.pfb contains:
> >   /FontName /csr10 def
> >   /Encoding 256 array
> >   0 1 255 {1 index exch /.notdef put} for
> >   dup 0 /Gamma put
> >   dup 1 /Delta put
> >   dup 2 /Theta put
> >   dup 3 /Lambda put
> >   dup 4 /Xi put
> >   dup 5 /Pi put
> >   dup 6 /Sigma put
> >   dup 7 /Upsilon put
> >   ...
> >   dup 254 /quotedblbase put
> >   dup 255 /csquotedblright put
> >   readonly def
> >   ...
> >   2 index /CharStrings 183 dict dup begin
> >   /Xi {
> >   ...
> >   }
> >   /dotlessi {
> >   ...
> >   }
> >   /oslash {
> >   ...
> >   }
> >   ...
> > 
> > So glyphs are really in random order in csr10.pfb file (first is
> > /Xi, second /dotlessi, ...) but at beginning of csr10.pfb file is
> > /Encoding table where is that mapping from index to glyph name.
> > Same what is in csr.enc file.
> > 
> > And I'm trying to tell you that in this case (when /Encoding array
> > in pfb file is available), external *.enc is not needed to
> > specify. Looks like that pdftex uses this /Encoding array.
> 
> the enc files shows what glyphs (by name) are in the tfm file and the
> vector in the pfb file tels what glyphs (by name) are in what slot ..
> these are different indexes and the name makes it possibel to go from
> the tex one to the pfb one
> 
> (for adobe standard encoding it in parallel but tex encodings are
> hardly standard)

So above /Encoding 256 array in PFB file can be different as encoding 
vector in ENC file? I thought that they should be same...

Anyway I tested pdftex and it does *not* use ENC file, encoding takes 
from /Encoding 256 array from PFB file. And Linux strace program proved 
that no enc file was opened during pdftex run.

So to mimic pdftex behaviour (and how CSFonts Type 1 are read/parsed) I 
would really propose to use /Encoding 256 array from PFB file when ENC 
file for font loader is not specified.

Meaning: Use ENC file if possible, but when user not specified it --> 
fallback to /Encoding array in PFB file.

> > I think it could be useful if that your loader was able to
> > understand command also when pfb file is not specified. It could
> > try to load either pfb file (preferred) or fallback to
> > PK/metafont.
> 
> the more hardcoded logic is in there, the harder it is to beat (i can
> impose some logic in context but want to stay away from intefreing in
> other macro packages logic)
> 
> > it has (internal/system pdftex.map) database of Type 1 fonts and
> 
> only system .. in luatex i never use map files

Ok, so luatex ignores any specified map files?

-- 
Pali Roh?r
pali.rohar at gmail.com
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 198 bytes
Desc: This is a digitally signed message part.
URL: <http://tug.org/pipermail/luatex/attachments/20160626/5a1fae01/attachment-0001.bin>

From pragma at wxs.nl  Sun Jun 26 16:29:14 2016
From: pragma at wxs.nl (Hans Hagen)
Date: Sun, 26 Jun 2016 16:29:14 +0200
Subject: [luatex] luatex - font encoding for type 1 fonts
In-Reply-To: <201606261613.51693@pali>
References: <201606092244.56067@pali>
 <5caf9bda-cbfe-a9db-09b1-57cb7f4d4c33@wxs.nl> <201606261325.11366@pali>
 <201606261613.51693@pali>
Message-ID: <4c155743-0fd8-a928-2d1f-651e776b652d@wxs.nl>

On 6/26/2016 4:13 PM, Pali Roh?r wrote:
> On Sunday 26 June 2016 13:25:11 Pali Roh?r wrote:
>>   dup 34 /quotedblright put
>>   dup 92 /quotedblleft put
>>   dup 254 /quotedblbase put
>>   dup 255 /csquotedblright put
>
> Hans, this remind me, how to print above characters with your font
> loader? In pdftex it is done by:
>
>   \chardef\clqq=254\sfcode254=0
>   \chardef\crqq=255\sfcode255=0
>   \def\uv#1{\clqq#1\crqq}
>
>   \chardef\elqq=92
>   \chardef\erqq=34
>   \def\qq#1{\elqq#1\erqq}
>
>   \uv{text in czech quotes}
>   \qq{text in english quotes}
>
> In czech and slovak text is used different style of quoting and CSFonts
> are prepared for it. Right czech quote is very similar to left english
> quote and for these reasons lot of fonts have only one glyph for both
> right czech and left english (under name quotedblleft).
>
> But CSFonts differs between two characters and have two very similar
> (but slightly different) glyphs. Left english quote is under name
> quotedblleft and right czech under csquotedblright.
>
> Glyph name csquotedblright is custom non-standard and so it is not in
> any glyphtounicode mapping list. There is also no special Unicode
> character for it and U+201C should be used.
>
> Now I'm thinking that luatex must have problem if there are two
> characters which needs to be mapped to U+201C...
>
> But it should be enough if user is able to define own macro \uv to works
> correctly (no need to type unicoded quotes in input tex file). How to do
> that?
>
> Also I think that your font loader could have problems with glyph name
> "csquotedblright" as it is not any standard one...

these become private unicodes :

fonts           > tfm loading > glyph 'althyphen' in font 'csr10' with 
encoding 'csr' gets unicode U+F0000
fonts           > tfm loading > glyph 'csquotedblright' in font 'csr10' 
with encoding 'csr' gets unicode U+F0001
fonts           > tfm loading > glyph 'polishlcross' in font 'csr10' 
with encoding 'csr' gets unicode U+F0002

so, you need to use

\chardef\crqq="F0001

-----------------------------------------------------------------
                                           Hans Hagen | PRAGMA ADE
               Ridderstraat 27 | 8061 GH Hasselt | The Netherlands
       tel: 038 477 53 69 | www.pragma-ade.com | www.pragma-pod.nl
-----------------------------------------------------------------

From pragma at wxs.nl  Sun Jun 26 16:32:47 2016
From: pragma at wxs.nl (Hans Hagen)
Date: Sun, 26 Jun 2016 16:32:47 +0200
Subject: [luatex] luatex - font encoding for type 1 fonts
In-Reply-To: <201606261622.44192@pali>
References: <201606092244.56067@pali> <201606261325.11366@pali>
 <16d1191c-524e-39c9-4be1-a1117061f48f@wxs.nl> <201606261622.44192@pali>
Message-ID: <d0f7e89c-2f6c-dbe9-8c31-e0a0d6e53764@wxs.nl>

On 6/26/2016 4:22 PM, Pali Roh?r wrote:

> So above /Encoding 256 array in PFB file can be different as encoding
> vector in ENC file? I thought that they should be same...

indeed

> Anyway I tested pdftex and it does *not* use ENC file, encoding takes
> from /Encoding 256 array from PFB file. And Linux strace program proved
> that no enc file was opened during pdftex run.

then you're lucky that they match

> So to mimic pdftex behaviour (and how CSFonts Type 1 are read/parsed) I
> would really propose to use /Encoding 256 array from PFB file when ENC
> file for font loader is not specified.

it makes no sense to have all kind of assumptions built in for this 
rather non standard set of cs fonts

> Meaning: Use ENC file if possible, but when user not specified it -->
> fallback to /Encoding array in PFB file.

can be done but as said keep in mind that it's non typical

>>> I think it could be useful if that your loader was able to
>>> understand command also when pfb file is not specified. It could
>>> try to load either pfb file (preferred) or fallback to
>>> PK/metafont.
>>
>> the more hardcoded logic is in there, the harder it is to beat (i can
>> impose some logic in context but want to stay away from intefreing in
>> other macro packages logic)
>>
>>> it has (internal/system pdftex.map) database of Type 1 fonts and
>>
>> only system .. in luatex i never use map files
>
> Ok, so luatex ignores any specified map files?

no, the fontloader does not use/pass that info when using outline fonts

Hans

-----------------------------------------------------------------
                                           Hans Hagen | PRAGMA ADE
               Ridderstraat 27 | 8061 GH Hasselt | The Netherlands
       tel: 038 477 53 69 | www.pragma-ade.com | www.pragma-pod.nl
-----------------------------------------------------------------

From pali.rohar at gmail.com  Sun Jun 26 16:59:53 2016
From: pali.rohar at gmail.com (Pali =?utf-8?q?Roh=C3=A1r?=)
Date: Sun, 26 Jun 2016 16:59:53 +0200
Subject: [luatex] luatex - font encoding for type 1 fonts
In-Reply-To: <4c155743-0fd8-a928-2d1f-651e776b652d@wxs.nl>
References: <201606092244.56067@pali> <201606261613.51693@pali>
 <4c155743-0fd8-a928-2d1f-651e776b652d@wxs.nl>
Message-ID: <201606261659.53098@pali>

On Sunday 26 June 2016 16:29:14 Hans Hagen wrote:
> On 6/26/2016 4:13 PM, Pali Roh?r wrote:
> > On Sunday 26 June 2016 13:25:11 Pali Roh?r wrote:
> >>   dup 34 /quotedblright put
> >>   dup 92 /quotedblleft put
> >>   dup 254 /quotedblbase put
> >>   dup 255 /csquotedblright put
> > 
> > Hans, this remind me, how to print above characters with your font
> > 
> > loader? In pdftex it is done by:
> >   \chardef\clqq=254\sfcode254=0
> >   \chardef\crqq=255\sfcode255=0
> >   \def\uv#1{\clqq#1\crqq}
> >   
> >   \chardef\elqq=92
> >   \chardef\erqq=34
> >   \def\qq#1{\elqq#1\erqq}
> >   
> >   \uv{text in czech quotes}
> >   \qq{text in english quotes}
> > 
> > In czech and slovak text is used different style of quoting and
> > CSFonts are prepared for it. Right czech quote is very similar to
> > left english quote and for these reasons lot of fonts have only
> > one glyph for both right czech and left english (under name
> > quotedblleft).
> > 
> > But CSFonts differs between two characters and have two very
> > similar (but slightly different) glyphs. Left english quote is
> > under name quotedblleft and right czech under csquotedblright.
> > 
> > Glyph name csquotedblright is custom non-standard and so it is not
> > in any glyphtounicode mapping list. There is also no special
> > Unicode character for it and U+201C should be used.
> > 
> > Now I'm thinking that luatex must have problem if there are two
> > characters which needs to be mapped to U+201C...
> > 
> > But it should be enough if user is able to define own macro \uv to
> > works correctly (no need to type unicoded quotes in input tex
> > file). How to do that?
> > 
> > Also I think that your font loader could have problems with glyph
> > name "csquotedblright" as it is not any standard one...
> 
> these become private unicodes :
> 
> fonts           > tfm loading > glyph 'althyphen' in font 'csr10'
> with encoding 'csr' gets unicode U+F0000
> fonts           > tfm loading > glyph 'csquotedblright' in font
> 'csr10' with encoding 'csr' gets unicode U+F0001
> fonts           > tfm loading > glyph 'polishlcross' in font 'csr10'
> with encoding 'csr' gets unicode U+F0002

How is generated order of these three characters? It guaranteed that 
character with glyph name "althyphen" is always U+F0000?

> so, you need to use
> 
> \chardef\crqq="F0001

Nice, thank you!

Maybe it would be better to access these characters also by glyph name, 
not only Unicode number...

And another question, it is possible that in generated PDF will be this 
character mapped to U+201C (only when selecting text in PDF reader)? In 
pdftex it can be achieved by:

  \pdfglyphtounicode{csquotedblright}{201C}
  \pdfgentounicode=1

which generate CMAP table where glyph name csquotedblright is mapped to 
U+201C. Btw, CMAP table allows to map move glyphs to same unicode 
characters...

-- 
Pali Roh?r
pali.rohar at gmail.com
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 198 bytes
Desc: This is a digitally signed message part.
URL: <http://tug.org/pipermail/luatex/attachments/20160626/f0f899bc/attachment-0001.bin>

From pali.rohar at gmail.com  Sun Jun 26 17:16:01 2016
From: pali.rohar at gmail.com (Pali =?utf-8?q?Roh=C3=A1r?=)
Date: Sun, 26 Jun 2016 17:16:01 +0200
Subject: [luatex] luatex - font encoding for type 1 fonts
In-Reply-To: <d0f7e89c-2f6c-dbe9-8c31-e0a0d6e53764@wxs.nl>
References: <201606092244.56067@pali> <201606261622.44192@pali>
 <d0f7e89c-2f6c-dbe9-8c31-e0a0d6e53764@wxs.nl>
Message-ID: <201606261716.01266@pali>

On Sunday 26 June 2016 16:32:47 Hans Hagen wrote:
> On 6/26/2016 4:22 PM, Pali Roh?r wrote:
> > So above /Encoding 256 array in PFB file can be different as
> > encoding vector in ENC file? I thought that they should be same...
> 
> indeed

So thank you for clarification.

> > Anyway I tested pdftex and it does *not* use ENC file, encoding
> > takes from /Encoding 256 array from PFB file. And Linux strace
> > program proved that no enc file was opened during pdftex run.
> 
> then you're lucky that they match

This is how pdftex uses it, so I think they were tested to work 
correctly with pdftex/tex (and not with another font software).

Apparently, some font styles of CSFonts have different mapping of glyph 
names as basic roman style csr. Looks like /Encoding 256 array is 
correct in all PFB files (only problem with Knuth's dollar-sterling 
joke).

But encoding ENC files (there are four in fonts/enc/dvips/cs/ on my 
TeXLive distribution) are not correct as I see at least 6 different 
encoding of CSFonts.

So currently for CSFonts it is better to *not* use csr.enc files...

I will report these problem to maintainer of CSFonts that enc files 
needs to be fixed, updated and added new missing...

> > So to mimic pdftex behaviour (and how CSFonts Type 1 are
> > read/parsed) I would really propose to use /Encoding 256 array
> > from PFB file when ENC file for font loader is not specified.
> 
> it makes no sense to have all kind of assumptions built in for this
> rather non standard set of cs fonts
> 
> > Meaning: Use ENC file if possible, but when user not specified it
> > --> fallback to /Encoding array in PFB file.
> 
> can be done but as said keep in mind that it's non typical

Ok.

> >>> I think it could be useful if that your loader was able to
> >>> understand command also when pfb file is not specified. It could
> >>> try to load either pfb file (preferred) or fallback to
> >>> PK/metafont.
> >> 
> >> the more hardcoded logic is in there, the harder it is to beat (i
> >> can impose some logic in context but want to stay away from
> >> intefreing in other macro packages logic)
> >> 
> >>> it has (internal/system pdftex.map) database of Type 1 fonts and
> >> 
> >> only system .. in luatex i never use map files
> > 
> > Ok, so luatex ignores any specified map files?
> 
> no, the fontloader does not use/pass that info when using outline
> fonts

Ok.

-- 
Pali Roh?r
pali.rohar at gmail.com
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 198 bytes
Desc: This is a digitally signed message part.
URL: <http://tug.org/pipermail/luatex/attachments/20160626/1917586b/attachment.bin>

From pragma at wxs.nl  Sun Jun 26 17:39:24 2016
From: pragma at wxs.nl (Hans Hagen)
Date: Sun, 26 Jun 2016 17:39:24 +0200
Subject: [luatex] luatex - font encoding for type 1 fonts
In-Reply-To: <201606261659.53098@pali>
References: <201606092244.56067@pali> <201606261613.51693@pali>
 <4c155743-0fd8-a928-2d1f-651e776b652d@wxs.nl> <201606261659.53098@pali>
Message-ID: <ec439d2d-df67-0bbd-4339-afb61d070d93@wxs.nl>

On 6/26/2016 4:59 PM, Pali Roh?r wrote:

> How is generated order of these three characters? It guaranteed that
> character with glyph name "althyphen" is always U+F0000?

in a consistent font yes

>> so, you need to use
>>
>> \chardef\crqq="F0001
>
> Nice, thank you!
>
> Maybe it would be better to access these characters also by glyph name,
> not only Unicode number...

sure, you can use helpers for that but that's beyong this thread as then 
we enter the area of how macro packages work and want to deal with is

> And another question, it is possible that in generated PDF will be this
> character mapped to U+201C (only when selecting text in PDF reader)? In
> pdftex it can be achieved by:
>
>   \pdfglyphtounicode{csquotedblright}{201C}
>   \pdfgentounicode=1
>
> which generate CMAP table where glyph name csquotedblright is mapped to
> U+201C. Btw, CMAP table allows to map move glyphs to same unicode
> characters...

hm, even more exceptions for one set of fonts ...

Hans

-----------------------------------------------------------------
                                           Hans Hagen | PRAGMA ADE
               Ridderstraat 27 | 8061 GH Hasselt | The Netherlands
       tel: 038 477 53 69 | www.pragma-ade.com | www.pragma-pod.nl
-----------------------------------------------------------------

From pragma at wxs.nl  Sun Jun 26 17:41:44 2016
From: pragma at wxs.nl (Hans Hagen)
Date: Sun, 26 Jun 2016 17:41:44 +0200
Subject: [luatex] luatex - font encoding for type 1 fonts
In-Reply-To: <201606261716.01266@pali>
References: <201606092244.56067@pali> <201606261622.44192@pali>
 <d0f7e89c-2f6c-dbe9-8c31-e0a0d6e53764@wxs.nl> <201606261716.01266@pali>
Message-ID: <5bad45b4-b90a-78ce-eca8-0e3399bd2907@wxs.nl>

On 6/26/2016 5:16 PM, Pali Roh?r wrote:

> Apparently, some font styles of CSFonts have different mapping of glyph
> names as basic roman style csr. Looks like /Encoding 256 array is
> correct in all PFB files (only problem with Knuth's dollar-sterling
> joke).

that order is still unrelated to the real order in the glyph table (in 
thebinary section)

> But encoding ENC files (there are four in fonts/enc/dvips/cs/ on my
> TeXLive distribution) are not correct as I see at least 6 different
> encoding of CSFonts.

well, the cs font set is a mess anyway as on ctan one can find versions 
with and without vf files but lucky me that's your mess

Hans

-----------------------------------------------------------------
                                           Hans Hagen | PRAGMA ADE
               Ridderstraat 27 | 8061 GH Hasselt | The Netherlands
       tel: 038 477 53 69 | www.pragma-ade.com | www.pragma-pod.nl
-----------------------------------------------------------------

From pali.rohar at gmail.com  Sun Jun 26 17:56:59 2016
From: pali.rohar at gmail.com (Pali =?utf-8?q?Roh=C3=A1r?=)
Date: Sun, 26 Jun 2016 17:56:59 +0200
Subject: [luatex] luatex - font encoding for type 1 fonts
In-Reply-To: <5bad45b4-b90a-78ce-eca8-0e3399bd2907@wxs.nl>
References: <201606092244.56067@pali> <201606261716.01266@pali>
 <5bad45b4-b90a-78ce-eca8-0e3399bd2907@wxs.nl>
Message-ID: <201606261756.59681@pali>

On Sunday 26 June 2016 17:41:44 Hans Hagen wrote:
> On 6/26/2016 5:16 PM, Pali Roh?r wrote:
> > Apparently, some font styles of CSFonts have different mapping of
> > glyph names as basic roman style csr. Looks like /Encoding 256
> > array is correct in all PFB files (only problem with Knuth's
> > dollar-sterling joke).
> 
> that order is still unrelated to the real order in the glyph table
> (in thebinary section)

Yes, order in that binary section (where are defined curves for glyphs) 
is unrelated. But mapping from TFM index to glyph name is in that 
/Encoding 256 array.

> > But encoding ENC files (there are four in fonts/enc/dvips/cs/ on my
> > TeXLive distribution) are not correct as I see at least 6 different
> > encoding of CSFonts.
> 
> well, the cs font set is a mess anyway as on ctan one can find
> versions with and without vf files but lucky me that's your mess

Mess on ctan?? Now I do not understand... On ctan is only one package of 
MetaFont sources of CSFonts [1] and for some subset of CSFonts there is 
package of Type 1 variants [2]. But package [2] depends on [1] (you 
cannot install [2] without [1]).

Or do you see some other CSFonts packages on ctan?

And about vf files for CSFonts, they are not needed at all. If they are 
present then it spares disk space of bitmaps PK fonts (as CSFonts are 
just extension to CMFonts which share MetaFont sources). See description 
in file: texmf/fonts/vf/public/cm2cs/README.

[1] - https://www.ctan.org/pkg/csfonts
[2] - https://www.ctan.org/pkg/csfonts-t1

-- 
Pali Roh?r
pali.rohar at gmail.com
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 198 bytes
Desc: This is a digitally signed message part.
URL: <http://tug.org/pipermail/luatex/attachments/20160626/80de02a6/attachment.bin>

From pragma at wxs.nl  Sun Jun 26 18:34:13 2016
From: pragma at wxs.nl (Hans Hagen)
Date: Sun, 26 Jun 2016 18:34:13 +0200
Subject: [luatex] luatex - font encoding for type 1 fonts
In-Reply-To: <201606261756.59681@pali>
References: <201606092244.56067@pali> <201606261716.01266@pali>
 <5bad45b4-b90a-78ce-eca8-0e3399bd2907@wxs.nl> <201606261756.59681@pali>
Message-ID: <84c92a8b-4831-bd43-9d57-64c24bf7e9e9@wxs.nl>

On 6/26/2016 5:56 PM, Pali Roh?r wrote:
> On Sunday 26 June 2016 17:41:44 Hans Hagen wrote:
>> On 6/26/2016 5:16 PM, Pali Roh?r wrote:
>>> Apparently, some font styles of CSFonts have different mapping of
>>> glyph names as basic roman style csr. Looks like /Encoding 256
>>> array is correct in all PFB files (only problem with Knuth's
>>> dollar-sterling joke).
>>
>> that order is still unrelated to the real order in the glyph table
>> (in thebinary section)
>
> Yes, order in that binary section (where are defined curves for glyphs)
> is unrelated. But mapping from TFM index to glyph name is in that
> /Encoding 256 array.
>
>>> But encoding ENC files (there are four in fonts/enc/dvips/cs/ on my
>>> TeXLive distribution) are not correct as I see at least 6 different
>>> encoding of CSFonts.
>>
>> well, the cs font set is a mess anyway as on ctan one can find
>> versions with and without vf files but lucky me that's your mess
>
> Mess on ctan?? Now I do not understand... On ctan is only one package of
> MetaFont sources of CSFonts [1] and for some subset of CSFonts there is
> package of Type 1 variants [2]. But package [2] depends on [1] (you
> cannot install [2] without [1]).
>
> Or do you see some other CSFonts packages on ctan?

the csfonts archive also has files cmr10.vf and such so it's asking for 
troubles in a non-isolated installation (and also a reason why i can 
only test with a few files in a local tempdir)

> And about vf files for CSFonts, they are not needed at all. If they are
> present then it spares disk space of bitmaps PK fonts (as CSFonts are
> just extension to CMFonts which share MetaFont sources). See description
> in file: texmf/fonts/vf/public/cm2cs/README.
>
> [1] - https://www.ctan.org/pkg/csfonts
> [2] - https://www.ctan.org/pkg/csfonts-t1

well, normally one can just unzip a package in the tree ... and asking 
from a user to selectively copy from an archive is bad

Hans

-----------------------------------------------------------------
                                           Hans Hagen | PRAGMA ADE
               Ridderstraat 27 | 8061 GH Hasselt | The Netherlands
       tel: 038 477 53 69 | www.pragma-ade.com | www.pragma-pod.nl
-----------------------------------------------------------------

From pragma at wxs.nl  Sun Jun 26 18:41:47 2016
From: pragma at wxs.nl (Hans Hagen)
Date: Sun, 26 Jun 2016 18:41:47 +0200
Subject: [luatex] luatex - font encoding for type 1 fonts
In-Reply-To: <201606261659.53098@pali>
References: <201606092244.56067@pali> <201606261613.51693@pali>
 <4c155743-0fd8-a928-2d1f-651e776b652d@wxs.nl> <201606261659.53098@pali>
Message-ID: <fb2790a9-c159-b62d-e6c8-e9d806a1f4ec@wxs.nl>

On 6/26/2016 4:59 PM, Pali Roh?r wrote:

> And another question, it is possible that in generated PDF will be this
> character mapped to U+201C (only when selecting text in PDF reader)? In
> pdftex it can be achieved by:
>
>   \pdfglyphtounicode{csquotedblright}{201C}
>   \pdfgentounicode=1
>
> which generate CMAP table where glyph name csquotedblright is mapped to
> U+201C. Btw, CMAP table allows to map move glyphs to same unicode
> characters...

tounicodes are automatically added and i don't like to add exceptions 
for fixing bad glyphs

the sole reason why this csquotedblright is there is to compensate for 
bad built-in-the-glyph kerning and as macros are used anyway to access 
them i'd do that in the macro, something

\def\fixeddblleft  {\kern-0.1em\quotedblleft }
\def\fixeddblright {\quotedblright\kern-0.1em}

after all, you use a quote wrapper already

Hans

-----------------------------------------------------------------
                                           Hans Hagen | PRAGMA ADE
               Ridderstraat 27 | 8061 GH Hasselt | The Netherlands
       tel: 038 477 53 69 | www.pragma-ade.com | www.pragma-pod.nl
-----------------------------------------------------------------

From pragma at wxs.nl  Sun Jun 26 18:45:09 2016
From: pragma at wxs.nl (Hans Hagen)
Date: Sun, 26 Jun 2016 18:45:09 +0200
Subject: [luatex] luatex - font encoding for type 1 fonts
In-Reply-To: <201606261756.59681@pali>
References: <201606092244.56067@pali> <201606261716.01266@pali>
 <5bad45b4-b90a-78ce-eca8-0e3399bd2907@wxs.nl> <201606261756.59681@pali>
Message-ID: <f8d3fa62-a749-166e-6163-5843a12b55f4@wxs.nl>

On 6/26/2016 5:56 PM, Pali Roh?r wrote:
> ....

In the end this is what you get:

\font\foo=file:csr10.tfm:reencode=csr
\font\foo=file:csr10.tfm:reencode=csr;bitmap=yes % use map file
\font\foo=file:csr10.tfm:reencode=auto

\foo ?????????????????? ff ffi \input tufte\par

The rest is up to you i.e. handling non standard unicode chars via macros.

Hans


-----------------------------------------------------------------
                                           Hans Hagen | PRAGMA ADE
               Ridderstraat 27 | 8061 GH Hasselt | The Netherlands
       tel: 038 477 53 69 | www.pragma-ade.com | www.pragma-pod.nl
-----------------------------------------------------------------

From reinhard.kotucha at web.de  Mon Jun 27 22:21:13 2016
From: reinhard.kotucha at web.de (Reinhard Kotucha)
Date: Mon, 27 Jun 2016 22:21:13 +0200
Subject: [luatex] luatex - font encoding for type 1 fonts
In-Reply-To: <201606261756.59681@pali>
References: <201606092244.56067@pali>	<201606261716.01266@pali>
 <5bad45b4-b90a-78ce-eca8-0e3399bd2907@wxs.nl>	<201606261756.59681@pali>
Message-ID: <22385.35513.670606.115593@zaphod.ms25.net>

On 2016-06-26 at 17:56:59 +0200, Pali Roh?r wrote:

 > On Sunday 26 June 2016 17:41:44 Hans Hagen wrote:
 > > On 6/26/2016 5:16 PM, Pali Roh?r wrote:
 > > > Apparently, some font styles of CSFonts have different mapping of
 > > > glyph names as basic roman style csr. Looks like /Encoding 256
 > > > array is correct in all PFB files (only problem with Knuth's
 > > > dollar-sterling joke).
 > > 
 > > that order is still unrelated to the real order in the glyph table
 > > (in thebinary section)
 > 
 > Yes, order in that binary section (where are defined curves for glyphs) 
 > is unrelated. But mapping from TFM index to glyph name is in that 
 > /Encoding 256 array.

Not necessarily!  If the TFM file requires another encoding, you
definitely have to re-encode the font.  In this case the built-in
/Encoding isn't used.

A common case to have several encodings for one font is that a font
can have more than 256 glyphs.  In order to access all of them you
need a .tfm and a .enc file for each subset.

However, the csfonts don't need to be re-encoded and actually are not.
Consult the file csfonts.map.

  $ less `kpsewhich csfonts.map`

Regards,
  Reinhard

-- 
------------------------------------------------------------------
Reinhard Kotucha                            Phone: +49-511-3373112
Marschnerstr. 25
D-30167 Hannover                    mailto:reinhard.kotucha at web.de
------------------------------------------------------------------


From pali.rohar at gmail.com  Wed Jun 29 11:17:54 2016
From: pali.rohar at gmail.com (Pali =?utf-8?B?Um9ow6Fy?=)
Date: Wed, 29 Jun 2016 11:17:54 +0200
Subject: [luatex] luatex - font encoding for type 1 fonts
In-Reply-To: <fb2790a9-c159-b62d-e6c8-e9d806a1f4ec@wxs.nl>
References: <201606092244.56067@pali> <201606261613.51693@pali>
 <4c155743-0fd8-a928-2d1f-651e776b652d@wxs.nl> <201606261659.53098@pali>
 <fb2790a9-c159-b62d-e6c8-e9d806a1f4ec@wxs.nl>
Message-ID: <20160629091754.GB29844@pali>

On Sunday 26 June 2016 18:41:47 Hans Hagen wrote:
> On 6/26/2016 4:59 PM, Pali Roh?r wrote:
> 
> >And another question, it is possible that in generated PDF will be this
> >character mapped to U+201C (only when selecting text in PDF reader)? In
> >pdftex it can be achieved by:
> >
> >  \pdfglyphtounicode{csquotedblright}{201C}
> >  \pdfgentounicode=1
> >
> >which generate CMAP table where glyph name csquotedblright is mapped to
> >U+201C. Btw, CMAP table allows to map move glyphs to same unicode
> >characters...
> 
> tounicodes are automatically added and i don't like to add exceptions for
> fixing bad glyphs

Does it mean that \pdfglyphtounicode is not supported?

-- 
Pali Roh?r
pali.rohar at gmail.com

From pali.rohar at gmail.com  Wed Jun 29 11:29:30 2016
From: pali.rohar at gmail.com (Pali =?utf-8?B?Um9ow6Fy?=)
Date: Wed, 29 Jun 2016 11:29:30 +0200
Subject: [luatex] luatex - font encoding for type 1 fonts
In-Reply-To: <ec439d2d-df67-0bbd-4339-afb61d070d93@wxs.nl>
References: <201606092244.56067@pali> <201606261613.51693@pali>
 <4c155743-0fd8-a928-2d1f-651e776b652d@wxs.nl> <201606261659.53098@pali>
 <ec439d2d-df67-0bbd-4339-afb61d070d93@wxs.nl>
Message-ID: <20160629092930.GC29844@pali>

On Sunday 26 June 2016 17:39:24 Hans Hagen wrote:
> On 6/26/2016 4:59 PM, Pali Roh?r wrote:
> 
> >How is generated order of these three characters? It guaranteed that
> >character with glyph name "althyphen" is always U+F0000?
> 
> in a consistent font yes
> 
> >>so, you need to use
> >>
> >>\chardef\crqq="F0001
> >
> >Nice, thank you!
> >
> >Maybe it would be better to access these characters also by glyph name,
> >not only Unicode number...
> 
> sure, you can use helpers for that but that's beyong this thread as then we
> enter the area of how macro packages work and want to deal with is

So can you send me link or show how to write macro which allows me to
print character defined by font glyph name?

-- 
Pali Roh?r
pali.rohar at gmail.com

From pragma at wxs.nl  Wed Jun 29 14:10:08 2016
From: pragma at wxs.nl (Hans Hagen)
Date: Wed, 29 Jun 2016 14:10:08 +0200
Subject: [luatex] luatex - font encoding for type 1 fonts
In-Reply-To: <20160629091754.GB29844@pali>
References: <201606092244.56067@pali> <201606261613.51693@pali>
 <4c155743-0fd8-a928-2d1f-651e776b652d@wxs.nl> <201606261659.53098@pali>
 <fb2790a9-c159-b62d-e6c8-e9d806a1f4ec@wxs.nl> <20160629091754.GB29844@pali>
Message-ID: <9f16f367-2157-ee56-016b-5acb24d97381@wxs.nl>

On 6/29/2016 11:17 AM, Pali Roh?r wrote:
> On Sunday 26 June 2016 18:41:47 Hans Hagen wrote:
>> On 6/26/2016 4:59 PM, Pali Roh?r wrote:
>>
>>> And another question, it is possible that in generated PDF will be this
>>> character mapped to U+201C (only when selecting text in PDF reader)? In
>>> pdftex it can be achieved by:
>>>
>>>  \pdfglyphtounicode{csquotedblright}{201C}
>>>  \pdfgentounicode=1
>>>
>>> which generate CMAP table where glyph name csquotedblright is mapped to
>>> U+201C. Btw, CMAP table allows to map move glyphs to same unicode
>>> characters...
>>
>> tounicodes are automatically added and i don't like to add exceptions for
>> fixing bad glyphs
>
> Does it mean that \pdfglyphtounicode is not supported?

only for traditional (non cid encoded) fonts but the lua based loader 
uses wide fonts where we can pass tounicode entries (given that the font 
has info about the replacements or alternatives or whatever of course)

(in an opentype situation that alternative patched quote could be a 
language specific alternate in which case it's unicode would be known)

Hans

-----------------------------------------------------------------
                                           Hans Hagen | PRAGMA ADE
               Ridderstraat 27 | 8061 GH Hasselt | The Netherlands
       tel: 038 477 53 69 | www.pragma-ade.com | www.pragma-pod.nl
-----------------------------------------------------------------

