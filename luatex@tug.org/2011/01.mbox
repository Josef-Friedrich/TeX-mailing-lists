From jason.t.stein at gmail.com  Sat Jan  1 03:11:37 2011
From: jason.t.stein at gmail.com (Jason Stein)
Date: Fri, 31 Dec 2010 20:11:37 -0600
Subject: [luatex] Using conditionals with luamplib
Message-ID: <AANLkTi=c+U8vo=q3EfZ=CO6PdA880qgZnpyF8F_KEiKq@mail.gmail.com>

I am trying my hand at Metapost using luamplib. Any time that I try to
include a metapost conditional I get the error?! Undefined control
sequence. I have no idea what I am doing incorrectly. Below is a
minimal example. It compiles fine without the if .. fi statement.

\documentclass[letterpaper]{article}
\usepackage{luatextra}
\usepackage{luamplib}
\begin{document}
This is a test.
\begin{mplibcode}
beginfig(1);
numeric ux, uy, r;
ux = 1in; uy = s*1in;
s = uniformdeviate(2);
r = uniformdeviate(360);
if (r<90):
  label("Acute",(0,0));
else:
  label("Obtuse",(0,0));
fi;
pair A, B, C;
A = (0,0) rotated r; B = (1ux, 0) rotated r; C = (0, 1uy) rotated r;
path triangle;
triangle = A--B--C--cycle;
draw triangle;
label("A",A);
label("B",B);
label("C",C);
boolean q;
q:= true;
endfig;
\end{mplibcode}
\end{document}

Being new to Metapost, I may be doing the conditionals incorrectly,
but it is hard to find examples on the Internet. The log file is
attached.

Jason T. Stein, B. Sc. (1998), B. Ed. (2002)
-------------- next part --------------
A non-text attachment was scrubbed...
Name: metapost_test.log
Type: application/octet-stream
Size: 30246 bytes
Desc: not available
URL: <http://tug.org/pipermail/luatex/attachments/20101231/838a37af/attachment-0001.obj>

From site4000 at free.fr  Sun Jan  2 19:38:21 2011
From: site4000 at free.fr (site4000 at free.fr)
Date: Sun, 02 Jan 2011 19:38:21 +0100
Subject: [luatex] The LuaTeXbook
Message-ID: <4D20C61D.1000302@free.fr>

Hello,

If I want to be a high level user/wizard/professional of TeX, I can buy 
the TeXbook and learn everything in it and experiment a lot. Here is a 
very interesting but heavy work to do.
If I want to be a high level user of PDFTeX, I'll have to be a wizard of 
TeX and a professional of eTeX : Very heavy work
If I want to be a high level user of LuaTeX, I'll have to be a wizard of 
PDFTeX, Lua, Omega, Aleph,... : Very very heavy work.

So if I want to be a high level user of LuaTeX, I have to learn 
everything about the thirty years old TeX history.

When LuaTeX will stable enough (LuaTeX v2.0 ???), is it on the roadmap 
to write a "LuaTeXbook" just
like D.E. Knuth did in 1983 ? The idea would be to explain completely 
the functionalities of LuaTeX as if nothing had never existed before, it 
would be the opportunity to
give users a new start in the world of TeX who allows to understand this 
programming langage (LuaTeX, not TeX) without having to look for all 
pieces of the puzzle.
Of course, this "LuaTeXbook" would deal with Lua (and why not lua 
libraries, fontforge...) but we must bear in mind that the TeX aspect 
matters most.

This book would be a very heavy project but it would be a very useful tool.




Arthur


From st_philipp at yahoo.de  Sun Jan  2 21:18:29 2011
From: st_philipp at yahoo.de (Philipp Stephani)
Date: Sun, 2 Jan 2011 21:18:29 +0100
Subject: [luatex] The LuaTeXbook
In-Reply-To: <4D20C61D.1000302@free.fr>
References: <4D20C61D.1000302@free.fr>
Message-ID: <EF6CB0AC-2E37-4613-BB0C-2A6DEB2096BA@yahoo.de>

Am 02.01.2011 um 19:38 schrieb site4000 at free.fr:

> Hello,
> 
> If I want to be a high level user/wizard/professional of TeX, I can buy the TeXbook and learn everything in it and experiment a lot. Here is a very interesting but heavy work to do.
> If I want to be a high level user of PDFTeX, I'll have to be a wizard of TeX and a professional of eTeX : Very heavy work
> If I want to be a high level user of LuaTeX, I'll have to be a wizard of PDFTeX, Lua, Omega, Aleph,... : Very very heavy work.
> 
> So if I want to be a high level user of LuaTeX, I have to learn everything about the thirty years old TeX history.
> 
> When LuaTeX will stable enough (LuaTeX v2.0 ???), is it on the roadmap to write a "LuaTeXbook" just
> like D.E. Knuth did in 1983 ? The idea would be to explain completely the functionalities of LuaTeX as if nothing had never existed before, it would be the opportunity to
> give users a new start in the world of TeX who allows to understand this programming langage (LuaTeX, not TeX) without having to look for all pieces of the puzzle.
> Of course, this "LuaTeXbook" would deal with Lua (and why not lua libraries, fontforge...) but we must bear in mind that the TeX aspect matters most.
> 
> This book would be a very heavy project but it would be a very useful tool.

Such an project would indeed be desirable, but, as you already said, it would be lots of work. For now, I think you can get very far with a bit less heavy work:
1. TeX: The TeXbook was written for users of plain TeX, or for those that want to understand every detail. For TeX programming knowledge, TeX by Topic is more than sufficient, and very well and succinctly written. Even in this book, you don't have to read every detail; for starting, the chapters 1?4, 6?8, 10?13, 32, 33, 36 should suffice.
2. eTeX: The manual is not that long, and many sections can be skipped. I think the most important sections are 3.3, 3.5, 3.7, 3.12, 5.
3. pdfTeX: Again, most parts of the manual are not totally relevant for programming. Sections 7.3, 7.4, 7.15, 7.16, 7.21 seem to be the most important at first sight.
4. Lua: Lots of good material is available, most notably Roberto Ierusalimschy's book Programming in Lua and the Lua reference.
5. XeTeX: should not be required, but the unofficial reference is sometimes a bit more detailed than the LuaTeX manual.
6. After that, you should be able to read the LuaTeX manual without problems.

From Arno.Trautmann at gmx.de  Sun Jan  2 22:15:11 2011
From: Arno.Trautmann at gmx.de (Arno Trautmann)
Date: Sun, 02 Jan 2011 22:15:11 +0100
Subject: [luatex] inserting elements after line break
Message-ID: <4D20EADF.2090905@gmx.de>

Hi all,

I thought this would be a quite easy task with luaTeX, but I didn't
manage to do it:
I want to insert something (say, a rule) after a paragraph has been
broken. So my first attempt was to register a function to
post_linebreak_filter, but if I try to tex.print() something in that
function it just doesn't do anything. (writing to console works, so I'm
sure it is registered and is called)
So the question is: Is it possible to insert anything printable right
after a paragraph has been broken? If so, how? That material should have
no width and height; it should not affect the text at all.
(In the end, I want to draw a fine rule under each line in that paragraph.)

Thankful for every hint,
Arno

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 262 bytes
Desc: OpenPGP digital signature
URL: <http://tug.org/pipermail/luatex/attachments/20110102/dc468be9/attachment.bin>

From khaledhosny at eglug.org  Sun Jan  2 22:50:34 2011
From: khaledhosny at eglug.org (Khaled Hosny)
Date: Sun, 2 Jan 2011 23:50:34 +0200
Subject: [luatex] inserting elements after line break
In-Reply-To: <4D20EADF.2090905@gmx.de>
References: <4D20EADF.2090905@gmx.de>
Message-ID: <20110102215034.GA4105@khaled-laptop>

On Sun, Jan 02, 2011 at 10:15:11PM +0100, Arno Trautmann wrote:
> Hi all,
> 
> I thought this would be a quite easy task with luaTeX, but I didn't
> manage to do it:
> I want to insert something (say, a rule) after a paragraph has been
> broken. So my first attempt was to register a function to
> post_linebreak_filter, but if I try to tex.print() something in that
> function it just doesn't do anything.

By that stage tex has already processed its input and converted it to
node list, so you have to insert nodes here not tex input.

Regards,
 Khaled

-- 
 Khaled Hosny
 Arabic localiser and member of Arabeyes.org team
 Free font developer


From site4000 at free.fr  Sun Jan  2 22:51:06 2011
From: site4000 at free.fr (site4000 at free.fr)
Date: Sun, 02 Jan 2011 22:51:06 +0100
Subject: [luatex] The LuaTeXbook
In-Reply-To: <EF6CB0AC-2E37-4613-BB0C-2A6DEB2096BA@yahoo.de>
References: <4D20C61D.1000302@free.fr>
 <EF6CB0AC-2E37-4613-BB0C-2A6DEB2096BA@yahoo.de>
Message-ID: <4D20F34A.8050106@free.fr>

Le 02/01/2011 21:18, Philipp Stephani a ?crit :
> Am 02.01.2011 um 19:38 schrieb site4000 at free.fr:
>
>> Hello,
>>
>> If I want to be a high level user/wizard/professional of TeX, I can buy the TeXbook and learn everything in it and experiment a lot. Here is a very interesting but heavy work to do.
>> If I want to be a high level user of PDFTeX, I'll have to be a wizard of TeX and a professional of eTeX : Very heavy work
>> If I want to be a high level user of LuaTeX, I'll have to be a wizard of PDFTeX, Lua, Omega, Aleph,... : Very very heavy work.
>>
>> So if I want to be a high level user of LuaTeX, I have to learn everything about the thirty years old TeX history.
>>
>> When LuaTeX will stable enough (LuaTeX v2.0 ???), is it on the roadmap to write a "LuaTeXbook" just
>> like D.E. Knuth did in 1983 ? The idea would be to explain completely the functionalities of LuaTeX as if nothing had never existed before, it would be the opportunity to
>> give users a new start in the world of TeX who allows to understand this programming langage (LuaTeX, not TeX) without having to look for all pieces of the puzzle.
>> Of course, this "LuaTeXbook" would deal with Lua (and why not lua libraries, fontforge...) but we must bear in mind that the TeX aspect matters most.
>>
>> This book would be a very heavy project but it would be a very useful tool.
> Such an project would indeed be desirable, but, as you already said, it would be lots of work. For now, I think you can get very far with a bit less heavy work:
> 1. TeX: The TeXbook was written for users of plain TeX, or for those that want to understand every detail. For TeX programming knowledge, TeX by Topic is more than sufficient, and very well and succinctly written. Even in this book, you don't have to read every detail; for starting, the chapters 1?4, 6?8, 10?13, 32, 33, 36 should suffice.
> 2. eTeX: The manual is not that long, and many sections can be skipped. I think the most important sections are 3.3, 3.5, 3.7, 3.12, 5.
> 3. pdfTeX: Again, most parts of the manual are not totally relevant for programming. Sections 7.3, 7.4, 7.15, 7.16, 7.21 seem to be the most important at first sight.
> 4. Lua: Lots of good material is available, most notably Roberto Ierusalimschy's book Programming in Lua and the Lua reference.
> 5. XeTeX: should not be required, but the unofficial reference is sometimes a bit more detailed than the LuaTeX manual.
> 6. After that, you should be able to read the LuaTeX manual without problems.
Hello Philipp, thanks for answering.

-The program you propose is maybe a good way to learn deeply LuaTeX but 
you found this program because you have already read all the stuff about 
TeX and successors but what about newcommers ? They don't know what to 
read and they don't know what to read first. Moreover, the program you 
propose is rather personnal (you can read this, you can skip that) and 
it is not sure that it would be convenient for anyone.
-Nothing about Aleph ?








From mfisher_ix at maine.rr.com  Sun Jan  2 22:53:59 2011
From: mfisher_ix at maine.rr.com (Matthew J. Fisher)
Date: Sun, 02 Jan 2011 16:53:59 -0500
Subject: [luatex] The LuaTeXbook
In-Reply-To: <4D20C61D.1000302@free.fr>
References: <4D20C61D.1000302@free.fr>
Message-ID: <1294005239.7758.62.camel@gns>

Hello Arthur,

At a minimum, a LuaTex wizard would need to know both Lua and TeX. 

I am no wizard. What makes me happy for now is to study TeX from the
TeXBook, while using LuaTex's plain TeX format. This gains me easy
access to several major extensions to TeX (e.g., support for OpenType
font features, unicode input, and hyphenation of accented languages).

 - Matt

s?n 2011-01-02 klockan 19:38 +0100 skrev site4000 at free.fr:
> Hello,
> 
> If I want to be a high level user/wizard/professional of TeX, I can buy 
> the TeXbook and learn everything in it and experiment a lot. Here is a 
> very interesting but heavy work to do.

[etc.]


From luigi.scarso at gmail.com  Sun Jan  2 23:26:11 2011
From: luigi.scarso at gmail.com (luigi scarso)
Date: Sun, 2 Jan 2011 23:26:11 +0100
Subject: [luatex] The LuaTeXbook
In-Reply-To: <4D20F34A.8050106@free.fr>
References: <4D20C61D.1000302@free.fr>
 <EF6CB0AC-2E37-4613-BB0C-2A6DEB2096BA@yahoo.de>
 <4D20F34A.8050106@free.fr>
Message-ID: <AANLkTinqFX7vg3hZJ1hOXUDwOGb0XTBXNOtESX_3Vfnq@mail.gmail.com>

On Sun, Jan 2, 2011 at 10:51 PM,  <site4000 at free.fr> wrote:
>
> -The program you propose is maybe a good way to learn deeply LuaTeX but you
> found this program because you have already read all the stuff about TeX and
> successors but what about newcommers ? They don't know what to read and they
> don't know what to read first. Moreover, the program you propose is rather
> personnal (you can read this, you can skip that) and it is not sure that it
> would be convenient for anyone.
The list is complete (perhaps 5) is not necessary) and the item's
order is correct
(for beginners as for experienced users)

> -Nothing about Aleph ?
FWIK Aleph is not  developed any more.
G. Bilotta knows  luatex (he was at the context meeting in 2008  see
http://meeting.contextgarden.net/2008/impressions.shtml )
and I believe that he consider LuaTex as Aleph's successor.

-- 
luigi

From zappathustra at free.fr  Mon Jan  3 00:11:22 2011
From: zappathustra at free.fr (Paul Isambert)
Date: Mon, 03 Jan 2011 00:11:22 +0100
Subject: [luatex] inserting elements after line break
In-Reply-To: <20110102215034.GA4105@khaled-laptop>
References: <4D20EADF.2090905@gmx.de> <20110102215034.GA4105@khaled-laptop>
Message-ID: <1294009882.4d21061a587f2@imp.free.fr>

Selon Khaled Hosny <khaledhosny at eglug.org>:

> On Sun, Jan 02, 2011 at 10:15:11PM +0100, Arno Trautmann wrote:
> > Hi all,
> >
> > I thought this would be a quite easy task with luaTeX, but I didn't
> > manage to do it:
> > I want to insert something (say, a rule) after a paragraph has been
> > broken. So my first attempt was to register a function to
> > post_linebreak_filter, but if I try to tex.print() something in that
> > function it just doesn't do anything.
>
> By that stage tex has already processed its input and converted it to
> node list, so you have to insert nodes here not tex input.



Plus, quoting the manual (p.108) about tex.print() and friends:

"The result of using these functions from inside callbacks is undefined at the
moment."

Indeed you must add nodes, not input. A rule is easy enough, but for text you
have to think you're TeX and build a function that turns a string into a list of
nodes (that doesn't exist out of the box). See here for a starter:

http://tug.org/pipermail/luatex/2010-November/002239.html

(Note that I made an error in my code, see Taco's message.)

Best,
Paul

From mpg at elzevir.fr  Mon Jan  3 01:27:23 2011
From: mpg at elzevir.fr (=?windows-1252?Q?Manuel_P=E9gouri=E9-Gonnard?=)
Date: Mon, 03 Jan 2011 01:27:23 +0100
Subject: [luatex] The LuaTeXbook
In-Reply-To: <4D20F34A.8050106@free.fr>
References: <4D20C61D.1000302@free.fr>
 <EF6CB0AC-2E37-4613-BB0C-2A6DEB2096BA@yahoo.de> <4D20F34A.8050106@free.fr>
Message-ID: <4D2117EB.7000502@elzevir.fr>

Le 02/01/2011 22:51, site4000 at free.fr a ?crit :
> Le 02/01/2011 21:18, Philipp Stephani a ?crit :
>> 1. TeX: The TeXbook was written for users of plain TeX, or for those that want to understand every detail. For TeX programming knowledge, TeX by Topic is more than sufficient, and very well and succinctly written. Even in this book, you don't have to read every detail; for starting, the chapters 1?4, 6?8, 10?13, 32, 33, 36 should suffice.
>> 2. eTeX: The manual is not that long, and many sections can be skipped. I think the most important sections are 3.3, 3.5, 3.7, 3.12, 5.
>> 3. pdfTeX: Again, most parts of the manual are not totally relevant for programming. Sections 7.3, 7.4, 7.15, 7.16, 7.21 seem to be the most important at first sight.
>> 4. Lua: Lots of good material is available, most notably Roberto Ierusalimschy's book Programming in Lua and the Lua reference.
>> 5. XeTeX: should not be required, but the unofficial reference is sometimes a bit more detailed than the LuaTeX manual.
>> 6. After that, you should be able to read the LuaTeX manual without problems.
>
> -The program you propose is maybe a good way to learn deeply LuaTeX but 
> you found this program because you have already read all the stuff about 
> TeX and successors but what about newcommers ? They don't know what to 
> read and they don't know what to read first.

That's what mailing list, newsgroups, faq, and search engines are for. Now they
can find Philipp's message in the archives and/or ask another experienced user
by whatever mean, and get a similar list.

> Moreover, the program you 
> propose is rather personnal (you can read this, you can skip that) and 
> it is not sure that it would be convenient for anyone.

For what it's worth, I fully agree with Philipp's list, so it's probably not
that personal.

Manuel.

From reinhard.kotucha at web.de  Mon Jan  3 02:11:12 2011
From: reinhard.kotucha at web.de (Reinhard Kotucha)
Date: Mon, 3 Jan 2011 02:11:12 +0100
Subject: [luatex] The LuaTeXbook
In-Reply-To: <4D20F34A.8050106@free.fr>
References: <4D20C61D.1000302@free.fr>
 <EF6CB0AC-2E37-4613-BB0C-2A6DEB2096BA@yahoo.de>
 <4D20F34A.8050106@free.fr>
Message-ID: <19745.8752.989553.208181@zaphod.ms25.net>

On 2 January 2011 site4000 at free.fr wrote:

 > -The program you propose is maybe a good way to learn deeply LuaTeX
 > but you found this program because you have already read all the
 > stuff about TeX and successors but what about newcommers ? They
 > don't know what to read and they don't know what to read first.

Hi,
do I understand you correctly?  You propose a book which describes
TeX's ugly macro language in detail, the primitives added by pdftex,
Omega/Aleph, and e-TeX, as well as Lua and LuaTeX (including TeX's
internal data structures which are made accessible by LuaTeX), and
then you ask "what about newcomers?".

I assume that with "newcomers" you mean new programmers, not users.
But nobody is interested in a book describing all the details.  The
world is too complex now and LuaTeX is a moving target.  I don't see
any reason to explain Knuth's plain TeX macros again.  From the
viewpoint of macro packages, like ConTeXt, most of Knuth's macros can
be replaced by Lua code.  And I'm conviced that this will be done soon.

About 25 years ago, Helmut Kopka wrote books about LaTeX (3 volumes).
These books described LaTeX-2.09 in detail.  But how many volumes do
we need today?  There are many .sty files which come with more than
600 pages of documentation each.  It's not feasible anymore to provide
a book which explains everything you can do with LaTeX today.  Such a
book would have more than 10,000 pages.

Regarding LuaTeX, I don't think that a book makes sense in the near
future.  A LuaTeX Wiki is more useful.

And regarding "The TeXbook": Who, on earth, wants to read Appendix D
in order to write a braindead macro which just typesets an asterisk
n-times, while at the same time LuaTeX provides a function
string.rep(), which is so much easier to use.

I fear that a book explaining everything is useless.  Especially
because it would be too large, and out-of-date when it's released.

Regards,
  Reinhard

-- 
----------------------------------------------------------------------------
Reinhard Kotucha                                      Phone: +49-511-3373112
Marschnerstr. 25
D-30167 Hannover                              mailto:reinhard.kotucha at web.de
----------------------------------------------------------------------------
Microsoft isn't the answer. Microsoft is the question, and the answer is NO.
----------------------------------------------------------------------------

From luigi.scarso at gmail.com  Mon Jan  3 02:19:43 2011
From: luigi.scarso at gmail.com (luigi scarso)
Date: Mon, 3 Jan 2011 02:19:43 +0100
Subject: [luatex] The LuaTeXbook
In-Reply-To: <19745.8752.989553.208181@zaphod.ms25.net>
References: <4D20C61D.1000302@free.fr>
 <EF6CB0AC-2E37-4613-BB0C-2A6DEB2096BA@yahoo.de>
 <4D20F34A.8050106@free.fr>
 <19745.8752.989553.208181@zaphod.ms25.net>
Message-ID: <AANLkTi=_Wsiu3y1vPiiYWgDOQ4K--mLQud61ftvA8UKD@mail.gmail.com>

On Mon, Jan 3, 2011 at 2:11 AM, Reinhard Kotucha
<reinhard.kotucha at web.de> wrote:
>
> Regarding LuaTeX, I don't think that a book makes sense in the near
> future. ?A LuaTeX Wiki is more useful.
The official luatex wiki is
wiki.luatex.org

Concerning a book, LuaTeX by Topic could be interesting
(to read and to write).
-- 
luigi


From taco at elvenkind.com  Mon Jan  3 11:17:47 2011
From: taco at elvenkind.com (Taco Hoekwater)
Date: Mon, 03 Jan 2011 11:17:47 +0100
Subject: [luatex] The LuaTeXbook
In-Reply-To: <4D2117EB.7000502@elzevir.fr>
References: <4D20C61D.1000302@free.fr>
 <EF6CB0AC-2E37-4613-BB0C-2A6DEB2096BA@yahoo.de> <4D20F34A.8050106@free.fr>
 <4D2117EB.7000502@elzevir.fr>
Message-ID: <4D21A24B.4080409@elvenkind.com>

On 01/03/2011 01:27 AM, Manuel P?gouri?-Gonnard wrote:
>> Moreover, the program you
>> propose is rather personnal (you can read this, you can skip that) and
>> it is not sure that it would be convenient for anyone.
>
> For what it's worth, I fully agree with Philipp's list, so it's probably not
> that personal.

And Philipp's list is what would have been my proposed list as well,
so I think he was dead on.

--

Now, about the original question: writing a 'luatexbook' is a near
impossible task. There is simply too much going on in luatex to put it
all in a single be-all and end-all of luatex programming book.

One of the problems is that tex.web is about 25k lines (and many of
those are comments). luatex's source code adds up to about 150k lines
(also with comments, but that figure is excluding the libs/ directory
and the fontforge sources. Everything that is compiled added together
is about half a million lines).

But a more serious problem is that the TeXbook describes a finished
program. Luatex is not like that (and will not be for a significant
number of years). The detail level that is presented by the TeXbook
is only possible because it describes a fixed object. Assuming a
luatexbook existed, it would be a maintenance nightmare to keep it
up to date with the actual program.

And my final point is a didactic one: the TeXbook is the only book
that I have totally worn out two copies of. And I do not think that
is a good thing at all. The book is written in such a way that you
have to leaf through again and again and again while learning TeX.
It is a mad combination of a tutorial, courseware, user manual and
reference. Even if it was doable, I would not like to repeat that
mistake in a new book.

Best wishes,
Taco


From st_philipp at yahoo.de  Mon Jan  3 14:36:13 2011
From: st_philipp at yahoo.de (Philipp Stephani)
Date: Mon, 3 Jan 2011 14:36:13 +0100
Subject: [luatex] The LuaTeXbook
In-Reply-To: <4D20F34A.8050106@free.fr>
References: <4D20C61D.1000302@free.fr>
 <EF6CB0AC-2E37-4613-BB0C-2A6DEB2096BA@yahoo.de> <4D20F34A.8050106@free.fr>
Message-ID: <90BEF8F8-37A8-42AB-AD0A-7F785367AC1B@yahoo.de>

Am 02.01.2011 um 22:51 schrieb site4000 at free.fr:

> -The program you propose is maybe a good way to learn deeply LuaTeX but you found this program because you have already read all the stuff about TeX and successors but what about newcommers ?

It depends on what they want to do. I suppose very few newcomers want to do low-level LuaTeX programming. If you want to use a LuaTeX-based system for typesetting, you should rather read the manuals of ConTeXt Mk IV or (for LuaLaTeX) Manuel's introduction (texdoc lualatex). My list (which is not very elaborate btw) is intended for people who want to apply knowledge from the LuaTeX reference. Most of them are experienced LaTeX or ConTeXt users and/or programmers; and many know already a bit about TeX programming. A complete newcomer (i.e., somebody who has never seen a TeX-based typesetting system before) should not start with LuaTeX programming anyway.
As the others said, a complete book about every detail of LuaTeX would be nearly impossible and would hardly make sense?comparable to a book that describes every aspect of operating systems, from bootloaders to UI.

From st_philipp at YAHOO.DE  Mon Jan  3 14:39:12 2011
From: st_philipp at YAHOO.DE (Philipp Stephani)
Date: Mon, 3 Jan 2011 14:39:12 +0100
Subject: [luatex] l3luatex module
In-Reply-To: <4D20F26B.2010606@morningstar2.co.uk>
References: <4D20D031.7040803@gmx.de>
 <A3F9D38B-FD5A-42BF-B219-633879BD9162@yahoo.de>
 <4D20F26B.2010606@morningstar2.co.uk>
Message-ID: <B1FDEEED-19E9-423E-96AF-03C419670859@YAHOO.DE>


Am 02.01.2011 um 22:47 schrieb Joseph Wright:

> On 02/01/2011 20:29, Philipp Stephani wrote:
>> and it would be nice if the expansion behavior for \lua_shipout were documented (like \iow_shipout):
>> - expanded now: yes/no
>> - expanded at shipout: yes/no
> 
> Re-reading the LuaTeX manual, I may have got the name wrong here, sorry. I think it should be :n, with explanation that expansion takes place at shipout. However, I'd appreciate some input from a Lua expert: any takers? (I'm not 100% clear from reading the manual, I'm afraid.)

Reading the source code, I guess \directlua behaves identically to \immediate\write, while \latelua corresponds to \write. If that is true, then the naming convention of the \iow_? macros should be applied. But I'm not sure, so cc'ing the LuaTeX list.

From taco at elvenkind.com  Mon Jan  3 14:56:47 2011
From: taco at elvenkind.com (Taco Hoekwater)
Date: Mon, 03 Jan 2011 14:56:47 +0100
Subject: [luatex] l3luatex module
In-Reply-To: <B1FDEEED-19E9-423E-96AF-03C419670859@YAHOO.DE>
References: <4D20D031.7040803@gmx.de>
 <A3F9D38B-FD5A-42BF-B219-633879BD9162@yahoo.de>
 <4D20F26B.2010606@morningstar2.co.uk>
 <B1FDEEED-19E9-423E-96AF-03C419670859@YAHOO.DE>
Message-ID: <4D21D59F.3060603@elvenkind.com>

On 01/03/2011 02:39 PM, Philipp Stephani wrote:
>
> Reading the source code, I guess \directlua behaves identically to
> \immediate\write, while \latelua corresponds to \write. If that is
> true, then the naming convention of the \iow_? macros should be
> applied.

The correspondence is correct, but \directlua is expandable
(\immediate\write is not).

Best wishes,
Taco


From joseph.wright at morningstar2.co.uk  Mon Jan  3 15:09:01 2011
From: joseph.wright at morningstar2.co.uk (Joseph Wright)
Date: Mon, 03 Jan 2011 14:09:01 +0000
Subject: [luatex] l3luatex module
In-Reply-To: <4D21D59F.3060603@elvenkind.com>
References: <4D20D031.7040803@gmx.de>
 <A3F9D38B-FD5A-42BF-B219-633879BD9162@yahoo.de>
 <4D20F26B.2010606@morningstar2.co.uk>
 <B1FDEEED-19E9-423E-96AF-03C419670859@YAHOO.DE>
 <4D21D59F.3060603@elvenkind.com>
Message-ID: <4D21D87D.6080105@morningstar2.co.uk>

On 03/01/2011 13:56, Taco Hoekwater wrote:
> On 01/03/2011 02:39 PM, Philipp Stephani wrote:
>>
>> Reading the source code, I guess \directlua behaves identically to
>> \immediate\write, while \latelua corresponds to \write. If that is
>> true, then the naming convention of the \iow_? macros should be
>> applied.
>
> The correspondence is correct, but \directlua is expandable
> (\immediate\write is not).

Thanks Taco (and Philipp). I will revisit the l3luatex stuff later today 
and try to tighten both the expl3 function names and description up.
-- 
Joseph Wright

From joseph.wright at morningstar2.co.uk  Mon Jan  3 21:09:16 2011
From: joseph.wright at morningstar2.co.uk (Joseph Wright)
Date: Mon, 03 Jan 2011 20:09:16 +0000
Subject: [luatex] l3luatex module
In-Reply-To: <4D21D87D.6080105@morningstar2.co.uk>
References: <4D20D031.7040803@gmx.de>
 <A3F9D38B-FD5A-42BF-B219-633879BD9162@yahoo.de>
 <4D20F26B.2010606@morningstar2.co.uk>
 <B1FDEEED-19E9-423E-96AF-03C419670859@YAHOO.DE>
 <4D21D59F.3060603@elvenkind.com> <4D21D87D.6080105@morningstar2.co.uk>
Message-ID: <4D222CEC.4040500@morningstar2.co.uk>

On 03/01/2011 14:09, Joseph Wright wrote:
> On 03/01/2011 13:56, Taco Hoekwater wrote:
>> On 01/03/2011 02:39 PM, Philipp Stephani wrote:
>>>
>>> Reading the source code, I guess \directlua behaves identically to
>>> \immediate\write, while \latelua corresponds to \write. If that is
>>> true, then the naming convention of the \iow_? macros should be
>>> applied.
>>
>> The correspondence is correct, but \directlua is expandable
>> (\immediate\write is not).
>
> Thanks Taco (and Philipp). I will revisit the l3luatex stuff later today
> and try to tighten both the expl3 function names and description up.

(With apologies to those on the LuaTeX list who are not interested in 
LaTeX3 - I think I need some LuaTeX experts to check the following.)

Okay, to save everyone needing to read the SVN feed, I've revised the 
documentation to:

%\begin{function}{
%  \lua_now:n / (EXP) |
%  \lua_now:x / (EXP) |
%}
%  \begin{syntax}
%    \cs{lua_now:n} \Arg{token list}
%  \end{syntax}
%  The \meta{token list} is first tokenized by \TeX, which will include
%  converting line ends to spaces in the usual \TeX\ manner and which
%  respects currently-applicable \TeX\ category codes. The resulting
%  \meta{\Lua\ input} is passed to the \Lua\ interpreter for processing.
%  Each \cs{lua_now:n} block is treated by \Lua\ as a separate chunk.
%  The \Lua\ interpreter will execute the \meta{\Lua\ input} immediately,
%  and in an expandable manner.
%  \begin{texnote}
%    \cs{lua_now:x} is the \LuaTeX\ primitive \cs{directlua} renamed.
%  \end{texnote}
%\end{function}
%
%\begin{function}{
%  \lua_shipout:n |
%  \lua_shipout:x |
%}
%  \begin{syntax}
%    \cs{lua_shipout:x} \Arg{token list}
%  \end{syntax}
%  The \meta{token list} is first tokenized by \TeX, which will include
%  converting line ends to spaces in the usual \TeX\ manner and which
%  respects currently-applicable \TeX\ category codes.  The resulting
%  \meta{\Lua\ input} is passed to the \Lua\ interpreter when the
%  current page is finalised (\emph{i.e}.~at shipout).  Each
%  \cs{lua_shipout:n} block is treated by Lua as a separate chunk.
%  The \Lua\ interpreter will execute the \meta{\Lua\ input} during the
%  page-building routine: no \TeX\ expansion of the \meta{\Lua\ input}
%  will occur at this stage.
%  \begin{texnote}
%    At a \TeX\ level, the \meta{\Lua\ input} is stored as a
%    `whatsit'.
%  \end{texnote}
%\end{function}
%
%\begin{function}{
%  \lua_shipout_x:n |
%  \lua_shipout_x:x |
%}
%  \begin{syntax}
%    \cs{lua_shipout:n} \Arg{token list}
%  \end{syntax}
%  The \meta{token list} is first tokenized by \TeX, which will include
%  converting line ends to spaces in the usual \TeX\ manner and which
%  respects currently-applicable \TeX\ category codes.  The resulting
%  \meta{\Lua\ input} is passed to the \Lua\ interpreter when the
%  current page is finalised (\emph{i.e}.~at shipout).  Each
%  \cs{lua_shipout:n} block is treated by Lua as a separate chunk.
%  The \Lua\ interpreter will execute the \meta{\Lua\ input} during the
%  page-building routine: the \meta{\Lua\ input} is expanded during this
%  process in addition to any expansion when the argument was read. This
%  makes these functions suitable for including material finalised
%  during the page building process (such as the page number).
%  \begin{texnote}
%    \cs{lua_sjhipout_x:n} is the \LuaTeX\ primitive \cs{latelua}
%    named using the \LaTeX3 scheme.
%
%    At a \TeX\ level, the \meta{\Lua\ input} is stored as a
%    `whatsit'.
%  \end{texnote}
%\end{function}

with the code block reading

%\begin{macro}{\lua_now:n}
%\begin{macro}{\lua_now:x}
%\begin{macro}{\lua_shipout_x:n}
%\begin{macro}{\lua_shipout_x:x}
%\begin{macro}{\lua_shipout:n}
%\begin{macro}{\lua_shipout:x}
%\begin{macro}{\lua_wrong_engine:}
% When \LuaTeX\ is in use, this is all a question of primitives with new
% names. On the other hand, for \pdfTeX\ and \XeTeX\ the argument should
% be removed from the input stream before issuing an error. This needs
% to be expandable, so the same idea is used as for \texttt{V}-type
% expansion, with an appropriately-named but undefined function.
%    \begin{macrocode}
\luatex_if_engine:TF
   {
     \cs_new_eq:NN \lua_now:x       \luatex_directlua:D
     \cs_new_eq:NN \lua_shipout_x:n \luatex_latelua:D
   }
   {
     \cs_new:Npn \lua_now:x #1 { \lua_wrong_engine: }
     \cs_new_protected:Npn \lua_shipout_x:n #1 { \lua_wrong_engine: }
   }
\cs_new:Npn \lua_now:n #1 {
   \lua_now:x { \exp_not:n {#1} }
}
\cs_generate_variant:Nn \lua_shipout_x:n { x }
\cs_new_protected:Npn \lua_shipout:n #1 {
   \lua_shipout_x:n { \exp_not:n {#1} }
}
\cs_generate_variant:Nn \lua_shipout:n { x }
\group_begin:
\char_make_letter:N\!
\char_make_letter:N\ %
\cs_gset:Npn\lua_wrong_engine:{%
\LuaTeX engine not in use!%
}%
\group_end:%
%    \end{macrocode}
%\end{macro}
%\end{macro}
%\end{macro}
%\end{macro}
%\end{macro}
%\end{macro}
%\end{macro}

This is modelled on the expl3 wrappers for \write, noting as Taco has 
pointed out that \directlua is expandable, but I take it that \latelua 
is not.

Once this is sorted out correctly then I'll sort out a CTAN snapshot.
-- 
Joseph Wright

From jlrn77 at gmail.com  Wed Jan  5 21:52:48 2011
From: jlrn77 at gmail.com (Luis Rivera)
Date: Wed, 5 Jan 2011 14:52:48 -0600
Subject: [luatex] lua script on the run
Message-ID: <AANLkTi=zbDqmbkKYuTVAuFZuGVeYYyxFBNwkJNzT0ZJa@mail.gmail.com>

Hello!

I am new to LuaTeX; so please, don't bite me!!!

I was wondering if it was possible to use some Lua code to make text
conversions on the fly. More precisely, I was thinking about setting
up a macro that swallows some text written in some ascii
transliteration scheme, but actually feeds the typesetter with the
right utf8 string, There are lua scripts that make conversions to
update files with older transliteration schemes (take mtx-babel.lua as
an example); but I was thinking about defining a command like, say,
\texperanto, which performs a conversion of its argument on the fly,
so that I may write

\texperanto{Alportu ^caron de sopiro!}

And LuaTeX actually typesets "Alportu ?aron de sopiro!"

I foresee that there might be some penalties in trying to implement
this approach (perhaps exhausting LuaTeX's memory,  or some delays in
execution time), but that aside, I don't know if this approach is
feasible.

Cheers,

-- 
Luis Rivera
O< http://www.asciiribbon.org/ campaign


From patrick at gundla.ch  Wed Jan  5 22:19:35 2011
From: patrick at gundla.ch (Patrick Gundlach)
Date: Wed, 5 Jan 2011 22:19:35 +0100
Subject: [luatex] lua script on the run
In-Reply-To: <AANLkTi=zbDqmbkKYuTVAuFZuGVeYYyxFBNwkJNzT0ZJa@mail.gmail.com>
References: <AANLkTi=zbDqmbkKYuTVAuFZuGVeYYyxFBNwkJNzT0ZJa@mail.gmail.com>
Message-ID: <B0BC8B88-362D-4566-B7E3-C9DFD5949FBB@gundla.ch>



> but I was thinking about defining a command like, say,
> \texperanto, which performs a conversion of its argument on the fly,
> so that I may write
> 
> \texperanto{Alportu ^caron de sopiro!}
> 
> And LuaTeX actually typesets "Alportu ?aron de sopiro!"

------------------------------------------------
\def\texperanto#1{\directlua{
  local str = string.gsub("#1","\%^c","?")
  tex.print(str)
}}

\catcode`\^=11

\texperanto{Alportu ^caron de sopiro!}

\bye
------------------------------------------------

Patrick



From zappathustra at free.fr  Wed Jan  5 22:28:35 2011
From: zappathustra at free.fr (Paul Isambert)
Date: Wed, 05 Jan 2011 22:28:35 +0100
Subject: [luatex] lua script on the run
In-Reply-To: <B0BC8B88-362D-4566-B7E3-C9DFD5949FBB@gundla.ch>
References: <AANLkTi=zbDqmbkKYuTVAuFZuGVeYYyxFBNwkJNzT0ZJa@mail.gmail.com>
 <B0BC8B88-362D-4566-B7E3-C9DFD5949FBB@gundla.ch>
Message-ID: <4D24E283.6060809@free.fr>

Le 05/01/2011 22:19, Patrick Gundlach a ?crit :
>
>> but I was thinking about defining a command like, say,
>> \texperanto, which performs a conversion of its argument on the fly,
>> so that I may write
>>
>> \texperanto{Alportu ^caron de sopiro!}
>>
>> And LuaTeX actually typesets "Alportu ?aron de sopiro!"
> ------------------------------------------------
> \def\texperanto#1{\directlua{
>    local str = string.gsub("#1","\%^c","?")
>    tex.print(str)
> }}
>
> \catcode`\^=11
>
> \texperanto{Alportu ^caron de sopiro!}
>
> \bye

As indicated by Patrick's code (where the catcode change is 
unnecessary), your task is no big deal: string.gsub can indeed handle 
it, and you want to read the Lua manual on string manipulation 
(http://www.lua.org/manual/5.1/manual.html#5.4). Two things are worth 
noting: string.gsub can also take (as its third arguments) tables and 
functions, which makes it much more powerful; and magic characters 
should be taken care of ("^" is one of them).

Best,
Paul

From st_philipp at yahoo.de  Wed Jan  5 22:43:20 2011
From: st_philipp at yahoo.de (Philipp Stephani)
Date: Wed, 5 Jan 2011 22:43:20 +0100
Subject: [luatex] lua script on the run
In-Reply-To: <AANLkTi=zbDqmbkKYuTVAuFZuGVeYYyxFBNwkJNzT0ZJa@mail.gmail.com>
References: <AANLkTi=zbDqmbkKYuTVAuFZuGVeYYyxFBNwkJNzT0ZJa@mail.gmail.com>
Message-ID: <739AAA1C-6E3F-4297-B142-D481487004D5@yahoo.de>


Am 05.01.2011 um 21:52 schrieb Luis Rivera:

> Hello!
> 
> I am new to LuaTeX; so please, don't bite me!!!
> 
> I was wondering if it was possible to use some Lua code to make text
> conversions on the fly. More precisely, I was thinking about setting
> up a macro that swallows some text written in some ascii
> transliteration scheme, but actually feeds the typesetter with the
> right utf8 string, There are lua scripts that make conversions to
> update files with older transliteration schemes (take mtx-babel.lua as
> an example); but I was thinking about defining a command like, say,
> \texperanto, which performs a conversion of its argument on the fly,
> so that I may write
> 
> \texperanto{Alportu ^caron de sopiro!}
> 
> And LuaTeX actually typesets "Alportu ?aron de sopiro!"

If you only need simple textual replacements, you can get quite far with Lua's built-in functions:

\documentclass{minimal}
\usepackage{fontspec}
\usepackage{luacode}
\begin{luacode*}
 function texperanto(text)
   tex.sprint((text:gsub("%^c", "?")))
 end
\end{luacode*}
\newcommand*{\texperanto}[1]{\luadirect{texperanto([[#1]])}}
\setmainfont{DejaVu Sans}
\begin{document}
\texperanto{Alportu ^caron de sopiro!}
\end{document}



From patrick at gundla.ch  Thu Jan  6 07:53:08 2011
From: patrick at gundla.ch (Patrick Gundlach)
Date: Thu, 6 Jan 2011 07:53:08 +0100
Subject: [luatex] lua script on the run
In-Reply-To: <4D24E283.6060809@free.fr>
References: <AANLkTi=zbDqmbkKYuTVAuFZuGVeYYyxFBNwkJNzT0ZJa@mail.gmail.com>
 <B0BC8B88-362D-4566-B7E3-C9DFD5949FBB@gundla.ch> <4D24E283.6060809@free.fr>
Message-ID: <3DF03001-3026-45A3-9D3F-0DD06096F776@gundla.ch>


> 
> As indicated by Patrick's code
> (where the catcode change is unnecessary)

That's true, somehow while experimenting I've got a catcode error (now I know why).

Patrick



From Arno.Trautmann at gmx.de  Thu Jan  6 11:41:44 2011
From: Arno.Trautmann at gmx.de (Arno Trautmann)
Date: Thu, 06 Jan 2011 11:41:44 +0100
Subject: [luatex] lua script on the run
In-Reply-To: <739AAA1C-6E3F-4297-B142-D481487004D5@yahoo.de>
References: <AANLkTi=zbDqmbkKYuTVAuFZuGVeYYyxFBNwkJNzT0ZJa@mail.gmail.com>
 <739AAA1C-6E3F-4297-B142-D481487004D5@yahoo.de>
Message-ID: <4D259C68.2060603@gmx.de>

Philipp Stephani wrote:
> 
> [?]
>> \texperanto{Alportu ^caron de sopiro!}
>>
>> And LuaTeX actually typesets "Alportu ?aron de sopiro!"
> 
> If you only need simple textual replacements, you can get quite far with Lua's built-in functions:
> 
> \documentclass{minimal}
> \usepackage{fontspec}
> \usepackage{luacode}
> \begin{luacode*}
>  function texperanto(text)
>    tex.sprint((text:gsub("%^c", "?")))
>  end
> \end{luacode*}
> \newcommand*{\texperanto}[1]{\luadirect{texperanto([[#1]])}}
> \setmainfont{DejaVu Sans}
> \begin{document}
> \texperanto{Alportu ^caron de sopiro!}
> \end{document}

These solutions (Patrick's, Paul's and yours) are nice, but how would
one apply it to a whole document? I have a very similar need and it
would be nice not to put the whole document inside the \texperanto
macro. Would it be a good ideo to use this with \everypar to get the
paragraph gsub'd?

cheers
Arno

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 262 bytes
Desc: OpenPGP digital signature
URL: <http://tug.org/pipermail/luatex/attachments/20110106/c2fe8d89/attachment.bin>

From st_philipp at yahoo.de  Thu Jan  6 13:05:05 2011
From: st_philipp at yahoo.de (Philipp Stephani)
Date: Thu, 6 Jan 2011 13:05:05 +0100
Subject: [luatex] lua script on the run
In-Reply-To: <4D259C68.2060603@gmx.de>
References: <AANLkTi=zbDqmbkKYuTVAuFZuGVeYYyxFBNwkJNzT0ZJa@mail.gmail.com>
 <739AAA1C-6E3F-4297-B142-D481487004D5@yahoo.de> <4D259C68.2060603@gmx.de>
Message-ID: <AFEA02D2-CF8E-412F-9676-5CFB58053814@yahoo.de>


Am 06.01.2011 um 11:41 schrieb Arno Trautmann:

> Philipp Stephani wrote:
>> 
>> [?]
>>> \texperanto{Alportu ^caron de sopiro!}
>>> 
>>> And LuaTeX actually typesets "Alportu ?aron de sopiro!"
>> 
>> If you only need simple textual replacements, you can get quite far with Lua's built-in functions:
>> 
>> \documentclass{minimal}
>> \usepackage{fontspec}
>> \usepackage{luacode}
>> \begin{luacode*}
>> function texperanto(text)
>>   tex.sprint((text:gsub("%^c", "?")))
>> end
>> \end{luacode*}
>> \newcommand*{\texperanto}[1]{\luadirect{texperanto([[#1]])}}
>> \setmainfont{DejaVu Sans}
>> \begin{document}
>> \texperanto{Alportu ^caron de sopiro!}
>> \end{document}
> 
> These solutions (Patrick's, Paul's and yours) are nice, but how would
> one apply it to a whole document?

\documentclass{article}
\usepackage{fontspec}
\usepackage{luatextra}
\begin{luacode*}
  local function texperanto(text)
    result = text:gsub("%^c", "?")
    return result
  end
  luatexbase.add_to_callback("process_input_buffer", texperanto, "texperanto")
\end{luacode*}
\setmainfont{DejaVu Sans}
\begin{document}
Alportu ^caron de sopiro!

Warning: This is a literal translation of the whole input, including math,
macros, \string^\string^-escapes, and everything else, so the following doesn?t
work any more: $b^c$?use $b\sp c$ or $b\luatexUsuperscript c$ instead.
\end{document}

From Arno.Trautmann at gmx.de  Thu Jan  6 13:10:21 2011
From: Arno.Trautmann at gmx.de (Arno Trautmann)
Date: Thu, 06 Jan 2011 13:10:21 +0100
Subject: [luatex] lua script on the run
In-Reply-To: <AFEA02D2-CF8E-412F-9676-5CFB58053814@yahoo.de>
References: <AANLkTi=zbDqmbkKYuTVAuFZuGVeYYyxFBNwkJNzT0ZJa@mail.gmail.com>
 <739AAA1C-6E3F-4297-B142-D481487004D5@yahoo.de> <4D259C68.2060603@gmx.de>
 <AFEA02D2-CF8E-412F-9676-5CFB58053814@yahoo.de>
Message-ID: <4D25B12D.7010009@gmx.de>

Philipp Stephani wrote:
> 
> Am 06.01.2011 um 11:41 schrieb Arno Trautmann:
> 
>> Philipp Stephani wrote:
>>>
>>> [?]
>>>> \texperanto{Alportu ^caron de sopiro!}
>>>>
>>>> And LuaTeX actually typesets "Alportu ?aron de sopiro!"
>>>
>>> If you only need simple textual replacements, you can get quite far with Lua's built-in functions:
>>>
>>> \documentclass{minimal}
>>> \usepackage{fontspec}
>>> \usepackage{luacode}
>>> \begin{luacode*}
>>> function texperanto(text)
>>>   tex.sprint((text:gsub("%^c", "?")))
>>> end
>>> \end{luacode*}
>>> \newcommand*{\texperanto}[1]{\luadirect{texperanto([[#1]])}}
>>> \setmainfont{DejaVu Sans}
>>> \begin{document}
>>> \texperanto{Alportu ^caron de sopiro!}
>>> \end{document}
>>
>> These solutions (Patrick's, Paul's and yours) are nice, but how would
>> one apply it to a whole document?
> 
> \documentclass{article}
> \usepackage{fontspec}
> \usepackage{luatextra}
> \begin{luacode*}
>   local function texperanto(text)
>     result = text:gsub("%^c", "?")
>     return result
>   end
>   luatexbase.add_to_callback("process_input_buffer", texperanto, "texperanto")

nice :)
I totallay forgot about that callback ? (ok, I've only once read that it
exists ?)

> \end{luacode*}
> \setmainfont{DejaVu Sans}
> \begin{document}
> Alportu ^caron de sopiro!
> Warning: This is a literal translation of the whole input, including math,
> macros, \string^\string^-escapes, and everything else, so the following doesn?t
> work any more: $b^c$?use $b\sp c$ or $b\luatexUsuperscript c$ instead.
> \end{document}

Can this anyhow be constrained to text-only input? E.g. scanning for
math tokens in the texperanto function to ignore math input?

cheers
Arno

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 262 bytes
Desc: OpenPGP digital signature
URL: <http://tug.org/pipermail/luatex/attachments/20110106/c9bd48f1/attachment.bin>

From khaledhosny at eglug.org  Thu Jan  6 13:12:16 2011
From: khaledhosny at eglug.org (Khaled Hosny)
Date: Thu, 6 Jan 2011 14:12:16 +0200
Subject: [luatex] lua script on the run
In-Reply-To: <4D259C68.2060603@gmx.de>
References: <AANLkTi=zbDqmbkKYuTVAuFZuGVeYYyxFBNwkJNzT0ZJa@mail.gmail.com>
 <739AAA1C-6E3F-4297-B142-D481487004D5@yahoo.de>
 <4D259C68.2060603@gmx.de>
Message-ID: <20110106121216.GA17980@khaled-laptop>

On Thu, Jan 06, 2011 at 11:41:44AM +0100, Arno Trautmann wrote:
> Philipp Stephani wrote:
> > 
> > [?]
> >> \texperanto{Alportu ^caron de sopiro!}
> >>
> >> And LuaTeX actually typesets "Alportu ?aron de sopiro!"
> > 
> > If you only need simple textual replacements, you can get quite far with Lua's built-in functions:
> > 
> > \documentclass{minimal}
> > \usepackage{fontspec}
> > \usepackage{luacode}
> > \begin{luacode*}
> >  function texperanto(text)
> >    tex.sprint((text:gsub("%^c", "?")))
> >  end
> > \end{luacode*}
> > \newcommand*{\texperanto}[1]{\luadirect{texperanto([[#1]])}}
> > \setmainfont{DejaVu Sans}
> > \begin{document}
> > \texperanto{Alportu ^caron de sopiro!}
> > \end{document}
> 
> These solutions (Patrick's, Paul's and yours) are nice, but how would
> one apply it to a whole document? I have a very similar need and it
> would be nice not to put the whole document inside the \texperanto
> macro. Would it be a good ideo to use this with \everypar to get the
> paragraph gsub'd?

May be you can use "process_input_buffer" callback, but this gets the
raw input before luatex even processing it so you have to be careful
with control sequences and so.

Or you can do the processing on the node list, but then you can't used
regular text processing functions (gsub, lpeg, etc.)

Regards,
 Khaled

-- 
 Khaled Hosny
 Arabic localiser and member of Arabeyes.org team
 Free font developer


From st_philipp at yahoo.de  Thu Jan  6 14:42:50 2011
From: st_philipp at yahoo.de (Philipp Stephani)
Date: Thu, 6 Jan 2011 14:42:50 +0100
Subject: [luatex] lua script on the run
In-Reply-To: <20110106121216.GA17980@khaled-laptop>
References: <AANLkTi=zbDqmbkKYuTVAuFZuGVeYYyxFBNwkJNzT0ZJa@mail.gmail.com>
 <739AAA1C-6E3F-4297-B142-D481487004D5@yahoo.de> <4D259C68.2060603@gmx.de>
 <20110106121216.GA17980@khaled-laptop>
Message-ID: <46C21A6F-A28C-4821-93B4-FE7C1F907B2E@yahoo.de>

Am 06.01.2011 um 13:12 schrieb Khaled Hosny:

> May be you can use "process_input_buffer" callback, but this gets the
> raw input before luatex even processing it so you have to be careful
> with control sequences and so.

It is next to impossible to find out from the input where math mode is active, given the millions of possibilities to start math input.

> Or you can do the processing on the node list, but then you can't used
> regular text processing functions (gsub, lpeg, etc.)

And before you arrive at a node list, TeX will already have complained about ^ outside math mode. Probably a token_filter callback would work better.

From khaledhosny at eglug.org  Thu Jan  6 15:00:12 2011
From: khaledhosny at eglug.org (Khaled Hosny)
Date: Thu, 6 Jan 2011 16:00:12 +0200
Subject: [luatex] lua script on the run
In-Reply-To: <46C21A6F-A28C-4821-93B4-FE7C1F907B2E@yahoo.de>
References: <AANLkTi=zbDqmbkKYuTVAuFZuGVeYYyxFBNwkJNzT0ZJa@mail.gmail.com>
 <739AAA1C-6E3F-4297-B142-D481487004D5@yahoo.de>
 <4D259C68.2060603@gmx.de> <20110106121216.GA17980@khaled-laptop>
 <46C21A6F-A28C-4821-93B4-FE7C1F907B2E@yahoo.de>
Message-ID: <20110106140012.GA19356@khaled-laptop>

On Thu, Jan 06, 2011 at 02:42:50PM +0100, Philipp Stephani wrote:
> Am 06.01.2011 um 13:12 schrieb Khaled Hosny:
> 
> > May be you can use "process_input_buffer" callback, but this gets the
> > raw input before luatex even processing it so you have to be careful
> > with control sequences and so.
> 
> It is next to impossible to find out from the input where math mode is active, given the millions of possibilities to start math input.

That what I meant, he either be careful about what to replace or things
get messed up.

> > Or you can do the processing on the node list, but then you can't used
> > regular text processing functions (gsub, lpeg, etc.)
> 
> And before you arrive at a node list, TeX will already have complained about ^ outside math mode. Probably a token_filter callback would work better.

I was not thinking about this particular case, one can use tex-friendly
transliteration scheme but still need to escape non-textual material
which makes node list processing appealing. I would have suggested
token_filter but tex tokens are beyond my understanding.

Regards,
 Khaled

-- 
 Khaled Hosny
 Arabic localiser and member of Arabeyes.org team
 Free font developer

From t34www at googlemail.com  Thu Jan  6 18:16:02 2011
From: t34www at googlemail.com (T T)
Date: Thu, 6 Jan 2011 17:16:02 +0000
Subject: [luatex] require with kpse loaders
Message-ID: <AANLkTintK2r2gE8txgjOfeT_a5xNP-XEJ5kLcx3D5yMy@mail.gmail.com>

Hi,

In the past I used this code:

kpse.set_program_name("texlua")
master = kpse.var_value('SELFAUTOPARENT')
package.path = master.."/c?.tlu"
require("texlive.tlpdb")

to load texmf/scripts/texlive/lua/texlive/tlpdb.tlu module but this is
not working anymore with kpse loaders.

The following allowed me to bypass kpse loader and use the Lua's built-in one:

master = kpse.new("texlua"):var_value('SELFAUTOPARENT')
package.path = master.."/texmf/scripts/texlive/lua/?.tlu"
require("texlive.tlpdb")

but is there a way to make kpse loader find this module?

Cheers,

Tomek

From jlrn77 at gmail.com  Thu Jan  6 20:06:50 2011
From: jlrn77 at gmail.com (Luis Rivera)
Date: Thu, 6 Jan 2011 13:06:50 -0600
Subject: [luatex] lua script on the run
Message-ID: <AANLkTinfzxT6NdOJx+stfi29j1iHw4jrY_aDMTuyOFBb@mail.gmail.com>

(I am not very familiar with this mailing list's interface, so this
message may be a little cluttered. My apologies.)

On 6 January 2011 05:00,  <luatex-request at tug.org> wrote:
>
> Message: 3
> Date: Wed, 05 Jan 2011 22:28:35 +0100
> From: Paul Isambert <zappathustra at free.fr>
> To: "General discussion of LuaTeX." <luatex at tug.org>
> Subject: Re: [luatex] lua script on the run
>
> Le 05/01/2011 22:19, Patrick Gundlach a ?crit :
>>
>>> but I was thinking about defining a command like, say,
>>> \texperanto, which performs a conversion of its argument on the fly,
>>> so that I may write
>>>
>>> \texperanto{Alportu ^caron de sopiro!}
>>>
>>> And LuaTeX actually typesets "Alportu ?aron de sopiro!"
>> ------------------------------------------------
>> \def\texperanto#1{\directlua{
>> ? ?local str = string.gsub("#1","\%^c","?")
>> ? ?tex.print(str)
>> }}
>>
>> \catcode`\^=11
>>
>> \texperanto{Alportu ^caron de sopiro!}
>>
>> \bye
>
> As indicated by Patrick's code (where the catcode change is
> unnecessary), your task is no big deal: string.gsub can indeed handle
> it, and you want to read the Lua manual on string manipulation
> (http://www.lua.org/manual/5.1/manual.html#5.4). Two things are worth
> noting: string.gsub can also take (as its third arguments) tables and
> functions, which makes it much more powerful; and magic characters
> should be taken care of ("^" is one of them).
>

"tables and functions". So how would you set a table for the six
special characters of esperanto (^c, ^g, ^h, ^j, ^s, ^u)?

>
> Message: 6
> Date: Thu, 06 Jan 2011 11:41:44 +0100
> From: Arno Trautmann <Arno.Trautmann at gmx.de>
> To: "General discussion of LuaTeX." <luatex at tug.org>
> Subject: Re: [luatex] lua script on the run
>
> Philipp Stephani wrote:
>>
>> [?]
>>> \texperanto{Alportu ^caron de sopiro!}
>>>
>>> And LuaTeX actually typesets "Alportu ?aron de sopiro!"
>>
>> If you only need simple textual replacements, you can get quite far with Lua's built-in functions:
>>
>> \documentclass{minimal}
>> \usepackage{fontspec}
>> \usepackage{luacode}
>> \begin{luacode*}
>> ?function texperanto(text)
>> ? ?tex.sprint((text:gsub("%^c", "?")))
>> ?end
>> \end{luacode*}
>> \newcommand*{\texperanto}[1]{\luadirect{texperanto([[#1]])}}
>> \setmainfont{DejaVu Sans}
>> \begin{document}
>> \texperanto{Alportu ^caron de sopiro!}
>> \end{document}
>

I thought of a macro package independent solution. This one works for
LuaLaTeX, but Patrick's should also work for plain LuaTeX.

> These solutions (Patrick's, Paul's and yours) are nice, but how would
> one apply it to a whole document? I have a very similar need and it
> would be nice not to put the whole document inside the \texperanto
> macro. Would it be a good ideo to use this with \everypar to get the
> paragraph gsub'd?
>

What occurs to me is to use a babel-like solution: make ^ active in
textual context, and define it in terms of Lua functions so that it
may check the following character and apply a conversion on a match:
otherwise, typeset the original two character string.

(I am not even familiar enough with Lua's syntax to write the solution; sorry!)

I am checking the documentation to get a better grasp about what is going on.

Thanks,

-- 
Luis Rivera
O< http://www.asciiribbon.org/ campaign


From st_philipp at yahoo.de  Thu Jan  6 20:50:30 2011
From: st_philipp at yahoo.de (Philipp Stephani)
Date: Thu, 6 Jan 2011 20:50:30 +0100
Subject: [luatex] lua script on the run
In-Reply-To: <AANLkTinfzxT6NdOJx+stfi29j1iHw4jrY_aDMTuyOFBb@mail.gmail.com>
References: <AANLkTinfzxT6NdOJx+stfi29j1iHw4jrY_aDMTuyOFBb@mail.gmail.com>
Message-ID: <9FC32689-4DD9-4A3B-9B92-5E5E729A3E20@yahoo.de>


Am 06.01.2011 um 20:06 schrieb Luis Rivera:

> "tables and functions". So how would you set a table for the six
> special characters of esperanto (^c, ^g, ^h, ^j, ^s, ^u)?

\catcode`\^=12
\begingroup
\catcode`\%=12
\gdef\percentchar{%}
\endgroup
\directlua{%
  local translate = {
    c = "?",
    g = "?",
    h = "?",
    j = "?",
    s = "?",
    u = "?"
  }
  function texperanto(text)
    result = text:gsub("\percentchar^(\percentchar a)", translate)
    tex.sprint(result)
  end
}
\def\texperanto#1{\directlua{texperanto([[#1]])}}
\input luaotfload.sty
\font\rm={name:DejaVu Sans:}\relax
\rm
\texperanto{^a ^b ^c ^d ^e ^f ^g ^h ^i ^j ^s ^u}
\bye


> I thought of a macro package independent solution. This one works for
> LuaLaTeX, but Patrick's should also work for plain LuaTeX.

of course that's possible, but a bit more awkward since you have to e.g. escape percent characters. "macro package independence" is even harder with LuaTeX than with pdfTeX, since you need lots of external packages to e.g. load fonts. Luaotfload works with LaTeX and plain, but probably not with ConTeXt, which is completely different anyway.

> What occurs to me is to use a babel-like solution: make ^ active in
> textual context, and define it in terms of Lua functions so that it
> may check the following character and apply a conversion on a match:
> otherwise, typeset the original two character string.

Never do this if you have LuaTeX, it is completely obsolete and causes many issues. If you are sure to run on LuaTeX, do everything in Lua, and avoid catcode changes and the like.

From zappathustra at free.fr  Thu Jan  6 21:05:54 2011
From: zappathustra at free.fr (Paul Isambert)
Date: Thu, 06 Jan 2011 21:05:54 +0100
Subject: [luatex] lua script on the run
In-Reply-To: <9FC32689-4DD9-4A3B-9B92-5E5E729A3E20@yahoo.de>
References: <AANLkTinfzxT6NdOJx+stfi29j1iHw4jrY_aDMTuyOFBb@mail.gmail.com>
 <9FC32689-4DD9-4A3B-9B92-5E5E729A3E20@yahoo.de>
Message-ID: <4D2620A2.8030007@free.fr>

Le 06/01/2011 20:50, Philipp Stephani a ?crit :
> Am 06.01.2011 um 20:06 schrieb Luis Rivera:
>
>> "tables and functions". So how would you set a table for the six
>> special characters of esperanto (^c, ^g, ^h, ^j, ^s, ^u)?
> \catcode`\^=12
> \begingroup
> \catcode`\%=12
> \gdef\percentchar{%}
> \endgroup
> \directlua{%
>    local translate = {
>      c = "?",
>      g = "?",
>      h = "?",
>      j = "?",
>      s = "?",
>      u = "?"
>    }
>    function texperanto(text)
>      result = text:gsub("\percentchar^(\percentchar a)", translate)
>      tex.sprint(result)
>    end
> }
> \def\texperanto#1{\directlua{texperanto([[#1]])}}
> \input luaotfload.sty
> \font\rm={name:DejaVu Sans:}\relax
> \rm
> \texperanto{^a ^b ^c ^d ^e ^f ^g ^h ^i ^j ^s ^u}
> \bye
>

A small simplification: again, the catcode change for "^" is 
unnecessary, and you could as well use \direclua in the group and use 
"%" as is (i.e. without \percentchar), since \directlua is immune to TeX 
groups.


>> I thought of a macro package independent solution. This one works for
>> LuaLaTeX, but Patrick's should also work for plain LuaTeX.
> of course that's possible, but a bit more awkward since you have to e.g. escape percent characters. "macro package independence" is even harder with LuaTeX than with pdfTeX, since you need lots of external packages to e.g. load fonts. Luaotfload works with LaTeX and plain, but probably not with ConTeXt, which is completely different anyway.

Luaotfload should work with ConTeXt, since the code is ConTeXt's code. 
And format-independance should be enforced as often as possible (a 
personal hobby): when it comes to Lua, it's rather easy, since Lua code 
doesn't give a damn about formats (unless you use format-dependant Lua 
function, that is).

>> What occurs to me is to use a babel-like solution: make ^ active in
>> textual context, and define it in terms of Lua functions so that it
>> may check the following character and apply a conversion on a match:
>> otherwise, typeset the original two character string.
> Never do this if you have LuaTeX, it is completely obsolete and causes many issues. If you are sure to run on LuaTeX, do everything in Lua, and avoid catcode changes and the like.

Indeed, the solution with catcodes would be ok with anything but LuaTeX, 
and you actually don't need any Lua function.

Best,
Paul


From st_philipp at yahoo.de  Thu Jan  6 22:23:36 2011
From: st_philipp at yahoo.de (Philipp Stephani)
Date: Thu, 6 Jan 2011 22:23:36 +0100
Subject: [luatex] lua script on the run
In-Reply-To: <4D2620A2.8030007@free.fr>
References: <AANLkTinfzxT6NdOJx+stfi29j1iHw4jrY_aDMTuyOFBb@mail.gmail.com>
 <9FC32689-4DD9-4A3B-9B92-5E5E729A3E20@yahoo.de> <4D2620A2.8030007@free.fr>
Message-ID: <EA835B30-CC40-4DF4-AEF0-F5FAB2212236@yahoo.de>


Am 06.01.2011 um 21:05 schrieb Paul Isambert:

> Le 06/01/2011 20:50, Philipp Stephani a ?crit :
>> Am 06.01.2011 um 20:06 schrieb Luis Rivera:
>> 
>>> "tables and functions". So how would you set a table for the six
>>> special characters of esperanto (^c, ^g, ^h, ^j, ^s, ^u)?
>> \catcode`\^=12
>> \begingroup
>> \catcode`\%=12
>> \gdef\percentchar{%}
>> \endgroup
>> \directlua{%
>>   local translate = {
>>     c = "?",
>>     g = "?",
>>     h = "?",
>>     j = "?",
>>     s = "?",
>>     u = "?"
>>   }
>>   function texperanto(text)
>>     result = text:gsub("\percentchar^(\percentchar a)", translate)
>>     tex.sprint(result)
>>   end
>> }
>> \def\texperanto#1{\directlua{texperanto([[#1]])}}
>> \input luaotfload.sty
>> \font\rm={name:DejaVu Sans:}\relax
>> \rm
>> \texperanto{^a ^b ^c ^d ^e ^f ^g ^h ^i ^j ^s ^u}
>> \bye
>> 
> 
> A small simplification: again, the catcode change for "^" is unnecessary,

In this example it is necessary because otherwise you get errors (but only because I used ^b and other unmodified sequences to test the functions)

> and you could as well use \direclua in the group and use "%" as is (i.e. without \percentchar), since \directlua is immune to TeX groups.

Indeed, I have forgotten that (the luacode environment does the same).

> 
> 
>>> I thought of a macro package independent solution. This one works for
>>> LuaLaTeX, but Patrick's should also work for plain LuaTeX.
>> of course that's possible, but a bit more awkward since you have to e.g. escape percent characters. "macro package independence" is even harder with LuaTeX than with pdfTeX, since you need lots of external packages to e.g. load fonts. Luaotfload works with LaTeX and plain, but probably not with ConTeXt, which is completely different anyway.
> 
> Luaotfload should work with ConTeXt, since the code is ConTeXt's code. And format-independance should be enforced as often as possible (a personal hobby): when it comes to Lua, it's rather easy, since Lua code doesn't give a damn about formats (unless you use format-dependant Lua function, that is).

Maybe in this simple example, but in general I think it is quite hard (but I have to admit that I've never written format-independent code).

> 
>>> What occurs to me is to use a babel-like solution: make ^ active in
>>> textual context, and define it in terms of Lua functions so that it
>>> may check the following character and apply a conversion on a match:
>>> otherwise, typeset the original two character string.
>> Never do this if you have LuaTeX, it is completely obsolete and causes many issues. If you are sure to run on LuaTeX, do everything in Lua, and avoid catcode changes and the like.
> 
> Indeed, the solution with catcodes would be ok with anything but LuaTeX, and you actually don't need any Lua function.

But making ^ active disables ^^-escapes:

\def\normalcircumflex{^}
\edef\twonormalcircumflexes{\normalcircumflex\normalcircumflex}
\catcode`\^=\active
\def^{\futurelet\next\dotexperanto}
\def\dotexperanto{%
  \ifx\next g%
    \let\next\dodotexperanto
  \else
    \ifx\next^%
      \let\next\twonormalcircumflexes
    \else
      \let\next\normalcircumflex
    \fi
  \fi
  \next
}
\def\dodotexperanto#1{\^#1}
g ^g h
^^J
\bye



From zappathustra at free.fr  Thu Jan  6 22:42:07 2011
From: zappathustra at free.fr (Paul Isambert)
Date: Thu, 06 Jan 2011 22:42:07 +0100
Subject: [luatex] lua script on the run
In-Reply-To: <EA835B30-CC40-4DF4-AEF0-F5FAB2212236@yahoo.de>
References: <AANLkTinfzxT6NdOJx+stfi29j1iHw4jrY_aDMTuyOFBb@mail.gmail.com>
 <9FC32689-4DD9-4A3B-9B92-5E5E729A3E20@yahoo.de> <4D2620A2.8030007@free.fr>
 <EA835B30-CC40-4DF4-AEF0-F5FAB2212236@yahoo.de>
Message-ID: <4D26372F.7010506@free.fr>

Le 06/01/2011 22:23, Philipp Stephani a ?crit :
> Am 06.01.2011 um 21:05 schrieb Paul Isambert:
>
>> Le 06/01/2011 20:50, Philipp Stephani a ?crit :
>>> Am 06.01.2011 um 20:06 schrieb Luis Rivera:
>>>
>>>> "tables and functions". So how would you set a table for the six
>>>> special characters of esperanto (^c, ^g, ^h, ^j, ^s, ^u)?
>>> \catcode`\^=12
>>> \begingroup
>>> \catcode`\%=12
>>> \gdef\percentchar{%}
>>> \endgroup
>>> \directlua{%
>>>    local translate = {
>>>      c = "?",
>>>      g = "?",
>>>      h = "?",
>>>      j = "?",
>>>      s = "?",
>>>      u = "?"
>>>    }
>>>    function texperanto(text)
>>>      result = text:gsub("\percentchar^(\percentchar a)", translate)
>>>      tex.sprint(result)
>>>    end
>>> }
>>> \def\texperanto#1{\directlua{texperanto([[#1]])}}
>>> \input luaotfload.sty
>>> \font\rm={name:DejaVu Sans:}\relax
>>> \rm
>>> \texperanto{^a ^b ^c ^d ^e ^f ^g ^h ^i ^j ^s ^u}
>>> \bye
>>>
>> A small simplification: again, the catcode change for "^" is unnecessary,
> In this example it is necessary because otherwise you get errors (but only because I used ^b and other unmodified sequences to test the functions)
>


Indeed, I didn't see that, sorry.


>>>> What occurs to me is to use a babel-like solution: make ^ active in
>>>> textual context, and define it in terms of Lua functions so that it
>>>> may check the following character and apply a conversion on a match:
>>>> otherwise, typeset the original two character string.
>>> Never do this if you have LuaTeX, it is completely obsolete and causes many issues. If you are sure to run on LuaTeX, do everything in Lua, and avoid catcode changes and the like.
>> Indeed, the solution with catcodes would be ok with anything but LuaTeX, and you actually don't need any Lua function.
> But making ^ active disables ^^-escapes:
>
> \def\normalcircumflex{^}
> \edef\twonormalcircumflexes{\normalcircumflex\normalcircumflex}
> \catcode`\^=\active
> \def^{\futurelet\next\dotexperanto}
> \def\dotexperanto{%
>    \ifx\next g%
>      \let\next\dodotexperanto
>    \else
>      \ifx\next^%
>        \let\next\twonormalcircumflexes
>      \else
>        \let\next\normalcircumflex
>      \fi
>    \fi
>    \next
> }
> \def\dodotexperanto#1{\^#1}
> g ^g h
> ^^J
> \bye

Oh yes, that is a very bad idea to change the catcode of "^" that way. 
What I meant was enclosing it in the \texperanto macro.

Best,
Paul

From t34www at googlemail.com  Thu Jan  6 23:04:45 2011
From: t34www at googlemail.com (T T)
Date: Thu, 6 Jan 2011 22:04:45 +0000
Subject: [luatex] require with kpse loaders
In-Reply-To: <AANLkTintK2r2gE8txgjOfeT_a5xNP-XEJ5kLcx3D5yMy@mail.gmail.com>
References: <AANLkTintK2r2gE8txgjOfeT_a5xNP-XEJ5kLcx3D5yMy@mail.gmail.com>
Message-ID: <AANLkTino=Q_H2NRTA2qXhXng2+aaND2YY2HjY=+A-==J@mail.gmail.com>

On 6 January 2011 17:16, T T <t34www at googlemail.com> wrote:
> Hi,
>
> In the past I used this code:
>
> kpse.set_program_name("texlua")
> master = kpse.var_value('SELFAUTOPARENT')
> package.path = master.."/c?.tlu"
> require("texlive.tlpdb")
>
> to load texmf/scripts/texlive/lua/texlive/tlpdb.tlu module but this is
> not working anymore with kpse loaders.
>
> The following allowed me to bypass kpse loader and use the Lua's built-in one:
>
> master = kpse.new("texlua"):var_value('SELFAUTOPARENT')
> package.path = master.."/texmf/scripts/texlive/lua/?.tlu"
> require("texlive.tlpdb")
>
> but is there a way to make kpse loader find this module?

To answer my own question: kpse doesn't find the file because .tlu
extension is not treated as one of the lua extensions (as in
'-format=lua').

Karl, could we add .tlu to lua extensions in kpathsea?

Cheers,

Tomek

From st_philipp at yahoo.de  Thu Jan  6 23:05:22 2011
From: st_philipp at yahoo.de (Philipp Stephani)
Date: Thu, 6 Jan 2011 23:05:22 +0100
Subject: [luatex] lua script on the run
In-Reply-To: <20110106140012.GA19356@khaled-laptop>
References: <AANLkTi=zbDqmbkKYuTVAuFZuGVeYYyxFBNwkJNzT0ZJa@mail.gmail.com>
 <739AAA1C-6E3F-4297-B142-D481487004D5@yahoo.de> <4D259C68.2060603@gmx.de>
 <20110106121216.GA17980@khaled-laptop>
 <46C21A6F-A28C-4821-93B4-FE7C1F907B2E@yahoo.de>
 <20110106140012.GA19356@khaled-laptop>
Message-ID: <468D2035-0D85-4C21-8BB1-5BF3F6D0B423@yahoo.de>

Am 06.01.2011 um 15:00 schrieb Khaled Hosny:

>> And before you arrive at a node list, TeX will already have complained about ^ outside math mode. Probably a token_filter callback would work better.
> 
> I was not thinking about this particular case, one can use tex-friendly
> transliteration scheme but still need to escape non-textual material
> which makes node list processing appealing. I would have suggested
> token_filter but tex tokens are beyond my understanding.

Sadly, the documentation for the token library is quite incomplete and sometimes incorrect, but finally I got it to work:

\input luatexbase.sty
\input luaotfload.sty
\directlua{%
  local translate = {
    c = "?",
    g = "?",
    h = "?",
    j = "?",
    s = "?",
    u = "?"
  }
  local function get_char_token(char)
    return token.create(unicode.utf8.byte(char))
  end
  local function get_token_char(tok)
    return tok[1] == 11 and unicode.utf8.char(tok[2])
  end
  local circumflex_token = get_char_token("^")
  local function is_circumflex(tok)
    return tok[1] == circumflex_token[1]
       and tok[2] == circumflex_token[2]
       and tok[3] == circumflex_token[3]
  end
  local function in_math_mode()
    local n = tex.nest[tex.nest.ptr]
    return n.mode == 235 or n.mode == -235
  end
  local function texperanto()
    local t = token.get_next()
    if not in_math_mode() and is_circumflex(t) then
      local u = token.get_next()
      local c = get_token_char(u)
      if c then
        local d = translate[c]
        if d then
          return get_char_token(d)
        else
          return {t, u}
        end
      else
        return {t, u}
      end
    else
      return t
    end
  end
  luatexbase.add_to_callback("token_filter", texperanto, "texperanto")
}
\font\rm={name:DejaVu Sans:}\relax
\rm
^c ^g ^h ^j ^s ^u $b^c$
\bye



From khaledhosny at eglug.org  Thu Jan  6 23:18:09 2011
From: khaledhosny at eglug.org (Khaled Hosny)
Date: Fri, 7 Jan 2011 00:18:09 +0200
Subject: [luatex] lua script on the run
In-Reply-To: <468D2035-0D85-4C21-8BB1-5BF3F6D0B423@yahoo.de>
References: <AANLkTi=zbDqmbkKYuTVAuFZuGVeYYyxFBNwkJNzT0ZJa@mail.gmail.com>
 <739AAA1C-6E3F-4297-B142-D481487004D5@yahoo.de>
 <4D259C68.2060603@gmx.de> <20110106121216.GA17980@khaled-laptop>
 <46C21A6F-A28C-4821-93B4-FE7C1F907B2E@yahoo.de>
 <20110106140012.GA19356@khaled-laptop>
 <468D2035-0D85-4C21-8BB1-5BF3F6D0B423@yahoo.de>
Message-ID: <20110106221808.GA6963@khaled-laptop>

On Thu, Jan 06, 2011 at 11:05:22PM +0100, Philipp Stephani wrote:
> Am 06.01.2011 um 15:00 schrieb Khaled Hosny:
> 
> >> And before you arrive at a node list, TeX will already have complained about ^ outside math mode. Probably a token_filter callback would work better.
> > 
> > I was not thinking about this particular case, one can use tex-friendly
> > transliteration scheme but still need to escape non-textual material
> > which makes node list processing appealing. I would have suggested
> > token_filter but tex tokens are beyond my understanding.
> 
> Sadly, the documentation for the token library is quite incomplete and sometimes incorrect, but finally I got it to work:

Very interesting, I didn't run, but very "educational" example, now I
feel recovering from my tekenophobia :)

Regards,
 Khaled

-- 
 Khaled Hosny
 Arabic localiser and member of Arabeyes.org team
 Free font developer

From jlrn77 at gmail.com  Thu Jan  6 23:25:35 2011
From: jlrn77 at gmail.com (Luis Rivera)
Date: Thu, 6 Jan 2011 16:25:35 -0600
Subject: [luatex] lua script on the run
In-Reply-To: <468D2035-0D85-4C21-8BB1-5BF3F6D0B423@yahoo.de>
References: <AANLkTi=zbDqmbkKYuTVAuFZuGVeYYyxFBNwkJNzT0ZJa@mail.gmail.com>
 <739AAA1C-6E3F-4297-B142-D481487004D5@yahoo.de>
 <4D259C68.2060603@gmx.de> <20110106121216.GA17980@khaled-laptop>
 <46C21A6F-A28C-4821-93B4-FE7C1F907B2E@yahoo.de>
 <20110106140012.GA19356@khaled-laptop>
 <468D2035-0D85-4C21-8BB1-5BF3F6D0B423@yahoo.de>
Message-ID: <AANLkTi=u_n_efgaBAQ3iGB4CWR9OP2rC0P87c58biHka@mail.gmail.com>

On 6 January 2011 16:05, Philipp Stephani <st_philipp at yahoo.de> wrote:
> Am 06.01.2011 um 15:00 schrieb Khaled Hosny:
>
>>> And before you arrive at a node list, TeX will already have complained about ^ outside math mode. Probably a token_filter callback would work better.
>>
>> I was not thinking about this particular case, one can use tex-friendly
>> transliteration scheme but still need to escape non-textual material
>> which makes node list processing appealing. I would have suggested
>> token_filter but tex tokens are beyond my understanding.
>
> Sadly, the documentation for the token library is quite incomplete and sometimes incorrect, but finally I got it to work:
>
> \input luatexbase.sty
> \input luaotfload.sty
> \directlua{%
> ?[...]
> }
> \font\rm={name:DejaVu Sans:}\relax
> \rm
> ^c ^g ^h ^j ^s ^u $b^c$
> \bye
>

1. If I were to store the macro in a style sheet (texperanto.sty), I'd
probably remove the call to luaotfload, right? This call is only
necessary to make the sample run right. In that case the sample file
would simply be

\input texperanto.sty
\input luaotfload.sty
\font\rm={name:DejaVu Sans:}\relax
\rm
^c ^g ^h ^j ^s ^u $b^c$
\bye

And this code takes care of the case where the substitution is global;
i.e. when we do not call a macro \texperanto.

2. That still leaves aside the case where the call for the macro
\texperanto makes all changes local to the group.

By these examples I am even getting a grasp at the syntax for
intertwining TeX and Lua code. Thanks a lot.

-- 
Luis Rivera
O< http://www.asciiribbon.org/ campaign


From karl at freefriends.org  Thu Jan  6 23:38:32 2011
From: karl at freefriends.org (Karl Berry)
Date: Thu, 6 Jan 2011 22:38:32 GMT
Subject: [luatex] require with kpse loaders
In-Reply-To: <AANLkTino=Q_H2NRTA2qXhXng2+aaND2YY2HjY=+A-==J@mail.gmail.com>
Message-ID: <201101062238.p06McWKM012620@freefriends.org>

    Karl, could we add .tlu to lua extensions in kpathsea?

Done.  (I remember doing this once before.  Odd.)

From st_philipp at yahoo.de  Thu Jan  6 23:41:56 2011
From: st_philipp at yahoo.de (Philipp Stephani)
Date: Thu, 6 Jan 2011 23:41:56 +0100
Subject: [luatex] lua script on the run
In-Reply-To: <AANLkTi=u_n_efgaBAQ3iGB4CWR9OP2rC0P87c58biHka@mail.gmail.com>
References: <AANLkTi=zbDqmbkKYuTVAuFZuGVeYYyxFBNwkJNzT0ZJa@mail.gmail.com>
 <739AAA1C-6E3F-4297-B142-D481487004D5@yahoo.de> <4D259C68.2060603@gmx.de>
 <20110106121216.GA17980@khaled-laptop>
 <46C21A6F-A28C-4821-93B4-FE7C1F907B2E@yahoo.de>
 <20110106140012.GA19356@khaled-laptop>
 <468D2035-0D85-4C21-8BB1-5BF3F6D0B423@yahoo.de>
 <AANLkTi=u_n_efgaBAQ3iGB4CWR9OP2rC0P87c58biHka@mail.gmail.com>
Message-ID: <5FEDB889-20E1-4221-A017-93BE085221DA@yahoo.de>

Am 06.01.2011 um 23:25 schrieb Luis Rivera:

> 1. If I were to store the macro in a style sheet (texperanto.sty), I'd
> probably remove the call to luaotfload, right?

And add lots of other non-functional code whose sole purpose is to make the file robust and format-independent. See luaotfload.sty or most Heiko packages for good examples (I think these are mostly auto-generated).

> This call is only
> necessary to make the sample run right. In that case the sample file
> would simply be
> 
> \input texperanto.sty
> \input luaotfload.sty
> \font\rm={name:DejaVu Sans:}\relax
> \rm
> ^c ^g ^h ^j ^s ^u $b^c$
> \bye
> 
> And this code takes care of the case where the substitution is global;
> i.e. when we do not call a macro \texperanto.
> 
> 2. That still leaves aside the case where the call for the macro
> \texperanto makes all changes local to the group.

You could define a macro pair \starttexperanto/\stoptexperanto that enable/disable the callback.

From t34www at googlemail.com  Fri Jan  7 00:36:02 2011
From: t34www at googlemail.com (T T)
Date: Thu, 6 Jan 2011 23:36:02 +0000
Subject: [luatex] require with kpse loaders
In-Reply-To: <201101062238.p06McWKM012620@freefriends.org>
References: <AANLkTino=Q_H2NRTA2qXhXng2+aaND2YY2HjY=+A-==J@mail.gmail.com>
 <201101062238.p06McWKM012620@freefriends.org>
Message-ID: <AANLkTi=sYXqxyHjsJTtGd4cstaB13-0ak6f5QQhM-dcG@mail.gmail.com>

On 6 January 2011 22:38, Karl Berry <karl at freefriends.org> wrote:
> ? ?Karl, could we add .tlu to lua extensions in kpathsea?
>
> Done. ?(I remember doing this once before. ?Odd.)

Yeah, I vaguely remember some discussion about it, but maybe it it
just didn't happen.  Anyway, thanks.

Cheers,

Tomek


From jlrn77 at gmail.com  Fri Jan  7 01:27:22 2011
From: jlrn77 at gmail.com (Luis Rivera)
Date: Thu, 6 Jan 2011 18:27:22 -0600
Subject: [luatex] lua script on the run
In-Reply-To: <5FEDB889-20E1-4221-A017-93BE085221DA@yahoo.de>
References: <AANLkTi=zbDqmbkKYuTVAuFZuGVeYYyxFBNwkJNzT0ZJa@mail.gmail.com>
 <739AAA1C-6E3F-4297-B142-D481487004D5@yahoo.de>
 <4D259C68.2060603@gmx.de> <20110106121216.GA17980@khaled-laptop>
 <46C21A6F-A28C-4821-93B4-FE7C1F907B2E@yahoo.de>
 <20110106140012.GA19356@khaled-laptop>
 <468D2035-0D85-4C21-8BB1-5BF3F6D0B423@yahoo.de>
 <AANLkTi=u_n_efgaBAQ3iGB4CWR9OP2rC0P87c58biHka@mail.gmail.com>
 <5FEDB889-20E1-4221-A017-93BE085221DA@yahoo.de>
Message-ID: <AANLkTi=sFOR3vhy2On1pMX+yvTNL83jSP7ruPzr8ZT5K@mail.gmail.com>

On 6 January 2011 16:41, Philipp Stephani <st_philipp at yahoo.de> wrote:
> Am 06.01.2011 um 23:25 schrieb Luis Rivera:
>
>> 1. If I were to store the macro in a style sheet (texperanto.sty), I'd
>> probably remove the call to luaotfload, right?
>
> And add lots of other non-functional code whose sole purpose is to make the file robust and format-independent. See luaotfload.sty or most Heiko packages for good examples (I think these are mostly auto-generated).
>

So perhaps luaotfload.sty does more tricks than simply loading otf
fonts... I'll skim through those packages some time later. Thanks.

>
>> 2. That still leaves aside the case where the call for the macro
>> \texperanto makes all changes local to the group.
>
> You could define a macro pair \starttexperanto/\stoptexperanto that enable/disable the callback.
>

This seems to be ConTeXt's way to handle it (\start&\stop<language>),
afaict. Defining \texperanto and \endtexperanto would do the trick for
LaTeX, if I want to use an environment.

I still have to figure out how to tie this to polyglossia, to get the
right hyphenation and captions; but that's another matter.

Thanks,

-- 
Luis Rivera
O< http://www.asciiribbon.org/ campaign

From arthur.reutenauer at normalesup.org  Fri Jan  7 01:49:22 2011
From: arthur.reutenauer at normalesup.org (Arthur Reutenauer)
Date: Fri, 7 Jan 2011 00:49:22 +0000
Subject: [luatex] lua script on the run
In-Reply-To: <AANLkTi=sFOR3vhy2On1pMX+yvTNL83jSP7ruPzr8ZT5K@mail.gmail.com>
References: <AANLkTi=zbDqmbkKYuTVAuFZuGVeYYyxFBNwkJNzT0ZJa@mail.gmail.com>
 <739AAA1C-6E3F-4297-B142-D481487004D5@yahoo.de> <4D259C68.2060603@gmx.de>
 <20110106121216.GA17980@khaled-laptop>
 <46C21A6F-A28C-4821-93B4-FE7C1F907B2E@yahoo.de>
 <20110106140012.GA19356@khaled-laptop>
 <468D2035-0D85-4C21-8BB1-5BF3F6D0B423@yahoo.de>
 <AANLkTi=u_n_efgaBAQ3iGB4CWR9OP2rC0P87c58biHka@mail.gmail.com>
 <5FEDB889-20E1-4221-A017-93BE085221DA@yahoo.de>
 <AANLkTi=sFOR3vhy2On1pMX+yvTNL83jSP7ruPzr8ZT5K@mail.gmail.com>
Message-ID: <20110107004922.GF11457@phare.normalesup.org>

> So perhaps luaotfload.sty does more tricks than simply loading otf
> fonts...

  That's not what Philipp meant: he hinted that there were some
guidelines to write a robust LaTeX package, which luaotfload.sty
follows, amongst many others.

>         Defining \texperanto and \endtexperanto would do the trick for
> LaTeX, if I want to use an environment.

  It's rather the other way round: if you define an environment in LaTeX
(with \newenvironment), LaTeX defines two new commands, \<environment>
and \new<environment>, for you.  There are several advantages over
defining them yourself, for example that LaTeX checks that a
\begin{<environment>} are matched with \end{<environment>}, and that's
what you should use in a package.

	Arthur

From martin at oneiros.de  Fri Jan  7 10:08:09 2011
From: martin at oneiros.de (=?ISO-8859-1?Q?Martin_Schr=F6der?=)
Date: Fri, 7 Jan 2011 10:08:09 +0100
Subject: [luatex] lua script on the run
In-Reply-To: <468D2035-0D85-4C21-8BB1-5BF3F6D0B423@yahoo.de>
References: <AANLkTi=zbDqmbkKYuTVAuFZuGVeYYyxFBNwkJNzT0ZJa@mail.gmail.com>
 <739AAA1C-6E3F-4297-B142-D481487004D5@yahoo.de>
 <4D259C68.2060603@gmx.de> <20110106121216.GA17980@khaled-laptop>
 <46C21A6F-A28C-4821-93B4-FE7C1F907B2E@yahoo.de>
 <20110106140012.GA19356@khaled-laptop>
 <468D2035-0D85-4C21-8BB1-5BF3F6D0B423@yahoo.de>
Message-ID: <AANLkTik157xm51=7=0W4-AKR3QfW5oeXEZmoc0H=Kiqn@mail.gmail.com>

2011/1/6 Philipp Stephani <st_philipp at yahoo.de>:
> Sadly, the documentation for the token library is quite incomplete and sometimes incorrect, but finally I got it to work:

Patches are welcome. :-)

Best
   Martin

From st_philipp at yahoo.de  Fri Jan  7 11:38:26 2011
From: st_philipp at yahoo.de (Philipp Stephani)
Date: Fri, 7 Jan 2011 11:38:26 +0100
Subject: [luatex] lua script on the run
In-Reply-To: <AANLkTi=sFOR3vhy2On1pMX+yvTNL83jSP7ruPzr8ZT5K@mail.gmail.com>
References: <AANLkTi=zbDqmbkKYuTVAuFZuGVeYYyxFBNwkJNzT0ZJa@mail.gmail.com>
 <739AAA1C-6E3F-4297-B142-D481487004D5@yahoo.de> <4D259C68.2060603@gmx.de>
 <20110106121216.GA17980@khaled-laptop>
 <46C21A6F-A28C-4821-93B4-FE7C1F907B2E@yahoo.de>
 <20110106140012.GA19356@khaled-laptop>
 <468D2035-0D85-4C21-8BB1-5BF3F6D0B423@yahoo.de>
 <AANLkTi=u_n_efgaBAQ3iGB4CWR9OP2rC0P87c58biHka@mail.gmail.com>
 <5FEDB889-20E1-4221-A017-93BE085221DA@yahoo.de>
 <AANLkTi=sFOR3vhy2On1pMX+yvTNL83jSP7ruPzr8ZT5K@mail.gmail.com>
Message-ID: <2C7CE096-FB07-4E8F-81A1-ED3C8306A0AE@yahoo.de>


Am 07.01.2011 um 01:27 schrieb Luis Rivera:

> On 6 January 2011 16:41, Philipp Stephani <st_philipp at yahoo.de> wrote:
>> Am 06.01.2011 um 23:25 schrieb Luis Rivera:
>> 
>>> 1. If I were to store the macro in a style sheet (texperanto.sty), I'd
>>> probably remove the call to luaotfload, right?
>> 
>> And add lots of other non-functional code whose sole purpose is to make the file robust and format-independent. See luaotfload.sty or most Heiko packages for good examples (I think these are mostly auto-generated).
>> 
> 
> So perhaps luaotfload.sty does more tricks than simply loading otf
> fonts...

There is nothing simple about loading OTF fonts; luaotfload contains more than 10000 lines of code.
But what I mean with making the file robust is protection against catcode changes, using LaTeX if it's available, disabling loading the file twice, and so on.

>>> 2. That still leaves aside the case where the call for the macro
>>> \texperanto makes all changes local to the group.
>> 
>> You could define a macro pair \starttexperanto/\stoptexperanto that enable/disable the callback.
>> 
> 
> This seems to be ConTeXt's way to handle it (\start&\stop<language>),
> afaict. Defining \texperanto and \endtexperanto would do the trick for
> LaTeX, if I want to use an environment.

Yes, but languages have little to do with input any more once you use Unicode.

> I still have to figure out how to tie this to polyglossia, to get the
> right hyphenation and captions; but that's another matter.

polyglossia requires XeLaTeX, it doesn't work with plain LuaTeX or LuaLaTeX.

BTW, you should _not_ do something like replacing ^c by ?. If you want ?, type ?. Use a keyboard layout that contains that character, an input method, or some auto-correction function of your text editor, but don't transform text while processing. This is true no matter whether you write text files, HTML, TeX, or whatever. Babel-like shorthands are completely obsoleted by Unicode and cause more problems than they solve.

From st_philipp at yahoo.de  Fri Jan  7 11:42:23 2011
From: st_philipp at yahoo.de (Philipp Stephani)
Date: Fri, 7 Jan 2011 11:42:23 +0100
Subject: [luatex] lua script on the run
In-Reply-To: <20110107004922.GF11457@phare.normalesup.org>
References: <AANLkTi=zbDqmbkKYuTVAuFZuGVeYYyxFBNwkJNzT0ZJa@mail.gmail.com>
 <739AAA1C-6E3F-4297-B142-D481487004D5@yahoo.de> <4D259C68.2060603@gmx.de>
 <20110106121216.GA17980@khaled-laptop>
 <46C21A6F-A28C-4821-93B4-FE7C1F907B2E@yahoo.de>
 <20110106140012.GA19356@khaled-laptop>
 <468D2035-0D85-4C21-8BB1-5BF3F6D0B423@yahoo.de>
 <AANLkTi=u_n_efgaBAQ3iGB4CWR9OP2rC0P87c58biHka@mail.gmail.com>
 <5FEDB889-20E1-4221-A017-93BE085221DA@yahoo.de>
 <AANLkTi=sFOR3vhy2On1pMX+yvTNL83jSP7ruPzr8ZT5K@mail.gmail.com>
 <20110107004922.GF11457@phare.normalesup.org>
Message-ID: <D1966645-7E7A-4E0E-A19A-C4CEB8473F31@yahoo.de>


Am 07.01.2011 um 01:49 schrieb Arthur Reutenauer:

>> So perhaps luaotfload.sty does more tricks than simply loading otf
>> fonts...
> 
>  That's not what Philipp meant: he hinted that there were some
> guidelines to write a robust LaTeX package, which luaotfload.sty
> follows, amongst many others.

As far as I understood, he doesn't want to write a LaTeX package. The packages I mentioned (oberdiek bundle, luatexbase?) are true LaTeX packages *and* at the same time usable from plain TeX, which comes at the price that you have to include lots of code to defend against "unfriendly" contexts: for example, in plain TeX you have no protection against loading a package twice, and you have no guarantees about catcodes.

> 
>>        Defining \texperanto and \endtexperanto would do the trick for
>> LaTeX, if I want to use an environment.
> 
>  It's rather the other way round: if you define an environment in LaTeX
> (with \newenvironment), LaTeX defines two new commands, \<environment>
> and \new<environment>, for you.  There are several advantages over
> defining them yourself, for example that LaTeX checks that a
> \begin{<environment>} are matched with \end{<environment>}, and that's
> what you should use in a package.

LaTeX always checks that, no matter how the environment commands are defined. In fact, most (all?) environments from the kernel are defined via
\def\X{...}
\def\endX{...}
and not via \newenvironment.

From patrick at gundla.ch  Fri Jan  7 12:02:59 2011
From: patrick at gundla.ch (Patrick Gundlach)
Date: Fri, 7 Jan 2011 12:02:59 +0100
Subject: [luatex] lua script on the run
In-Reply-To: <2C7CE096-FB07-4E8F-81A1-ED3C8306A0AE@yahoo.de>
References: <AANLkTi=zbDqmbkKYuTVAuFZuGVeYYyxFBNwkJNzT0ZJa@mail.gmail.com>
 <739AAA1C-6E3F-4297-B142-D481487004D5@yahoo.de> <4D259C68.2060603@gmx.de>
 <20110106121216.GA17980@khaled-laptop>
 <46C21A6F-A28C-4821-93B4-FE7C1F907B2E@yahoo.de>
 <20110106140012.GA19356@khaled-laptop>
 <468D2035-0D85-4C21-8BB1-5BF3F6D0B423@yahoo.de>
 <AANLkTi=u_n_efgaBAQ3iGB4CWR9OP2rC0P87c58biHka@mail.gmail.com>
 <5FEDB889-20E1-4221-A017-93BE085221DA@yahoo.de>
 <AANLkTi=sFOR3vhy2On1pMX+yvTNL83jSP7ruPzr8ZT5K@mail.gmail.com>
 <2C7CE096-FB07-4E8F-81A1-ED3C8306A0AE@yahoo.de>
Message-ID: <C40E6378-31E7-48A4-8261-40DDA8D15FAB@gundla.ch>


> 
> There is nothing simple about loading OTF fonts; luaotfload contains more than 10000 lines of code.

You can get basic OTF (and truetype, type1) loading with 100 lines of code. See the luatex wiki. This doesn't handle all the fine points of arabic, though.


Patrick



From st_philipp at yahoo.de  Fri Jan  7 12:51:16 2011
From: st_philipp at yahoo.de (Philipp Stephani)
Date: Fri, 7 Jan 2011 12:51:16 +0100
Subject: [luatex] lua script on the run
In-Reply-To: <AANLkTik157xm51=7=0W4-AKR3QfW5oeXEZmoc0H=Kiqn@mail.gmail.com>
References: <AANLkTi=zbDqmbkKYuTVAuFZuGVeYYyxFBNwkJNzT0ZJa@mail.gmail.com>
 <739AAA1C-6E3F-4297-B142-D481487004D5@yahoo.de> <4D259C68.2060603@gmx.de>
 <20110106121216.GA17980@khaled-laptop>
 <46C21A6F-A28C-4821-93B4-FE7C1F907B2E@yahoo.de>
 <20110106140012.GA19356@khaled-laptop>
 <468D2035-0D85-4C21-8BB1-5BF3F6D0B423@yahoo.de>
 <AANLkTik157xm51=7=0W4-AKR3QfW5oeXEZmoc0H=Kiqn@mail.gmail.com>
Message-ID: <5BCA84D7-0715-4941-87CF-62D94555CF65@yahoo.de>


Am 07.01.2011 um 10:08 schrieb Martin Schr?der:

> 2011/1/6 Philipp Stephani <st_philipp at yahoo.de>:
>> Sadly, the documentation for the token library is quite incomplete and sometimes incorrect, but finally I got it to work:
> 
> Patches are welcome. :-)

- token.get_next() removes the next token, which is not documented
- there is no function to peek ahead without removing the next token
- the meaning of the entries of the token tables is undocumented
- the documented values for the "mode" key in the semantic nest level tables are wrong:

\def\printmode#1{%
  \directlua{%
    tex.sprint(tostring(tex.nest[tex.nest.ptr].mode) .. [[ #1]])
  }%
}

\printmode{= 1 = vertical} % print 1, correct

\vbox{
  \printmode{= -1 = internal vertical} % prints -1, correct
}

a \printmode{= 127 = horizontal} % prints 118

\hbox{
  \printmode{= -127 = restricted horizontal} % prints -118
}

$$
\printmode{= 253 = display math} % prints 235
$$

$
\printmode{= -253 = inline math} % prints -235
$

\bye

Please use symbolic constants instead of magic numbers for such things. TeX has already too many magic numbers, and this unfortunate tradition should not continue.


From reinhard.kotucha at web.de  Fri Jan  7 13:18:06 2011
From: reinhard.kotucha at web.de (Reinhard Kotucha)
Date: Fri, 7 Jan 2011 13:18:06 +0100
Subject: [luatex] lua script on the run
In-Reply-To: <2C7CE096-FB07-4E8F-81A1-ED3C8306A0AE@yahoo.de>
References: <AANLkTi=zbDqmbkKYuTVAuFZuGVeYYyxFBNwkJNzT0ZJa@mail.gmail.com>
 <739AAA1C-6E3F-4297-B142-D481487004D5@yahoo.de>
 <4D259C68.2060603@gmx.de> <20110106121216.GA17980@khaled-laptop>
 <46C21A6F-A28C-4821-93B4-FE7C1F907B2E@yahoo.de>
 <20110106140012.GA19356@khaled-laptop>
 <468D2035-0D85-4C21-8BB1-5BF3F6D0B423@yahoo.de>
 <AANLkTi=u_n_efgaBAQ3iGB4CWR9OP2rC0P87c58biHka@mail.gmail.com>
 <5FEDB889-20E1-4221-A017-93BE085221DA@yahoo.de>
 <AANLkTi=sFOR3vhy2On1pMX+yvTNL83jSP7ruPzr8ZT5K@mail.gmail.com>
 <2C7CE096-FB07-4E8F-81A1-ED3C8306A0AE@yahoo.de>
Message-ID: <19751.1150.679872.989637@zaphod.ms25.net>

On 7 January 2011 Philipp Stephani wrote:

 > > This seems to be ConTeXt's way to handle it
 > > (\start&\stop<language>), afaict. Defining \texperanto and
 > > \endtexperanto would do the trick for LaTeX, if I want to use an
 > > environment.
 > 
 > Yes, but languages have little to do with input any more once you
 > use Unicode.

This thread isn't about input *encodings* but input *methods*.  The
latter are not supported by Unicode.  They are usually handled by text
editors, but consider the following example:
 
\begin{texperanto}
Alportu ^caron de sopiro!
\end{texperanto}

\begin{VIQR} % http://tools.ietf.org/html/rfc1456
Tie^'ng Vie^.t
\end{VIQR}

Input methods are more related to scripts rather than to languages.
One can probably use the same input method for Russian and Ukrainian,
though both languages need different hyphenation patterns.

However, in the case discussed here, Unicode is only used by LuaTeX
internally.  The usual way to do such things is to select a proper
input method in the text editor in order to create a TeX input file
which is in UTF-8 already *before* it's fed to TeX.  

But programming things like this in LuaTeX is a nice exercise though.

Regards,
  Reinhard

-- 
----------------------------------------------------------------------------
Reinhard Kotucha                                      Phone: +49-511-3373112
Marschnerstr. 25
D-30167 Hannover                              mailto:reinhard.kotucha at web.de
----------------------------------------------------------------------------
Microsoft isn't the answer. Microsoft is the question, and the answer is NO.
----------------------------------------------------------------------------

From arthur.reutenauer at normalesup.org  Fri Jan  7 13:19:13 2011
From: arthur.reutenauer at normalesup.org (Arthur Reutenauer)
Date: Fri, 7 Jan 2011 12:19:13 +0000
Subject: [luatex] lua script on the run
In-Reply-To: <C40E6378-31E7-48A4-8261-40DDA8D15FAB@gundla.ch>
References: <4D259C68.2060603@gmx.de> <20110106121216.GA17980@khaled-laptop>
 <46C21A6F-A28C-4821-93B4-FE7C1F907B2E@yahoo.de>
 <20110106140012.GA19356@khaled-laptop>
 <468D2035-0D85-4C21-8BB1-5BF3F6D0B423@yahoo.de>
 <AANLkTi=u_n_efgaBAQ3iGB4CWR9OP2rC0P87c58biHka@mail.gmail.com>
 <5FEDB889-20E1-4221-A017-93BE085221DA@yahoo.de>
 <AANLkTi=sFOR3vhy2On1pMX+yvTNL83jSP7ruPzr8ZT5K@mail.gmail.com>
 <2C7CE096-FB07-4E8F-81A1-ED3C8306A0AE@yahoo.de>
 <C40E6378-31E7-48A4-8261-40DDA8D15FAB@gundla.ch>
Message-ID: <20110107121913.GA22985@phare.normalesup.org>

> You can get basic OTF (and truetype, type1) loading with 100 lines of code. See the luatex wiki. This doesn't handle all the fine points of arabic, though.

  It doesn't handle Arabic at all :-)  Although I later improved the
code to do some basic shaping (see http://code.google.com/p/mingyue/).
But given the lack of interest in the actual code (compared to the
number of people who reportedly used it), I lost interest in working on
it.

	Arthur

From taco at elvenkind.com  Fri Jan  7 13:30:13 2011
From: taco at elvenkind.com (Taco Hoekwater)
Date: Fri, 07 Jan 2011 13:30:13 +0100
Subject: [luatex] lua script on the run
In-Reply-To: <5BCA84D7-0715-4941-87CF-62D94555CF65@yahoo.de>
References: <AANLkTi=zbDqmbkKYuTVAuFZuGVeYYyxFBNwkJNzT0ZJa@mail.gmail.com>
 <739AAA1C-6E3F-4297-B142-D481487004D5@yahoo.de> <4D259C68.2060603@gmx.de>
 <20110106121216.GA17980@khaled-laptop>
 <46C21A6F-A28C-4821-93B4-FE7C1F907B2E@yahoo.de>
 <20110106140012.GA19356@khaled-laptop>
 <468D2035-0D85-4C21-8BB1-5BF3F6D0B423@yahoo.de>
 <AANLkTik157xm51=7=0W4-AKR3QfW5oeXEZmoc0H=Kiqn@mail.gmail.com>
 <5BCA84D7-0715-4941-87CF-62D94555CF65@yahoo.de>
Message-ID: <4D270755.8000102@elvenkind.com>

On 01/07/2011 12:51 PM, Philipp Stephani wrote:
>
> Am 07.01.2011 um 10:08 schrieb Martin Schr?der:
>
>> 2011/1/6 Philipp Stephani<st_philipp at yahoo.de>:
>>> Sadly, the documentation for the token library is quite incomplete and sometimes incorrect, but finally I got it to work:
>>
>> Patches are welcome. :-)

See http://tracker.luatex.org/view.php?id=551 on the documentation
issues

> - there is no function to peek ahead without removing the next token

That cannot reasonably be done, because just looking for the next token
can have side-effects that alter the input stream as well as the
internal engine state. Also (\h)alignment state and grouping levels
are automatically affected, for example.

Best wishes,
Taco

From luatex at nililand.de  Fri Jan  7 14:17:57 2011
From: luatex at nililand.de (Ulrike Fischer)
Date: Fri, 7 Jan 2011 14:17:57 +0100
Subject: [luatex] lua script on the run
References: <AANLkTi=zbDqmbkKYuTVAuFZuGVeYYyxFBNwkJNzT0ZJa@mail.gmail.com>
 <739AAA1C-6E3F-4297-B142-D481487004D5@yahoo.de> <4D259C68.2060603@gmx.de>
 <20110106121216.GA17980@khaled-laptop>
 <46C21A6F-A28C-4821-93B4-FE7C1F907B2E@yahoo.de>
 <20110106140012.GA19356@khaled-laptop>
 <468D2035-0D85-4C21-8BB1-5BF3F6D0B423@yahoo.de>
 <AANLkTi=u_n_efgaBAQ3iGB4CWR9OP2rC0P87c58biHka@mail.gmail.com>
 <5FEDB889-20E1-4221-A017-93BE085221DA@yahoo.de>
 <AANLkTi=sFOR3vhy2On1pMX+yvTNL83jSP7ruPzr8ZT5K@mail.gmail.com>
 <2C7CE096-FB07-4E8F-81A1-ED3C8306A0AE@yahoo.de>
Message-ID: <1kczv0eo5vm88.dlg@nililand.de>

Am Fri, 7 Jan 2011 11:38:26 +0100 schrieb Philipp Stephani:

> BTW, you should _not_ do something like replacing ^c by ?. If you
> want ?, type ?. Use a keyboard layout that contains that
> character, an input method, or some auto-correction function of
> your text editor, but don't transform text while processing.

In general I agree, but there are some cases where I prefer not to
input the real char. -- and --- are such cases. Even if ? and ?
where easier to input on my keyboard: I have difficulties to
distinguish -, ? and ? in my editor(s). 

Btw: I think this type of "fake ligatures" (-- to ?) could be used
for the translation discussed here. One would naturally have to
enable ^ in text mode (along the way _ is enable with
underscore.sty). The translation could then be enabled by font
switches.


-- 
Ulrike Fischer 


From jlrn77 at gmail.com  Fri Jan  7 18:31:48 2011
From: jlrn77 at gmail.com (Luis Rivera)
Date: Fri, 7 Jan 2011 11:31:48 -0600
Subject: [luatex] lua transliterations on the fly
Message-ID: <AANLkTin-3BTcy8kEX9Si37brsbFnHidj-tnMK7S6t=HG@mail.gmail.com>

On 7 January 2011 04:38, Philipp Stephani <st_philipp at yahoo.de> wrote:
>
> There is nothing simple about loading OTF fonts; luaotfload contains more than 10000 lines of code.
> But what I mean with making the file robust is protection against catcode changes, using LaTeX if it's available, disabling loading the file twice, and so on.
>

OK. So it really seems that full portability among formats comes at a
cost. Thanks.

Having that in mind, I shall try to get a LaTeX package working before
trying to make it portable to Plain.

>
> languages have little to do with input any more once you use Unicode.
>

... save activating the right hyphenation patterns for a given
language which may share the same script with other languages (e.g.
the full range of languages using latin or cyrillic alphabets).

>
> polyglossia requires XeLaTeX, it doesn't work with plain LuaTeX or LuaLaTeX.
>

Roger that. I will write a note to Manuel Pegourie-Gonnard, since the
Guide to LuaLaTeX does not mention that.

> BTW, you should _not_ do something like replacing ^c by ?. If you want ?, type ?. Use a keyboard layout that contains that character, an input method, or some auto-correction function of your text editor, but don't transform text while processing. This is true no matter whether you write text files, HTML, TeX, or whatever. Babel-like shorthands are completely obsoleted by Unicode and cause more problems than they solve.
>

?don't transform text while processing? is a Best Practice principle;
I am aware I am exploring an awkward way to achieve the same effect.
My guess is that with a embedded Lua routine it is actually doable
with LuaTeX. It seems that I am not very wrong.

Cheers,

-- 
Luis Rivera
O< http://www.asciiribbon.org/ campaign


From jlrn77 at gmail.com  Fri Jan  7 19:16:50 2011
From: jlrn77 at gmail.com (Luis Rivera)
Date: Fri, 7 Jan 2011 12:16:50 -0600
Subject: [luatex] lua transliterations on the fly
Message-ID: <AANLkTimBekvc1LaOwDg=H5QdbQVkM=xBNfPFE4Q2pspb@mail.gmail.com>

On 7 January 2011 07:17, Ulrike Fischer <luatex at nililand.de> wrote:
> Am Fri, 7 Jan 2011 11:38:26 +0100 schrieb Philipp Stephani:
>
>> BTW, you should _not_ do something like replacing ^c by ?. If you
>> want ?, type ?. Use a keyboard layout that contains that
>> character, an input method, or some auto-correction function of
>> your text editor, but don't transform text while processing.
>
> In general I agree, but there are some cases where I prefer not to
> input the real char. -- and --- are such cases. Even if ? and ?
> where easier to input on my keyboard: I have difficulties to
> distinguish -, ? and ? in my editor(s).
>
> Btw: I think this type of "fake ligatures" (-- to ?) could be used
> for the translation discussed here. One would naturally have to
> enable ^ in text mode (along the way _ is enable with
> underscore.sty). The translation could then be enabled by font
> switches.
>

The Greek input encoding in cbgreek, lfb and ibycus fonts use the
ligature system from Metafont to implement the transliterations; a
similar approach is done with the virtual fonts of bgreek: so I am
very keen on understanding how ligatures work in LuaTeX. A reference
to a primer on this subject is surely welcome.

Thanks,

-- 
Luis Rivera
O< http://www.asciiribbon.org/ campaign


From zappathustra at free.fr  Fri Jan  7 20:18:05 2011
From: zappathustra at free.fr (Paul Isambert)
Date: Fri, 07 Jan 2011 20:18:05 +0100
Subject: [luatex] lua transliterations on the fly
In-Reply-To: <AANLkTimBekvc1LaOwDg=H5QdbQVkM=xBNfPFE4Q2pspb@mail.gmail.com>
References: <AANLkTimBekvc1LaOwDg=H5QdbQVkM=xBNfPFE4Q2pspb@mail.gmail.com>
Message-ID: <4D2766ED.3020403@free.fr>

Le 07/01/2011 19:16, Luis Rivera a ?crit :
> On 7 January 2011 07:17, Ulrike Fischer<luatex at nililand.de>  wrote:
>> Am Fri, 7 Jan 2011 11:38:26 +0100 schrieb Philipp Stephani:
>>
>>> BTW, you should _not_ do something like replacing ^c by ?. If you
>>> want ?, type ?. Use a keyboard layout that contains that
>>> character, an input method, or some auto-correction function of
>>> your text editor, but don't transform text while processing.
>> In general I agree, but there are some cases where I prefer not to
>> input the real char. -- and --- are such cases. Even if ? and ?
>> where easier to input on my keyboard: I have difficulties to
>> distinguish -, ? and ? in my editor(s).
>>
>> Btw: I think this type of "fake ligatures" (-- to ?) could be used
>> for the translation discussed here. One would naturally have to
>> enable ^ in text mode (along the way _ is enable with
>> underscore.sty). The translation could then be enabled by font
>> switches.
>>
> The Greek input encoding in cbgreek, lfb and ibycus fonts use the
> ligature system from Metafont to implement the transliterations; a
> similar approach is done with the virtual fonts of bgreek: so I am
> very keen on understanding how ligatures work in LuaTeX. A reference
> to a primer on this subject is surely welcome.

Ligatures work roughly like in TeX, i.e. chars have a ``ligatures'' 
field (see for instance pages 145-6 or the manual), which triggers a 
ligature if they're followed by the right glyph. And the only way to 
control that is to control font creation, where the field is defined 
(i.e. when you load a font you have to define a ``ligatures'' field for 
"^", etc.). That can't be done after the font has been loaded; I don't 
know if the latter restriction is definitive or if LuaTeX will perhaps 
someday evolves to allow font tweaking in real-time (that'd be nice e.g. 
to switch between number styles).

Another (probably simpler) approach is to use a callback, most likely 
the "hyphenate" callback (so hyphenation can be properly done 
thereafter), spot all "^" glyphs and replace them according to the glyph 
that follows. That's handmade ligature, so to speak.

Best,
Paul



From jlrn77 at gmail.com  Fri Jan  7 20:27:28 2011
From: jlrn77 at gmail.com (Luis Rivera)
Date: Fri, 7 Jan 2011 13:27:28 -0600
Subject: [luatex] The LuaTeXbook
Message-ID: <AANLkTim61V035UhS=L0J9OoQJNczXpmWSwoNtJ-99A_d@mail.gmail.com>

What about a "LuaTeX for the Impatient"? Personally, I had my real
first grasp at the depths of (La)TeX by browsing through Abrahams,
Hargreaves, and Berry's "TeX for the Impatient". It is not a
comprehensive reference (the TeXbook), or a detailed description (TeX
by Topic), and it doesn't pretend to replace the tons of documentation
for each individual macro package: it is rather a "manual", both an
introduction and a quick reference book, without going too much into
the details.

It would be enlightening to see how LuaTeX solves some of the
difficult problems posed by The Impatient without performing the some
of the weird somersaults required by TeX macros. It wouldn't be
necessary to explain Lua (or Metapost) programming into much detail:
just enough to get the jobs done. A first version in a wiki, simply
filling in the blanks of the original Impatient, or providing
alternative solutions in Lua instead of complicated TeX macros, would
do the trick. Besides, the current WikiMedia software could produce
the required PDF "book" out of the box.

My penny thoughts,

-- 
Luis Rivera
O< http://www.asciiribbon.org/ campaign

From patrick at gundla.ch  Fri Jan  7 21:23:29 2011
From: patrick at gundla.ch (Patrick Gundlach)
Date: Fri, 7 Jan 2011 21:23:29 +0100
Subject: [luatex] The LuaTeXbook
In-Reply-To: <AANLkTim61V035UhS=L0J9OoQJNczXpmWSwoNtJ-99A_d@mail.gmail.com>
References: <AANLkTim61V035UhS=L0J9OoQJNczXpmWSwoNtJ-99A_d@mail.gmail.com>
Message-ID: <941B0024-E5E8-406F-9463-80D5D60F9D51@gundla.ch>

Hi,

(for the german reading folks only....)

I am currently preparing a german book about LuaTeX, but I am not really sure where I am heading to. Probably something like "programming in LuaTeX". Perhaps one day there is an english translation :)

I'll report back when I have a clear vision what will be in the book.

Patrick



From zappathustra at free.fr  Sat Jan  8 11:47:51 2011
From: zappathustra at free.fr (Paul Isambert)
Date: Sat, 08 Jan 2011 11:47:51 +0100
Subject: [luatex] The LuaTeXbook
In-Reply-To: <941B0024-E5E8-406F-9463-80D5D60F9D51@gundla.ch>
References: <AANLkTim61V035UhS=L0J9OoQJNczXpmWSwoNtJ-99A_d@mail.gmail.com>
 <941B0024-E5E8-406F-9463-80D5D60F9D51@gundla.ch>
Message-ID: <4D2840D7.5040708@free.fr>

Le 07/01/2011 21:23, Patrick Gundlach a ?crit :
> Hi,
>
> (for the german reading folks only....)
>
> I am currently preparing a german book about LuaTeX, but I am not really sure where I am heading to. Probably something like "programming in LuaTeX". Perhaps one day there is an english translation :)
>
> I'll report back when I have a clear vision what will be in the book.

One excellent reason for me to resume learning German :)
I thereby encourage you unreservedly!

Best,
Paul

From patrick at gundla.ch  Sun Jan  9 19:33:22 2011
From: patrick at gundla.ch (Patrick Gundlach)
Date: Sun, 9 Jan 2011 19:33:22 +0100
Subject: [luatex] font expansion / HZ
Message-ID: <B65F900B-CA9E-4AF6-ADCD-131D05609DFD@gundla.ch>

Hi,

I am experimenting with the pdftex features (margin kerning and font expansion). So far I have only been able to make margin kerning to work. Now I tried font expansion but couldn't note any difference to what I have before. I set

\pdfadjustspacing=2

and for the font I set the parameters to (for example)

  f.parameters.stretch = 30
  f.parameters.shrink  = 20
  f.parameters.step    = 10
  f.parameters.auto_expand = true

(where f is the font object for font.define(f))

Without posting a complete minimal example: can someone tell me if these parameters look OK or if I am missing anything "obvious"?


Thanks

Patrick



From zappathustra at free.fr  Sun Jan  9 23:14:18 2011
From: zappathustra at free.fr (Paul Isambert)
Date: Sun, 09 Jan 2011 23:14:18 +0100
Subject: [luatex] font expansion / HZ
In-Reply-To: <B65F900B-CA9E-4AF6-ADCD-131D05609DFD@gundla.ch>
References: <B65F900B-CA9E-4AF6-ADCD-131D05609DFD@gundla.ch>
Message-ID: <4D2A333A.8060902@free.fr>

Le 09/01/2011 19:33, Patrick Gundlach a ?crit :
> Hi,
>
> I am experimenting with the pdftex features (margin kerning and font expansion). So far I have only been able to make margin kerning to work. Now I tried font expansion but couldn't note any difference to what I have before. I set
>
> \pdfadjustspacing=2
>
> and for the font I set the parameters to (for example)
>
>    f.parameters.stretch = 30
>    f.parameters.shrink  = 20
>    f.parameters.step    = 10
>    f.parameters.auto_expand = true
>
> (where f is the font object for font.define(f))
>
> Without posting a complete minimal example: can someone tell me if these parameters look OK or if I am missing anything "obvious"?
I think, but might be completely mistaken, that they're ok... but wrong: 
those parameters are not supposed to be set like that, but when the font 
is created; i.e. there lacks what \pdffontexpand does, that is creating 
two ghost fonts. In other words, once a font has been loaded, those 
parameters are only informative, and changing them is useless.

Best,
Paul

From patrick at gundla.ch  Mon Jan 10 09:00:55 2011
From: patrick at gundla.ch (Patrick Gundlach)
Date: Mon, 10 Jan 2011 09:00:55 +0100
Subject: [luatex] font expansion / HZ
In-Reply-To: <4D2A333A.8060902@free.fr>
References: <B65F900B-CA9E-4AF6-ADCD-131D05609DFD@gundla.ch>
 <4D2A333A.8060902@free.fr>
Message-ID: <DD569CCD-31D8-48FB-A93A-9054D7D34F0E@gundla.ch>


Am 09.01.2011 um 23:14 schrieb Paul Isambert:

> Le 09/01/2011 19:33, Patrick Gundlach a ?crit :
>> Hi,
>> 
>> I am experimenting with the pdftex features (margin kerning and font expansion). So far I have only been able to make margin kerning to work. Now I tried font expansion but couldn't note any difference to what I have before. I set
>> 
>> \pdfadjustspacing=2
>> 
>> and for the font I set the parameters to (for example)
>> 
>>   f.parameters.stretch = 30
>>   f.parameters.shrink  = 20
>>   f.parameters.step    = 10
>>   f.parameters.auto_expand = true
>> 
>> (where f is the font object for font.define(f))
>> 
>> Without posting a complete minimal example: can someone tell me if these parameters look OK or if I am missing anything "obvious"?

> I think, but might be completely mistaken, that they're ok... but wrong: those parameters are not supposed to be set like that, but when the font is created; i.e. there lacks what \pdffontexpand does, that is creating two ghost fonts. In other words, once a font has been loaded, those parameters are only informative, and changing them is useless.

This _is_ while loading/creating the font. I am using a setup similar to

http://wiki.luatex.org/index.php/Use_a_TrueType_font

without going through the callback but directly defining the font:

num = font.define(f)
and then
tex.definefont("name",num)

\name this is in the font f

So how to create the ghost fonts here?


Patrick



From patrick at gundla.ch  Mon Jan 10 11:20:08 2011
From: patrick at gundla.ch (Patrick Gundlach)
Date: Mon, 10 Jan 2011 11:20:08 +0100
Subject: [luatex] font expansion / HZ
In-Reply-To: <DD569CCD-31D8-48FB-A93A-9054D7D34F0E@gundla.ch>
References: <B65F900B-CA9E-4AF6-ADCD-131D05609DFD@gundla.ch>
 <4D2A333A.8060902@free.fr> <DD569CCD-31D8-48FB-A93A-9054D7D34F0E@gundla.ch>
Message-ID: <26138F3E-2262-4957-AF09-EEC15473F2A2@gundla.ch>

Hi,

I'll post a complete non-working example. I would expect that the output differs when I switch between \pdfadjustspacing=0 and \pdfadjustspacing=2

----------------------------------------------------------------------------------------------------

\pdfoutput1
\pdfadjustspacing=2
% from the luatex wiki:
\directlua{
define_font = function(name, size)
  local filename, f

  filename = kpse.find_file(name, "opentype fonts")

  if size < 0 then
    size = (-655.36) * size
  end
  local ttffont = fontloader.to_table(fontloader.open(filename))
  if ttffont then
    f = { }
    f.name = ttffont.fontname
    f.fullname = ttffont.names[1].names.fullname
    f.parameters = { }
    f.designsize = size
    f.size = size
    direction = 0
    f.parameters.slant = 0
    f.parameters.space = size * 0.25
    f.parameters.space_stretch = 0.3 * size
    f.parameters.space_shrink = 0.1 * size
    f.parameters.x_height = 0.4 * size
    f.parameters.quad = 1.0 * size
    f.parameters.extra_space = 0

  f.stretch = 30
  f.shrink  = 20
  f.step    = 10
  f.auto_expand = true

    f.characters = { }
    local mag = size / ttffont.units_per_em
  
    local names_of_char = { }
    for char, glyph in pairs(ttffont.map.map) do
      names_of_char[ttffont.glyphs[glyph].name] = ttffont.map.backmap[glyph]
    end
  
    for char, glyph in pairs(ttffont.map.map) do
      local glyph_table = ttffont.glyphs[glyph]
  
      f.characters[char] = {
        index = glyph,
        width = glyph_table.width * mag,
        name = glyph_table.name }
      if glyph_table.boundingbox[4] then
        f.characters[char].height = glyph_table.boundingbox[4] * mag
      end
      if glyph_table.boundingbox[2] then
        f.characters[char].depth = -glyph_table.boundingbox[2] * mag
      end
  
      if glyph_table.kerns then
        local kerns = { }
        for _, kern in pairs(glyph_table.kerns) do
          kerns[names_of_char[kern.char]] = kern.off * mag
        end
        f.characters[char].kerns = kerns
      end
    end
    
    f.filename = filename
    f.type = "real"
    f.format = "opentype"
    f.embedding = "subset"
    f.cidinfo = {
      registry = "Adobe",
      ordering = "Identity",
      supplement = 0,
      version = 1 }
  end
  return f
end
local f = define_font("texgyreheros-regular.otf",65536 * 12)
local num = font.define(f)
tex.definefont("myfont",num)
}

\myfont
\hsize 4cm

Hello, here is some text without a meaning. This text should show, how a printed text will look like
at this place. If you read this text, you will get no information. Really? Is there no information?
Is there a difference between this text and some nonsense like ?Huardest gefburn? Kjift ? Never
mind! A blind text like this gives you information about the selected font, how the letters are
written and the impression of the look. This text should contain all letters of the alphabet and it
should be written in of the original language. There is no need for a special contents, but the
length of words should match to the language.

\bye
----------------------------------------------------------------------------------------------------




From taco at elvenkind.com  Mon Jan 10 11:35:30 2011
From: taco at elvenkind.com (Taco Hoekwater)
Date: Mon, 10 Jan 2011 11:35:30 +0100
Subject: [luatex] font expansion / HZ
In-Reply-To: <26138F3E-2262-4957-AF09-EEC15473F2A2@gundla.ch>
References: <B65F900B-CA9E-4AF6-ADCD-131D05609DFD@gundla.ch>
 <4D2A333A.8060902@free.fr> <DD569CCD-31D8-48FB-A93A-9054D7D34F0E@gundla.ch>
 <26138F3E-2262-4957-AF09-EEC15473F2A2@gundla.ch>
Message-ID: <4D2AE0F2.9070400@elvenkind.com>

On 01/10/2011 11:20 AM, Patrick Gundlach wrote:
> Hi,
>
> I'll post a complete non-working example. I would expect that the
> output differs when I switch between \pdfadjustspacing=0 and
> \pdfadjustspacing=2

You will have to set up the expansion properties for the glyphs
themselves as well:

   left_protruding
   right_protruding
   expansion_factor

(Chapter 7 in the reference manual, about 3 pages into the chapter)

Best wishes,
Taco

From patrick at gundla.ch  Mon Jan 10 11:59:19 2011
From: patrick at gundla.ch (Patrick Gundlach)
Date: Mon, 10 Jan 2011 11:59:19 +0100
Subject: [luatex] font expansion / HZ
In-Reply-To: <4D2AE0F2.9070400@elvenkind.com>
References: <B65F900B-CA9E-4AF6-ADCD-131D05609DFD@gundla.ch>
 <4D2A333A.8060902@free.fr> <DD569CCD-31D8-48FB-A93A-9054D7D34F0E@gundla.ch>
 <26138F3E-2262-4957-AF09-EEC15473F2A2@gundla.ch>
 <4D2AE0F2.9070400@elvenkind.com>
Message-ID: <2C6CC8E2-18C6-4EBA-A5EB-27232263F5C6@gundla.ch>


> You will have to set up the expansion properties for the glyphs
> themselves as well:
> 
>  left_protruding
>  right_protruding
>  expansion_factor
> 
> (Chapter 7 in the reference manual, about 3 pages into the chapter)

somehow I thought that

a) I've already tried that
b) that the default for expansion_factor is 1000 (= already set). I think that this is due to my understanding of the PDFTeX manual where it is stated that the "\efcode [...] defaults to 1000".

I've got it working now. Thanks!

I guess that the values for left_protruding, right_protruding and expansion_factor is 0..1000, right?

Patrick



From taco at elvenkind.com  Mon Jan 10 12:06:08 2011
From: taco at elvenkind.com (Taco Hoekwater)
Date: Mon, 10 Jan 2011 12:06:08 +0100
Subject: [luatex] font expansion / HZ
In-Reply-To: <2C6CC8E2-18C6-4EBA-A5EB-27232263F5C6@gundla.ch>
References: <B65F900B-CA9E-4AF6-ADCD-131D05609DFD@gundla.ch>
 <4D2A333A.8060902@free.fr> <DD569CCD-31D8-48FB-A93A-9054D7D34F0E@gundla.ch>
 <26138F3E-2262-4957-AF09-EEC15473F2A2@gundla.ch>
 <4D2AE0F2.9070400@elvenkind.com>
 <2C6CC8E2-18C6-4EBA-A5EB-27232263F5C6@gundla.ch>
Message-ID: <4D2AE820.5070302@elvenkind.com>

On 01/10/2011 11:59 AM, Patrick Gundlach wrote:
>
> I guess that the values for left_protruding, right_protruding and expansion_factor is 0..1000, right?

Same range as for the pdftex primitives, yes.

Best wishes,
Taco

From jlrn77 at gmail.com  Mon Jan 10 19:58:44 2011
From: jlrn77 at gmail.com (Luis Rivera)
Date: Mon, 10 Jan 2011 12:58:44 -0600
Subject: [luatex] lua transliterations on the fly
Message-ID: <AANLkTinF7NPT_mWA21rfK_cR=teGm8EDYX_0LC3+Ky1j@mail.gmail.com>

On 07/01/2011, Philipp Stephani <st_philipp at yahoo.de> wrote:
>
> BTW, you should _not_ do something like replacing ^c by ?. If you want ?,
> type ?. Use a keyboard layout that contains that character, an input method,
> or some auto-correction function of your text editor, but don't transform
> text while processing. This is true no matter whether you write text files,
> HTML, TeX, or whatever. Babel-like shorthands are completely obsoleted by
> Unicode and cause more problems than they solve.
>

Well, a far more robust approach seems to be using the lpeg library;
I've recycled some code from a Lua script used for ConTeXt's
transliteration for Greek, and then fed the Lua code to an ad hoc
LaTeX command. The transliteration on the fly kinda works; but as
warned by Philip, I've run into trouble because of one active char,
namely, ~.

I'm attaching the source code, all comments included, to document some
attempts to process the conversion on the fly, to deal with the
problematic active char, and to allow readers to compare with Hans
Hagen's original mtx-babel.lua script.

Please, beware this code may be roughly 2/3 cargo cult; so I'm not
sure I can explain exactly how (or why) it works.

Any feedback to help me handle this traumatic tilde are welcome.

-- 
Luis Rivera
O< http://www.asciiribbon.org/ campaign
-------------- next part --------------
A non-text attachment was scrubbed...
Name: lgr2utf.lua
Type: application/octet-stream
Size: 9323 bytes
Desc: not available
URL: <http://tug.org/pipermail/luatex/attachments/20110110/02fa079e/attachment.obj>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: lgrtrans.tex
Type: application/x-tex
Size: 1079 bytes
Desc: not available
URL: <http://tug.org/pipermail/luatex/attachments/20110110/02fa079e/attachment.tex>

From jlrn77 at gmail.com  Mon Jan 10 20:04:28 2011
From: jlrn77 at gmail.com (Luis Rivera)
Date: Mon, 10 Jan 2011 13:04:28 -0600
Subject: [luatex] lua transliterations on the fly
In-Reply-To: <AANLkTinF7NPT_mWA21rfK_cR=teGm8EDYX_0LC3+Ky1j@mail.gmail.com>
References: <AANLkTinF7NPT_mWA21rfK_cR=teGm8EDYX_0LC3+Ky1j@mail.gmail.com>
Message-ID: <AANLkTimNGC5nugKc_o=3KbSj3pWDMCiFh-dnb3j1DUN=@mail.gmail.com>

On 10/01/2011, Luis Rivera <jlrn77 at gmail.com> wrote:
>
> I'm attaching the source code, all comments included, to document some
> attempts to process the conversion on the fly, to deal with the
> problematic active char, and to allow readers to compare with Hans
> Hagen's original mtx-babel.lua script.
>

Apparently, I sent the previous email with some older version (using
Plain LuaTeX) of the macro and the script.

With my apologies,

-- 
Luis Rivera
O< http://www.asciiribbon.org/ campaign
-------------- next part --------------
A non-text attachment was scrubbed...
Name: lgr2utf.lua
Type: application/octet-stream
Size: 9323 bytes
Desc: not available
URL: <http://tug.org/pipermail/luatex/attachments/20110110/2aa92197/attachment-0001.obj>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: lgrtrans.tex
Type: application/x-tex
Size: 1172 bytes
Desc: not available
URL: <http://tug.org/pipermail/luatex/attachments/20110110/2aa92197/attachment-0001.tex>

From patrick at gundla.ch  Tue Jan 11 10:06:01 2011
From: patrick at gundla.ch (Patrick Gundlach)
Date: Tue, 11 Jan 2011 10:06:01 +0100
Subject: [luatex] tex.linebreak() and detection of overfull box?
Message-ID: <9ABDFD1B-61F8-4CCB-A3D8-5F07F7FA6AE4@gundla.ch>

Hi,

I use tex.linebreak() to break text into lines. Now I'd like to detect if there has been an overfull hbox in order to re-format the paragraph with different parameters.

Is there an easy way to detect if the vlist has an overfull box?

Patrick



From taco at elvenkind.com  Tue Jan 11 10:41:28 2011
From: taco at elvenkind.com (Taco Hoekwater)
Date: Tue, 11 Jan 2011 10:41:28 +0100
Subject: [luatex] tex.linebreak() and detection of overfull box?
In-Reply-To: <9ABDFD1B-61F8-4CCB-A3D8-5F07F7FA6AE4@gundla.ch>
References: <9ABDFD1B-61F8-4CCB-A3D8-5F07F7FA6AE4@gundla.ch>
Message-ID: <4D2C25C8.80706@elvenkind.com>

On 01/11/2011 10:06 AM, Patrick Gundlach wrote:
> Hi,
>
> I use tex.linebreak() to break text into lines. Now I'd like to
> detect if there has been an overfull hbox in order to re-format the
> paragraph with different parameters.

Vboxes do not keep track of overfull horizontal boxes, they only
care about the vertical direction. tex.linebreak() returns a
table containing some information about the created paragraph,
and the 'demerits' key in that may be helpful. Otherwise, you
need to do a traversal of the vlist's contents.

Best wishes,
Taco


From arthur.reutenauer at normalesup.org  Tue Jan 11 12:18:08 2011
From: arthur.reutenauer at normalesup.org (Arthur Reutenauer)
Date: Tue, 11 Jan 2011 11:18:08 +0000
Subject: [luatex] lua transliterations on the fly
In-Reply-To: <AANLkTinF7NPT_mWA21rfK_cR=teGm8EDYX_0LC3+Ky1j@mail.gmail.com>
References: <AANLkTinF7NPT_mWA21rfK_cR=teGm8EDYX_0LC3+Ky1j@mail.gmail.com>
Message-ID: <20110111111808.GD5187@phare.normalesup.org>

>                The transliteration on the fly kinda works; but as
> warned by Philip, I've run into trouble because of one active char,
> namely, ~.

  Can't you just make tilde not active inside the \cbgreek macro?
Obviously it can't keep its original (non-breakable space) if you use it
for transliteration.

	Arthur

From patrick at gundla.ch  Tue Jan 11 16:11:50 2011
From: patrick at gundla.ch (Patrick Gundlach)
Date: Tue, 11 Jan 2011 16:11:50 +0100
Subject: [luatex] Question regarding lang.hyphenation
Message-ID: <4516DAF7-EA1C-478A-A9A5-249D4F80D0A6@gundla.ch>

Hi all,

see the attached code. It creates a new dummy language, adds a hyphenation exception ("Au-to-bahn"), calls lang.hyphenate() but no disc node has been created. I would have expected two disc nodes at the places where I put the dashes in the hyphenation exception.

Perhaps I am using it incorrectly?

Patrick

--------------------------------------------------------------------------------
\directlua{
 local l = lang.new(99)
 lang.hyphenation(l, "Au-to-bahn")

 local char,head,n,last
 for s in string.utfvalues("Autobahn") do
  char = unicode.utf8.char(s)
  n = node.new("glyph")
  n.subtype = 1
  n.font = 1
  n.char = s
  n.lang = 99
  n.left = 1
  n.right = 1

  
  if head then
    last.next = n
  else
    head = n
  end
  last = n
 end

 node.slide(head)
 assert(lang.hyphenate(head),"lang.hyphenate")

 local cur = head
 while cur do
  if cur.id == 7 then
  texio.write_nl( "----  a disc node! " ) % never printed
  end
  cur = cur.next
 end
}
\bye
--------------------------------------------------------------------------------



From patrick at gundla.ch  Tue Jan 11 16:12:28 2011
From: patrick at gundla.ch (Patrick Gundlach)
Date: Tue, 11 Jan 2011 16:12:28 +0100
Subject: [luatex] tex.linebreak() and detection of overfull box?
In-Reply-To: <4D2C25C8.80706@elvenkind.com>
References: <9ABDFD1B-61F8-4CCB-A3D8-5F07F7FA6AE4@gundla.ch>
 <4D2C25C8.80706@elvenkind.com>
Message-ID: <F0FA26F5-7DF5-4FC0-BC49-83BB11C880C7@gundla.ch>


>> I use tex.linebreak() to break text into lines. Now I'd like to
>> detect if there has been an overfull hbox in order to re-format the
>> paragraph with different parameters.


> Otherwise, you
> need to do a traversal of the vlist's contents.

OK, that's what I've expected.

Thanks

Patrick


From zappathustra at free.fr  Tue Jan 11 16:31:08 2011
From: zappathustra at free.fr (Paul Isambert)
Date: Tue, 11 Jan 2011 16:31:08 +0100
Subject: [luatex] Question regarding lang.hyphenation
In-Reply-To: <4516DAF7-EA1C-478A-A9A5-249D4F80D0A6@gundla.ch>
References: <4516DAF7-EA1C-478A-A9A5-249D4F80D0A6@gundla.ch>
Message-ID: <4D2C77BC.5030709@free.fr>

Le 11/01/2011 16:11, Patrick Gundlach a ?crit :
> Hi all,
>
> see the attached code. It creates a new dummy language, adds a hyphenation exception ("Au-to-bahn"), calls lang.hyphenate() but no disc node has been created. I would have expected two disc nodes at the places where I put the dashes in the hyphenation exception.
>
> Perhaps I am using it incorrectly?
>
> Patrick
>
> --------------------------------------------------------------------------------
> \directlua{
>   local l = lang.new(99)
>   lang.hyphenation(l, "Au-to-bahn")
>
>   local char,head,n,last
>   for s in string.utfvalues("Autobahn") do
>    char = unicode.utf8.char(s)
>    n = node.new("glyph")
>    n.subtype = 1
>    n.font = 1
>    n.char = s
>    n.lang = 99
>    n.left = 1
>    n.right = 1
>
>
>    if head then
>      last.next = n
>    else
>      head = n
>    end
>    last = n
>   end
>
>   node.slide(head)
>   assert(lang.hyphenate(head),"lang.hyphenate")
>
>   local cur = head
>   while cur do
>    if cur.id == 7 then
>    texio.write_nl( "----  a disc node! " ) % never printed
>    end
>    cur = cur.next
>   end
> }
> \bye

You should set uchyph=1 for all nodes, since Autobahn since starts with 
an uppercase letter.

Best,
Paul

From patrick at gundla.ch  Tue Jan 11 16:42:55 2011
From: patrick at gundla.ch (Patrick Gundlach)
Date: Tue, 11 Jan 2011 16:42:55 +0100
Subject: [luatex] Question regarding lang.hyphenation
In-Reply-To: <4D2C77BC.5030709@free.fr>
References: <4516DAF7-EA1C-478A-A9A5-249D4F80D0A6@gundla.ch>
 <4D2C77BC.5030709@free.fr>
Message-ID: <82864FBD-C6A2-4923-981C-999D688A73DD@gundla.ch>


> You should set uchyph=1 for all nodes, since Autobahn since starts with an uppercase letter.

Paul, thank you very much!!! I've got it working.

Patrick

From patrick at gundla.ch  Tue Jan 11 16:53:02 2011
From: patrick at gundla.ch (Patrick Gundlach)
Date: Tue, 11 Jan 2011 16:53:02 +0100
Subject: [luatex] LuaLaTeX example: show hyphenation points
Message-ID: <5E56DA2A-96E6-436F-9236-D9E586B3F8B4@gundla.ch>

Hi,

inspired by Paul Isambert's very nice article in the last MAPS(1) and also in tugboat 31:3 (2) I'd like to post a LaTeX/LuaTeX example. It shows all the hyphenation points of a text. It's also wikified at http://wiki.luatex.org/index.php/Show_the_hyphenation_points

Please correct any errors at the wiki page, thanks!

Patrick

1: http://ntg.nl/english.html
2: http://tug.org/TUGboat/Contents/contents31-3.html

------------------------------------------------------------------------------------
\documentclass[12pt,a4paper]{scrartcl}
\usepackage[english]{babel}
\usepackage{blindtext}
\usepackage{fontspec}
\directlua{
show_hyph = function(head)
  while head do
    if head.id == 0 or head.id == 1 then % hlist, vlist
      show_hyph(head.list) % should be head.head in a newer luatex than 0.64
    elseif head.id == 7 then             % disc
      local n = node.new("whatsit","pdf_literal")
      n.mode = 0
      n.data = "q 0.3 w 0 2 m 0 7 l S Q"
      n.next = head.next
      n.prev = head
      head.next = n
      head = n
    end
  head = head.next
  end
  return true
end
luatexbase.add_to_callback("post_linebreak_filter",show_hyph,"show_hyph")

}

\begin{document}
\begin{minipage}{5cm}
\blindtext
\end{minipage}
\end{document}
------------------------------------------------------------------------------------

-------------- next part --------------
A non-text attachment was scrubbed...
Name: show-hyphens.png
Type: image/png
Size: 74533 bytes
Desc: not available
URL: <http://tug.org/pipermail/luatex/attachments/20110111/7bb387ff/attachment-0001.png>

From preining at logic.at  Tue Jan 11 17:04:56 2011
From: preining at logic.at (Norbert Preining)
Date: Wed, 12 Jan 2011 01:04:56 +0900
Subject: [luatex] LuaLaTeX example: show hyphenation points
In-Reply-To: <5E56DA2A-96E6-436F-9236-D9E586B3F8B4@gundla.ch>
References: <5E56DA2A-96E6-436F-9236-D9E586B3F8B4@gundla.ch>
Message-ID: <20110111160456.GB23462@gamma.logic.tuwien.ac.at>

On Di, 11 Jan 2011, Patrick Gundlach wrote:
> inspired by Paul Isambert's very nice article in the last MAPS(1) and also in tugboat 31:3 (2) I'd like to post a LaTeX/LuaTeX example. It shows all the hyphenation points of a text. It's also wikified at http://wiki.luatex.org/index.php/Show_the_hyphenation_points

Very nice.

On current TL 2010 with tlcontrib fully installed I get warnings:

(/home/norbert/tl/2010/texmf-dist/tex/latex/expl3/l3luatex.sty

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
! 
! This is a LaTeX bug: check coding!
! 
! Command `\lua_shipout_x:n' not yet defined!
! 
! See the LaTeX3 documentation for further information.
! For immediate help type H <return>.
!...............................................  
                                                  
l.68 \cs_generate_variant:Nn \lua_shipout_x:n
                                              { x }
? 
) (/home/norbert/tl/2010/texmf-dist/tex/latex/tools/calc.sty))

Best wishes

Norbert
------------------------------------------------------------------------
Norbert Preining            preining@{jaist.ac.jp, logic.at, debian.org}
JAIST, Japan                                 TeX Live & Debian Developer
DSA: 0x09C5B094   fp: 14DF 2E6C 0307 BE6D AD76  A9C0 D2BF 4AA3 09C5 B094
------------------------------------------------------------------------
YESNABY (n.)
A 'yes, maybe' which means 'no'.
			--- Douglas Adams, The Meaning of Liff

From patrick at gundla.ch  Tue Jan 11 17:12:34 2011
From: patrick at gundla.ch (Patrick Gundlach)
Date: Tue, 11 Jan 2011 17:12:34 +0100
Subject: [luatex] LuaLaTeX example: show hyphenation points
In-Reply-To: <20110111160456.GB23462@gamma.logic.tuwien.ac.at>
References: <5E56DA2A-96E6-436F-9236-D9E586B3F8B4@gundla.ch>
 <20110111160456.GB23462@gamma.logic.tuwien.ac.at>
Message-ID: <6A939FCA-0339-416A-8641-B9B946E303FF@gundla.ch>

Hi Norbert,

> On current TL 2010 with tlcontrib fully installed I get warnings:

Let me quote Khaled Hosny on the LuaLaTeX mailing list:

> Looks like a known latex3 bug that is already fixed and the fix is in
> its way into CTAN.

So I think it should be fixed soon.

Patrick


From joseph.wright at morningstar2.co.uk  Tue Jan 11 17:13:45 2011
From: joseph.wright at morningstar2.co.uk (Joseph Wright)
Date: Tue, 11 Jan 2011 16:13:45 +0000
Subject: [luatex] LuaLaTeX example: show hyphenation points
In-Reply-To: <20110111160456.GB23462@gamma.logic.tuwien.ac.at>
References: <5E56DA2A-96E6-436F-9236-D9E586B3F8B4@gundla.ch>
 <20110111160456.GB23462@gamma.logic.tuwien.ac.at>
Message-ID: <4D2C81B9.4020504@morningstar2.co.uk>

On 11/01/2011 16:04, Norbert Preining wrote:
> On current TL 2010 with tlcontrib fully installed I get warnings:
> 
> (/home/norbert/tl/2010/texmf-dist/tex/latex/expl3/l3luatex.sty
> 
> !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
> ! 
> ! This is a LaTeX bug: check coding!
> ! 
> ! Command `\lua_shipout_x:n' not yet defined!
> ! 
> ! See the LaTeX3 documentation for further information.
> ! For immediate help type H <return>.
> !...............................................  
>                                                   
> l.68 \cs_generate_variant:Nn \lua_shipout_x:n
>                                               { x }
> ? 
> ) (/home/norbert/tl/2010/texmf-dist/tex/latex/tools/calc.sty))

Sorted in the CTAN upload of expl3 late yesterday. (We've rearranged
some Lua support functions, and I forgot that the luatex LaTeX2e package
renames \latelua. Sorry about that.)
-- 
Joseph Wright

From preining at logic.at  Tue Jan 11 17:14:52 2011
From: preining at logic.at (Norbert Preining)
Date: Wed, 12 Jan 2011 01:14:52 +0900
Subject: [luatex] LuaLaTeX example: show hyphenation points
In-Reply-To: <6A939FCA-0339-416A-8641-B9B946E303FF@gundla.ch>
References: <5E56DA2A-96E6-436F-9236-D9E586B3F8B4@gundla.ch>
 <20110111160456.GB23462@gamma.logic.tuwien.ac.at>
 <6A939FCA-0339-416A-8641-B9B946E303FF@gundla.ch>
Message-ID: <20110111161452.GA27500@gamma.logic.tuwien.ac.at>

On Di, 11 Jan 2011, Patrick Gundlach wrote:
> > Looks like a known latex3 bug that is already fixed and the fix is in
> > its way into CTAN.

Thanks ...

Best wishes

Norbert
------------------------------------------------------------------------
Norbert Preining            preining@{jaist.ac.jp, logic.at, debian.org}
JAIST, Japan                                 TeX Live & Debian Developer
DSA: 0x09C5B094   fp: 14DF 2E6C 0307 BE6D AD76  A9C0 D2BF 4AA3 09C5 B094
------------------------------------------------------------------------
TIDPIT (n.)
The corner of a toenail from which satisfying little black deposits
may be sprung.
			--- Douglas Adams, The Meaning of Liff

From jlrn77 at gmail.com  Tue Jan 11 19:43:31 2011
From: jlrn77 at gmail.com (Luis Rivera)
Date: Tue, 11 Jan 2011 12:43:31 -0600
Subject: [luatex] lua transliterations on the fly
In-Reply-To: <20110111111808.GD5187@phare.normalesup.org>
References: <AANLkTinF7NPT_mWA21rfK_cR=teGm8EDYX_0LC3+Ky1j@mail.gmail.com>
 <20110111111808.GD5187@phare.normalesup.org>
Message-ID: <AANLkTim6d+cgVWr2E5q3Lk1f2-VUNvs7u+VRuWQ05Jtu@mail.gmail.com>

On 11 January 2011 05:18, Arthur Reutenauer
<arthur.reutenauer at normalesup.org> wrote:
>> ? ? ? ? ? ? ? ?The transliteration on the fly kinda works; but as
>> warned by Philip, I've run into trouble because of one active char,
>> namely, ~.
>
> ?Can't you just make tilde not active inside the \cbgreek macro?
> Obviously it can't keep its original (non-breakable space) if you use it
> for transliteration.
>

Well, in fact that's what I was trying to do with the \bgroup and the
\catcode's inside \cbgreek; however, it seems that the local \catcode
reassignments don't reach the expansion of \directlua or \scantokens
below; perhaps I need to declare the \catcode reassignments inside the
lua code for lgr2utf, but the documentation is still very terse on
this subject (sending messages to TeX from within Lua or viceversa).
It also occurred to me that the \*catcodetable commands could do the
trick, but I fear I don't quite get the right syntax to set or reset
the catcode tables, or whether the new eTeX primitives still fail to
reach the guts of \directlua.

I'm stymied...

-- 
Luis Rivera
O< http://www.asciiribbon.org/ campaign


From jlrn77 at gmail.com  Tue Jan 11 20:37:16 2011
From: jlrn77 at gmail.com (Luis Rivera)
Date: Tue, 11 Jan 2011 13:37:16 -0600
Subject: [luatex] lua transliterations on the fly
In-Reply-To: <AANLkTim6d+cgVWr2E5q3Lk1f2-VUNvs7u+VRuWQ05Jtu@mail.gmail.com>
References: <AANLkTinF7NPT_mWA21rfK_cR=teGm8EDYX_0LC3+Ky1j@mail.gmail.com>
 <20110111111808.GD5187@phare.normalesup.org>
 <AANLkTim6d+cgVWr2E5q3Lk1f2-VUNvs7u+VRuWQ05Jtu@mail.gmail.com>
Message-ID: <AANLkTinCCPH7UG_4gVOYmHcM04EmXNNuoTqgGD8s01sR@mail.gmail.com>

On 11 January 2011 12:43, Luis Rivera <jlrn77 at gmail.com> wrote:
> On 11 January 2011 05:18, Arthur Reutenauer
> <arthur.reutenauer at normalesup.org> wrote:
>>> ? ? ? ? ? ? ? ?The transliteration on the fly kinda works; but as
>>> warned by Philip, I've run into trouble because of one active char,
>>> namely, ~.
>>
>> ?Can't you just make tilde not active inside the \cbgreek macro?
>> Obviously it can't keep its original (non-breakable space) if you use it
>> for transliteration.
>>
>
> Well, in fact that's what I was trying to do with the \bgroup and the
> \catcode's inside \cbgreek; however, it seems that the local \catcode
> reassignments don't reach the expansion of \directlua or \scantokens
> below; perhaps I need to declare the \catcode reassignments inside the
> lua code for lgr2utf, but the documentation is still very terse on
> this subject

After a little browsing in the documentation, it seems to me that the
LuaTeX function tex.setcatcodes([global,]n,c) is the way to reassign
catcodes for characters inside lua routines, if indeed TeX's catcode
assignments are unable to reach the guts of \directlua calls. However,
without examples I'm pretty much in the dark. Any enlightenment will
surely be welcome.

Thanks in advance,

-- 
Luis Rivera
O< http://www.asciiribbon.org/ campaign


From st_philipp at yahoo.de  Fri Jan 14 22:21:36 2011
From: st_philipp at yahoo.de (Philipp Stephani)
Date: Fri, 14 Jan 2011 22:21:36 +0100
Subject: [luatex] [tex-live] (future) bug in mkluatexfontdb
In-Reply-To: <20110114203257.GA9030@math.berkeley.edu>
References: <20110114203257.GA9030@math.berkeley.edu>
Message-ID: <415CFD3C-6F7B-42A3-9DE9-9C8DFE9F8A3C@yahoo.de>


Am 14.01.2011 um 21:32 schrieb Paul Vojta:

> This is not a problem with the version of luatex shipped with texlive.
> However, anyone who compiles luatex from the sources on luatex.org will
> get the error message
> 
> .../tex/luatex/lualibs/lualibs-dir.lua:37: bad argument #1 to '(for generator)' (directory metatable expected, got nil)
> 
> The problem is that, apparently, the "for" command, or perhaps the iterator
> provided by lfs.dir, is more finicky now about having the second argument.
> For details about iterators, see Chapter 7 of the lua documentation.
> 
> Here is a patch that will fix the problem.  The patched file still works
> with older versions of luatex, so I see no harm in applying it now instead
> of waiting for a new version of luatex to be used in texlive.
> 
> (I hope this is the correct place to report this -- I don't know of any
> "home site" similar to luatex.org that supports lualib-dir.lua.)

It is being developed on GitHub, where the bug has already been reported:
https://github.com/mpg/lualibs/issues/#issue/2

From oinos at web.de  Sun Jan 16 21:04:25 2011
From: oinos at web.de (=?ISO-8859-1?Q?Pablo_Rodr=EDguez?=)
Date: Sun, 16 Jan 2011 21:04:25 +0100
Subject: [luatex] LuaLaTeX example: show hyphenation points
In-Reply-To: <5E56DA2A-96E6-436F-9236-D9E586B3F8B4@gundla.ch>
References: <5E56DA2A-96E6-436F-9236-D9E586B3F8B4@gundla.ch>
Message-ID: <4D334F49.4000202@web.de>

On 01/11/2011 04:53 PM, Patrick Gundlach wrote:
> Hi,
>
> inspired by Paul Isambert's very nice article in the last MAPS(1) and also in tugboat 31:3 (2) I'd like to post a LaTeX/LuaTeX example. It shows all the hyphenation points of a text. It's also wikified at http://wiki.luatex.org/index.php/Show_the_hyphenation_points
>
> Please correct any errors at the wiki page, thanks!

Thanks for the document, Patrick.

How could be the hyphenation points marked in red?

I guess that red hyphenation points would be easier to be noticed.

Thanks for your help,


Pablo

> ------------------------------------------------------------------------------------
> \documentclass[12pt,a4paper]{scrartcl}
> \usepackage[english]{babel}
> \usepackage{blindtext}
> \usepackage{fontspec}
> \directlua{
> show_hyph = function(head)
>    while head do
>      if head.id == 0 or head.id == 1 then % hlist, vlist
>        show_hyph(head.list) % should be head.head in a newer luatex than 0.64
>      elseif head.id == 7 then             % disc
>        local n = node.new("whatsit","pdf_literal")
>        n.mode = 0
>        n.data = "q 0.3 w 0 2 m 0 7 l S Q"
>        n.next = head.next
>        n.prev = head
>        head.next = n
>        head = n
>      end
>    head = head.next
>    end
>    return true
> end
> luatexbase.add_to_callback("post_linebreak_filter",show_hyph,"show_hyph")
>
> }
>
> \begin{document}
> \begin{minipage}{5cm}
> \blindtext
> \end{minipage}
> \end{document}
> ------------------------------------------------------------------------------------

-- 
http://www.ousia.tk

From zappathustra at free.fr  Sun Jan 16 21:09:19 2011
From: zappathustra at free.fr (Paul Isambert)
Date: Sun, 16 Jan 2011 21:09:19 +0100
Subject: [luatex] LuaLaTeX example: show hyphenation points
In-Reply-To: <4D334F49.4000202@web.de>
References: <5E56DA2A-96E6-436F-9236-D9E586B3F8B4@gundla.ch>
 <4D334F49.4000202@web.de>
Message-ID: <4D33506F.4000804@free.fr>

Le 16/01/2011 21:04, Pablo Rodr?guez a ?crit :
> On 01/11/2011 04:53 PM, Patrick Gundlach wrote:
>> Hi,
>>
>> inspired by Paul Isambert's very nice article in the last MAPS(1) and 
>> also in tugboat 31:3 (2) I'd like to post a LaTeX/LuaTeX example. It 
>> shows all the hyphenation points of a text. It's also wikified at 
>> http://wiki.luatex.org/index.php/Show_the_hyphenation_points
>>
>> Please correct any errors at the wiki page, thanks!
>
> Thanks for the document, Patrick.
>
> How could be the hyphenation points marked in red?
>
> I guess that red hyphenation points would be easier to be noticed.


Just replace

n.data = "q 0.3 w 0 2 m 0 7 l S Q"

with

n.data = "q 1 0 0 rg 1 0 0 RG 0.3 w 0 2 m 0 7 l S Q"

(Only one of rg/RG suffices, but I never know which.)

Best,
Paul

From zappathustra at free.fr  Mon Jan 17 13:47:39 2011
From: zappathustra at free.fr (Paul Isambert)
Date: Mon, 17 Jan 2011 13:47:39 +0100
Subject: [luatex] Callbacks in the wiki.
Message-ID: <4D343A6B.7040500@free.fr>

Hello all,

Since callbacks are among LuaTeX's best features, but also the least 
understood, I've written a general introduction on the wiki 
(http://wiki.luatex.org/index.php/Callbacks). Most importantly, I've 
listed all callbacks, with the name being links to pages with the same 
title. For the moment, all links but one (to Patrick's code) are red, 
because no such pages exist, but it'd be nice if we could write a 
dedicated page for each callback, with at least one simple example (ok, 
perhaps we can make an exception for "find_sfd_file").

I'd recommend the following guidelines (open to discussion, obviously):

- Let a page's title be the name of the callback it describes, so it is 
automatically linked to the page I've created. Otherwise (as I've done 
with Patrick's page), modify the link I've created from 
[[callback_name]] to [[page_title|callback_name]].

- Link all pages on callbacks to this general introduction, which should 
gather general information about callbacks (e.g. no need to reexplain 
callback.register() on each page).

- Make code low-level, which means: no format-specific trick, and 
nothing but callback.register() (we can redirect to the general 
introduction for discussion about the limitations of 
callback.register()). By the way, Patrick, would you mind if I rewrote 
your page so that it doesn't depend on LaTeX and uses callback.register 
instead of luatexbase? (I know it's a wiki, I'm not supposed to ask for 
permission, but I think that'd be quite rude.)

- I'd also make a plea for /commented/ code, not pure code (that's why I 
think pages imported from bluwiki should be rewritten or replaced), 
although I'll admit pure code is better than no code.

I think that could turn into a nice knowledge base.
And now the dreaded acronym: WDYT?

Best,
Paul
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://tug.org/pipermail/luatex/attachments/20110117/fc3152d7/attachment.html>

From patrick at gundla.ch  Mon Jan 17 15:13:43 2011
From: patrick at gundla.ch (Patrick Gundlach)
Date: Mon, 17 Jan 2011 15:13:43 +0100
Subject: [luatex] Callbacks in the wiki.
In-Reply-To: <4D343A6B.7040500@free.fr>
References: <4D343A6B.7040500@free.fr>
Message-ID: <AE261FE6-52B7-474C-9F6C-67F338BA6269@gundla.ch>

Hello Paul,

first: good suggestion, could you write this down somewhere in the wiki? Perhaps at the discussion page of the Callbacks page?

>  By the way, Patrick, would you mind if I rewrote your page so that it doesn't depend on LaTeX and uses callback.register instead of luatexbase? (I know it's a wiki, I'm not supposed to ask for permission, but I think that'd be quite rude.)

Of course. The reason why I chose LaTeX was the different to plain LuaTeX  "add to callback" mechanism of LuaLaTeX. I'll move that to another page ("Using callbacks in LaTeX" or so). 

Patrick



From zappathustra at free.fr  Mon Jan 17 18:14:04 2011
From: zappathustra at free.fr (Paul Isambert)
Date: Mon, 17 Jan 2011 18:14:04 +0100
Subject: [luatex] Callbacks in the wiki.
In-Reply-To: <AE261FE6-52B7-474C-9F6C-67F338BA6269@gundla.ch>
References: <4D343A6B.7040500@free.fr>
 <AE261FE6-52B7-474C-9F6C-67F338BA6269@gundla.ch>
Message-ID: <4D3478DC.3040308@free.fr>

Le 17/01/2011 15:13, Patrick Gundlach a ?crit :
> Hello Paul,
>
> first: good suggestion, could you write this down somewhere in the wiki? Perhaps at the discussion page of the Callbacks page?

Good idea, I've done it.

>>   By the way, Patrick, would you mind if I rewrote your page so that it doesn't depend on LaTeX and uses callback.register instead of luatexbase? (I know it's a wiki, I'm not supposed to ask for permission, but I think that'd be quite rude.)
> Of course. The reason why I chose LaTeX was the different to plain LuaTeX  "add to callback" mechanism of LuaLaTeX. I'll move that to another page ("Using callbacks in LaTeX" or so).

Actually, what you've written isn't LaTeX-specific, since luatexbase 
works with plain TeX too; what Is think should be avoided is such things 
as \documentclass, unrelated to LuaTeX (I've made this clearer in the 
discussion page). And using callback.register() instead of luatexbase 
functions is just a way to document LuaTeX's core specifically (although 
I think an article on how to augment that core, with things like 
luatexbase or others, would be very good).

Best,
Paul

From zappathustra at free.fr  Thu Jan 27 23:18:57 2011
From: zappathustra at free.fr (Paul Isambert)
Date: Thu, 27 Jan 2011 23:18:57 +0100
Subject: [luatex] Lua 5.2.
Message-ID: <4D41EF51.7060101@free.fr>

Hello all,

I don't know how LuaTeX is supposed to follow the development of Lua, 
but you might be interested to learn about the incompatibilites between 
Lua 5.1 and 5.2 (alpha):

http://www.lua.org/work/doc/manual.html#8

Most importantly, module() is deprecated, so packages should sooner or 
later do without. And watch out the move from unpack() to table.unpack().

Best,
Paul

From martin at oneiros.de  Thu Jan 27 23:24:55 2011
From: martin at oneiros.de (=?ISO-8859-1?Q?Martin_Schr=F6der?=)
Date: Thu, 27 Jan 2011 23:24:55 +0100
Subject: [luatex] Lua 5.2.
In-Reply-To: <4D41EF51.7060101@free.fr>
References: <4D41EF51.7060101@free.fr>
Message-ID: <AANLkTiniWwWRDDWwQgy+HS8QN27A6xm2BQkQjDROTeJ5@mail.gmail.com>

2011/1/27 Paul Isambert <zappathustra at free.fr>:
> I don't know how LuaTeX is supposed to follow the development of Lua, but

AFAIK 1.0 may have 5.2 :-)

Best
   Martin

From st_philipp at yahoo.de  Fri Jan 28 00:21:53 2011
From: st_philipp at yahoo.de (Philipp Stephani)
Date: Fri, 28 Jan 2011 00:21:53 +0100
Subject: [luatex] Lua 5.2.
In-Reply-To: <4D41EF51.7060101@free.fr>
References: <4D41EF51.7060101@free.fr>
Message-ID: <CBCE9324-81E0-497A-9F2D-2CE885F1DF47@yahoo.de>


Am 27.01.2011 um 23:18 schrieb Paul Isambert:

> Hello all,
> 
> I don't know how LuaTeX is supposed to follow the development of Lua, but you might be interested to learn about the incompatibilites between Lua 5.1 and 5.2 (alpha):
> 
> http://www.lua.org/work/doc/manual.html#8
> 
> Most importantly, module() is deprecated, so packages should sooner or later do without.

What is the preferred way to implement modules then?

From zappathustra at free.fr  Fri Jan 28 00:29:48 2011
From: zappathustra at free.fr (Paul Isambert)
Date: Fri, 28 Jan 2011 00:29:48 +0100
Subject: [luatex] Lua 5.2.
In-Reply-To: <CBCE9324-81E0-497A-9F2D-2CE885F1DF47@yahoo.de>
References: <4D41EF51.7060101@free.fr>
 <CBCE9324-81E0-497A-9F2D-2CE885F1DF47@yahoo.de>
Message-ID: <4D41FFEC.9080406@free.fr>

Le 28/01/2011 00:21, Philipp Stephani a ?crit :
> Am 27.01.2011 um 23:18 schrieb Paul Isambert:
>
>> Hello all,
>>
>> I don't know how LuaTeX is supposed to follow the development of Lua, but you might be interested to learn about the incompatibilites between Lua 5.1 and 5.2 (alpha):
>>
>> http://www.lua.org/work/doc/manual.html#8
>>
>> Most importantly, module() is deprecated, so packages should sooner or later do without.
> What is the preferred way to implement modules then?

Among the methods introduced in this chapter of PIL: 
http://www.lua.org/pil/15.html, my favorite is:

local foo ...
local bar ...
...
mypack = {foo = foo, bar = bar, ...}

Best,
Paul

From john at wexfordpress.com  Fri Jan 28 23:15:13 2011
From: john at wexfordpress.com (John Culleton)
Date: Fri, 28 Jan 2011 17:15:13 -0500
Subject: [luatex] Inconsistent results.
Message-ID: <201101281715.13699.john@wexfordpress.com>

First I ran mkluatexfontdb with no error messages. 
Then I ran this test program using luatex: 
------------------------------------------------------------------- 
\input luaotfload.sty % works for plain despite the .sty 
\font\pagella={name:TeX Gyre Pagella:script=latn;+onum} at 10pt 
\font\termes={file:texgyretermes-regular.otf:script=latn} at 10pt 
\font\foo={file:SyrCOMJerusalem.otf:script=latn} at 20bp 
\font\barr={file:georgia.ttf} at 30bp 
\pagella some text 12345\par 
\termes other text\par 
\foo my test font. 
\barr Georgia 978! 
\bye 
------------------------------------------------------------- 
When I ran luatex on this file the first two fonts worked but the last 
two did not. 
Let's take georgia.ttf in more detail. The database file 
/home/safe/.texlive2010/texmf-var/luatex-cache/generic/names/otfl- 
names.lua 
shows: 
--------------------------------------------------------------------------- 
{ 
   ["familyname"]="Georgia", 
   ["filename"]={ "/usr/share/fonts/TTF/georgia.ttf", false }, 
   ["fontname"]="Georgia", 
   ["fullname"]="Georgia", 
   ["names"]={ 
    ["family"]="Georgia", 
    ["fullname"]="Georgia", 
    ["psname"]="Georgia", 
    ["subfamily"]="Regular", 
   }, 
   ["size"]={}, 
   ["slant"]=0, 
   ["weight"]=400, 
   ["width"]=5, 
  }, 
------------------------------------------------------ 
I am using TeXLive 2010 on Slackware Linux 13.0 

John Culleton 


-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://tug.org/pipermail/luatex/attachments/20110128/e8e2a57a/attachment.html>

From taco at elvenkind.com  Sat Jan 29 10:19:32 2011
From: taco at elvenkind.com (Taco Hoekwater)
Date: Sat, 29 Jan 2011 10:19:32 +0100
Subject: [luatex] Inconsistent results.
In-Reply-To: <201101281715.13699.john@wexfordpress.com>
References: <201101281715.13699.john@wexfordpress.com>
Message-ID: <4D43DBA4.3000307@elvenkind.com>


Hi John,

On 01/28/2011 11:15 PM, John Culleton wrote:

> \font\foo={file:SyrCOMJerusalem.otf:script=latn} at 20bp
> \font\barr={file:georgia.ttf} at 30bp
> ...
> When I ran luatex on this file the first two fonts worked but the last
> two did not.
> ...
> I am using TeXLive 2010 on Slackware Linux 13.0

Where do the fonts come from? I have neither SyrCOMJerusalem.otf nor
georgia.ttf on my system.

Best wishes,
Taco

From st_philipp at yahoo.de  Sat Jan 29 10:58:09 2011
From: st_philipp at yahoo.de (Philipp Stephani)
Date: Sat, 29 Jan 2011 10:58:09 +0100
Subject: [luatex] [lltx] quietening lualatex console output
In-Reply-To: <D44C50FD-4118-4B3C-8157-EEE3EBE2A798@gmail.com>
References: <D44C50FD-4118-4B3C-8157-EEE3EBE2A798@gmail.com>
Message-ID: <91D1551F-72CF-4830-96EF-00A482F55766@yahoo.de>


Am 29.01.2011 um 05:04 schrieb Will Robertson:

> Hi,
> 
> When I run a unicode-math document with LuaLaTeX, here's the console output I get purely related to loading the various Lua stuff:
> 
> (/usr/local/texlive/2010/texmf-dist/tex/luatex/luaotfload/luaotfload.sty
> (/usr/local/texlive/2010/texmf-dist/tex/luatex/luatexbase/luatexbase.sty
> (/usr/local/texlive/2010/texmf-dist/tex/luatex/luatexbase/luatexbase-compat.sty
> )
> (/usr/local/texlive/2010/texmf-dist/tex/luatex/luatexbase/luatexbase-loader.sty
> (/usr/local/texlive/2010/texmf-dist/tex/luatex/luatexbase/luatexbase.loader.lua
> ))
> (/usr/local/texlive/2010/texmf-dist/tex/luatex/luatexbase/luatexbase-regs.sty)
> (/usr/local/texlive/2010/texmf-dist/tex/luatex/luatexbase/luatexbase-attr.sty
> (/usr/local/texlive/2010/texmf-dist/tex/luatex/luatexbase/attr.lua))
> (/usr/local/texlive/2010/texmf-dist/tex/luatex/luatexbase/luatexbase-cctb.sty
> (/usr/local/texlive/2010/texmf-dist/tex/luatex/luatexbase/cctb.lua))
> (/usr/local/texlive/2010/texmf-dist/tex/luatex/luatexbase/luatexbase-mcb.sty
> (/usr/local/texlive/2010/texmf-dist/tex/luatex/luatexbase/luatexbase-modutils.s
> ty
> (/usr/local/texlive/2010/texmf-dist/tex/luatex/luatexbase/modutils.lua))
> (/usr/local/texlive/2010/texmf-dist/tex/luatex/luatexbase/mcb.lua)))
> (/usr/local/texlive/2010/texmf-dist/tex/luatex/lualibs/lualibs.lua)
> (/usr/local/texlive/2010/texmf-dist/tex/luatex/lualibs/lualibs-string.lua)
> (/usr/local/texlive/2010/texmf-dist/tex/luatex/lualibs/lualibs-lpeg.lua)
> (/usr/local/texlive/2010/texmf-dist/tex/luatex/lualibs/lualibs-boolean.lua)
> (/usr/local/texlive/2010/texmf-dist/tex/luatex/lualibs/lualibs-number.lua)
> (/usr/local/texlive/2010/texmf-dist/tex/luatex/lualibs/lualibs-math.lua)
> (/usr/local/texlive/2010/texmf-dist/tex/luatex/lualibs/lualibs-table.lua)
> (/usr/local/texlive/2010/texmf-dist/tex/luatex/lualibs/lualibs-aux.lua)
> (/usr/local/texlive/2010/texmf-dist/tex/luatex/lualibs/lualibs-io.lua)
> (/usr/local/texlive/2010/texmf-dist/tex/luatex/lualibs/lualibs-os.lua)
> (/usr/local/texlive/2010/texmf-dist/tex/luatex/lualibs/lualibs-file.lua)
> (/usr/local/texlive/2010/texmf-dist/tex/luatex/lualibs/lualibs-md5.lua)
> (/usr/local/texlive/2010/texmf-dist/tex/luatex/lualibs/lualibs-dir.lua)
> (/usr/local/texlive/2010/texmf-dist/tex/luatex/lualibs/lualibs-unicode.lua)
> (/usr/local/texlive/2010/texmf-dist/tex/luatex/lualibs/lualibs-utils.lua)
> (/usr/local/texlive/2010/texmf-dist/tex/luatex/lualibs/lualibs-dimen.lua)
> (/usr/local/texlive/2010/texmf-dist/tex/luatex/lualibs/lualibs-url.lua)
> (/usr/local/texlive/2010/texmf-dist/tex/luatex/lualibs/lualibs-set.lua)
> (/usr/local/texlive/2010/texmf-dist/tex/luatex/luaotfload/luaotfload.lua)(using
> cache: /Users/will/Library/texlive/2010/texmf-var/luatex-cache/generic)
> Module luatexbase-mcb info: inserting 'luaotfload.pre_linebreak_filter'
> (luatexbase-mcb)            at position 1 in 'pre_linebreak_filter'
> Module luatexbase-mcb info: inserting 'luaotfload.hpack_filter'
> (luatexbase-mcb)            at position 1 in 'hpack_filter'
> Module luatexbase-mcb info: resetting callback 'define_font'
> Module luatexbase-mcb info: inserting 'luaotfload.define_font'
> (luatexbase-mcb)            at position 1 in 'define_font'
> Module luatexbase-mcb info: inserting 'luaotfload.find_vf_file'
> (luatexbase-mcb)            at position 1 in 'find_vf_file'
> )
> 
> 
> Is there any way to make this quieter? (Can lua files be loaded from lua without being printed in the console output?)

I think LuaTeX should aim for more sane output in general, similar to other non-TeX compilers. That means:
- No printing of page numbers (already possible), file names (suggested in http://tracker.luatex.org/view.php?id=535) and similar nonsense. People who are interested in which files are loaded can use the filename recorder.
- All messages use file:line:message style, even those that come from \write or Lua print() or texio.write()
- \scrollmode (i.e. no user interaction) by default
- Primitives or Lua functions for printing errors, warnings and informational messages
- Getting rid of \errhelp
- Messages are never broken across lines; every message is exactly one line; newline chars in messages are converted to spaces
- No continuation of messages
- No log file
- Error messages go to stderr
- No banner
I don't think this has to be configurable. The current mess probably needs to stay for compatibility reasons, but a command line option --sane-output could be added that switches output to the sensible style GCC and most other compiler use.

Another thing @Will: did you ever consider building a "LaTeX 2.2" format that is essentially LaTeX 2e with expl3 and the xpackages (and, for XeTeX and LuaTeX, fontspec) preloaded? That should not break anything, but it would make expl3 more attractive and reduce compilation times. Also, expl3 should probably move to the latex-base collection of TeX Live since it is nowadays required by important packages such as fontspec and siunitx.

From zappathustra at free.fr  Sat Jan 29 11:45:21 2011
From: zappathustra at free.fr (Paul Isambert)
Date: Sat, 29 Jan 2011 11:45:21 +0100
Subject: [luatex] \input from Lua.
Message-ID: <4D43EFC1.3060505@free.fr>

Hello all,

Is there a way to make TeX read a file from the Lua interface? The best 
I can do is to issue:

tex.print("\\input{" .. file .. "}")

or something similar. But that is most inconvenient, and anyway it 
doesn't work in an initialization script. (What I do in such a script is 
register a function in "process_input_buffer" that returns the first 
line prefixed with the desired \input statements, and then unregisters 
itself at once. But that's horrible, it looks like a dirty trick!)

Best,
Paul

From pragma at wxs.nl  Sat Jan 29 11:30:30 2011
From: pragma at wxs.nl (Hans Hagen)
Date: Sat, 29 Jan 2011 11:30:30 +0100
Subject: [luatex] [lltx] quietening lualatex console output
In-Reply-To: <91D1551F-72CF-4830-96EF-00A482F55766@yahoo.de>
References: <D44C50FD-4118-4B3C-8157-EEE3EBE2A798@gmail.com>
 <91D1551F-72CF-4830-96EF-00A482F55766@yahoo.de>
Message-ID: <4D43EC46.5060407@wxs.nl>

On 29-1-2011 10:58, Philipp Stephani wrote:

> I think LuaTeX should aim for more sane output in general, similar to other non-TeX compilers. That means:
> - No printing of page numbers (already possible), file names (suggested in http://tracker.luatex.org/view.php?id=535) and similar nonsense. People who are interested in which files are loaded can use the filename recorder.
> - All messages use file:line:message style, even those that come from \write or Lua print() or texio.write()
> - \scrollmode (i.e. no user interaction) by default
> - Primitives or Lua functions for printing errors, warnings and informational messages
> - Getting rid of \errhelp
> - Messages are never broken across lines; every message is exactly one line; newline chars in messages are converted to spaces
> - No continuation of messages
> - No log file
> - Error messages go to stderr
> - No banner
> I don't think this has to be configurable. The current mess probably needs to stay for compatibility reasons, but a command line option --sane-output could be added that switches output to the sensible style GCC and most other compiler use.

Most of the messages are under macro package control so it's not so much 
a luatex issue. As demands differ and there is no universal solution or 
preference, the only thing that the engine will offer is control in the 
form of callbacks (and things like line lengths are already configurable 
for quiet a while for tex engines in conifiguration files). As there's 
also backward compatibility to consider, the default behaviour is that 
of tex. For instance, hard coded output formats of texio.write is not 
going to happen as one can do it anyway by passing the right strings.

(One of our test cases has been is highly structured parsable xml 
logging but I haven't tested it for a while so I must pick it up.)

The traditional tex error message mechanism will be redone when other 
core components are finished doing. Currently they are rather 
interwoven. This will happen in a later stage (around version 0.90).

Hans


-----------------------------------------------------------------
                                           Hans Hagen | PRAGMA ADE
               Ridderstraat 27 | 8061 GH Hasselt | The Netherlands
     tel: 038 477 53 69 | voip: 087 875 68 74 | www.pragma-ade.com
                                              | www.pragma-pod.nl
-----------------------------------------------------------------

From reinhard.kotucha at web.de  Sun Jan 30 01:37:04 2011
From: reinhard.kotucha at web.de (Reinhard Kotucha)
Date: Sun, 30 Jan 2011 01:37:04 +0100
Subject: [luatex] [lltx] quietening lualatex console output
In-Reply-To: <91D1551F-72CF-4830-96EF-00A482F55766@yahoo.de>
References: <D44C50FD-4118-4B3C-8157-EEE3EBE2A798@gmail.com>
 <91D1551F-72CF-4830-96EF-00A482F55766@yahoo.de>
Message-ID: <19780.45744.646931.759067@zaphod.ms25.net>

On 29 January 2011 Philipp Stephani wrote:

 > I think LuaTeX should aim for more sane output in general, similar
 > to other non-TeX compilers. That means:
 > - No printing of page numbers (already possible), file names
 >   (suggested in http://tracker.luatex.org/view.php?id=535) and
 >   similar nonsense. People who are interested in which files are
 >   loaded can use the filename recorder.
 > - All messages use file:line:message style, even those that come
 >   from \write or Lua print() or texio.write()
 > - \scrollmode (i.e. no user interaction) by default
 > - Primitives or Lua functions for printing errors, warnings and
 >   informational messages
 > - Getting rid of \errhelp
 > - Messages are never broken across lines; every message is exactly
 >   one line; newline chars in messages are converted to spaces
 > - No continuation of messages
 > - No log file
 > - Error messages go to stderr
 > - No banner

Sorry, I disagree, especially if you say:

 > I don't think this has to be configurable. 

The log files are definitely needed.  There is no other way to debug
things and the .fls files are not sufficient at all.  The log files
contain a lot of useful information.  Did you ever noticed that they
contain much more information than screen output?  Without log files
there is absolutely no way to solve other people's problems.

 > The current mess probably needs to stay for compatibility reasons,
 > but a command line option --sane-output could be added that
 > switches output to the sensible style GCC and most other compiler
 > use.

There is such an option already, called --interaction.  And come on,
the error messages provided by other compilers/interpreters are not
better than those provided by [La]TeX, often even worse.

Now, let me comment your suggestions in detail:

 > - No printing of page numbers (already possible), file names
 >   (suggested in http://tracker.luatex.org/view.php?id=535) and
 >   similar nonsense. 

I don't see any benefit if page numbers are suppressed, but this can
be done at macro level.  Just switch to \batchmode temporarily when a
page is shipped out.  Requires to patch the output routine, not much
fun in LaTeX, admittedly.

 >   People who are interested in which files are loaded can use the
 >   filename recorder.

No.  It just traces open() system calls.  But some files are loading
others, and it's often necessary to find out WHY a particular file is
loaded at all.  This information is not present in .fls files.

 > - All messages use file:line:message style, even those that come
 >   from \write or Lua print() or texio.write()

There is a command line option already.  If it doesn't support files
opened by \openin and \openout, I agree with you that such an
enhancement is welcome. 

Regarding Lua, I think that "file:line:" style messages are only
useful for error messages, not for print() or texio.write() in
general. 

 > - \scrollmode (i.e. no user interaction) by default

I don't know why you are so much interested in changing default
values.  There are many programs (TeX IDEs) which expect a particular
behavior.  I don't see any good reason to break them for no good
reason. 

 > - Primitives or Lua functions for printing errors, warnings and
 >   informational messages

Better Lua functions than TeX primitives.  However, it would be nice
if Lua can determine name of the current TeX input file (which
contains the Lua code) and the line number.

 > - Getting rid of \errhelp

WHY????  It's just a token register which can be accessed from the
command line.  There is absolutely no reason to get rid of it.
If you aren't interested, just don't ask for help.

BTW, the LaTeX help messages are quite laconic because when LaTeX2e
was released, RAM wasn't as cheap as today.  But AFAIR the LaTeX team
considered to read more detailed help messages from an external file
in a future release.  If messages are read from an external file, it's
quite easy to provide them in different languages too.

 > - Messages are never broken across lines; every message is exactly
 >   one line; newline chars in messages are converted to spaces

This is supported by TeX Live already, though admittedly not well
documented.  The length of lines in the log file and on terminals can
be changed in texmf.cnf or in the environment.  The variable
max_print_line takes a number as an argument.  The default is 79.

Try this on the command line:

  max_print_line=10000 pdftex story \\bye

 > - No continuation of messages

What does it mean?

 > - No log file

They are definitely needed.  I could imagine an option to turn them
off.  But such an option shouldn't be documented. :)

 > - Error messages go to stderr

Yes, we are living in the 21st century.  Even Windows supports stderr
for some time past.  Maybe it breaks some TeX IDEs which capture
screen output, but I suppose that most of them read the log file
anyway.  The only TeX primitive involved is \errmessage, AFAIK.
Shouldn't be difficult to implement.  Maybe a compatibility switch is
needed.

 > - No banner

--interaction=batchmode

Of course, I'm aware that we are living in a world where most people
refuse to read documentation, error messages, log files, or whatever
tells them what they've done wrong.  Instead, they complain "My
document doesn't compile anymore", "I got an error", "I'm using WinEDT
and it complains about an 'Undefined control sequence..'", or "How can
I get rid of the file 'missfonts.log'?", without providing any useful
information.  Looking into a log file or reading an error message
themselves is obviously far beyond their capabilities.

But the only way to help those poor souls is to ask them to send us
their log files.  Do you really propose to abolish them?

What you suggest isn't worth to break compatibility.  And many of your
suggestions are already supported, though not enabled by default.

Regards,
  Reinhard

-- 
----------------------------------------------------------------------------
Reinhard Kotucha                                      Phone: +49-511-3373112
Marschnerstr. 25
D-30167 Hannover                              mailto:reinhard.kotucha at web.de
----------------------------------------------------------------------------
Microsoft isn't the answer. Microsoft is the question, and the answer is NO.
----------------------------------------------------------------------------

From wspr81 at gmail.com  Sun Jan 30 03:03:06 2011
From: wspr81 at gmail.com (Will Robertson)
Date: Sun, 30 Jan 2011 12:33:06 +1030
Subject: [luatex] [lltx] quietening lualatex console output
In-Reply-To: <19780.45744.646931.759067@zaphod.ms25.net>
References: <D44C50FD-4118-4B3C-8157-EEE3EBE2A798@gmail.com>
 <91D1551F-72CF-4830-96EF-00A482F55766@yahoo.de>
 <19780.45744.646931.759067@zaphod.ms25.net>
Message-ID: <736610CF-CA84-4187-8C98-38077FF6F86B@gmail.com>

On 30/01/2011, at 11:07 AM, Reinhard Kotucha wrote:

> BTW, the LaTeX help messages are quite laconic because when LaTeX2e
> was released, RAM wasn't as cheap as today.  But AFAIR the LaTeX team
> considered to read more detailed help messages from an external file
> in a future release.  If messages are read from an external file, it's
> quite easy to provide them in different languages too.

When we looked at this in expl3, it didn't seem that useful to store all messages on disk like this (since RAM is cheap and you can still logically separate messages into files to \input if you like). However, there is a separation between calling an error/warning and invoking its text, so the idea of multilingual features is still possible.

(A nice side-feature of this separation is being able to hide/demote errors to warnings and warnings to info messages.)

If anyone is interested in exploring this idea, bring it up on LaTeX-L for further discussion.


>> - No banner
> 
> --interaction=batchmode

Almost :)

$ pdflatex --interaction=batchmode test
This is pdfTeX, Version 3.1415926-1.40.11 (TeX Live 2010)
 restricted \write18 enabled.
entering extended mode
$

-- Will



From lomov.vl at gmail.com  Sun Jan 30 04:36:24 2011
From: lomov.vl at gmail.com (Vladimir Lomov)
Date: Sun, 30 Jan 2011 11:36:24 +0800
Subject: [luatex] [lltx] quietening lualatex console output
In-Reply-To: <736610CF-CA84-4187-8C98-38077FF6F86B@gmail.com>
References: <D44C50FD-4118-4B3C-8157-EEE3EBE2A798@gmail.com>
 <91D1551F-72CF-4830-96EF-00A482F55766@yahoo.de>
 <19780.45744.646931.759067@zaphod.ms25.net>
 <736610CF-CA84-4187-8C98-38077FF6F86B@gmail.com>
Message-ID: <20110130033624.GD3867@smoon>

** Will Robertson [2011-01-30 12:33:06 +1030]:

> On 30/01/2011, at 11:07 AM, Reinhard Kotucha wrote:

[...]
>>> - No banner

>> --interaction=batchmode

> Almost :)

> $ pdflatex --interaction=batchmode test
> This is pdfTeX, Version 3.1415926-1.40.11 (TeX Live 2010)
>  restricted \write18 enabled.
> entering extended mode
> $

Is that too bad? For the purpose that Reinhard describe (debuging) it is
VERY helpful.

---
WBR, Vladimir Lomov

-- 
A mother mouse was taking her large brood for a stroll across the kitchen
floor one day when the local cat, by a feat of stealth unusual even for
its species, managed to trap them in a corner.  The children cowered,
terrified by this fearsome beast, plaintively crying, "Help, Mother!
Save us!  Save us!  We're scared, Mother!"
	Mother Mouse, with the hopeless valor of a parent protecting its
children, turned with her teeth bared to the cat, towering huge above them,
and suddenly began to bark in a fashion that would have done any Doberman
proud.  The startled cat fled in fear for its life.
	As her grateful offspring flocked around her shouting "Oh, Mother,
you saved us!" and "Yay!  You scared the cat away!" she turned to them
purposefully and declared, "You see how useful it is to know a second
language?"

From taco at elvenkind.com  Sun Jan 30 09:20:32 2011
From: taco at elvenkind.com (Taco Hoekwater)
Date: Sun, 30 Jan 2011 09:20:32 +0100
Subject: [luatex] \input from Lua.
In-Reply-To: <4D43EFC1.3060505@free.fr>
References: <4D43EFC1.3060505@free.fr>
Message-ID: <4D451F50.5080900@elvenkind.com>

On 01/29/2011 11:45 AM, Paul Isambert wrote:
> Hello all,
>
> Is there a way to make TeX read a file from the Lua interface? The best
> I can do is to issue:
>
> tex.print("\\input{" .. file .. "}")
>
> or something similar. But that is most inconvenient, and anyway it
> doesn't work in an initialization script. (What I do in such a script is
> register a function in "process_input_buffer" that returns the first
> line prefixed with the desired \input statements, and then unregisters
> itself at once. But that's horrible, it looks like a dirty trick!)

Agreed, but currently there is no way to input a TeX file from lua.
(if there was, its internals would be a lot like your tex.print
statement above).

Best wishes,
Taco

From wspr81 at gmail.com  Sun Jan 30 10:05:20 2011
From: wspr81 at gmail.com (Will Robertson)
Date: Sun, 30 Jan 2011 19:35:20 +1030
Subject: [luatex] [lltx] quietening lualatex console output
In-Reply-To: <20110130033624.GD3867@smoon>
References: <D44C50FD-4118-4B3C-8157-EEE3EBE2A798@gmail.com>
 <91D1551F-72CF-4830-96EF-00A482F55766@yahoo.de>
 <19780.45744.646931.759067@zaphod.ms25.net>
 <736610CF-CA84-4187-8C98-38077FF6F86B@gmail.com>
 <20110130033624.GD3867@smoon>
Message-ID: <40B79AF0-5664-468A-9DD5-C41D8B5C12F6@gmail.com>

On 30/01/2011, at 2:06 PM, Vladimir Lomov wrote:

>> Almost :)
> 
>> $ pdflatex --interaction=batchmode test
>> This is pdfTeX, Version 3.1415926-1.40.11 (TeX Live 2010)
>> restricted \write18 enabled.
>> entering extended mode
>> $
> 
> Is that too bad? For the purpose that Reinhard describe (debuging) it is
> VERY helpful.

When you're running with regular console output, I definitely think it should be there. But who is debugging from the console of \batchmode output? (The request was to be able to remove the banner in cases like this, when you're *trying* to be quiet.) This information would still be present in the .log file, of course.

-- Will



From zappathustra at free.fr  Sun Jan 30 10:22:46 2011
From: zappathustra at free.fr (Paul Isambert)
Date: Sun, 30 Jan 2011 10:22:46 +0100
Subject: [luatex] [lltx] quietening lualatex console output
In-Reply-To: <736610CF-CA84-4187-8C98-38077FF6F86B@gmail.com>
References: <D44C50FD-4118-4B3C-8157-EEE3EBE2A798@gmail.com>
 <91D1551F-72CF-4830-96EF-00A482F55766@yahoo.de>
 <19780.45744.646931.759067@zaphod.ms25.net>
 <736610CF-CA84-4187-8C98-38077FF6F86B@gmail.com>
Message-ID: <4D452DE6.7020900@free.fr>


Le 30/01/2011 03:03, Will Robertson a ?crit :
> On 30/01/2011, at 11:07 AM, Reinhard Kotucha wrote:
>
>> BTW, the LaTeX help messages are quite laconic because when LaTeX2e
>> was released, RAM wasn't as cheap as today.  But AFAIR the LaTeX team
>> considered to read more detailed help messages from an external file
>> in a future release.  If messages are read from an external file, it's
>> quite easy to provide them in different languages too.
> When we looked at this in expl3, it didn't seem that useful to store all messages on disk like this (since RAM is cheap and you can still logically separate messages into files to \input if you like). However, there is a separation between calling an error/warning and invoking its text, so the idea of multilingual features is still possible.
>
> (A nice side-feature of this separation is being able to hide/demote errors to warnings and warnings to info messages.)
>
> If anyone is interested in exploring this idea, bring it up on LaTeX-L for further discussion.
>
>
>>> - No banner
>> --interaction=batchmode
> Almost :)
>
> $ pdflatex --interaction=batchmode test
> This is pdfTeX, Version 3.1415926-1.40.11 (TeX Live 2010)
>   restricted \write18 enabled.
> entering extended mode
> $
>
> -- Will

With LuaTeX:

luatex --lua=my_script.lua --interaction=batchmode ...

and in the initialization script:

callback.register("start_run", false)

and absolute silence...

Best,
Paul

From pragma at wxs.nl  Sun Jan 30 13:43:41 2011
From: pragma at wxs.nl (Hans Hagen)
Date: Sun, 30 Jan 2011 13:43:41 +0100
Subject: [luatex] [lltx] quietening lualatex console output
In-Reply-To: <19780.45744.646931.759067@zaphod.ms25.net>
References: <D44C50FD-4118-4B3C-8157-EEE3EBE2A798@gmail.com>
 <91D1551F-72CF-4830-96EF-00A482F55766@yahoo.de>
 <19780.45744.646931.759067@zaphod.ms25.net>
Message-ID: <4D455CFD.4060102@wxs.nl>

On 30-1-2011 1:37, Reinhard Kotucha wrote:

> Better Lua functions than TeX primitives.  However, it would be nice
> if Lua can determine name of the current TeX input file (which
> contains the Lua code) and the line number.

this is on the agenda for an upcoming release (expose more of the lua 
error context)

Hans

-----------------------------------------------------------------
                                           Hans Hagen | PRAGMA ADE
               Ridderstraat 27 | 8061 GH Hasselt | The Netherlands
     tel: 038 477 53 69 | voip: 087 875 68 74 | www.pragma-ade.com
                                              | www.pragma-pod.nl
-----------------------------------------------------------------

From luatex at nililand.de  Mon Jan 31 09:03:27 2011
From: luatex at nililand.de (Ulrike Fischer)
Date: Mon, 31 Jan 2011 09:03:27 +0100
Subject: [luatex] Lua 5.2.
References: <4D41EF51.7060101@free.fr>
 <CBCE9324-81E0-497A-9F2D-2CE885F1DF47@yahoo.de>
Message-ID: <a1jjbkctpdzs.dlg@nililand.de>

Am Fri, 28 Jan 2011 00:21:53 +0100 schrieb Philipp Stephani:

>> Most importantly, module() is deprecated, so packages should sooner or later do without.
> 
> What is the preferred way to implement modules then?

I found a message which says:

"- module and luaL_register deprecated, replaced by luaL_newlib and
luaL_setfuncs."

A discussion why module() is critizised is here:

http://lua-users.org/wiki/LuaModuleFunctionCritiqued

-- 
Ulrike Fischer 


From schuster.wolfgang at googlemail.com  Mon Jan 31 10:35:05 2011
From: schuster.wolfgang at googlemail.com (Wolfgang Schuster)
Date: Mon, 31 Jan 2011 10:35:05 +0100
Subject: [luatex] \input from Lua.
In-Reply-To: <4D43EFC1.3060505@free.fr>
References: <4D43EFC1.3060505@free.fr>
Message-ID: <AB21411C-E087-453D-8969-FC00F01F9B71@gmail.com>


Am 29.01.2011 um 11:45 schrieb Paul Isambert:

> Hello all,
> 
> Is there a way to make TeX read a file from the Lua interface? The best I can do is to issue:
> 
> tex.print("\\input{" .. file .. "}")
> 
> or something similar. But that is most inconvenient, and anyway it doesn't work in an initialization script. (What I do in such a script is register a function in "process_input_buffer" that returns the first line prefixed with the desired \input statements, and then unregisters itself at once. But that's horrible, it looks like a dirty trick!)

With ConTeXt you write the above as ?context.input("<file>")?.

http://pragma-ade.com/general/manuals/cld-mkiv.pdf

Wolfgang

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://tug.org/pipermail/luatex/attachments/20110131/25826365/attachment.html>

From zappathustra at free.fr  Mon Jan 31 11:29:59 2011
From: zappathustra at free.fr (Paul Isambert)
Date: Mon, 31 Jan 2011 11:29:59 +0100
Subject: [luatex] \input from Lua.
In-Reply-To: <AB21411C-E087-453D-8969-FC00F01F9B71@gmail.com>
References: <4D43EFC1.3060505@free.fr>
 <AB21411C-E087-453D-8969-FC00F01F9B71@gmail.com>
Message-ID: <4D468F27.6010705@free.fr>

Le 31/01/2011 10:35, Wolfgang Schuster a ?crit :
>
> Am 29.01.2011 um 11:45 schrieb Paul Isambert:
>
>> Hello all,
>>
>> Is there a way to make TeX read a file from the Lua interface? The 
>> best I can do is to issue:
>>
>> tex.print("\\input{" .. file .. "}")
>>
>> or something similar. But that is most inconvenient, and anyway it 
>> doesn't work in an initialization script. (What I do in such a script 
>> is register a function in "process_input_buffer" that returns the 
>> first line prefixed with the desired \input statements, and then 
>> unregisters itself at once. But that's horrible, it looks like a 
>> dirty trick!)
>
> With ConTeXt you write the above as ?context.input("<file>")?.
>
> http://pragma-ade.com/general/manuals/cld-mkiv.pdf

Thanks, Wolfgang. Too bad I don't use ConTeXt :)
Anyway I've looked at the implementation (mult-cld.lua), and context.foo 
basically returns tex.sprint("\foo"), so it doesn't work in an 
initialization script.

Best,
Paul

From luigi.scarso at gmail.com  Mon Jan 31 11:31:47 2011
From: luigi.scarso at gmail.com (luigi scarso)
Date: Mon, 31 Jan 2011 11:31:47 +0100
Subject: [luatex] \input from Lua.
In-Reply-To: <4D468F27.6010705@free.fr>
References: <4D43EFC1.3060505@free.fr>
 <AB21411C-E087-453D-8969-FC00F01F9B71@gmail.com>
 <4D468F27.6010705@free.fr>
Message-ID: <AANLkTi=O2mXfknCZA=mn35=6yi6XnobyA1Te6RE03X9s@mail.gmail.com>

On Mon, Jan 31, 2011 at 11:29 AM, Paul Isambert <zappathustra at free.fr> wrote:
> Le 31/01/2011 10:35, Wolfgang Schuster a ?crit :
>>
>> Am 29.01.2011 um 11:45 schrieb Paul Isambert:
>>
>>> Hello all,
>>>
>>> Is there a way to make TeX read a file from the Lua interface? The best I
>>> can do is to issue:
>>>
>>> tex.print("\\input{" .. file .. "}")
>>>
>>> or something similar. But that is most inconvenient, and anyway it
>>> doesn't work in an initialization script. (What I do in such a script is
>>> register a function in "process_input_buffer" that returns the first line
>>> prefixed with the desired \input statements, and then unregisters itself at
>>> once. But that's horrible, it looks like a dirty trick!)
>>
>> With ConTeXt you write the above as ?context.input("<file>")?.
>>
>> http://pragma-ade.com/general/manuals/cld-mkiv.pdf
>
> Thanks, Wolfgang. Too bad I don't use ConTeXt :)
perhaps  metatex ?

-- 
luigi


From zappathustra at free.fr  Mon Jan 31 13:19:38 2011
From: zappathustra at free.fr (Paul Isambert)
Date: Mon, 31 Jan 2011 13:19:38 +0100
Subject: [luatex] \input from Lua.
In-Reply-To: <AANLkTi=O2mXfknCZA=mn35=6yi6XnobyA1Te6RE03X9s@mail.gmail.com>
References: <4D43EFC1.3060505@free.fr>
 <AB21411C-E087-453D-8969-FC00F01F9B71@gmail.com> <4D468F27.6010705@free.fr>
 <AANLkTi=O2mXfknCZA=mn35=6yi6XnobyA1Te6RE03X9s@mail.gmail.com>
Message-ID: <4D46A8DA.5090901@free.fr>

Le 31/01/2011 11:31, luigi scarso a ?crit :
> On Mon, Jan 31, 2011 at 11:29 AM, Paul Isambert<zappathustra at free.fr>  wrote:
>> Le 31/01/2011 10:35, Wolfgang Schuster a ?crit :
>>> Am 29.01.2011 um 11:45 schrieb Paul Isambert:
>>>
>>>> Hello all,
>>>>
>>>> Is there a way to make TeX read a file from the Lua interface? The best I
>>>> can do is to issue:
>>>>
>>>> tex.print("\\input{" .. file .. "}")
>>>>
>>>> or something similar. But that is most inconvenient, and anyway it
>>>> doesn't work in an initialization script. (What I do in such a script is
>>>> register a function in "process_input_buffer" that returns the first line
>>>> prefixed with the desired \input statements, and then unregisters itself at
>>>> once. But that's horrible, it looks like a dirty trick!)
>>> With ConTeXt you write the above as ?context.input("<file>")?.
>>>
>>> http://pragma-ade.com/general/manuals/cld-mkiv.pdf
>> Thanks, Wolfgang. Too bad I don't use ConTeXt :)
> perhaps  metatex ?
>
``I'm not a monster, I'm a plain TeX user,'' says John Merrick in a line 
deemed too obscure by the producers and replaced with ``I'm a human 
being'' behind David Lynch's back.

From luigi.scarso at gmail.com  Mon Jan 31 13:59:57 2011
From: luigi.scarso at gmail.com (luigi scarso)
Date: Mon, 31 Jan 2011 13:59:57 +0100
Subject: [luatex] \input from Lua.
In-Reply-To: <4D46A8DA.5090901@free.fr>
References: <4D43EFC1.3060505@free.fr>
 <AB21411C-E087-453D-8969-FC00F01F9B71@gmail.com>
 <4D468F27.6010705@free.fr>
 <AANLkTi=O2mXfknCZA=mn35=6yi6XnobyA1Te6RE03X9s@mail.gmail.com>
 <4D46A8DA.5090901@free.fr>
Message-ID: <AANLkTinXNM8sNCxSkVBDWOacwjeSGDcMKJ2U0GOs1Pmb@mail.gmail.com>

On Mon, Jan 31, 2011 at 1:19 PM, Paul Isambert <zappathustra at free.fr> wrote:
> ``I'm not a monster, I'm a plain TeX user,''
TeX users are a sort of monster anyway -- typographic programming is a sort
black magick for many "standard" programmers.
MetaTeX can be a sort of "only what you really need from context"
something in between plain Luatex and full context mkiv.



-- 
luigi

From taco at elvenkind.com  Mon Jan 31 14:08:59 2011
From: taco at elvenkind.com (Taco Hoekwater)
Date: Mon, 31 Jan 2011 14:08:59 +0100
Subject: [luatex] \input from Lua.
In-Reply-To: <4D468F27.6010705@free.fr>
References: <4D43EFC1.3060505@free.fr>
 <AB21411C-E087-453D-8969-FC00F01F9B71@gmail.com> <4D468F27.6010705@free.fr>
Message-ID: <4D46B46B.4040500@elvenkind.com>



On 01/31/11 11:29, Paul Isambert wrote:
> Anyway I've looked at the implementation (mult-cld.lua), and context.foo
> basically returns tex.sprint("\foo"), so it doesn't work in an
> initialization script.

One of the next versions will have

  tex.initialize()

available in the startup script to boot the typesetting parts
of the machinery. After that is done, you will indeed be able
to do tex.print("\input ") from the init script.

Best wishes,
Taco

From st_philipp at yahoo.de  Mon Jan 31 14:27:12 2011
From: st_philipp at yahoo.de (Philipp Stephani)
Date: Mon, 31 Jan 2011 14:27:12 +0100
Subject: [luatex] Lua 5.2.
In-Reply-To: <a1jjbkctpdzs.dlg@nililand.de>
References: <4D41EF51.7060101@free.fr>
 <CBCE9324-81E0-497A-9F2D-2CE885F1DF47@yahoo.de>
 <a1jjbkctpdzs.dlg@nililand.de>
Message-ID: <4D46B8B0.5020002@yahoo.de>

Am 31.01.2011 09:03, schrieb Ulrike Fischer:
> Am Fri, 28 Jan 2011 00:21:53 +0100 schrieb Philipp Stephani:
> 
>>> Most importantly, module() is deprecated, so packages should sooner or later do without.
>>
>> What is the preferred way to implement modules then?
> 
> I found a message which says:
> 
> "- module and luaL_register deprecated, replaced by luaL_newlib and
> luaL_setfuncs."

Thanks, but these are C functions that wouldn't be of much help if you
want to write a Lua module. I'm asking this because I have no experience
in Lua and don't want to write obsolete code right from the beginning.

From zappathustra at free.fr  Mon Jan 31 14:32:17 2011
From: zappathustra at free.fr (Paul Isambert)
Date: Mon, 31 Jan 2011 14:32:17 +0100
Subject: [luatex] \input from Lua.
In-Reply-To: <AANLkTinXNM8sNCxSkVBDWOacwjeSGDcMKJ2U0GOs1Pmb@mail.gmail.com>
References: <4D43EFC1.3060505@free.fr>
 <AB21411C-E087-453D-8969-FC00F01F9B71@gmail.com> <4D468F27.6010705@free.fr>
 <AANLkTi=O2mXfknCZA=mn35=6yi6XnobyA1Te6RE03X9s@mail.gmail.com>
 <4D46A8DA.5090901@free.fr>
 <AANLkTinXNM8sNCxSkVBDWOacwjeSGDcMKJ2U0GOs1Pmb@mail.gmail.com>
Message-ID: <4D46B9E1.5060901@free.fr>

Le 31/01/2011 13:59, luigi scarso a ?crit :
> On Mon, Jan 31, 2011 at 1:19 PM, Paul Isambert<zappathustra at free.fr>  wrote:
>> ``I'm not a monster, I'm a plain TeX user,''
> TeX users are a sort of monster anyway -- typographic programming is a sort
> black magick for many "standard" programmers.

And for typographers especially. I really believe the next step is going 
WYSIWYG, without intermediate files so you can also manipulate the 
source. This would imply processing documents in parts, I suppose, e.g. 
only the current paragraph and page, under the assumption that no change 
affects the rest (otherwise, reprocess the entire document).

> MetaTeX can be a sort of "only what you really need from context"
> something in between plain Luatex and full context mkiv.

I see, a bit like miniltx. I'll give it a try some day.

Best,
Paul

From zappathustra at free.fr  Mon Jan 31 14:38:38 2011
From: zappathustra at free.fr (Paul Isambert)
Date: Mon, 31 Jan 2011 14:38:38 +0100
Subject: [luatex] Lua 5.2.
In-Reply-To: <4D46B8B0.5020002@yahoo.de>
References: <4D41EF51.7060101@free.fr>
 <CBCE9324-81E0-497A-9F2D-2CE885F1DF47@yahoo.de>
 <a1jjbkctpdzs.dlg@nililand.de> <4D46B8B0.5020002@yahoo.de>
Message-ID: <4D46BB5E.5070407@free.fr>

Le 31/01/2011 14:27, Philipp Stephani a ?crit :
> Am 31.01.2011 09:03, schrieb Ulrike Fischer:
>> Am Fri, 28 Jan 2011 00:21:53 +0100 schrieb Philipp Stephani:
>>
>>>> Most importantly, module() is deprecated, so packages should sooner or later do without.
>>> What is the preferred way to implement modules then?
>> I found a message which says:
>>
>> "- module and luaL_register deprecated, replaced by luaL_newlib and
>> luaL_setfuncs."
> Thanks, but these are C functions that wouldn't be of much help if you
> want to write a Lua module. I'm asking this because I have no experience
> in Lua and don't want to write obsolete code right from the beginning.

Then really read chapter 15 of PIL: http://www.lua.org/pil/15.html
The cool thing is that the online version documents Lua 5.0, and 
module() was introduced in 5.1.

[Another change worth mentioning in 5.2: "arg" in e.g.

function myfunction (...)
   for a, b in ipairs(arg) do
     whatever(b)
   end
end

won't be defined anymore (it already behaves strangely anyway). Adding 
"arg = {...}" at the beginning does the job.]

Best,
Paul

