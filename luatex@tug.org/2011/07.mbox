From taco at elvenkind.com  Fri Jul  1 09:09:20 2011
From: taco at elvenkind.com (Taco Hoekwater)
Date: Fri, 01 Jul 2011 09:09:20 +0200
Subject: [luatex] compiling on MINIX3
In-Reply-To: <7B4626C28B06A7418E938BF73D6DEE18FED4AA0F1D@KCL-MAIL05.kclad.ds.kcl.ac.uk>
References: <7B4626C28B06A7418E938BF73D6DEE18FED4AA0F01@KCL-MAIL05.kclad.ds.kcl.ac.uk>
 <7B4626C28B06A7418E938BF73D6DEE18FED4AA0F1D@KCL-MAIL05.kclad.ds.kcl.ac.uk>
Message-ID: <4E0D72A0.9060904@elvenkind.com>

On 06/30/2011 06:02 PM, Reviczky, Adam wrote:
> Hi Taco
>
>> There is not a lot I can do about this problem from here, I fear.
>> You could try to do an explicit export of MAKE=gmake, maybe that
>> helps.
>
> Thanks, that indeed helps.
> Any chance we can change build.sh?

Done (that was easy).

>
> It looks like we can check for minix though by:
>
> ---
> -#if defined(_AIX)
> +#if defined(_AIX) || defined(__minix)
>   #include<strings.h>  /* for strcasecmp */
>   #endif

Ok, but have not applied that yet, because that is not the end
of it anyway.

>
> gcc -DHAVE_CONFIG_H -I. -I../../../source/texk/web2c -I./w2c  -DLUASOCKET_DEBUG -I../../../source/texk/web2c/luatexdir/luasocket -I../../../source/texk/web2c/luatexdir/lua51   -g -O2 -MT libluasocket_a-options.o -MD -MP -MF .deps/libluasocket_a-options.Tpo -c -o libluasocket_a-options.o `test -f 'luatexdir/luasocket/src/options.c' || echo '../../../source/texk/web2c/'`luatexdir/luasocket/src/options.c
> ../../../source/texk/web2c/luatexdir/luasocket/src/options.c: In function 'opt_dontroute':
> ../../../source/texk/web2c/luatexdir/luasocket/src/options.c:62: error: 'SO_DONTROUTE' undeclared (first use in this function)
> ../../../source/texk/web2c/luatexdir/luasocket/src/options.c:62: error: (Each undeclared identifier is reported only once
> ../../../source/texk/web2c/luatexdir/luasocket/src/options.c:62: error: for each function it appears in.)

This is somewhat more tricky, as it seems that setsockopt() in minix is
far from complete, so lots of #defines are missing from the headers.

You could try (just for the sake of testing compilation) to change the
relevant lines to something like this:

int opt_dontroute(lua_State *L, p_socket ps)
{
#ifdef SO_DONTROUTE
     return opt_setboolean(L, ps, SOL_SOCKET, SO_DONTROUTE); /* 62 */
#else
     return 0;
#endif
}


Then, if luasocket/src/options.c is the last of the problems, we can do 
a better fix later.

Best wishes,
Taco

From nomosnomos at gmail.com  Fri Jul  1 12:03:32 2011
From: nomosnomos at gmail.com (Dohyun Kim)
Date: Fri, 1 Jul 2011 19:03:32 +0900
Subject: [luatex] strange behavior of zero-width box
In-Reply-To: <20110630121704.129930@gmx.net>
References: <BANLkTimsM_9x=iwSGNgj4tLCuPJDygpOHA@mail.gmail.com>
 <4E0C01A9.203@elvenkind.com> <20110630120807.194730@gmx.net>
 <20110630121704.129930@gmx.net>
Message-ID: <BANLkTimzTMKsEUcirNfzo2Ko6wAJbQZrSQ@mail.gmail.com>

2011/6/30 Hartmut Henkel <hartmut_henkel at gmx.de>:
> but there is indeed a luatex bug when the font is the same:
>
> pdfcompresslevel=0
> \font\X=cmr10 % {Junicode-Regular:mode=node;salt=1}
> \font\Y=cmr10 % {Junicode-Regular:mode=node;salt=2}
> \leavevmode\X\hbox{1\llap{\Y2}}3
> \bye
>

Many thanks.
The zero-width box issue has gone with commit rev. 4318.

But I have found another problem:

\leavevmode
\pdfsave
\pdfsetmatrix{0.87 -0.5 0.5 0.87}
A
\pdfrestore
B
\bye

Now the character "B" has disappeared in the pdf file.

Best,

-- 
Dohyun Kim
College of Law, Dongguk University
Seoul, Republic of Korea

From hartmut_henkel at gmx.de  Fri Jul  1 12:15:10 2011
From: hartmut_henkel at gmx.de (Hartmut Henkel)
Date: Fri, 01 Jul 2011 12:15:10 +0200
Subject: [luatex] strange behavior of zero-width box
In-Reply-To: <BANLkTimzTMKsEUcirNfzo2Ko6wAJbQZrSQ@mail.gmail.com>
References: <BANLkTimsM_9x=iwSGNgj4tLCuPJDygpOHA@mail.gmail.com>
 <4E0C01A9.203@elvenkind.com> <20110630120807.194730@gmx.net>
 <20110630121704.129930@gmx.net>
 <BANLkTimzTMKsEUcirNfzo2Ko6wAJbQZrSQ@mail.gmail.com>
Message-ID: <20110701101510.316940@gmx.net>

> Many thanks.
> The zero-width box issue has gone with commit rev. 4318.
> 
> But I have found another problem:
> 
> \leavevmode
> \pdfsave
> \pdfsetmatrix{0.87 -0.5 0.5 0.87}
> A
> \pdfrestore
> B
> \bye
> 
> Now the character "B" has disappeared in the pdf file.

...and i was so _sure_ that it's robust now. Many thanks, i see the problem, will fix...

Regards, Hartmut
-- 
NEU: FreePhone - kostenlos mobil telefonieren!			
Jetzt informieren: http://www.gmx.net/de/go/freephone

From hartmut_henkel at gmx.de  Fri Jul  1 12:15:10 2011
From: hartmut_henkel at gmx.de (Hartmut Henkel)
Date: Fri, 01 Jul 2011 12:15:10 +0200
Subject: [luatex] strange behavior of zero-width box
In-Reply-To: <BANLkTimzTMKsEUcirNfzo2Ko6wAJbQZrSQ@mail.gmail.com>
References: <BANLkTimsM_9x=iwSGNgj4tLCuPJDygpOHA@mail.gmail.com>
 <4E0C01A9.203@elvenkind.com> <20110630120807.194730@gmx.net>
 <20110630121704.129930@gmx.net>
 <BANLkTimzTMKsEUcirNfzo2Ko6wAJbQZrSQ@mail.gmail.com>
Message-ID: <20110701101510.316940@gmx.net>

> Many thanks.
> The zero-width box issue has gone with commit rev. 4318.
> 
> But I have found another problem:
> 
> \leavevmode
> \pdfsave
> \pdfsetmatrix{0.87 -0.5 0.5 0.87}
> A
> \pdfrestore
> B
> \bye
> 
> Now the character "B" has disappeared in the pdf file.

...and i was so _sure_ that it's robust now. Many thanks, i see the problem, will fix...

Regards, Hartmut
-- 
NEU: FreePhone - kostenlos mobil telefonieren!			
Jetzt informieren: http://www.gmx.net/de/go/freephone

From adam.reviczky at kcl.ac.uk  Fri Jul  1 19:47:35 2011
From: adam.reviczky at kcl.ac.uk (Reviczky, Adam)
Date: Fri, 1 Jul 2011 18:47:35 +0100
Subject: [luatex] compiling on MINIX3
In-Reply-To: <4E0D72A0.9060904@elvenkind.com>
References: <7B4626C28B06A7418E938BF73D6DEE18FED4AA0F01@KCL-MAIL05.kclad.ds.kcl.ac.uk>
 <7B4626C28B06A7418E938BF73D6DEE18FED4AA0F1D@KCL-MAIL05.kclad.ds.kcl.ac.uk>,
 <4E0D72A0.9060904@elvenkind.com>
Message-ID: <7B4626C28B06A7418E938BF73D6DEE18FED4AA0F38@KCL-MAIL05.kclad.ds.kcl.ac.uk>

> > Any chance we can change build.sh?
> 
> Done (that was easy).

Thanks.

> > -#if defined(_AIX)
> > +#if defined(_AIX) || defined(__minix)
> >   #include<strings.h>  /* for strcasecmp */
> >   #endif
> 
> Ok, but have not applied that yet, because that is not the end
> of it anyway.

Yes, I was thinking the same.

> This is somewhat more tricky, as it seems that setsockopt() in minix is
> far from complete, so lots of #defines are missing from the headers.
> 
> You could try (just for the sake of testing compilation) to change the
> relevant lines to something like this:
> 
> int opt_dontroute(lua_State *L, p_socket ps)
> {
> #ifdef SO_DONTROUTE
>      return opt_setboolean(L, ps, SOL_SOCKET, SO_DONTROUTE); /* 62 */
> #else
>      return 0;
> #endif
> }


That gives now:

gcc -DHAVE_CONFIG_H -I. -I../../../source/texk/web2c -I./w2c  -DLUASOCKET_DEBUG -I../../../source/texk/web2c/luatexdir/luasocket -I../../../source/texk/web2c/luatexdir/lua51   -g -O2 -MT libluasocket_a-options.o -MD -MP -MF .deps/libluasocket_a-options.Tpo -c -o libluasocket_a-options.o `test -f 'luatexdir/luasocket/src/options.c' || echo '../../../source/texk/web2c/'`luatexdir/luasocket/src/options.c
../../../source/texk/web2c/luatexdir/luasocket/src/options.c: In function 'opt_broadcast':
../../../source/texk/web2c/luatexdir/luasocket/src/options.c:71: error: 'SO_BROADCAST' undeclared (first use in this function)
../../../source/texk/web2c/luatexdir/luasocket/src/options.c:71: error: (Each undeclared identifier is reported only once
../../../source/texk/web2c/luatexdir/luasocket/src/options.c:71: error: for each function it appears in.)
../../../source/texk/web2c/luatexdir/luasocket/src/options.c: In function 'opt_ip_multicast_loop':
../../../source/texk/web2c/luatexdir/luasocket/src/options.c:76: error: 'IP_MULTICAST_LOOP' undeclared (first use in this function)
../../../source/texk/web2c/luatexdir/luasocket/src/options.c: In function 'opt_linger':
../../../source/texk/web2c/luatexdir/luasocket/src/options.c:81: error: storage size of 'li' isn't known
../../../source/texk/web2c/luatexdir/luasocket/src/options.c:93: error: 'SO_LINGER' undeclared (first use in this function)
../../../source/texk/web2c/luatexdir/luasocket/src/options.c: In function 'opt_ip_multicast_ttl':
../../../source/texk/web2c/luatexdir/luasocket/src/options.c:99: error: 'SO_LINGER' undeclared (first use in this function)
gmake: *** [libluasocket_a-options.o] Error 1
strip: 'build/texk/web2c/luatex': No such file
ls: build/texk/web2c/luatex: No such file or directory

Do I need to make a check with all of the values above (eg: SO_BROADCAST, IP_MULTICAST_LOOP and SO_LINGER)?

Best wishes
Adam


From patrick at gundla.ch  Sun Jul  3 12:31:24 2011
From: patrick at gundla.ch (Patrick Gundlach)
Date: Sun, 3 Jul 2011 12:31:24 +0200
Subject: [luatex] FYI: my experiments on tex.shipout() and links
In-Reply-To: <BANLkTikwnsqU_AOYQj=JbeDHBGkW=00kdA@mail.gmail.com>
References: <724D87DF-9B7E-49D5-9665-4C053AE2545F@gundla.ch>
 <BANLkTikwnsqU_AOYQj=JbeDHBGkW=00kdA@mail.gmail.com>
Message-ID: <3372FE91-B5DB-4FDB-A4F7-C797961E1F37@gundla.ch>


Am 30.06.2011 um 13:24 schrieb luigi scarso:

> On Thu, Jun 30, 2011 at 12:57 PM, Patrick Gundlach <patrick at gundla.ch> wrote:
>> Just in case someone is interested in my experiments with tex.shipout and the pdf_dest, pdf_start_link nodes, here is a simple example. Not clever, but you get the point.
>> 
>> Thanks to all again!
> Why not put all on wiki.luatex.org ?

I have started a page at http://wiki.luatex.org/index.php/TeX_without_TeX - everyone can please expand this, translate it into english, shuffle things around or delete if you believe it is crappy.

I will continue this page if nobody stops me.

Patrick




From luigi.scarso at gmail.com  Sun Jul  3 20:44:51 2011
From: luigi.scarso at gmail.com (luigi scarso)
Date: Sun, 3 Jul 2011 20:44:51 +0200
Subject: [luatex] FYI: my experiments on tex.shipout() and links
In-Reply-To: <3372FE91-B5DB-4FDB-A4F7-C797961E1F37@gundla.ch>
References: <724D87DF-9B7E-49D5-9665-4C053AE2545F@gundla.ch>
 <BANLkTikwnsqU_AOYQj=JbeDHBGkW=00kdA@mail.gmail.com>
 <3372FE91-B5DB-4FDB-A4F7-C797961E1F37@gundla.ch>
Message-ID: <CAG5iGsB99qmFpR7F3trV2kWdT_tA_BU83tLhuRZahRj0ONBw=g@mail.gmail.com>

On Sun, Jul 3, 2011 at 12:31 PM, Patrick Gundlach <patrick at gundla.ch> wrote:
>
> Am 30.06.2011 um 13:24 schrieb luigi scarso:
>
>> On Thu, Jun 30, 2011 at 12:57 PM, Patrick Gundlach <patrick at gundla.ch> wrote:
>>> Just in case someone is interested in my experiments with tex.shipout and the pdf_dest, pdf_start_link nodes, here is a simple example. Not clever, but you get the point.
>>>
>>> Thanks to all again!
>> Why not put all on wiki.luatex.org ?
>
> I have started a page at http://wiki.luatex.org/index.php/TeX_without_TeX - everyone can please expand this, translate it into english, shuffle things around or delete if you believe it is crappy.
>
> I will continue this page if nobody stops me.
I like the pictures of the boxes -- what are you using for them ?

-- 
luigi

From martin at oneiros.de  Sun Jul  3 21:05:27 2011
From: martin at oneiros.de (=?ISO-8859-1?Q?Martin_Schr=F6der?=)
Date: Sun, 3 Jul 2011 21:05:27 +0200
Subject: [luatex] FYI: my experiments on tex.shipout() and links
In-Reply-To: <CAG5iGsB99qmFpR7F3trV2kWdT_tA_BU83tLhuRZahRj0ONBw=g@mail.gmail.com>
References: <724D87DF-9B7E-49D5-9665-4C053AE2545F@gundla.ch>
 <BANLkTikwnsqU_AOYQj=JbeDHBGkW=00kdA@mail.gmail.com>
 <3372FE91-B5DB-4FDB-A4F7-C797961E1F37@gundla.ch>
 <CAG5iGsB99qmFpR7F3trV2kWdT_tA_BU83tLhuRZahRj0ONBw=g@mail.gmail.com>
Message-ID: <CAP7DCDf939PBETkxb6shQSMDAm6jExwHKCOottU2-nV69jVWvg@mail.gmail.com>

2011/7/3 luigi scarso <luigi.scarso at gmail.com>:
> I like the pictures of the boxes -- what are you using for them ?

Most likely Graphviz.

Best
   Martin

From luigi.scarso at gmail.com  Sun Jul  3 21:20:22 2011
From: luigi.scarso at gmail.com (luigi scarso)
Date: Sun, 3 Jul 2011 21:20:22 +0200
Subject: [luatex] FYI: my experiments on tex.shipout() and links
In-Reply-To: <CAP7DCDf939PBETkxb6shQSMDAm6jExwHKCOottU2-nV69jVWvg@mail.gmail.com>
References: <724D87DF-9B7E-49D5-9665-4C053AE2545F@gundla.ch>
 <BANLkTikwnsqU_AOYQj=JbeDHBGkW=00kdA@mail.gmail.com>
 <3372FE91-B5DB-4FDB-A4F7-C797961E1F37@gundla.ch>
 <CAG5iGsB99qmFpR7F3trV2kWdT_tA_BU83tLhuRZahRj0ONBw=g@mail.gmail.com>
 <CAP7DCDf939PBETkxb6shQSMDAm6jExwHKCOottU2-nV69jVWvg@mail.gmail.com>
Message-ID: <CAG5iGsBz84uyYC9J89oJEyuDOScQUYA+UHw7-5Db=+HaNe0-7w@mail.gmail.com>

On Sun, Jul 3, 2011 at 9:05 PM, Martin Schr?der <martin at oneiros.de> wrote:
> 2011/7/3 luigi scarso <luigi.scarso at gmail.com>:
>> I like the pictures of the boxes -- what are you using for them ?
>
> Most likely Graphviz.
with that shadows ?

-- 
luigi


From patrick at gundla.ch  Sun Jul  3 21:50:05 2011
From: patrick at gundla.ch (Patrick Gundlach)
Date: Sun, 3 Jul 2011 21:50:05 +0200
Subject: [luatex] FYI: my experiments on tex.shipout() and links
In-Reply-To: <CAG5iGsB99qmFpR7F3trV2kWdT_tA_BU83tLhuRZahRj0ONBw=g@mail.gmail.com>
References: <724D87DF-9B7E-49D5-9665-4C053AE2545F@gundla.ch>
 <BANLkTikwnsqU_AOYQj=JbeDHBGkW=00kdA@mail.gmail.com>
 <3372FE91-B5DB-4FDB-A4F7-C797961E1F37@gundla.ch>
 <CAG5iGsB99qmFpR7F3trV2kWdT_tA_BU83tLhuRZahRj0ONBw=g@mail.gmail.com>
Message-ID: <CADC8FC5-395B-402F-B989-0B0EFCA6C994@gundla.ch>


Am 03.07.2011 um 20:44 schrieb luigi scarso:

> On Sun, Jul 3, 2011 at 12:31 PM, Patrick Gundlach <patrick at gundla.ch> wrote:
>> 
>> Am 30.06.2011 um 13:24 schrieb luigi scarso:
>> 
>>> On Thu, Jun 30, 2011 at 12:57 PM, Patrick Gundlach <patrick at gundla.ch> wrote:
>>>> Just in case someone is interested in my experiments with tex.shipout and the pdf_dest, pdf_start_link nodes, here is a simple example. Not clever, but you get the point.
>>>> 
>>>> Thanks to all again!
>>> Why not put all on wiki.luatex.org ?
>> 
>> I have started a page at http://wiki.luatex.org/index.php/TeX_without_TeX - everyone can please expand this, translate it into english, shuffle things around or delete if you believe it is crappy.
>> 
>> I will continue this page if nobody stops me.
> I like the pictures of the boxes -- what are you using for them ?

OmniGraffle for the Mac. Heavily inspired by graphviz (see also https://gist.github.com/556247 and the attached image - made with graphviz).

Patrick

-------------- next part --------------
A non-text attachment was scrubbed...
Name: sample from graphviz.png
Type: image/png
Size: 54448 bytes
Desc: not available
URL: <http://tug.org/pipermail/luatex/attachments/20110703/7a6b43ae/attachment-0001.png>

From zappathustra at free.fr  Mon Jul  4 09:06:50 2011
From: zappathustra at free.fr (Paul Isambert)
Date: Mon, 04 Jul 2011 09:06:50 +0200
Subject: [luatex] Behavior of node lists.
Message-ID: <4E11668A.8050208@free.fr>

Hello all,

Problem 1:
%%%
\setbox0=\hbox{01}

\directlua{
local done
for n in node.traverse(tex.box[0].head) do
   texio.write_nl("Considering " .. string.char(n.char))
   if not done then
     local next = n.next
     done = true
     tex.box[0].head = node.remove(tex.box[0].head, n)
     tex.box[0].head = node.remove(tex.box[0].head, next)
   end
end}

\box0 \bye
%%%

When you consider "0", you remove both "0" and "1", so you'd expect the 
loop to end there; but no, "1" is considered too (even though the box is 
really empty). The strange things is that if you do not remove "0", then 
"1" isn't considered; as if node.traverse is a bit lost when you remove 
both the current node and the one it's supposed to scan next. (As far as 
I can see, this doesn't hinge on "0" being the head of the list.) Is 
this a bug, or have I misunderstood something?



Problem 2: -- A question, rather.
The manual says you're in charge of ensuring that in 
"node.insert_after(H, N, x)", N is in the list denoted by H. The thing 
is, H doesn't seem to matter at all, unless it's nil:

\setbox0=\hbox{X}
\setbox1=\hbox{abc}

\directlua{
local n = node.copy(tex.box[0].head)
node.insert_after(tex.box[0].head, tex.box[1].head, n)
% Works too:
% node.insert_after(tex.nest[tex.nest.ptr].head, tex.box[1].head, n)
}

\box1
\bye

So what's the need to denote the list where the insertion occurs if it 
is ignored? In other words, couldn't node.insert_after and associates 
work with only two arguments?

Best,
Paul

From luigi.scarso at gmail.com  Mon Jul  4 09:22:37 2011
From: luigi.scarso at gmail.com (luigi scarso)
Date: Mon, 4 Jul 2011 09:22:37 +0200
Subject: [luatex] Behavior of node lists.
In-Reply-To: <4E11668A.8050208@free.fr>
References: <4E11668A.8050208@free.fr>
Message-ID: <CAG5iGsCazMgB6iMkYzHvcx0Q3XetaJJeAk2OH0HrAPK3P2JHLQ@mail.gmail.com>

On Mon, Jul 4, 2011 at 9:06 AM, Paul Isambert <zappathustra at free.fr> wrote:
> Hello all,
>
> Problem 1:
> %%%
> \setbox0=\hbox{01}
>
> \directlua{
> local done
> for n in node.traverse(tex.box[0].head) do
> ?texio.write_nl("Considering " .. string.char(n.char))
> ?if not done then
> ? ?local next = n.next
> ? ?done = true
> ? ?tex.box[0].head = node.remove(tex.box[0].head, n)
> ? ?tex.box[0].head = node.remove(tex.box[0].head, next)
> ?end
> end}
>
> \box0 \bye
> %%%
I've no checked but does it change if you say
local done=false
?
-- 
luigi


From luigi.scarso at gmail.com  Mon Jul  4 09:42:42 2011
From: luigi.scarso at gmail.com (luigi scarso)
Date: Mon, 4 Jul 2011 09:42:42 +0200
Subject: [luatex] Behavior of node lists.
In-Reply-To: <CAG5iGsCazMgB6iMkYzHvcx0Q3XetaJJeAk2OH0HrAPK3P2JHLQ@mail.gmail.com>
References: <4E11668A.8050208@free.fr>
 <CAG5iGsCazMgB6iMkYzHvcx0Q3XetaJJeAk2OH0HrAPK3P2JHLQ@mail.gmail.com>
Message-ID: <CAG5iGsCc0WMi5Fpm+hu6nSZGi2OitQwfxECJXmh0JgzKuyRUJQ@mail.gmail.com>

On Mon, Jul 4, 2011 at 9:22 AM, luigi scarso <luigi.scarso at gmail.com> wrote:
> On Mon, Jul 4, 2011 at 9:06 AM, Paul Isambert <zappathustra at free.fr> wrote:
>> Hello all,
>>
>> Problem 1:
>> %%%
>> \setbox0=\hbox{01}
>>
>> \directlua{
>> local done
>> for n in node.traverse(tex.box[0].head) do
>> ?texio.write_nl("Considering " .. string.char(n.char))
>> ?if not done then
>> ? ?local next = n.next
>> ? ?done = true
>> ? ?tex.box[0].head = node.remove(tex.box[0].head, n)
>> ? ?tex.box[0].head = node.remove(tex.box[0].head, next)
>> ?end
>> end}
>>
>> \box0 \bye
>> %%%
> I've no checked but does it change if you say
> local done=false
> ?
of course no, but it's a matter of style.
I'm always in trouble  when I modify the table that is the argument of
a for loop,
I mean something like
for k,v in pairs(my_table) do
  modify(my_table)
end


-- 
luigi


From taco at elvenkind.com  Mon Jul  4 09:44:55 2011
From: taco at elvenkind.com (Taco Hoekwater)
Date: Mon, 04 Jul 2011 09:44:55 +0200
Subject: [luatex] Behavior of node lists.
In-Reply-To: <CAG5iGsCc0WMi5Fpm+hu6nSZGi2OitQwfxECJXmh0JgzKuyRUJQ@mail.gmail.com>
References: <4E11668A.8050208@free.fr>
 <CAG5iGsCazMgB6iMkYzHvcx0Q3XetaJJeAk2OH0HrAPK3P2JHLQ@mail.gmail.com>
 <CAG5iGsCc0WMi5Fpm+hu6nSZGi2OitQwfxECJXmh0JgzKuyRUJQ@mail.gmail.com>
Message-ID: <4E116F77.3020809@elvenkind.com>

On 07/04/2011 09:42 AM, luigi scarso wrote:
> of course no, but it's a matter of style.
> I'm always in trouble  when I modify the table that is the argument of
> a for loop,
> I mean something like
> for k,v in pairs(my_table) do
>    modify(my_table)
> end

Exactly. Do not do that, please.

Best wishes,
Taco

From taco at elvenkind.com  Mon Jul  4 09:46:36 2011
From: taco at elvenkind.com (Taco Hoekwater)
Date: Mon, 04 Jul 2011 09:46:36 +0200
Subject: [luatex] compiling on MINIX3
In-Reply-To: <7B4626C28B06A7418E938BF73D6DEE18FED4AA0F38@KCL-MAIL05.kclad.ds.kcl.ac.uk>
References: <7B4626C28B06A7418E938BF73D6DEE18FED4AA0F01@KCL-MAIL05.kclad.ds.kcl.ac.uk>
 <7B4626C28B06A7418E938BF73D6DEE18FED4AA0F1D@KCL-MAIL05.kclad.ds.kcl.ac.uk>,
 <4E0D72A0.9060904@elvenkind.com>
 <7B4626C28B06A7418E938BF73D6DEE18FED4AA0F38@KCL-MAIL05.kclad.ds.kcl.ac.uk>
Message-ID: <4E116FDC.8040403@elvenkind.com>

On 07/01/2011 07:47 PM, Reviczky, Adam wrote:
> ../../../source/texk/web2c/luatexdir/luasocket/src/options.c: In function 'opt_ip_multicast_ttl':
> ../../../source/texk/web2c/luatexdir/luasocket/src/options.c:99: error: 'SO_LINGER' undeclared (first use in this function)
> gmake: *** [libluasocket_a-options.o] Error 1
> strip: 'build/texk/web2c/luatex': No such file
> ls: build/texk/web2c/luatex: No such file or directory
>
> Do I need to make a check with all of the values above (eg: SO_BROADCAST, IP_MULTICAST_LOOP and SO_LINGER)?

You will have to do special checks around all source lines from the 
error messages, for the values mentioned in those error messages.

Best wishes,
Taco

From zappathustra at free.fr  Mon Jul  4 10:02:19 2011
From: zappathustra at free.fr (Paul Isambert)
Date: Mon, 04 Jul 2011 10:02:19 +0200
Subject: [luatex] Behavior of node lists.
In-Reply-To: <4E116F77.3020809@elvenkind.com>
References: <4E11668A.8050208@free.fr>
 <CAG5iGsCazMgB6iMkYzHvcx0Q3XetaJJeAk2OH0HrAPK3P2JHLQ@mail.gmail.com>
 <CAG5iGsCc0WMi5Fpm+hu6nSZGi2OitQwfxECJXmh0JgzKuyRUJQ@mail.gmail.com>
 <4E116F77.3020809@elvenkind.com>
Message-ID: <4E11738B.3010308@free.fr>

Le 04/07/2011 09:44, Taco Hoekwater a ?crit :
> On 07/04/2011 09:42 AM, luigi scarso wrote:
>> of course no, but it's a matter of style.
>> I'm always in trouble  when I modify the table that is the argument of
>> a for loop,
>> I mean something like
>> for k,v in pairs(my_table) do
>>    modify(my_table)
>> end
>
> Exactly. Do not do that, please.

Yes, I know it wasn't such a good idea. However you'd told me once, 
Taco, that removing nodes in a list you're traversing is harmless, but 
perhaps I misunderstood you. Now I obediently use a while loop and set 
the next node to be inspected by hand :)

What about the second problem?

Best,
Paul

From patrick at gundla.ch  Mon Jul  4 10:10:42 2011
From: patrick at gundla.ch (Patrick Gundlach)
Date: Mon, 4 Jul 2011 10:10:42 +0200
Subject: [luatex] Behavior of node lists.
In-Reply-To: <4E11668A.8050208@free.fr>
References: <4E11668A.8050208@free.fr>
Message-ID: <9683C910-74D0-4690-99CF-12733A6EE332@gundla.ch>


Am 04.07.2011 um 09:06 schrieb Paul Isambert:

> Problem 1:


> for n in node.traverse(tex.box[0].head) do

what I usually do (not always true, of course ;) is a while loop

while head do

...

head = head.next
end

which makes a bit easier for me to understand what happens if I remove/insert some nodes.


Patrick




From patrick at gundla.ch  Mon Jul  4 11:49:15 2011
From: patrick at gundla.ch (Patrick Gundlach)
Date: Mon, 4 Jul 2011 11:49:15 +0200
Subject: [luatex] glyphs and characters
Message-ID: <A1E24005-4279-4C95-992F-6CDA93A9E045@gundla.ch>

Hi,

I create all nodes with Lua functions, and so the glyph / char nodes. Is it safe to create all glyph nodes with subtype 1 (=char) by default? That way I can call lang.hyphenate() directly, without changing any subtypes (protect_glyph/unprotect_glyph).

Patrick




From patrick at gundla.ch  Mon Jul  4 11:50:25 2011
From: patrick at gundla.ch (Patrick Gundlach)
Date: Mon, 4 Jul 2011 11:50:25 +0200
Subject: [luatex] protect_glyph
Message-ID: <B00C8BBD-07BB-4715-8578-49BE5EE904FF@gundla.ch>

Hi,

why is the function protect_glyph called "protect..."? What does it protect?

Patrick


(who is slightly embarrassed to ask this question)


From luigi.scarso at gmail.com  Mon Jul  4 12:01:03 2011
From: luigi.scarso at gmail.com (luigi scarso)
Date: Mon, 4 Jul 2011 12:01:03 +0200
Subject: [luatex] protect_glyph
In-Reply-To: <B00C8BBD-07BB-4715-8578-49BE5EE904FF@gundla.ch>
References: <B00C8BBD-07BB-4715-8578-49BE5EE904FF@gundla.ch>
Message-ID: <CAG5iGsC2LCByJZUgw7qXMUY-16J8hczp6Z2Sd975fbFyp_7+kg@mail.gmail.com>

On Mon, Jul 4, 2011 at 11:50 AM, Patrick Gundlach <patrick at gundla.ch> wrote:
> Hi,
>
> why is the function protect_glyph called "protect..."? What does it protect?
>
> Patrick
>
>
> (who is slightly embarrassed to ask this question)
>
>
(a little old trunk/source/texk/web2c/luatexdir/lua/lnodelib.c)

static int lua_nodelib_protect_glyphs(lua_State * L)
{
    int t = 0;
    halfword head = *(check_isnode(L, 1));
    while (head != null) {
        if (type(head) == glyph_node) {
            register int s = subtype(head);
            if (s <= 256) {
                t = 1;
                subtype(head) = (quarterword) (s == 1 ? 256 : 256 + s);
            }
        }
        head = vlink(head);
    }
    lua_pushboolean(L, t);
    lua_pushvalue(L, 1);
    return 2;
}

static int lua_nodelib_unprotect_glyphs(lua_State * L)
{
    int t = 0;
    halfword head = *(check_isnode(L, 1));
    while (head != null) {
        if (type(head) == glyph_node) {
            register int s = subtype(head);
            if (s > 256) {
                t = 1;
                subtype(head) = (quarterword) (s - 256);
            }
        }
        head = vlink(head);
    }
    lua_pushboolean(L, t);
    lua_pushvalue(L, 1);
    return 2;
}




-- 
luigi

From patrick at gundla.ch  Mon Jul  4 12:08:12 2011
From: patrick at gundla.ch (Patrick Gundlach)
Date: Mon, 4 Jul 2011 12:08:12 +0200
Subject: [luatex] protect_glyph
In-Reply-To: <CAG5iGsC2LCByJZUgw7qXMUY-16J8hczp6Z2Sd975fbFyp_7+kg@mail.gmail.com>
References: <B00C8BBD-07BB-4715-8578-49BE5EE904FF@gundla.ch>
 <CAG5iGsC2LCByJZUgw7qXMUY-16J8hczp6Z2Sd975fbFyp_7+kg@mail.gmail.com>
Message-ID: <5EADA37A-C5AB-45C2-B2CC-C058F029C35F@gundla.ch>


Am 04.07.2011 um 12:01 schrieb luigi scarso:

> On Mon, Jul 4, 2011 at 11:50 AM, Patrick Gundlach <patrick at gundla.ch> wrote:
>> Hi,
>> 
>> why is the function protect_glyph called "protect..."? What does it protect?
>> 
>> Patrick
>> 
>> 
>> (who is slightly embarrassed to ask this question)
>> 
>> 
> (a little old trunk/source/texk/web2c/luatexdir/lua/lnodelib.c)
> 
> static int lua_nodelib_protect_glyphs(lua_State * L)
[...]
> static int lua_nodelib_unprotect_glyphs(lua_State * L)
[...]

I still don't quite understand what it protects from? The source and the manual are stating the same, so I am not sure what I can read from the source.

Patrick





From luigi.scarso at gmail.com  Mon Jul  4 12:14:52 2011
From: luigi.scarso at gmail.com (luigi scarso)
Date: Mon, 4 Jul 2011 12:14:52 +0200
Subject: [luatex] protect_glyph
In-Reply-To: <5EADA37A-C5AB-45C2-B2CC-C058F029C35F@gundla.ch>
References: <B00C8BBD-07BB-4715-8578-49BE5EE904FF@gundla.ch>
 <CAG5iGsC2LCByJZUgw7qXMUY-16J8hczp6Z2Sd975fbFyp_7+kg@mail.gmail.com>
 <5EADA37A-C5AB-45C2-B2CC-C058F029C35F@gundla.ch>
Message-ID: <CAG5iGsBwg56G+YbwfAU0fpYOosSMLa7cY-VH3DLHWV8fW88q-w@mail.gmail.com>

On Mon, Jul 4, 2011 at 12:08 PM, Patrick Gundlach <patrick at gundla.ch> wrote:
>
> Am 04.07.2011 um 12:01 schrieb luigi scarso:
>
>> On Mon, Jul 4, 2011 at 11:50 AM, Patrick Gundlach <patrick at gundla.ch> wrote:
>>> Hi,
>>>
>>> why is the function protect_glyph called "protect..."? What does it protect?
>>>
>>> Patrick
>>>
>>>
>>> (who is slightly embarrassed to ask this question)
>>>
>>>
>> (a little old trunk/source/texk/web2c/luatexdir/lua/lnodelib.c)
>>
>> static int lua_nodelib_protect_glyphs(lua_State * L)
> [...]
>> static int lua_nodelib_unprotect_glyphs(lua_State * L)
> [...]
>
> I still don't quite understand what it protects from? The source and the manual are stating the same, so I am not sure what I can read from the source.
>
> Patrick
>
>
>
>
>
what is
subtype(head)
and why 256 is important for it ?
-- 
luigi

From patrick at gundla.ch  Mon Jul  4 12:24:47 2011
From: patrick at gundla.ch (Patrick Gundlach)
Date: Mon, 4 Jul 2011 12:24:47 +0200
Subject: [luatex] protect_glyph
In-Reply-To: <CAG5iGsBwg56G+YbwfAU0fpYOosSMLa7cY-VH3DLHWV8fW88q-w@mail.gmail.com>
References: <B00C8BBD-07BB-4715-8578-49BE5EE904FF@gundla.ch>
 <CAG5iGsC2LCByJZUgw7qXMUY-16J8hczp6Z2Sd975fbFyp_7+kg@mail.gmail.com>
 <5EADA37A-C5AB-45C2-B2CC-C058F029C35F@gundla.ch>
 <CAG5iGsBwg56G+YbwfAU0fpYOosSMLa7cY-VH3DLHWV8fW88q-w@mail.gmail.com>
Message-ID: <F4ED304B-F4FE-4DCC-9732-73048842E6A6@gundla.ch>

Hi,

> what is
> subtype(head)

see manual p.173 (glyph node) and chapter 6.1

> and why 256 is important for it ?

good question. The bit field has only 4 bits, so 256 makes no sense for me.


BTW: there seems to be a contradiction in the manual. P. 174 has the following table:

bit meaning
0 character
1 glyph
2 ligature
3 ghost
4 left
5 right


but page 144 states:

bit0   1: char,    0: glyph
bit1   1: ligature 0: no ligature
bit2   1: ghost    0: no ghost
bit3, bit4: rightghost / leftghost

Patrick



From luigi.scarso at gmail.com  Mon Jul  4 12:48:52 2011
From: luigi.scarso at gmail.com (luigi scarso)
Date: Mon, 4 Jul 2011 12:48:52 +0200
Subject: [luatex] protect_glyph
In-Reply-To: <F4ED304B-F4FE-4DCC-9732-73048842E6A6@gundla.ch>
References: <B00C8BBD-07BB-4715-8578-49BE5EE904FF@gundla.ch>
 <CAG5iGsC2LCByJZUgw7qXMUY-16J8hczp6Z2Sd975fbFyp_7+kg@mail.gmail.com>
 <5EADA37A-C5AB-45C2-B2CC-C058F029C35F@gundla.ch>
 <CAG5iGsBwg56G+YbwfAU0fpYOosSMLa7cY-VH3DLHWV8fW88q-w@mail.gmail.com>
 <F4ED304B-F4FE-4DCC-9732-73048842E6A6@gundla.ch>
Message-ID: <CAG5iGsD+mw5VqqURiF0SHgH8nzOJxk65vuQ_cCQg5oJxn5J6Sw@mail.gmail.com>

On Mon, Jul 4, 2011 at 12:24 PM, Patrick Gundlach <patrick at gundla.ch> wrote:
>> and why 256 is important for it ?
>
> good question. The bit field has only 4 bits, so 256 makes no sense for me.
5 bits, see
luatexdir/tex/texnodes.h

>
>
> BTW: there seems to be a contradiction in the manual. P. 174 has the following table:
yes, it seems so.

> bit meaning
> 0 character
> 1 glyph
> 2 ligature
> 3 ghost
> 4 left
> 5 right
wrong
>
>
> but page 144 states:
>
> bit0 ? 1: char, ? ?0: glyph
> bit1 ? 1: ligature 0: no ligature
> bit2 ? 1: ghost ? ?0: no ghost
> bit3, bit4: rightghost / leftghost
right


-- 
luigi


From patrick at gundla.ch  Mon Jul  4 13:16:28 2011
From: patrick at gundla.ch (Patrick Gundlach)
Date: Mon, 4 Jul 2011 13:16:28 +0200
Subject: [luatex] tex.baselineskip
Message-ID: <C49C4BBE-C1B6-4883-B6EE-1D04B7A0B3EE@gundla.ch>

Hi,

is it safe to write


tex.baselineskip.width = 14 * 2^16

without creating a new glue_spec object and assigning that to tex.baselineskip?

Patrick





From taco at elvenkind.com  Mon Jul  4 13:24:45 2011
From: taco at elvenkind.com (Taco Hoekwater)
Date: Mon, 04 Jul 2011 13:24:45 +0200
Subject: [luatex] tex.baselineskip
In-Reply-To: <C49C4BBE-C1B6-4883-B6EE-1D04B7A0B3EE@gundla.ch>
References: <C49C4BBE-C1B6-4883-B6EE-1D04B7A0B3EE@gundla.ch>
Message-ID: <4E11A2FD.6090304@elvenkind.com>

On 07/04/2011 01:16 PM, Patrick Gundlach wrote:
> Hi,
>
> is it safe to write
>
> tex.baselineskip.width = 14 * 2^16
>
> without creating a new glue_spec object and assigning that to tex.baselineskip?

Generally no, as this assignment would change the actual value of the
spec that is (at that time) attached to baselineskip, and that can
have various unexpected side-effects.

Best wishes,
Taco

From taco at elvenkind.com  Mon Jul  4 13:25:08 2011
From: taco at elvenkind.com (Taco Hoekwater)
Date: Mon, 04 Jul 2011 13:25:08 +0200
Subject: [luatex] glyphs and characters
In-Reply-To: <A1E24005-4279-4C95-992F-6CDA93A9E045@gundla.ch>
References: <A1E24005-4279-4C95-992F-6CDA93A9E045@gundla.ch>
Message-ID: <4E11A314.2050801@elvenkind.com>

On 07/04/2011 11:49 AM, Patrick Gundlach wrote:
> Hi,
>
> I create all nodes with Lua functions, and so the glyph / char nodes. Is it safe to create all glyph nodes with subtype 1 (=char) by default?

Yes.

From taco at elvenkind.com  Mon Jul  4 13:35:13 2011
From: taco at elvenkind.com (Taco Hoekwater)
Date: Mon, 04 Jul 2011 13:35:13 +0200
Subject: [luatex] protect_glyph
In-Reply-To: <CAG5iGsD+mw5VqqURiF0SHgH8nzOJxk65vuQ_cCQg5oJxn5J6Sw@mail.gmail.com>
References: <B00C8BBD-07BB-4715-8578-49BE5EE904FF@gundla.ch>
 <CAG5iGsC2LCByJZUgw7qXMUY-16J8hczp6Z2Sd975fbFyp_7+kg@mail.gmail.com>
 <5EADA37A-C5AB-45C2-B2CC-C058F029C35F@gundla.ch>
 <CAG5iGsBwg56G+YbwfAU0fpYOosSMLa7cY-VH3DLHWV8fW88q-w@mail.gmail.com>
 <F4ED304B-F4FE-4DCC-9732-73048842E6A6@gundla.ch>
 <CAG5iGsD+mw5VqqURiF0SHgH8nzOJxk65vuQ_cCQg5oJxn5J6Sw@mail.gmail.com>
Message-ID: <4E11A571.3000805@elvenkind.com>

On 07/04/2011 12:48 PM, luigi scarso wrote:
> On Mon, Jul 4, 2011 at 12:24 PM, Patrick Gundlach<patrick at gundla.ch>  wrote:
>>> and why 256 is important for it ?
>>
>> good question. The bit field has only 4 bits, so 256 makes no sense for me.
> 5 bits, see luatexdir/tex/texnodes.h

protect_glyph/unprotect_glyph is a bit of an odd thing that was
added as a speedup (helper) for lua node processing in ConTeXt.
It has its uses, but nevertheless its existence is debatable, and
we may come up with something else in the end. (it exists to
separate characters that have been processed into glyphs from
glyphs there added directly as glyphs, the value '256' is just
to get some distance away from bit 5).

>> BTW: there seems to be a contradiction in the manual.
> yes, it seems so.
>
>> bit meaning
>> 0 character
>> 1 glyph
>> 2 ligature
>> 3 ghost
>> 4 left
>> 5 right

Fixed that table.

Best wishes,
Taco

From luigi.scarso at gmail.com  Mon Jul  4 13:46:16 2011
From: luigi.scarso at gmail.com (luigi scarso)
Date: Mon, 4 Jul 2011 13:46:16 +0200
Subject: [luatex] protect_glyph
In-Reply-To: <4E11A571.3000805@elvenkind.com>
References: <B00C8BBD-07BB-4715-8578-49BE5EE904FF@gundla.ch>
 <CAG5iGsC2LCByJZUgw7qXMUY-16J8hczp6Z2Sd975fbFyp_7+kg@mail.gmail.com>
 <5EADA37A-C5AB-45C2-B2CC-C058F029C35F@gundla.ch>
 <CAG5iGsBwg56G+YbwfAU0fpYOosSMLa7cY-VH3DLHWV8fW88q-w@mail.gmail.com>
 <F4ED304B-F4FE-4DCC-9732-73048842E6A6@gundla.ch>
 <CAG5iGsD+mw5VqqURiF0SHgH8nzOJxk65vuQ_cCQg5oJxn5J6Sw@mail.gmail.com>
 <4E11A571.3000805@elvenkind.com>
Message-ID: <CAG5iGsBh9ycLBm-pwk_CZU0-288CHG=WSXFAeB_fxCDLmyYnWA@mail.gmail.com>

On Mon, Jul 4, 2011 at 1:35 PM, Taco Hoekwater <taco at elvenkind.com> wrote:
> On 07/04/2011 12:48 PM, luigi scarso wrote:
>>
>> On Mon, Jul 4, 2011 at 12:24 PM, Patrick Gundlach<patrick at gundla.ch>
>> ?wrote:
>>>>
>>>> and why 256 is important for it ?
>>>
>>> good question. The bit field has only 4 bits, so 256 makes no sense for
>>> me.
>>
>> 5 bits, see luatexdir/tex/texnodes.h
>
> protect_glyph/unprotect_glyph is a bit of an odd thing that was
> added as a speedup (helper) for lua node processing in ConTeXt.
> It has its uses, but nevertheless its existence is debatable, and
> we may come up with something else in the end. (it exists to
> separate characters that have been processed into glyphs from
> glyphs there added directly as glyphs, the value '256' is just
> to get some distance away from bit 5).

yes,I also though so.

The fact is that there was a bit of confusion between the source and the ref. :
for example for protect_glyph  the ref. says

""
Adds 256 to all glyph node subtypes in the node list starting at n,
except that if the value is 1, it adds
only 255. The special handling of 1 means that characters will become
glyphs after subtraction of
256.
""

The code says the same, but in slightly differ manner

if (s <= 256) {
               t = 1;
               subtype(head) = (quarterword) (s == 1 ? 256 : 256 + s);
           }

Maybe this sounds better
""
Adds 256 to all glyph node subtypes in the node list starting at n,
except that if the value is 1 then the node subtype is 256. The
special handling of 1 means that characters will become glyphs after
subtraction of
256.
""

But it's almost irrelevant.

-- 
luigi


From luigi.scarso at gmail.com  Wed Jul  6 15:34:02 2011
From: luigi.scarso at gmail.com (luigi scarso)
Date: Wed, 6 Jul 2011 15:34:02 +0200
Subject: [luatex] Behavior of node lists.
In-Reply-To: <4E11738B.3010308@free.fr>
References: <4E11668A.8050208@free.fr>
 <CAG5iGsCazMgB6iMkYzHvcx0Q3XetaJJeAk2OH0HrAPK3P2JHLQ@mail.gmail.com>
 <CAG5iGsCc0WMi5Fpm+hu6nSZGi2OitQwfxECJXmh0JgzKuyRUJQ@mail.gmail.com>
 <4E116F77.3020809@elvenkind.com> <4E11738B.3010308@free.fr>
Message-ID: <CAG5iGsB0zCxiLbkF=4Qz_vBEEv_UoxGJNRxSTAEUhnU4zMjivg@mail.gmail.com>

On Mon, Jul 4, 2011 at 10:02 AM, Paul Isambert <zappathustra at free.fr> wrote:
> What about the second problem?
Last svn says in lnodelib.c

static int lua_nodelib_insert_after(lua_State * L)
{
    halfword head, current, n;
    if (lua_gettop(L) < 3) {
        luaL_error(L, "Not enough arguments for node.insert_after()");
    }
    if (lua_isnil(L, 3)) {
        lua_pop(L, 1);
        return 2;
    } else {
        n = *(check_isnode(L, 3));
    }
    if (lua_isnil(L, 1)) {      /* no head */
        vlink(n) = null;
        alink(n) = null;
        lua_nodelib_push_fast(L, n);
        lua_pushvalue(L, -1);
        return 2;
    } else {
        head = *(check_isnode(L, 1));
    }
    if (lua_isnil(L, 2)) {
        current = head;
        while (vlink(current) != null)
            current = vlink(current);
    } else {
        current = *(check_isnode(L, 2));
    }
    try_couple_nodes(n, vlink(current));
    couple_nodes(current, n);

    lua_pop(L, 2);
    lua_nodelib_push_fast(L, n);
    return 2;
}

Open to suggestions.
-- 
luigi

From taco at elvenkind.com  Wed Jul  6 15:43:26 2011
From: taco at elvenkind.com (Taco Hoekwater)
Date: Wed, 06 Jul 2011 15:43:26 +0200
Subject: [luatex] Behavior of node lists.
In-Reply-To: <4E11668A.8050208@free.fr>
References: <4E11668A.8050208@free.fr>
Message-ID: <4E14667E.7010201@elvenkind.com>



On 07/04/11 09:06, Paul Isambert wrote:
> 
> Problem 2: -- A question, rather.

Missed this, earlier.

> The manual says you're in charge of ensuring that in
> "node.insert_after(H, N, x)", N is in the list denoted by H. The thing
> is, H doesn't seem to matter at all, unless it's nil:

Actually H is also useful if N is nil (that is a tail-append the list
that starts at H), but it is true that H is generally unused.

> So what's the need to denote the list where the insertion occurs if it
> is ignored? In other words, couldn't node.insert_after and associates
> work with only two arguments?

It could, but the above two cases are both useful sometimes
in code running inside loops.

Best wishes,
Taco

From zappathustra at free.fr  Wed Jul  6 17:02:53 2011
From: zappathustra at free.fr (Paul Isambert)
Date: Wed, 06 Jul 2011 17:02:53 +0200
Subject: [luatex] Behavior of node lists.
In-Reply-To: <CAG5iGsB0zCxiLbkF=4Qz_vBEEv_UoxGJNRxSTAEUhnU4zMjivg@mail.gmail.com>
References: <4E11668A.8050208@free.fr>
 <CAG5iGsCazMgB6iMkYzHvcx0Q3XetaJJeAk2OH0HrAPK3P2JHLQ@mail.gmail.com>
 <CAG5iGsCc0WMi5Fpm+hu6nSZGi2OitQwfxECJXmh0JgzKuyRUJQ@mail.gmail.com>
 <4E116F77.3020809@elvenkind.com> <4E11738B.3010308@free.fr>
 <CAG5iGsB0zCxiLbkF=4Qz_vBEEv_UoxGJNRxSTAEUhnU4zMjivg@mail.gmail.com>
Message-ID: <4E14791D.5010506@free.fr>

Le 06/07/2011 15:34, luigi scarso a ?crit :
> On Mon, Jul 4, 2011 at 10:02 AM, Paul Isambert<zappathustra at free.fr>  wrote:
>> What about the second problem?
> Last svn says in lnodelib.c
> [...]

Thanks Luigi. Too bad I can't read C :)
Best,
Paul

From zappathustra at free.fr  Wed Jul  6 17:05:08 2011
From: zappathustra at free.fr (Paul Isambert)
Date: Wed, 06 Jul 2011 17:05:08 +0200
Subject: [luatex] Behavior of node lists.
In-Reply-To: <4E14667E.7010201@elvenkind.com>
References: <4E11668A.8050208@free.fr> <4E14667E.7010201@elvenkind.com>
Message-ID: <4E1479A4.3020803@free.fr>

Le 06/07/2011 15:43, Taco Hoekwater a ?crit :
> On 07/04/11 09:06, Paul Isambert wrote:
>> The manual says you're in charge of ensuring that in
>> "node.insert_after(H, N, x)", N is in the list denoted by H. The thing
>> is, H doesn't seem to matter at all, unless it's nil:
> Actually H is also useful if N is nil (that is a tail-append the list
> that starts at H), but it is true that H is generally unused.

Good to learn that "node.insert_after(H, nil, x)" is equivalent to 
"node.insert_after(H, node.tail(H), x)". I'd always wondered why there 
was no shorthand to append a node at the end of a list.

Best,
Paul

From luigi.scarso at gmail.com  Wed Jul  6 17:13:08 2011
From: luigi.scarso at gmail.com (luigi scarso)
Date: Wed, 6 Jul 2011 17:13:08 +0200
Subject: [luatex] Behavior of node lists.
In-Reply-To: <4E14791D.5010506@free.fr>
References: <4E11668A.8050208@free.fr>
 <CAG5iGsCazMgB6iMkYzHvcx0Q3XetaJJeAk2OH0HrAPK3P2JHLQ@mail.gmail.com>
 <CAG5iGsCc0WMi5Fpm+hu6nSZGi2OitQwfxECJXmh0JgzKuyRUJQ@mail.gmail.com>
 <4E116F77.3020809@elvenkind.com> <4E11738B.3010308@free.fr>
 <CAG5iGsB0zCxiLbkF=4Qz_vBEEv_UoxGJNRxSTAEUhnU4zMjivg@mail.gmail.com>
 <4E14791D.5010506@free.fr>
Message-ID: <CAG5iGsDaF4+9inOiyBNneJbd=91n2s4ze_Ej2=d3w2UGM0Hc1g@mail.gmail.com>

On Wed, Jul 6, 2011 at 5:02 PM, Paul Isambert <zappathustra at free.fr> wrote:
> Le 06/07/2011 15:34, luigi scarso a ?crit :
>>
>> On Mon, Jul 4, 2011 at 10:02 AM, Paul Isambert<zappathustra at free.fr>
>> ?wrote:
>>>
>>> What about the second problem?
>>
>> Last svn says in lnodelib.c
>> [...]
>
> Thanks Luigi. Too bad I can't read C :)
Ah yes , sorry.
Anyway
after a while (luatex) C code looks like Lua code
(or better a sort of  mkiv lua code ): the chapter on extension of the
Lua book is enough.
And in the end it's the latest source that wins over documentation.

IMHO, it doesn't hurt if a luatex lua-macro programmer knows C;
it's also useful for extensions.

-- 
luigi


From zappathustra at free.fr  Wed Jul  6 17:36:08 2011
From: zappathustra at free.fr (Paul Isambert)
Date: Wed, 06 Jul 2011 17:36:08 +0200
Subject: [luatex] Behavior of node lists.
In-Reply-To: <CAG5iGsDaF4+9inOiyBNneJbd=91n2s4ze_Ej2=d3w2UGM0Hc1g@mail.gmail.com>
References: <4E11668A.8050208@free.fr>
 <CAG5iGsCazMgB6iMkYzHvcx0Q3XetaJJeAk2OH0HrAPK3P2JHLQ@mail.gmail.com>
 <CAG5iGsCc0WMi5Fpm+hu6nSZGi2OitQwfxECJXmh0JgzKuyRUJQ@mail.gmail.com>
 <4E116F77.3020809@elvenkind.com> <4E11738B.3010308@free.fr>
 <CAG5iGsB0zCxiLbkF=4Qz_vBEEv_UoxGJNRxSTAEUhnU4zMjivg@mail.gmail.com>
 <4E14791D.5010506@free.fr>
 <CAG5iGsDaF4+9inOiyBNneJbd=91n2s4ze_Ej2=d3w2UGM0Hc1g@mail.gmail.com>
Message-ID: <4E1480E8.7030103@free.fr>

Le 06/07/2011 17:13, luigi scarso a ?crit :
> On Wed, Jul 6, 2011 at 5:02 PM, Paul Isambert<zappathustra at free.fr>  wrote:
>> Le 06/07/2011 15:34, luigi scarso a ?crit :
>>> On Mon, Jul 4, 2011 at 10:02 AM, Paul Isambert<zappathustra at free.fr>
>>>   wrote:
>>>> What about the second problem?
>>> Last svn says in lnodelib.c
>>> [...]
>> Thanks Luigi. Too bad I can't read C :)
> Ah yes , sorry.
> Anyway
> after a while (luatex) C code looks like Lua code
> (or better a sort of  mkiv lua code ): the chapter on extension of the
> Lua book is enough.
> And in the end it's the latest source that wins over documentation.

I agree. I can force myself if I really want to understand something in 
the source, but my understanding remains fuzzy.

> IMHO, it doesn't hurt if a luatex lua-macro programmer knows C;
> it's also useful for extensions.

It probably doesn't hurt, but I have tons of other things to do rather 
than learning C (or toying with LuaTeX, for that matter :) ). I'm not a 
programmer by trade or even hobby (except when it comes to TeX), so 
learning a new language is not something I do easily or willingly -- 
even though now that TeX is opened up, I sometimes wish I knew C so I 
could rip it apart!

Best,
Paul

From patrick at gundla.ch  Sun Jul 10 17:56:28 2011
From: patrick at gundla.ch (Patrick Gundlach)
Date: Sun, 10 Jul 2011 17:56:28 +0200
Subject: [luatex] FYI: my experiments on tex.shipout() and links
In-Reply-To: <5A6B4DAC-4DD6-4E52-A0D0-78E94B377F77@gundla.ch>
References: <724D87DF-9B7E-49D5-9665-4C053AE2545F@gundla.ch>
 <4E0C58C5.5070608@free.fr> <5A6B4DAC-4DD6-4E52-A0D0-78E94B377F77@gundla.ch>
Message-ID: <9A7DF2C8-EA10-43B4-BB44-4EADFCE754DE@gundla.ch>


Am 30.06.2011 um 13:13 schrieb Patrick Gundlach:

> 
> Am 30.06.2011 um 13:06 schrieb Paul Isambert:
> 
>> Le 30/06/2011 12:57, Patrick Gundlach a ?crit :
>>> Just in case someone is interested in my experiments with tex.shipout and the pdf_dest, pdf_start_link nodes, here is a simple example. Not clever, but you get the point.
>> 
>> Patrick, LuaTeX is supposed to put an end to dirty tricks :)
> 
> 
> Isn't the LuaTeX reference manual the new contents of appendix D of Knuth's TeXbook?
> 
> 
> Thanks for your comments. I'll release my production code soon and you will find much more dirt.

A start:

https://github.com/pgundlach/sdpublisher

and

http://pgundlach.github.com/sdpublisher/index.html


Mostly still in German, but this will change soon. Code is GPLv2. Not official yet  :)

Patrick



From oinos at web.de  Sun Jul 10 18:28:51 2011
From: oinos at web.de (=?ISO-8859-1?Q?Pablo_Rodr=EDguez?=)
Date: Sun, 10 Jul 2011 18:28:51 +0200
Subject: [luatex] font embedded twice
Message-ID: <4E19D343.6000209@web.de>

Hi there,

compiling this document with LuaTeX I get the font embedded twice, but
it is embedded only once if I compile it using XeTeX:

\documentclass{article}
\usepackage{fontspec}
\setmainfont{Minion Pro}
\usepackage[spanish]{babel}
\usepackage{unicode-math}
\setmathfont{Minion Pro}
\usepackage{ifluatex}
\ifluatex
\usepackage{lualatex-math}
\ExplSyntaxOn
\makeatletter
\tl_replace_in:Nnn \shorthandsspanish {
  \mathchardef \es at period@code \the \mathcode `\.
  \babel at savevariable
} {
  \lltxmath_set_mathchar:NN \es at period@code \.
  \fix_save_variable:n
}
\cs_new_nopar:Nn \fix_save_variable:n {
  \tl_if_head_eq_meaning:nNTF { #1 } \mathcode {
    \exp_args:Nf \babel at savevariable {
      \exp_last_unbraced:Nf \luatexUmathcodenum { \tl_tail:n { #1 } }
    }
  } {
    \babel at savevariable { #1 }
  }
}
\makeatother
\ExplSyntaxOff
\fi
\begin{document}
$\frac{27,7}{100\,000}$ en varones
\end{document}

I wonder whether I hit an underlying LuaTeX bug (already reported in
https://github.com/wspr/unicode-math/issues/208).

Thanks for your help,


Pablo
-- 
http://www.ousia.tk

From taco at elvenkind.com  Mon Jul 11 08:26:26 2011
From: taco at elvenkind.com (Taco Hoekwater)
Date: Mon, 11 Jul 2011 08:26:26 +0200
Subject: [luatex] font embedded twice
In-Reply-To: <4E19D343.6000209@web.de>
References: <4E19D343.6000209@web.de>
Message-ID: <4E1A9792.2070505@elvenkind.com>

On 07/10/2011 06:28 PM, Pablo Rodr?guez wrote:
> Hi there,
>
> compiling this document with LuaTeX I get the font embedded twice, but
> it is embedded only once if I compile it using XeTeX:

That example did not run for me, so I cannot check in detail,
but yes, this is possible.

The reason is that because in luatex you can adjust the metrics of
the font, it is no longer safe for the engine to auto-combine the
FontDescriptors in the PDF, so it does not, and this is what makes
the font be listed twice (or more). It should still include the
actual glyphs (FontFile) only once, but it is possible that there
is a bug there.

Best wishes,
Taco

From patrick at gundla.ch  Mon Jul 11 08:53:59 2011
From: patrick at gundla.ch (Patrick Gundlach)
Date: Mon, 11 Jul 2011 08:53:59 +0200
Subject: [luatex] font embedded twice
In-Reply-To: <4E1A9792.2070505@elvenkind.com>
References: <4E19D343.6000209@web.de> <4E1A9792.2070505@elvenkind.com>
Message-ID: <4C219E55-28B4-4E0F-833A-871CFAE1097E@gundla.ch>


Am 11.07.2011 um 08:26 schrieb Taco Hoekwater:

> On 07/10/2011 06:28 PM, Pablo Rodr?guez wrote:
>> Hi there,
>> 
>> compiling this document with LuaTeX I get the font embedded twice, but
>> it is embedded only once if I compile it using XeTeX:
> 
> That example did not run for me, so I cannot check in detail,
> but yes, this is possible.
> 
> The reason is that because in luatex you can adjust the metrics of
> the font, it is no longer safe for the engine to auto-combine the
> FontDescriptors in the PDF, so it does not, and this is what makes
> the font be listed twice (or more). It should still include the
> actual glyphs (FontFile) only once, but it is possible that there
> is a bug there.

If the list allows attachments, here is the (readable) PDF with that font.

Patrick
-------------- next part --------------
A non-text attachment was scrubbed...
Name: minion.pdf
Type: application/pdf
Size: 8533 bytes
Desc: not available
URL: <http://tug.org/pipermail/luatex/attachments/20110711/77ad0c03/attachment.pdf>

From taco at elvenkind.com  Mon Jul 11 08:57:18 2011
From: taco at elvenkind.com (Taco Hoekwater)
Date: Mon, 11 Jul 2011 08:57:18 +0200
Subject: [luatex] font embedded twice
In-Reply-To: <4C219E55-28B4-4E0F-833A-871CFAE1097E@gundla.ch>
References: <4E19D343.6000209@web.de> <4E1A9792.2070505@elvenkind.com>
 <4C219E55-28B4-4E0F-833A-871CFAE1097E@gundla.ch>
Message-ID: <4E1A9ECE.7030306@elvenkind.com>

On 07/11/2011 08:53 AM, Patrick Gundlach wrote:
>
> Am 11.07.2011 um 08:26 schrieb Taco Hoekwater:
>
>> On 07/10/2011 06:28 PM, Pablo Rodr?guez wrote:
>>> Hi there,
>>>
>>> compiling this document with LuaTeX I get the font embedded twice, but
>>> it is embedded only once if I compile it using XeTeX:
>>
>> That example did not run for me, so I cannot check in detail,
>> but yes, this is possible.
>>
>> The reason is that because in luatex you can adjust the metrics of
>> the font, it is no longer safe for the engine to auto-combine the
>> FontDescriptors in the PDF, so it does not, and this is what makes
>> the font be listed twice (or more). It should still include the
>> actual glyphs (FontFile) only once, but it is possible that there
>> is a bug there.
>
> If the list allows attachments, here is the (readable) PDF with that font.

So this is indeed wrong. Any chance you can convert the example plus
output into a tracker item?

Best wishes,
Taco

From patrick at gundla.ch  Mon Jul 11 13:57:11 2011
From: patrick at gundla.ch (Patrick Gundlach)
Date: Mon, 11 Jul 2011 13:57:11 +0200
Subject: [luatex] i18n with LuaTeX
Message-ID: <ED7FFE8E-F65A-4123-9658-3FB80FB15071@gundla.ch>

Hi,

I am thinking of using GNU gettext together with LuaTeX. Two questions:

1) (off topic) which environment variable should I check for the current language? LANG? Or is this a "it depends" answer?
2) can I safely assume that this variable from question 1 is not cleared by LuaTeX? The following section in the LuaTeX documentation makes me a bit nervous:

"In stock Lua, many things depend on the current locale. In LuaTEX, we can't do that, because it makes documents unportable. While LuaTEX is running if forces the following locale settings:
LC_CTYPE=C
LC_COLLATE=C
LC_NUMERIC=C
"

If I'd check LANG, can I be sure that texlua (!) does not clear it in some future version?

Patrick



From patrick at gundla.ch  Mon Jul 11 14:00:34 2011
From: patrick at gundla.ch (Patrick Gundlach)
Date: Mon, 11 Jul 2011 14:00:34 +0200
Subject: [luatex] i18n with LuaTeX
In-Reply-To: <ED7FFE8E-F65A-4123-9658-3FB80FB15071@gundla.ch>
References: <ED7FFE8E-F65A-4123-9658-3FB80FB15071@gundla.ch>
Message-ID: <63E318F4-25D9-40A1-ABFE-8B75BCA79783@gundla.ch>

> 
> If I'd check LANG, can I be sure that texlua (!) does not clear it in some future version?

That is question #3 if #2 is "no".

Patrick



From dpl at sun.ac.za  Mon Jul 11 14:31:29 2011
From: dpl at sun.ac.za (Dirk Laurie)
Date: Mon, 11 Jul 2011 14:31:29 +0200
Subject: [luatex] i18n with LuaTeX
In-Reply-To: <ED7FFE8E-F65A-4123-9658-3FB80FB15071@gundla.ch>
References: <ED7FFE8E-F65A-4123-9658-3FB80FB15071@gundla.ch>
Message-ID: <20110711123129.GA28505@rondloper>

On Mon, Jul 11, 2011 at 01:57:11PM +0200, Patrick Gundlach wrote:
> 
> "In stock Lua, many things depend on the current locale. In LuaTEX, we can't
> do that, because it makes documents unportable. While LuaTEX is running if
> forces the following locale settings:
> LC_CTYPE=C
> LC_COLLATE=C
> LC_NUMERIC=C
> "

Lua is now in 5.2.0-beta-rc7, which means that 5.2.0 is imminent.
While nothing forces LuaTeX to be based on 5.2.0 rather than 5.1.4,
the diminished locale dependence may be a consideration.  In particular, 
the following change is very significant:

    - Lua identifiers cannot use locale-dependent letters.

I realize this does not answer your question (which I did not quote)
but only Taco and the team can do that.

Dirk

From taco at elvenkind.com  Mon Jul 11 15:20:54 2011
From: taco at elvenkind.com (Taco Hoekwater)
Date: Mon, 11 Jul 2011 15:20:54 +0200
Subject: [luatex] i18n with LuaTeX
In-Reply-To: <ED7FFE8E-F65A-4123-9658-3FB80FB15071@gundla.ch>
References: <ED7FFE8E-F65A-4123-9658-3FB80FB15071@gundla.ch>
Message-ID: <4E1AF8B6.2090809@elvenkind.com>

On 07/11/2011 01:57 PM, Patrick Gundlach wrote:
> Hi,
>
> I am thinking of using GNU gettext together with LuaTeX. Two questions:
>
> 1) (off topic) which environment variable should I check for the current language? LANG? Or is this a "it depends" answer?

It depends on what do you want to know / do. The IEEE specification 
basically has this to say:

The values of locale categories shall be determined by a precedence 
order; the first condition met below determines the value:

*    If the LC_ALL environment variable is defined and is not null, the 
value of LC_ALL shall be used.

*    If the LC_* environment variable ( LC_COLLATE , LC_CTYPE , 
LC_MESSAGES , LC_MONETARY , LC_NUMERIC , LC_TIME ) is defined and is not 
null, the value of the environment variable shall be used to initialize 
the category that corresponds to the environment variable.

*    If the LANG environment variable is defined and is not null, the 
value of the LANG environment variable shall be used.

*    If the LANG environment variable is not set or is set to the empty 
string, the implementation-defined default locale shall be used.



> 2) can I safely assume that this variable from question 1 is not cleared by LuaTeX? The following section in the LuaTeX documentation makes me a bit nervous:

Current luatex does exactly what is documented below. If (when) luatex
switches to luatex 5.2, some of these will likely go away (LC_NUMERIC
may have to stay, depending on the exact details of luatex 5.2).

It is highly unlikely (but I dare not say 'impossible') that any new
environment variables will need to be altered to counteract odd lua
behaviour.


> "In stock Lua, many things depend on the current locale. In LuaTEX, we can't do that, because it makes documents unportable. While LuaTEX is running if forces the following locale settings:
> LC_CTYPE=C
> LC_COLLATE=C
> LC_NUMERIC=C
> "

Best wishes,
Taco

From vafa018 at gmail.com  Tue Jul 12 07:55:41 2011
From: vafa018 at gmail.com (Vafa Khalighi)
Date: Tue, 12 Jul 2011 15:55:41 +1000
Subject: [luatex] LuaTeX crashes
Message-ID: <CA+wm_c-0xdg3nMt1dRPsJOg3QPi82pNKKQSJ3xXuxPw3gEiaGA@mail.gmail.com>

What does

 (./test.auxlualatex: ../../../texk/web2c/luatexdir/pdf/pdfpage.w:97:
synch_pos_with_cur: Assertion `0' failed.

) [1


means? I am getting with this minimal example:


 \documentclass{article}

\usepackage{luadirections}

\bidion

\begin{document}

\begin{tabular}{c}

1

\end{tabular}

\end{document}



luadirections from https://github.com/khaledhosny/luadirections
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://tug.org/pipermail/luatex/attachments/20110712/c094ea15/attachment.html>

From vafa018 at gmail.com  Tue Jul 12 08:00:28 2011
From: vafa018 at gmail.com (Vafa Khalighi)
Date: Tue, 12 Jul 2011 16:00:28 +1000
Subject: [luatex] LuaTeX crashes
In-Reply-To: <CA+wm_c-0xdg3nMt1dRPsJOg3QPi82pNKKQSJ3xXuxPw3gEiaGA@mail.gmail.com>
References: <CA+wm_c-0xdg3nMt1dRPsJOg3QPi82pNKKQSJ3xXuxPw3gEiaGA@mail.gmail.com>
Message-ID: <CA+wm_c8y3FmgAY6Ho=rfnKfSYrGd=zu3rjEfxOshB+B92Ammag@mail.gmail.com>

It crashes with plain too:

 tyluatex: ../../../texk/web2c/luatexdir/pdf/pdfpage.w:97:
synch_pos_with_cur: Assertion `0' failed.

))

(./bidi.lua)

Module luatexbase-mcb info: inserting 'BiDi processing (pre_line)'

(luatexbase-mcb) at position 1 in 'pre_linebreak_filter'

Module luatexbase-mcb info: inserting 'BiDi processing (hpack)'

(luatexbase-mcb) at position 1 in 'hpack_filter'

) [1

Process crashed


 \input luadirections

\halign{\hfil \it # & # \hfil \cr

3 cl & cream \cr

2 cl & beer \cr

1.5 cl & orang-utan soup \cr}

 \bye
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://tug.org/pipermail/luatex/attachments/20110712/b8ba80ed/attachment.html>

From hartmut_henkel at gmx.de  Tue Jul 12 09:11:29 2011
From: hartmut_henkel at gmx.de (Hartmut Henkel)
Date: Tue, 12 Jul 2011 09:11:29 +0200
Subject: [luatex] LuaTeX crashes
In-Reply-To: <CA+wm_c-0xdg3nMt1dRPsJOg3QPi82pNKKQSJ3xXuxPw3gEiaGA@mail.gmail.com>
References: <CA+wm_c-0xdg3nMt1dRPsJOg3QPi82pNKKQSJ3xXuxPw3gEiaGA@mail.gmail.com>
Message-ID: <20110712071129.159220@gmx.net>

> What does
> 
>  (./test.auxlualatex: ../../../texk/web2c/luatexdir/pdf/pdfpage.w:97:
> synch_pos_with_cur: Assertion `0' failed.
> 
> ) [1
> 
> 
> means? I am getting with this minimal example:
> 
> 
>  \documentclass{article}
> 
> \usepackage{luadirections}
> 
> \bidion
> 
> \begin{document}
> 
> \begin{tabular}{c}
> 
> 1
> 
> \end{tabular}
> 
> \end{document}
> 
> 
> 
> luadirections from https://github.com/khaledhosny/luadirections

looks as if the macro package calls for a direction other than the four implemented ones (TLT, TRT, LTL, RTT).

Regards, Hartmut
-- 
Empfehlen Sie GMX DSL Ihren Freunden und Bekannten und wir
belohnen Sie mit bis zu 50,- Euro! https://freundschaftswerbung.gmx.de

From hartmut_henkel at gmx.de  Tue Jul 12 09:11:29 2011
From: hartmut_henkel at gmx.de (Hartmut Henkel)
Date: Tue, 12 Jul 2011 09:11:29 +0200
Subject: [luatex] LuaTeX crashes
In-Reply-To: <CA+wm_c-0xdg3nMt1dRPsJOg3QPi82pNKKQSJ3xXuxPw3gEiaGA@mail.gmail.com>
References: <CA+wm_c-0xdg3nMt1dRPsJOg3QPi82pNKKQSJ3xXuxPw3gEiaGA@mail.gmail.com>
Message-ID: <20110712071129.159220@gmx.net>

> What does
> 
>  (./test.auxlualatex: ../../../texk/web2c/luatexdir/pdf/pdfpage.w:97:
> synch_pos_with_cur: Assertion `0' failed.
> 
> ) [1
> 
> 
> means? I am getting with this minimal example:
> 
> 
>  \documentclass{article}
> 
> \usepackage{luadirections}
> 
> \bidion
> 
> \begin{document}
> 
> \begin{tabular}{c}
> 
> 1
> 
> \end{tabular}
> 
> \end{document}
> 
> 
> 
> luadirections from https://github.com/khaledhosny/luadirections

looks as if the macro package calls for a direction other than the four implemented ones (TLT, TRT, LTL, RTT).

Regards, Hartmut
-- 
Empfehlen Sie GMX DSL Ihren Freunden und Bekannten und wir
belohnen Sie mit bis zu 50,- Euro! https://freundschaftswerbung.gmx.de

From taco at elvenkind.com  Tue Jul 12 10:56:16 2011
From: taco at elvenkind.com (Taco Hoekwater)
Date: Tue, 12 Jul 2011 10:56:16 +0200
Subject: [luatex] LuaTeX crashes
In-Reply-To: <20110712071129.159220@gmx.net>
References: <CA+wm_c-0xdg3nMt1dRPsJOg3QPi82pNKKQSJ3xXuxPw3gEiaGA@mail.gmail.com>
 <20110712071129.159220@gmx.net>
Message-ID: <4E1C0C30.1090707@elvenkind.com>

On 07/12/2011 09:11 AM, Hartmut Henkel wrote:
>
> looks as if the macro package calls for a direction other than the four implemented ones (TLT, TRT, LTL, RTT).

That is just a side-effect. I have deduced so far, that the problem is
that one of internal structures for \halign becomes trashed somewhere
in the process. That gives one of the nodes a bad field, which in turn
causes a bad attribute assignment to happen, resulting in the assertion
failure.

Revision 4327 (trunk) adds an assert() so that the actual problem is
discovered earlier (but luatex still crashes).

Best wishes,
Taco

From taco at elvenkind.com  Tue Jul 12 11:28:40 2011
From: taco at elvenkind.com (Taco Hoekwater)
Date: Tue, 12 Jul 2011 11:28:40 +0200
Subject: [luatex] LuaTeX crashes
In-Reply-To: <4E1C0C30.1090707@elvenkind.com>
References: <CA+wm_c-0xdg3nMt1dRPsJOg3QPi82pNKKQSJ3xXuxPw3gEiaGA@mail.gmail.com>
 <20110712071129.159220@gmx.net> <4E1C0C30.1090707@elvenkind.com>
Message-ID: <4E1C13C8.4090302@elvenkind.com>

On 07/12/2011 10:56 AM, Taco Hoekwater wrote:
> On 07/12/2011 09:11 AM, Hartmut Henkel wrote:
>>
>> looks as if the macro package calls for a direction other than the
>> four implemented ones (TLT, TRT, LTL, RTT).
>
> That is just a side-effect. I have deduced so far, that the problem is
> that one of internal structures for \halign becomes trashed somewhere
> in the process. That gives one of the nodes a bad field, which in turn
> causes a bad attribute assignment to happen, resulting in the assertion
> failure.
>
> Revision 4327 (trunk) adds an assert() so that the actual problem is
> discovered earlier (but luatex still crashes).

The problem is caused because the loop in bidi.lua is adding
stuff to node lists where it should not do so. I am not at all sure
what the correct fix is, but this replacement function for bidi.lua
makes the crash go away, at least:

local function process_node(head, group)
     local str, line

     head, str = node_string(head)

     line      = process_string(str, group)

     assert(#line == node.length(head))

     assign_levels(head, line)

     for n in node.traverse(head) do
         if n.id == glyph then
             local v = node.has_attribute(n, level_attribute)
             if v and odd(v) then
                 local mirror = chardata[n.char].mirror
                 if mirror then
                     n.char = mirror
                 end
             end
         end

         local bdir = node.has_attribute(n, bdir_attribute)
         local edir = node.has_attribute(n, edir_attribute)
         local new
         node.slide(head)
         if bdir then
             if not n.prev and group == "" then
                 while n and n.id ~= glyph do
                     n = n.next
                 end
             end
             if not n.id == node.id('unset') then
               if bdir == 1 then     -- +TRT
                 head, new = node.insert_before(head, n, 
new_dir_node("+TRT"))
               elseif bdir == 3 then -- +TLT
                 head, new = node.insert_before(head, n, 
new_dir_node("+TLT"))
               end
             end
         end
         if edir then
             if not n.next and group == "" then
                 while n and n.id ~= glyph do
                     n = n.prev
                 end
             end
             if not n.id == node.id('unset') then
               if edir == 2 then     -- -TRT
                 head, new = node.insert_after(head, n, 
new_dir_node("-TRT"))
               elseif edir == 4 then -- -TLT
                 head, new = node.insert_after(head, n, 
new_dir_node("-TLT"))
               end
             end
         end
         if new then
             node.unset_attribute(new, bdir_attribute)
             node.unset_attribute(new, edir_attribute)
         end

     end

     return head
end

From vafa018 at gmail.com  Tue Jul 12 15:42:36 2011
From: vafa018 at gmail.com (Vafa Khalighi)
Date: Tue, 12 Jul 2011 23:42:36 +1000
Subject: [luatex] Fribidi for LuaTeX
Message-ID: <CA+wm_c9pzn-0OijugCwYGTUJN48xVS2ymKt0gTD+P7+x_=pKnA@mail.gmail.com>

I am not sure about the details and that is why I am asking. Would it be
possible to integrate Fribidi[1] to luatex?

Thanks

[1] http://www.fribidi.org/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://tug.org/pipermail/luatex/attachments/20110712/26be5e3a/attachment.html>

From vafa018 at gmail.com  Tue Jul 12 15:43:07 2011
From: vafa018 at gmail.com (Vafa Khalighi)
Date: Tue, 12 Jul 2011 23:43:07 +1000
Subject: [luatex] LuaTeX crashes
In-Reply-To: <4E1C13C8.4090302@elvenkind.com>
References: <CA+wm_c-0xdg3nMt1dRPsJOg3QPi82pNKKQSJ3xXuxPw3gEiaGA@mail.gmail.com>
 <20110712071129.159220@gmx.net> <4E1C0C30.1090707@elvenkind.com>
 <4E1C13C8.4090302@elvenkind.com>
Message-ID: <CA+wm_c8VryCwKqjKqNt8VNVo9bvHxXc2bmx=9sTG-4wcpDQoLw@mail.gmail.com>

Thanks.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://tug.org/pipermail/luatex/attachments/20110712/8ea544e2/attachment.html>

From taco at elvenkind.com  Tue Jul 12 15:51:24 2011
From: taco at elvenkind.com (Taco Hoekwater)
Date: Tue, 12 Jul 2011 15:51:24 +0200
Subject: [luatex] Fribidi for LuaTeX
In-Reply-To: <CA+wm_c9pzn-0OijugCwYGTUJN48xVS2ymKt0gTD+P7+x_=pKnA@mail.gmail.com>
References: <CA+wm_c9pzn-0OijugCwYGTUJN48xVS2ymKt0gTD+P7+x_=pKnA@mail.gmail.com>
Message-ID: <4E1C515C.3060701@elvenkind.com>


Hi,

Now that the Unicode BiDi algorithm implementation discussion
seems to restart, it is a good time to ask the people involved
to solve the non-trivial problem of adjusting the algorithm
to cater for the inclusion of

* out-of-line node objects (\setbox, \box, \copy),
* out-of-line tokens (like alignment templates and macro expansions),
* vertical typesetting,
* TeX grouping levels,
* Interfering nodes (math, \special, \rule etc)

Thanks in advance,

Taco

From luigi.scarso at gmail.com  Tue Jul 12 16:21:29 2011
From: luigi.scarso at gmail.com (luigi scarso)
Date: Tue, 12 Jul 2011 16:21:29 +0200
Subject: [luatex] Fribidi for LuaTeX
In-Reply-To: <4E1C515C.3060701@elvenkind.com>
References: <CA+wm_c9pzn-0OijugCwYGTUJN48xVS2ymKt0gTD+P7+x_=pKnA@mail.gmail.com>
 <4E1C515C.3060701@elvenkind.com>
Message-ID: <CAG5iGsDx63=ncZeeQ=FT+9OTLjAa=EXnOT9YS9D52SOBOAVFGA@mail.gmail.com>

On Tue, Jul 12, 2011 at 3:51 PM, Taco Hoekwater <taco at elvenkind.com> wrote:
>
> Hi,
>
> Now that the Unicode BiDi algorithm implementation discussion
> seems to restart, it is a good time to ask the people involved
> to solve the non-trivial problem of adjusting the algorithm
> to cater for the inclusion of
>
> * out-of-line node objects (\setbox, \box, \copy),
> * out-of-line tokens (like alignment templates and macro expansions),
> * vertical typesetting,
> * TeX grouping levels,
> * Interfering nodes (math, \special, \rule etc)
>
> Thanks in advance,
>
> Taco
>


Build a lua binding for fribidi looks simple:: this is a simple
fribidi.i for swig 2.0.2


%module fribidi
%{
#include "fribidi.h"
%}

%include "fribidi/fribidi-common.h";
%include "fribidi/fribidi-unicode.h";
%include "fribidi/fribidi-types.h";
%include "fribidi/fribidi-flags.h";
%include "fribidi/fribidi-bidi-types.h";
%include "fribidi/fribidi-bidi.h";
%include "fribidi/fribidi-joining-types.h";
%include "fribidi/fribidi-joining.h";
%include "fribidi/fribidi-mirroring.h";
%include "fribidi/fribidi-arabic.h";
%include "fribidi/fribidi-shape.h";
%include "fribidi/fribidi-char-sets.h";
%include "fribidi/fribidi-deprecated.h";
%include "fribidi/fribidi-begindecls.h";
%include "fribidi/fribidi-enddecls.h";

The build script assumes Linux 32 bit,  swig 2.0.2, lua 5.1.4  and
/opt/swig-2.0.2 as working dir

rm -vf fribidi_wrap.c
/opt/swig-2.0.2/bin/swig   -lua fribidi.i
gcc -I. -c fribidi_wrap.c -I/opt/swig-2.0.2/include
-I/opt/swig-2.0.2/include/fribidi -o fribidi_wrap.o
rm -vf fribidi.so
gcc -Wall -shared -I. -I/opt/swig-2.0.2/include -L.
-L/opt/swig-2.0.2/lib fribidi_wrap.o -lm -lfribidi -o fribidi.so
strip --strip-unneeded fribidi.so
export LD_LIBRARY_PATH=/opt/swig-2.0.2/lib:$LD_LIBRARY_PATH
lua -e 'require("fribidi")'


In this way maybe one can experiment with the algorithm  without
modify the luatex source .


-- 
luigi

From st_philipp at yahoo.de  Tue Jul 12 16:38:23 2011
From: st_philipp at yahoo.de (Philipp Stephani)
Date: Tue, 12 Jul 2011 16:38:23 +0200
Subject: [luatex] [lltx] issue with unicode-math, spanish and LuaLaTeX
In-Reply-To: <15sbszcy74qnp$.dlg@nililand.de>
References: <4E07881C.7060906@web.de>
 <7C97AC7C-2BF4-47C9-9170-F080CB34F72B@yahoo.de>
 <1egkbbths2lpn$.dlg@nililand.de> <4E1C42D8.7050505@yahoo.de>
 <15sbszcy74qnp$.dlg@nililand.de>
Message-ID: <4E1C5C5F.4010306@yahoo.de>

Am 12.07.2011 16:22, schrieb Ulrike Fischer:
> Hm. I understand \mathcode and \Umathcode actually look at the same
> value and so are not independent. But I have the impression the
> problem is less with \mathcode (which after all gives a value) but
> with \mathchardef which doesn't accept it if the \mathcode is too
> large.

This is not an issue of a \mathcode being too large, but about 
overlapping representations. Say you have a character with class 0, 
family 0 and code point U+1111; its \Umathcodenum is 0x1111. But the 
\mathcode of a character with class 1, family 1, and code point U+11 is 
0x1111 as well---how should \mathchardef distinguish between the two?

>
> But looking at the luatex manual I didn't actually understand how to
> replace \mathchardef/\mathcode. What is the luatex equivalent of
>
> \mathchardef\test=\mathcode`\x?

I think there is none because \Umathcharnumdef is missing (see 
http://tracker.luatex.org/view.php?id=620). In the lualatex-math package 
I do

\Umathchardef \test
\directlua {
   print_class_fam_slot( \number \numexpr `\x \relax )
}

function print_class_fam_slot(char)
   local code = tex.getmathcode(char)
   local class, family, slot = unpack(code)
   local result = string.format("%i %i %i ", class, family, slot)
   tex.sprint(cctb.string, result)
end

From st_philipp at yahoo.de  Tue Jul 12 16:57:37 2011
From: st_philipp at yahoo.de (Philipp Stephani)
Date: Tue, 12 Jul 2011 16:57:37 +0200
Subject: [luatex] [lltx] issue with unicode-math, spanish and LuaLaTeX
In-Reply-To: <4E1C5C9C.9040807@elvenkind.com>
References: <4E07881C.7060906@web.de>
 <7C97AC7C-2BF4-47C9-9170-F080CB34F72B@yahoo.de>
 <1egkbbths2lpn$.dlg@nililand.de> <4E1C42D8.7050505@yahoo.de>
 <15sbszcy74qnp$.dlg@nililand.de> <4E1C5B47.4080408@elvenkind.com>
 <4E1C5C9C.9040807@elvenkind.com>
Message-ID: <4E1C60E1.2020805@yahoo.de>

Am 12.07.2011 16:39, schrieb Taco Hoekwater:
> On 07/12/2011 04:33 PM, Taco Hoekwater wrote:
>> On 07/12/2011 04:22 PM, Ulrike Fischer wrote:
>>>
>>> With xetex I can at least use
>>>
>>> \XeTeXmathcharnumdef\test=\XeTeXmathcodenum`\x
>>>
>>> but none of the various combination of \Umathchardef + \Umathcode
>>> etc seems to work in luatex.
>>
>> NYI, see:
>
> Actually, that does not mean I think it is a good idea. The
> conceptual problem is that \XeTeXmathcodenum (and therefore
> also \Umathcodenum) can return a signed int to represent an
> unsigned value, with is pretty horrible.

Yes, and the bit-packed structure of the mathcodenum isn't quite elegant 
either. The Lua table representation is fine, but unfortunately there is 
no way to represent that in TeX.

>
> Why is it so important to be able to do a mathcharnumdef
> (instead of a macro definition or straight \Umathchardef?)

Because of the pattern that Ulrike mentioned:

\Umathcodenum `a = \Umathcodenum `b
\Umathcharnumdef \foo = \Umathcodenum `b

The second pattern is used to save a math code and restore it later. You 
could save the math code in an integer register or macro, but then you 
couldn't use that as a mathematical character shorthand.
I don't know what reasons Knuth had to introduce special syntax for 
\chardefs/\mathchardefs, but I think most TeX users expect this syntax 
to be present.

From taco at elvenkind.com  Tue Jul 12 17:25:07 2011
From: taco at elvenkind.com (Taco Hoekwater)
Date: Tue, 12 Jul 2011 17:25:07 +0200
Subject: [luatex] [lltx] issue with unicode-math, spanish and LuaLaTeX
In-Reply-To: <4E1C60E1.2020805@yahoo.de>
References: <4E07881C.7060906@web.de>
 <7C97AC7C-2BF4-47C9-9170-F080CB34F72B@yahoo.de>
 <1egkbbths2lpn$.dlg@nililand.de> <4E1C42D8.7050505@yahoo.de>
 <15sbszcy74qnp$.dlg@nililand.de> <4E1C5B47.4080408@elvenkind.com>
 <4E1C5C9C.9040807@elvenkind.com> <4E1C60E1.2020805@yahoo.de>
Message-ID: <4E1C6753.50403@elvenkind.com>

On 07/12/2011 04:57 PM, Philipp Stephani wrote:
>
> The second pattern is used to save a math code and restore it later. You
> could save the math code in an integer register or macro, but then you
> couldn't use that as a mathematical character shorthand.
> I don't know what reasons Knuth had to introduce special syntax for
> \chardefs/\mathchardefs,

Some byte-saving or hash-saving or time-saving measure, I'll wager.

> but I think most TeX users expect this syntax
> to be present.

Sure, I assume so. \Umathcharnumdef moved to the list for 0.80.0.

Best wishes,
Taco


From khaledhosny at eglug.org  Tue Jul 12 22:20:53 2011
From: khaledhosny at eglug.org (Khaled Hosny)
Date: Tue, 12 Jul 2011 22:20:53 +0200
Subject: [luatex] LuaTeX crashes
In-Reply-To: <4E1C13C8.4090302@elvenkind.com>
References: <CA+wm_c-0xdg3nMt1dRPsJOg3QPi82pNKKQSJ3xXuxPw3gEiaGA@mail.gmail.com>
 <20110712071129.159220@gmx.net> <4E1C0C30.1090707@elvenkind.com>
 <4E1C13C8.4090302@elvenkind.com>
Message-ID: <20110712202053.GA8648@khaled-laptop>

On Tue, Jul 12, 2011 at 11:28:40AM +0200, Taco Hoekwater wrote:
> On 07/12/2011 10:56 AM, Taco Hoekwater wrote:
> >On 07/12/2011 09:11 AM, Hartmut Henkel wrote:
> >>
> >>looks as if the macro package calls for a direction other than the
> >>four implemented ones (TLT, TRT, LTL, RTT).
> >
> >That is just a side-effect. I have deduced so far, that the problem is
> >that one of internal structures for \halign becomes trashed somewhere
> >in the process. That gives one of the nodes a bad field, which in turn
> >causes a bad attribute assignment to happen, resulting in the assertion
> >failure.
> >
> >Revision 4327 (trunk) adds an assert() so that the actual problem is
> >discovered earlier (but luatex still crashes).
> 
> The problem is caused because the loop in bidi.lua is adding
> stuff to node lists where it should not do so. I am not at all sure
> what the correct fix is, but this replacement function for bidi.lua
> makes the crash go away, at least:

It does not crash luatex, but I get no bidi at all too.

After some debugging, this unset box thing happens with groupcode
"fin_row" in pre_linebreak_filter, with some grepping through code I see
that "fin_row" contains unset boxes separated by glue at the end of raw
in [h|v]align (whatever that means, I've absolutely no idea). Now, any
idea what are the contents of these unset boxes and whether it is safe
to just skip it completely (i.e. just returning an unaltered head)?
(if I skip it, I get no crashes).

Regards,
 Khaled

-- 
 Khaled Hosny
 Egyptian
 Arab

From nomosnomos at gmail.com  Wed Jul 13 03:24:28 2011
From: nomosnomos at gmail.com (Dohyun Kim)
Date: Wed, 13 Jul 2011 10:24:28 +0900
Subject: [luatex] CJK vertical typesetting
Message-ID: <CAFzmAm3C3PFWZeaiMER4ET3pkH6K=DjxiJAwBe89h7xHqoiTEw@mail.gmail.com>

Hi,

CJK vertical typesetting can be implemented thanks to the RTT mode
provided by luatex engine; at current development stage, however,
some round-about seems to be necessary.

Please compare the drawing of "*TT" in fontdir.pdf under manual directory
and the image at http://fontforge.sourceforge.net/charview.html#Vertical .
In the latter image, it seems that the height is the right side length
of baseline; depth is the left side length; and width is the "vertical
advance."

Perhaps the width of a glyph vertically typesetted should be the value of
vertical advance, that is "vwidth" as is returned by fontloader library.
But in current RTT mode we only have to reassign height and depth
instead of width.

So I have tried to do vertical typesetting by following procedure.
1.  assign height of vertical glyph = 0
2.  assign depth of vertical glyph = vwidth of this glyph
3.  in "pre_linebreak_filter," xoffset the glyph by the value of
"ascender" of font.

Then it works well now. But if luatex uses the width, instead of
height and depth, for glyph advancement in RTT mode,
the implementation could have been much simpler.
Is this possible? or should I stick to my round-about way?
or is there another more legitimate way?

Regards,
-- 
Dohyun Kim
College of Law, Dongguk University
Seoul, Republic of Korea

From st_philipp at yahoo.de  Wed Jul 13 11:53:24 2011
From: st_philipp at yahoo.de (Philipp Stephani)
Date: Wed, 13 Jul 2011 11:53:24 +0200
Subject: [luatex] [lltx] issue with unicode-math, spanish and LuaLaTeX
In-Reply-To: <1cedpqjf0l6gg$.dlg@nililand.de>
References: <4E07881C.7060906@web.de>
 <7C97AC7C-2BF4-47C9-9170-F080CB34F72B@yahoo.de>
 <1egkbbths2lpn$.dlg@nililand.de> <4E1C42D8.7050505@yahoo.de>
 <15sbszcy74qnp$.dlg@nililand.de> <4E1C5C5F.4010306@yahoo.de>
 <1cedpqjf0l6gg$.dlg@nililand.de>
Message-ID: <11B5E3F9-6510-4E9A-8489-6DD6F4F24FF9@yahoo.de>


Am 13.07.2011 um 11:15 schrieb Ulrike Fischer:

> Btw: while looking at the \Umathcodenum I saw that some arguments
> are converted to curious high numbers. Mostly the letters in the
> ascii range:
> 
> \Umathchardef\test="0"0"24
> \showthe\Umathcodenum\test
> 
>> 36
> 
> \Umathchardef\test="0"0"41
> \showthe\Umathcodenum\test
> 
>> 14799924

The correct syntax is \showthe\test (mathematical character shorthands are numbers). TeX does some weird things with your syntax. Is this documented somewhere?

$ tex
This is TeX, Version 3.1415926 (TeX Live 2011)
**\mathchardef\a="41

*\showthe\mathcode\a
> 28993.
<*> \showthe\mathcode\a
                       
? 

*\showthe\a
> 65.
<*> \showthe\a
              
? 

What is the meaning of \mathcode\controlseq?

From st_philipp at yahoo.de  Wed Jul 13 12:23:35 2011
From: st_philipp at yahoo.de (Philipp Stephani)
Date: Wed, 13 Jul 2011 12:23:35 +0200
Subject: [luatex] [lltx] issue with unicode-math, spanish and LuaLaTeX
In-Reply-To: <11B5E3F9-6510-4E9A-8489-6DD6F4F24FF9@yahoo.de>
References: <4E07881C.7060906@web.de>
 <7C97AC7C-2BF4-47C9-9170-F080CB34F72B@yahoo.de>
 <1egkbbths2lpn$.dlg@nililand.de> <4E1C42D8.7050505@yahoo.de>
 <15sbszcy74qnp$.dlg@nililand.de> <4E1C5C5F.4010306@yahoo.de>
 <1cedpqjf0l6gg$.dlg@nililand.de>
 <11B5E3F9-6510-4E9A-8489-6DD6F4F24FF9@yahoo.de>
Message-ID: <6A32D84C-2388-42CC-A9BA-69D5371A1E85@yahoo.de>


Am 13.07.2011 um 11:53 schrieb Philipp Stephani:

> 
> Am 13.07.2011 um 11:15 schrieb Ulrike Fischer:
> 
>> Btw: while looking at the \Umathcodenum I saw that some arguments
>> are converted to curious high numbers. Mostly the letters in the
>> ascii range:
>> 
>> \Umathchardef\test="0"0"24
>> \showthe\Umathcodenum\test
>> 
>>> 36
>> 
>> \Umathchardef\test="0"0"41
>> \showthe\Umathcodenum\test
>> 
>>> 14799924
> 
> The correct syntax is \showthe\test (mathematical character shorthands are numbers). TeX does some weird things with your syntax. Is this documented somewhere?
> 
> $ tex
> This is TeX, Version 3.1415926 (TeX Live 2011)
> **\mathchardef\a="41
> 
> *\showthe\mathcode\a
>> 28993.
> <*> \showthe\mathcode\a
> 
> ? 
> 
> *\showthe\a
>> 65.
> <*> \showthe\a
> 
> ? 
> 
> What is the meaning of \mathcode\controlseq?

Ah, I'm stupid: of course, \test is a number, so \mathcode\test is valid (it is the math code of A in this case). The high numbers are those described in the LuaTeX manual: the lower 21 bits for the code point, the higher 11 bits for class and family.

From luatex at nililand.de  Wed Jul 13 12:43:47 2011
From: luatex at nililand.de (Ulrike Fischer)
Date: Wed, 13 Jul 2011 12:43:47 +0200
Subject: [luatex] issue with unicode-math, spanish and LuaLaTeX
References: <4E07881C.7060906@web.de>
 <7C97AC7C-2BF4-47C9-9170-F080CB34F72B@yahoo.de>
 <1egkbbths2lpn$.dlg@nililand.de> <4E1C42D8.7050505@yahoo.de>
 <15sbszcy74qnp$.dlg@nililand.de> <4E1C5C5F.4010306@yahoo.de>
 <1cedpqjf0l6gg$.dlg@nililand.de>
 <11B5E3F9-6510-4E9A-8489-6DD6F4F24FF9@yahoo.de>
 <6A32D84C-2388-42CC-A9BA-69D5371A1E85@yahoo.de>
Message-ID: <zy0s0yqxl0l8.dlg@nililand.de>

Am Wed, 13 Jul 2011 12:23:35 +0200 schrieb Philipp Stephani:


>> What is the meaning of \mathcode\controlseq?
 
> Ah, I'm stupid: of course, \test is a number, so \mathcode\test is
> valid (it is the math code of A in this case). 

Ah, I'm stupid too ;-). 


-- 
Ulrike Fischer 


From taco at elvenkind.com  Thu Jul 14 07:48:47 2011
From: taco at elvenkind.com (Taco Hoekwater)
Date: Thu, 14 Jul 2011 07:48:47 +0200
Subject: [luatex] LuaTeX crashes
In-Reply-To: <20110712202053.GA8648@khaled-laptop>
References: <CA+wm_c-0xdg3nMt1dRPsJOg3QPi82pNKKQSJ3xXuxPw3gEiaGA@mail.gmail.com>
 <20110712071129.159220@gmx.net> <4E1C0C30.1090707@elvenkind.com>
 <4E1C13C8.4090302@elvenkind.com> <20110712202053.GA8648@khaled-laptop>
Message-ID: <4E1E833F.3090901@elvenkind.com>

Hi Khaled,

On 07/12/11 22:20, Khaled Hosny wrote:
> 
> It does not crash luatex, but I get no bidi at all too.

Disappointing, but not too surprising.

> After some debugging, this unset box thing happens with groupcode
> "fin_row" in pre_linebreak_filter, with some grepping through code I see
> that "fin_row" contains unset boxes separated by glue at the end of raw
> in [h|v]align (whatever that means, I've absolutely no idea). 

Every cell in a \halign row becomes and unset box, and these are
separated from each other by a glue object that matches \tabskip.

Subsequent processing depends on this structure remaining intact,
but you should be able to get bidi by adjusting the contents of
the unset boxes (assuming skipping them does not work, I have not
really tested that).

Best wishes,
Taco

From taco at elvenkind.com  Thu Jul 14 08:15:09 2011
From: taco at elvenkind.com (Taco Hoekwater)
Date: Thu, 14 Jul 2011 08:15:09 +0200
Subject: [luatex] CJK vertical typesetting
In-Reply-To: <CAFzmAm3C3PFWZeaiMER4ET3pkH6K=DjxiJAwBe89h7xHqoiTEw@mail.gmail.com>
References: <CAFzmAm3C3PFWZeaiMER4ET3pkH6K=DjxiJAwBe89h7xHqoiTEw@mail.gmail.com>
Message-ID: <4E1E896D.1020508@elvenkind.com>



On 07/13/11 03:24, Dohyun Kim wrote:
> 
> Then it works well now. But if luatex uses the width, instead of
> height and depth, for glyph advancement in RTT mode,
> the implementation could have been much simpler.
> Is this possible? 

Not right now: what you are doing is optimal at the moment.

It may make sense to add 'vwidth' support right into the engine,
but I would love to hear some more 'reports from the field' before
implementing something like that.

Best wishes,
Taco

From st_philipp at yahoo.de  Thu Jul 14 12:04:14 2011
From: st_philipp at yahoo.de (Philipp Stephani)
Date: Thu, 14 Jul 2011 12:04:14 +0200
Subject: [luatex] [lltx] issue with unicode-math, spanish and LuaLaTeX
In-Reply-To: <CBD9D5EB-5BE0-40B9-9B9C-EEA534D3B21D@gmail.com>
References: <4E07881C.7060906@web.de>
 <7C97AC7C-2BF4-47C9-9170-F080CB34F72B@yahoo.de>
 <1egkbbths2lpn$.dlg@nililand.de> <4E1C42D8.7050505@yahoo.de>
 <15sbszcy74qnp$.dlg@nililand.de> <4E1C5B47.4080408@elvenkind.com>
 <4E1C5C9C.9040807@elvenkind.com>
 <CBD9D5EB-5BE0-40B9-9B9C-EEA534D3B21D@gmail.com>
Message-ID: <5880E22F-402C-41F9-84CA-0CB8B5E69B97@yahoo.de>


Am 14.07.2011 um 09:39 schrieb Will Robertson:

> (Sent from my phone.)
> 
> On 13/07/2011, at 0:39, Taco Hoekwater <taco at elvenkind.com> wrote:
> 
>> Actually, that does not mean I think it is a good idea. The
>> conceptual problem is that \XeTeXmathcodenum (and therefore
>> also \Umathcodenum) can return a signed int to represent an
>> unsigned value, with is pretty horrible.
> 
> An alternate from the TeX point of view could be to add commands like
> 
> \Umathclass
> \Umathfam
> \Umathslot
> 
> to extract the relevant bits of information to pass to a subsequent \Umathchardef, say.

and/or \Umathcode could be turned into a convert command that prints the class/family/code point combination in the format that \Umathchardef expects.

From Arno.Trautmann at gmx.de  Thu Jul 14 15:23:33 2011
From: Arno.Trautmann at gmx.de (Arno Trautmann)
Date: Thu, 14 Jul 2011 15:23:33 +0200
Subject: [luatex] insert a string into node list?
Message-ID: <4E1EEDD5.4080604@gmx.de>

Hi all,

I have two probably rather unusual questions:

? First, I wanted to ask how I could insert some text into a paragraph. 
I'd like to do it with the pre_linebreak_filter, and managed to insert 
single glyph nodes. However, even for a short text that is very 
annoying. So: is there an alternative to constructing a node list?
? Second, I'd like to print out the name of every defined 
macro/primitive, i.e. I imagine a list with every character combination 
after a \ that does not throw a undefd control sequence-error.
Why? Just because I wanted to know if it's possible ? and if it is 
possible at all, the odds are best with LuaTeX. Also, I'd like to 
understand how macros are stored internally ? but for that I have to 
read some source code, I guess ?

I'd be thankful for any hint how to solve these two problems,

cheers
Arno

From patrick at gundla.ch  Thu Jul 14 15:34:27 2011
From: patrick at gundla.ch (Patrick Gundlach)
Date: Thu, 14 Jul 2011 15:34:27 +0200
Subject: [luatex] insert a string into node list?
In-Reply-To: <4E1EEDD5.4080604@gmx.de>
References: <4E1EEDD5.4080604@gmx.de>
Message-ID: <9007CE82-8914-49AD-B09E-87F4B19FC5B7@gundla.ch>

Hi,

> I have two probably rather unusual questions:

the first one is not that unusual...

> 
> ? First, I wanted to ask how I could insert some text into a paragraph. I'd like to do it with the pre_linebreak_filter, and managed to insert single glyph nodes. However, even for a short text that is very annoying. So: is there an alternative to constructing a node list?

No, but it's not annoying at all. See 

http://wiki.luatex.org/index.php/TeX_without_TeX

esp. at

http://wiki.luatex.org/index.php/TeX_without_TeX#And_what_about_real_content.3F

and for a real life function at

https://github.com/speedata/publisher/blob/develop/src/lua/publisher.lua function "mknodes", but this is currently in German only (its on my todo list to translate this!)



Patrick




From taco at elvenkind.com  Thu Jul 14 17:09:20 2011
From: taco at elvenkind.com (Taco Hoekwater)
Date: Thu, 14 Jul 2011 17:09:20 +0200
Subject: [luatex] insert a string into node list?
In-Reply-To: <4E1EEDD5.4080604@gmx.de>
References: <4E1EEDD5.4080604@gmx.de>
Message-ID: <4E1F06A0.6010106@elvenkind.com>

On 07/14/2011 03:23 PM, Arno Trautmann wrote:

> ? Second, I'd like to print out the name of every defined
> macro/primitive, i.e. I imagine a list with every character combination
> after a \ that does not throw a undefd control sequence-error.
> Why? Just because I wanted to know if it's possible ? and if it is
> possible at all, the odds are best with LuaTeX.

Web2c used to / still has some possibilities to debug the format,
but I have forgotten what it was, sorry.

And no, this is not yet possible with luatex (it will be, eventually,
but not yet).

> Also, I'd like to
> understand how macros are stored internally ? but for that I have to
> read some source code, I guess ?

There is no way around that. In fact, if you cannot read the source
code, I doubt I would be able to explain to you clearly how it works
in prose, with a reasonable level of detail.

Real quick and rough: a macro body is stored just like a token list
for the toks registers (\toks0 c.s.) except that a few special tokens
are possible that cannot occur inside registers: two types are markers
for arguments, if any, and also a special token that marks the end of
the argument part. The internal token storage of \def\a#1{(#1)} is
5 tokens:

   <match 1>
   <end_header>
   <letter (>
   <out_param 1>
   <letter )>

And it is stored in an array together with all other definitions and
commands. Its index in that array is the hash checksum result of 'a'
(the control sequence name without backslash).


Best wishes,
Taco



From luigi.scarso at gmail.com  Thu Jul 14 17:14:12 2011
From: luigi.scarso at gmail.com (luigi scarso)
Date: Thu, 14 Jul 2011 17:14:12 +0200
Subject: [luatex] insert a string into node list?
In-Reply-To: <4E1F06A0.6010106@elvenkind.com>
References: <4E1EEDD5.4080604@gmx.de>
	<4E1F06A0.6010106@elvenkind.com>
Message-ID: <CAG5iGsCD4rz=6nbNL5BevTxjxH_3-48vVkOXXM39UB8hQQsPqA@mail.gmail.com>

On Thu, Jul 14, 2011 at 5:09 PM, Taco Hoekwater <taco at elvenkind.com> wrote:
> On 07/14/2011 03:23 PM, Arno Trautmann wrote:
>
>> ? Second, I'd like to print out the name of every defined
>> macro/primitive, i.e. I imagine a list with every character combination
>> after a \ that does not throw a undefd control sequence-error.
>> Why? Just because I wanted to know if it's possible ? and if it is
>> possible at all, the odds are best with LuaTeX.
>
> Web2c used to / still has some possibilities to debug the format,
> but I have forgotten what it was, sorry.
>
> And no, this is not yet possible with luatex (it will be, eventually,
> but not yet).
What about ? (from context mkii)
\def\tracingall
  {\tracingonline    \plusone
   \tracingcommands  \plusthree
   \tracingstats     \plustwo
   \tracingpages     \plusone
   \tracingoutput    \plusone
   \tracinglostchars \plustwo
   \tracingmacros    \plustwo
   \tracingparagraphs\plusone
   \tracingrestores  \plusone
   \showboxbreadth   \maxdimen
   \showboxdepth     \maxdimen
   \tracinggroups    \plusone
   \tracingifs       \plusone
   \tracingscantokens\plusone
   \tracingnesting   \plusone
   \tracingassigns   \plustwo
   \errorstopmode}

\def\loggingall
  {\tracingall
   \tracingonline    \zerocount}


-- 
luigi


From taco at elvenkind.com  Thu Jul 14 17:21:06 2011
From: taco at elvenkind.com (Taco Hoekwater)
Date: Thu, 14 Jul 2011 17:21:06 +0200
Subject: [luatex] insert a string into node list?
In-Reply-To: <CAG5iGsCD4rz=6nbNL5BevTxjxH_3-48vVkOXXM39UB8hQQsPqA@mail.gmail.com>
References: <4E1EEDD5.4080604@gmx.de>	<4E1F06A0.6010106@elvenkind.com>
 <CAG5iGsCD4rz=6nbNL5BevTxjxH_3-48vVkOXXM39UB8hQQsPqA@mail.gmail.com>
Message-ID: <4E1F0962.4000605@elvenkind.com>

On 07/14/2011 05:14 PM, luigi scarso wrote:
> On Thu, Jul 14, 2011 at 5:09 PM, Taco Hoekwater<taco at elvenkind.com>  wrote:
>> On 07/14/2011 03:23 PM, Arno Trautmann wrote:
>>
>>> ? Second, I'd like to print out the name of every defined
>>> macro/primitive, i.e. I imagine a list with every character combination
>>> after a \ that does not throw a undefd control sequence-error.
>>> Why? Just because I wanted to know if it's possible ? and if it is
>>> possible at all, the odds are best with LuaTeX.
>>
>> Web2c used to / still has some possibilities to debug the format,
>> but I have forgotten what it was, sorry.
>>
>> And no, this is not yet possible with luatex (it will be, eventually,
>> but not yet).
> What about ? (from context mkii)
> \def\tracingall

That outputs a lot of stuff, but not the definitive list of existing
control sequences (for example, even if you run this as the very first
thing in -ini mode, it will not report on the actual primitives).

Best wishes,
Taco

From luigi.scarso at gmail.com  Thu Jul 14 17:35:35 2011
From: luigi.scarso at gmail.com (luigi scarso)
Date: Thu, 14 Jul 2011 17:35:35 +0200
Subject: [luatex] insert a string into node list?
In-Reply-To: <4E1F0962.4000605@elvenkind.com>
References: <4E1EEDD5.4080604@gmx.de> <4E1F06A0.6010106@elvenkind.com>
 <CAG5iGsCD4rz=6nbNL5BevTxjxH_3-48vVkOXXM39UB8hQQsPqA@mail.gmail.com>
 <4E1F0962.4000605@elvenkind.com>
Message-ID: <CAG5iGsAw=4qjHwbeYMoOzMb=Sx4r5a6jA3ounJgsQx7z7zPZng@mail.gmail.com>

On Thu, Jul 14, 2011 at 5:21 PM, Taco Hoekwater <taco at elvenkind.com> wrote:
> On 07/14/2011 05:14 PM, luigi scarso wrote:
>>
>> On Thu, Jul 14, 2011 at 5:09 PM, Taco Hoekwater<taco at elvenkind.com>
>> ?wrote:
>>>
>>> On 07/14/2011 03:23 PM, Arno Trautmann wrote:
>>>
>>>> ? Second, I'd like to print out the name of every defined
>>>> macro/primitive, i.e. I imagine a list with every character combination
>>>> after a \ that does not throw a undefd control sequence-error.
>>>> Why? Just because I wanted to know if it's possible ? and if it is
>>>> possible at all, the odds are best with LuaTeX.
>>>
>>> Web2c used to / still has some possibilities to debug the format,
>>> but I have forgotten what it was, sorry.
>>>
>>> And no, this is not yet possible with luatex (it will be, eventually,
>>> but not yet).
>>
>> What about ? (from context mkii)
>> \def\tracingall
>
> That outputs a lot of stuff, but not the definitive list of existing
> control sequences (for example, even if you run this as the very first
> thing in -ini mode, it will not report on the actual primitives).

True: maybe
$> grep 'primitive_'
source/texk/web2c/luatexdir/tex/commands.w|sort|uniq > pri.txt

-- 
luigi
-------------- next part --------------
A non-text attachment was scrubbed...
Name: pri.zip
Type: application/zip
Size: 6900 bytes
Desc: not available
URL: <http://tug.org/pipermail/luatex/attachments/20110714/3f15dfea/attachment-0001.zip>

From arthur.reutenauer at normalesup.org  Thu Jul 14 19:33:42 2011
From: arthur.reutenauer at normalesup.org (Arthur Reutenauer)
Date: Thu, 14 Jul 2011 18:33:42 +0100
Subject: [luatex] insert a string into node list?
In-Reply-To: <4E1F06A0.6010106@elvenkind.com>
References: <4E1EEDD5.4080604@gmx.de>
 <4E1F06A0.6010106@elvenkind.com>
Message-ID: <20110714173342.GA11361@phare.normalesup.org>

> Web2c used to / still has some possibilities to debug the format,
> but I have forgotten what it was, sorry.

  It's the -debug-format switch, see http://tex.stackexchange.com/questions/323/

	Arthur

From luigi.scarso at gmail.com  Thu Jul 14 20:50:22 2011
From: luigi.scarso at gmail.com (luigi scarso)
Date: Thu, 14 Jul 2011 20:50:22 +0200
Subject: [luatex] insert a string into node list?
In-Reply-To: <20110714173342.GA11361@phare.normalesup.org>
References: <4E1EEDD5.4080604@gmx.de> <4E1F06A0.6010106@elvenkind.com>
 <20110714173342.GA11361@phare.normalesup.org>
Message-ID: <CAG5iGsACCbGsiZMM84=uRTBd6rVaVAhtuvd6Lj=sebT_uqZ1ew@mail.gmail.com>

On Thu, Jul 14, 2011 at 7:33 PM, Arthur Reutenauer
<arthur.reutenauer at normalesup.org> wrote:
>> Web2c used to / still has some possibilities to debug the format,
>> but I have forgotten what it was, sorry.
>
> ?It's the -debug-format switch, see http://tex.stackexchange.com/questions/323/
Is it different from \tracingall ?


-- 
luigi


From arthur.reutenauer at normalesup.org  Thu Jul 14 20:56:33 2011
From: arthur.reutenauer at normalesup.org (Arthur Reutenauer)
Date: Thu, 14 Jul 2011 19:56:33 +0100
Subject: [luatex] insert a string into node list?
In-Reply-To: <CAG5iGsACCbGsiZMM84=uRTBd6rVaVAhtuvd6Lj=sebT_uqZ1ew@mail.gmail.com>
References: <4E1EEDD5.4080604@gmx.de> <4E1F06A0.6010106@elvenkind.com>
 <20110714173342.GA11361@phare.normalesup.org>
 <CAG5iGsACCbGsiZMM84=uRTBd6rVaVAhtuvd6Lj=sebT_uqZ1ew@mail.gmail.com>
Message-ID: <20110714185633.GB11361@phare.normalesup.org>

> Is it different from \tracingall ?

  Yes, it does what Taco mentioned (reporting all existing control
sequences in the format).

	Arthur

From luigi.scarso at gmail.com  Thu Jul 14 22:30:20 2011
From: luigi.scarso at gmail.com (luigi scarso)
Date: Thu, 14 Jul 2011 22:30:20 +0200
Subject: [luatex] insert a string into node list?
In-Reply-To: <20110714185633.GB11361@phare.normalesup.org>
References: <4E1EEDD5.4080604@gmx.de> <4E1F06A0.6010106@elvenkind.com>
 <20110714173342.GA11361@phare.normalesup.org>
 <CAG5iGsACCbGsiZMM84=uRTBd6rVaVAhtuvd6Lj=sebT_uqZ1ew@mail.gmail.com>
 <20110714185633.GB11361@phare.normalesup.org>
Message-ID: <CAG5iGsB9-ONHX5EEjcC+zfWiaDnmwP4O+_5a+KMHBY06024j_A@mail.gmail.com>

On Thu, Jul 14, 2011 at 8:56 PM, Arthur Reutenauer
<arthur.reutenauer at normalesup.org> wrote:
>> Is it different from \tracingall ?
>
> ?Yes, it does what Taco mentioned (reporting all existing control
> sequences in the format).
with  *all* primitives or only those  used by the  macros ?
Because with
luatex --debug-format \\bye
I was not able to find :
fontid not found
hfill not found
lastlinefit not found
nolocaldirs not found
nolocalwhatsits not found
parshapedimen not found
tabskip not found


-- 
luigi


From pragma at wxs.nl  Thu Jul 14 23:42:49 2011
From: pragma at wxs.nl (Hans Hagen)
Date: Thu, 14 Jul 2011 23:42:49 +0200
Subject: [luatex] insert a string into node list?
In-Reply-To: <4E1EEDD5.4080604@gmx.de>
References: <4E1EEDD5.4080604@gmx.de>
Message-ID: <4E1F62D9.1090002@wxs.nl>

On 14-7-2011 3:23, Arno Trautmann wrote:

> ? Second, I'd like to print out the name of every defined
> macro/primitive, i.e. I imagine a list with every character combination
> after a \ that does not throw a undefd control sequence-error.
> Why? Just because I wanted to know if it's possible ? and if it is
> possible at all, the odds are best with LuaTeX. Also, I'd like to
> understand how macros are stored internally ? but for that I have to
> read some source code, I guess ?

for name in pairs(tex.hashtokens()) do
     print(name)
end


-----------------------------------------------------------------
                                           Hans Hagen | PRAGMA ADE
               Ridderstraat 27 | 8061 GH Hasselt | The Netherlands
     tel: 038 477 53 69 | voip: 087 875 68 74 | www.pragma-ade.com
                                              | www.pragma-pod.nl
-----------------------------------------------------------------

From taco at elvenkind.com  Fri Jul 15 00:20:55 2011
From: taco at elvenkind.com (Taco Hoekwater)
Date: Fri, 15 Jul 2011 00:20:55 +0200
Subject: [luatex] insert a string into node list?
In-Reply-To: <4E1F62D9.1090002@wxs.nl>
References: <4E1EEDD5.4080604@gmx.de> <4E1F62D9.1090002@wxs.nl>
Message-ID: <68F7127C-BF03-48FF-9DC9-1228BD22732F@elvenkind.com>





On 14 jul. 2011, at 23:42, Hans Hagen <pragma at wxs.nl> wrote:

> On 14-7-2011 3:23, Arno Trautmann wrote:
> 
>> ? Second, I'd like to print out the name of every defined
>> macro/primitive, i.e. I imagine a list with every character combination
>> after a \ that does not throw a undefd control sequence-error.
>> Why? Just because I wanted to know if it's possible ? and if it is
>> possible at all, the odds are best with LuaTeX. Also, I'd like to
>> understand how macros are stored internally ? but for that I have to
>> read some source code, I guess ?
> 
> for name in pairs(tex.hashtokens()) do
>    print(name)
> end

Really? Did i write code for that?

> 

Best wishes,
Taco

From luigi.scarso at gmail.com  Fri Jul 15 01:58:28 2011
From: luigi.scarso at gmail.com (luigi scarso)
Date: Fri, 15 Jul 2011 01:58:28 +0200
Subject: [luatex] insert a string into node list?
In-Reply-To: <4E1F62D9.1090002@wxs.nl>
References: <4E1EEDD5.4080604@gmx.de>
	<4E1F62D9.1090002@wxs.nl>
Message-ID: <CAG5iGsB3SS7+4oozA-Ds-gcbKCOD_sGTp9pYbiUa=jA+Wa0srg@mail.gmail.com>

On Thu, Jul 14, 2011 at 11:42 PM, Hans Hagen <pragma at wxs.nl> wrote:
> On 14-7-2011 3:23, Arno Trautmann wrote:
>
>> ? Second, I'd like to print out the name of every defined
>> macro/primitive, i.e. I imagine a list with every character combination
>> after a \ that does not throw a undefd control sequence-error.
>> Why? Just because I wanted to know if it's possible ? and if it is
>> possible at all, the odds are best with LuaTeX. Also, I'd like to
>> understand how macros are stored internally ? but for that I have to
>> read some source code, I guess ?
>
> for name in pairs(tex.hashtokens()) do
> ? ?print(name)
> end
But it seems still format dependant: with plain luatex form  minimals
fontid not found
hfill not found
lastlinefit not found
luastartup not found
mathdir not found
nolocaldirs not found
nolocalwhatsits not found
Omegaminorversion not found
parshapedimen not found
pdfeachlinedepth not found
pdfeachlineheight not found
pdfendlink not found
protected not found
showgroups not found
suppressfontnotfounderror not found
tabskip not found
Umathfractiondenomvgap not found

With context mkiv:
Alephminorversion not found
Alephrevision not found
Alephversion not found
AlephVersion not found
charit not found
nolocaldirs not found
nolocalwhatsits not found
odelcode not found
odelimiter not found
omathaccent not found
omathchar not found
omathchardef not found
omathcode not found
Omegaminorversion not found
Omegarevision not found
Omegaversion not found
OmegaVersion not found
oradical not found


-- 
luigi


From taco at elvenkind.com  Fri Jul 15 08:15:16 2011
From: taco at elvenkind.com (Taco Hoekwater)
Date: Fri, 15 Jul 2011 08:15:16 +0200
Subject: [luatex] insert a string into node list?
In-Reply-To: <CAG5iGsB3SS7+4oozA-Ds-gcbKCOD_sGTp9pYbiUa=jA+Wa0srg@mail.gmail.com>
References: <4E1EEDD5.4080604@gmx.de>	<4E1F62D9.1090002@wxs.nl>
 <CAG5iGsB3SS7+4oozA-Ds-gcbKCOD_sGTp9pYbiUa=jA+Wa0srg@mail.gmail.com>
Message-ID: <4E1FDAF4.5020304@elvenkind.com>

On 07/15/2011 01:58 AM, luigi scarso wrote:
> On Thu, Jul 14, 2011 at 11:42 PM, Hans Hagen<pragma at wxs.nl>  wrote:
>> On 14-7-2011 3:23, Arno Trautmann wrote:
>>
>>> ? Second, I'd like to print out the name of every defined
>>> macro/primitive, i.e. I imagine a list with every character combination
>>> after a \ that does not throw a undefd control sequence-error.
>>> Why? Just because I wanted to know if it's possible ? and if it is
>>> possible at all, the odds are best with LuaTeX. Also, I'd like to
>>> understand how macros are stored internally ? but for that I have to
>>> read some source code, I guess ?
>>
>> for name in pairs(tex.hashtokens()) do
>>     print(name)
>> end
> But it seems still format dependant: with plain luatex form  minimals

Yes, it is. The list of actual control sequences and
primitives is format dependent, thanks to tex.enableprimitives / 
tex.extraprimitives.

Best wishes,
Taco

From luigi.scarso at gmail.com  Fri Jul 15 09:31:41 2011
From: luigi.scarso at gmail.com (luigi scarso)
Date: Fri, 15 Jul 2011 09:31:41 +0200
Subject: [luatex] insert a string into node list?
In-Reply-To: <4E1FDAF4.5020304@elvenkind.com>
References: <4E1EEDD5.4080604@gmx.de> <4E1F62D9.1090002@wxs.nl>
 <CAG5iGsB3SS7+4oozA-Ds-gcbKCOD_sGTp9pYbiUa=jA+Wa0srg@mail.gmail.com>
 <4E1FDAF4.5020304@elvenkind.com>
Message-ID: <CAG5iGsCV97b1T4XB7Zv1nhtvvpCg-3zhLt82=5mY46J785jTrQ@mail.gmail.com>

On Fri, Jul 15, 2011 at 8:15 AM, Taco Hoekwater <taco at elvenkind.com> wrote:
> On 07/15/2011 01:58 AM, luigi scarso wrote:
>>
>> On Thu, Jul 14, 2011 at 11:42 PM, Hans Hagen<pragma at wxs.nl> ?wrote:
>>>
>>> On 14-7-2011 3:23, Arno Trautmann wrote:
>>>
>>>> ? Second, I'd like to print out the name of every defined
>>>> macro/primitive, i.e. I imagine a list with every character combination
>>>> after a \ that does not throw a undefd control sequence-error.
>>>> Why? Just because I wanted to know if it's possible ? and if it is
>>>> possible at all, the odds are best with LuaTeX. Also, I'd like to
>>>> understand how macros are stored internally ? but for that I have to
>>>> read some source code, I guess ?
>>>
>>> for name in pairs(tex.hashtokens()) do
>>> ? ?print(name)
>>> end
>>
>> But it seems still format dependant: with plain luatex form ?minimals
>
> Yes, it is. The list of actual control sequences and
> primitives is format dependent, thanks to tex.enableprimitives /
> tex.extraprimitives.
Hm, I'm not convinced.
I must check what follow:

1)hfill should be not influenced by tex.enableprimitives /tex.extraprimitives .
and it's not listed with plain luatex from minimals

2) It's a TEX82 primitive and the ref. says
"""
Calling some form of tex.enableprimitives() is highly important
though, because if you do not,
you will end up with a TEX82-lookalike that can run lua code but not
do much else. The defined csnames
are (of course) saved in the format and will be available at runtime.
"""
so it should be in every set of primitives

3) it's not listed with --debug-format.

So I believe that all of these methods (but not grepping the code)
list all the control sequences that appear inside the format --- and
as you said some primitives can be excluded (it's the case of  hfill:
it's not used by luatex plain). Of course mkiv is so big that it's
practically impossible that hfill is  not used in the body of some
macros, but it's reasonable to suppose that the Aleph and Omega macros
are not necessary :
it seems then that only the charit, nolocaldir nolocalwhatsits
primitives are not used by mkiv.

-- 
luigi


From Arno.Trautmann at gmx.de  Fri Jul 15 09:54:16 2011
From: Arno.Trautmann at gmx.de (Arno Trautmann)
Date: Fri, 15 Jul 2011 09:54:16 +0200
Subject: [luatex] insert a string into node list?
In-Reply-To: <68F7127C-BF03-48FF-9DC9-1228BD22732F@elvenkind.com>
References: <4E1EEDD5.4080604@gmx.de> <4E1F62D9.1090002@wxs.nl>
 <68F7127C-BF03-48FF-9DC9-1228BD22732F@elvenkind.com>
Message-ID: <4E1FF228.3030808@gmx.de>

Taco Hoekwater wrote:
> On 14 jul. 2011, at 23:42, Hans Hagen<pragma at wxs.nl>  wrote:
>> On 14-7-2011 3:23, Arno Trautmann wrote:
>>
>>> ? Second, I'd like to print out the name of every defined
>>> macro/primitive, i.e. I imagine a list with every character combination
>>> after a \ that does not throw a undefd control sequence-error.
>>> Why? Just because I wanted to know if it's possible ? and if it is
>>> possible at all, the odds are best with LuaTeX. Also, I'd like to
>>> understand how macros are stored internally ? but for that I have to
>>> read some source code, I guess ?
>>
>> for name in pairs(tex.hashtokens()) do
>>     print(name)
>> end
>
> Really? Did i write code for that?

Wow, I'd never thought there were already code for this ?
Very nice, thank you!

cheers
Arno

From pragma at wxs.nl  Fri Jul 15 15:41:31 2011
From: pragma at wxs.nl (Hans Hagen)
Date: Fri, 15 Jul 2011 15:41:31 +0200
Subject: [luatex] insert a string into node list?
In-Reply-To: <68F7127C-BF03-48FF-9DC9-1228BD22732F@elvenkind.com>
References: <4E1EEDD5.4080604@gmx.de> <4E1F62D9.1090002@wxs.nl>
 <68F7127C-BF03-48FF-9DC9-1228BD22732F@elvenkind.com>
Message-ID: <4E20438B.7030001@wxs.nl>

On 15-7-2011 12:20, Taco Hoekwater wrote:
>
>
>
>
> On 14 jul. 2011, at 23:42, Hans Hagen<pragma at wxs.nl>  wrote:
>
>> On 14-7-2011 3:23, Arno Trautmann wrote:
>>
>>> ? Second, I'd like to print out the name of every defined
>>> macro/primitive, i.e. I imagine a list with every character combination
>>> after a \ that does not throw a undefd control sequence-error.
>>> Why? Just because I wanted to know if it's possible ? and if it is
>>> possible at all, the odds are best with LuaTeX. Also, I'd like to
>>> understand how macros are stored internally ? but for that I have to
>>> read some source code, I guess ?
>>
>> for name in pairs(tex.hashtokens()) do
>>     print(name)
>> end
>
> Really? Did i write code for that?

Yes, as at some point - long ago already - we needed it for tracking 
down some problems (mkiv has some additional tracing based upon it 
already for quite a while, not that I ever use it nowadays).

Hans

-----------------------------------------------------------------
                                           Hans Hagen | PRAGMA ADE
               Ridderstraat 27 | 8061 GH Hasselt | The Netherlands
     tel: 038 477 53 69 | voip: 087 875 68 74 | www.pragma-ade.com
                                              | www.pragma-pod.nl
-----------------------------------------------------------------

From mpg at elzevir.fr  Fri Jul 15 16:18:22 2011
From: mpg at elzevir.fr (=?UTF-8?B?TWFudWVsIFDDqWdvdXJpw6ktR29ubmFyZA==?=)
Date: Fri, 15 Jul 2011 16:18:22 +0200
Subject: [luatex] insert a string into node list?
In-Reply-To: <4E20438B.7030001@wxs.nl>
References: <4E1EEDD5.4080604@gmx.de> <4E1F62D9.1090002@wxs.nl>
 <68F7127C-BF03-48FF-9DC9-1228BD22732F@elvenkind.com>
 <4E20438B.7030001@wxs.nl>
Message-ID: <4E204C2E.6000603@elzevir.fr>

Le 15/07/2011 15:41, Hans Hagen a ?crit :
> On 15-7-2011 12:20, Taco Hoekwater wrote:
>> On 14 jul. 2011, at 23:42, Hans Hagen<pragma at wxs.nl>  wrote:
>>
>>> for name in pairs(tex.hashtokens()) do
>>>     print(name)
>>> end
>>
>> Really? Did i write code for that?
> 
> Yes, as at some point - long ago already - we needed it for tracking 
> down some problems (mkiv has some additional tracing based upon it 
> already for quite a while, not that I ever use it nowadays).
> 
May I suggest to add a few lines about it in the doc?

Thanks,
Manuel.

From p.stephani2 at googlemail.com  Sat Jul 16 18:38:37 2011
From: p.stephani2 at googlemail.com (Philipp Stephani)
Date: Sat, 16 Jul 2011 18:38:37 +0200
Subject: [luatex] Font embedded twice with different rendering modes
Message-ID: <CAArVCkRvfzYuo5+LmTnJcqmpq8SFpCx8QLKgWPkT3CAarb25bA@mail.gmail.com>

>From Pablo, see?https://github.com/wspr/unicode-math/issues/208
If you?load a font twice using different rendering modes, it gets
embedded twice:

\input luaotfload.sty
\font\1={name:LM Roman 10 Regular:mode=node}\relax
\font\2={name:LM Roman 10 Regular:mode=base}\relax
\1 A
\2 A
\bye

Regards,
Philipp Stephani


From taco at elvenkind.com  Sun Jul 17 11:05:38 2011
From: taco at elvenkind.com (Taco Hoekwater)
Date: Sun, 17 Jul 2011 11:05:38 +0200
Subject: [luatex] Font embedded twice with different rendering modes
In-Reply-To: <CAArVCkRvfzYuo5+LmTnJcqmpq8SFpCx8QLKgWPkT3CAarb25bA@mail.gmail.com>
References: <CAArVCkRvfzYuo5+LmTnJcqmpq8SFpCx8QLKgWPkT3CAarb25bA@mail.gmail.com>
Message-ID: <4E22A5E2.2060307@elvenkind.com>

On 07/16/2011 06:38 PM, Philipp Stephani wrote:
>> From Pablo, see https://github.com/wspr/unicode-math/issues/208
> If you load a font twice using different rendering modes, it gets
> embedded twice:

Thanks,

   http://tracker.luatex.org/view.php?id=703

Best wishes,
Taco

From vafa018 at gmail.com  Sun Jul 17 11:12:37 2011
From: vafa018 at gmail.com (Vafa Khalighi)
Date: Sun, 17 Jul 2011 19:12:37 +1000
Subject: [luatex] The state of LuaTeX on RTL typesetting
Message-ID: <CA+wm_c-dY7KwFzPh=q542NKi24uHUSagPcgqrZFL6ZL_Ept=-A@mail.gmail.com>

With version of 0.71 of LuaTeX everything is perfect with RTL typesetting
except unicode bidi. Thanks for the great work that you have done.

I was wondering if there are other bugs in RTL typesetting that I do not
know them? Also What else is planned to be done for RTL typesetting in
LuaTeX? Would eventually unicode bidi be done in the engine or it should be
done in the macro level?

Thanks
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://tug.org/pipermail/luatex/attachments/20110717/7bf2dcbb/attachment.html>

From taco at elvenkind.com  Sun Jul 17 11:17:52 2011
From: taco at elvenkind.com (Taco Hoekwater)
Date: Sun, 17 Jul 2011 11:17:52 +0200
Subject: [luatex] The state of LuaTeX on RTL typesetting
In-Reply-To: <CA+wm_c-dY7KwFzPh=q542NKi24uHUSagPcgqrZFL6ZL_Ept=-A@mail.gmail.com>
References: <CA+wm_c-dY7KwFzPh=q542NKi24uHUSagPcgqrZFL6ZL_Ept=-A@mail.gmail.com>
Message-ID: <4E22A8C0.2060406@elvenkind.com>

On 07/17/2011 11:12 AM, Vafa Khalighi wrote:
> With version of 0.71 of LuaTeX everything is perfect with RTL
> typesetting except unicode bidi. Thanks for the great work that you have
> done.
>
> I was wondering if there are other bugs in RTL typesetting that I do not
> know them? Also What else is planned to be done for RTL typesetting in
> LuaTeX? Would eventually unicode bidi be done in the engine or it should
> be done in the macro level?

Did you miss my message last week?

From vafa018 at gmail.com  Sun Jul 17 11:22:07 2011
From: vafa018 at gmail.com (Vafa Khalighi)
Date: Sun, 17 Jul 2011 19:22:07 +1000
Subject: [luatex] The state of LuaTeX on RTL typesetting
In-Reply-To: <4E22A8C0.2060406@elvenkind.com>
References: <CA+wm_c-dY7KwFzPh=q542NKi24uHUSagPcgqrZFL6ZL_Ept=-A@mail.gmail.com>
 <4E22A8C0.2060406@elvenkind.com>
Message-ID: <CA+wm_c-9V94smYFTT-WB9_g50xTxT6bPJ_b+9JVPDYPiTRNz8w@mail.gmail.com>

Yes, it seems that I missed it. thanks for reminding me.

On Sun, Jul 17, 2011 at 7:17 PM, Taco Hoekwater <taco at elvenkind.com> wrote:

> On 07/17/2011 11:12 AM, Vafa Khalighi wrote:
>
>> With version of 0.71 of LuaTeX everything is perfect with RTL
>> typesetting except unicode bidi. Thanks for the great work that you have
>> done.
>>
>> I was wondering if there are other bugs in RTL typesetting that I do not
>> know them? Also What else is planned to be done for RTL typesetting in
>> LuaTeX? Would eventually unicode bidi be done in the engine or it should
>> be done in the macro level?
>>
>
> Did you miss my message last week?
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://tug.org/pipermail/luatex/attachments/20110717/8d3108fd/attachment.html>

From vafa018 at gmail.com  Sun Jul 17 11:27:53 2011
From: vafa018 at gmail.com (Vafa Khalighi)
Date: Sun, 17 Jul 2011 19:27:53 +1000
Subject: [luatex] Fribidi for LuaTeX
In-Reply-To: <4E1C515C.3060701@elvenkind.com>
References: <CA+wm_c9pzn-0OijugCwYGTUJN48xVS2ymKt0gTD+P7+x_=pKnA@mail.gmail.com>
 <4E1C515C.3060701@elvenkind.com>
Message-ID: <CA+wm_c8rXmKJHG9D=pqB9M=rtKX8VV6-ax4NHg1xndDMpggRzg@mail.gmail.com>

Thanks for this but after reading this for several times, I still have
difficulty understanding the actual problems. Maybe it is because I never
faced any of these issues. So I would be grateful if you could explain these
issues more clearly so that we can discuss them. On the other side (Knowing
that luatex is different to XeTeX), I guess that unibidi is done by the ICU
and I am not sure if any of these problems exist in XeTeX too, in XeTeX you
have some kind of unicode bidi if (1) you use any opentype font which uses
ICU and (2) the direction of each, say English word in RTL is LTR but not
two words, direction of numbers is LTR and obviously specific characters are
mirrored.

On Tue, Jul 12, 2011 at 11:51 PM, Taco Hoekwater <taco at elvenkind.com> wrote:

>
> Hi,
>
> Now that the Unicode BiDi algorithm implementation discussion
> seems to restart, it is a good time to ask the people involved
> to solve the non-trivial problem of adjusting the algorithm
> to cater for the inclusion of
>
> * out-of-line node objects (\setbox, \box, \copy),
> * out-of-line tokens (like alignment templates and macro expansions),
> * vertical typesetting,
> * TeX grouping levels,
> * Interfering nodes (math, \special, \rule etc)
>
> Thanks in advance,
>
> Taco
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://tug.org/pipermail/luatex/attachments/20110717/bb650ab1/attachment.html>

From taco at elvenkind.com  Sun Jul 17 11:37:19 2011
From: taco at elvenkind.com (Taco Hoekwater)
Date: Sun, 17 Jul 2011 11:37:19 +0200
Subject: [luatex] Fribidi for LuaTeX
In-Reply-To: <CA+wm_c8rXmKJHG9D=pqB9M=rtKX8VV6-ax4NHg1xndDMpggRzg@mail.gmail.com>
References: <CA+wm_c9pzn-0OijugCwYGTUJN48xVS2ymKt0gTD+P7+x_=pKnA@mail.gmail.com>
 <4E1C515C.3060701@elvenkind.com>
 <CA+wm_c8rXmKJHG9D=pqB9M=rtKX8VV6-ax4NHg1xndDMpggRzg@mail.gmail.com>
Message-ID: <4E22AD4F.6050009@elvenkind.com>

On 07/17/2011 11:27 AM, Vafa Khalighi wrote:
> Thanks for this but after reading this for several times, I still have
> difficulty understanding the actual problems. Maybe it is because I
> never faced any of these issues. So I would be grateful if you could
> explain these issues more clearly so that we can discuss them.

I do not have time to write down an exhaustive list of bidi problems.
In fact, that is precisely why I wrote that message. One of the
implementation problems is, for example, that the bidi algorithm
starts with:

   P1. Split the text into separate paragraphs. A paragraph separator is
   kept with the previous paragraph. Within each paragraph, apply all
   the other rules of this algorithm.

Now, how does that apply to an \hbox ?  I simply do not know.

Best wishes,
Taco

From vafa018 at gmail.com  Sun Jul 17 11:49:49 2011
From: vafa018 at gmail.com (Vafa Khalighi)
Date: Sun, 17 Jul 2011 19:49:49 +1000
Subject: [luatex] Fribidi for LuaTeX
In-Reply-To: <4E22AD4F.6050009@elvenkind.com>
References: <CA+wm_c9pzn-0OijugCwYGTUJN48xVS2ymKt0gTD+P7+x_=pKnA@mail.gmail.com>
 <4E1C515C.3060701@elvenkind.com>
 <CA+wm_c8rXmKJHG9D=pqB9M=rtKX8VV6-ax4NHg1xndDMpggRzg@mail.gmail.com>
 <4E22AD4F.6050009@elvenkind.com>
Message-ID: <CA+wm_c_nx3pGALtSq9+xhEudGc1syiEfDar2ShUAQJ4wBrpBpA@mail.gmail.com>

Hi Taco, I also do not know the answer of those two questions but I can ask
Behdad Esfahbod and Rouzbeh Pournader to join the luatex mailing list and
discuss these with you. Behdad and Rouzbeh were involved with Fribidi and
know  a lot about unicode bidi.

Thanks

On Sun, Jul 17, 2011 at 7:37 PM, Taco Hoekwater <taco at elvenkind.com> wrote:

> On 07/17/2011 11:27 AM, Vafa Khalighi wrote:
>
>> Thanks for this but after reading this for several times, I still have
>> difficulty understanding the actual problems. Maybe it is because I
>> never faced any of these issues. So I would be grateful if you could
>> explain these issues more clearly so that we can discuss them.
>>
>
> I do not have time to write down an exhaustive list of bidi problems.
> In fact, that is precisely why I wrote that message. One of the
> implementation problems is, for example, that the bidi algorithm
> starts with:
>
>  P1. Split the text into separate paragraphs. A paragraph separator is
>  kept with the previous paragraph. Within each paragraph, apply all
>  the other rules of this algorithm.
>
> Now, how does that apply to an \hbox ?  I simply do not know.
>
> Best wishes,
> Taco
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://tug.org/pipermail/luatex/attachments/20110717/a0e791f4/attachment-0001.html>

From cloos at jhcloos.com  Sun Jul 17 18:30:13 2011
From: cloos at jhcloos.com (James Cloos)
Date: Sun, 17 Jul 2011 12:30:13 -0400
Subject: [luatex] Fribidi for LuaTeX
In-Reply-To: <4E22AD4F.6050009@elvenkind.com> (Taco Hoekwater's message of
 "Sun, 17 Jul 2011 11:37:19 +0200")
References: <CA+wm_c9pzn-0OijugCwYGTUJN48xVS2ymKt0gTD+P7+x_=pKnA@mail.gmail.com>
 <4E1C515C.3060701@elvenkind.com>
 <CA+wm_c8rXmKJHG9D=pqB9M=rtKX8VV6-ax4NHg1xndDMpggRzg@mail.gmail.com>
 <4E22AD4F.6050009@elvenkind.com>
Message-ID: <m3r55oc1jm.fsf@jhcloos.com>

>>>>> "TH" == Taco Hoekwater <taco at elvenkind.com> writes:

TH>   P1. Split the text into separate paragraphs. A paragraph separator is
TH>   kept with the previous paragraph. Within each paragraph, apply all
TH>   the other rules of this algorithm.

TH> Now, how does that apply to an \hbox ?  I simply do not know.

The basic idea, remembering that unicode's bidi algorithm is designed to
apply to plain text, is to treat things like \hbox, math boxes and the
like as a single character w/in their enclosing paragraphs, and as a
paragraph inside of the box.

Boxes of that sort probably should be treated as weak-l2r by default.

The inside paragraph probably should start with the direction used
immediately outside.  So, ABC\hbox{(4)}DEF probably should render
the same as ABC(45)DEF, which, visually, would be ordered FED)45(CBA
as characters and rendered with glyphs which look like FED(45)CBA.

(It is typical the use majuscules to represent r2l characters and
minisules to represent l2r characters when dicussing bidi.  The
digits do not reorder; chars like ( and ) take the same direction
as their surrounding chars, but the resulting glyphs are reversed.)

In the end, though, luatex will need an iterative process to get
bidi right.  Start with the low-hanging fruit and take direction
from the bidi users and their expectations.

So start by treating boxes as containing paragraphs, but being a
single character for the purposes of the text outside of the box.
And go from there based on user feedback.

-JimC
-- 
James Cloos <cloos at jhcloos.com>         OpenPGP: 1024D/ED7DAEA6

From khaledhosny at eglug.org  Sun Jul 17 19:18:38 2011
From: khaledhosny at eglug.org (Khaled Hosny)
Date: Sun, 17 Jul 2011 19:18:38 +0200
Subject: [luatex] Fribidi for LuaTeX
In-Reply-To: <m3r55oc1jm.fsf@jhcloos.com>
References: <CA+wm_c9pzn-0OijugCwYGTUJN48xVS2ymKt0gTD+P7+x_=pKnA@mail.gmail.com>
 <4E1C515C.3060701@elvenkind.com>
 <CA+wm_c8rXmKJHG9D=pqB9M=rtKX8VV6-ax4NHg1xndDMpggRzg@mail.gmail.com>
 <4E22AD4F.6050009@elvenkind.com> <m3r55oc1jm.fsf@jhcloos.com>
Message-ID: <20110717171838.GA3426@khaled-laptop>

On Sun, Jul 17, 2011 at 12:30:13PM -0400, James Cloos wrote:
> >>>>> "TH" == Taco Hoekwater <taco at elvenkind.com> writes:
> 
> TH>   P1. Split the text into separate paragraphs. A paragraph separator is
> TH>   kept with the previous paragraph. Within each paragraph, apply all
> TH>   the other rules of this algorithm.
> 
> TH> Now, how does that apply to an \hbox ?  I simply do not know.
> 
> The basic idea, remembering that unicode's bidi algorithm is designed to
> apply to plain text, is to treat things like \hbox, math boxes and the
> like as a single character w/in their enclosing paragraphs, and as a
> paragraph inside of the box.
> 
> Boxes of that sort probably should be treated as weak-l2r by default.

I simply treat all non characters nodes as neutrals, so they inherit the
direction of their surroundings.

Regards,
 Khaled

-- 
 Khaled Hosny
 Egyptian
 Arab

From Aydemir_O at sunybroome.edu  Mon Jul 18 17:48:14 2011
From: Aydemir_O at sunybroome.edu (Aydemir, Oz)
Date: Mon, 18 Jul 2011 11:48:14 -0400
Subject: [luatex] Fribidi for LuaTeX
In-Reply-To: <4E22AD4F.6050009@elvenkind.com>
References: <CA+wm_c9pzn-0OijugCwYGTUJN48xVS2ymKt0gTD+P7+x_=pKnA@mail.gmail.com>
 <4E1C515C.3060701@elvenkind.com>
 <CA+wm_c8rXmKJHG9D=pqB9M=rtKX8VV6-ax4NHg1xndDMpggRzg@mail.gmail.com>,
 <4E22AD4F.6050009@elvenkind.com>
Message-ID: <6E47EF8A045BF44383BCD8246D0298700BF77911E5@exch07mbx.campus.bcc>


________________________________________
From: luatex-bounces at tug.org [luatex-bounces at tug.org] On Behalf Of Taco Hoekwater [taco at elvenkind.com]
Sent: Sunday, July 17, 2011 5:37 AM
To: luatex at tug.org
Subject: Re: [luatex] Fribidi for LuaTeX

On 07/17/2011 11:27 AM, Vafa Khalighi wrote:
> Thanks for this but after reading this for several times, I still have
> difficulty understanding the actual problems. Maybe it is because I
> never faced any of these issues. So I would be grateful if you could
> explain these issues more clearly so that we can discuss them.

I do not have time to write down an exhaustive list of bidi problems.
In fact, that is precisely why I wrote that message. One of the
implementation problems is, for example, that the bidi algorithm
starts with:

   P1. Split the text into separate paragraphs. A paragraph separator is
   kept with the previous paragraph. Within each paragraph, apply all
   the other rules of this algorithm.

Now, how does that apply to an \hbox ?  I simply do not know.

Best wishes,
Taco


From nomosnomos at gmail.com  Tue Jul 19 04:08:51 2011
From: nomosnomos at gmail.com (Dohyun Kim)
Date: Tue, 19 Jul 2011 11:08:51 +0900
Subject: [luatex] CJK vertical typesetting
In-Reply-To: <4E1E896D.1020508@elvenkind.com>
References: <CAFzmAm3C3PFWZeaiMER4ET3pkH6K=DjxiJAwBe89h7xHqoiTEw@mail.gmail.com>
 <4E1E896D.1020508@elvenkind.com>
Message-ID: <CAFzmAm3QKunioc8iFLH3DV4pNnD=fPffFKdM=pj5U_14oA_vew@mail.gmail.com>

There's some weird problem regarding RTT direction:

\pagedir RTT \bodydir RTT \pardir RTT \textdir RTT
\pdfpagewidth=297mm \pdfpageheight=210mm
%%% two column output from The TeXbook
\newdimen\fullhsize
\fullhsize=6.5in \hsize=3.2in
\def\fullline{\hbox to\fullhsize}
\let\lr=L \newbox\leftcolumn
\output={\if L\lr
    \global\setbox\leftcolumn=\columnbox \global\let\lr=R
  \else \doubleformat \global\let\lr=L\fi
  \ifnum\outputpenalty>-20000 \else\dosupereject\fi}
\def\doubleformat{\shipout\vbox{\makeheadline
    \fullline{\box\leftcolumn\hfil\columnbox}
    \hsize\fullhsize\makefootline}
  \advancepageno}
\def\columnbox{\leftline{\pagebody}}
\input knuth\par
\input knuth\par
\input knuth\par
\input knuth\par
\input knuth\par
\input knuth\par
\input knuth\par
\input knuth\par
\bye

The main body of the document has its place in too far right position.
What is the best way to get rid of this issue?

-- 
Dohyun Kim
College of Law, Dongguk University
Seoul, Republic of Korea

From hartmut_henkel at gmx.de  Tue Jul 19 08:57:17 2011
From: hartmut_henkel at gmx.de (Hartmut Henkel)
Date: Tue, 19 Jul 2011 08:57:17 +0200
Subject: [luatex] CJK vertical typesetting
In-Reply-To: <CAFzmAm3QKunioc8iFLH3DV4pNnD=fPffFKdM=pj5U_14oA_vew@mail.gmail.com>
References: <CAFzmAm3C3PFWZeaiMER4ET3pkH6K=DjxiJAwBe89h7xHqoiTEw@mail.gmail.com>
 <4E1E896D.1020508@elvenkind.com>
 <CAFzmAm3QKunioc8iFLH3DV4pNnD=fPffFKdM=pj5U_14oA_vew@mail.gmail.com>
Message-ID: <20110719065717.278450@gmx.net>

> There's some weird problem regarding RTT direction:
> 
> \pagedir RTT \bodydir RTT \pardir RTT \textdir RTT
> \pdfpagewidth=297mm \pdfpageheight=210mm
> %%% two column output from The TeXbook
> \newdimen\fullhsize
> \fullhsize=6.5in \hsize=3.2in
> \def\fullline{\hbox to\fullhsize}
> \let\lr=L \newbox\leftcolumn
> \output={\if L\lr
>     \global\setbox\leftcolumn=\columnbox \global\let\lr=R
>   \else \doubleformat \global\let\lr=L\fi
>   \ifnum\outputpenalty>-20000 \else\dosupereject\fi}
> \def\doubleformat{\shipout\vbox{\makeheadline
>     \fullline{\box\leftcolumn\hfil\columnbox}
>     \hsize\fullhsize\makefootline}
>   \advancepageno}
> \def\columnbox{\leftline{\pagebody}}
> \input knuth\par
> \input knuth\par
> \input knuth\par
> \input knuth\par
> \input knuth\par
> \input knuth\par
> \input knuth\par
> \input knuth\par
> \bye
> 
> The main body of the document has its place in too far right position.
> What is the best way to get rid of this issue?

\pagerightoffset is the parameterer, works like \hoffset. But somehow
the dimension is still off.

Regards, Hartmut

-- 
Empfehlen Sie GMX DSL Ihren Freunden und Bekannten und wir
belohnen Sie mit bis zu 50,- Euro! https://freundschaftswerbung.gmx.de

From hartmut_henkel at gmx.de  Tue Jul 19 08:57:17 2011
From: hartmut_henkel at gmx.de (Hartmut Henkel)
Date: Tue, 19 Jul 2011 08:57:17 +0200
Subject: [luatex] CJK vertical typesetting
In-Reply-To: <CAFzmAm3QKunioc8iFLH3DV4pNnD=fPffFKdM=pj5U_14oA_vew@mail.gmail.com>
References: <CAFzmAm3C3PFWZeaiMER4ET3pkH6K=DjxiJAwBe89h7xHqoiTEw@mail.gmail.com>
 <4E1E896D.1020508@elvenkind.com>
 <CAFzmAm3QKunioc8iFLH3DV4pNnD=fPffFKdM=pj5U_14oA_vew@mail.gmail.com>
Message-ID: <20110719065717.278450@gmx.net>

> There's some weird problem regarding RTT direction:
> 
> \pagedir RTT \bodydir RTT \pardir RTT \textdir RTT
> \pdfpagewidth=297mm \pdfpageheight=210mm
> %%% two column output from The TeXbook
> \newdimen\fullhsize
> \fullhsize=6.5in \hsize=3.2in
> \def\fullline{\hbox to\fullhsize}
> \let\lr=L \newbox\leftcolumn
> \output={\if L\lr
>     \global\setbox\leftcolumn=\columnbox \global\let\lr=R
>   \else \doubleformat \global\let\lr=L\fi
>   \ifnum\outputpenalty>-20000 \else\dosupereject\fi}
> \def\doubleformat{\shipout\vbox{\makeheadline
>     \fullline{\box\leftcolumn\hfil\columnbox}
>     \hsize\fullhsize\makefootline}
>   \advancepageno}
> \def\columnbox{\leftline{\pagebody}}
> \input knuth\par
> \input knuth\par
> \input knuth\par
> \input knuth\par
> \input knuth\par
> \input knuth\par
> \input knuth\par
> \input knuth\par
> \bye
> 
> The main body of the document has its place in too far right position.
> What is the best way to get rid of this issue?

\pagerightoffset is the parameterer, works like \hoffset. But somehow
the dimension is still off.

Regards, Hartmut

-- 
Empfehlen Sie GMX DSL Ihren Freunden und Bekannten und wir
belohnen Sie mit bis zu 50,- Euro! https://freundschaftswerbung.gmx.de

From pragma at wxs.nl  Tue Jul 19 10:09:37 2011
From: pragma at wxs.nl (Hans Hagen)
Date: Tue, 19 Jul 2011 10:09:37 +0200
Subject: [luatex] Fribidi for LuaTeX
In-Reply-To: <m3r55oc1jm.fsf@jhcloos.com>
References: <CA+wm_c9pzn-0OijugCwYGTUJN48xVS2ymKt0gTD+P7+x_=pKnA@mail.gmail.com>
 <4E1C515C.3060701@elvenkind.com>
 <CA+wm_c8rXmKJHG9D=pqB9M=rtKX8VV6-ax4NHg1xndDMpggRzg@mail.gmail.com>
 <4E22AD4F.6050009@elvenkind.com> <m3r55oc1jm.fsf@jhcloos.com>
Message-ID: <4E253BC1.3000202@wxs.nl>

On 17-7-2011 6:30, James Cloos wrote:

> So start by treating boxes as containing paragraphs, but being a
> single character for the purposes of the text outside of the box.
> And go from there based on user feedback.

Which thereby makes a generic solution impossible. Omega translation 
processing struggled with this mix of 'pure text', 'macro expansion', 
'packages content' and it never worked out in complex situations. For me 
this is a pretty good reason for not adding any hard coded bidi (or foo 
or bar or whatever) behavior to core luatex but stick to either external 
libraries (preprocessing or whatever) and/or solutions written in lua 
that nicely interact with the macro packages concepts. (Well, that's the 
main reason for having lua as extension language in the first place).

Hans

-----------------------------------------------------------------
                                           Hans Hagen | PRAGMA ADE
               Ridderstraat 27 | 8061 GH Hasselt | The Netherlands
     tel: 038 477 53 69 | voip: 087 875 68 74 | www.pragma-ade.com
                                              | www.pragma-pod.nl
-----------------------------------------------------------------

From vafa018 at gmail.com  Tue Jul 19 10:24:02 2011
From: vafa018 at gmail.com (Vafa Khalighi)
Date: Tue, 19 Jul 2011 18:24:02 +1000
Subject: [luatex] Fribidi for LuaTeX
In-Reply-To: <4E253BC1.3000202@wxs.nl>
References: <CA+wm_c9pzn-0OijugCwYGTUJN48xVS2ymKt0gTD+P7+x_=pKnA@mail.gmail.com>
 <4E1C515C.3060701@elvenkind.com>
 <CA+wm_c8rXmKJHG9D=pqB9M=rtKX8VV6-ax4NHg1xndDMpggRzg@mail.gmail.com>
 <4E22AD4F.6050009@elvenkind.com> <m3r55oc1jm.fsf@jhcloos.com>
 <4E253BC1.3000202@wxs.nl>
Message-ID: <CA+wm_c_mhtJ1aR=+3E3S8ZTRzYUaeOwCTvs91wknKNt8F01kvA@mail.gmail.com>

True but at least I think luatex can provides something similar to  what
XeTeX provides by its ICU layout engine and the rest (which obviously is
much complicated and needs more testing) can be done either by a
preprocessor or done entirely in lua.


Which thereby makes a generic solution impossible. Omega translation
> processing struggled with this mix of 'pure text', 'macro expansion',
> 'packages content' and it never worked out in complex situations. For me
> this is a pretty good reason for not adding any hard coded bidi (or foo or
> bar or whatever) behavior to core luatex but stick to either external
> libraries (preprocessing or whatever) and/or solutions written in lua that
> nicely interact with the macro packages concepts. (Well, that's the main
> reason for having lua as extension language in the first place).
>
> Hans
>
>
-- 
Vafa Khalighi
Iranian
Persian
Aryan
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://tug.org/pipermail/luatex/attachments/20110719/d69d32e9/attachment.html>

From vafa018 at gmail.com  Tue Jul 19 10:31:42 2011
From: vafa018 at gmail.com (Vafa Khalighi)
Date: Tue, 19 Jul 2011 18:31:42 +1000
Subject: [luatex] Fribidi for LuaTeX
In-Reply-To: <4E253BC1.3000202@wxs.nl>
References: <CA+wm_c9pzn-0OijugCwYGTUJN48xVS2ymKt0gTD+P7+x_=pKnA@mail.gmail.com>
 <4E1C515C.3060701@elvenkind.com>
 <CA+wm_c8rXmKJHG9D=pqB9M=rtKX8VV6-ax4NHg1xndDMpggRzg@mail.gmail.com>
 <4E22AD4F.6050009@elvenkind.com> <m3r55oc1jm.fsf@jhcloos.com>
 <4E253BC1.3000202@wxs.nl>
Message-ID: <CA+wm_c_AhpQNc1gzkLiVyo6w5u1+aN=yWv_c4rnjMPOEA2KUHA@mail.gmail.com>

> Which thereby makes a generic solution impossible. Omega translation
> processing struggled with this mix of 'pure text', 'macro expansion',
> 'packages content' and it never worked out in complex situations. For me
> this is a pretty good reason for not adding any hard coded bidi (or foo or
> bar or whatever) behavior to core luatex but stick to either external
> libraries (preprocessing or whatever) and/or solutions written in lua that
> nicely interact with the macro packages concepts. (Well, that's the main
> reason for having lua as extension language in the first place).
>
> Hans
>
>
How does \setupdirections{bidi=on} or whatever exist in MKiv deal with that?



-- 
Vafa Khalighi
Iranian
Persian
Aryan
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://tug.org/pipermail/luatex/attachments/20110719/3a5302f0/attachment.html>

From nomosnomos at gmail.com  Tue Jul 19 11:28:32 2011
From: nomosnomos at gmail.com (Dohyun Kim)
Date: Tue, 19 Jul 2011 18:28:32 +0900
Subject: [luatex] CJK vertical typesetting
In-Reply-To: <20110719065717.278450@gmx.net>
References: <CAFzmAm3C3PFWZeaiMER4ET3pkH6K=DjxiJAwBe89h7xHqoiTEw@mail.gmail.com>
 <4E1E896D.1020508@elvenkind.com>
 <CAFzmAm3QKunioc8iFLH3DV4pNnD=fPffFKdM=pj5U_14oA_vew@mail.gmail.com>
 <20110719065717.278450@gmx.net>
Message-ID: <CAFzmAm2MLK4ndV7KKvrdjXWr-h0QDn2L-46=t_asHcYULAyfgQ@mail.gmail.com>

2011/7/19 Hartmut Henkel <hartmut_henkel at gmx.de>:
>
> \pagerightoffset is the parameterer, works like \hoffset. But somehow
> the dimension is still off.
>

This is not a good solution.  When I insert "\pagerightoffset=5.5in"
then page number disappears beyond the page border.

The problem seems to occur because of the strange behavior
of boxes under RTT dir.  Take a look at the following code;
is this intended behavior?

\pagedir RTT \bodydir RTT
\offinterlineskip
\setbox0=\hbox{} \ht0=5pt \dp0=5pt
\setbox2=\vbox{\copy0\box0}
\showthe\ht2 \showthe\dp2 % prints 15pt, 5pt  (ok)
\setbox4=\hbox{\box2}
\showthe\ht4 \showthe\dp4 % prints 10pt, 10pt (??)
\bye

Regards,
-- 
Dohyun Kim
College of Law, Dongguk University
Seoul, Republic of Korea

From hartmut_henkel at gmx.de  Tue Jul 19 14:08:47 2011
From: hartmut_henkel at gmx.de (Hartmut Henkel)
Date: Tue, 19 Jul 2011 14:08:47 +0200
Subject: [luatex] CJK vertical typesetting
In-Reply-To: <CAFzmAm2MLK4ndV7KKvrdjXWr-h0QDn2L-46=t_asHcYULAyfgQ@mail.gmail.com>
References: <CAFzmAm3C3PFWZeaiMER4ET3pkH6K=DjxiJAwBe89h7xHqoiTEw@mail.gmail.com>
 <4E1E896D.1020508@elvenkind.com>
 <CAFzmAm3QKunioc8iFLH3DV4pNnD=fPffFKdM=pj5U_14oA_vew@mail.gmail.com>
 <20110719065717.278450@gmx.net>
 <CAFzmAm2MLK4ndV7KKvrdjXWr-h0QDn2L-46=t_asHcYULAyfgQ@mail.gmail.com>
Message-ID: <20110719120847.269880@gmx.net>

> The problem seems to occur because of the strange behavior
> of boxes under RTT dir.  Take a look at the following code;
> is this intended behavior?
> 
> \pagedir RTT \bodydir RTT
> \offinterlineskip
> \setbox0=\hbox{} \ht0=5pt \dp0=5pt
> \setbox2=\vbox{\copy0\box0}
> \showthe\ht2 \showthe\dp2 % prints 15pt, 5pt  (ok)
> \setbox4=\hbox{\box2}
> \showthe\ht4 \showthe\dp4 % prints 10pt, 10pt (??)
> \bye

it's so by design,the \vbox is "vertically" centered around the baseline of the enclosing \hbox.

Luatex inherited this behavior (no idea, if this really is a good thing, the (ht + dp) / 2 shift adjustment in the code looks a bit arbitrary imho, and there hasn't been much RTT activity yet). 

Regards, Hartmut
-- 
Empfehlen Sie GMX DSL Ihren Freunden und Bekannten und wir
belohnen Sie mit bis zu 50,- Euro! https://freundschaftswerbung.gmx.de

From hartmut_henkel at gmx.de  Tue Jul 19 14:08:47 2011
From: hartmut_henkel at gmx.de (Hartmut Henkel)
Date: Tue, 19 Jul 2011 14:08:47 +0200
Subject: [luatex] CJK vertical typesetting
In-Reply-To: <CAFzmAm2MLK4ndV7KKvrdjXWr-h0QDn2L-46=t_asHcYULAyfgQ@mail.gmail.com>
References: <CAFzmAm3C3PFWZeaiMER4ET3pkH6K=DjxiJAwBe89h7xHqoiTEw@mail.gmail.com>
 <4E1E896D.1020508@elvenkind.com>
 <CAFzmAm3QKunioc8iFLH3DV4pNnD=fPffFKdM=pj5U_14oA_vew@mail.gmail.com>
 <20110719065717.278450@gmx.net>
 <CAFzmAm2MLK4ndV7KKvrdjXWr-h0QDn2L-46=t_asHcYULAyfgQ@mail.gmail.com>
Message-ID: <20110719120847.269880@gmx.net>

> The problem seems to occur because of the strange behavior
> of boxes under RTT dir.  Take a look at the following code;
> is this intended behavior?
> 
> \pagedir RTT \bodydir RTT
> \offinterlineskip
> \setbox0=\hbox{} \ht0=5pt \dp0=5pt
> \setbox2=\vbox{\copy0\box0}
> \showthe\ht2 \showthe\dp2 % prints 15pt, 5pt  (ok)
> \setbox4=\hbox{\box2}
> \showthe\ht4 \showthe\dp4 % prints 10pt, 10pt (??)
> \bye

it's so by design,the \vbox is "vertically" centered around the baseline of the enclosing \hbox.

Luatex inherited this behavior (no idea, if this really is a good thing, the (ht + dp) / 2 shift adjustment in the code looks a bit arbitrary imho, and there hasn't been much RTT activity yet). 

Regards, Hartmut
-- 
Empfehlen Sie GMX DSL Ihren Freunden und Bekannten und wir
belohnen Sie mit bis zu 50,- Euro! https://freundschaftswerbung.gmx.de

From ishamid at colostate.edu  Tue Jul 19 19:21:20 2011
From: ishamid at colostate.edu (=?utf-8?B?SWRyaXMgU2FtYXdpIEhhbWlkINin2K/YsdmK2LMgICDYs9mF2KfZiNmKIA==?= =?utf-8?B?2K3Yp9mF2K8=?=)
Date: Tue, 19 Jul 2011 11:21:20 -0600
Subject: [luatex] Fribidi for LuaTeX
In-Reply-To: <CA+wm_c_mhtJ1aR=+3E3S8ZTRzYUaeOwCTvs91wknKNt8F01kvA@mail.gmail.com>
References: <CA+wm_c9pzn-0OijugCwYGTUJN48xVS2ymKt0gTD+P7+x_=pKnA@mail.gmail.com>
 <4E1C515C.3060701@elvenkind.com>
 <CA+wm_c8rXmKJHG9D=pqB9M=rtKX8VV6-ax4NHg1xndDMpggRzg@mail.gmail.com>
 <4E22AD4F.6050009@elvenkind.com> <m3r55oc1jm.fsf@jhcloos.com>
 <4E253BC1.3000202@wxs.nl>
 <CA+wm_c_mhtJ1aR=+3E3S8ZTRzYUaeOwCTvs91wknKNt8F01kvA@mail.gmail.com>
Message-ID: <op.vyvmhuwqpw6hmh@ishamid-pc>

Salaam, Vafa, all

On Tue, 19 Jul 2011 02:24:02 -0600, Vafa Khalighi <vafa018 at gmail.com>
wrote:

> True but at least I think luatex can provides something similar to  what
> XeTeX provides by its ICU layout engine and the rest (which obviously is
> much complicated and needs more testing) can be done either by a
> preprocessor or done entirely in lua.
>
>
> Which thereby makes a generic solution impossible. Omega translation
>> processing struggled with this mix of 'pure text', 'macro expansion',
>> 'packages content' and it never worked out in complex situations. For me
>> this is a pretty good reason for not adding any hard coded bidi (or foo  
>> or
>> bar or whatever) behavior to core luatex but stick to either external
>> libraries (preprocessing or whatever) and/or solutions written in lua  
>> that
>> nicely interact with the macro packages concepts. (Well, that's the main
>> reason for having lua as extension language in the first place).

I am feeling deja vu here ;-)

We must all remember that luatex has a different philosophy from xetex
etc. luatex provides the most basic, low-level, bi-directionality as
perfectly as possible.

OTOH, luatex is _not_ interested in deifying any particular paradigm of
rules for processing bidi text. Compare with the Open Type engine: That's
done by lua extensions. Similarly, bidi in mkiv will be done by lua
extensions which can easily be modified and parameterized as needed.

For example, I may want to use Arabic-numerals in a Persian-typesetting
context or vice versa. Hardcoding the bidi algorithm makes that
inconvenient. Also, the bidi algorithm is not perfect: it mixes the needs
of an editor or verbatim mode with those of real life typography. These
features should be flexible and capable of being turned on and off.
Consider an Arabic paragraph that's all in Arabic except the first word in
English. It makes no sense to force an LR par in that case.

Sometimes you want to turn bidi features off, or at least deprecate them,
in verbatim. See the features of SC Unipad -- perhaps the best
implementation of the bidi algorithm -- for example.

Parts of the bidi algorithm can be part of a solution to the overall
question of bidi typography, but it makes more sense in the luatex
philosophy to decouple that algorithm from the core and build a bidi
paradigm -- or even paradigms in the plural -- than to hardcode one.

For those who like the xetex paradigm, it's best to use xetex. xetex and
luatex involve different philosophical approaches. Using lua, anyone
interested can develop their own bidi engine on top of luatex. Similarly,
if someone does not like the way mkiv does open type. it's just a matter
of writing another OT engine in lua instead of recompiling luatex.

Best wishes
Idris
-- 
Professor Idris Samawi Hamid, Editor-in-Chief
International Journal of Sh??? Studies
Department of Philosophy
Colorado State University
Fort Collins, CO 80523


From khaledhosny at eglug.org  Tue Jul 19 19:32:27 2011
From: khaledhosny at eglug.org (Khaled Hosny)
Date: Tue, 19 Jul 2011 19:32:27 +0200
Subject: [luatex] Fribidi for LuaTeX
In-Reply-To: <op.vyvmhuwqpw6hmh@ishamid-pc>
References: <CA+wm_c9pzn-0OijugCwYGTUJN48xVS2ymKt0gTD+P7+x_=pKnA@mail.gmail.com>
 <4E1C515C.3060701@elvenkind.com>
 <CA+wm_c8rXmKJHG9D=pqB9M=rtKX8VV6-ax4NHg1xndDMpggRzg@mail.gmail.com>
 <4E22AD4F.6050009@elvenkind.com> <m3r55oc1jm.fsf@jhcloos.com>
 <4E253BC1.3000202@wxs.nl>
 <CA+wm_c_mhtJ1aR=+3E3S8ZTRzYUaeOwCTvs91wknKNt8F01kvA@mail.gmail.com>
 <op.vyvmhuwqpw6hmh@ishamid-pc>
Message-ID: <20110719173227.GA4956@khaled-laptop>

On Tue, Jul 19, 2011 at 11:21:20AM -0600, Idris Samawi Hamid ?????   ????? ???? wrote:
> Salaam, Vafa, all
> 
> On Tue, 19 Jul 2011 02:24:02 -0600, Vafa Khalighi <vafa018 at gmail.com>
> wrote:
> 
> >True but at least I think luatex can provides something similar to  what
> >XeTeX provides by its ICU layout engine and the rest (which obviously is
> >much complicated and needs more testing) can be done either by a
> >preprocessor or done entirely in lua.
> >
> >
> >Which thereby makes a generic solution impossible. Omega translation
> >>processing struggled with this mix of 'pure text', 'macro expansion',
> >>'packages content' and it never worked out in complex situations. For me
> >>this is a pretty good reason for not adding any hard coded bidi
> >>(or foo or
> >>bar or whatever) behavior to core luatex but stick to either external
> >>libraries (preprocessing or whatever) and/or solutions written
> >>in lua that
> >>nicely interact with the macro packages concepts. (Well, that's the main
> >>reason for having lua as extension language in the first place).
> 
> I am feeling deja vu here ;-)
> 
> We must all remember that luatex has a different philosophy from xetex
> etc. luatex provides the most basic, low-level, bi-directionality as
> perfectly as possible.
> 
> OTOH, luatex is _not_ interested in deifying any particular paradigm of
> rules for processing bidi text. Compare with the Open Type engine: That's
> done by lua extensions. Similarly, bidi in mkiv will be done by lua
> extensions which can easily be modified and parameterized as needed.
> 
> For example, I may want to use Arabic-numerals in a Persian-typesetting
> context or vice versa. Hardcoding the bidi algorithm makes that
> inconvenient.

Though I'm generally OK with a lua solution, I don't see how the choice
of numerals has any effect on the choice of bidi implementation.

> Also, the bidi algorithm is not perfect: it mixes the needs
> of an editor or verbatim mode with those of real life typography. These
> features should be flexible and capable of being turned on and off.
> Consider an Arabic paragraph that's all in Arabic except the first word in
> English. It makes no sense to force an LR par in that case.

The algorithm actually has a dedicated rule of this use case:
  http://www.unicode.org/reports/tr9/#Higher-Level_Protocols

Regards,
 Khaled

-- 
 Khaled Hosny
 Egyptian
 Arab

From ishamid at colostate.edu  Tue Jul 19 19:39:18 2011
From: ishamid at colostate.edu (=?utf-8?B?SWRyaXMgU2FtYXdpIEhhbWlkINin2K/YsdmK2LMgICDYs9mF2KfZiNmKIA==?= =?utf-8?B?2K3Yp9mF2K8=?=)
Date: Tue, 19 Jul 2011 11:39:18 -0600
Subject: [luatex] Fribidi for LuaTeX
In-Reply-To: <20110719173227.GA4956@khaled-laptop>
References: <CA+wm_c9pzn-0OijugCwYGTUJN48xVS2ymKt0gTD+P7+x_=pKnA@mail.gmail.com>
 <4E1C515C.3060701@elvenkind.com>
 <CA+wm_c8rXmKJHG9D=pqB9M=rtKX8VV6-ax4NHg1xndDMpggRzg@mail.gmail.com>
 <4E22AD4F.6050009@elvenkind.com> <m3r55oc1jm.fsf@jhcloos.com>
 <4E253BC1.3000202@wxs.nl>
 <CA+wm_c_mhtJ1aR=+3E3S8ZTRzYUaeOwCTvs91wknKNt8F01kvA@mail.gmail.com>
 <op.vyvmhuwqpw6hmh@ishamid-pc> <20110719173227.GA4956@khaled-laptop>
Message-ID: <op.vyvnbsutpw6hmh@ishamid-pc>

On Tue, 19 Jul 2011 11:32:27 -0600, Khaled Hosny <khaledhosny at eglug.org>  
wrote:

> The algorithm actually has a dedicated rule of this use case:
>   http://www.unicode.org/reports/tr9/#Higher-Level_Protocols

Sure. At the same time, these are exactly the kinds of rules we _don't_  
want to deify. The people who write these things are not typographers. The  
bidi algorithm mixes text-editing needs with typesetting needs. We have to  
examine bidi from a typography perspective, then integrate the parts of  
the algorithm that make sense in that context (no pun intended) at the  
lua-extension level.

Peace
Idris
-- 
Professor Idris Samawi Hamid, Editor-in-Chief
International Journal of Sh??? Studies
Department of Philosophy
Colorado State University
Fort Collins, CO 80523


From vafa018 at gmail.com  Tue Jul 19 19:51:44 2011
From: vafa018 at gmail.com (Vafa Khalighi)
Date: Wed, 20 Jul 2011 03:51:44 +1000
Subject: [luatex] Fribidi for LuaTeX
In-Reply-To: <op.vyvmhuwqpw6hmh@ishamid-pc>
References: <CA+wm_c9pzn-0OijugCwYGTUJN48xVS2ymKt0gTD+P7+x_=pKnA@mail.gmail.com>
 <4E1C515C.3060701@elvenkind.com>
 <CA+wm_c8rXmKJHG9D=pqB9M=rtKX8VV6-ax4NHg1xndDMpggRzg@mail.gmail.com>
 <4E22AD4F.6050009@elvenkind.com> <m3r55oc1jm.fsf@jhcloos.com>
 <4E253BC1.3000202@wxs.nl>
 <CA+wm_c_mhtJ1aR=+3E3S8ZTRzYUaeOwCTvs91wknKNt8F01kvA@mail.gmail.com>
 <op.vyvmhuwqpw6hmh@ishamid-pc>
Message-ID: <CA+wm_c9=Z4bfeRpFRZ=Rsj_9hyzoFwJGEejD4N8Wu58qaKLsoA@mail.gmail.com>

Hi Idris

Agreed. and if you look ath my previous questions, I actually asked if it is
to be implemented in the luatex engine or in the macro level but I got no
clear response. I have no problems doing uni bidi in lua and that is what I
have been doing for a week but I have not finished yet. I am not going to
implement whole uni bidi for my package, just mirroring characters, numbers
are LTR, One single English word is LTR and that is it. Then I see what
users say and then change things as need arises.

Thanks

2011/7/20 Idris Samawi Hamid ????? ????? ???? <ishamid at colostate.edu>

> Salaam, Vafa, all
>
> On Tue, 19 Jul 2011 02:24:02 -0600, Vafa Khalighi <vafa018 at gmail.com>
> wrote:
>
>
>  True but at least I think luatex can provides something similar to  what
>> XeTeX provides by its ICU layout engine and the rest (which obviously is
>> much complicated and needs more testing) can be done either by a
>> preprocessor or done entirely in lua.
>>
>>
>> Which thereby makes a generic solution impossible. Omega translation
>>
>>> processing struggled with this mix of 'pure text', 'macro expansion',
>>> 'packages content' and it never worked out in complex situations. For me
>>> this is a pretty good reason for not adding any hard coded bidi (or foo
>>> or
>>> bar or whatever) behavior to core luatex but stick to either external
>>> libraries (preprocessing or whatever) and/or solutions written in lua
>>> that
>>> nicely interact with the macro packages concepts. (Well, that's the main
>>> reason for having lua as extension language in the first place).
>>>
>>
> I am feeling deja vu here ;-)
>
> We must all remember that luatex has a different philosophy from xetex
> etc. luatex provides the most basic, low-level, bi-directionality as
> perfectly as possible.
>
> OTOH, luatex is _not_ interested in deifying any particular paradigm of
> rules for processing bidi text. Compare with the Open Type engine: That's
> done by lua extensions. Similarly, bidi in mkiv will be done by lua
> extensions which can easily be modified and parameterized as needed.
>
> For example, I may want to use Arabic-numerals in a Persian-typesetting
> context or vice versa. Hardcoding the bidi algorithm makes that
> inconvenient. Also, the bidi algorithm is not perfect: it mixes the needs
> of an editor or verbatim mode with those of real life typography. These
> features should be flexible and capable of being turned on and off.
> Consider an Arabic paragraph that's all in Arabic except the first word in
> English. It makes no sense to force an LR par in that case.
>
> Sometimes you want to turn bidi features off, or at least deprecate them,
> in verbatim. See the features of SC Unipad -- perhaps the best
> implementation of the bidi algorithm -- for example.
>
> Parts of the bidi algorithm can be part of a solution to the overall
> question of bidi typography, but it makes more sense in the luatex
> philosophy to decouple that algorithm from the core and build a bidi
> paradigm -- or even paradigms in the plural -- than to hardcode one.
>
> For those who like the xetex paradigm, it's best to use xetex. xetex and
> luatex involve different philosophical approaches. Using lua, anyone
> interested can develop their own bidi engine on top of luatex. Similarly,
> if someone does not like the way mkiv does open type. it's just a matter
> of writing another OT engine in lua instead of recompiling luatex.
>
> Best wishes
> Idris
> --
> Professor Idris Samawi Hamid, Editor-in-Chief
> International Journal of Sh??? Studies
> Department of Philosophy
> Colorado State University
> Fort Collins, CO 80523
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://tug.org/pipermail/luatex/attachments/20110720/21cbbe5b/attachment-0001.html>

From khaledhosny at eglug.org  Tue Jul 19 20:06:00 2011
From: khaledhosny at eglug.org (Khaled Hosny)
Date: Tue, 19 Jul 2011 20:06:00 +0200
Subject: [luatex] Fribidi for LuaTeX
In-Reply-To: <op.vyvnbsutpw6hmh@ishamid-pc>
References: <CA+wm_c9pzn-0OijugCwYGTUJN48xVS2ymKt0gTD+P7+x_=pKnA@mail.gmail.com>
 <4E1C515C.3060701@elvenkind.com>
 <CA+wm_c8rXmKJHG9D=pqB9M=rtKX8VV6-ax4NHg1xndDMpggRzg@mail.gmail.com>
 <4E22AD4F.6050009@elvenkind.com> <m3r55oc1jm.fsf@jhcloos.com>
 <4E253BC1.3000202@wxs.nl>
 <CA+wm_c_mhtJ1aR=+3E3S8ZTRzYUaeOwCTvs91wknKNt8F01kvA@mail.gmail.com>
 <op.vyvmhuwqpw6hmh@ishamid-pc>
 <20110719173227.GA4956@khaled-laptop>
 <op.vyvnbsutpw6hmh@ishamid-pc>
Message-ID: <20110719180600.GA5200@khaled-laptop>

On Tue, Jul 19, 2011 at 11:39:18AM -0600, Idris Samawi Hamid ?????   ????? ???? wrote:
> On Tue, 19 Jul 2011 11:32:27 -0600, Khaled Hosny
> <khaledhosny at eglug.org> wrote:
> 
> >The algorithm actually has a dedicated rule of this use case:
> >  http://www.unicode.org/reports/tr9/#Higher-Level_Protocols
> 
> Sure. At the same time, these are exactly the kinds of rules we
> _don't_ want to deify.

I'm not deifying anything, but it is unfair to criticise the algorithm
for not considering certain use cases while it is actually considering
them!

> The people who write these things are not typographers. The bidi
> algorithm mixes text-editing needs with typesetting needs.

I haven't seen any evidence of this, no I see how this would be a bad
thing. Unicode BiDi algorithm have been implemented and deployed by
millions of users world wide, and its behaviour is what most people
expect, drifting from it too much is not a wise idea IMO and I can see
it making more problems than it solves.

> We have to examine bidi from a typography perspective, then integrate
> the parts of the algorithm that make sense in that context (no pun
> intended) at the lua-extension level.

Well, every time the BiDi issue is brought up, this examination (that
will fix some yet to be found problems) get mentioned, yet there are no
signs it is going to happen anytime soon. IMO an, allegedly, suboptimal
solution is better than a perfect one that will never happen.

Regards,
 Khaled

-- 
 Khaled Hosny
 Egyptian
 Arab

From ishamid at colostate.edu  Tue Jul 19 20:28:46 2011
From: ishamid at colostate.edu (=?utf-8?B?SWRyaXMgU2FtYXdpIEhhbWlkINin2K/YsdmK2LMgICDYs9mF2KfZiNmKIA==?= =?utf-8?B?2K3Yp9mF2K8=?=)
Date: Tue, 19 Jul 2011 12:28:46 -0600
Subject: [luatex] Fribidi for LuaTeX
In-Reply-To: <20110719180600.GA5200@khaled-laptop>
References: <CA+wm_c9pzn-0OijugCwYGTUJN48xVS2ymKt0gTD+P7+x_=pKnA@mail.gmail.com>
 <4E1C515C.3060701@elvenkind.com>
 <CA+wm_c8rXmKJHG9D=pqB9M=rtKX8VV6-ax4NHg1xndDMpggRzg@mail.gmail.com>
 <4E22AD4F.6050009@elvenkind.com> <m3r55oc1jm.fsf@jhcloos.com>
 <4E253BC1.3000202@wxs.nl>
 <CA+wm_c_mhtJ1aR=+3E3S8ZTRzYUaeOwCTvs91wknKNt8F01kvA@mail.gmail.com>
 <op.vyvmhuwqpw6hmh@ishamid-pc> <20110719173227.GA4956@khaled-laptop>
 <op.vyvnbsutpw6hmh@ishamid-pc> <20110719180600.GA5200@khaled-laptop>
Message-ID: <op.vyvpl8u9pw6hmh@ishamid-pc>

On Tue, 19 Jul 2011 12:06:00 -0600, Khaled Hosny <khaledhosny at eglug.org>  
wrote:

>> >The algorithm actually has a dedicated rule of this use case:
>> >  http://www.unicode.org/reports/tr9/#Higher-Level_Protocols
>>
>> Sure. At the same time, these are exactly the kinds of rules we
>> _don't_ want to deify.

> I'm not deifying anything, but it is unfair to criticise the algorithm
> for not considering certain use cases while it is actually considering
> them!

>> The people who write these things are not typographers. The bidi
>> algorithm mixes text-editing needs with typesetting needs.

> I haven't seen any evidence of this, no I see how this would be a bad
> thing. Unicode BiDi algorithm have been implemented and deployed by
> millions of users world wide, and its behaviour is what most people
> expect, drifting from it too much is not a wise idea IMO and I can see
> it making more problems than it solves.

===================
A higher-level protocol may use an entirely different algorithm that  
heuristically auto-detects the paragraph embedding level based on the  
paragraph text and its context. For example, it could base it on whether  
there are more RTL characters in the text than LTR. As another example,  
when the paragraph contains no strong characters, its direction could be  
determined by the levels of the paragraphs before and after.
===================

Vague, speculative, and whoever wrote that clearly is not a typographer  
but someone apparently interested in text-editors. For someone writing,  
eg, a multilingual critical edition this would create havoc.

Anyway, the only point was that these rules need not be hard-coded in the  
core of luatex, that's all.

Peace
-- 
Professor Idris Samawi Hamid, Editor-in-Chief
International Journal of Sh??? Studies
Department of Philosophy
Colorado State University
Fort Collins, CO 80523


From khaledhosny at eglug.org  Tue Jul 19 20:40:16 2011
From: khaledhosny at eglug.org (Khaled Hosny)
Date: Tue, 19 Jul 2011 20:40:16 +0200
Subject: [luatex] Fribidi for LuaTeX
In-Reply-To: <op.vyvpl8u9pw6hmh@ishamid-pc>
References: <CA+wm_c8rXmKJHG9D=pqB9M=rtKX8VV6-ax4NHg1xndDMpggRzg@mail.gmail.com>
 <4E22AD4F.6050009@elvenkind.com> <m3r55oc1jm.fsf@jhcloos.com>
 <4E253BC1.3000202@wxs.nl>
 <CA+wm_c_mhtJ1aR=+3E3S8ZTRzYUaeOwCTvs91wknKNt8F01kvA@mail.gmail.com>
 <op.vyvmhuwqpw6hmh@ishamid-pc>
 <20110719173227.GA4956@khaled-laptop>
 <op.vyvnbsutpw6hmh@ishamid-pc>
 <20110719180600.GA5200@khaled-laptop>
 <op.vyvpl8u9pw6hmh@ishamid-pc>
Message-ID: <20110719184016.GA5304@khaled-laptop>

On Tue, Jul 19, 2011 at 12:28:46PM -0600, Idris Samawi Hamid ?????   ????? ???? wrote:
> On Tue, 19 Jul 2011 12:06:00 -0600, Khaled Hosny
> <khaledhosny at eglug.org> wrote:
> 
> >>>The algorithm actually has a dedicated rule of this use case:
> >>>  http://www.unicode.org/reports/tr9/#Higher-Level_Protocols
> >>
> >>Sure. At the same time, these are exactly the kinds of rules we
> >>_don't_ want to deify.
> 
> >I'm not deifying anything, but it is unfair to criticise the algorithm
> >for not considering certain use cases while it is actually considering
> >them!
> 
> >>The people who write these things are not typographers. The bidi
> >>algorithm mixes text-editing needs with typesetting needs.
> 
> >I haven't seen any evidence of this, no I see how this would be a bad
> >thing. Unicode BiDi algorithm have been implemented and deployed by
> >millions of users world wide, and its behaviour is what most people
> >expect, drifting from it too much is not a wise idea IMO and I can see
> >it making more problems than it solves.
> 
> ===================
> A higher-level protocol may use an entirely different algorithm that
> heuristically auto-detects the paragraph embedding level based on
> the paragraph text and its context. For example, it could base it on
> whether there are more RTL characters in the text than LTR. As
> another example, when the paragraph contains no strong characters,
> its direction could be determined by the levels of the paragraphs
> before and after.
> ===================
> 
> Vague, speculative, and whoever wrote that clearly is not a
> typographer but someone apparently interested in text-editors. For
> someone writing, eg, a multilingual critical edition this would
> create havoc.

Those are mere hints; examples on what a higher protocol would do, not
part of the standard and you are in no way obliged to implement them.

> Anyway, the only point was that these rules need not be hard-coded
> in the core of luatex, that's all.

Agreed, though one can still write a core implementation that is
configurable, still, I don't see much benefit here over a pure lua
implementation.

Regards,
 Khaled

-- 
 Khaled Hosny
 Egyptian
 Arab

From khaledhosny at eglug.org  Tue Jul 19 21:07:22 2011
From: khaledhosny at eglug.org (Khaled Hosny)
Date: Tue, 19 Jul 2011 21:07:22 +0200
Subject: [luatex] Fribidi for LuaTeX
In-Reply-To: <4E1C515C.3060701@elvenkind.com>
References: <CA+wm_c9pzn-0OijugCwYGTUJN48xVS2ymKt0gTD+P7+x_=pKnA@mail.gmail.com>
 <4E1C515C.3060701@elvenkind.com>
Message-ID: <20110719190722.GB5304@khaled-laptop>

On Tue, Jul 12, 2011 at 03:51:24PM +0200, Taco Hoekwater wrote:
> 
> Hi,
> 
> Now that the Unicode BiDi algorithm implementation discussion
> seems to restart, it is a good time to ask the people involved
> to solve the non-trivial problem of adjusting the algorithm
> to cater for the inclusion of
> 
> * out-of-line node objects (\setbox, \box, \copy),

Each box would be treated as a single paragraph.

> * out-of-line tokens (like alignment templates and macro expansions),
> * vertical typesetting,
No idea about those two.

> * TeX grouping levels,

It can be used to simulate BiDi embedding, e.g: {latin ARABIC} would be
equivalent to [LRE]latin ARABIC[PDF] but this can lead to many undesired
effect, e.g. "ARABIC {\emp latin!}" get rendered as "latin! CIBARA"
while it should have been "!latin CIBARA", so in general it is better to
ignore TeX grouping or it least be configurable and off by default.

> * Interfering nodes (math, \special, \rule etc)

They should be given neutral bidi class so to inherit the directionality
of its surroundings, and the contents (if textual) be handled as
separate paragraphs. Math is kinda special and needs special work as
whether right-to-left math is needed or not.

Regards,
 Khaled

-- 
 Khaled Hosny
 Egyptian
 Arab

From ishamid at colostate.edu  Tue Jul 19 21:10:20 2011
From: ishamid at colostate.edu (=?utf-8?B?SWRyaXMgU2FtYXdpIEhhbWlkINin2K/YsdmK2LMgICDYs9mF2KfZiNmKIA==?= =?utf-8?B?2K3Yp9mF2K8=?=)
Date: Tue, 19 Jul 2011 13:10:20 -0600
Subject: [luatex] Fribidi for LuaTeX
In-Reply-To: <20110719184016.GA5304@khaled-laptop>
References: <CA+wm_c8rXmKJHG9D=pqB9M=rtKX8VV6-ax4NHg1xndDMpggRzg@mail.gmail.com>
 <4E22AD4F.6050009@elvenkind.com> <m3r55oc1jm.fsf@jhcloos.com>
 <4E253BC1.3000202@wxs.nl>
 <CA+wm_c_mhtJ1aR=+3E3S8ZTRzYUaeOwCTvs91wknKNt8F01kvA@mail.gmail.com>
 <op.vyvmhuwqpw6hmh@ishamid-pc> <20110719173227.GA4956@khaled-laptop>
 <op.vyvnbsutpw6hmh@ishamid-pc> <20110719180600.GA5200@khaled-laptop>
 <op.vyvpl8u9pw6hmh@ishamid-pc> <20110719184016.GA5304@khaled-laptop>
Message-ID: <op.vyvrjigbpw6hmh@ishamid-pc>

On Tue, 19 Jul 2011 11:32:27 -0600, Khaled Hosny <khaledhosny at eglug.org>  
wrote:

> The algorithm actually has a dedicated rule of this use case:
>   http://www.unicode.org/reports/tr9/#Higher-Level_Protocols

On Tue, 19 Jul 2011 12:40:16 -0600, Khaled Hosny <khaledhosny at eglug.org>  
wrote:

> Those are mere hints; examples on what a higher protocol would do, not
> part of the standard and you are in no way obliged to implement them.

QED ;-)

Peace
-- 
Professor Idris Samawi Hamid, Editor-in-Chief
International Journal of Sh??? Studies
Department of Philosophy
Colorado State University
Fort Collins, CO 80523


From pragma at wxs.nl  Tue Jul 19 21:41:07 2011
From: pragma at wxs.nl (Hans Hagen)
Date: Tue, 19 Jul 2011 21:41:07 +0200
Subject: [luatex] Fribidi for LuaTeX
In-Reply-To: <CA+wm_c9=Z4bfeRpFRZ=Rsj_9hyzoFwJGEejD4N8Wu58qaKLsoA@mail.gmail.com>
References: <CA+wm_c9pzn-0OijugCwYGTUJN48xVS2ymKt0gTD+P7+x_=pKnA@mail.gmail.com>
 <4E1C515C.3060701@elvenkind.com>
 <CA+wm_c8rXmKJHG9D=pqB9M=rtKX8VV6-ax4NHg1xndDMpggRzg@mail.gmail.com>
 <4E22AD4F.6050009@elvenkind.com> <m3r55oc1jm.fsf@jhcloos.com>
 <4E253BC1.3000202@wxs.nl>
 <CA+wm_c_mhtJ1aR=+3E3S8ZTRzYUaeOwCTvs91wknKNt8F01kvA@mail.gmail.com>
 <op.vyvmhuwqpw6hmh@ishamid-pc>
 <CA+wm_c9=Z4bfeRpFRZ=Rsj_9hyzoFwJGEejD4N8Wu58qaKLsoA@mail.gmail.com>
Message-ID: <4E25DDD3.2020503@wxs.nl>

On 19-7-2011 7:51, Vafa Khalighi wrote:
> Hi Idris
>
> Agreed. and if you look ath my previous questions, I actually asked if it is
> to be implemented in the luatex engine or in the macro level but I got no

There is no need to implement it in the luatex engine as one can hook in 
code at all kind of moments (reading files, processing tokens, handling 
nodes) and no hard codes solution will satisfy each user and can only 
lead to weird hooks into and control over such a mechanism. The only 
thing luatex can do is to provide access to internals (which it does) 
and either library or lua code can do it's work. So, one can provide 
unicode bidi support to the extend needed.

So the answer is: at the macro level (which includes the lua level).

Hans



-----------------------------------------------------------------
                                           Hans Hagen | PRAGMA ADE
               Ridderstraat 27 | 8061 GH Hasselt | The Netherlands
     tel: 038 477 53 69 | voip: 087 875 68 74 | www.pragma-ade.com
                                              | www.pragma-pod.nl
-----------------------------------------------------------------

From khaledhosny at eglug.org  Tue Jul 19 22:59:05 2011
From: khaledhosny at eglug.org (Khaled Hosny)
Date: Tue, 19 Jul 2011 22:59:05 +0200
Subject: [luatex] Fribidi for LuaTeX
In-Reply-To: <op.vyvrjigbpw6hmh@ishamid-pc>
References: <m3r55oc1jm.fsf@jhcloos.com> <4E253BC1.3000202@wxs.nl>
 <CA+wm_c_mhtJ1aR=+3E3S8ZTRzYUaeOwCTvs91wknKNt8F01kvA@mail.gmail.com>
 <op.vyvmhuwqpw6hmh@ishamid-pc>
 <20110719173227.GA4956@khaled-laptop>
 <op.vyvnbsutpw6hmh@ishamid-pc>
 <20110719180600.GA5200@khaled-laptop>
 <op.vyvpl8u9pw6hmh@ishamid-pc>
 <20110719184016.GA5304@khaled-laptop>
 <op.vyvrjigbpw6hmh@ishamid-pc>
Message-ID: <20110719205905.GA5760@khaled-laptop>

On Tue, Jul 19, 2011 at 01:10:20PM -0600, Idris Samawi Hamid ?????   ????? ???? wrote:
> On Tue, 19 Jul 2011 11:32:27 -0600, Khaled Hosny
> <khaledhosny at eglug.org> wrote:
> 
> >The algorithm actually has a dedicated rule of this use case:
> >  http://www.unicode.org/reports/tr9/#Higher-Level_Protocols
> 
> On Tue, 19 Jul 2011 12:40:16 -0600, Khaled Hosny
> <khaledhosny at eglug.org> wrote:
> 
> >Those are mere hints; examples on what a higher protocol would do, not
> >part of the standard and you are in no way obliged to implement them.

Well the rule is that a higher level protocol can be used to determine
the paragraph level, the bulleted items are examples of such higher
level protocols. I see no contradiction between what I said.

Regards,
 Khaled

-- 
 Khaled Hosny
 Egyptian
 Arab

From cloos at jhcloos.com  Wed Jul 20 02:21:06 2011
From: cloos at jhcloos.com (James Cloos)
Date: Tue, 19 Jul 2011 20:21:06 -0400
Subject: [luatex] Fribidi for LuaTeX
In-Reply-To: <op.vyvmhuwqpw6hmh@ishamid-pc> ("Idris Samawi Hamid
 =?utf-8?B?2KfYr9ix2YrYsyDYs9mF2KfZiNmKCdit2KfZhdivIidz?= message of "Tue,
 19 Jul 2011 11:21:20 -0600")
References: <CA+wm_c9pzn-0OijugCwYGTUJN48xVS2ymKt0gTD+P7+x_=pKnA@mail.gmail.com>
 <4E1C515C.3060701@elvenkind.com>
 <CA+wm_c8rXmKJHG9D=pqB9M=rtKX8VV6-ax4NHg1xndDMpggRzg@mail.gmail.com>
 <4E22AD4F.6050009@elvenkind.com> <m3r55oc1jm.fsf@jhcloos.com>
 <4E253BC1.3000202@wxs.nl>
 <CA+wm_c_mhtJ1aR=+3E3S8ZTRzYUaeOwCTvs91wknKNt8F01kvA@mail.gmail.com>
 <op.vyvmhuwqpw6hmh@ishamid-pc>
Message-ID: <m3pql5yf79.fsf@jhcloos.com>

>>>>> "ISH" == Idris Samawi Hamid ????? ????? ???? <ishamid at colostate.edu> writes:

ISH> We must all remember that luatex has a different philosophy from xetex
ISH> etc. luatex provides the most basic, low-level, bi-dir-ectionality as
ISH> perfectly as possible.

Just to avoid any misunderstandings, my expectation was not that luatex
should use fribidi?s high-level api directly, but rather that it could
provide a lua binding to fribidi?s whole API.  Lua code could then do
whatever bidi users need/want and still take advantage of the speed
benefits of compiled code.

My apologies for any confusion I may have generated by presuming that
that would go without saying.

Laptop and larger systems might be fast enough that compiled vs
interpreted may not make a difference, but I?d like to be able to
render ??? real-time on tablets and the like.

-JimC
-- 
James Cloos <cloos at jhcloos.com>         OpenPGP: 1024D/ED7DAEA6

From johanneswilm at gmail.com  Wed Jul 20 06:57:08 2011
From: johanneswilm at gmail.com (Johannes Wilm)
Date: Tue, 19 Jul 2011 21:57:08 -0700
Subject: [luatex] setupbackend in lualatex?
Message-ID: <CABkgm-QDtUyJB_iJPcY5_9maDO6-6e2yCHw1QuMKZMUMtm53bw@mail.gmail.com>

Hey,
I have had issues with converting latex to epub/html/mobipocket for years. I
started using lualatex some months ago and it works quite well for all my
other purposes.

Today I then stumbled over the \setupbackend which is available in Context
and which allows for HTML/epub to be produced easily by using some lua code.
Now as I understand it, given that lualatex uses the same binary and hat the
conversion likely happens by first letting the binary read the entire DOM
and then exporting it, it seems that the same scripts really should work for
lualatex as well, right? It's just the definition of \setupbackend that is
missing, right? Does anyone know if that is available from somewhere?

http://randomdeterminism.wordpress.com/2011/05/29/html-export/

http://wiki.contextgarden.net/epub#Mtxrun

A pointer in the right direction would be greatly appreciated!

-- 
Johannes Wilm
http://www.johanneswilm.org
tel US: +1 (520) 399 8880
tel NO: +47 94109013
tel DE: +49 176 370 18082
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://tug.org/pipermail/luatex/attachments/20110719/7abb0b1d/attachment.html>

From luigi.scarso at gmail.com  Wed Jul 20 07:18:58 2011
From: luigi.scarso at gmail.com (luigi scarso)
Date: Wed, 20 Jul 2011 07:18:58 +0200
Subject: [luatex] Fribidi for LuaTeX
In-Reply-To: <m3pql5yf79.fsf@jhcloos.com>
References: <CA+wm_c9pzn-0OijugCwYGTUJN48xVS2ymKt0gTD+P7+x_=pKnA@mail.gmail.com>
 <4E1C515C.3060701@elvenkind.com>
 <CA+wm_c8rXmKJHG9D=pqB9M=rtKX8VV6-ax4NHg1xndDMpggRzg@mail.gmail.com>
 <4E22AD4F.6050009@elvenkind.com> <m3r55oc1jm.fsf@jhcloos.com>
 <4E253BC1.3000202@wxs.nl>
 <CA+wm_c_mhtJ1aR=+3E3S8ZTRzYUaeOwCTvs91wknKNt8F01kvA@mail.gmail.com>
 <op.vyvmhuwqpw6hmh@ishamid-pc> <m3pql5yf79.fsf@jhcloos.com>
Message-ID: <CAG5iGsChw72tbv9FTCRgGL73pBSgnvZ2ojGBm6Yp7ovxc-nSAw@mail.gmail.com>

2011/7/20 James Cloos <cloos at jhcloos.com>:
>>>>>> "ISH" == Idris Samawi Hamid ????? ????? ???? <ishamid at colostate.edu> writes:
>
> ISH> We must all remember that luatex has a different philosophy from xetex
> ISH> etc. luatex provides the most basic, low-level, bi-dir-ectionality as
> ISH> perfectly as possible.
>
> Just to avoid any misunderstandings, my expectation was not that luatex
> should use fribidi?s high-level api directly, but rather that it could
> provide a lua binding to fribidi?s whole API. ?Lua code could then do
> whatever bidi users need/want and still take advantage of the speed
> benefits of compiled code.
A week ago I've posted a binding based on swig.

-- 
luigi


From nomosnomos at gmail.com  Wed Jul 20 08:43:12 2011
From: nomosnomos at gmail.com (Dohyun Kim)
Date: Wed, 20 Jul 2011 15:43:12 +0900
Subject: [luatex] CJK vertical typesetting
In-Reply-To: <20110719120847.269880@gmx.net>
References: <CAFzmAm3C3PFWZeaiMER4ET3pkH6K=DjxiJAwBe89h7xHqoiTEw@mail.gmail.com>
 <4E1E896D.1020508@elvenkind.com>
 <CAFzmAm3QKunioc8iFLH3DV4pNnD=fPffFKdM=pj5U_14oA_vew@mail.gmail.com>
 <20110719065717.278450@gmx.net>
 <CAFzmAm2MLK4ndV7KKvrdjXWr-h0QDn2L-46=t_asHcYULAyfgQ@mail.gmail.com>
 <20110719120847.269880@gmx.net>
Message-ID: <CAFzmAm3_Lj5C5fMQSQgMCfHvbU9Q_AQo2QDfofqGqFBkqtAF8w@mail.gmail.com>

2011/7/19 Hartmut Henkel <hartmut_henkel at gmx.de>:
>> The problem seems to occur because of the strange behavior
>> of boxes under RTT dir. ?Take a look at the following code;
>> is this intended behavior?
>>
>> \pagedir RTT \bodydir RTT
>> \offinterlineskip
>> \setbox0=\hbox{} \ht0=5pt \dp0=5pt
>> \setbox2=\vbox{\copy0\box0}
>> \showthe\ht2 \showthe\dp2 % prints 15pt, 5pt ?(ok)
>> \setbox4=\hbox{\box2}
>> \showthe\ht4 \showthe\dp4 % prints 10pt, 10pt (??)
>> \bye
>
> it's so by design,the \vbox is "vertically" centered around the baseline of the enclosing \hbox.
>
> Luatex inherited this behavior (no idea, if this really is a good thing, the (ht + dp) / 2 shift adjustment in the code looks a bit arbitrary imho, and there hasn't been much RTT activity yet).
>

Then it would be better for me to utilize virtual font mechanism
instead of relying on RTT mode.  The procedure would be as follows.

1.  Rotate glyphs by 90 degree and move it to the origin
2.  Assign character width = vwidth
3.  Assign character height and depth according to the bounding box
4.  Rotate the entire page or a box by -90 degree

This is an old-fashioned way to do vertical typesetting with TeX; but
it surely works as far as the font provides vertical metrics and some
vertical glyphs.

Thanks anyway.
Regards,
-- 
Dohyun Kim
College of Law, Dongguk University
Seoul, Republic of Korea


From luatex at nililand.de  Wed Jul 20 11:22:15 2011
From: luatex at nililand.de (Ulrike Fischer)
Date: Wed, 20 Jul 2011 11:22:15 +0200
Subject: [luatex] setupbackend in lualatex?
References: <CABkgm-QDtUyJB_iJPcY5_9maDO6-6e2yCHw1QuMKZMUMtm53bw@mail.gmail.com>
Message-ID: <1asrnb5n51mdh$.dlg@nililand.de>

Am Tue, 19 Jul 2011 21:57:08 -0700 schrieb Johannes Wilm:

> Hey,
> I have had issues with converting latex to epub/html/mobipocket for years. I
> started using lualatex some months ago and it works quite well for all my
> other purposes.
> 
> Today I then stumbled over the \setupbackend which is available in Context
> and which allows for HTML/epub to be produced easily by using some lua code.
> Now as I understand it, given that lualatex uses the same binary and hat the
> conversion likely happens by first letting the binary read the entire DOM
> and then exporting it, it seems that the same scripts really should work for
> lualatex as well, right? 

Theoretically: yes.

> It's just the definition of \setupbackend that is
> missing, right? 

You will need not only the definition of \setupbackend but also
quite a lot of internal context definitions used by \setupbackend.

> Does anyone know if that is available from somewhere?

In a current context installation. The easiest is to install the
minimals. http://wiki.contextgarden.net/ConTeXt_Minimals

The definition of the command itself is in
\tex\context\base\back-ini.mkiv but you will probably need to study
the other back-*-files too (and quite a lot of core context files).


-- 
Ulrike Fischer 


From patrick at gundla.ch  Wed Jul 20 11:31:48 2011
From: patrick at gundla.ch (Patrick Gundlach)
Date: Wed, 20 Jul 2011 11:31:48 +0200
Subject: [luatex] setupbackend in lualatex?
In-Reply-To: <1asrnb5n51mdh$.dlg@nililand.de>
References: <CABkgm-QDtUyJB_iJPcY5_9maDO6-6e2yCHw1QuMKZMUMtm53bw@mail.gmail.com>
 <1asrnb5n51mdh$.dlg@nililand.de>
Message-ID: <00405F38-DD33-4609-9633-7E0F728B3200@gundla.ch>


Am 20.07.2011 um 11:22 schrieb Ulrike Fischer:

> Am Tue, 19 Jul 2011 21:57:08 -0700 schrieb Johannes Wilm:
> 
>> Hey,
>> I have had issues with converting latex to epub/html/mobipocket for years. I
>> started using lualatex some months ago and it works quite well for all my
>> other purposes.
>> 
>> Today I then stumbled over the \setupbackend which is available in Context
>> and which allows for HTML/epub to be produced easily by using some lua code.
>> Now as I understand it, given that lualatex uses the same binary and hat the
>> conversion likely happens by first letting the binary read the entire DOM
>> and then exporting it, it seems that the same scripts really should work for
>> lualatex as well, right? 
> 
> Theoretically: yes.

There is a little bit more to it, though it can be simulated otherwise. For example with ConTeXt you have more structured sectioning commands. I don't remember what it was but something like

\startsection
...
\stopsection

where in LaTeX you have \section{...}, but when does the section end? Is it always clear?


Patrick



From luigi.scarso at gmail.com  Wed Jul 20 11:36:11 2011
From: luigi.scarso at gmail.com (luigi scarso)
Date: Wed, 20 Jul 2011 11:36:11 +0200
Subject: [luatex] setupbackend in lualatex?
In-Reply-To: <00405F38-DD33-4609-9633-7E0F728B3200@gundla.ch>
References: <CABkgm-QDtUyJB_iJPcY5_9maDO6-6e2yCHw1QuMKZMUMtm53bw@mail.gmail.com>
 <1asrnb5n51mdh$.dlg@nililand.de>
 <00405F38-DD33-4609-9633-7E0F728B3200@gundla.ch>
Message-ID: <CAG5iGsAbrfL3gAq+5BB6MKyGh3XjfBd8VL6xZ+bUMsmKYXyyXQ@mail.gmail.com>

On Wed, Jul 20, 2011 at 11:31 AM, Patrick Gundlach <patrick at gundla.ch> wrote:
>
> Am 20.07.2011 um 11:22 schrieb Ulrike Fischer:
>
>> Am Tue, 19 Jul 2011 21:57:08 -0700 schrieb Johannes Wilm:
>>
>>> Hey,
>>> I have had issues with converting latex to epub/html/mobipocket for years. I
>>> started using lualatex some months ago and it works quite well for all my
>>> other purposes.
>>>
>>> Today I then stumbled over the \setupbackend which is available in Context
>>> and which allows for HTML/epub to be produced easily by using some lua code.
>>> Now as I understand it, given that lualatex uses the same binary and hat the
>>> conversion likely happens by first letting the binary read the entire DOM
>>> and then exporting it, it seems that the same scripts really should work for
>>> lualatex as well, right?
>>
>> Theoretically: yes.
>
> There is a little bit more to it, though it can be simulated otherwise. For example with ConTeXt you have more structured sectioning commands. I don't remember what it was but something like
>
> \startsection
> ...
> \stopsection
>
> where in LaTeX you have \section{...}, but when does the section end? Is it always clear?
It ends jus tbefore the next hierarchically higher level sectioning command

-- 
luigi

From heiko.oberdiek at googlemail.com  Wed Jul 20 11:51:40 2011
From: heiko.oberdiek at googlemail.com (Heiko Oberdiek)
Date: Wed, 20 Jul 2011 11:51:40 +0200
Subject: [luatex] setupbackend in lualatex?
In-Reply-To: <CAG5iGsAbrfL3gAq+5BB6MKyGh3XjfBd8VL6xZ+bUMsmKYXyyXQ@mail.gmail.com>
References: <CABkgm-QDtUyJB_iJPcY5_9maDO6-6e2yCHw1QuMKZMUMtm53bw@mail.gmail.com>
 <1asrnb5n51mdh$.dlg@nililand.de>
 <00405F38-DD33-4609-9633-7E0F728B3200@gundla.ch>
 <CAG5iGsAbrfL3gAq+5BB6MKyGh3XjfBd8VL6xZ+bUMsmKYXyyXQ@mail.gmail.com>
Message-ID: <20110720095140.GA16831@oberdiek.my-fqdn.de>

On Wed, Jul 20, 2011 at 11:36:11AM +0200, luigi scarso wrote:

> On Wed, Jul 20, 2011 at 11:31 AM, Patrick Gundlach <patrick at gundla.ch> wrote:
> >
> > There is a little bit more to it, though it can be simulated otherwise.
> > For example with ConTeXt you have more structured sectioning commands. I
> > don't remember what it was but something like
> >
> > \startsection
> > ...
> > \stopsection
> >
> > where in LaTeX you have \section{...}, but when does the section end? Is
> > it always clear?
>
> It ends jus tbefore the next hierarchically higher level sectioning command

That's not so clear.

I have already seen:

\part
  \chapter
\part
  \chapter
\chapter

(The last chapter does not belong to the last \part, e.g.
bibliography, index, ...)

Yours sincerely
  Heiko Oberdiek

From Robin.Fairbairns at cl.cam.ac.uk  Wed Jul 20 11:51:01 2011
From: Robin.Fairbairns at cl.cam.ac.uk (Robin Fairbairns)
Date: Wed, 20 Jul 2011 10:51:01 +0100
Subject: [luatex] setupbackend in lualatex?
In-Reply-To: Your message of Wed, 20 Jul 2011 11:36:11 +0200.
 <CAG5iGsAbrfL3gAq+5BB6MKyGh3XjfBd8VL6xZ+bUMsmKYXyyXQ@mail.gmail.com>
Message-ID: <4861.1311155461@cl.cam.ac.uk>

luigi scarso <luigi.scarso at gmail.com> wrote:

> On Wed, Jul 20, 2011 at 11:31 AM, Patrick Gundlach <patrick at gundla.ch> wrote:
> >
> > Am 20.07.2011 um 11:22 schrieb Ulrike Fischer:
> >
> > There is a little bit more to it, though it can be simulated
> > otherwise. For example with ConTeXt you have more structured
> > sectioning commands. I don't remember what it was but something like
> >
> > \startsection
> > ...
> > \stopsection
> >
> > where in LaTeX you have \section{...}, but when does the section
> end? Is it always clear?
>
> It ends just before the next hierarchically higher level sectioning command

there was a proposal, once, to have section _environments_ (if you look
back on c.t.t on google gropes you might even find it).

but istm that in this (as in other things) context has been better
thought through, in the context(oops) of other media -- comes of being
later on the scene, i assume.  i've stumbled on the issue recently, in
the scripts for the tex faq; it's tiresome to create non-default layout
when you're not keeping a handle on the semantics of what you're
translating.  the scripts (processing latex source), were originally
totally context insensitive; i've been steadily adding things that
change that, but every one such adds another ornament to an already
tottering edifice.

From khaledhosny at eglug.org  Wed Jul 20 11:57:20 2011
From: khaledhosny at eglug.org (Khaled Hosny)
Date: Wed, 20 Jul 2011 11:57:20 +0200
Subject: [luatex] setupbackend in lualatex?
In-Reply-To: <00405F38-DD33-4609-9633-7E0F728B3200@gundla.ch>
References: <CABkgm-QDtUyJB_iJPcY5_9maDO6-6e2yCHw1QuMKZMUMtm53bw@mail.gmail.com>
 <1asrnb5n51mdh$.dlg@nililand.de>
 <00405F38-DD33-4609-9633-7E0F728B3200@gundla.ch>
Message-ID: <20110720095720.GA1837@khaled-laptop>

On Wed, Jul 20, 2011 at 11:31:48AM +0200, Patrick Gundlach wrote:
> 
> Am 20.07.2011 um 11:22 schrieb Ulrike Fischer:
> 
> > Am Tue, 19 Jul 2011 21:57:08 -0700 schrieb Johannes Wilm:
> > 
> >> Hey,
> >> I have had issues with converting latex to epub/html/mobipocket for years. I
> >> started using lualatex some months ago and it works quite well for all my
> >> other purposes.
> >> 
> >> Today I then stumbled over the \setupbackend which is available in Context
> >> and which allows for HTML/epub to be produced easily by using some lua code.
> >> Now as I understand it, given that lualatex uses the same binary and hat the
> >> conversion likely happens by first letting the binary read the entire DOM
> >> and then exporting it, it seems that the same scripts really should work for
> >> lualatex as well, right? 
> > 
> > Theoretically: yes.
> 
> There is a little bit more to it, though it can be simulated
> otherwise. For example with ConTeXt you have more structured
> sectioning commands. I don't remember what it was but something like
> 
> \startsection
> ...
> \stopsection
> 
> where in LaTeX you have \section{...}, but when does the section end?
> Is it always clear?

Simple, define a \begin{section}...\end{section} etc. and tells the
users who want the export feature to use it.

Regards,
 Khaled

-- 
 Khaled Hosny
 Egyptian
 Arab

From luigi.scarso at gmail.com  Wed Jul 20 12:04:13 2011
From: luigi.scarso at gmail.com (luigi scarso)
Date: Wed, 20 Jul 2011 12:04:13 +0200
Subject: [luatex] setupbackend in lualatex?
In-Reply-To: <20110720095140.GA16831@oberdiek.my-fqdn.de>
References: <CABkgm-QDtUyJB_iJPcY5_9maDO6-6e2yCHw1QuMKZMUMtm53bw@mail.gmail.com>
 <1asrnb5n51mdh$.dlg@nililand.de>
 <00405F38-DD33-4609-9633-7E0F728B3200@gundla.ch>
 <CAG5iGsAbrfL3gAq+5BB6MKyGh3XjfBd8VL6xZ+bUMsmKYXyyXQ@mail.gmail.com>
 <20110720095140.GA16831@oberdiek.my-fqdn.de>
Message-ID: <CAG5iGsA_Qn=a4Lhh5GciFQrqSau0UsK6uM29su5Bbx0AH=682A@mail.gmail.com>

On Wed, Jul 20, 2011 at 11:51 AM, Heiko Oberdiek
<heiko.oberdiek at googlemail.com> wrote:
> On Wed, Jul 20, 2011 at 11:36:11AM +0200, luigi scarso wrote:
>
>> On Wed, Jul 20, 2011 at 11:31 AM, Patrick Gundlach <patrick at gundla.ch> wrote:
>> >
>> > There is a little bit more to it, though it can be simulated otherwise.
>> > For example with ConTeXt you have more structured sectioning commands. I
>> > don't remember what it was but something like
>> >
>> > \startsection
>> > ...
>> > \stopsection
>> >
>> > where in LaTeX you have \section{...}, but when does the section end? Is
>> > it always clear?
>>
>> It ends jus tbefore the next hierarchically higher level sectioning command
>
> That's not so clear.
>
> I have already seen:
>
> \part
> ?\chapter
> \part
> ?\chapter
> \chapter
>
> (The last chapter does not belong to the last \part, e.g.
> bibliography, index, ...)
As it appears, yes, it belongs, if we exclude the indentation given by
the spaces.
Maybe we need a clear definition of "hierarchically higher level
sectioning command" .

-- 
luigi


From mail at johanneswilm.org  Wed Jul 20 12:41:43 2011
From: mail at johanneswilm.org (Johannes Wilm)
Date: Wed, 20 Jul 2011 03:41:43 -0700
Subject: [luatex] setupbackend in lualatex?
In-Reply-To: <00405F38-DD33-4609-9633-7E0F728B3200@gundla.ch>
References: <CABkgm-QDtUyJB_iJPcY5_9maDO6-6e2yCHw1QuMKZMUMtm53bw@mail.gmail.com>
 <1asrnb5n51mdh$.dlg@nililand.de>
 <00405F38-DD33-4609-9633-7E0F728B3200@gundla.ch>
Message-ID: <CABkgm-RNS24mTaYPVOiQto0CkcFFbRFAHxes14cm4-wp2XRsgA@mail.gmail.com>

On Wed, Jul 20, 2011 at 2:31 AM, Patrick Gundlach <patrick at gundla.ch> wrote:

>
> Am 20.07.2011 um 11:22 schrieb Ulrike Fischer:
>
> > Am Tue, 19 Jul 2011 21:57:08 -0700 schrieb Johannes Wilm:
> >
> >> Hey,
> >> I have had issues with converting latex to epub/html/mobipocket for
> years. I
> >> started using lualatex some months ago and it works quite well for all
> my
> >> other purposes.
> >>
> >> Today I then stumbled over the \setupbackend which is available in
> Context
> >> and which allows for HTML/epub to be produced easily by using some lua
> code.
> >> Now as I understand it, given that lualatex uses the same binary and hat
> the
> >> conversion likely happens by first letting the binary read the entire
> DOM
> >> and then exporting it, it seems that the same scripts really should work
> for
> >> lualatex as well, right?
> >
> > Theoretically: yes.
>
> There is a little bit more to it, though it can be simulated otherwise. For
> example with ConTeXt you have more structured sectioning commands. I don't
> remember what it was but something like
>
> \startsection
> ...
> \stopsection
>
> where in LaTeX you have \section{...}, but when does the section end? Is it
> always clear?
>

So you are saying that the binary, after reading a latex file, isn't quite
aware of the DOM-structure of the file, while after reading a Context-file
it is?

It seems that this information is less needed when building an HTML-file
instead of a PDF. I mean, it needs to do something like chapter-heading ->
H1, but after that it couldn't care less about whether or not that chapter
ends.

I will look at the sources you mentioned.

-- 
Johannes Wilm
http://www.johanneswilm.org
tel: +1 (520) 399 8880
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://tug.org/pipermail/luatex/attachments/20110720/f0c18278/attachment.html>

From luigi.scarso at gmail.com  Wed Jul 20 13:16:11 2011
From: luigi.scarso at gmail.com (luigi scarso)
Date: Wed, 20 Jul 2011 13:16:11 +0200
Subject: [luatex] setupbackend in lualatex?
In-Reply-To: <CABkgm-RNS24mTaYPVOiQto0CkcFFbRFAHxes14cm4-wp2XRsgA@mail.gmail.com>
References: <CABkgm-QDtUyJB_iJPcY5_9maDO6-6e2yCHw1QuMKZMUMtm53bw@mail.gmail.com>
 <1asrnb5n51mdh$.dlg@nililand.de>
 <00405F38-DD33-4609-9633-7E0F728B3200@gundla.ch>
 <CABkgm-RNS24mTaYPVOiQto0CkcFFbRFAHxes14cm4-wp2XRsgA@mail.gmail.com>
Message-ID: <CAG5iGsA8ttbPaCm8o5hEQAaczvX_nntqL9H7LX8N+kmTuunTKw@mail.gmail.com>

On Wed, Jul 20, 2011 at 12:41 PM, Johannes Wilm <mail at johanneswilm.org> wrote:
>
>
> On Wed, Jul 20, 2011 at 2:31 AM, Patrick Gundlach <patrick at gundla.ch> wrote:
>>
>> Am 20.07.2011 um 11:22 schrieb Ulrike Fischer:
>>
>> > Am Tue, 19 Jul 2011 21:57:08 -0700 schrieb Johannes Wilm:
>> >
>> >> Hey,
>> >> I have had issues with converting latex to epub/html/mobipocket for
>> >> years. I
>> >> started using lualatex some months ago and it works quite well for all
>> >> my
>> >> other purposes.
>> >>
>> >> Today I then stumbled over the \setupbackend which is available in
>> >> Context
>> >> and which allows for HTML/epub to be produced easily by using some lua
>> >> code.
>> >> Now as I understand it, given that lualatex uses the same binary and
>> >> hat the
>> >> conversion likely happens by first letting the binary read the entire
>> >> DOM
>> >> and then exporting it, it seems that the same scripts really should
>> >> work for
>> >> lualatex as well, right?
>> >
>> > Theoretically: yes.
>>
>> There is a little bit more to it, though it can be simulated otherwise.
>> For example with ConTeXt you have more structured sectioning commands. I
>> don't remember what it was but something like
>>
>> \startsection
>> ...
>> \stopsection
>>
>> where in LaTeX you have \section{...}, but when does the section end? Is
>> it always clear?
>
> So you are saying that the binary, after reading a latex file, isn't quite
> aware of the DOM-structure of the file, while after reading a Context-file
> it is?
ConTeXt MKIV  has facility to make pdf/a files , which are tagged pdf
(i.e. the pdf has a sort of DOM inside).


-- 
luigi

From taco at elvenkind.com  Wed Jul 20 13:18:59 2011
From: taco at elvenkind.com (Taco Hoekwater)
Date: Wed, 20 Jul 2011 13:18:59 +0200
Subject: [luatex] setupbackend in lualatex?
In-Reply-To: <CABkgm-RNS24mTaYPVOiQto0CkcFFbRFAHxes14cm4-wp2XRsgA@mail.gmail.com>
References: <CABkgm-QDtUyJB_iJPcY5_9maDO6-6e2yCHw1QuMKZMUMtm53bw@mail.gmail.com>
 <1asrnb5n51mdh$.dlg@nililand.de>
 <00405F38-DD33-4609-9633-7E0F728B3200@gundla.ch>
 <CABkgm-RNS24mTaYPVOiQto0CkcFFbRFAHxes14cm4-wp2XRsgA@mail.gmail.com>
Message-ID: <4E26B9A3.5000006@elvenkind.com>



On 07/20/11 12:41, Johannes Wilm wrote:
> 
> 
> So you are saying that the binary, after reading a latex file, isn't
> quite aware of the DOM-structure of the file, while after reading a
> Context-file it is? 

No.

In general, there is no DOM available (ConTeXt has a streaming
model just like other TeX formats), and that is why \stopsection is
desired. There only is a definite DOM for certain sub-parts of a
document, like tabular material and formulas.

Best wishes,
Taco

From mojca.miklavec.lists at gmail.com  Wed Jul 20 13:19:22 2011
From: mojca.miklavec.lists at gmail.com (Mojca Miklavec)
Date: Wed, 20 Jul 2011 13:19:22 +0200
Subject: [luatex] setupbackend in lualatex?
In-Reply-To: <CABkgm-RNS24mTaYPVOiQto0CkcFFbRFAHxes14cm4-wp2XRsgA@mail.gmail.com>
References: <CABkgm-QDtUyJB_iJPcY5_9maDO6-6e2yCHw1QuMKZMUMtm53bw@mail.gmail.com>
 <1asrnb5n51mdh$.dlg@nililand.de>
 <00405F38-DD33-4609-9633-7E0F728B3200@gundla.ch>
 <CABkgm-RNS24mTaYPVOiQto0CkcFFbRFAHxes14cm4-wp2XRsgA@mail.gmail.com>
Message-ID: <CALBOmsYaQOMatn7GOJtzbJvROnUH11GJF9_Ear81BeFjxh93Lg@mail.gmail.com>

On Wed, Jul 20, 2011 at 12:41, Johannes Wilm wrote:
>
> So you are saying that the binary, after reading a latex file, isn't quite
> aware of the DOM-structure of the file, while after reading a Context-file
> it is?

If you want to build the DOM structure, you need to know exactly what
each command has to do. You need to know that \startformula should
start <mathml>, you need to know that \bf starts <b>, ... In LaTeX
this information is missing. LuaTeX engine doesn't know that \bf
should switch to bold. The engine only knows that it needs to switch
to a different font.

If you take a look at what tex4ht does: it redefines almost every
single LaTeX command and creates a special mark in dvi file, so that
it knows how to create html or odt file out of it.

ConTeXt does a very similar thing, except that it has that mechanism
already built into relevant commands. If that information is missing
in LaTeX, it won't help you to import just the \setupbackend part.
Similar - since tex4ht didn't do as heavy redefinitions of ConTeXt
commands as for LaTeX, it is nearly useless, even though it has
exactly the same potential.

Mojca

From arthur.reutenauer at normalesup.org  Wed Jul 20 13:24:15 2011
From: arthur.reutenauer at normalesup.org (Arthur Reutenauer)
Date: Wed, 20 Jul 2011 12:24:15 +0100
Subject: [luatex] setupbackend in lualatex?
In-Reply-To: <CABkgm-RNS24mTaYPVOiQto0CkcFFbRFAHxes14cm4-wp2XRsgA@mail.gmail.com>
References: <CABkgm-QDtUyJB_iJPcY5_9maDO6-6e2yCHw1QuMKZMUMtm53bw@mail.gmail.com>
 <1asrnb5n51mdh$.dlg@nililand.de>
 <00405F38-DD33-4609-9633-7E0F728B3200@gundla.ch>
 <CABkgm-RNS24mTaYPVOiQto0CkcFFbRFAHxes14cm4-wp2XRsgA@mail.gmail.com>
Message-ID: <20110720112415.GC741@phare.normalesup.org>

> So you are saying that the binary, after reading a latex file, isn't quite
> aware of the DOM-structure of the file, while after reading a Context-file
> it is?

  I would say there is no such thing as a "document object model" in TeX
processing.  The document is mostly read linearly, and TeX basically
forgets everything it has seen after outputting each single page (apart
for information like references, index elements and the like, that are
written to separate files).  Hence, TeX is not only not aware of the
"DOM-structure" of the file (I would rather say the document), but it's
in my opinion misleading to even think of a TeX document of having such
a structure, and to mention concepts like DOM.

  You can of course enforce a tree-like structure, and it is encouraged
in ConTeXt with commands such as \startchapter and \stopchapter (which
are easy to mimic in LaTeX, as Khaled said); but that's by no means
necessary (and \chapter also exists in ConTeXt, and will most likely
never disappear).

> It seems that this information is less needed when building an HTML-file
> instead of a PDF. I mean, it needs to do something like chapter-heading ->
> H1, but after that it couldn't care less about whether or not that chapter
> ends.

  That's also the case for a PDF.  You see the command \chapter, you set
the chapter heading, and move on.

	Arthur

From vafa018 at gmail.com  Wed Jul 20 13:34:11 2011
From: vafa018 at gmail.com (Vafa Khalighi)
Date: Wed, 20 Jul 2011 21:34:11 +1000
Subject: [luatex] Fribidi for LuaTeX
In-Reply-To: <4E25DDD3.2020503@wxs.nl>
References: <CA+wm_c9pzn-0OijugCwYGTUJN48xVS2ymKt0gTD+P7+x_=pKnA@mail.gmail.com>
 <4E1C515C.3060701@elvenkind.com>
 <CA+wm_c8rXmKJHG9D=pqB9M=rtKX8VV6-ax4NHg1xndDMpggRzg@mail.gmail.com>
 <4E22AD4F.6050009@elvenkind.com> <m3r55oc1jm.fsf@jhcloos.com>
 <4E253BC1.3000202@wxs.nl>
 <CA+wm_c_mhtJ1aR=+3E3S8ZTRzYUaeOwCTvs91wknKNt8F01kvA@mail.gmail.com>
 <op.vyvmhuwqpw6hmh@ishamid-pc>
 <CA+wm_c9=Z4bfeRpFRZ=Rsj_9hyzoFwJGEejD4N8Wu58qaKLsoA@mail.gmail.com>
 <4E25DDD3.2020503@wxs.nl>
Message-ID: <CA+wm_c-d7tuv5aZL1ZUVE+NG8SG0pp9XyNrfOS3wcD+wq718Ow@mail.gmail.com>

On Wed, Jul 20, 2011 at 5:41 AM, Hans Hagen <pragma at wxs.nl> wrote:

> On 19-7-2011 7:51, Vafa Khalighi wrote:
>
>> Hi Idris
>>
>> Agreed. and if you look ath my previous questions, I actually asked if it
>> is
>> to be implemented in the luatex engine or in the macro level but I got no
>>
>
When I said "agreed", I only agreed with Idris that LuaTeX does not provide
solutions and unicode bidirectional algorithm should be done in macro (lua)
level and not in the engine but respectfully, I do not agree with his
comments about Unicode Bidirectional Algorithms.



>
> There is no need to implement it in the luatex engine as one can hook in
> code at all kind of moments (reading files, processing tokens, handling
> nodes) and no hard codes solution will satisfy each user and can only lead
> to weird hooks into and control over such a mechanism. The only thing luatex
> can do is to provide access to internals (which it does) and either library
> or lua code can do it's work. So, one can provide unicode bidi support to
> the extend needed.
>
> So the answer is: at the macro level (which includes the lua level).
>
>
Thanks. What I am doing will be generic, so ConTeXt users can use it too if
they like but to the best of my knowledge, most Persians use LaTeX.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://tug.org/pipermail/luatex/attachments/20110720/12eff485/attachment-0001.html>

From mail at johanneswilm.org  Wed Jul 20 13:35:00 2011
From: mail at johanneswilm.org (Johannes Wilm)
Date: Wed, 20 Jul 2011 04:35:00 -0700
Subject: [luatex] setupbackend in lualatex?
In-Reply-To: <CALBOmsYaQOMatn7GOJtzbJvROnUH11GJF9_Ear81BeFjxh93Lg@mail.gmail.com>
References: <CABkgm-QDtUyJB_iJPcY5_9maDO6-6e2yCHw1QuMKZMUMtm53bw@mail.gmail.com>
 <1asrnb5n51mdh$.dlg@nililand.de>
 <00405F38-DD33-4609-9633-7E0F728B3200@gundla.ch>
 <CABkgm-RNS24mTaYPVOiQto0CkcFFbRFAHxes14cm4-wp2XRsgA@mail.gmail.com>
 <CALBOmsYaQOMatn7GOJtzbJvROnUH11GJF9_Ear81BeFjxh93Lg@mail.gmail.com>
Message-ID: <CABkgm-Q9hBCduPw0Owh_U-0ufVVdOMMaPxunNB1FJwPNtft3ig@mail.gmail.com>

On Wed, Jul 20, 2011 at 4:19 AM, Mojca Miklavec <
mojca.miklavec.lists at gmail.com> wrote:
...

> ConTeXt does a very similar thing, except that it has that mechanism
> already built into relevant commands. If that information is missing
> in LaTeX, it won't help you to import just the \setupbackend part.
> Similar - since tex4ht didn't do as heavy redefinitions of ConTeXt
> commands as for LaTeX, it is nearly useless, even though it has
> exactly the same potential.


I see, so there may not be any use in even trying then.  I guess that
creating anything other than a PDF using laluatex really isn't feasible. :(


Thanks a lot for the thorough explanations though.

-- 
Johannes Wilm
http://www.johanneswilm.org
tel: +1 (520) 399 8880
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://tug.org/pipermail/luatex/attachments/20110720/531bde8b/attachment.html>

From mojca.miklavec.lists at gmail.com  Sat Jul 23 19:36:41 2011
From: mojca.miklavec.lists at gmail.com (Mojca Miklavec)
Date: Sat, 23 Jul 2011 19:36:41 +0200
Subject: [luatex] luatex-ja (successor of pTeX?)
Message-ID: <CALBOmsbi-Zx6euWbwercUtBqiA_XZPNV8V3X4F-6Gbc+1fO_Wg@mail.gmail.com>

Just two links, I'm not really fluent in Japanese:

http://sourceforge.jp/projects/luatex-ja/wiki/FrontPage
http://git.sourceforge.jp/view?p=luatex-ja/luatexja.git

One should invite Hironori Kitagawa (most commits) to write an article
for MAPS or TUGboat.

Mojca

From khaledhosny at eglug.org  Sun Jul 24 19:48:05 2011
From: khaledhosny at eglug.org (Khaled Hosny)
Date: Sun, 24 Jul 2011 19:48:05 +0200
Subject: [luatex] Fribidi for LuaTeX
In-Reply-To: <4E1C515C.3060701@elvenkind.com>
References: <CA+wm_c9pzn-0OijugCwYGTUJN48xVS2ymKt0gTD+P7+x_=pKnA@mail.gmail.com>
 <4E1C515C.3060701@elvenkind.com>
Message-ID: <20110724174805.GA3726@khaled-laptop>

On Tue, Jul 12, 2011 at 03:51:24PM +0200, Taco Hoekwater wrote:
> 
> Hi,
> 
> Now that the Unicode BiDi algorithm implementation discussion
> seems to restart, it is a good time to ask the people involved
> to solve the non-trivial problem of adjusting the algorithm
> to cater for the inclusion of
> 
> * out-of-line node objects (\setbox, \box, \copy),
> * out-of-line tokens (like alignment templates and macro expansions),
> * vertical typesetting,
> * TeX grouping levels,
> * Interfering nodes (math, \special, \rule etc)

Some questions from me:

* local_par whatsit:
  - it is always the 1st node in the list (if exists at all), right?
  - \textdir inserts begindir node after it, is this a general rule? (I
    noticed when I insert begindir nodes before it combining marks get
    shifted to the right, but it might be a bug in the font code).
  - what is the dir field is used for? I can query it but setting it (to
    TRT for example) has no effect (the par still left aligned).
* when \pardir is set to TRT while \textdir is still TLT luatex will
  enclose the paragraph with begindir/enddir TLT nodes (skipping the
  local_par etc.), right? if yes, is there anyway to suppress this?
* how can I set paragraph direction to TRT without setting \pardir,
  in pre_linebreak_filter?

Regards,
 Khaled

-- 
 Khaled Hosny
 Egyptian
 Arab

From taco at elvenkind.com  Mon Jul 25 09:10:13 2011
From: taco at elvenkind.com (Taco Hoekwater)
Date: Mon, 25 Jul 2011 09:10:13 +0200
Subject: [luatex] Fribidi for LuaTeX
In-Reply-To: <20110724174805.GA3726@khaled-laptop>
References: <CA+wm_c9pzn-0OijugCwYGTUJN48xVS2ymKt0gTD+P7+x_=pKnA@mail.gmail.com>
 <4E1C515C.3060701@elvenkind.com> <20110724174805.GA3726@khaled-laptop>
Message-ID: <4E2D16D5.60302@elvenkind.com>


Hi,

On 07/24/2011 07:48 PM, Khaled Hosny wrote:
> On Tue, Jul 12, 2011 at 03:51:24PM +0200, Taco Hoekwater wrote:
>>
>> Hi,
>>
>> Now that the Unicode BiDi algorithm implementation discussion
>> seems to restart, it is a good time to ask the people involved
>> to solve the non-trivial problem of adjusting the algorithm
>> to cater for the inclusion of
>>
>> * out-of-line node objects (\setbox, \box, \copy),
>> * out-of-line tokens (like alignment templates and macro expansions),
>> * vertical typesetting,
>> * TeX grouping levels,
>> * Interfering nodes (math, \special, \rule etc)
>
> Some questions from me:
>
> * local_par whatsit:
>    - it is always the 1st node in the list (if exists at all), right?

yes, it is and should remain the first node.

>    - \textdir inserts begindir node after it, is this a general rule?

yes

>    - what is the dir field is used for? I can query it but setting it (to
>      TRT for example) has no effect (the par still left aligned).

That could be a timing problem in the change, but I need a test file to
debug.

> * when \pardir is set to TRT while \textdir is still TLT luatex will
>    enclose the paragraph with begindir/enddir TLT nodes (skipping the
>    local_par etc.), right? if yes, is there anyway to suppress this?

There is no way to suppress that, but it should not have ignored
local_par, I think. Again a test file would be helpful.

> * how can I set paragraph direction to TRT without setting \pardir,
>    in pre_linebreak_filter?

   head, info = tex.linebreak(head, {"pardir" = "TRT", ...})

This *will* overrule the 'dir' field in the local_par inside 'head'.

Best wishes,
Taco

From khaledhosny at eglug.org  Mon Jul 25 17:03:41 2011
From: khaledhosny at eglug.org (Khaled Hosny)
Date: Mon, 25 Jul 2011 17:03:41 +0200
Subject: [luatex] Fribidi for LuaTeX
In-Reply-To: <4E2D16D5.60302@elvenkind.com>
References: <CA+wm_c9pzn-0OijugCwYGTUJN48xVS2ymKt0gTD+P7+x_=pKnA@mail.gmail.com>
 <4E1C515C.3060701@elvenkind.com>
 <20110724174805.GA3726@khaled-laptop>
 <4E2D16D5.60302@elvenkind.com>
Message-ID: <20110725150341.GA2193@khaled-laptop>

On Mon, Jul 25, 2011 at 09:10:13AM +0200, Taco Hoekwater wrote:
> 
> >   - what is the dir field is used for? I can query it but setting it (to
> >     TRT for example) has no effect (the par still left aligned).
> 
> That could be a timing problem in the change, but I need a test file to
> debug.

Here is a minimal example:

\directlua {
callback.register('pre_linebreak_filter',
    function(h)
        for n in node.traverse(h) do
            if n.id == 8 and n.subtype == 6 then
                n.dir = "TRT"
            end
        end
        return h
    end
)
}

Hello World!
\bye

> >* how can I set paragraph direction to TRT without setting \pardir,
> >   in pre_linebreak_filter?
> 
>   head, info = tex.linebreak(head, {"pardir" = "TRT", ...})
> 
> This *will* overrule the 'dir' field in the local_par inside 'head'.

I'm trying to make the code none intrusive as possible, and I'd like to
avoid fiddling with line breaking.

Regards,
 Khaled

-- 
 Khaled Hosny
 Egyptian
 Arab

From taco at elvenkind.com  Tue Jul 26 12:14:16 2011
From: taco at elvenkind.com (Taco Hoekwater)
Date: Tue, 26 Jul 2011 12:14:16 +0200
Subject: [luatex] Fribidi for LuaTeX
In-Reply-To: <20110725150341.GA2193@khaled-laptop>
References: <CA+wm_c9pzn-0OijugCwYGTUJN48xVS2ymKt0gTD+P7+x_=pKnA@mail.gmail.com>
 <4E1C515C.3060701@elvenkind.com> <20110724174805.GA3726@khaled-laptop>
 <4E2D16D5.60302@elvenkind.com> <20110725150341.GA2193@khaled-laptop>
Message-ID: <4E2E9378.5070602@elvenkind.com>

On 07/25/2011 05:03 PM, Khaled Hosny wrote:
> On Mon, Jul 25, 2011 at 09:10:13AM +0200, Taco Hoekwater wrote:
>>
>>>    - what is the dir field is used for? I can query it but setting it (to
>>>      TRT for example) has no effect (the par still left aligned).
>>
>> That could be a timing problem in the change, but I need a test file to
>> debug.
>
> Here is a minimal example:

Ok, I found a bug: current luatex initializes the internal paragraph
direction specifier too soon. There are two ways to workaround this
bug: either use 'hyphenate' callback in the example code below, or
set the 'hyphenate' callback as well (and call tex.linebreak()
somewhere within). The third option is to compile TRUNK from the
repository.

Best wishes,
Taco

From vafa018 at gmail.com  Tue Jul 26 12:33:13 2011
From: vafa018 at gmail.com (Vafa Khalighi)
Date: Tue, 26 Jul 2011 20:33:13 +1000
Subject: [luatex] two bidi bugs in LuaTeX
Message-ID: <CA+wm_c_948ZtBYQjAjDDgN=fNzBS_xiHC=K5WG0Z290n1KFOXw@mail.gmail.com>

Hi

I found two bugs in LuaTeX, I could not provide a minimal plain TeX minimal
but I provide a minimal LaTeX document. I hope it is not too hard for you to
find the actual bug.

The first bug is shown in the attached documents; the entry goes out of the
cell.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://tug.org/pipermail/luatex/attachments/20110726/c78f0104/attachment-0001.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: test.tex
Type: application/x-tex
Size: 526 bytes
Desc: not available
URL: <http://tug.org/pipermail/luatex/attachments/20110726/c78f0104/attachment-0001.tex>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: test.pdf
Type: application/pdf
Size: 18862 bytes
Desc: not available
URL: <http://tug.org/pipermail/luatex/attachments/20110726/c78f0104/attachment-0001.pdf>

From taco at elvenkind.com  Tue Jul 26 12:39:21 2011
From: taco at elvenkind.com (Taco Hoekwater)
Date: Tue, 26 Jul 2011 12:39:21 +0200
Subject: [luatex] two bidi bugs in LuaTeX
In-Reply-To: <CA+wm_c_948ZtBYQjAjDDgN=fNzBS_xiHC=K5WG0Z290n1KFOXw@mail.gmail.com>
References: <CA+wm_c_948ZtBYQjAjDDgN=fNzBS_xiHC=K5WG0Z290n1KFOXw@mail.gmail.com>
Message-ID: <4E2E9959.8040203@elvenkind.com>

On 07/26/2011 12:33 PM, Vafa Khalighi wrote:
> Hi
>
> I found two bugs in LuaTeX, I could not provide a minimal plain TeX
> minimal but I provide a minimal LaTeX document. I hope it is not too
> hard for you to find the actual bug.

To me, it looks like a bug in latex's graphicx' \rotatebox macro?


From vafa018 at gmail.com  Tue Jul 26 12:45:24 2011
From: vafa018 at gmail.com (Vafa Khalighi)
Date: Tue, 26 Jul 2011 20:45:24 +1000
Subject: [luatex] two bidi bugs in LuaTeX
In-Reply-To: <4E2E9959.8040203@elvenkind.com>
References: <CA+wm_c_948ZtBYQjAjDDgN=fNzBS_xiHC=K5WG0Z290n1KFOXw@mail.gmail.com>
 <4E2E9959.8040203@elvenkind.com>
Message-ID: <CA+wm_c-hcQkd6qTMTM02ymSci_vnJQcihc4VgjL=8F4Du9fuzA@mail.gmail.com>

But if you comment the \mathdir TRT, it behaves naturally.

On Tue, Jul 26, 2011 at 8:39 PM, Taco Hoekwater <taco at elvenkind.com> wrote:

> On 07/26/2011 12:33 PM, Vafa Khalighi wrote:
>
>> Hi
>>
>> I found two bugs in LuaTeX, I could not provide a minimal plain TeX
>> minimal but I provide a minimal LaTeX document. I hope it is not too
>> hard for you to find the actual bug.
>>
>
> To me, it looks like a bug in latex's graphicx' \rotatebox macro?
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://tug.org/pipermail/luatex/attachments/20110726/9ecdea10/attachment.html>

From vafa018 at gmail.com  Tue Jul 26 12:47:28 2011
From: vafa018 at gmail.com (Vafa Khalighi)
Date: Tue, 26 Jul 2011 20:47:28 +1000
Subject: [luatex] two bidi bugs in LuaTeX
In-Reply-To: <CA+wm_c-hcQkd6qTMTM02ymSci_vnJQcihc4VgjL=8F4Du9fuzA@mail.gmail.com>
References: <CA+wm_c_948ZtBYQjAjDDgN=fNzBS_xiHC=K5WG0Z290n1KFOXw@mail.gmail.com>
 <4E2E9959.8040203@elvenkind.com>
 <CA+wm_c-hcQkd6qTMTM02ymSci_vnJQcihc4VgjL=8F4Du9fuzA@mail.gmail.com>
Message-ID: <CA+wm_c8-kQa6jJayu+J_n6unCO6oE77D2owA7tUtjRz82p=zxg@mail.gmail.com>

The second bug is shown in this minimal example (it shows bad spacing, using
\number).

Thanks
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://tug.org/pipermail/luatex/attachments/20110726/85af1d9b/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: test.tex
Type: application/x-tex
Size: 333 bytes
Desc: not available
URL: <http://tug.org/pipermail/luatex/attachments/20110726/85af1d9b/attachment.tex>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: test.pdf
Type: application/pdf
Size: 11854 bytes
Desc: not available
URL: <http://tug.org/pipermail/luatex/attachments/20110726/85af1d9b/attachment.pdf>

From vafa018 at gmail.com  Tue Jul 26 12:56:19 2011
From: vafa018 at gmail.com (Vafa Khalighi)
Date: Tue, 26 Jul 2011 20:56:19 +1000
Subject: [luatex] two bidi bugs in LuaTeX
In-Reply-To: <CA+wm_c8-kQa6jJayu+J_n6unCO6oE77D2owA7tUtjRz82p=zxg@mail.gmail.com>
References: <CA+wm_c_948ZtBYQjAjDDgN=fNzBS_xiHC=K5WG0Z290n1KFOXw@mail.gmail.com>
 <4E2E9959.8040203@elvenkind.com>
 <CA+wm_c-hcQkd6qTMTM02ymSci_vnJQcihc4VgjL=8F4Du9fuzA@mail.gmail.com>
 <CA+wm_c8-kQa6jJayu+J_n6unCO6oE77D2owA7tUtjRz82p=zxg@mail.gmail.com>
Message-ID: <CA+wm_c-rrjEV9KZq_0L+5F4RAZ98zcDLPxy8PoJmW8mabSaF-w@mail.gmail.com>

It seems that this only happens in vertical mode!

On Tue, Jul 26, 2011 at 8:47 PM, Vafa Khalighi <vafa018 at gmail.com> wrote:

> The second bug is shown in this minimal example (it shows bad spacing,
> using \number).
>
> Thanks
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://tug.org/pipermail/luatex/attachments/20110726/b4ac27a5/attachment-0001.html>

From taco at elvenkind.com  Tue Jul 26 14:02:33 2011
From: taco at elvenkind.com (Taco Hoekwater)
Date: Tue, 26 Jul 2011 14:02:33 +0200
Subject: [luatex] two bidi bugs in LuaTeX
In-Reply-To: <CA+wm_c-rrjEV9KZq_0L+5F4RAZ98zcDLPxy8PoJmW8mabSaF-w@mail.gmail.com>
References: <CA+wm_c_948ZtBYQjAjDDgN=fNzBS_xiHC=K5WG0Z290n1KFOXw@mail.gmail.com>
 <4E2E9959.8040203@elvenkind.com>
 <CA+wm_c-hcQkd6qTMTM02ymSci_vnJQcihc4VgjL=8F4Du9fuzA@mail.gmail.com>
 <CA+wm_c8-kQa6jJayu+J_n6unCO6oE77D2owA7tUtjRz82p=zxg@mail.gmail.com>
 <CA+wm_c-rrjEV9KZq_0L+5F4RAZ98zcDLPxy8PoJmW8mabSaF-w@mail.gmail.com>
Message-ID: <4E2EACD9.7070709@elvenkind.com>

On 07/26/2011 12:56 PM, Vafa Khalighi wrote:
> It seems that this only happens in vertical mode!

Yes. The extra space is in fact the indentation box. Minimal plain
tex example showing both incorrect and correct output is:


   \pagedir TRT\bodydir TRT\pardir TRT\textdir TRT

   {\textdir TLT4} Mordad {\textdir TLT1390}

   \indent{\textdir TLT4} Mordad {\textdir TLT1390}

   \bye

I'll see what I can do.

Best wishes,
Taco

>
> On Tue, Jul 26, 2011 at 8:47 PM, Vafa Khalighi <vafa018 at gmail.com
> <mailto:vafa018 at gmail.com>> wrote:
>
>     The second bug is shown in this minimal example (it shows bad
>     spacing, using \number).
>
>     Thanks
>
>


From khaledhosny at eglug.org  Tue Jul 26 14:10:40 2011
From: khaledhosny at eglug.org (Khaled Hosny)
Date: Tue, 26 Jul 2011 14:10:40 +0200
Subject: [luatex] Fribidi for LuaTeX
In-Reply-To: <4E2E9378.5070602@elvenkind.com>
References: <CA+wm_c9pzn-0OijugCwYGTUJN48xVS2ymKt0gTD+P7+x_=pKnA@mail.gmail.com>
 <4E1C515C.3060701@elvenkind.com>
 <20110724174805.GA3726@khaled-laptop>
 <4E2D16D5.60302@elvenkind.com>
 <20110725150341.GA2193@khaled-laptop>
 <4E2E9378.5070602@elvenkind.com>
Message-ID: <20110726121040.GA30970@khaled-laptop>

On Tue, Jul 26, 2011 at 12:14:16PM +0200, Taco Hoekwater wrote:
> On 07/25/2011 05:03 PM, Khaled Hosny wrote:
> >On Mon, Jul 25, 2011 at 09:10:13AM +0200, Taco Hoekwater wrote:
> >>
> >>>   - what is the dir field is used for? I can query it but setting it (to
> >>>     TRT for example) has no effect (the par still left aligned).
> >>
> >>That could be a timing problem in the change, but I need a test file to
> >>debug.
> >
> >Here is a minimal example:
> 
> Ok, I found a bug: current luatex initializes the internal paragraph
> direction specifier too soon. There are two ways to workaround this
> bug: either use 'hyphenate' callback in the example code below, or
> set the 'hyphenate' callback as well (and call tex.linebreak()
> somewhere within). The third option is to compile TRUNK from the
> repository.

Thanks Taco, I'll go with trunk for now, once the code is mature enough
I'll explore other workarounds (if TeXLive 2012 wasn't released by then).

Regards,
 Khaled

-- 
 Khaled Hosny
 Egyptian
 Arab

From taco at elvenkind.com  Tue Jul 26 14:29:16 2011
From: taco at elvenkind.com (Taco Hoekwater)
Date: Tue, 26 Jul 2011 14:29:16 +0200
Subject: [luatex] two bidi bugs in LuaTeX
In-Reply-To: <4E2EACD9.7070709@elvenkind.com>
References: <CA+wm_c_948ZtBYQjAjDDgN=fNzBS_xiHC=K5WG0Z290n1KFOXw@mail.gmail.com>
 <4E2E9959.8040203@elvenkind.com>
 <CA+wm_c-hcQkd6qTMTM02ymSci_vnJQcihc4VgjL=8F4Du9fuzA@mail.gmail.com>
 <CA+wm_c8-kQa6jJayu+J_n6unCO6oE77D2owA7tUtjRz82p=zxg@mail.gmail.com>
 <CA+wm_c-rrjEV9KZq_0L+5F4RAZ98zcDLPxy8PoJmW8mabSaF-w@mail.gmail.com>
 <4E2EACD9.7070709@elvenkind.com>
Message-ID: <4E2EB31C.1060000@elvenkind.com>

On 07/26/2011 02:02 PM, Taco Hoekwater wrote:
> On 07/26/2011 12:56 PM, Vafa Khalighi wrote:
>> It seems that this only happens in vertical mode!
>
> Yes. The extra space is in fact the indentation box. Minimal plain
> tex example showing both incorrect and correct output is:

Ah ok, now I get what happens.

> \pagedir TRT\bodydir TRT\pardir TRT\textdir TRT
>
> {\textdir TLT4} Mordad {\textdir TLT1390}

This means this:

    <set text dir to TLT>
    <leave vertical mode>
    <add indentation box>
    <add "4">
    <restore text dir to TRT>

So, actually, the indentation box is in TLT mode, meaning it appears
'after' 4 in TRT reading order. I do not think this is a bug after all,
just a weird result of what is actually quite logical behaviour.

Best wishes,
Taco




From taco at elvenkind.com  Tue Jul 26 14:42:41 2011
From: taco at elvenkind.com (Taco Hoekwater)
Date: Tue, 26 Jul 2011 14:42:41 +0200
Subject: [luatex] two bidi bugs in LuaTeX
In-Reply-To: <CA+wm_c-hcQkd6qTMTM02ymSci_vnJQcihc4VgjL=8F4Du9fuzA@mail.gmail.com>
References: <CA+wm_c_948ZtBYQjAjDDgN=fNzBS_xiHC=K5WG0Z290n1KFOXw@mail.gmail.com>
 <4E2E9959.8040203@elvenkind.com>
 <CA+wm_c-hcQkd6qTMTM02ymSci_vnJQcihc4VgjL=8F4Du9fuzA@mail.gmail.com>
Message-ID: <4E2EB641.8040008@elvenkind.com>

On 07/26/2011 12:45 PM, Vafa Khalighi wrote:
> But if you comment the \mathdir TRT, it behaves naturally.

I do not see how that excludes a \rotatebox bug.

In fact, in your example, if you wrap an \fbox around the \rotatebox
call, you can quite clearly see that \rotatebox has produced something
with the wrong bounding box.

I have no real knowledge of the internals of \rotatebox, but I assume
it creates a new box with dimensions that are calculated using some
goniometric mutation of the original box's dimensions.

Looks like that code is not quite ready for use in bidi environments.

The attached (smaller) test shows the same (wrong) bounding box,
without article.cls, without multirow.sty, without tabular, and
without math mode.

Best wishes,
Taco
-------------- next part --------------
A non-text attachment was scrubbed...
Name: test.tex
Type: text/x-tex
Size: 125 bytes
Desc: not available
URL: <http://tug.org/pipermail/luatex/attachments/20110726/7ae329e6/attachment.bin>

From vafa018 at gmail.com  Tue Jul 26 14:43:28 2011
From: vafa018 at gmail.com (Vafa Khalighi)
Date: Tue, 26 Jul 2011 22:43:28 +1000
Subject: [luatex] two bidi bugs in LuaTeX
In-Reply-To: <4E2E9959.8040203@elvenkind.com>
References: <CA+wm_c_948ZtBYQjAjDDgN=fNzBS_xiHC=K5WG0Z290n1KFOXw@mail.gmail.com>
 <4E2E9959.8040203@elvenkind.com>
Message-ID: <CA+wm_c9Y_zB7Jgd_qmvO+QpAZgHu8xk-MvgD41A7gys+q3yQMA@mail.gmail.com>

Right. Fixing it was easy:

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\makeatletter

\def\Grot at box@std#1#2{\ifmmode\else\if at RTL\bgroup\textdir TLT\fi\fi%

\Grot at setangle{#1}%

\setbox\z@\hbox{{\if at RTL\bgroup\textdir TRT\fi#2\if at RTL\egroup\fi}}%

\Grot at x\z@

\Grot at y\z@

\Grot at box\ifmmode\else\if at RTL\egroup\fi\fi}

\makeatother

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


On Tue, Jul 26, 2011 at 8:39 PM, Taco Hoekwater <taco at elvenkind.com> wrote:

> On 07/26/2011 12:33 PM, Vafa Khalighi wrote:
>
>> Hi
>>
>> I found two bugs in LuaTeX, I could not provide a minimal plain TeX
>> minimal but I provide a minimal LaTeX document. I hope it is not too
>> hard for you to find the actual bug.
>>
>
> To me, it looks like a bug in latex's graphicx' \rotatebox macro?
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://tug.org/pipermail/luatex/attachments/20110726/cb2d549b/attachment.html>

From vafa018 at gmail.com  Tue Jul 26 14:46:37 2011
From: vafa018 at gmail.com (Vafa Khalighi)
Date: Tue, 26 Jul 2011 22:46:37 +1000
Subject: [luatex] two bidi bugs in LuaTeX
In-Reply-To: <4E2EB31C.1060000@elvenkind.com>
References: <CA+wm_c_948ZtBYQjAjDDgN=fNzBS_xiHC=K5WG0Z290n1KFOXw@mail.gmail.com>
 <4E2E9959.8040203@elvenkind.com>
 <CA+wm_c-hcQkd6qTMTM02ymSci_vnJQcihc4VgjL=8F4Du9fuzA@mail.gmail.com>
 <CA+wm_c8-kQa6jJayu+J_n6unCO6oE77D2owA7tUtjRz82p=zxg@mail.gmail.com>
 <CA+wm_c-rrjEV9KZq_0L+5F4RAZ98zcDLPxy8PoJmW8mabSaF-w@mail.gmail.com>
 <4E2EACD9.7070709@elvenkind.com> <4E2EB31C.1060000@elvenkind.com>
Message-ID: <CA+wm_c8z3wsxouKRRcBbuoB0oKwPD3vgAphS2q64o4nJ4XGueQ@mail.gmail.com>

Thank you.

On Tue, Jul 26, 2011 at 10:29 PM, Taco Hoekwater <taco at elvenkind.com> wrote:

> On 07/26/2011 02:02 PM, Taco Hoekwater wrote:
>
>> On 07/26/2011 12:56 PM, Vafa Khalighi wrote:
>>
>>> It seems that this only happens in vertical mode!
>>>
>>
>> Yes. The extra space is in fact the indentation box. Minimal plain
>> tex example showing both incorrect and correct output is:
>>
>
> Ah ok, now I get what happens.
>
>
>  \pagedir TRT\bodydir TRT\pardir TRT\textdir TRT
>>
>> {\textdir TLT4} Mordad {\textdir TLT1390}
>>
>
> This means this:
>
>   <set text dir to TLT>
>   <leave vertical mode>
>   <add indentation box>
>   <add "4">
>   <restore text dir to TRT>
>
> So, actually, the indentation box is in TLT mode, meaning it appears
> 'after' 4 in TRT reading order. I do not think this is a bug after all,
> just a weird result of what is actually quite logical behaviour.
>
> Best wishes,
> Taco
>
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://tug.org/pipermail/luatex/attachments/20110726/d048d649/attachment.html>

From taco at elvenkind.com  Tue Jul 26 14:46:59 2011
From: taco at elvenkind.com (Taco Hoekwater)
Date: Tue, 26 Jul 2011 14:46:59 +0200
Subject: [luatex] two bidi bugs in LuaTeX
In-Reply-To: <CA+wm_c9Y_zB7Jgd_qmvO+QpAZgHu8xk-MvgD41A7gys+q3yQMA@mail.gmail.com>
References: <CA+wm_c_948ZtBYQjAjDDgN=fNzBS_xiHC=K5WG0Z290n1KFOXw@mail.gmail.com>
 <4E2E9959.8040203@elvenkind.com>
 <CA+wm_c9Y_zB7Jgd_qmvO+QpAZgHu8xk-MvgD41A7gys+q3yQMA@mail.gmail.com>
Message-ID: <4E2EB743.60906@elvenkind.com>

On 07/26/2011 02:43 PM, Vafa Khalighi wrote:
> Right. Fixing it was easy:
>
> %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
>
> \makeatletter
> \def\Grot at box@std#1#2{\ifmmode\else\if at RTL\bgroup\textdir TLT\fi\fi%
> \Grot at setangle{#1}%
> \setbox\z@\hbox{{\if at RTL\bgroup\textdir TRT\fi#2\if at RTL\egroup\fi}}%
> \Grot at x\z@
> \Grot at y\z@
> \Grot at box\ifmmode\else\if at RTL\egroup\fi\fi}
> \makeatother

With the addition of

   \newif\if at RTL \@RTLtrue

that fixed my own minimal example as well.

Best wishes,
Taco

