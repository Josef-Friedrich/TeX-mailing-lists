From luto at mit.edu  Sat Aug  6 00:17:14 2011
From: luto at mit.edu (Andrew Lutomirski)
Date: Fri, 5 Aug 2011 18:17:14 -0400
Subject: [luatex] Bizarre bug with fontspec, math, and hat/tilde positioning
Message-ID: <CAObL_7F4M4dwmx3bkxG25QsuPcN0r0rUYCTBkegK-PAxO4C=xQ@mail.gmail.com>

I'm having trouble with the positioning of hats and tildes in
lualatex.  To test this, you'll need Linux Libertine OpenType 5.1.3
unpacked into your current directory.  The issue is that hats and
tildes (but not both, if the brackets are appropriately positioned)
are positioned way too far to the left.

xelatex gets this right.  The no-math option to fontspec gets it a lot
closer to correct.  The older Libertine fonts that come with TexLive
seem to work as well.

\mathit{\tilde A} has all kinds of different weird issues.

I don't really know if this is the right list for this, since I don't
know where the bug is.

--- cut here ---

\documentclass[english]{article}
\usepackage[letterpaper]{geometry}
\usepackage{babel}

% With no-math, everything works.
\usepackage{fontspec}

\usepackage{amsmath}

% A new font (5.1.3) in the local directory has issues with LuaTeX.
\setromanfont[ExternalLocation=./,Mapping=tex-text,UprightFont=*_R,ItalicFont=*_RI,Extension=.otf,Numbers={OldStyle,Proportional}]{LinLibertine}

% An older font that TexLive bundles is OK.
%\setromanfont[ExternalLocation=/usr/share/texlive/texmf-dist/fonts/opentype/public/libertine/,Mapping=tex-text,UprightFont=*r,ItalicFont=*ri,Extension=.otf,Numbers={OldStyle,Proportional}]{fxl}


% But the system version get all but \mathit right.
%\setromanfont{Linux Libertine O}


\begin{document}

\[
\tilde A
\]

\[
{\tilde A}
\]

\[
\hat A
\]

% If amsmath is enabled, then this draws a hat and tilde in the wrong place.
%\[
%\hat \tilde A
%\]

% If amsmath is enabled, then this draws a hat and tilde in the right place (!)
\[
\hat{\tilde A}
\]

\[
\mathit{\tilde A}
\]

\end{document}

From luto at mit.edu  Sat Aug  6 00:36:04 2011
From: luto at mit.edu (Andrew Lutomirski)
Date: Fri, 5 Aug 2011 18:36:04 -0400
Subject: [luatex] Bizarre bug with fontspec, math,
	and hat/tilde positioning
In-Reply-To: <CAObL_7F4M4dwmx3bkxG25QsuPcN0r0rUYCTBkegK-PAxO4C=xQ@mail.gmail.com>
References: <CAObL_7F4M4dwmx3bkxG25QsuPcN0r0rUYCTBkegK-PAxO4C=xQ@mail.gmail.com>
Message-ID: <CAObL_7GP+sdEhFOqhaDocki39kCaD3m432G74F7My5dnPJyt-w@mail.gmail.com>

On Fri, Aug 5, 2011 at 6:17 PM, Andrew Lutomirski <luto at mit.edu> wrote:
> I'm having trouble with the positioning of hats and tildes in
> lualatex. ?To test this, you'll need Linux Libertine OpenType 5.1.3
> unpacked into your current directory. ?The issue is that hats and
> tildes (but not both, if the brackets are appropriately positioned)
> are positioned way too far to the left.

It's the *regular* (not italic) font that causes the problem.  Loading
the 05/22/2011 version of LinLibertine_R.otf triggers the problem;
loading 4.75 does not.

>
> xelatex gets this right. ?The no-math option to fontspec gets it a lot
> closer to correct. ?The older Libertine fonts that come with TexLive
> seem to work as well.
>
> \mathit{\tilde A} has all kinds of different weird issues.
>
> I don't really know if this is the right list for this, since I don't
> know where the bug is.
>
> --- cut here ---
>
> \documentclass[english]{article}
> \usepackage[letterpaper]{geometry}
> \usepackage{babel}
>
> % With no-math, everything works.
> \usepackage{fontspec}
>
> \usepackage{amsmath}
>
> % A new font (5.1.3) in the local directory has issues with LuaTeX.
> \setromanfont[ExternalLocation=./,Mapping=tex-text,UprightFont=*_R,ItalicFont=*_RI,Extension=.otf,Numbers={OldStyle,Proportional}]{LinLibertine}
>
> % An older font that TexLive bundles is OK.
> %\setromanfont[ExternalLocation=/usr/share/texlive/texmf-dist/fonts/opentype/public/libertine/,Mapping=tex-text,UprightFont=*r,ItalicFont=*ri,Extension=.otf,Numbers={OldStyle,Proportional}]{fxl}
>
>
> % But the system version get all but \mathit right.
> %\setromanfont{Linux Libertine O}
>
>
> \begin{document}
>
> \[
> \tilde A
> \]
>
> \[
> {\tilde A}
> \]
>
> \[
> \hat A
> \]
>
> % If amsmath is enabled, then this draws a hat and tilde in the wrong place.
> %\[
> %\hat \tilde A
> %\]
>
> % If amsmath is enabled, then this draws a hat and tilde in the right place (!)
> \[
> \hat{\tilde A}
> \]
>
> \[
> \mathit{\tilde A}
> \]
>
> \end{document}
>


From andreas.matthias at gmail.com  Sun Aug  7 23:14:41 2011
From: andreas.matthias at gmail.com (Andreas Matthias)
Date: Sun, 07 Aug 2011 23:14:41 +0200
Subject: [luatex] img.scan segfault
Message-ID: <1rb3h8-0q.ln1@gryffindor.hogwarts>

Using img.scan() in a tex file with \directlua works fine:

\directlua{
  a = img.scan({filename='foo.jpg'}) 
}

But it segfaults if I use img.scan in a pure lua file and
run it with --onlylua:

  a = img.scan({filename='foo.jpg'}) 

I have only this one line in the lua file. Do I need to import
additional modules?

Ciao
Andreas


From zappathustra at free.fr  Mon Aug  8 09:26:17 2011
From: zappathustra at free.fr (Paul Isambert)
Date: Mon, 08 Aug 2011 09:26:17 +0200
Subject: [luatex] Behavior of slnunicode.utf8.match().
Message-ID: <1312788377.4e3f8f998076a@imp.free.fr>

Hello all,

The manual says slnunicode.utf8.match() is normally unicode-aware, unless one
uses the empty capture. Yet I stumble on the following strange behavior
(assuming the file is encoded in utf8):

\directlua{
% Returns "?" (two bytes):
tex.print(slnunicode.utf8.match("??", ".", 1)

% Returns invalid (one-byte) character:
tex.print(slnunicode.utf8.match("??", ".", 2)

% Returns "?" (two bytes):
tex.print(slnunicode.utf8.match("??", ".", 3)

% Returns invalid (one-byte) character:
tex.print(slnunicode.utf8.match("??", ".", 4)
}

I'd expect the second call to return "?", but it looks like the function counts
in bytes (not in UTF-8 characters) yet returns an UTF-8 character (i.e. more
than one byte) if it can do so. So call 2 (resp. 4) returns the second byte of
"?" (resp. "?"), while call 1 and 3 return the correct characters starting
there.

Is this a bug or have I misunderstood something? (I can't test slunicode
independantly for the moment.)

Best,
Paul

From patrick at gundla.ch  Mon Aug  8 10:11:45 2011
From: patrick at gundla.ch (Patrick Gundlach)
Date: Mon, 8 Aug 2011 10:11:45 +0200
Subject: [luatex] Behavior of slnunicode.utf8.match().
In-Reply-To: <1312788377.4e3f8f998076a@imp.free.fr>
References: <1312788377.4e3f8f998076a@imp.free.fr>
Message-ID: <E1AF9F63-6E6D-4A40-9640-8D470FCFD1A3@gundla.ch>

Hi Paul,

this is how _I_ understand slunicode:

"." always matches a single byte, because the string functions (below) also work with arbitrary binary data. 


 	? find
	? match
	? gmatch
	? gsub

from slunicode have different category classes (http://www.unicode.org/Public/4.0-Update1/UCD-4.0.1.html#General_Category_Values)

So you should use %a or something to match a whole utf8 encoded item. Or you can use unicode.utf8.sub(str,n,n) to get the nth   utf8 character.

So I'd consider this correct behavior, but I have had some discussion on this before where I am pretty alone with my opinion... :) 

http://tug.org/pipermail/luatex/2010-March/thread.html#1242


Patrick



From hartmut_henkel at gmx.de  Mon Aug  8 12:26:15 2011
From: hartmut_henkel at gmx.de (Hartmut Henkel)
Date: Mon, 08 Aug 2011 12:26:15 +0200
Subject: [luatex] img.scan segfault
In-Reply-To: <1rb3h8-0q.ln1@gryffindor.hogwarts>
References: <1rb3h8-0q.ln1@gryffindor.hogwarts>
Message-ID: <20110808102615.28960@gmx.net>

> But it segfaults if I use img.scan in a pure lua file and
> run it with --onlylua:
> 
>   a = img.scan({filename='foo.jpg'}) 
> 
> I have only this one line in the lua file. Do I need to import
> additional modules?

confirmed. The img.*() functions are relying on the existence of the internal pdf structure (among others probably), and that's missing yet if luatex is not in pdf/dvi mode, Not clear what to do: Activating img.*() also for Lua-only mode may require quite some changes, with the only (?) net effect that one can use luatex to get some image dimensions. Easier would be just to disable the img lib...

Regards, Hartmut

-- 
NEU: FreePhone - 0ct/min Handyspartarif mit Geld-zur?ck-Garantie!		
Jetzt informieren: http://www.gmx.net/de/go/freephone

From hartmut_henkel at gmx.de  Mon Aug  8 12:26:15 2011
From: hartmut_henkel at gmx.de (Hartmut Henkel)
Date: Mon, 08 Aug 2011 12:26:15 +0200
Subject: [luatex] img.scan segfault
In-Reply-To: <1rb3h8-0q.ln1@gryffindor.hogwarts>
References: <1rb3h8-0q.ln1@gryffindor.hogwarts>
Message-ID: <20110808102615.28960@gmx.net>

> But it segfaults if I use img.scan in a pure lua file and
> run it with --onlylua:
> 
>   a = img.scan({filename='foo.jpg'}) 
> 
> I have only this one line in the lua file. Do I need to import
> additional modules?

confirmed. The img.*() functions are relying on the existence of the internal pdf structure (among others probably), and that's missing yet if luatex is not in pdf/dvi mode, Not clear what to do: Activating img.*() also for Lua-only mode may require quite some changes, with the only (?) net effect that one can use luatex to get some image dimensions. Easier would be just to disable the img lib...

Regards, Hartmut

-- 
NEU: FreePhone - 0ct/min Handyspartarif mit Geld-zur?ck-Garantie!		
Jetzt informieren: http://www.gmx.net/de/go/freephone

From patrick at gundla.ch  Tue Aug  9 12:35:07 2011
From: patrick at gundla.ch (Patrick Gundlach)
Date: Tue, 9 Aug 2011 12:35:07 +0200
Subject: [luatex] LuaTeX font sampler
Message-ID: <65699DA2-37E5-4BC4-BC14-0E39B77E9FC0@gundla.ch>

Hi,

inspired by a recent discussion on tex.se I have written a small plain TeX font sample creator.

http://wiki.luatex.org/index.php/Fontsampler

It's a wiki, so please feel free to edit this!

Patrick




From zappathustra at free.fr  Tue Aug  9 14:08:44 2011
From: zappathustra at free.fr (Paul Isambert)
Date: Tue, 09 Aug 2011 14:08:44 +0200
Subject: [luatex] Behavior of slnunicode.utf8.match().
In-Reply-To: <E1AF9F63-6E6D-4A40-9640-8D470FCFD1A3@gundla.ch>
References: <1312788377.4e3f8f998076a@imp.free.fr>
 <E1AF9F63-6E6D-4A40-9640-8D470FCFD1A3@gundla.ch>
Message-ID: <1312891724.4e41234c26c11@imp.free.fr>

Hello Patrick,

Thanks for your answer.

Selon Patrick Gundlach <patrick at gundla.ch>:

> So I'd consider this correct behavior, but I have had some discussion on this
> before where I am pretty alone with my opinion... :)
>
> http://tug.org/pipermail/luatex/2010-March/thread.html#1242

Well, I don't know much on the subject -- and I don't have the courage to read
the entire thread, but the behavior does seem strange to me, so you won't feel
less alone :)

Best,
Paul

From Arno.Trautmann at gmx.de  Tue Aug  9 15:34:02 2011
From: Arno.Trautmann at gmx.de (Arno Trautmann)
Date: Tue, 09 Aug 2011 15:34:02 +0200
Subject: [luatex] LuaTeX font sampler
In-Reply-To: <65699DA2-37E5-4BC4-BC14-0E39B77E9FC0@gundla.ch>
References: <65699DA2-37E5-4BC4-BC14-0E39B77E9FC0@gundla.ch>
Message-ID: <4E41374A.7080704@gmx.de>

Hi,

Patrick Gundlach wrote:
> Hi,
>
> inspired by a recent discussion on tex.se I have written a small plain TeX font sample creator.
>
> http://wiki.luatex.org/index.php/Fontsampler
>
> It's a wiki, so please feel free to edit this!

Great, that's just what I wanted to ask for in some weeks ? however, I 
have a problem with that code. I let it run over my system font 
directory which is quite large, and LuaTeX did not manage to typeset the 
whole thing for over one hour. What I see is that LuaTeX eats memory 
until that is full (about 850 MB of 1GB total), then uses about 650 MB 
of 1GB of swap and then it just seems to swap all the time, telling from 
the noise of my hard drive. ?time luatex ?? results in:

56.37s user 32.71s system 2% cpu 1:12:27.77 total

so the most time, my machine seems to be busy swapping. Is there any way 
to reduce the memory cost?

cheers
Arno

From mpg at elzevir.fr  Tue Aug  9 19:08:14 2011
From: mpg at elzevir.fr (=?ISO-8859-1?Q?Manuel_P=E9gouri=E9-Gonnard?=)
Date: Tue, 09 Aug 2011 19:08:14 +0200
Subject: [luatex] Behavior of slnunicode.utf8.match().
In-Reply-To: <1312891724.4e41234c26c11@imp.free.fr>
References: <1312788377.4e3f8f998076a@imp.free.fr>
 <E1AF9F63-6E6D-4A40-9640-8D470FCFD1A3@gundla.ch>
 <1312891724.4e41234c26c11@imp.free.fr>
Message-ID: <4E41697E.3060800@elzevir.fr>

Le 09/08/2011 14:08, Paul Isambert a ?crit :
>> http://tug.org/pipermail/luatex/2010-March/thread.html#1242
> 
> Well, I don't know much on the subject -- and I don't have the courage to read
> the entire thread, but the behavior does seem strange to me, so you won't feel
> less alone :)
> 
As far as I remember, the conclusion of the thread was that yes, this is strange
and hardly consistent (or a least you need some education about what kind of
consistency to expect, see below), but it's a design principle of slnunicode,
mainly for simplicity/performance reasons.

My personal, certainly flawed, recollection of the design principle is that for
length and counting, the unit is always the byte, whereas for the rest the
working unit is the (possibly multibyte) character.

This is somewhat consistent with your tests:

% Returns "?" (two bytes):
tex.print(slnunicode.utf8.match("??", ".", 1)

Start at byte one, which is the beginning of a two-byte sequence, everything's fine.

% Returns invalid (one-byte) character:
tex.print(slnunicode.utf8.match("??", ".", 2)

Start at byte two, which is in the middle of a character, expect breakage.

% Returns "?" (two bytes):
tex.print(slnunicode.utf8.match("??", ".", 3)

Third byte is the first of the second character, fine.

% Returns invalid (one-byte) character:
tex.print(slnunicode.utf8.match("??", ".", 4)

Same as above with 2.

Manuel.

From mpg at elzevir.fr  Tue Aug  9 19:20:32 2011
From: mpg at elzevir.fr (=?ISO-8859-1?Q?Manuel_P=E9gouri=E9-Gonnard?=)
Date: Tue, 09 Aug 2011 19:20:32 +0200
Subject: [luatex] external modules from the (Linux) distro
Message-ID: <4E416C60.9020609@elzevir.fr>

Hi,

I installed a JSON lua module using the tools of my distro (aptitude install
liblua5.1-json) and it (obviously) works fine with stock lua.

However, I can't easily use it with LuaTeX (tested in texlua mode, kpse not
initialised):

  module 'json' not found:
	no field package.preload['json']
	no file './json.lua'
	no file '/usr/local/share/lua/5.1/json.lua'
	no file '/usr/local/share/lua/5.1/json/init.lua'
	no file '/usr/local/lib/lua/5.1/json.lua'
	no file '/usr/local/lib/lua/5.1/json/init.lua'
	no file './json.so'
	no file '/usr/local/lib/lua/5.1/json.so'
	no file '/usr/local/lib/lua/5.1/loadall.so'

The file is there: /usr/share/lua/5.1/json.lua

Probably if I had installed it myself using luarocks it would be in
/usr/local/share and eveything would work, which is great, but it's a bit
frustrating that it doesn't work when the file is installed in /usr/share. For
reference, the search path of my (Debian) stock Lua is as follows:

	no field package.preload['nonesuch']
	no file './nonesuch.lua'
	no file '/usr/local/share/lua/5.1/nonesuch.lua'
	no file '/usr/local/share/lua/5.1/nonesuch/init.lua'
	no file '/usr/local/lib/lua/5.1/nonesuch.lua'
	no file '/usr/local/lib/lua/5.1/nonesuch/init.lua'
	no file '/usr/share/lua/5.1/nonesuch.lua'
	no file '/usr/share/lua/5.1/nonesuch/init.lua'
	no file './nonesuch.so'
	no file '/usr/local/lib/lua/5.1/nonesuch.so'
	no file '/usr/lib/lua/5.1/nonesuch.so'
	no file '/usr/local/lib/lua/5.1/loadall.so'

May I suggest to make texlua's search path look this way too? It looks quite
reasonable and universal (as opposed to distro-specific) this way.

Manuel.

PS: I'm aware I can fix package.path in my script before using require, I just
think it would be better if it worked OOTB.


From taco at elvenkind.com  Tue Aug  9 19:33:04 2011
From: taco at elvenkind.com (Taco Hoekwater)
Date: Tue, 9 Aug 2011 19:33:04 +0200
Subject: [luatex] external modules from the (Linux) distro
In-Reply-To: <4E416C60.9020609@elzevir.fr>
References: <4E416C60.9020609@elzevir.fr>
Message-ID: <03A4B458-6BC4-43DD-BCA4-49D68EEBCDB6@elvenkind.com>

Hi Manuel,


On Aug 9, 2011, at 7:20 PM, Manuel P?gouri?-Gonnard <mpg at elzevir.fr> wrote:

> Hi,
> 
> I installed a JSON lua module using the tools of my distro (aptitude install
> liblua5.1-json) and it (obviously) works fine with stock lua.
> 
> However, I can't easily use it with LuaTeX (tested in texlua mode, kpse not
> initialised):
> 
>  module 'json' not found:
>    no field package.preload['json']
>    no file './json.lua'
>    no file '/usr/local/share/lua/5.1/json.lua'
>    no file '/usr/local/share/lua/5.1/json/init.lua'
>    no file '/usr/local/lib/lua/5.1/json.lua'
>    no file '/usr/local/lib/lua/5.1/json/init.lua'
>    no file './json.so'
>    no file '/usr/local/lib/lua/5.1/json.so'
>    no file '/usr/local/lib/lua/5.1/loadall.so'
> 
> The file is there: /usr/share/lua/5.1/json.lua
> 
> Probably if I had installed it myself using luarocks it would be in
> /usr/local/share and eveything would work, which is great, but it's a bit
> frustrating that it doesn't work when the file is installed in /usr/share. For
> reference, the search path of my (Debian) stock Lua is as follows:
> 
>    no field package.preload['nonesuch']
>    no file './nonesuch.lua'
>    no file '/usr/local/share/lua/5.1/nonesuch.lua'
>    no file '/usr/local/share/lua/5.1/nonesuch/init.lua'
>    no file '/usr/local/lib/lua/5.1/nonesuch.lua'
>    no file '/usr/local/lib/lua/5.1/nonesuch/init.lua'
>    no file '/usr/share/lua/5.1/nonesuch.lua'
>    no file '/usr/share/lua/5.1/nonesuch/init.lua'
>    no file './nonesuch.so'
>    no file '/usr/local/lib/lua/5.1/nonesuch.so'
>    no file '/usr/lib/lua/5.1/nonesuch.so'
>    no file '/usr/local/lib/lua/5.1/loadall.so'
> 
> May I suggest to make texlua's search path look this way too? It looks quite
> reasonable and universal (as opposed to distro-specific) this way.

Package.path in luatex is initialized according to the stock lua distribution's default. And by that I mean the stock lua from www.lua.org, not the patched debian version ... and I am sure you see where this is going ...

> PS: I'm aware I can fix package.path in my script before using require, I just
> think it would be better if it worked OOTB.

... and it would have worked OOTB, if Debian had not altered the lua settings. 

Anyway, have you tried setting LUA_PATH in the environment? If that does not work, then we can think of altering luatex itself.

Best wishes,
Taco
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://tug.org/pipermail/luatex/attachments/20110809/d48eb28b/attachment.html>

From mailing_list at arcor.de  Tue Aug  9 20:35:45 2011
From: mailing_list at arcor.de (Stephan Hennig)
Date: Tue, 09 Aug 2011 20:35:45 +0200
Subject: [luatex] Behavior of slnunicode.utf8.match().
In-Reply-To: <4E41697E.3060800@elzevir.fr>
References: <1312788377.4e3f8f998076a@imp.free.fr>
 <E1AF9F63-6E6D-4A40-9640-8D470FCFD1A3@gundla.ch>
 <1312891724.4e41234c26c11@imp.free.fr> <4E41697E.3060800@elzevir.fr>
Message-ID: <4E417E01.40403@arcor.de>

schrieb Manuel P?gouri?-Gonnard:

> As far as I remember, the conclusion of the thread was that yes,
> this is strange and hardly consistent (or a least you need some
> education about what kind of consistency to expect, see below),

The paragraph Paul referred to in the OP was adapted during the
discussion in an attempt (by me) to describe the inconsistent behaviour.
 Obviously, that description still doesn't cover all cases where
slnunicode goes byte-centric.  I'll try to come up with a better
description, if no-one beats me to that (probably not before the end of
this month).


> My personal, certainly flawed, recollection of the design principle
> is that for length and counting, the unit is always the byte, whereas
> for the rest the working unit is the (possibly multibyte) character.

Sounds good (and more general), except that I'd replace 'length' by
'position', because I think unicode.utf8.len is indeed UTF-8 aware (but
I didn't check now).

To cite the last sentence from the current paragraph:

> The slnunicode library will be replaced by an internal Unicode
> library in a future LuaTeX version.

Taco, can you give a guess about the number of that "future LuaTeX version"?

Best regards,
Stephan Hennig

From mpg at elzevir.fr  Tue Aug  9 23:53:38 2011
From: mpg at elzevir.fr (=?UTF-8?B?TWFudWVsIFDDqWdvdXJpw6ktR29ubmFyZA==?=)
Date: Tue, 09 Aug 2011 23:53:38 +0200
Subject: [luatex] external modules from the (Linux) distro
In-Reply-To: <03A4B458-6BC4-43DD-BCA4-49D68EEBCDB6@elvenkind.com>
References: <4E416C60.9020609@elzevir.fr>
 <03A4B458-6BC4-43DD-BCA4-49D68EEBCDB6@elvenkind.com>
Message-ID: <4E41AC62.8060201@elzevir.fr>

Hi Taco,

Le 09/08/2011 19:33, Taco Hoekwater a ?crit :
>> May I suggest to make texlua's search path look this way too? It looks quite
>> reasonable and universal (as opposed to distro-specific) this way.
> 
> Package.path in luatex is initialized according to the stock lua
> distribution's default. And by that I mean the stock lua from www.lua.org,
> not the patched debian version ... and I am sure you see where this is going
> ...
> 
Right, I see.

I think the default of the stock lua (from lua.org) is reasonable for stock lua
since, if you're compiling Lua yourself, then you're quite likely to install it
in /usr/local and quite unlikely to install anything Lua-related from distro
packages. OTOH, when you get packages from a distribution, it makes a lot of
sense to have them in /usr and keep /usr/local for local stuff; actually I think
it's what the FHS says.

>> PS: I'm aware I can fix package.path in my script before using require, I just
>> think it would be better if it worked OOTB.
> 
> ... and it would have worked OOTB, if Debian had not altered the lua settings. 
> 
Well, it is my opinion that altering the settings this way is the right thing to
do for a distro, but I can see your point. (And since I've never seriously used
anything else than Debian, I admit my opinion is probably biased.)

> Anyway, have you tried setting LUA_PATH in the environment? If that does not
> work, then we can think of altering luatex itself.
> 
Setting LUA_PATH works like a charm. Thanks for the suggestion, I completely
forgot it.

Manuel.

From zappathustra at free.fr  Wed Aug 10 08:28:07 2011
From: zappathustra at free.fr (Paul Isambert)
Date: Wed, 10 Aug 2011 08:28:07 +0200
Subject: [luatex] Behavior of slnunicode.utf8.match().
In-Reply-To: <4E417E01.40403@arcor.de>
References: <1312788377.4e3f8f998076a@imp.free.fr>
 <E1AF9F63-6E6D-4A40-9640-8D470FCFD1A3@gundla.ch>
 <1312891724.4e41234c26c11@imp.free.fr> <4E41697E.3060800@elzevir.fr>
 <4E417E01.40403@arcor.de>
Message-ID: <1312957687.4e4224f78317d@imp.free.fr>

Selon Stephan Hennig <mailing_list at arcor.de>:

> schrieb Manuel P?gouri?-Gonnard:
> > My personal, certainly flawed, recollection of the design principle
> > is that for length and counting, the unit is always the byte, whereas
> > for the rest the working unit is the (possibly multibyte) character.
>
> Sounds good (and more general), except that I'd replace 'length' by
> 'position', because I think unicode.utf8.len is indeed UTF-8 aware (but
> I didn't check now).


I see; not consistent to me, but at least it explains some things ... except
"slnunicode.sub("??", 2, 2)" returns "?" and not the second byte of "?", so
obviously there are exceptions. (Or did I get something wrong again?)


> To cite the last sentence from the current paragraph:
>
> > The slnunicode library will be replaced by an internal Unicode
> > library in a future LuaTeX version.
>
> Taco, can you give a guess about the number of that "future LuaTeX version"?

I'm waiting for that too!

Best,
Paul

From taco at elvenkind.com  Wed Aug 10 09:11:25 2011
From: taco at elvenkind.com (Taco Hoekwater)
Date: Wed, 10 Aug 2011 09:11:25 +0200
Subject: [luatex] Behavior of slnunicode.utf8.match().
In-Reply-To: <1312957687.4e4224f78317d@imp.free.fr>
References: <1312788377.4e3f8f998076a@imp.free.fr>
 <E1AF9F63-6E6D-4A40-9640-8D470FCFD1A3@gundla.ch>
 <1312891724.4e41234c26c11@imp.free.fr> <4E41697E.3060800@elzevir.fr>
 <4E417E01.40403@arcor.de> <1312957687.4e4224f78317d@imp.free.fr>
Message-ID: <4E422F1D.2030903@elvenkind.com>

On 08/10/2011 08:28 AM, Paul Isambert wrote:
>>
>>> The slnunicode library will be replaced by an internal Unicode
>>> library in a future LuaTeX version.
>>
>> Taco, can you give a guess about the number of that "future LuaTeX version"?
>
> I'm waiting for that too!

Probably in 0.90 (I am aiming for 0.80, but one has to be realistic in
such things, and slnunicode may be weird, but it is not totally broken).

Best wishes,
Taco

From patrick at gundla.ch  Wed Aug 10 09:38:23 2011
From: patrick at gundla.ch (Patrick Gundlach)
Date: Wed, 10 Aug 2011 09:38:23 +0200
Subject: [luatex] Behavior of slnunicode.utf8.match().
In-Reply-To: <1312957687.4e4224f78317d@imp.free.fr>
References: <1312788377.4e3f8f998076a@imp.free.fr>
 <E1AF9F63-6E6D-4A40-9640-8D470FCFD1A3@gundla.ch>
 <1312891724.4e41234c26c11@imp.free.fr> <4E41697E.3060800@elzevir.fr>
 <4E417E01.40403@arcor.de> <1312957687.4e4224f78317d@imp.free.fr>
Message-ID: <CF41FB14-1416-4820-8EB5-9DBC993D7934@gundla.ch>

Hi Paul,

> I see; not consistent to me, but at least it explains some things ... except
> "slnunicode.sub("??", 2, 2)" returns "?" and not the second byte of "?", so
> obviously there are exceptions. (Or did I get something wrong again?)

No, no exceptions. Just "." is "bytes" and everything else is "characters". 


The idea is IMO the following: 

* Lua strings can deal with binary data. With the functions find,match,gmatch and gsub the . in the patterns is for "one byte", everything else (like %d) uses character classes and is for characters (or digits or punctuation or?). With this, you can parse any file format out there rather easily.

* slnunicode is a drop in replacement for the string functions. The proof for me is that the function names and the arguments are identical.

* because it is a drop in replacement, it has to behave exactly like the regular string functions, esp. regarding the binary data. That means . is one byte and %x is a character class, but taking the utf8 byte sequence into account.

* all functions that do not use patterns deal with utf8 byte sequences (i.e. len,lower,reverse,sub,upper). Those functions that deal with patterns make the distinction between utf8 bytes (character classes) and single bytes (the dot). These are find, match, gmatch and gsub. I don't know about byte and char, but I guess these belong to the former class, I don't want to look this up now.

And I don't think replacing slnunicode with something else is really necessary, because if it isn't broken, don't fix it.

But I shut up now unless asked again.

Patrick



From mpg at elzevir.fr  Thu Aug 11 23:45:27 2011
From: mpg at elzevir.fr (=?ISO-8859-1?Q?Manuel_P=E9gouri=E9-Gonnard?=)
Date: Thu, 11 Aug 2011 23:45:27 +0200
Subject: [luatex] external modules from the (Linux) distro
In-Reply-To: <4E416C60.9020609@elzevir.fr>
References: <4E416C60.9020609@elzevir.fr>
Message-ID: <4E444D77.7010802@elzevir.fr>

Hi again,

Le 09/08/2011 19:20, Manuel P?gouri?-Gonnard a ?crit :
> I installed a JSON lua module using the tools of my distro (aptitude install
> liblua5.1-json) and it (obviously) works fine with stock lua.
> 
> However, I can't easily use it with LuaTeX (tested in texlua mode, kpse not
> initialised):
> 
On a related note, I just ran some tests with kpse initialised and observed that
the kpse loader completely overrides the standard loader. It is obviously doable
(and easy) to reimplement the standard package.path-based searcher in Lua and
insert it in the package.loaders table, but it's a pity since this loader
already exists in LuaTeX.

In other words, unless I'm mistaken the current logic for package.loaders[2] is
the following:

if (kpse not initialised)
	/* use standard loader and return */
/* try using kpse and return */

May I suggest to change that to:

if (kpse initialised) {
	/* try using kpse */
	if (it worked)
		/* return */
}
/* use standard loader and return */

(And similarly for package.loaders[3] and [4].)

Thanks,
Manuel.


PS: this is sort of orthogonal to my previous post, which was about the value of
package.(c)path, while this one is about whether this value is used or not when
kpse is initialised.

From taco at elvenkind.com  Fri Aug 12 08:50:26 2011
From: taco at elvenkind.com (Taco Hoekwater)
Date: Fri, 12 Aug 2011 08:50:26 +0200
Subject: [luatex] external modules from the (Linux) distro
In-Reply-To: <4E444D77.7010802@elzevir.fr>
References: <4E416C60.9020609@elzevir.fr> <4E444D77.7010802@elzevir.fr>
Message-ID: <9C9FED45-069B-4335-A79C-D2DDEA3BDD4A@elvenkind.com>


On Aug 11, 2011, at 11:45 PM, Manuel P?gouri?-Gonnard wrote:

> On a related note, I just ran some tests with kpse initialised and observed that
> the kpse loader completely overrides the standard loader. It is obviously doable
> (and easy) to reimplement the standard package.path-based searcher in Lua and
> insert it in the package.loaders table, but it's a pity since this loader
> already exists in LuaTeX.
> 
> In other words, unless I'm mistaken the current logic for package.loaders[2] is
> the following:
> 
> if (kpse not initialised)
> 	/* use standard loader and return */
> /* try using kpse and return */
> 

Yes, pretty much. You proposal sounds useful, so I've assigned it to myself:

   http://tracker.luatex.org/view.php?id=707

Best wishes,
Taco



From dpl at sun.ac.za  Thu Aug 18 22:18:55 2011
From: dpl at sun.ac.za (Dirk Laurie)
Date: Thu, 18 Aug 2011 22:18:55 +0200
Subject: [luatex] fontspec.sty
Message-ID: <20110818201855.GA13285@rondloper>

On my installation LuaTeX can't use fontspec.sty, because it requires
XeTeX.

When browsing the manual for references to XeTeX, one finds three:

    the extension to full Unicode (the \U prefix) is compatible with XETEX.

    New primitives that are compatible with XETEX:

    consistent with its changed meaning in XETEX. 

This seems to suggest that compatibility with XeTeX is a design goal.

True or false?

Dirk

From khaledhosny at eglug.org  Thu Aug 18 23:23:15 2011
From: khaledhosny at eglug.org (Khaled Hosny)
Date: Thu, 18 Aug 2011 23:23:15 +0200
Subject: [luatex] fontspec.sty
In-Reply-To: <20110818201855.GA13285@rondloper>
References: <20110818201855.GA13285@rondloper>
Message-ID: <20110818212315.GA18015@khaled-laptop>

On Thu, Aug 18, 2011 at 10:18:55PM +0200, Dirk Laurie wrote:
> On my installation LuaTeX can't use fontspec.sty, because it requires
> XeTeX.

It is the other way around, your installation of fontspec is too old and
does not support luatex. I don't know what version you are using, but
you need texlive 2010 at least for that combination to work.

> When browsing the manual for references to XeTeX, one finds three:
> 
>     the extension to full Unicode (the \U prefix) is compatible with XETEX.
> 
>     New primitives that are compatible with XETEX:
> 
>     consistent with its changed meaning in XETEX. 
> 
> This seems to suggest that compatibility with XeTeX is a design goal.

This is mostly related to OpenType math work and not related to your
issue.

Regards,
 Khaled

-- 
 Khaled Hosny
 Egyptian
 Arab

From luatex at nililand.de  Tue Aug 23 10:16:59 2011
From: luatex at nililand.de (Ulrike Fischer)
Date: Tue, 23 Aug 2011 10:16:59 +0200
Subject: [luatex] Problem with latin modern fonts
Message-ID: <1eqqer37cxopi.dlg@nililand.de>


If I run the following document with lualatex (or xelatex) and then
copy and paste the text from the pdf (in adobe reader 8.1.3)
everything is fine. But if I uncomment the line with
^^^^006f^^^^0308 (o + dieresis) then the pdf still looks fine but
all accents disappear when I try to copy the text. I get this:

aous AOU e e
o.

Only characters on the same page as the ^^^^006f^^^^0308 are
affected.

It looks like a latin modern bug for me (the effect disappears with
arial). Can someone confirm it? (I'm using the latin modern font in
miktex, version seems to be 2.004 from 2009)

\documentclass{book}
\usepackage{fontspec}
%\setmainfont{Arial}
\begin{document}

???? ??? ? ? 

%^^^^006f^^^^0308

\end{document}




-- 
Ulrike Fischer 


From heiko.oberdiek at googlemail.com  Tue Aug 23 11:45:52 2011
From: heiko.oberdiek at googlemail.com (Heiko Oberdiek)
Date: Tue, 23 Aug 2011 11:45:52 +0200
Subject: [luatex] Problem with latin modern fonts
In-Reply-To: <1eqqer37cxopi.dlg@nililand.de>
References: <1eqqer37cxopi.dlg@nililand.de>
Message-ID: <20110823094552.GA17367@oberdiek.my-fqdn.de>

On Tue, Aug 23, 2011 at 10:16:59AM +0200, Ulrike Fischer wrote:

> If I run the following document with lualatex (or xelatex) and then
> copy and paste the text from the pdf (in adobe reader 8.1.3)
> everything is fine. But if I uncomment the line with
> ^^^^006f^^^^0308 (o + dieresis) then the pdf still looks fine but
> all accents disappear when I try to copy the text. I get this:
> 
> aous AOU e e
> o.
> 
> Only characters on the same page as the ^^^^006f^^^^0308 are
> affected.
> 
> It looks like a latin modern bug for me (the effect disappears with
> arial). Can someone confirm it? (I'm using the latin modern font in
> miktex, version seems to be 2.004 from 2009)
> 
> \documentclass{book}
> \usepackage{fontspec}
> %\setmainfont{Arial}
> \begin{document}
> 
> ???? ??? ? ? 
> 
> %^^^^006f^^^^0308
> 
> \end{document}

Using TL 2011:
  LuaTeX beta-0.70.1-2011061416 (rev 4277)
  Latin Modern 2.004

I get a correct first line, but an "o" without dieresis at the end:

AR7/Linux:
  ???? ??? ? ?
  o
pdftotext 3.00:
  1 ???? ??? ? ? o
ps2ascii (ghostscript 9.04):
  *** Warning: composite font characters dumped without decoding.
  And the output is garbled, because the entry /ToUnicode is not
  evaluated.

In the pdf file I found (\pagestyle{empty}):
  /F16 9.96264 Tf 1 0 0 1 121.813 708.054 Tm
  [<00A001BA0243013D>-333<009F>28<01B90
  242>-333<00FB>-333<0115>]TJ
  1 0 0 1 121.813 696.099 Tm [<005100EE>]TJ

And the mappings:
  11 beginbfchar
  <0051> <006F>
  <009F> <00C4>
  <00A0> <00E4>
  <00EE> <0308>
  <00FB> <00E9>
  <0115> <00E8>
  <013D> <00DF>
  <01B9> <00D6>
  <01BA> <00F6>
  <0242> <00DC>
  <0243> <00FC>

* Why are the glyph positions moved thus that each program that
  doesn't look into /ToUnicode will fail with sensless output?

* The latter composition "o+dieresis" is not replaced by the
  glyph "odieresis". In the documentation of LuaTeX I found:
| 2.3 UNICODE text support
| ...
| Normalization of the Unicode input can be handled by a macro package
| during callback processing (this will be explained in section 4.1.2).

  This seems not be done by fontspec. Can this enabled/supported by fontspec
  or does another package exists for Unicode normalization?

Yours sincerely
  Heiko Oberdiek

From p.stephani2 at googlemail.com  Sun Aug 28 19:34:25 2011
From: p.stephani2 at googlemail.com (Philipp Stephani)
Date: Sun, 28 Aug 2011 19:34:25 +0200
Subject: [luatex] Problem with latin modern fonts
In-Reply-To: <20110823094552.GA17367@oberdiek.my-fqdn.de>
References: <1eqqer37cxopi.dlg@nililand.de>
 <20110823094552.GA17367@oberdiek.my-fqdn.de>
Message-ID: <CAArVCkS3GzWj8iSz+=vfuXCWi76HSK40tpA_VyfvC2THrLmpKg@mail.gmail.com>

2011/8/23 Heiko Oberdiek <heiko.oberdiek at googlemail.com>:
> * The latter composition "o+dieresis" is not replaced by the
> ?glyph "odieresis". In the documentation of LuaTeX I found:
> | 2.3 UNICODE text support
> | ...
> | Normalization of the Unicode input can be handled by a macro package
> | during callback processing (this will be explained in section 4.1.2).
>
> ?This seems not be done by fontspec. Can this enabled/supported by fontspec
> ?or does another package exists for Unicode normalization?

Such a package would have to include an extension module to wrap the
ICU library (unless somebody wants to reinvent the wheel and implement
the normalization algorithms in Lua). In fact, it is somewhat common
to normalize to form D on input to simplify processing. This would
break \catcode and the likes (which are rather ill-designed anyway
because they act on single code points instead of sequences). But even
without normalization decomposed sequences should just work. I think
this is an engine/backend problem.


From khaledhosny at eglug.org  Sun Aug 28 19:47:56 2011
From: khaledhosny at eglug.org (Khaled Hosny)
Date: Sun, 28 Aug 2011 19:47:56 +0200
Subject: [luatex] Problem with latin modern fonts
In-Reply-To: <CAArVCkS3GzWj8iSz+=vfuXCWi76HSK40tpA_VyfvC2THrLmpKg@mail.gmail.com>
References: <1eqqer37cxopi.dlg@nililand.de>
 <20110823094552.GA17367@oberdiek.my-fqdn.de>
 <CAArVCkS3GzWj8iSz+=vfuXCWi76HSK40tpA_VyfvC2THrLmpKg@mail.gmail.com>
Message-ID: <20110828174756.GA2658@khaled-laptop>

On Sun, Aug 28, 2011 at 07:34:25PM +0200, Philipp Stephani wrote:
> 2011/8/23 Heiko Oberdiek <heiko.oberdiek at googlemail.com>:
> > * The latter composition "o+dieresis" is not replaced by the
> > ?glyph "odieresis". In the documentation of LuaTeX I found:
> > | 2.3 UNICODE text support
> > | ...
> > | Normalization of the Unicode input can be handled by a macro package
> > | during callback processing (this will be explained in section 4.1.2).
> >
> > ?This seems not be done by fontspec. Can this enabled/supported by fontspec
> > ?or does another package exists for Unicode normalization?
> 
> Such a package would have to include an extension module to wrap the
> ICU library (unless somebody wants to reinvent the wheel and implement
> the normalization algorithms in Lua).

I think ConTeXt already does (or parts of it). Normalisation is mostly
about data table, there is no much code that would justify depending on
a beast like ICU. IMO normalisation in context of luatex should be done
very close to the OpenType engine to allow making informed guesses about
what form would give the user best output which depends, to some extent,
on font features.

Regards,
 Khaled

-- 
 Khaled Hosny
 Egyptian
 Arab

From khaledhosny at eglug.org  Sun Aug 28 20:28:10 2011
From: khaledhosny at eglug.org (Khaled Hosny)
Date: Sun, 28 Aug 2011 20:28:10 +0200
Subject: [luatex] BiDi implementation in lua
Message-ID: <20110828182809.GB2658@khaled-laptop>

I've been working on an implementation of Unicode Bidirectional
Algorithm[1] purely in lua for quite sometime now, the code started as
translation of an implementation written in C but have evolved since
then.

The algorithm part is more or less done, I've, informally,
verified that relevant rules are implemented correctly (some optional
rules make no sense in the ConTeXt of luatex). The interface with
luatex's node list is the trickiest part, but so far I think the result
is acceptable now, though I still encounter some mysterious results
occasionally that I've no explanation for.

The code is macro package neutral as far as it goes, and there is
currently packages for ConTeXt, plain and LaTeX though only ConTeXt was
tested with real world documents.

The code is located on github[2]. There are some sample documents (a
ConTeXt demo is at the end of the t-bidi.tex file, processing it with
context will run it).

There are some issue that I want to solve, including handling of math
mode a providing a real interface with more options for customisable
parts and writing some documentation.

The LaTeX package is called luabidi but there already a package with
that name and bidi is already taken, I'm still thinking of another name
(originally I named it luadirection as I had that ambitious goal of
supporting vertical text as well, but I'm now aiming at bidi in
horizontal contexts only).

[1] http://www.unicode.org/reports/tr9/
[2] https://github.com/khaledhosny/luadirections

Regards,
 Khaled

-- 
 Khaled Hosny
 Egyptian
 Arab

From arthur.reutenauer at normalesup.org  Wed Aug 31 01:09:49 2011
From: arthur.reutenauer at normalesup.org (Arthur Reutenauer)
Date: Wed, 31 Aug 2011 00:09:49 +0100
Subject: [luatex] Problem with latin modern fonts
In-Reply-To: <20110828174756.GA2658@khaled-laptop>
References: <1eqqer37cxopi.dlg@nililand.de>
 <20110823094552.GA17367@oberdiek.my-fqdn.de>
 <CAArVCkS3GzWj8iSz+=vfuXCWi76HSK40tpA_VyfvC2THrLmpKg@mail.gmail.com>
 <20110828174756.GA2658@khaled-laptop>
Message-ID: <20110830230949.GW13532@phare.normalesup.org>

> I think ConTeXt already does (or parts of it).

  I also wrote code for normalisation as part of my Google Summer of
Code project in 2008 (independently from Hans), it's really very short.
The necessary Unicode data is taken from ConTeXt's char-def.lua, so you
may extract the 200-300 lines of Lua code from this, and take a more
recent char-def.lua from the ConTeXt distribution.

  See http://code.google.com/p/google-summer-of-code-2008-tex/downloads/list

	Arthur

From jorssen.leraincy at free.fr  Wed Aug 31 22:57:01 2011
From: jorssen.leraincy at free.fr (Christophe Jorssen)
Date: Wed, 31 Aug 2011 22:57:01 +0200
Subject: [luatex] format creation with tikz included failed
Message-ID: <CAN1usO386R-J6SKS9QXRbVm8QE3ith-2jPJCr2b98+CZat9bzQ@mail.gmail.com>

Hello all,

I'm trying to create a LaTeX-based format with tikz preloaded.

I run

luatex --ini tikzlualatex.ini

with

% tikzlualatex.ini (adapted from lualatex.ini in texlive 2011)
\input lualatexiniconfig.tex
\input pdftexconfig.tex
\scrollmode
\let\DUMP\dump
\let\dump\relax
\input latex.ltx
\input lualatex-patch-kernel.tex
\input lualatexquotejobname.tex
\input lualatex-reset-codes.tex
\input luatex-unicode-letters.tex
\RequirePackage{tikz}
% The following is required by pdftexcmds, read by graphicx, read by
pgfcore.sty, read by tikz.sty
% Maybe I missed some other lua snippets not included in the format?
\everyjob={%
  \csname pdftexcmds at directlua\endcsname{%
    require("oberdiek.pdftexcmds")}}
\let\dump\DUMP
\let\DUMP\undefined
\dump
\endinput
% end tikzlualatex.ini

It works fine.

Then, when I compile test.tex with

luatex --fmt=tikzlualatex test.tex

I get

PANIC: unprotected error in call to Lua API (object in use)

% test.tex
\documentclass{article}
\begin{document}
Test
\end{document}
%end test.tex

% test.log
This is LuaTeX, Version beta-0.70.1-2011061416 (rev 4277)
(format=tikzlualatex 2011.8.31)  31 AUG 2011 22:38
 restricted \write18 enabled.
**test.tex
(./test.tex (/usr/local/texlive/2011/texmf-dist/tex/latex/base/article.cls
Document Class: article 2007/10/19 v1.4h Standard LaTeX document class
(/usr/local/texlive/2011/texmf-dist/tex/latex/base/size10.clo
File: size10.clo 2007/10/19 v1.4h Standard LaTeX file (size option)
)
\c at part=\count99
\c at section=\count100
\c at subsection=\count101
\c at subsubsection=\count102
\c at paragraph=\count103
\c at subparagraph=\count104
\c at figure=\count105
\c at table=\count106
\abovecaptionskip=\skip41
\belowcaptionskip=\skip42
\bibindent=\dimen147
) (./test.aux)
LaTeX Font Info:    Checking defaults for OML/cmm/m/it on input line 2.
LaTeX Font Info:    ... okay on input line 2.
LaTeX Font Info:    Checking defaults for T1/cmr/m/n on input line 2.
LaTeX Font Info:    ... okay on input line 2.
LaTeX Font Info:    Checking defaults for OT1/cmr/m/n on input line 2.
LaTeX Font Info:    ... okay on input line 2.
LaTeX Font Info:    Checking defaults for OMS/cmsy/m/n on input line 2.
LaTeX Font Info:    ... okay on input line 2.
LaTeX Font Info:    Checking defaults for OMX/cmex/m/n on input line 2.
LaTeX Font Info:    ... okay on input line 2.
LaTeX Font Info:    Checking defaults for U/cmr/m/n on input line 2.
LaTeX Font Info:    ... okay on input line 2.

ABD: EveryShipout initializing macros
(/usr/local/texlive/2011/texmf-dist/tex/context/base/supp-pdf.mkii
[Loading MPS to PDF converter (version 2006.09.02).]
\scratchcounter=\count107
\scratchdimen=\dimen148
\scratchbox=\box35
\nofMPsegments=\count108
\nofMParguments=\count109
\everyMPshowfont=\toks25
\MPscratchCnt=\count110
\MPscratchDim=\dimen149
\MPnumerator=\count111
\makeMPintoPDFobject=\count112
\everyMPtoPDFconversion=\toks26
) (/usr/local/texlive/2011/texmf-dist/tex/latex/oberdiek/epstopdf-base.sty
Package: epstopdf-base 2010/02/09 v2.5 Base part for package epstopdf

(/usr/local/texlive/2011/texmf-dist/tex/latex/oberdiek/grfext.sty
Package: grfext 2010/08/19 v1.1 Managing graphics extensions (HO)

(/usr/local/texlive/2011/texmf-dist/tex/generic/oberdiek/kvdefinekeys.sty
Package: kvdefinekeys 2011/04/07 v1.3 Defining keys (HO)
))
(/usr/local/texlive/2011/texmf-dist/tex/latex/oberdiek/kvoptions.sty
Package: kvoptions 2010/12/23 v3.10 Keyval support for LaTeX options (HO)

(/usr/local/texlive/2011/texmf-dist/tex/generic/oberdiek/kvsetkeys.sty
Package: kvsetkeys 2011/04/07 v1.13 Key value parser (HO)

(/usr/local/texlive/2011/texmf-dist/tex/generic/oberdiek/etexcmds.sty
Package: etexcmds 2011/02/16 v1.5 Prefix for e-TeX command names (HO)
)))
Package grfext Info: Graphics extension search list:
(grfext)             [.png,.pdf,.jpg,.mps,.jpeg,.jbig2,.jb2,.PNG,.PDF,.JPG,.JPE
G,.JBIG2,.JB2,.eps]
(grfext)             \AppendGraphicsExtensions on input line 452.

(/usr/local/texlive/2011/texmf-dist/tex/latex/latexconfig/epstopdf-sys.cfg
File: epstopdf-sys.cfg 2010/07/13 v1.3 Configuration of (r)epstopdf for TeX Liv
e
))
[1

{/usr/local/texlive/2011/texmf-var/fonts/map/pdftex/updmap/pdftex.map}]
% end test.log

The same kind of error hase been found in April by Paul Isambert, as
reported here

http://tug.org/pipermail/luatex/2010-April/001520.html

but I cannot reproduce what he described then.

Note that when I use the standard LaTeX format, I can load tikz
without any problem. I see that luatex-loader.sty is called during
format creation. Do I have to adapt the \everyjob token list to take
it into account?

I'm using the latest pgf development code not too far from the pgf
that can be found in tlcontrib.

Any ideas would be highly appreciated: I'm just one step from being
able to use luatex for my daily work :-)

Thanks in advance.

-- 
Christophe

