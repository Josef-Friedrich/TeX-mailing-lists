From zappathustra at free.fr  Sun May  1 13:08:05 2011
From: zappathustra at free.fr (Paul Isambert)
Date: Sun, 01 May 2011 13:08:05 +0200
Subject: [luatex] Strange behavior of tex.print.
In-Reply-To: <4DBC19C5.3090108@elvenkind.com>
References: <4DB9E2AD.6000504@free.fr>
 <5EF2A5C6-4FC4-4C13-ABCA-31ADAA0FB505@gundla.ch>
 <1d0x0unskr927$.dlg@nililand.de> <4DBA6CD3.3020508@free.fr>
 <20110429103607.GA24642@oberdiek.my-fqdn.de> <4DBBDE77.3040207@free.fr>
 <20110430105858.GA29722@oberdiek.my-fqdn.de> <4DBC19C5.3090108@elvenkind.com>
Message-ID: <4DBD3F15.20405@free.fr>

Le 30/04/2011 16:16, taco a ?crit :
> Fixed now in commit 4233 (trunk) and 4234 (branches/0.70.x)

Thanks Taco, it works ok.

Best,
Paul

From till.heilmann at unibas.ch  Tue May  3 10:15:35 2011
From: till.heilmann at unibas.ch (Heilmann, Till A.)
Date: Tue, 3 May 2011 10:15:35 +0200
Subject: [luatex] Kerning: when does it not work?
Message-ID: <CC97BFAC-E304-438D-BDAE-A29E64E40700@unibas.ch>

On 30/04/2011 11:43 AM, Paul Isambert wrote:

> [...] Taco has turned your problem into a feature 
> request; in the meanwhile, here's some experimental code that add kerns 
> between glyphs even though they are separated by penalties:
> [...]
> Some remarks:
> - I use luatexbase.add_to_callback because I suppose you're using 
> luatexbase (even if you might not know that), and thus callback.register 
> (the original function) isn't available.
> - I add kerns with subtype 1, equivalent to \kern, although what you 
> really want is /font/ kerns (subtype 0); the difference is that font 
> kerns may vary in width if you use font expansion, while normal kerns 
> don't. However, if I inserted font kerns, they might disappear by the 
> same process of font expansion and never reappear precisely because TeX 
> hasn't inserted them by itself (at least that's what happened last 
> summer and I suppose that hasn't changed, since it's normal behavior).
> - Also, kerns won't be properly added in case of discretionaries. All in 
> all, Taco's implementation will be better, of course, because it won't 
> face this issue and the previous one.
> - The code hasn't been put to any stringent test.
> - Hope you haven't switched to InDesign yet.

Thank you, Paul and Taco, for your help.

Reading Paul's answer, I realize that the technical workings of font kerns are more complex than I thought. From a layman's perspective, though, fixing the issue of suppressed kerns on the most fundamental level possible (if that is possible) and offering a "transparent" solution to users would probably be best: It would, therefore, be great if adjustments to pair kerning made in OTF feature files (or by any other means) simply worked "out of the box" and like expected for every instance of the respective glyph pair. (There is, btw, still the minor bug with existing font kerns I discussed with Khaled a couple of weeks ago: http://tug.org/pipermail/lualatex-dev/2011-March/001108.html)

Paul: I must confess that I do not really understand how your experimental code works and how I am supposed to use it. Simply pasting it into the preamble of the sample document I posted earlier didn't change anything (well, I did not expect it to be that simple, either). For my real-life book project I load fonts like this:

[...]
\usepackage{fontspec}
\usepackage[sans-style=upright]{unicode-math}
\setmainfont[Renderer=Basic,Ligatures=TeX,ItalicFeatures={RawFeature=+itlc},FeatureFile=texgyrebonum-tah.fea]{TeX Gyre Bonum}
\setmathfont{TeX Gyre Bonum}
\setsansfont[Renderer=Basic,Ligatures=TeX,Scale=MatchUppercase,ItalicFeatures={RawFeature=+itlc},FeatureFile=texgyreheros-tah.fea]{TeX Gyre Heros}
\setmathfont[range=\mathsfup/{latin,Latin,num}]{TeX Gyre Heros}
\setmonofont[Scale=MatchUppercase]{Luxi Mono}
\setmathfont[range=\mathtt/{latin,Latin,num}]{Luxi Mono}
\setmathfont[range=\mathup/{greek,Greek}]{XITS Math}
\setmathfont[range={"22C5}]{XITS Math}
\setmathfont[range=\mathscr]{XITS Math}
[...]

In the text I "call" these different fonts with the usual commands for families (\rmfamily, \sffamily, \ttfamily), series and weights (\mdseries, \bfseries), and sizes (\fontsize{}{}). I am reluctant to change this because the fontspec and unicode-math packages work just fine for me and do a lot of nice things like scaling that I would not know how to achieve otherwise.

I would greatly appreciate any advice on how to make your code work, of course.

Thanks again and best regards,
--Till

PS: I have not switched to InDesign yet and will certainly not do so with my current project (it would be madness to start all over again using a completely different approach). I have been using (La)TeX for more than ten years now and am generally very happy with it. The point is that, over the years, TeX has raised my appreciation for typographic detail and I can no longer stand things like poor tracking and kerning of fonts--both issues that are not trivial to deal with in TeX.

From st_philipp at yahoo.de  Tue May  3 10:52:26 2011
From: st_philipp at yahoo.de (Philipp Stephani)
Date: Tue, 3 May 2011 10:52:26 +0200
Subject: [luatex] [tex-live] Location of recorder file
In-Reply-To: <201105022207.p42M71O6002067@freefriends.org>
References: <201105022207.p42M71O6002067@freefriends.org>
Message-ID: <79EA3ECD-931C-4D7A-BBEA-3696BE3DF161@yahoo.de>


Am 03.05.2011 um 00:07 schrieb Karl Berry:

>       if (output_directory && !kpse_absolute_p (new_name, 1)) {
> 
> Seems to me the output_directory should be used regardless, that's why
> it is specified.
> 
> In any case, I think other changes might be required (in other places),
> depending on exactly how LuaTeX is determining the output file names.

LuaTeX calls recorder_change_filename only once, with \jobname + .fls, so I don't think other changes are necessary.



From zappathustra at free.fr  Tue May  3 13:44:27 2011
From: zappathustra at free.fr (Paul Isambert)
Date: Tue, 03 May 2011 13:44:27 +0200
Subject: [luatex] Kerning: when does it not work?
In-Reply-To: <CC97BFAC-E304-438D-BDAE-A29E64E40700@unibas.ch>
References: <CC97BFAC-E304-438D-BDAE-A29E64E40700@unibas.ch>
Message-ID: <4DBFEA9B.2010906@free.fr>



Le 03/05/2011 10:15, Heilmann, Till A. a ?crit
> Reading Paul's answer, I realize that the technical workings of font kerns are more complex than I thought. From a layman's perspective, though, fixing the issue of suppressed kerns on the most fundamental level possible (if that is possible) and offering a "transparent" solution to users would probably be best: It would, therefore, be great if adjustments to pair kerning made in OTF feature files (or by any other means) simply worked "out of the box" and like expected for every instance of the respective glyph pair.

That should be the case when Taco implements it. So rejoice!

> Paul: I must confess that I do not really understand how your experimental code works and how I am supposed to use it. Simply pasting it into the preamble of the sample document I posted earlier didn't change anything (well, I did not expect it to be that simple, either). For my real-life book project I load fonts like this:
>
> [...]

I'm not a LaTeX user; the code was tested with plain TeX and worked well 
on so simple an example as ``V\penalty1000 e''. I thought pasting it in 
a LaTeX preamble (preferably at the end) would work, but somebody with 
knowledge in LaTeX should probably take over here...

> In the text I "call" these different fonts with the usual commands for families (\rmfamily, \sffamily, \ttfamily), series and weights (\mdseries, \bfseries), and sizes (\fontsize{}{}). I am reluctant to change this because the fontspec and unicode-math packages work just fine for me and do a lot of nice things like scaling that I would not know how to achieve otherwise.

Such font loading shouldn't be relevant to the issue. Provided the issue 
is, indeed, kerns prevented by penalties, which is the only thing my 
code is meant to fix.

I'll make some experiments with your original document and try to see 
what's wrong.

Best,
Paul

From luatex at nililand.de  Tue May  3 14:57:04 2011
From: luatex at nililand.de (Ulrike Fischer)
Date: Tue, 3 May 2011 14:57:04 +0200
Subject: [luatex] Kerning: when does it not work?
References: <CC97BFAC-E304-438D-BDAE-A29E64E40700@unibas.ch>
 <4DBFEA9B.2010906@free.fr>
Message-ID: <17qoergqukph9.dlg@nililand.de>

Am Tue, 03 May 2011 13:44:27 +0200 schrieb Paul Isambert:

>> Reading Paul's answer, I realize that the technical workings of
>> font kerns are more complex than I thought. From a layman's
>> perspective, though, fixing the issue of suppressed kerns on the
>> most fundamental level possible (if that is possible) and
>> offering a "transparent" solution to users would probably be
>> best: It would, therefore, be great if adjustments to pair
>> kerning made in OTF feature files (or by any other means) simply
>> worked "out of the box" and like expected for every instance of
>> the respective glyph pair.
 
> That should be the case when Taco implements it. So rejoice!

I'm not sure that this will solve all of Till's problems. After all
there must also exist a way to suppress kerning between two glyphs -
and if a macro inserts such a "kerning stopper" between glyphs I
don't see what the engine can do about it.

Regarding Till's concrete problems (\url and biblatex) I wouldn't
bet that they insert only penalties between the glyphs. 

-- 
Ulrike Fischer 


From zappathustra at free.fr  Tue May  3 16:58:28 2011
From: zappathustra at free.fr (Paul Isambert)
Date: Tue, 03 May 2011 16:58:28 +0200
Subject: [luatex] Kerning: when does it not work?
In-Reply-To: <17qoergqukph9.dlg@nililand.de>
References: <CC97BFAC-E304-438D-BDAE-A29E64E40700@unibas.ch>
 <4DBFEA9B.2010906@free.fr> <17qoergqukph9.dlg@nililand.de>
Message-ID: <4DC01814.3080203@free.fr>

Le 03/05/2011 14:57, Ulrike Fischer a ?crit :
> Am Tue, 03 May 2011 13:44:27 +0200 schrieb Paul Isambert:
>
>>> Reading Paul's answer, I realize that the technical workings of
>>> font kerns are more complex than I thought. From a layman's
>>> perspective, though, fixing the issue of suppressed kerns on the
>>> most fundamental level possible (if that is possible) and
>>> offering a "transparent" solution to users would probably be
>>> best: It would, therefore, be great if adjustments to pair
>>> kerning made in OTF feature files (or by any other means) simply
>>> worked "out of the box" and like expected for every instance of
>>> the respective glyph pair.
>
>> That should be the case when Taco implements it. So rejoice!
> I'm not sure that this will solve all of Till's problems. After all
> there must also exist a way to suppress kerning between two glyphs -
> and if a macro inserts such a "kerning stopper" between glyphs I
> don't see what the engine can do about it.
>
> Regarding Till's concrete problems (\url and biblatex) I wouldn't
> bet that they insert only penalties between the glyphs.

I haven't been able to run the example correctly (my LaTeX installation 
is far from maintained, let alone LuaLaTeX). For instance I haven't been 
able to make the feature file work. Anyway I've analysed what is produce 
by \url{http://}, and the result is (nodes are separated by space; for 
glyphs I give the character):

math_node h t t p glue_node : glue_node / / math_node

So the problem here stems from glues, not penalties, between characters. 
I suppose that's the same with biblatex (glues around the slash in e.g. 
6/2, to allow linebreaking). And it would be totally absurd to require 
that kern pairs be applied across glues; on the other hand, a 
LuaTeX-aware package should be able to mark such glues (e.g. with 
attributes) and to insert the kerns with something similar to the code 
I've proposed.  Yet it would seem much more logical to me to insert real 
penalties instead of phantom spaces (I've checked, those spaces have no 
width nor stretch nor shrink, so they're really here for the line break, 
I suppose), and I think the packages should be corrected (then my hack 
or in the long term LuaTeX's default behavior will work correctly).

As for the kerning stopper you mention, Ulrike, I go for \kern0pt. Of 
course kern pairs should be applied only across non-typographic things 
like penalties or whatsits (although that case isn't obvious, since a 
whatsit might very well be a special with instructions for drawing).

Meanwhile, Till, here's a solution that ignores glues with 0 width and 
stretch and shrink and insert kern pairs; again, I've tested it with 
plain TeX, hope it'll work in your document.

%%%
\directlua{
local GLYF = node.id("glyph")
local GLUE = node.id("glue")
local KERN = node.id("kern")

local function add_kerns (head)
   node.kerning(head)
   for glyph in node.traverse_id(GLYF, head) do
     local next = glyph.next
     while next and next.id == GLUE and next.spec.width == 0 and 
next.spec.stretch == 0 and next.spec.shrink == 0 do
       next = next.next
     end
     if next and next.id == GLYF then
       if glyph.font == next.font then
         local kerns = font.getfont(glyph.font).characters[glyph.char].kerns
         if kerns and kerns[next.char] then
           local kern = node.new(KERN, 1)
           kern.kern = kerns[next.char]
           node.insert_after(head, next, kern)
         end
       end
     end
   end
end

luatexbase.add_to_callback("kerning", add_kerns, "add_kerns")
}
%%%


Best,
Paul

From zappathustra at free.fr  Tue May  3 17:04:45 2011
From: zappathustra at free.fr (Paul Isambert)
Date: Tue, 03 May 2011 17:04:45 +0200
Subject: [luatex] Kerning: when does it not work?
In-Reply-To: <4DC01814.3080203@free.fr>
References: <CC97BFAC-E304-438D-BDAE-A29E64E40700@unibas.ch>
 <4DBFEA9B.2010906@free.fr> <17qoergqukph9.dlg@nililand.de>
 <4DC01814.3080203@free.fr>
Message-ID: <4DC0198D.9060702@free.fr>


Sorry, small error in the code:


>           node.insert_after(head, next, kern)

should be

           node.insert_before(head, next, kern)


Best,
Paul

From till.heilmann at unibas.ch  Wed May  4 09:15:46 2011
From: till.heilmann at unibas.ch (Heilmann, Till A.)
Date: Wed, 4 May 2011 09:15:46 +0200
Subject: [luatex] Kerning: when does it not work?
Message-ID: <477E26D7-D61B-43BD-9138-DF4B00B767B6@unibas.ch>

On 03/05/2011 04:58 PM, Paul Isambert wrote:

> [...] Anyway I've analysed what is produce by \url{http://}, and the
> result is (nodes are separated by space; for glyphs I give the character):
> 
> math_node h t t p glue_node : glue_node / / math_node
> 
> So the problem here stems from glues, not penalties, between characters. 
> [...] Meanwhile, Till, here's a solution that ignores glues with 0 width
> and stretch and shrink and insert kern pairs; again, I've tested it with
> plain TeX, hope it'll work in your document.

Paul, thank you again for your efforts. Unfortunately, your code does not work with my example (see below). This whole kerning thing seems to be quite tricky...

Best,
--Till

\begin{filecontents*}{mybonum.fea}
languagesystem DFLT dflt ;
languagesystem latn dflt ;
feature kern {
  pos colon slash 100 ;
  pos slash slash -150 ;
} kern ;
\end{filecontents*}
\documentclass{article}
\usepackage{url}
\urlstyle{same}
\usepackage{fontspec}
\setmainfont[FeatureFile=mybonum.fea]{TeX Gyre Bonum}
\directlua{
local GLYF = node.id("glyph")
local GLUE = node.id("glue")
local KERN = node.id("kern")
local function add_kerns (head)
   node.kerning(head)
   for glyph in node.traverse_id(GLYF, head) do
     local next = glyph.next
     while next and next.id == GLUE and next.spec.width == 0 and next.spec.stretch == 0 and next.spec.shrink == 0 do
       next = next.next
     end
     if next and next.id == GLYF then
       if glyph.font == next.font then
         local kerns = font.getfont(glyph.font).characters[glyph.char].kerns
         if kerns and kerns[next.char] then
           local kern = node.new(KERN, 1)
           kern.kern = kerns[next.char]
           node.insert_before(head, next, kern)
         end
       end
     end
   end
end
luatexbase.add_to_callback("kerning", add_kerns, "add_kerns")
}
\begin{document}
http:// \url{http://}
\end{document}


From luatex at nililand.de  Wed May  4 10:34:35 2011
From: luatex at nililand.de (Ulrike Fischer)
Date: Wed, 4 May 2011 10:34:35 +0200
Subject: [luatex] Kerning: when does it not work?
References: <CC97BFAC-E304-438D-BDAE-A29E64E40700@unibas.ch>
 <4DBFEA9B.2010906@free.fr> <17qoergqukph9.dlg@nililand.de>
 <4DC01814.3080203@free.fr>
Message-ID: <bor7b9mesxw$.dlg@nililand.de>

Am Tue, 03 May 2011 16:58:28 +0200 schrieb Paul Isambert:


>> Regarding Till's concrete problems (\url and biblatex) I wouldn't
>> bet that they insert only penalties between the glyphs.
> 
> I haven't been able to run the example correctly (my LaTeX installation 
> is far from maintained, let alone LuaLaTeX). For instance I haven't been 
> able to make the feature file work. Anyway I've analysed what is produce 
> by \url{http://}, and the result is (nodes are separated by space; for 
> glyphs I give the character):
> 
> math_node h t t p glue_node : glue_node / / math_node
> 
> So the problem here stems from glues, not penalties, between characters. 
> I suppose that's the same with biblatex (glues around the slash in e.g. 
> 6/2, to allow linebreaking). And it would be totally absurd to require 
> that kern pairs be applied across glues; on the other hand, a 
> LuaTeX-aware package should be able to mark such glues (e.g. with 
> attributes) and to insert the kerns with something similar to the code 
> I've proposed.  Yet it would seem much more logical to me to insert real 
> penalties instead of phantom spaces (I've checked, those spaces have no 
> width nor stretch nor shrink, so they're really here for the line break, 
> I suppose), 

url.sty is rather complicated. Roughly (I don't know the details)
the urls are set in mathmode. At the start url sets the mathcode of
various chars. E.g. dot and slash get the mathcode of a binary
operator, the colon of a relation. Some chars are "mathactive" (e.g.
the %). 

This means that line breaking is done with the math rules. 

I can get the wanted kerning if I remove the colon and the slash
from the break/big break list and declare them as ordinary
characters:

\documentclass{article}
\usepackage{url}
\urlstyle{same}
\usepackage{fontspec}
\setmainfont[FeatureFile=mybonum.fea]{TeX Gyre Bonum}

\begin{document}
http:// \url{http://}

\def\UrlBreaks{}
\def\UrlBigBreaks{}
\def\UrlOrds{\do\*\do\-\do\~\do\'\do\"\do\-\do/\do:}%

\url{http://}

\end{document}

So I think the problem is that no kerning is inserted in math mode
e.g. between a relation and a normal char.

At my opinion it doesn't make much sense to try to add functions to
the kerning callback. One should try to rewrite \url for lualatex. I
doubt that with luatex all this mathcode-tweaking is necessary.
After all you only want to type a text with some catcode changes and
insert some break points. Also url does contain some encoding (OT1,
TI, LY1) specific code which could bite when you are using unicode
fonts.

Context has some code which could be useful:

http://wiki.contextgarden.net/url
http://source.contextgarden.net/lang-url.lua


-- 
Ulrike Fischer 


From taco at elvenkind.com  Wed May  4 11:11:39 2011
From: taco at elvenkind.com (Taco Hoekwater)
Date: Wed, 04 May 2011 11:11:39 +0200
Subject: [luatex] Kerning: when does it not work?
In-Reply-To: <bor7b9mesxw$.dlg@nililand.de>
References: <CC97BFAC-E304-438D-BDAE-A29E64E40700@unibas.ch>
 <4DBFEA9B.2010906@free.fr> <17qoergqukph9.dlg@nililand.de>
 <4DC01814.3080203@free.fr> <bor7b9mesxw$.dlg@nililand.de>
Message-ID: <4DC1184B.7060603@elvenkind.com>



On 05/04/11 10:34, Ulrike Fischer wrote:
> 
> At my opinion it doesn't make much sense to try to add functions to
> the kerning callback. One should try to rewrite \url for lualatex. I
> doubt that with luatex all this mathcode-tweaking is necessary.
> After all you only want to type a text with some catcode changes and
> insert some break points. Also url does contain some encoding (OT1,
> TI, LY1) specific code which could bite when you are using unicode
> fonts.

I wholeheartedly agree with this assessment. I've added that feature
request for myself, but implementation of that will not be enough to
deal with all the madness in url.sty.

Best wishes,
Taco

From zappathustra at free.fr  Wed May  4 11:11:42 2011
From: zappathustra at free.fr (Paul Isambert)
Date: Wed, 04 May 2011 11:11:42 +0200
Subject: [luatex] Kerning: when does it not work?
In-Reply-To: <bor7b9mesxw$.dlg@nililand.de>
References: <CC97BFAC-E304-438D-BDAE-A29E64E40700@unibas.ch>
 <4DBFEA9B.2010906@free.fr> <17qoergqukph9.dlg@nililand.de>
 <4DC01814.3080203@free.fr> <bor7b9mesxw$.dlg@nililand.de>
Message-ID: <4DC1184E.80605@free.fr>

Le 04/05/2011 10:34, Ulrike Fischer a ?crit :
> Am Tue, 03 May 2011 16:58:28 +0200 schrieb Paul Isambert:
>
>
>>> Regarding Till's concrete problems (\url and biblatex) I wouldn't
>>> bet that they insert only penalties between the glyphs.
>> I haven't been able to run the example correctly (my LaTeX installation
>> is far from maintained, let alone LuaLaTeX). For instance I haven't been
>> able to make the feature file work. Anyway I've analysed what is produce
>> by \url{http://}, and the result is (nodes are separated by space; for
>> glyphs I give the character):
>>
>> math_node h t t p glue_node : glue_node / / math_node
>>
>> So the problem here stems from glues, not penalties, between characters.
>> I suppose that's the same with biblatex (glues around the slash in e.g.
>> 6/2, to allow linebreaking). And it would be totally absurd to require
>> that kern pairs be applied across glues; on the other hand, a
>> LuaTeX-aware package should be able to mark such glues (e.g. with
>> attributes) and to insert the kerns with something similar to the code
>> I've proposed.  Yet it would seem much more logical to me to insert real
>> penalties instead of phantom spaces (I've checked, those spaces have no
>> width nor stretch nor shrink, so they're really here for the line break,
>> I suppose),
> url.sty is rather complicated. Roughly (I don't know the details)
> the urls are set in mathmode. At the start url sets the mathcode of
> various chars. E.g. dot and slash get the mathcode of a binary
> operator, the colon of a relation. Some chars are "mathactive" (e.g.
> the %).
>
> This means that line breaking is done with the math rules.
>
> I can get the wanted kerning if I remove the colon and the slash
> from the break/big break list and declare them as ordinary
> characters:
>
> \documentclass{article}
> \usepackage{url}
> \urlstyle{same}
> \usepackage{fontspec}
> \setmainfont[FeatureFile=mybonum.fea]{TeX Gyre Bonum}
>
> \begin{document}
> http:// \url{http://}
>
> \def\UrlBreaks{}
> \def\UrlBigBreaks{}
> \def\UrlOrds{\do\*\do\-\do\~\do\'\do\"\do\-\do/\do:}%
>
> \url{http://}
>
> \end{document}
>
> So I think the problem is that no kerning is inserted in math mode
> e.g. between a relation and a normal char.
>
> At my opinion it doesn't make much sense to try to add functions to
> the kerning callback. One should try to rewrite \url for lualatex. I
> doubt that with luatex all this mathcode-tweaking is necessary.
> After all you only want to type a text with some catcode changes and
> insert some break points. Also url does contain some encoding (OT1,
> TI, LY1) specific code which could bite when you are using unicode
> fonts.

As noted by Ulrike, the problem is mathmode, which I had overlooked; but 
that's not the end of the story, otherwise we could kick in the 
"mlist_to_hlist" callback and add our function (actually not so easy, 
because of subboxes and the like). The problem is that this code tested with

$\rm V\hskip0pt e$

doesn't work because a font kern is already inserted after V by the 
math-to-horizontal algorithm for reasons I don't know but probably 
explained in appendix G of the /TeXbook/. (Note that perhaps it works 
nonetheless with a pair of slashes.)

I agree with Ulrike that hacking around isn't a solution; the url 
package should be rewritten to work properly with LuaTeX. Two things, in 
my opinion, should be corrected: replace zero-width glues with proper 
penalties, and avoid math mode. With LuaTeX, where most aspects of TeX 
can be modified or at least inspected, using math mode for material that 
isn't maths should be avoided, I suppose. I don't know what the package 
does precisely, but rewriting it to manipulate nodes directly should be 
rather easy: typeset the url in a box (so proper kerning is added), then 
add penalties automatically before/after some characters.

So, Till, you're most unfortunate. On the other hand, could the fine 
typography you're trying to achieve (as exemplified by your attention to 
kerns) tolerate such things as urls in the main text? Wouldn't they be 
better placed in a footnote of their own, with linebreak done by hand? 
Oh, yes, I'm drowning the fish, as we say in French :)

Best,
Paul
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://tug.org/pipermail/luatex/attachments/20110504/3c796f08/attachment-0001.html>

From till.heilmann at unibas.ch  Wed May  4 12:16:43 2011
From: till.heilmann at unibas.ch (Heilmann, Till A.)
Date: Wed, 4 May 2011 12:16:43 +0200
Subject: [luatex] Kerning: when does it not work?
Message-ID: <1B77FFB4-D88D-4EA2-8520-6C5F2D758CBB@unibas.ch>

On 04/05/2011 11:11 AM, Paul Isambert wrote:

> [...]
> So, Till, you're most unfortunate. On the other hand, could the fine 
> typography you're trying to achieve (as exemplified by your attention to 
> kerns) tolerate such things as urls in the main text? Wouldn't they be 
> better placed in a footnote of their own, with linebreak done by hand? 
> Oh, yes, I'm drowning the fish, as we say in French :)

My oh my, what have I gotten myself into?! ;-)

In my real-life project, URLs (like the [numeral]/[numeral] combination) are mostly part of automatically generated bibliographic entries and so occur either

a) in citations inside footnotes (with Dominik's authortitle-dw style and typeset in TeX Gyre Heros) or

b) in the bibliography (typeset in TeX Gyre Bonum--don't ask about the peculiar mix of serif and sans-serif, these are my publisher's guidelines).

So there is not much I can do about line breaks manually in these cases, I guess.

Let me see, if I got this right: Kern values (not just the ones added in OTF feature files, for example, but all existing kerns for a given font) can be and will be suppressed by TeX and/or several of its packages in a number of different situations for a number of different reasons (penalties, glues, math mode ...) Therefore, sorting this out would require a lot of work from a lot of people in a lot of different places. Maybe collecting and documenting all the stumbling blocks obstructing correct kerning would be a first step towards an eventual long-term solution?

Admittedly, my problems with kerning are but one detail of typesetting and not being able to correct poor kerning in a few--but recurring--instances does not mean the end of the world. (There will always be cases you have to adjust manually anyway, like between letters/punctuation marks and footnote reference marks.) I am nevertheless somewhat surprised that I seem to be one of first/few people asking about this issue. As I said: It is a detail. But then again, typography is all about details.

As always: Thank you for all your help and advice.

Best regards,
--Till




From zappathustra at free.fr  Wed May  4 12:45:47 2011
From: zappathustra at free.fr (Paul Isambert)
Date: Wed, 04 May 2011 12:45:47 +0200
Subject: [luatex] Kerning: when does it not work?
In-Reply-To: <1B77FFB4-D88D-4EA2-8520-6C5F2D758CBB@unibas.ch>
References: <1B77FFB4-D88D-4EA2-8520-6C5F2D758CBB@unibas.ch>
Message-ID: <4DC12E5B.907@free.fr>

Le 04/05/2011 12:16, Heilmann, Till A. a ?crit :
> On 04/05/2011 11:11 AM, Paul Isambert wrote:
>
>> [...]
>> So, Till, you're most unfortunate. On the other hand, could the fine
>> typography you're trying to achieve (as exemplified by your attention to
>> kerns) tolerate such things as urls in the main text? Wouldn't they be
>> better placed in a footnote of their own, with linebreak done by hand?
>> Oh, yes, I'm drowning the fish, as we say in French :)
> My oh my, what have I gotten myself into?! ;-)
>
> In my real-life project, URLs (like the [numeral]/[numeral] combination) are mostly part of automatically generated bibliographic entries and so occur either
>
> a) in citations inside footnotes (with Dominik's authortitle-dw style and typeset in TeX Gyre Heros) or
>
> b) in the bibliography (typeset in TeX Gyre Bonum--don't ask about the peculiar mix of serif and sans-serif, these are my publisher's guidelines).
>
> So there is not much I can do about line breaks manually in these cases, I guess.

Except redefine \url to suit your needs, I guess. That is definitely 
doable. That won't solve the biblatex issue, though.

> Let me see, if I got this right: Kern values (not just the ones added in OTF feature files, for example, but all existing kerns for a given font)

Actually, if I'm not mistaken, when loading a font and then applying a 
feature file, the origin of kerns in unknown (i.e. from the font or the 
feature file), so those are just font kerns.

>   can be and will be suppressed by TeX and/or several of its packages in a number of different situations for a number of different reasons (penalties, glues, math mode ...)

Actually, they aren't suppressed, they're not inserted: kerning requires 
two glyphs in a row; if the condition doesn't hold, there there is no 
kerning, which makes sense, except perhaps in the case of a penalty, 
which case Taco is willing to consider, though.

As for math mode, kerns are inserted there; what doesn't work is my 
hack, simply because the way things are done in the url package has 
annnoying consequences.

>   Therefore, sorting this out would require a lot of work from a lot of people in a lot of different places. Maybe collecting and documenting all the stumbling blocks obstructing correct kerning would be a first step towards an eventual long-term solution?

Well, there isn't much to say. To sum up, the problem is: the url 
package typesets urls in math mode and inserts 0-width glues; my hack 
was meant to deal with the latter, but is useless in math mode. 
Actually, even if it had worked, it would be just a hack; a rewriting of 
the url package would still be better.

The url package is based on a dirty trick, i.e. the tweaking of TeX so 
that apparently impossible things are achieved by more or less arcane 
code using techniques that seem totally irrelevant to the problem at 
hand in the first place. Before LuaTeX, dirty tricks were necessary evil 
and TeX wizards an unavoidable caste; now many a dirty trick is solved 
by a few lines in Lua, and TeX is a real democracy. Well, almost.

Anyway, the solution is: rewrite the package. The only thing to be 
considered by the LuaTeX team here is kerning across penalties, which is 
actually not relevant here.

> Admittedly, my problems with kerning are but one detail of typesetting and not being able to correct poor kerning in a few--but recurring--instances does not mean the end of the world. (There will always be cases you have to adjust manually anyway, like between letters/punctuation marks and footnote reference marks.) I am nevertheless somewhat surprised that I seem to be one of first/few people asking about this issue.

Well, that's the chance addition of a feature file and some packages, 
plus a good eye. Not so surprising, after all, all the more as LuaTeX 
isn't used by that many people yet.

>   As I said: It is a detail. But then again, typography is all about details.

Yes. Which is why sometimes the human hand is necessary and one cannot 
always rely on automation. As in your case right now. What, me, drowning 
the fish again?

Best,
Paul

From luatex at nililand.de  Wed May  4 13:45:03 2011
From: luatex at nililand.de (Ulrike Fischer)
Date: Wed, 4 May 2011 13:45:03 +0200
Subject: [luatex] Kerning: when does it not work?
References: <1B77FFB4-D88D-4EA2-8520-6C5F2D758CBB@unibas.ch>
 <4DC12E5B.907@free.fr>
Message-ID: <yqrts1o0ip9n.dlg@nililand.de>

Am Wed, 04 May 2011 12:45:47 +0200 schrieb Paul Isambert:

> Well, there isn't much to say. To sum up, the problem is: the url 
> package typesets urls in math mode and inserts 0-width glues;

url doesn't insert 0-width glue but the math mode is doing it. You
are seeing \medmuskip and \thickmuskip which url sets locally to
0mu.

\documentclass{article}
\begin{document}
$a+b=c$

\medmuskip=50mu \thickmuskip=100mu

$a+b=c$

\end{document}



-- 
Ulrike Fischer 


From zappathustra at free.fr  Wed May  4 16:32:10 2011
From: zappathustra at free.fr (Paul Isambert)
Date: Wed, 04 May 2011 16:32:10 +0200
Subject: [luatex] Kerning: when does it not work?
In-Reply-To: <4DC12E5B.907@free.fr>
References: <1B77FFB4-D88D-4EA2-8520-6C5F2D758CBB@unibas.ch>
 <4DC12E5B.907@free.fr>
Message-ID: <4DC1636A.2090708@free.fr>

Le 04/05/2011 12:45, Paul Isambert a ?crit :
> Anyway, the solution is: rewrite the package.

Since I have tons of urgent things to do, this thread gives me the 
wonderful opportunity not to do them. So here's a first stab at a 
LuaTeX-oriented \url command. Tell me if it works for you, Till:

%%%
\def\makeother#1{\catcode`#1=12 }
\def\url{%
   \begingroup
   \let\do\makeother \dospecials
   \catcode`\{=1 \catcode`\}=2
   \URL
   }
\newbox\urlbox
\def\URL#1{%
   \setbox\urlbox=\hbox{#1}%
   \directlua{%
     local box = tex.box["urlbox"].list
     local glyf, disc = node.id("glyph"), node.id("disc")
     for n in node.traverse_id(disc, box) do
       node.remove(box, n)
     end
     for n in node.traverse_id(glyf, box) do
       local b = url.breakpoints[n.char]
       if b == "before" then
         url.before(box, n)
       elseif b == "after" then
         url.after(box, n)
       elseif b == "both" then
         url.before(box, n)
         url.after(box, n)
       end
     end}%
   \unhbox\urlbox
   \endgroup
   }

\directlua{
local id, copy, insert_before, insert_after = node.id, node.copy, 
node.insert_before, node.insert_after

url = {}
url.breakpoints = {}
local penalty = node.new(id("penalty"))
penalty.penalty = 0

function url.before (l, n)
   if n.prev then
     if n.prev.id == id("kern") and n.prev.subtype == 0 then
       n = n.prev
     end
     insert_before(l, n, copy(penalty))
   end
end

function url.after(l, n)
   if n.next then
     insert_after(l, n, copy(penalty))
   end
end
}

\def\urladdbreakpoint#1#2{%
   \directlua{url.breakpoints[\the\numexpr`#1] = "#2"}%
   }
%%%

The two commands are:
- \url{<url>} which typesets the url normally (hence good kerning) and 
then inserts penalties as defined by the following command; <url> can 
contain any character but braces, which I think don't occur very often 
in urls anyway;
- \urladdbreakpoint{<character>}{<position>} defines <character> as a 
possible breakpoint; <position> should one of "before", "after" or 
"both", meaning that the url can be broken in those positions relative 
to <character>; such breakpoints aren't inserted before the first 
character and after the last one.

Remarks:
- There are probably many bells and whistles in the original url package 
that I haven't tried to mimick here; particularly I don't change fonts;
- The breakpoints are just penalty with value 0; one could give other 
values to inhibit or encourage breaking;
- There is something quite bad: you don't want an url to hyphenate; to 
avoid that I'd temporarily set the "hyphenate" callback to "false", so 
no hyphenation occurs when \urlbox is built; however, I don't know how 
to do that with luatexbase (which you're using covertly, Till) because 
callback.register is unavailable; so I let the hyphenation pass occur 
and then remove all discretionary nodes, which is a bad idea leading to 
trouble with anything but (the Lua equivalent of) \discretionary{-}{}{}; 
that'd be easily fixed with the intervention of a LaTeX user.

As a stupid example one can try:

\urladdbreakpoint{/}{after}
\urladdbreakpoint{_}{both}
\hsize=0pt
\url{http://www.tug.org/tug/#something_with_a_%_sign}

Best,
Paul

From till.heilmann at unibas.ch  Wed May  4 17:09:39 2011
From: till.heilmann at unibas.ch (Heilmann, Till A.)
Date: Wed, 4 May 2011 17:09:39 +0200
Subject: [luatex] Kerning: when does it not work?
Message-ID: <CE4D94CF-BF05-4351-8C52-E44D3695B455@unibas.ch>

On 04/05/2011 04:32 PM, Paul Isambert wrote:

> Since I have tons of urgent things to do, this thread gives me the 
> wonderful opportunity not to do them. So here's a first stab at a 
> LuaTeX-oriented \url command. Tell me if it works for you, Till:
> [...]

Holy cow! It seems to do so...

And it even works in my real-life definitely-not-minimal absolutely-not-example document. (The funny thing is, though, that all the URLs there--whether generated by biblatex or input directly by me--are typeset in the \ttfamily font instead of the current one, i.e. \sffamily in footnotes and \rmfamily in the bibliography. Hmm, I have to look through my source again.)

Anyways: Thank you for procrastinating and neglecting your actual work, Paul! Looks like you saved my a..

Best,
--Till

From luatex at nililand.de  Wed May  4 17:40:24 2011
From: luatex at nililand.de (Ulrike Fischer)
Date: Wed, 4 May 2011 17:40:24 +0200
Subject: [luatex] Kerning: when does it not work?
References: <CE4D94CF-BF05-4351-8C52-E44D3695B455@unibas.ch>
Message-ID: <1waq6apwfbilc.dlg@nililand.de>

Am Wed, 4 May 2011 17:09:39 +0200 schrieb Heilmann, Till A.:

>> Since I have tons of urgent things to do, this thread gives me the 
>> wonderful opportunity not to do them. So here's a first stab at a 
>> LuaTeX-oriented \url command. Tell me if it works for you, Till:
>> [...]
> 
> Holy cow! It seems to do so...

It will not work if you intend to use hyperref! 


-- 
Ulrike Fischer 


From till.heilmann at unibas.ch  Thu May  5 08:20:00 2011
From: till.heilmann at unibas.ch (Heilmann, Till A.)
Date: Thu, 5 May 2011 08:20:00 +0200
Subject: [luatex] Kerning: when does it not work?
Message-ID: <43316516-13BF-4965-A830-1C5EB7DA11DF@unibas.ch>

On 04/05/2011 05:40 PM, Ulrike Fischer wrote:

>>> Since I have tons of urgent things to do, this thread gives me the
>>> wonderful opportunity not to do them. So here's a first stab at a
>>> LuaTeX-oriented \url command. Tell me if it works for you, Till:
>>> [...]
>>
>>
>> Holy cow! It seems to do so...
>
>
> It will not work if you intend to use hyperref!


No problem there, I think: I am preparing a camera ready PDF for my  
publisher, so no need for hyperlinks.

Best,
--Till

From till.heilmann at unibas.ch  Thu May  5 09:06:19 2011
From: till.heilmann at unibas.ch (Heilmann, Till A.)
Date: Thu, 5 May 2011 09:06:19 +0200
Subject: [luatex] Kerning: when does it not work?
Message-ID: <123093EB-1F26-4E51-B817-FE7CE21E5C46@unibas.ch>

Well, there are some problems with Paul's code, after all: The  
underscore character _ cannot be part of a URL *if* it occurs inside  
a footnote (see below). I have not checked for errors with other  
characters yet.

Best,
--Till

\documentclass{article}
\def\makeother#1{\catcode`#1=12 }
\def\url{%
    \begingroup
    \let\do\makeother \dospecials
    \catcode`\{=1 \catcode`\}=2
    \URL
    }
\newbox\urlbox
\def\URL#1{%
    \setbox\urlbox=\hbox{#1}%
    \directlua{%
      local box = tex.box["urlbox"].list
      local glyf, disc = node.id("glyph"), node.id("disc")
      for n in node.traverse_id(disc, box) do
        node.remove(box, n)
      end
      for n in node.traverse_id(glyf, box) do
        local b = url.breakpoints[n.char]
        if b == "before" then
          url.before(box, n)
        elseif b == "after" then
          url.after(box, n)
        elseif b == "both" then
          url.before(box, n)
          url.after(box, n)
        end
      end}%
    \unhbox\urlbox
    \endgroup
    }

\directlua{
local id, copy, insert_before, insert_after = node.id, node.copy,  
node.insert_before, node.insert_after

url = {}
url.breakpoints = {}
local penalty = node.new(id("penalty"))
penalty.penalty = 0

function url.before (l, n)
    if n.prev then
      if n.prev.id == id("kern") and n.prev.subtype == 0 then
        n = n.prev
      end
      insert_before(l, n, copy(penalty))
    end
end

function url.after(l, n)
    if n.next then
      insert_after(l, n, copy(penalty))
    end
end
}

\def\urladdbreakpoint#1#2{%
    \directlua{url.breakpoints[\the\numexpr`#1] = "#2"}%
    }
\begin{document}
\footnote{\url{_}}
\end{document}

From luatex at nililand.de  Thu May  5 10:00:32 2011
From: luatex at nililand.de (Ulrike Fischer)
Date: Thu, 5 May 2011 10:00:32 +0200
Subject: [luatex] Kerning: when does it not work?
References: <123093EB-1F26-4E51-B817-FE7CE21E5C46@unibas.ch>
Message-ID: <19infrguhpt55.dlg@nililand.de>

Am Thu, 5 May 2011 09:06:19 +0200 schrieb Heilmann, Till A.:

> Well, there are some problems with Paul's code, after all: The  
> underscore character _ cannot be part of a URL *if* it occurs inside  
> a footnote (see below). I have not checked for errors with other  
> characters yet.

The \url command tries to adjust the catcodes (with the
\let\do\makeother \dospecials line) but can't do it if the catcode
is already fixed when used in the argument of another command. 

You can change the catcodetable additionally in the \setbox command:

\setbox\urlbox=\hbox{\directlua{tex.sprint(-2,"#1")}}%

It will need some testing to decide which catcode table is suitable
(for the test I simply took -2 where everything has catcode 12).

But it will not solve all problems in \footnote: % and \ will still
not work. So if you want to use url's in argument of other commands
you will probably still need an \urldef-command like with the
standard \url.

-- 
Ulrike Fischer 


From luatex at nililand.de  Thu May  5 10:38:35 2011
From: luatex at nililand.de (Ulrike Fischer)
Date: Thu, 5 May 2011 10:38:35 +0200
Subject: [luatex] Kerning: when does it not work?
References: <123093EB-1F26-4E51-B817-FE7CE21E5C46@unibas.ch>
 <19infrguhpt55.dlg@nililand.de>
Message-ID: <vfso7faeoeun.dlg@nililand.de>

Am Thu, 5 May 2011 10:00:32 +0200 schrieb Ulrike Fischer:

> Am Thu, 5 May 2011 09:06:19 +0200 schrieb Heilmann, Till A.:
> 
>> Well, there are some problems with Paul's code, after all: The  
>> underscore character _ cannot be part of a URL *if* it occurs inside  
>> a footnote (see below). I have not checked for errors with other  
>> characters yet.
> 
> The \url command tries to adjust the catcodes (with the
> \let\do\makeother \dospecials line) but can't do it if the catcode
> is already fixed when used in the argument of another command. 
> 
> You can change the catcodetable additionally in the \setbox command:
> 
> \setbox\urlbox=\hbox{\directlua{tex.sprint(-2,"#1")}}%
> 
> It will need some testing to decide which catcode table is suitable
> (for the test I simply took -2 where everything has catcode 12).
> 
> But it will not solve all problems in \footnote: % and \ will still
> not work. So if you want to use url's in argument of other commands
> you will probably still need an \urldef-command like with the
> standard \url.

I think you will get away with most problems with

\def\url{%
    \begingroup
    \catcode`\%=12
    \URL
    }

\def\URL#1{%
    \setbox\urlbox=\hbox{%
     \directlua{%
      tex.sprint(-2,"\luatexluaescapestring{\unexpanded{#1}}")}}%
.....

You will still not be able to use a % in a footnote-url!

-- 
Ulrike Fischer 


From till.heilmann at unibas.ch  Fri May  6 08:45:49 2011
From: till.heilmann at unibas.ch (Heilmann, Till A.)
Date: Fri, 6 May 2011 08:45:49 +0200
Subject: [luatex] Kerning: when does it not work?
Message-ID: <B0F1D933-A43B-419E-83ED-8ABEC0CC9370@unibas.ch>

On 05/05/2011 10:38 AM, Ulrike Fischer wrote:

> I think you will get away with most problems with
> \def\url{%
> 	\begingroup
> 	\catcode`\%=12
> 	\URL
> 	}
> \def\URL#1{%
> 	\setbox\urlbox=\hbox{%
> 	\directlua{%
> 	tex.sprint(-2,"\luatexluaescapestring{\unexpanded{#1}}")}}%
> .....
> You will still not be able to use a % in a footnote-url!

With Ulrike's modifications, Paul's code works just fine for me (see  
below). No URLs in footnotes containing a % character so far in my  
document... Pheww!

Thank you all, once again, and best regards,
--Till

%%%
\def\makeother#1{\catcode`#1=12 }

\def\url{%
     \begingroup
     \catcode`\%=12
     \URL
     }

\newbox\urlbox

\def\URL#1{%
   \setbox\urlbox=\hbox{%
     \directlua{%
       tex.sprint(-2,"\luatexluaescapestring{\unexpanded{#1}}")}}%
   \directlua{%
      local box = tex.box["urlbox"].list
      local glyf, disc = node.id("glyph"), node.id("disc")
      for n in node.traverse_id(disc, box) do
        node.remove(box, n)
      end
      for n in node.traverse_id(glyf, box) do
        local b = url.breakpoints[n.char]
        if b == "before" then
          url.before(box, n)
        elseif b == "after" then
          url.after(box, n)
        elseif b == "both" then
          url.before(box, n)
          url.after(box, n)
        end
      end}%
    \unhbox\urlbox
    \endgroup
    }

\directlua{
local id, copy, insert_before, insert_after = node.id, node.copy,  
node.insert_before, node.insert_after

url = {}
url.breakpoints = {}
local penalty = node.new(id("penalty"))
penalty.penalty = 0

function url.before (l, n)
    if n.prev then
      if n.prev.id == id("kern") and n.prev.subtype == 0 then
        n = n.prev
      end
      insert_before(l, n, copy(penalty))
    end
end

function url.after(l, n)
    if n.next then
      insert_after(l, n, copy(penalty))
    end
end
}

\def\urladdbreakpoint#1#2{%
    \directlua{url.breakpoints[\the\numexpr`#1] = "#2"}%
    }

\urladdbreakpoint{.}{after}
\urladdbreakpoint{@}{after}
\urladdbreakpoint{\\}{after}
\urladdbreakpoint{/}{after}
\urladdbreakpoint{!}{both}
\urladdbreakpoint{_}{both}
\urladdbreakpoint{;}{after}
\urladdbreakpoint{>}{after}
\urladdbreakpoint{]}{after}
\urladdbreakpoint{)}{after}
\urladdbreakpoint{,}{after}
\urladdbreakpoint{?}{both}
\urladdbreakpoint{'}{after}
\urladdbreakpoint{+}{both}
\urladdbreakpoint{=}{both}
%%%

From taco at elvenkind.com  Fri May  6 11:44:50 2011
From: taco at elvenkind.com (Taco Hoekwater)
Date: Fri, 06 May 2011 11:44:50 +0200
Subject: [luatex] Luatex 0.70.0 announcement
Message-ID: <4DC3C312.3070007@elvenkind.com>

Hi,

I have just uploaded the archives for a new luatex release, 0.70.0.

This release will be the one on TeXLive 2011 (barring show-stopping
bugs). Compared to 0.66, there is not a lot of news, just a few
bug-fixes.

News:


* fixed: various changes needed for libpng 1.5.2.

* fixed: node.fields() for nodes without subtype.

* fixed: non-argument use of os.execute().

* fixed: tex.[s|t|]print() with invalid catcode table arguments.

* fixed: recorder filename location with --output-directory.

* fixed: display alignment in TRT mode.

* luatex now uses the standard synctex files from J?rome Laurens.


The archives can be downloaded from supelec as usual:

         http://foundry.supelec.fr/gf/project/luatex/

You could also check out the sources via anonymous svn:

   svn co http://foundry.supelec.fr/svn/luatex/tags/beta-0.70.0

Bugs and feature requests can be added to the issue tracker at

        http://tracker.luatex.org

Have fun,
Taco




From zappathustra at free.fr  Fri May  6 11:50:57 2011
From: zappathustra at free.fr (Paul Isambert)
Date: Fri, 06 May 2011 11:50:57 +0200
Subject: [luatex] Kerning: when does it not work?
In-Reply-To: <B0F1D933-A43B-419E-83ED-8ABEC0CC9370@unibas.ch>
References: <B0F1D933-A43B-419E-83ED-8ABEC0CC9370@unibas.ch>
Message-ID: <4DC3C481.9050809@free.fr>

Le 06/05/2011 08:45, Heilmann, Till A. a ?crit :
> On 05/05/2011 10:38 AM, Ulrike Fischer wrote:
>
>> I think you will get away with most problems with
>> \def\url{%
>>     \begingroup
>>     \catcode`\%=12
>>     \URL
>>     }
>> \def\URL#1{%
>>     \setbox\urlbox=\hbox{%
>>     \directlua{%
>>     tex.sprint(-2,"\luatexluaescapestring{\unexpanded{#1}}")}}%
>> .....
>> You will still not be able to use a % in a footnote-url!
>
> With Ulrike's modifications, Paul's code works just fine for me (see 
> below). No URLs in footnotes containing a % character so far in my 
> document... Pheww!

If this should happen, you could replace the % by \% and then 
postprocess the url (once typeset, before adding the penalties) to 
remove the backslash. Not an ideal solution, given that you have to 
modify the original urls (not to mention what happens with a real 
sequences backslash + percent), but it would work.

Also, adding breakpoints one by one with \urladdbreakpoint is a bit 
tedious, so here's a redefinition of it so you can say 
\urladdbreakpoint{<list of breakpoints>}{<position>} instead:

\def\endofbreakpoints{\endofbreakpoints}
\def\urladdbreakpoint#1#2{%
   \URLaddbreakpoint{#2}#1\endofbreakpoints
   }
\def\gobble#1{}%
\def\URLaddbreakpoint#1#2{%
   \ifx#2\endofbreakpoints
     \expandafter\gobble
   \else
     \directlua{url.breakpoints[\the\numexpr`#2] = "#1"}%
     \expandafter\URLaddbreakpoint
   \fi
   {#1}%
   }

So now the list of calls to \urladdbreakpoint at the end of your file 
can be replaced with (spaces are optional):

\urladdbreakpoint{ . @ \\ / ; > ] ) , ' }{after}
\urladdbreakpoint{ ! _ ? + = }{both}

Best,
Paul


From dpl at sun.ac.za  Fri May  6 11:51:41 2011
From: dpl at sun.ac.za (Dirk Laurie)
Date: Fri, 6 May 2011 11:51:41 +0200
Subject: [luatex] Lua long strings
Message-ID: <20110506095141.GA2961@rondloper>

I'd like to define a Latex environment "verbatimlua" that allows:

\begin{verbatimlua}
s = [[
A long Lua string containing special characters like \ and %,
with end-of-lines respected too.
]]
print(s) -- all of s on the screen and in the log file
tex.print(string.format("%.5f",math.pi))) -- 3.14159 in the TeX output
\end{verbatimlua}

I.e. it works like "verbatim" but the contents is passed to the Lua
engine instead.  Same as putting it in a file xxx.lua and saying 
\directlua{ dofile"xxx" }

I can't possibly be the first person who has tried and failed to do this.
Maybe someone has tried and succeeded?

Dirk

From luatex at nililand.de  Fri May  6 11:57:49 2011
From: luatex at nililand.de (Ulrike Fischer)
Date: Fri, 6 May 2011 11:57:49 +0200
Subject: [luatex] Kerning: when does it not work?
References: <B0F1D933-A43B-419E-83ED-8ABEC0CC9370@unibas.ch>
 <4DC3C481.9050809@free.fr>
Message-ID: <1nxts5qopycff.dlg@nililand.de>

Am Fri, 06 May 2011 11:50:57 +0200 schrieb Paul Isambert:

> So now the list of calls to \urladdbreakpoint at the end of your file 
> can be replaced with (spaces are optional):
> 
> \urladdbreakpoint{ . @ \\ / ; > ] ) , ' }{after}
> \urladdbreakpoint{ ! _ ? + = }{both}

It would fine if one could suppress breaking *between* two slashes
"//". 

   http:/
/www

looks odd.
-- 
Ulrike Fischer 


From st_philipp at yahoo.de  Fri May  6 12:06:32 2011
From: st_philipp at yahoo.de (Philipp Stephani)
Date: Fri, 6 May 2011 12:06:32 +0200
Subject: [luatex] Lua long strings
In-Reply-To: <20110506095141.GA2961@rondloper>
References: <20110506095141.GA2961@rondloper>
Message-ID: <FFC5D57C-F71B-4882-B9EF-EEDA17EC58C6@yahoo.de>


Am 06.05.2011 um 11:51 schrieb Dirk Laurie:

> I'd like to define a Latex environment "verbatimlua" that allows:
> 
> \begin{verbatimlua}
> s = [[
> A long Lua string containing special characters like \ and %,
> with end-of-lines respected too.
> ]]
> print(s) -- all of s on the screen and in the log file
> tex.print(string.format("%.5f",math.pi))) -- 3.14159 in the TeX output
> \end{verbatimlua}
> 
> I.e. it works like "verbatim" but the contents is passed to the Lua
> engine instead.  Same as putting it in a file xxx.lua and saying 
> \directlua{ dofile"xxx" }
> 
> I can't possibly be the first person who has tried and failed to do this.
> Maybe someone has tried and succeeded?

See the luacode package:
http://ctan.org/pkg/luacode

From zappathustra at free.fr  Fri May  6 12:08:23 2011
From: zappathustra at free.fr (Paul Isambert)
Date: Fri, 06 May 2011 12:08:23 +0200
Subject: [luatex] Kerning: when does it not work?
In-Reply-To: <1nxts5qopycff.dlg@nililand.de>
References: <B0F1D933-A43B-419E-83ED-8ABEC0CC9370@unibas.ch>
 <4DC3C481.9050809@free.fr> <1nxts5qopycff.dlg@nililand.de>
Message-ID: <4DC3C897.2080101@free.fr>

Le 06/05/2011 11:57, Ulrike Fischer a ?crit :
> Am Fri, 06 May 2011 11:50:57 +0200 schrieb Paul Isambert:
>
>> So now the list of calls to \urladdbreakpoint at the end of your file
>> can be replaced with (spaces are optional):
>>
>> \urladdbreakpoint{ . @ \\ / ;>  ] ) , ' }{after}
>> \urladdbreakpoint{ ! _ ? + = }{both}
> It would fine if one could suppress breaking *between* two slashes
> "//".
>
>     http:/
> /www
>
> looks odd.

I'd thought of it, actually specifying breakpoints not before/after 
characters but before/after sequences; you'd need something like ``you 
can break after a slash unless it is followed by another slash''. The 
problem is it's a little bit more work, and we're turning this help to 
Till into package writing :)

Some times ago, I have written a tentative file meant to find sequences 
of nodes somehow like regexps; it could be put to use here, if it were 
cleaned up, but it would be a bit of an overkill. Probably defining 
things here like ``remove penalty between pair of slashes'' (to be 
applied after penalties have been inserted) would be simpler, albeit 
quite ad hoc and unelegant.

Best,
Paul

From zappathustra at free.fr  Fri May  6 12:11:13 2011
From: zappathustra at free.fr (Paul Isambert)
Date: Fri, 06 May 2011 12:11:13 +0200
Subject: [luatex] Lua long strings
In-Reply-To: <FFC5D57C-F71B-4882-B9EF-EEDA17EC58C6@yahoo.de>
References: <20110506095141.GA2961@rondloper>
 <FFC5D57C-F71B-4882-B9EF-EEDA17EC58C6@yahoo.de>
Message-ID: <4DC3C941.20807@free.fr>

Le 06/05/2011 12:06, Philipp Stephani a ?crit :
> Am 06.05.2011 um 11:51 schrieb Dirk Laurie:
>
>> I'd like to define a Latex environment "verbatimlua" that allows:
>>
>> \begin{verbatimlua}
>> s = [[
>> A long Lua string containing special characters like \ and %,
>> with end-of-lines respected too.
>> ]]
>> print(s) -- all of s on the screen and in the log file
>> tex.print(string.format("%.5f",math.pi))) -- 3.14159 in the TeX output
>> \end{verbatimlua}
>>
>> I.e. it works like "verbatim" but the contents is passed to the Lua
>> engine instead.  Same as putting it in a file xxx.lua and saying
>> \directlua{ dofile"xxx" }
>>
>> I can't possibly be the first person who has tried and failed to do this.
>> Maybe someone has tried and succeeded?
> See the luacode package:
> http://ctan.org/pkg/luacode

Alternatively, if you want to do it by yourself, here's the cookbook: 
http://wiki.luatex.org/index.php/Writing_Lua_in_TeX (see the definition 
of \luacode in section ? Special characters ?).

Paul

From dpl at sun.ac.za  Fri May  6 16:19:40 2011
From: dpl at sun.ac.za (Dirk Laurie)
Date: Fri, 6 May 2011 16:19:40 +0200
Subject: [luatex] Lua long strings
In-Reply-To: <4DC3C941.20807@free.fr>
References: <20110506095141.GA2961@rondloper>
 <FFC5D57C-F71B-4882-B9EF-EEDA17EC58C6@yahoo.de>
 <4DC3C941.20807@free.fr>
Message-ID: <20110506141940.GA3220@rondloper>

On Fri, May 06, 2011 at 12:11:13PM +0200, Paul Isambert wrote:
> Le 06/05/2011 12:06, Philipp Stephani a ?crit :
> > See the luacode package:
> > http://ctan.org/pkg/luacode
> 
> Alternatively, if you want to do it by yourself, here's the cookbook: 
> http://wiki.luatex.org/index.php/Writing_Lua_in_TeX (see the definition 
> of \luacode in section ? Special characters ?).
> 
Wow!  Two replies, both on the button.  And the do-it-yourself version 
seems to have been custom-written just for me.  It has the advantage 
that one can customize the selection of special characters that are 
taken away from TeX.  So it answers my next few questions even before
I get around to asking them!

Dirk


From st_philipp at yahoo.de  Sat May  7 09:27:49 2011
From: st_philipp at yahoo.de (Philipp Stephani)
Date: Sat, 7 May 2011 09:27:49 +0200
Subject: [luatex] [tex-live] Location of recorder file
In-Reply-To: <201105070101.p4711211021320@freefriends.org>
References: <201105070101.p4711211021320@freefriends.org>
Message-ID: <0061FBFE-8E30-43AC-98FE-86007A062DCF@yahoo.de>


Am 07.05.2011 um 03:01 schrieb Karl Berry:

>    LuaTeX calls recorder_change_filename only once, with \jobname + .fls,
>    so I don't think other changes are necessary.
> 
> No, there is still a bug.  Here is the case that fails, at least with
> the current luatex sources in TL:
> 
> $ mkdir tex
> $ echo 'hello\end' >tex/hello.tex
> $ $workdir/luatex -ini -recorder -output-directory=/tmp tex/hello.tex 
> This is LuaTeX, Version beta-0.70.0-2011050519 (rev 4247)  (INITEX)
> /home/texlive/karl/Build/source/Work/texk/web2c/luatex: /tmp/tex/hello.tex12112.fls: No such file or directory
> 
> That is, given a relative path for the input file, it appends the
> directory part of the input path to the -output-directory.  It shouldn't
> do that.  (The other engines all work ok, just using the basename.)
> 
> I have no idea any more about what code has been applied where, but some
> fix is presumably needed.

Thanks for the investigation. The bug doesn't seem to occur in LuaTeX rev 4245, but since it's an important situation, I've modified the test script to use relative file names as well. This should be more general since input, output, and working directory are now all different.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: test-output-dir.sh
Type: application/octet-stream
Size: 4769 bytes
Desc: not available
URL: <http://tug.org/pipermail/luatex/attachments/20110507/1ac4e0f3/attachment.obj>

From st_philipp at yahoo.de  Sat May  7 14:23:36 2011
From: st_philipp at yahoo.de (Philipp Stephani)
Date: Sat, 7 May 2011 14:23:36 +0200
Subject: [luatex] [tex-live] Location of recorder file
In-Reply-To: <0061FBFE-8E30-43AC-98FE-86007A062DCF@yahoo.de>
References: <201105070101.p4711211021320@freefriends.org>
 <0061FBFE-8E30-43AC-98FE-86007A062DCF@yahoo.de>
Message-ID: <E2D494ED-E641-469E-BC75-FE603505A004@yahoo.de>


Am 07.05.2011 um 09:27 schrieb Philipp Stephani:

> 
> Am 07.05.2011 um 03:01 schrieb Karl Berry:
> 
>>   LuaTeX calls recorder_change_filename only once, with \jobname + .fls,
>>   so I don't think other changes are necessary.
>> 
>> No, there is still a bug.  Here is the case that fails, at least with
>> the current luatex sources in TL:
>> 
>> $ mkdir tex
>> $ echo 'hello\end' >tex/hello.tex
>> $ $workdir/luatex -ini -recorder -output-directory=/tmp tex/hello.tex 
>> This is LuaTeX, Version beta-0.70.0-2011050519 (rev 4247)  (INITEX)
>> /home/texlive/karl/Build/source/Work/texk/web2c/luatex: /tmp/tex/hello.tex12112.fls: No such file or directory
>> 
>> That is, given a relative path for the input file, it appends the
>> directory part of the input path to the -output-directory.  It shouldn't
>> do that.  (The other engines all work ok, just using the basename.)
>> 
>> I have no idea any more about what code has been applied where, but some
>> fix is presumably needed.
> 
> Thanks for the investigation. The bug doesn't seem to occur in LuaTeX rev 4245, but since it's an important situation, I've modified the test script to use relative file names as well. This should be more general since input, output, and working directory are now all different.

Sorry, I missed the fact that the bug occurs only in Ini mode. Reported as http://tracker.luatex.org/view.php?id=626. I've also updated the test script to include test for Ini mode. New location at https://github.com/phst/tex-tools/blob/master/test-output-dir.sh


From karl at freefriends.org  Sat May  7 03:01:02 2011
From: karl at freefriends.org (Karl Berry)
Date: Sat, 7 May 2011 01:01:02 GMT
Subject: [luatex] [tex-live] Location of recorder file
In-Reply-To: <79EA3ECD-931C-4D7A-BBEA-3696BE3DF161@yahoo.de>
Message-ID: <201105070101.p4711211021320@freefriends.org>

    LuaTeX calls recorder_change_filename only once, with \jobname + .fls,
    so I don't think other changes are necessary.

No, there is still a bug.  Here is the case that fails, at least with
the current luatex sources in TL:

$ mkdir tex
$ echo 'hello\end' >tex/hello.tex
$ $workdir/luatex -ini -recorder -output-directory=/tmp tex/hello.tex 
This is LuaTeX, Version beta-0.70.0-2011050519 (rev 4247)  (INITEX)
/home/texlive/karl/Build/source/Work/texk/web2c/luatex: /tmp/tex/hello.tex12112.fls: No such file or directory

That is, given a relative path for the input file, it appends the
directory part of the input path to the -output-directory.  It shouldn't
do that.  (The other engines all work ok, just using the basename.)

I have no idea any more about what code has been applied where, but some
fix is presumably needed.

Best,
k

From kakuto at fuk.kindai.ac.jp  Sat May  7 05:37:36 2011
From: kakuto at fuk.kindai.ac.jp (Akira Kakuto)
Date: Sat, 07 May 2011 12:37:36 +0900
Subject: [luatex] [tex-live] Location of recorder file
In-Reply-To: <201105070101.p4711211021320@freefriends.org>
References: <201105070101.p4711211021320@freefriends.org>
Message-ID: <1304739456164068000056e1@sniffer>

Hi Karl,

> I have no idea any more about what code has been applied where,
> but some fix is presumably needed.

In the case of luatex --ini, kpse_program_name is
a garbage. Fortunately, I've found that kpse_invocation_name
is set even in the case of luatex --ini.
After applying the following patch, I think all engines
become ok.

Thanks,
Akira


--- openclose.c.orig	Wed May 04 08:23:00 2011
+++ openclose.c	Sat May 07 12:23:23 2011
@@ -45,11 +45,13 @@
     string cwd;
     pid_t pid = getpid();
     char pid_str[MAX_INT_LENGTH];
+    string prgname;
     sprintf (pid_str, "%ld", (long) pid);
-    
-    recorder_name = xmalloc(strlen(kpse_program_name)
+
+    prgname = remove_suffix (kpse_invocation_name);
+    recorder_name = xmalloc(strlen(prgname)
                                     + strlen (pid_str) + 5);
-    strcpy(recorder_name, kpse_program_name);
+    strcpy(recorder_name, prgname);
     strcat(recorder_name, pid_str);
     strcat(recorder_name, ".fls");
     
--- texfileio.w.orig	Thu May 05 23:59:18 2011
+++ texfileio.w	Sat May 07 12:25:27 2011
@@ -785,13 +785,7 @@
 unsigned char *texmf_log_name;  /* full name of the log file */
 
 static void set_recorder_filename(char *filename) {
-    if (output_directory) {
-        filename = concat3(output_directory, DIR_SEP_STRING, filename);
-        recorder_change_filename(filename);
-        free(filename);
-    } else {
-        recorder_change_filename(filename);
-    }
+    recorder_change_filename(filename);
 }
 
 


From karl at freefriends.org  Sun May  8 01:23:02 2011
From: karl at freefriends.org (Karl Berry)
Date: Sat, 7 May 2011 23:23:02 GMT
Subject: [luatex] [tex-live] Location of recorder file
In-Reply-To: <1304739456164068000056e1@sniffer>
Message-ID: <201105072323.p47NN286010969@freefriends.org>

    In the case of luatex --ini, kpse_program_name is a garbage

1) Seems like that is a general problem that should be fixed.  It
   shouldn't be "garbage".

2) The problem doesn't manifest as anything about the program name
   (there is no garbage in the file name), but as about relative path
   names in the input file.

Taco ... ?

(It's also fine with me if this doesn't get fixed for TL'11.)

Thanks,
k

From kakuto at fuk.kindai.ac.jp  Sun May  8 03:27:57 2011
From: kakuto at fuk.kindai.ac.jp (Akira Kakuto)
Date: Sun, 08 May 2011 10:27:57 +0900
Subject: [luatex] [tex-live] Location of recorder file
In-Reply-To: <201105072323.p47NN286010969@freefriends.org>
References: <201105072323.p47NN286010969@freefriends.org>
Message-ID: <130481807720208900000f76@sniffer>

Hi Karl, Taco,

> 1) Seems like that is a general problem that should be fixed.  It
>    shouldn't be "garbage".

I found that all is ok by the following changes for LuaTeX.
I assume openclose.c in the present TeX Live repository.

Thanks,
Akira


--- luainit.w.orig	Thu May 05 23:59:18 2011
+++ luainit.w	Sun May 08 10:18:18 2011
@@ -741,6 +741,7 @@
     ptexbanner = banner;
 
     kpse_invocation_name = cleaned_invocation_name(argv[0]);
+    kpse_program_name = kpse_invocation_name;
 
     /* be 'luac' */
     if (argc > 1 &&

--- texfileio.w.orig	Thu May 05 23:59:18 2011
+++ texfileio.w	Sun May 08 10:18:56 2011
@@ -785,13 +785,7 @@
 unsigned char *texmf_log_name;  /* full name of the log file */
 
 static void set_recorder_filename(char *filename) {
-    if (output_directory) {
-        filename = concat3(output_directory, DIR_SEP_STRING, filename);
-        recorder_change_filename(filename);
-        free(filename);
-    } else {
-        recorder_change_filename(filename);
-    }
+     recorder_change_filename(filename);
 }
 
 


From kakuto at fuk.kindai.ac.jp  Sun May  8 06:45:23 2011
From: kakuto at fuk.kindai.ac.jp (Akira Kakuto)
Date: Sun, 08 May 2011 13:45:23 +0900
Subject: [luatex] [tex-live] Location of recorder file
In-Reply-To: <130481807720208900000f76@sniffer>
References: <130481807720208900000f76@sniffer>
Message-ID: <13048299237020990000125b@sniffer>

Hi Karl, Taco,

> I found that all is ok by the following changes for LuaTeX.
> I assume openclose.c in the present TeX Live repository.

I was wrong. Still kpse_program_name equals tex/hello.tex
in Karl's example.

Thanks,
Akira


From kakuto at fuk.kindai.ac.jp  Sun May  8 08:04:49 2011
From: kakuto at fuk.kindai.ac.jp (Akira Kakuto)
Date: Sun, 08 May 2011 15:04:49 +0900
Subject: [luatex] [tex-live] Location of recorder file
In-Reply-To: <13048299237020990000125b@sniffer>
References: <13048299237020990000125b@sniffer>
Message-ID: <130483468990764700001383@sniffer>

Hi Karl, Taco,

> I was wrong. Still kpse_program_name equals tex/hello.tex
> in Karl's example.

In
    kpse_set_program_name(argv[0], user_progname);
in luainit.w,
user_progname is determined as follows in ini mode:
(1) user_progname = input_name;
(2) if (user_progname == 0)
      user_progname = remove_suffix (kpse_invocation_name);

The above is the reason why kpse_program_name equals "tex/hello.tex"
in Karl's example.

Taco, is it necessary to set user_progname = input_name
in the ini mode?

In the case that it is necessary, the present problem is solved
if Taco uses user_progname = (string) xbasename (input_name);

Thanks,
Akira


From mc at melusine.eu.org  Sun May  8 10:52:11 2011
From: mc at melusine.eu.org (Maxime Chupin)
Date: Sun, 8 May 2011 09:52:11 +0100
Subject: [luatex] Description of OpenType Math tables
Message-ID: <BANLkTimNfhdygfsykuzWtZfcuzMmC2iAFA@mail.gmail.com>

Hi,

I am looking for a precise description of the different parameters of
OpenType Maths (for example OverbarRuleThickness) to understand subtilities
introduced by LuaTeX. Because I do not know anything about OpenType, neither
luatex-ref or *OpenType* Mat*h Illumi*nated does not help me? I have not
found anything on the Microsoft webiste.

Is there any documents ?

Thanks,

-- 
Maxime Chupin
http://mc.notezik.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://tug.org/pipermail/luatex/attachments/20110508/7178a3ba/attachment.html>

From st_philipp at yahoo.de  Sun May  8 11:45:57 2011
From: st_philipp at yahoo.de (Philipp Stephani)
Date: Sun, 8 May 2011 11:45:57 +0200
Subject: [luatex] Description of OpenType Math tables
In-Reply-To: <BANLkTimNfhdygfsykuzWtZfcuzMmC2iAFA@mail.gmail.com>
References: <BANLkTimNfhdygfsykuzWtZfcuzMmC2iAFA@mail.gmail.com>
Message-ID: <F49F2767-2EDA-459B-8B20-2EBAF8961AA5@yahoo.de>


Am 08.05.2011 um 10:52 schrieb Maxime Chupin:

> Hi,
> 
> I am looking for a precise description of the different parameters of OpenType Maths (for example OverbarRuleThickness) to understand subtilities introduced by LuaTeX. Because I do not know anything about OpenType, neither luatex-ref or OpenType Math Illuminated does not help me? I have not found anything on the Microsoft webiste.
> 
> Is there any documents ?

Yes, but they are not public. Write to Murray Sargent or some other Microsoft guy and ask them to send you the document.

From taco at elvenkind.com  Sun May  8 13:09:15 2011
From: taco at elvenkind.com (Taco Hoekwater)
Date: Sun, 08 May 2011 13:09:15 +0200
Subject: [luatex] [tex-live] Location of recorder file
In-Reply-To: <130483468990764700001383@sniffer>
References: <13048299237020990000125b@sniffer>
 <130483468990764700001383@sniffer>
Message-ID: <4DC679DB.3010403@elvenkind.com>

On 05/08/2011 08:04 AM, Akira Kakuto wrote:
> 
> Taco, is it necessary to set user_progname = input_name
> in the ini mode?

Will check tomorrow.After BachoTeX, my family took over my life for a
few days so I am horribly behind on my e-mail right now.

Best wishes,
Taco

From taco at elvenkind.com  Mon May  9 12:26:17 2011
From: taco at elvenkind.com (Taco Hoekwater)
Date: Mon, 09 May 2011 12:26:17 +0200
Subject: [luatex] [tex-live]   Location of recorder file
In-Reply-To: <4DC679DB.3010403@elvenkind.com>
References: <13048299237020990000125b@sniffer>
 <130483468990764700001383@sniffer> <4DC679DB.3010403@elvenkind.com>
Message-ID: <4DC7C149.3010308@elvenkind.com>

On 05/08/2011 01:09 PM, Taco Hoekwater wrote:
> On 05/08/2011 08:04 AM, Akira Kakuto wrote:
>>
>> Taco, is it necessary to set user_progname = input_name
>> in the ini mode?
> 
> Will check tomorrow.After BachoTeX, my family took over my life for a
> few days so I am horribly behind on my e-mail right now.

Well, I tried, but now I am lost in the various patches also.
Akira, can you please patch luatex-in-texlive? I tried applying
your patches to the luatex repository, but it does not
seem to help: I always get

/opt/tex/texmf-linux-64/bin/luatex: /tmp/tex/hello.tex2570.fls: No such
file or directory

from within recorder_start, even though I did copy the latest version
of openclose.c from texlive.

Best wishes,
Taco

From kakuto at fuk.kindai.ac.jp  Mon May  9 13:09:44 2011
From: kakuto at fuk.kindai.ac.jp (Akira Kakuto)
Date: Mon, 09 May 2011 20:09:44 +0900
Subject: [luatex] [tex-live]   Location of recorder file
In-Reply-To: <4DC7C149.3010308@elvenkind.com>
References: <4DC7C149.3010308@elvenkind.com>
Message-ID: <130493938484433700004895@sniffer>

Hi Taco,

> Akira, can you please patch luatex-in-texlive? 

Done. (r22374). Here it is working ok.
But I'm not on unix. Please test.

Thanks,
Akira


From taco at elvenkind.com  Mon May  9 13:21:11 2011
From: taco at elvenkind.com (Taco Hoekwater)
Date: Mon, 09 May 2011 13:21:11 +0200
Subject: [luatex] [tex-live]   Location of recorder file
In-Reply-To: <130493938484433700004895@sniffer>
References: <4DC7C149.3010308@elvenkind.com> <130493938484433700004895@sniffer>
Message-ID: <4DC7CE27.5040109@elvenkind.com>

On 05/09/2011 01:09 PM, Akira Kakuto wrote:
> Hi Taco,
> 
>> Akira, can you please patch luatex-in-texlive?
> 
> Done. (r22374). Here it is working ok.
> But I'm not on unix. Please test.

Yes, now it works. Thank you, backported.

Best wishes,
Taco

From zappathustra at free.fr  Tue May 10 15:42:41 2011
From: zappathustra at free.fr (Paul Isambert)
Date: Tue, 10 May 2011 15:42:41 +0200
Subject: [luatex] First (optional?) arguments of tex.getcount and friends.
Message-ID: <4DC940D1.8030302@free.fr>

Hello all,

I have noticed that the function tex.getcount() and similar can take any 
number of arguments and ignore them all but the last. E.g.:

\directlua{
   texio.write_nl(tex.getcount("a string", nothing, node.new(11), 55, 0))
}

returns "1", i.e. the value of count 0, ignoring the string, the nil 
value, the node, and the number.

Is that normal? Am I missing something? My LuaTeX is 0.71.

Best,
Paul

From taco at elvenkind.com  Tue May 10 15:44:48 2011
From: taco at elvenkind.com (Taco Hoekwater)
Date: Tue, 10 May 2011 15:44:48 +0200
Subject: [luatex] First (optional?) arguments of tex.getcount and
	friends.
In-Reply-To: <4DC940D1.8030302@free.fr>
References: <4DC940D1.8030302@free.fr>
Message-ID: <4DC94150.5040200@elvenkind.com>

On 05/10/2011 03:42 PM, Paul Isambert wrote:
> Hello all,
>
> I have noticed that the function tex.getcount() and similar can take any
> number of arguments and ignore them all but the last. E.g.:
>
> \directlua{
> texio.write_nl(tex.getcount("a string", nothing, node.new(11), 55, 0))
> }
>
> returns "1", i.e. the value of count 0, ignoring the string, the nil
> value, the node, and the number.
>
> Is that normal? Am I missing something? My LuaTeX is 0.71.

I am not surprised: lua pushes the arguments on a stack, and then the
getcount function takes the topmost entry. I could add an explicit
test for the number of arguments, but that is a bit of wasted effort,
in Hans' and my opinion.

Best wishes,
Taco

From zappathustra at free.fr  Tue May 10 16:04:09 2011
From: zappathustra at free.fr (Paul Isambert)
Date: Tue, 10 May 2011 16:04:09 +0200
Subject: [luatex] First (optional?) arguments of tex.getcount and
	friends.
In-Reply-To: <4DC94150.5040200@elvenkind.com>
References: <4DC940D1.8030302@free.fr> <4DC94150.5040200@elvenkind.com>
Message-ID: <4DC945D9.1010709@free.fr>

Le 10/05/2011 15:44, Taco Hoekwater a ?crit :
> On 05/10/2011 03:42 PM, Paul Isambert wrote:
>> Hello all,
>>
>> I have noticed that the function tex.getcount() and similar can take any
>> number of arguments and ignore them all but the last. E.g.:
>>
>> \directlua{
>> texio.write_nl(tex.getcount("a string", nothing, node.new(11), 55, 0))
>> }
>>
>> returns "1", i.e. the value of count 0, ignoring the string, the nil
>> value, the node, and the number.
>>
>> Is that normal? Am I missing something? My LuaTeX is 0.71.
>
> I am not surprised: lua pushes the arguments on a stack, and then the
> getcount function takes the topmost entry. I could add an explicit
> test for the number of arguments, but that is a bit of wasted effort,
> in Hans' and my opinion.

Well, that could be useful in the quite unlikely situation where you 
pass several arguments to a function whose definition and number of 
arguments might change and you expect it to discard the last ones if 
necessary. Admittedly not worth the test.

Thanks for the explanation,
Paul

From mailing_list at arcor.de  Tue May 10 15:55:10 2011
From: mailing_list at arcor.de (Stephan Hennig)
Date: Tue, 10 May 2011 15:55:10 +0200
Subject: [luatex] wrong hyphenation in four-letter word
Message-ID: <4DC943BE.60902@arcor.de>

[sending to luatex and lualatex list]

Hi,

I'm observing a wrong hyphenation of a four-letter word with lualatex
and German hyphenation patterns.  For the German language,
\lefthyphenmin and \righthyphenmin are both set to 2, so that
four-letter words can indeed be hyphenated, such as ei-ne.  But the word
"sich" shouldn't be hyphenated at all, whereas it is
hyphenated as si-ch:

\listfiles
\documentclass{minimal}
\usepackage{fontspec}
\usepackage[ngerman]{babel}
\begin{document}
\showhyphens{sich eine}
\end{document}

> Underfull \hbox (badness 10000) in paragraph at lines 9--9
> [][] \EU2/lmr/m/n/10 si-ch ei-ne


Decomposing "sich" into patterns with file

  >kpsewhich hyph-de-1996.tex
  f:/texlive/2010/texmf-dist/tex/generic/hyph-utf8/patterns/tex/
  hyph-de-1996.tex

I find the following matching patterns[1]

  2ic
  5si1c
  4ch.
  1si
  c4h

which give

    2i c
  5s i1c
      4c h.
  1s i
       c4h
  ---------
  5s2i4c4h.

That is, according to the patterns, the word shouldn't be hyphenated.
It looks like the pattern "4ch." isn't taken into account.  Any idea
what's going wrong here?

Best regards,
Stephan Hennig

[1] Please re-check the pattern decomposition.  I have done that with a
self-written programme that dates back to my first Lua experiments and
is hardly documented.  A re-write of that tool is stuck at an unusable
state, unfortunately. :(


> >lualatex -version
> This is LuaTeX, Version beta-0.70.0-2011050815 (Web2C 2011) (rev 4247)


>  *File List*
>  minimal.cls    2001/05/25 Standard LaTeX minimal class
> fontspec.sty    2011/02/26 v2.1f Advanced font selection for XeLaTeX/LuaLaTeX
>    expl3.sty    2011/04/09 v2222 L3 Experimental code bundle wrapper
>  l3names.sty    2011/01/08 v2122 L3 Experimental Naming Scheme for TeX Primitiv
> es
>   luatex.sty    2010/03/09 v0.4 LuaTeX basic definition package (HO)
> infwarerr.sty    2010/04/08 v1.3 Providing info/warning/message (HO)
> ifluatex.sty    2010/03/01 v1.3 Provides the ifluatex switch (HO)
>     etex.sty    1998/03/26 v2.0 eTeX basic definition package (PEB)
> luatex-loader.sty    2010/03/09 v0.4 Lua module loader (HO)
> pdftexcmds.sty    2011/04/22 v0.16 Utilities of pdfTeX for LuaTeX (HO)
>  ltxcmds.sty    2011/04/18 v1.20 LaTeX kernel commands for general use (HO)
>    ifpdf.sty    2011/01/30 v2.3 Provides the ifpdf switch (HO)
> l3basics.sty    2011/04/23 v2246 L3 Experimental basic definitions
>  l3expan.sty    2011/04/09 v2223 L3 Experimental Argument Expansion module
>     l3tl.sty    2011/04/09 v2223 L3 Experimental Token Lists
>    l3int.sty    2011/04/11 v2229 L3 Experimental Integer module
>  l3quark.sty    2011/04/14 v2234 L3 Experimental Quark Commands
>    l3seq.sty    2011/04/21 v2245 The LaTeX3 kernel: sequences and stacks
>   l3toks.sty    2011/04/09 v2223 L3 Experimental Token Registers
>    l3prg.sty    2011/04/09 v2223 L3 Experimental control structures
>  l3clist.sty    2011/04/09 v2223 L3 Experimental comma separated lists
>  l3token.sty    2011/04/09 v2223 L3 Experimental token investigation and manipu
> lation
>   l3prop.sty    2011/04/09 v2223 L3 Experimental Property Lists
>    l3msg.sty    2010/10/02 v2052 L3 Experimental LaTeX Messages module
>     l3io.sty    2010/10/03 v2063 L3 Experimental i/o module
>   l3skip.sty    2011/02/15 v2149 L3 Experimental skip registers
>    l3box.sty    2011/04/09 v2223 L3 Experimental Box module
> l3keyval.sty    2011/04/09 v2223 L3 Experimental keyval processing
>   l3keys.sty    2010/11/11 v2082 L3 Experimental key-value support
> l3precom.sty    2011/04/09 v2223 L3 Experimental precompilation module
>   l3xref.sty    2011/04/09 v2223 L3 Experimental cross referencing
>   l3file.sty    2011/04/21 v2242 The LaTeX3 kernel: file operations
>     l3fp.sty    2011/03/19 v2201 L3 Experimental floating-point operations
> l3luatex.sty    2010/07/18 v1985 L3 Experimental LuaTeX functions
>     calc.sty    2007/08/22 v4.3 Infix arithmetic (KKT,FJ)
>   xparse.sty    2011/04/08 v2219 Generic document command parser
> luaotfload.sty    2011/04/21 v1.25 OpenType layout system
> luatexbase.sty    2010/10/06 v0.3 Module utilities for LuaTeX
> luatexbase-compat.sty    2010/10/10 v0.3 Compatibility tools for LuaTeX
> luatexbase-loader.sty    2010/10/10 v0.3 Lua module loader for LuaTeX
> luatexbase-regs.sty    2010/10/10 v0.3 Registers allocation for LuaTeX
> luatexbase-attr.sty    2010/10/10 v0.3 Attributes allocation for LuaTeX
> luatexbase-cctb.sty    2010/10/10 v0.3 Catcodetable allocation for LuaTeX
> luatexbase-mcb.sty    2010/10/10 v0.3 Callback management for LuaTeX
> luatexbase-modutils.sty    2010/10/10 v0.3 Module utilities for LuaTeX
>  xkeyval.sty    2008/08/13 v2.6a package option processing (HA)
>  xkeyval.tex    2008/08/13 v2.6a key=value parser (HA)
> fontspec-patches.sty    2011/02/26 v2.1f Advanced font selection for XeLaTeX/Lu
> aLaTeX
> fixltx2e.sty    2006/09/13 v1.1m fixes to LaTeX
>  fontenc.sty
>   eu2enc.def    2010/05/27 v0.1h Experimental Unicode font encodings
>   eu2lmr.fd    2009/10/30 v1.6 Font defs for Latin Modern
> xunicode.sty    2010/11/06 v0.96 provides access to latin accents and many othe
> r characters in Unicode lower plane
> fontspec.cfg
>    babel.sty    2008/07/06 v3.8l The Babel package
> ngermanb.ldf    2008/07/06 v2.6n new German support from the babel system
>  ***********


From dpl at sun.ac.za  Tue May 10 16:32:54 2011
From: dpl at sun.ac.za (Dirk Laurie)
Date: Tue, 10 May 2011 16:32:54 +0200
Subject: [luatex] First (optional?) arguments of tex.getcount and
 friends.
In-Reply-To: <4DC94150.5040200@elvenkind.com>
References: <4DC940D1.8030302@free.fr>
 <4DC94150.5040200@elvenkind.com>
Message-ID: <20110510143254.GA20796@rondloper>

On Tue, May 10, 2011 at 03:44:48PM +0200, Taco Hoekwater wrote:
> On 05/10/2011 03:42 PM, Paul Isambert wrote:
> > Hello all,
> >
> > I have noticed that the function tex.getcount() and similar can take any
> > number of arguments and ignore them all but the last. E.g.:
> >
> > \directlua{
> > texio.write_nl(tex.getcount("a string", nothing, node.new(11), 55, 0))
> > }
> >
> > returns "1", i.e. the value of count 0, ignoring the string, the nil
> > value, the node, and the number.
> >
> > Is that normal? Am I missing something? My LuaTeX is 0.71.
> 
> I am not surprised: lua pushes the arguments on a stack, and then the
> getcount function takes the topmost entry. I could add an explicit
> test for the number of arguments, but that is a bit of wasted effort,
> in Hans' and my opinion.
It is normal in Lua to ignore any extra arguments, but functions written 
in Lua that use only one argument would ignore all except the _first_.  
It is easy to achieve that from C too: the Lua manual says:
    More specifically, if the stack has n elements, then index 1 
    represents the first element (that is, the element that was 
    pushed onto the stack first) and index n represents the last 
    element; index -1 also represents the last element (that is, 
    the element at the top) and index -n represents the first element.
So it's a question of using index 1 instead of index -1.  

But should we be using the function tex.getcount()?  It is not documented 
in luatexref-t.pdf (at least, my PDF viewer's search function does not 
find it).  Since even documented functions ?can (and will) be changed 
without prior notice?, aren't undocumented ones not even more dangerous?

Dirk


From Arno.Trautmann at gmx.de  Tue May 10 16:37:14 2011
From: Arno.Trautmann at gmx.de (Arno Trautmann)
Date: Tue, 10 May 2011 16:37:14 +0200
Subject: [luatex] wrong hyphenation in four-letter word
In-Reply-To: <4DC943BE.60902@arcor.de>
References: <4DC943BE.60902@arcor.de>
Message-ID: <4DC94D9A.7070607@gmx.de>

Hi all,

Stephan Hennig wrote:
> [sending to luatex and lualatex list]
> Hi,
> 
> I'm observing a wrong hyphenation of a four-letter word with lualatex
> and German hyphenation patterns.

I don't: With your example

> \listfiles
> \documentclass{minimal}
> \usepackage{fontspec}
> \usepackage[ngerman]{babel}
> \begin{document}
> \showhyphens{sich eine}
> \end{document}
> 
>> Underfull \hbox (badness 10000) in paragraph at lines 9--9
>> [][] \EU2/lmr/m/n/10 si-ch ei-ne

I get correctly
Underfull \hbox (badness 10000) in paragraph at lines 6--6
[][] \EU2/lmr/m/n/10 sich ei-ne

>>> lualatex -version
>> This is LuaTeX, Version beta-0.70.0-2011050815 (Web2C 2011) (rev 4247)

This is LuaTeX, Version beta-0.70.0-2011050620 (rev 4250)

file list below,
cheers
Arno

>>  *File List*
>>  minimal.cls    2001/05/25 Standard LaTeX minimal class
>> fontspec.sty    2011/02/26 v2.1f Advanced font selection for XeLaTeX/LuaLaTeX
>>    expl3.sty    2011/04/09 v2222 L3 Experimental code bundle wrapper
>>  l3names.sty    2011/01/08 v2122 L3 Experimental Naming Scheme for TeX Primitiv
>> es
>>   luatex.sty    2010/03/09 v0.4 LuaTeX basic definition package (HO)
>> infwarerr.sty    2010/04/08 v1.3 Providing info/warning/message (HO)
>> ifluatex.sty    2010/03/01 v1.3 Provides the ifluatex switch (HO)
>>     etex.sty    1998/03/26 v2.0 eTeX basic definition package (PEB)
>> luatex-loader.sty    2010/03/09 v0.4 Lua module loader (HO)
>> pdftexcmds.sty    2011/04/22 v0.16 Utilities of pdfTeX for LuaTeX (HO)
>>  ltxcmds.sty    2011/04/18 v1.20 LaTeX kernel commands for general use (HO)
>>    ifpdf.sty    2011/01/30 v2.3 Provides the ifpdf switch (HO)
>> l3basics.sty    2011/04/23 v2246 L3 Experimental basic definitions
>>  l3expan.sty    2011/04/09 v2223 L3 Experimental Argument Expansion module
>>     l3tl.sty    2011/04/09 v2223 L3 Experimental Token Lists
>>    l3int.sty    2011/04/11 v2229 L3 Experimental Integer module
>>  l3quark.sty    2011/04/14 v2234 L3 Experimental Quark Commands
>>    l3seq.sty    2011/04/21 v2245 The LaTeX3 kernel: sequences and stacks
>>   l3toks.sty    2011/04/09 v2223 L3 Experimental Token Registers
>>    l3prg.sty    2011/04/09 v2223 L3 Experimental control structures
>>  l3clist.sty    2011/04/09 v2223 L3 Experimental comma separated lists
>>  l3token.sty    2011/04/09 v2223 L3 Experimental token investigation and manipu
>> lation
>>   l3prop.sty    2011/04/09 v2223 L3 Experimental Property Lists
>>    l3msg.sty    2010/10/02 v2052 L3 Experimental LaTeX Messages module
>>     l3io.sty    2010/10/03 v2063 L3 Experimental i/o module
>>   l3skip.sty    2011/02/15 v2149 L3 Experimental skip registers
>>    l3box.sty    2011/04/09 v2223 L3 Experimental Box module
>> l3keyval.sty    2011/04/09 v2223 L3 Experimental keyval processing
>>   l3keys.sty    2010/11/11 v2082 L3 Experimental key-value support
>> l3precom.sty    2011/04/09 v2223 L3 Experimental precompilation module
>>   l3xref.sty    2011/04/09 v2223 L3 Experimental cross referencing
>>   l3file.sty    2011/04/21 v2242 The LaTeX3 kernel: file operations
>>     l3fp.sty    2011/03/19 v2201 L3 Experimental floating-point operations
>> l3luatex.sty    2010/07/18 v1985 L3 Experimental LuaTeX functions
>>     calc.sty    2007/08/22 v4.3 Infix arithmetic (KKT,FJ)
>>   xparse.sty    2011/04/08 v2219 Generic document command parser
>> luaotfload.sty    2011/04/21 v1.25 OpenType layout system
>> luatexbase.sty    2010/10/06 v0.3 Module utilities for LuaTeX
>> luatexbase-compat.sty    2010/10/10 v0.3 Compatibility tools for LuaTeX
>> luatexbase-loader.sty    2010/10/10 v0.3 Lua module loader for LuaTeX
>> luatexbase-regs.sty    2010/10/10 v0.3 Registers allocation for LuaTeX
>> luatexbase-attr.sty    2010/10/10 v0.3 Attributes allocation for LuaTeX
>> luatexbase-cctb.sty    2010/10/10 v0.3 Catcodetable allocation for LuaTeX
>> luatexbase-mcb.sty    2010/10/10 v0.3 Callback management for LuaTeX
>> luatexbase-modutils.sty    2010/10/10 v0.3 Module utilities for LuaTeX
>>  xkeyval.sty    2008/08/13 v2.6a package option processing (HA)
>>  xkeyval.tex    2008/08/13 v2.6a key=value parser (HA)
>> fontspec-patches.sty    2011/02/26 v2.1f Advanced font selection for XeLaTeX/Lu
>> aLaTeX
>> fixltx2e.sty    2006/09/13 v1.1m fixes to LaTeX
>>  fontenc.sty
>>   eu2enc.def    2010/05/27 v0.1h Experimental Unicode font encodings
>>   eu2lmr.fd    2009/10/30 v1.6 Font defs for Latin Modern
>> xunicode.sty    2010/11/06 v0.96 provides access to latin accents and many othe
>> r characters in Unicode lower plane
>> fontspec.cfg
>>    babel.sty    2008/07/06 v3.8l The Babel package
>> ngermanb.ldf    2008/07/06 v2.6n new German support from the babel system
>>  ***********

 *File List*
 minimal.cls    2001/05/25 Standard LaTeX minimal class
fontspec.sty    2011/02/26 v2.1f Advanced font selection for
XeLaTeX/LuaLaTeX
   expl3.sty    2011/04/09 v2222 L3 Experimental code bundle wrapper
 l3names.sty    2011/01/08 v2122 L3 Experimental Naming Scheme for TeX
Primitiv
es
  luatex.sty    2010/03/09 v0.4 LuaTeX basic definition package (HO)
infwarerr.sty    2010/04/08 v1.3 Providing info/warning/message (HO)
ifluatex.sty    2010/03/01 v1.3 Provides the ifluatex switch (HO)
    etex.sty    1998/03/26 v2.0 eTeX basic definition package (PEB)
luatex-loader.sty    2010/03/09 v0.4 Lua module loader (HO)
pdftexcmds.sty    2011/04/22 v0.16 Utilities of pdfTeX for LuaTeX (HO)
 ltxcmds.sty    2011/04/18 v1.20 LaTeX kernel commands for general use (HO)
   ifpdf.sty    2011/01/30 v2.3 Provides the ifpdf switch (HO)
l3basics.sty    2011/04/23 v2246 L3 Experimental basic definitions
 l3expan.sty    2011/04/09 v2223 L3 Experimental Argument Expansion module
    l3tl.sty    2011/04/09 v2223 L3 Experimental Token Lists
   l3int.sty    2011/04/11 v2229 L3 Experimental Integer module
 l3quark.sty    2011/04/14 v2234 L3 Experimental Quark Commands
   l3seq.sty    2011/04/21 v2245 The LaTeX3 kernel: sequences and stacks
  l3toks.sty    2011/04/09 v2223 L3 Experimental Token Registers
   l3prg.sty    2011/04/09 v2223 L3 Experimental control structures
 l3clist.sty    2011/04/09 v2223 L3 Experimental comma separated lists
 l3token.sty    2011/04/09 v2223 L3 Experimental token investigation and
manipulation
  l3prop.sty    2011/04/09 v2223 L3 Experimental Property Lists
   l3msg.sty    2010/10/02 v2052 L3 Experimental LaTeX Messages module
    l3io.sty    2010/10/03 v2063 L3 Experimental i/o module
  l3skip.sty    2011/02/15 v2149 L3 Experimental skip registers
   l3box.sty    2011/04/09 v2223 L3 Experimental Box module
l3keyval.sty    2011/04/09 v2223 L3 Experimental keyval processing
  l3keys.sty    2010/11/11 v2082 L3 Experimental key-value support
l3precom.sty    2011/04/09 v2223 L3 Experimental precompilation module
  l3xref.sty    2011/04/09 v2223 L3 Experimental cross referencing
  l3file.sty    2011/04/21 v2242 The LaTeX3 kernel: file operations
    l3fp.sty    2011/03/19 v2201 L3 Experimental floating-point operations
l3luatex.sty    2010/07/18 v1985 L3 Experimental LuaTeX functions
    calc.sty    2007/08/22 v4.3 Infix arithmetic (KKT,FJ)
  xparse.sty    2011/04/08 v2219 Generic document command parser
luaotfload.sty    2011/04/21 v1.25 OpenType layout system
luatexbase.sty    2010/10/06 v0.3 Module utilities for LuaTeX
luatexbase-compat.sty    2010/10/10 v0.3 Compatibility tools for LuaTeX
luatexbase-loader.sty    2010/10/10 v0.3 Lua module loader for LuaTeX
luatexbase-regs.sty    2010/10/10 v0.3 Registers allocation for LuaTeX
luatexbase-attr.sty    2010/10/10 v0.3 Attributes allocation for LuaTeX
luatexbase-cctb.sty    2010/10/10 v0.3 Catcodetable allocation for LuaTeX
luatexbase-mcb.sty    2010/10/10 v0.3 Callback management for LuaTeX
luatexbase-modutils.sty    2010/10/10 v0.3 Module utilities for LuaTeX
 xkeyval.sty    2008/08/13 v2.6a package option processing (HA)
 xkeyval.tex    2008/08/13 v2.6a key=value parser (HA)
fontspec-patches.sty    2011/02/26 v2.1f Advanced font selection for
XeLaTeX/LuaLaTeX
fixltx2e.sty    2006/09/13 v1.1m fixes to LaTeX
 fontenc.sty
  eu2enc.def    2010/05/27 v0.1h Experimental Unicode font encodings
  eu2lmr.fd    2009/10/30 v1.6 Font defs for Latin Modern
xunicode.sty    2010/11/06 v0.96 provides access to latin accents and
many other characters in Unicode lower plane
fontspec.cfg
   babel.sty    2008/07/06 v3.8l The Babel package
ngermanb.ldf    2008/07/06 v2.6n new German support from the babel system
 ***********

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 262 bytes
Desc: OpenPGP digital signature
URL: <http://tug.org/pipermail/luatex/attachments/20110510/97529e92/attachment-0001.bin>

From zappathustra at free.fr  Tue May 10 16:40:12 2011
From: zappathustra at free.fr (Paul Isambert)
Date: Tue, 10 May 2011 16:40:12 +0200
Subject: [luatex] First (optional?) arguments of tex.getcount and
	friends.
In-Reply-To: <20110510143254.GA20796@rondloper>
References: <4DC940D1.8030302@free.fr> <4DC94150.5040200@elvenkind.com>
 <20110510143254.GA20796@rondloper>
Message-ID: <4DC94E4C.8050308@free.fr>



Le 10/05/2011 16:32, Dirk Laurie a ?crit :
> On Tue, May 10, 2011 at 03:44:48PM +0200, Taco Hoekwater wrote:
>> On 05/10/2011 03:42 PM, Paul Isambert wrote:
>>> Hello all,
>>>
>>> I have noticed that the function tex.getcount() and similar can take any
>>> number of arguments and ignore them all but the last. E.g.:
>>>
>>> \directlua{
>>> texio.write_nl(tex.getcount("a string", nothing, node.new(11), 55, 0))
>>> }
>>>
>>> returns "1", i.e. the value of count 0, ignoring the string, the nil
>>> value, the node, and the number.
>>>
>>> Is that normal? Am I missing something? My LuaTeX is 0.71.
>> I am not surprised: lua pushes the arguments on a stack, and then the
>> getcount function takes the topmost entry. I could add an explicit
>> test for the number of arguments, but that is a bit of wasted effort,
>> in Hans' and my opinion.
> It is normal in Lua to ignore any extra arguments, but functions written
> in Lua that use only one argument would ignore all except the _first_.
> It is easy to achieve that from C too: the Lua manual says:
>      More specifically, if the stack has n elements, then index 1
>      represents the first element (that is, the element that was
>      pushed onto the stack first) and index n represents the last
>      element; index -1 also represents the last element (that is,
>      the element at the top) and index -n represents the first element.
> So it's a question of using index 1 instead of index -1.
>
> But should we be using the function tex.getcount()?  It is not documented
> in luatexref-t.pdf (at least, my PDF viewer's search function does not
> find it).  Since even documented functions ?can (and will) be changed
> without prior notice?, aren't undocumented ones not even more dangerous?

The function is documented implicitly with tex.getskip(). The 
documentation reads (section 4.13.4):

``As an alternative to array addressing, there are also accessor 
functions defined for all cases, for example, here is the set of 
possibilities for \skip registers: [examples of tex.setskip() and 
tex.getskip()]''

Best,
Paul

From st_philipp at yahoo.de  Tue May 10 17:36:04 2011
From: st_philipp at yahoo.de (Philipp Stephani)
Date: Tue, 10 May 2011 17:36:04 +0200
Subject: [luatex] First (optional?) arguments of tex.getcount and
	friends.
In-Reply-To: <4DC94150.5040200@elvenkind.com>
References: <4DC940D1.8030302@free.fr> <4DC94150.5040200@elvenkind.com>
Message-ID: <BCE29A7C-BA2B-471D-A14A-F626DE8DE4BD@yahoo.de>


Am 10.05.2011 um 15:44 schrieb Taco Hoekwater:

> On 05/10/2011 03:42 PM, Paul Isambert wrote:
>> Hello all,
>> 
>> I have noticed that the function tex.getcount() and similar can take any
>> number of arguments and ignore them all but the last. E.g.:
>> 
>> \directlua{
>> texio.write_nl(tex.getcount("a string", nothing, node.new(11), 55, 0))
>> }
>> 
>> returns "1", i.e. the value of count 0, ignoring the string, the nil
>> value, the node, and the number.
>> 
>> Is that normal? Am I missing something? My LuaTeX is 0.71.
> 
> I am not surprised: lua pushes the arguments on a stack, and then the
> getcount function takes the topmost entry.

Yes, but that is the first argument, not the last. Lua functions ignore any additional arguments that are appended to the argument list, but not those that are prepended. Maybe some sign error? 1 instead of -1?

$ lua - <<< 'function test(foo) print(foo) end test(1, 2, 3)'
1


From mailing_list at arcor.de  Tue May 10 18:24:50 2011
From: mailing_list at arcor.de (Stephan Hennig)
Date: Tue, 10 May 2011 18:24:50 +0200
Subject: [luatex] wrong hyphenation in four-letter word
In-Reply-To: <4DC94D9A.7070607@gmx.de>
References: <4DC943BE.60902@arcor.de> <4DC94D9A.7070607@gmx.de>
Message-ID: <4DC966D2.4060705@arcor.de>

schrieb Arno Trautmann:

> Stephan Hennig wrote:
>> 
>> I'm observing a wrong hyphenation of a four-letter word with lualatex
>> and German hyphenation patterns.
> 
> I don't: With your example
> 
>>> Underfull \hbox (badness 10000) in paragraph at lines 9--9
>>> [][] \EU2/lmr/m/n/10 si-ch ei-ne
> 
> I get correctly
> Underfull \hbox (badness 10000) in paragraph at lines 6--6
> [][] \EU2/lmr/m/n/10 sich ei-ne
> 
>>>> lualatex -version
>>> This is LuaTeX, Version beta-0.70.0-2011050815 (Web2C 2011) (rev 4247)
> 
> This is LuaTeX, Version beta-0.70.0-2011050620 (rev 4250)
> 
> file list below,

Thanks!  The file list looks identical.  To make sure it is not a
misconfiguration on my side, is anybody able to reproduce the problem
with LuaTeX from tlcontrib, which is what I'm using?

Best regards,
Stephan Hennig

From Arno.Trautmann at gmx.de  Tue May 10 19:04:12 2011
From: Arno.Trautmann at gmx.de (Arno Trautmann)
Date: Tue, 10 May 2011 19:04:12 +0200
Subject: [luatex] wrong hyphenation in four-letter word
In-Reply-To: <4DC966D2.4060705@arcor.de>
References: <4DC943BE.60902@arcor.de> <4DC94D9A.7070607@gmx.de>
 <4DC966D2.4060705@arcor.de>
Message-ID: <4DC9700C.1020002@gmx.de>

Stephan Hennig wrote:
> schrieb Arno Trautmann:
> 
>> Stephan Hennig wrote:
>>>
>>> I'm observing a wrong hyphenation of a four-letter word with lualatex
>>> and German hyphenation patterns.
>>
>> I don't: With your example
>>
>>>> Underfull \hbox (badness 10000) in paragraph at lines 9--9
>>>> [][] \EU2/lmr/m/n/10 si-ch ei-ne
>>
>> I get correctly
>> Underfull \hbox (badness 10000) in paragraph at lines 6--6
>> [][] \EU2/lmr/m/n/10 sich ei-ne
>>
>>>>> lualatex -version
>>>> This is LuaTeX, Version beta-0.70.0-2011050815 (Web2C 2011) (rev 4247)
>>
>> This is LuaTeX, Version beta-0.70.0-2011050620 (rev 4250)
>>
>> file list below,
> 
> Thanks!  The file list looks identical.  To make sure it is not a
> misconfiguration on my side, is anybody able to reproduce the problem
> with LuaTeX from tlcontrib, which is what I'm using?

My LuaTeX /is/ from tlcontrib ? I'm wondering why yours has the Web2C
2011 tag? (I'm on x86-64 linux, in case that matters)

cheers
Arno

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 262 bytes
Desc: OpenPGP digital signature
URL: <http://tug.org/pipermail/luatex/attachments/20110510/50d1d1f2/attachment.bin>

From taco at elvenkind.com  Tue May 10 19:47:10 2011
From: taco at elvenkind.com (Taco Hoekwater)
Date: Tue, 10 May 2011 19:47:10 +0200
Subject: [luatex] First (optional?) arguments of tex.getcount and
	friends.
In-Reply-To: <BCE29A7C-BA2B-471D-A14A-F626DE8DE4BD@yahoo.de>
References: <4DC940D1.8030302@free.fr> <4DC94150.5040200@elvenkind.com>
 <BCE29A7C-BA2B-471D-A14A-F626DE8DE4BD@yahoo.de>
Message-ID: <1B3E3394-9061-4E41-A273-ADA1BB383DBF@elvenkind.com>





Op 10 mei 2011 om 17:36 heeft Philipp Stephani <st_philipp at yahoo.de> het volgende geschreven:

> 
> Am 10.05.2011 um 15:44 schrieb Taco Hoekwater:
> 
>> On 05/10/2011 03:42 PM, Paul Isambert wrote:
>>> Hello all,
>>> 
>>> I have noticed that the function tex.getcount() and similar can take any
>>> number of arguments and ignore them all but the last. E.g.:
>>> 
>>> \directlua{
>>> texio.write_nl(tex.getcount("a string", nothing, node.new(11), 55, 0))
>>> }
>>> 
>>> returns "1", i.e. the value of count 0, ignoring the string, the nil
>>> value, the node, and the number.
>>> 
>>> Is that normal? Am I missing something? My LuaTeX is 0.71.
>> 
>> I am not surprised: lua pushes the arguments on a stack, and then the
>> getcount function takes the topmost entry.
> 
> Yes, but that is the first argument, not the last. Lua functions ignore any additional arguments that are appended to the argument list, but not those that are prepended. Maybe some sign error? 1 instead of -1?
> 
> $ lua - <<< 'function test(foo) print(foo) end test(1, 2, 3)'
> 1

Well, getcount does what i wrote. top of stack is the item at 5 in your initial example, and you get that top of stack value by using the index -1 as argument to the lua interface function that fetches stack values. You may not like that, but that it is what happens currently, and it is not by mistake.

best wishes,

Taco

From mailing_list at arcor.de  Tue May 10 20:21:45 2011
From: mailing_list at arcor.de (Stephan Hennig)
Date: Tue, 10 May 2011 20:21:45 +0200
Subject: [luatex] wrong hyphenation in four-letter word
In-Reply-To: <4DC9700C.1020002@gmx.de>
References: <4DC943BE.60902@arcor.de> <4DC94D9A.7070607@gmx.de>
 <4DC966D2.4060705@arcor.de> <4DC9700C.1020002@gmx.de>
Message-ID: <4DC98239.6000906@arcor.de>

schrieb Arno Trautmann:
> Stephan Hennig wrote:
>> schrieb Arno Trautmann:
>>> Stephan Hennig wrote:
>>>>
>>>>>> lualatex -version
>>>>> This is LuaTeX, Version beta-0.70.0-2011050815 (Web2C 2011) (rev 4247)
>>>
>>> This is LuaTeX, Version beta-0.70.0-2011050620 (rev 4250)
>> 
>> To make sure it is not a misconfiguration on my side, is anybody
>> able to reproduce the problem with LuaTeX from tlcontrib, which is
>> what I'm using?
> 
> My LuaTeX /is/ from tlcontrib ? I'm wondering why yours has the Web2C
> 2011 tag? (I'm on x86-64 linux, in case that matters)

OK.  This is Windows 7 x64 machine.  Can anybody running LuaTeX from
tlcontrib on Windows reproduce the problem?

Best regards,
Stephan Hennig

From mojca.miklavec.lists at gmail.com  Tue May 10 21:17:54 2011
From: mojca.miklavec.lists at gmail.com (Mojca Miklavec)
Date: Tue, 10 May 2011 21:17:54 +0200
Subject: [luatex] wrong hyphenation in four-letter word
In-Reply-To: <4DC9700C.1020002@gmx.de>
References: <4DC943BE.60902@arcor.de> <4DC94D9A.7070607@gmx.de>
 <4DC966D2.4060705@arcor.de> <4DC9700C.1020002@gmx.de>
Message-ID: <BANLkTi=p8wPRyfHES4_9gLA8u2FNPH=1Gg@mail.gmail.com>

On Tue, May 10, 2011 at 19:04, Arno Trautmann wrote:
>
> My LuaTeX /is/ from tlcontrib ? I'm wondering why yours has the Web2C
> 2011 tag? (I'm on x86-64 linux, in case that matters)

Windows binaries come from Akira who usually uses the latest version
of all libraries, including kpathsea & friends, so the Web2.

I cannot reproduce the behaviour on a non-windows box either. (On the
other hand I have some problems with synctex in the latest version.)

Mojca


From mojca.miklavec.lists at gmail.com  Tue May 10 21:34:16 2011
From: mojca.miklavec.lists at gmail.com (Mojca Miklavec)
Date: Tue, 10 May 2011 21:34:16 +0200
Subject: [luatex] wrong hyphenation in four-letter word
In-Reply-To: <BANLkTi=p8wPRyfHES4_9gLA8u2FNPH=1Gg@mail.gmail.com>
References: <4DC943BE.60902@arcor.de> <4DC94D9A.7070607@gmx.de>
 <4DC966D2.4060705@arcor.de> <4DC9700C.1020002@gmx.de>
 <BANLkTi=p8wPRyfHES4_9gLA8u2FNPH=1Gg@mail.gmail.com>
Message-ID: <BANLkTik6JZE05KTs8VqjWdWW_AwnB1FbaQ@mail.gmail.com>

(I'm sorry, my browser sent the mail without my consent.)

On Tue, May 10, 2011 at 21:17, Mojca Miklavec wrote:
> On Tue, May 10, 2011 at 19:04, Arno Trautmann wrote:
>>
>> My LuaTeX /is/ from tlcontrib ? I'm wondering why yours has the Web2C
>> 2011 tag? (I'm on x86-64 linux, in case that matters)

Windows binaries come from Akira who usually uses the latest version
of all libraries, including kpathsea & friends, so the Web2C 2011 tag
is not unexpected.


I cannot reproduce the behaviour on a non-windows box either, but I
can confirm that it breaks in windows.

I tested with:
- lualatex (latest TL's update) & LuaTeX beta-0.70.0 (rev 4250) on Mac
(no problems)
- ConTeXt MKIV 2011.05.09 10:07 (minimals) & exactly the same LuaTeX
on Mac (no problems)
- ConTeXt MKIV 2011.05.09 16:28 (minimals) & Akira's LuaTeX
beta-0.70.0 on Windows (wrong result)

The weird thing is that when I tested two hours ago the word eine
didn't break at all and I would almost bet that other breaks were
different.

Now I did a new change (\mainlanguage[deo]) and I get

! Conflicting pattern ignored.

system          > tex > error on line 13 in file de.tex: Conflicting
pattern ignored ...

when I load the old german patterns (but that might be a problem of ConTeXt).

Mojca

PS: I have no idea how/if \showhyphens works in ConTeXt, but I was
using the new functionality in ConTeXt with \startcomparepatterns
which should work comparably well.


From mojca.miklavec.lists at gmail.com  Tue May 10 22:04:11 2011
From: mojca.miklavec.lists at gmail.com (Mojca Miklavec)
Date: Tue, 10 May 2011 22:04:11 +0200
Subject: [luatex] wrong hyphenation in four-letter word
In-Reply-To: <BANLkTik6JZE05KTs8VqjWdWW_AwnB1FbaQ@mail.gmail.com>
References: <4DC943BE.60902@arcor.de> <4DC94D9A.7070607@gmx.de>
 <4DC966D2.4060705@arcor.de> <4DC9700C.1020002@gmx.de>
 <BANLkTi=p8wPRyfHES4_9gLA8u2FNPH=1Gg@mail.gmail.com>
 <BANLkTik6JZE05KTs8VqjWdWW_AwnB1FbaQ@mail.gmail.com>
Message-ID: <BANLkTinTriWTWC0mrz4s9=rFs+25FmZOag@mail.gmail.com>

On Tue, May 10, 2011 at 21:34, Mojca Miklavec wrote:
>
> I cannot reproduce the behaviour on a non-windows box either, but I
> can confirm that it breaks in windows.

... and after some more tests I can confirm that hyphenation behaves
semi-random. Compiling the same document several times won't change
anything, but when changing a bit here, it will influence the
hyphenation somewhere else in a not-too-consistent way.

Mojca

From taco at elvenkind.com  Wed May 11 07:56:47 2011
From: taco at elvenkind.com (Taco Hoekwater)
Date: Wed, 11 May 2011 07:56:47 +0200
Subject: [luatex] [lltx]  wrong hyphenation in four-letter word
In-Reply-To: <BANLkTinTriWTWC0mrz4s9=rFs+25FmZOag@mail.gmail.com>
References: <4DC943BE.60902@arcor.de> <4DC94D9A.7070607@gmx.de>
 <4DC966D2.4060705@arcor.de> <4DC9700C.1020002@gmx.de>
 <BANLkTi=p8wPRyfHES4_9gLA8u2FNPH=1Gg@mail.gmail.com>
 <BANLkTik6JZE05KTs8VqjWdWW_AwnB1FbaQ@mail.gmail.com>
 <BANLkTinTriWTWC0mrz4s9=rFs+25FmZOag@mail.gmail.com>
Message-ID: <4DCA251F.1060701@elvenkind.com>

On 05/10/2011 10:04 PM, Mojca Miklavec wrote:
> On Tue, May 10, 2011 at 21:34, Mojca Miklavec wrote:
>>
>> I cannot reproduce the behaviour on a non-windows box either, but I
>> can confirm that it breaks in windows.
>
> ... and after some more tests I can confirm that hyphenation behaves
> semi-random. Compiling the same document several times won't change
> anything, but when changing a bit here, it will influence the
> hyphenation somewhere else in a not-too-consistent way.

If this is all win32 only, someone of you should warn Akira.

Best wishes,
Taco

From mailing_list at arcor.de  Wed May 11 11:00:06 2011
From: mailing_list at arcor.de (Stephan Hennig)
Date: Wed, 11 May 2011 11:00:06 +0200
Subject: [luatex] [lltx]  wrong hyphenation in four-letter word
In-Reply-To: <4DCA251F.1060701@elvenkind.com>
References: <4DC943BE.60902@arcor.de> <4DC94D9A.7070607@gmx.de>
 <4DC966D2.4060705@arcor.de> <4DC9700C.1020002@gmx.de>
 <BANLkTi=p8wPRyfHES4_9gLA8u2FNPH=1Gg@mail.gmail.com>
 <BANLkTik6JZE05KTs8VqjWdWW_AwnB1FbaQ@mail.gmail.com>
 <BANLkTinTriWTWC0mrz4s9=rFs+25FmZOag@mail.gmail.com>
 <4DCA251F.1060701@elvenkind.com>
Message-ID: <4DCA5016.5030402@arcor.de>

schrieb Taco Hoekwater:

> If this is all win32 only, someone of you should warn Akira.

Done.

From luatex at nililand.de  Wed May 11 11:17:44 2011
From: luatex at nililand.de (Ulrike Fischer)
Date: Wed, 11 May 2011 11:17:44 +0200
Subject: [luatex] wrong hyphenation in four-letter word
References: <4DC943BE.60902@arcor.de>
Message-ID: <ca6wls1zoli3.dlg@nililand.de>

Am Tue, 10 May 2011 15:55:10 +0200 schrieb Stephan Hennig:

> [sending to luatex and lualatex list]
> 
> Hi,
> 
> I'm observing a wrong hyphenation of a four-letter word with lualatex
> and German hyphenation patterns.  For the German language,
> \lefthyphenmin and \righthyphenmin are both set to 2, so that
> four-letter words can indeed be hyphenated, such as ei-ne.  But the word
> "sich" shouldn't be hyphenated at all, whereas it is
> hyphenated as si-ch:
> 
> \listfiles
> \documentclass{minimal}
> \usepackage{fontspec}
> \usepackage[ngerman]{babel}
> \begin{document}
> \showhyphens{sich eine}
> \end{document}
> 
>> Underfull \hbox (badness 10000) in paragraph at lines 9--9
>> [][] \EU2/lmr/m/n/10 si-ch ei-ne

When I tested your example I had an old aux-file which gave an error
- and the hyphenation was correct. In the next run with an empty
aux-file it was wrong. 

So I made some tests. The problem is to some extend due to the
minimal class: It doesn't issue like e.g. article a \normalsize
command and its definition of \normalsize is also different to the
one in the standard classes. One can get a correct \showhyphens
output if one set after fontspec or (\usepackage[EU2]{fontenc} )
\baselineskip + \normalbaselinekskip, or if one redefine \normalsize
so that it also set (that's curious) \belowdisplayshortskip.

But the really curious thing I found during my test is the following
example:


\documentclass{article}
\usepackage[ngerman]{babel}
\usepackage{luaotfload}
\usepackage[EU2]{fontenc}
\textwidth0.3cm
\begin{document}
%a

\hspace{0pt}%
?sich? ?eine? ?sich? sich? eine? ?sich? eine sich sich sich eine
eine eine
 abc

\end{document}

Non-ASCII-chars at the end of the words can change hyhenation. But
more curiosly the \hspace{0pt} changes it to: with it the last
"sich" are hyphenated too but this effect disappear if you uncomment
the "a". One the whole this look as if there is a initialization
problem but it is difficult to see if the engine or the font loader
or the babel commands or the local configuration (the settings in
the language.dat) is responsable. (If one load the patterns with
\makeatletter\bbl at patterns{ngerman}\makeatother the side effect of
the \hspace disappaer but ?sich? is still hyphenated).

This is LuaTeX, Version beta-0.70.0-2011050815 (rev 4247) 

-- 
Ulrike Fischer 


From mojca.miklavec.lists at gmail.com  Wed May 11 11:24:12 2011
From: mojca.miklavec.lists at gmail.com (Mojca Miklavec)
Date: Wed, 11 May 2011 11:24:12 +0200
Subject: [luatex] wrong hyphenation in four-letter word
In-Reply-To: <ca6wls1zoli3.dlg@nililand.de>
References: <4DC943BE.60902@arcor.de>
	<ca6wls1zoli3.dlg@nililand.de>
Message-ID: <BANLkTi=r7RcYkTAgmtwewy5-5PXy14+Piw@mail.gmail.com>

On Wed, May 11, 2011 at 11:17, Ulrike Fischer wrote:
>
> Non-ASCII-chars at the end of the words can change hyhenation. But
> more curiosly the \hspace{0pt} changes it to:

I forgot to say: I realized that "sich eine" was shown as hyphenated
sich-ei-ne in ConTeXt. I have no idea why the hyphen between sich and
eine would be there. But when displaying hyphenation in document, that
mark wasn't shown.

Mojca

From luatex at nililand.de  Wed May 11 11:36:02 2011
From: luatex at nililand.de (Ulrike Fischer)
Date: Wed, 11 May 2011 11:36:02 +0200
Subject: [luatex] wrong hyphenation in four-letter word
References: <4DC943BE.60902@arcor.de> <ca6wls1zoli3.dlg@nililand.de>
 <BANLkTi=r7RcYkTAgmtwewy5-5PXy14+Piw@mail.gmail.com>
Message-ID: <8f9ytt166koj.dlg@nililand.de>

Am Wed, 11 May 2011 11:24:12 +0200 schrieb Mojca Miklavec:


>> Non-ASCII-chars at the end of the words can change hyhenation. But
>> more curiosly the \hspace{0pt} changes it to:
> 
> I forgot to say: I realized that "sich eine" was shown as hyphenated
> sich-ei-ne in ConTeXt. I have no idea why the hyphen between sich and
> eine would be there. But when displaying hyphenation in document, that
> mark wasn't shown.

Perhaps your "\showhyphens" command is not really intended for more
than one word and removes spaces (somewhere in my test I saw a
"sicheine"). On the whole \showhyphens is a command which tries to
"fake" real hyphenation - and it can fail. I always test also
hyphenation in "real" texts. 


-- 
Ulrike Fischer 


From martin at oneiros.de  Wed May 11 12:44:25 2011
From: martin at oneiros.de (=?ISO-8859-1?Q?Martin_Schr=F6der?=)
Date: Wed, 11 May 2011 12:44:25 +0200
Subject: [luatex] [fontspec] outline fonts?
Message-ID: <BANLkTi=CgjO2eR_RZ3b9kSM8nZVBaOJ3tQ@mail.gmail.com>

Hi,
is there a way to switch a font to outline rendering with OTF/fontspec?

I know I can hack this in PDF, but a fontspec feature would be nicer. :-)

Thanks in advance
   Martin

From heiko.oberdiek at googlemail.com  Wed May 11 12:55:58 2011
From: heiko.oberdiek at googlemail.com (Heiko Oberdiek)
Date: Wed, 11 May 2011 12:55:58 +0200
Subject: [luatex] [fontspec] outline fonts?
In-Reply-To: <BANLkTi=CgjO2eR_RZ3b9kSM8nZVBaOJ3tQ@mail.gmail.com>
References: <BANLkTi=CgjO2eR_RZ3b9kSM8nZVBaOJ3tQ@mail.gmail.com>
Message-ID: <20110511105557.GA19161@oberdiek.my-fqdn.de>

On Wed, May 11, 2011 at 12:44:25PM +0200, Martin Schr?der wrote:

> is there a way to switch a font to outline rendering with OTF/fontspec?
> 
> I know I can hack this in PDF, but a fontspec feature would be nicer. :-)

Without fontspec, see package `pdfrender'.

Yours sincerely
  Heiko Oberdiek

From martin at oneiros.de  Wed May 11 13:43:43 2011
From: martin at oneiros.de (=?ISO-8859-1?Q?Martin_Schr=F6der?=)
Date: Wed, 11 May 2011 13:43:43 +0200
Subject: [luatex] [fontspec] outline fonts?
In-Reply-To: <20110511105557.GA19161@oberdiek.my-fqdn.de>
References: <BANLkTi=CgjO2eR_RZ3b9kSM8nZVBaOJ3tQ@mail.gmail.com>
 <20110511105557.GA19161@oberdiek.my-fqdn.de>
Message-ID: <BANLkTikWArcuz44i6Y3pgDdgDMTGsdcA0A@mail.gmail.com>

2011/5/11 Heiko Oberdiek <heiko.oberdiek at googlemail.com>:
> Without fontspec, see package `pdfrender'.

\pdfrender{TextRenderingMode=Stroke,LineWidth=1pt}

:-)))

Many thanks from LinuxTag
   Martin

From mailing_list at arcor.de  Wed May 11 14:01:55 2011
From: mailing_list at arcor.de (Stephan Hennig)
Date: Wed, 11 May 2011 14:01:55 +0200
Subject: [luatex] wrong hyphenation in four-letter word
In-Reply-To: <ca6wls1zoli3.dlg@nililand.de>
References: <4DC943BE.60902@arcor.de> <ca6wls1zoli3.dlg@nililand.de>
Message-ID: <4DCA7AB3.7070707@arcor.de>

schrieb Ulrike Fischer:
> Am Tue, 10 May 2011 15:55:10 +0200 schrieb Stephan Hennig:
> 
>> \listfiles
>> \documentclass{minimal}
>> \usepackage{fontspec}
>> \usepackage[ngerman]{babel}
>> \begin{document}
>> \showhyphens{sich eine}
>> \end{document}
> 
> \documentclass{article}
> \usepackage[ngerman]{babel}
> \usepackage{luaotfload}
> \usepackage[EU2]{fontenc}
> \textwidth0.3cm
> \begin{document}
> %a
> 
> \hspace{0pt}%
> ?sich? ?eine? ?sich? sich? eine? ?sich? eine sich sich sich eine
> eine eine
>  abc
> 
> \end{document}
> 
> One the whole this look as if there is a initialization
> problem but it is difficult to see if the engine or the font loader
> or the babel commands or the local configuration (the settings in
> the language.dat) is responsable. (If one load the patterns with
> \makeatletter\bbl at patterns{ngerman}\makeatother the side effect of
> the \hspace disappaer but ?sich? is still hyphenated).
> 
> This is LuaTeX, Version beta-0.70.0-2011050815 (rev 4247) 

Reinstalling luatex beta-0.60.2-2010071421 (Web2C 2010) (rev 3736) from
tlnet, both examples compile file.  So it looks indeed like a problem
with the luatex binary (that is, the code or the build process).  Can
someone test the examples on Windows with other binaries?

Best regards,
Stephan Hennig

From mojca.miklavec.lists at gmail.com  Wed May 11 21:50:52 2011
From: mojca.miklavec.lists at gmail.com (Mojca Miklavec)
Date: Wed, 11 May 2011 21:50:52 +0200
Subject: [luatex] wrong hyphenation in four-letter word
In-Reply-To: <4DCA7AB3.7070707@arcor.de>
References: <4DC943BE.60902@arcor.de> <ca6wls1zoli3.dlg@nililand.de>
 <4DCA7AB3.7070707@arcor.de>
Message-ID: <BANLkTikA3ibH+xXbZcXFap3xMOd6=ARkbg@mail.gmail.com>

On Wed, May 11, 2011 at 14:01, Stephan Hennig wrote:
>
> Reinstalling luatex beta-0.60.2-2010071421 (Web2C 2010) (rev 3736) from
> tlnet, both examples compile file. ?So it looks indeed like a problem
> with the luatex binary (that is, the code or the build process). ?Can
> someone test the examples on Windows with other binaries?

beta-0.64 (as well as 0.65 and 0.66) show the same symptoms. I didn't
have older binaries to test (and ConTeXt would probably not even work
with 0.60).

The latex minimal example works fine in both MikTeX's LuaTeX 0.70.0 as
well as in 0.60.2. (I wasn't able to test ConTeXt with MikTeX's 0.70.0
without manually modifying installation.)

Mojca


From notezik at gmail.com  Wed May 11 23:47:30 2011
From: notezik at gmail.com (Maxime Chupin)
Date: Wed, 11 May 2011 22:47:30 +0100
Subject: [luatex] Overbar OpnType Maths
Message-ID: <BANLkTi=bKFJVK=c2+GG3bF0PD8DvCsbgww@mail.gmail.com>

Hi!

I do not understand what is Overbar in OpenType Maths tables. Microsoft
description does not help me.  Can someone explain me ?

Thanks in advance.

-- 
Maxime Chupin
http://mc.notezik.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://tug.org/pipermail/luatex/attachments/20110511/899f47a8/attachment.html>

From taco at elvenkind.com  Fri May 13 09:02:37 2011
From: taco at elvenkind.com (Taco Hoekwater)
Date: Fri, 13 May 2011 09:02:37 +0200
Subject: [luatex] Overbar OpnType Maths
In-Reply-To: <BANLkTi=bKFJVK=c2+GG3bF0PD8DvCsbgww@mail.gmail.com>
References: <BANLkTi=bKFJVK=c2+GG3bF0PD8DvCsbgww@mail.gmail.com>
Message-ID: <4DCCD78D.5070808@elvenkind.com>

On 05/11/2011 11:47 PM, Maxime Chupin wrote:
> Hi!
>
> I do not understand what is Overbar in OpenType Maths tables. Microsoft
> description does not help me.  Can someone explain me ?

If you mean these:

   OverbarRuleThickness: thickness of the bar for \overbar
   OverbarVerticalGap: the space below the bar
   OverbarExtraAscender: the space above the bar

Best wishes,
Taco

From notezik at gmail.com  Fri May 13 09:21:48 2011
From: notezik at gmail.com (Maxime Chupin)
Date: Fri, 13 May 2011 08:21:48 +0100
Subject: [luatex] Overbar OpnType Maths
In-Reply-To: <4DCCD78D.5070808@elvenkind.com>
References: <BANLkTi=bKFJVK=c2+GG3bF0PD8DvCsbgww@mail.gmail.com>
 <4DCCD78D.5070808@elvenkind.com>
Message-ID: <BANLkTi=DOAuVXMS0SXEizOOeeuOhi7rt0w@mail.gmail.com>

On 13 May 2011 08:02, Taco Hoekwater <taco at elvenkind.com> wrote:

> If you mean these:
>
>  OverbarRuleThickness: thickness of the bar for \overbar
>  OverbarVerticalGap: the space below the bar
>  OverbarExtraAscender: the space above the bar
>
> Best wishes,
>

Thanks, I was confused by the over from $a \over b$.
Sorry for the noise!

-- 
Maxime Chupin
http://mc.notezik.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://tug.org/pipermail/luatex/attachments/20110513/81e7fe8f/attachment.html>

From st_philipp at yahoo.de  Fri May 13 12:32:05 2011
From: st_philipp at yahoo.de (Philipp Stephani)
Date: Fri, 13 May 2011 12:32:05 +0200
Subject: [luatex] [lltx] [tex-live] Location of recorder file
In-Reply-To: <4DCCDAAB.2000505@elzevir.fr>
References: <201105122301.p4CN1qPc007735@freefriends.org>
 <3BB8C0DD-95DC-47BC-BD36-47841A93CBDE@yahoo.de> <4DCCDAAB.2000505@elzevir.fr>
Message-ID: <B89F53AE-EAE4-4DC3-9498-D84140FD2148@yahoo.de>


Am 13.05.2011 um 09:15 schrieb Manuel P?gouri?-Gonnard:

> Le 13/05/2011 02:08, Philipp Stephani a ?crit :
>> I was utterly wrong in blaming LuaTeX: it's purely a LaTeX problem.
>> lualatexquotejobname.tex expands \jobname at every job, forcing TeX to
>> prematurely choose a job name before the first input file has been read. This
>> can be provoked in any engine and format:
>> 
> Yep, this is a know problem, documented in lualatex-doc (section \jobname, page
> 12) for example, and already discussed here:
> 
> http://tug.org/pipermail/luatex/2010-August/001986.html

Ah, thanks for the pointer. I would have been surprised if I were the first to discover this. Still I think that breaking AucTeX and the decade-long expectation that '\input foo' works as expected should be avoided at all costs.

>> or at
>> least rewritten so that \jobname is never expanded at every job:
>> 
> I don't see any way to achieve that at the moment.

In the old thread there have been a few suggestions that would work:
http://www.ntg.nl/pipermail/dev-luatex/2009-April/002552.html
http://www.ntg.nl/pipermail/dev-luatex/2009-April/002560.html
David's suggestion seems to be very robust to me: it would not break traditional code that assume file names without spaces, and it would make quoting unnecessary. There are certainly other solutions as well, e.g. setting the quoted job name in Lua, but David's suggestions seems to be the most elegant.

From st_philipp at yahoo.de  Fri May 13 13:41:32 2011
From: st_philipp at yahoo.de (Philipp Stephani)
Date: Fri, 13 May 2011 13:41:32 +0200
Subject: [luatex] [lltx] [tex-live] Location of recorder file
In-Reply-To: <20110513111538.GA3639@oberdiek.my-fqdn.de>
References: <201105122301.p4CN1qPc007735@freefriends.org>
 <3BB8C0DD-95DC-47BC-BD36-47841A93CBDE@yahoo.de> <4DCCDAAB.2000505@elzevir.fr>
 <4DCCEAEC.5060105@free.fr> <20110513104349.GA3562@oberdiek.my-fqdn.de>
 <4DCD0E8D.60302@free.fr> <20110513111538.GA3639@oberdiek.my-fqdn.de>
Message-ID: <CC7A752E-DF7A-40F8-9B77-04696F811F43@yahoo.de>

Am 13.05.2011 um 13:15 schrieb Heiko Oberdiek:

> I think, the file name interfaces should be transparent
> in the sense, that all characters are supported and
> the user is only hit by the restrictions of the operating
> system or the file system, but not by artificial restrictions
> by the software inbetween.

I agree, but this will never happen: try to use a Unicode file name on Windows in any engine ... even though they are perfectly legal as far as the operating system is concerned, no TeX processor ever will accept them because fopen doesn't accept Unicode file names on Windows. Either all engines switch to a nonstandard C runtime that interprets file names as UTF-8, or all engines are rewritten to avoid fopen on Windows. Both are extremely unlikely to ever happen.

From st_philipp at yahoo.de  Fri May 13 16:30:55 2011
From: st_philipp at yahoo.de (Philipp Stephani)
Date: Fri, 13 May 2011 16:30:55 +0200
Subject: [luatex] Job name (was: Location of recorder file)
In-Reply-To: <4DCD0E8D.60302@free.fr>
References: <201105122301.p4CN1qPc007735@freefriends.org>
 <3BB8C0DD-95DC-47BC-BD36-47841A93CBDE@yahoo.de> <4DCCDAAB.2000505@elzevir.fr>
 <4DCCEAEC.5060105@free.fr> <20110513104349.GA3562@oberdiek.my-fqdn.de>
 <4DCD0E8D.60302@free.fr>
Message-ID: <FD3E47FC-BE19-4AA8-A9DF-1E6DE3F139D5@yahoo.de>


Am 13.05.2011 um 12:57 schrieb Paul Isambert:

> I thought the basic ideas (as explained elsewhere) is you can't expect any prior macro, either in the kernel or in packages, to be fixed, so you have to live with that.

If there are bugs, they need to be fixed. While the kernel (latex.ltx) itself won't be modified, there is still lots of room for possible fixes: lualatex.ini, fixltx2e.sty, luatex.sty, dedicated packages...
Probably the syntax
\input abc
has to stay for compatibility reasons, but I think the syntax with quotation marks should go: It was never part of the original TeX, nobody can rely on its presence, and LuaTeX is still beta, so removing such features would do little harm. Doing the right thing is more important than strict compatibility to pdfTeX, IMO.
The only preferred syntax for the \input, \openin etc. primitives should then be
\input <general text>
For the \jobname issue, David's solution could be implemented: it seems to be the most robust one. I think I'll submit a patch.

> 
> Also, overloading the command line makes the code fails, but it also fails with other engines. I.e. "tex \edef\foo{\jobname} \input test" forces \jobname to "texput"; the only difference here is that "texput" will be used even if nothing refers to \jobname on the command line.

Yes but this difference it the important one: "tex \edef\foo{\jobname} \input test" has never worked, and nobody expects it to work in LuaTeX; on the other hand, "latex \input test" has always worked, and everybody expects it to work with LuaTeX, too. Since so many [1] are using this "feature", it will probably be a fruitless adventure to try to fix the whole universe ? it might be better to officially document the choice of the job name, and demand that "latex \input test" work as expected for all engines. This seems even more important to me than the space character support.

[1] http://www.google.com/codesearch?as_q=%5Cb%28pdf%29%3Flatex%5Cs.*%5C%5Cinput&as_case=yes

From st_philipp at yahoo.de  Fri May 13 16:33:29 2011
From: st_philipp at yahoo.de (Philipp Stephani)
Date: Fri, 13 May 2011 16:33:29 +0200
Subject: [luatex] [tex-live] [lltx]  Location of recorder file
In-Reply-To: <20110513111538.GA3639@oberdiek.my-fqdn.de>
References: <201105122301.p4CN1qPc007735@freefriends.org>
 <3BB8C0DD-95DC-47BC-BD36-47841A93CBDE@yahoo.de> <4DCCDAAB.2000505@elzevir.fr>
 <4DCCEAEC.5060105@free.fr> <20110513104349.GA3562@oberdiek.my-fqdn.de>
 <4DCD0E8D.60302@free.fr> <20110513111538.GA3639@oberdiek.my-fqdn.de>
Message-ID: <514E7CC2-1EF4-4235-8766-B1F553409149@yahoo.de>

Am 13.05.2011 um 13:15 schrieb Heiko Oberdiek:

> I think LuaTeX is right. The quotes can be regular characters
> of a filename. pdfTeX don't compile files with quotes:
>  bash$ pdftex --ini quot\"ed.tex
> fails with
>  ! Unbalanced quotes in argument quot"ed.tex
> 
> Unhappily LuaTeX has inherited this behaviour of pdfTeX.
> 
> Fixing one problem with one character by creating a problem
> with another character does not make sense to me.
> Now two characters cannot be used in file names. :-(

I think you're right, and I'll try to prepare a patch for LuaTeX to
1. remove the special treatment of quotes in file names,
2. have \jobname expand to catcode-12-only tokens, as David suggested,
3. have the to-be-deprecated syntax without braces require a catcode-10 token to stop the scan.
I think this could solve most of the issues.

BTW, this problem has already been discussed on the AucTeX side [1], apparently without a fix so far.

[1] http://lists.gnu.org/archive/html/bug-auctex/2011-02/msg00001.html

From taco at elvenkind.com  Fri May 13 17:23:55 2011
From: taco at elvenkind.com (Taco Hoekwater)
Date: Fri, 13 May 2011 17:23:55 +0200
Subject: [luatex] Job name (was: Location of recorder file)
In-Reply-To: <FD3E47FC-BE19-4AA8-A9DF-1E6DE3F139D5@yahoo.de>
References: <201105122301.p4CN1qPc007735@freefriends.org>
 <3BB8C0DD-95DC-47BC-BD36-47841A93CBDE@yahoo.de> <4DCCDAAB.2000505@elzevir.fr>
 <4DCCEAEC.5060105@free.fr> <20110513104349.GA3562@oberdiek.my-fqdn.de>
 <4DCD0E8D.60302@free.fr> <FD3E47FC-BE19-4AA8-A9DF-1E6DE3F139D5@yahoo.de>
Message-ID: <FA01A5A0-5C08-4508-A38D-90D7982BAFAE@elvenkind.com>





On 13 mei 2011, at 16:30, Philipp Stephani <st_philipp at yahoo.de> wrote:

> Yes but this difference it the important one: "tex \edef\foo{\jobname} \input test" has never worked, and nobody expects it to work in LuaTeX; on the other hand, "latex \input test" has always worked, and everybody expects it to work with LuaTeX, too. 

I fully intend to remove this Cmdline-is-first-input-line feature from metapost 2 (because it is extremely annoying to deal with with the new lib + driver architecture of mp: I now have to make the executable driver parse the commandline using string matching).

Because of this, it makes perfect sense for me to do the same to luatex 1.0. In fact, if I *ever* want to get rid of it, it has to be done before 1.0. Iirc, even the texbook says something along the lines of 'you are lucky if it works'. The argument to keep it seems to be that even though it is  a truly weird idea, it has been in use for a long time, so it should be kept forever. To me, that is far from convincing.

Best wishes,

Taco



From zdenek.wagner at gmail.com  Fri May 13 17:54:40 2011
From: zdenek.wagner at gmail.com (Zdenek Wagner)
Date: Fri, 13 May 2011 17:54:40 +0200
Subject: [luatex] [tex-live]  Job name (was: Location of recorder file)
In-Reply-To: <FA01A5A0-5C08-4508-A38D-90D7982BAFAE@elvenkind.com>
References: <201105122301.p4CN1qPc007735@freefriends.org>
 <3BB8C0DD-95DC-47BC-BD36-47841A93CBDE@yahoo.de>
 <4DCCDAAB.2000505@elzevir.fr> <4DCCEAEC.5060105@free.fr>
 <20110513104349.GA3562@oberdiek.my-fqdn.de>
 <4DCD0E8D.60302@free.fr>
 <FD3E47FC-BE19-4AA8-A9DF-1E6DE3F139D5@yahoo.de>
 <FA01A5A0-5C08-4508-A38D-90D7982BAFAE@elvenkind.com>
Message-ID: <BANLkTimd+1oR=NVCy_53_3RvzdJc3hMNeA@mail.gmail.com>

2011/5/13 Taco Hoekwater <taco at elvenkind.com>:
>
>
>
>
> On 13 mei 2011, at 16:30, Philipp Stephani <st_philipp at yahoo.de> wrote:
>
>> Yes but this difference it the important one: "tex \edef\foo{\jobname} \input test" has never worked, and nobody expects it to work in LuaTeX; on the other hand, "latex \input test" has always worked, and everybody expects it to work with LuaTeX, too.
>
> I fully intend to remove this Cmdline-is-first-input-line feature from metapost 2 (because it is extremely annoying to deal with with the new lib + driver architecture of mp: I now have to make the executable driver parse the commandline using string matching).
>
> Because of this, it makes perfect sense for me to do the same to luatex 1.0. In fact, if I *ever* want to get rid of it, it has to be done before 1.0. Iirc, even the texbook says something along the lines of 'you are lucky if it works'. The argument to keep it seems to be that even though it is ?a truly weird idea, it has been in use for a long time, so it should be kept forever. To me, that is far from convincing.
>
The reasoning stems from the encoding mess. The %! line can specify
the TCX table to be used for processing the file. While it may help,
it may also be a source of confusion. For instance, I use UTF-8
locale. If I get the file by email with proper locale set in the
sender's mail client, and I save it, my mail client will always
convert it to UTF-8. If the original file encoding were different, the
information in the %! will be wrong. IMHO this concept does not help
portability unless you pay special attention when sharing files.

> Best wishes,
>
> Taco
>
>
>



-- 
Zden?k Wagner
http://hroch486.icpf.cas.cz/wagner/
http://icebearsoft.euweb.cz


From reinhard.kotucha at web.de  Sat May 14 01:42:33 2011
From: reinhard.kotucha at web.de (Reinhard Kotucha)
Date: Sat, 14 May 2011 01:42:33 +0200
Subject: [luatex] [lltx] [tex-live] Location of recorder file
In-Reply-To: <CC7A752E-DF7A-40F8-9B77-04696F811F43@yahoo.de>
References: <201105122301.p4CN1qPc007735@freefriends.org>
 <3BB8C0DD-95DC-47BC-BD36-47841A93CBDE@yahoo.de>
 <4DCCDAAB.2000505@elzevir.fr> <4DCCEAEC.5060105@free.fr>
 <20110513104349.GA3562@oberdiek.my-fqdn.de>
 <4DCD0E8D.60302@free.fr>
 <20110513111538.GA3639@oberdiek.my-fqdn.de>
 <CC7A752E-DF7A-40F8-9B77-04696F811F43@yahoo.de>
Message-ID: <19917.49641.123496.100580@zaphod.ms25.net>

On 2011-05-13 at 13:41:32 +0200, Philipp Stephani wrote:

 > Am 13.05.2011 um 13:15 schrieb Heiko Oberdiek:
 > 
 > > I think, the file name interfaces should be transparent
 > > in the sense, that all characters are supported and
 > > the user is only hit by the restrictions of the operating
 > > system or the file system, but not by artificial restrictions
 > > by the software inbetween.
 > 
 > I agree, but this will never happen: try to use a Unicode file name
 > on Windows in any engine ... even though they are perfectly legal
 > as far as the operating system is concerned, no TeX processor ever
 > will accept them because fopen doesn't accept Unicode file names on
 > Windows. Either all engines switch to a nonstandard C runtime that
 > interprets file names as UTF-8, or all engines are rewritten to
 > avoid fopen on Windows. Both are extremely unlikely to ever happen.

I must admit that I don't understand.  First of all, when talking
about character encodings, I don't know what "the operating system"
means.  AKAIK, filenames are stored as UTF-8 in NTFS (don't know
whether FAT supports UTF-8).  

My question is how and where this is implemented.

The user interfaces are using different encodings, in a German
Windows, the Exploder uses CP1252 and cmd.exe is using CP850.  I would
expect that they translate filenames to UTF-8 internally.

When you say

 > even though they [Unicode file names] are perfectly legal
 > as far as the operating system is concerned [...]

I suppose that you have the C API in mind, and I suppose that the
fopen() you mention is that from MSVCRT.

Which character encoding does fopen() expect?

Does the Exploder use fopen() from MSVCRT?  I ask because I've seen so
many differences between the Exploder and cmd.exe, especially
regarding file permissions and UNC paths.

Is it possible to open a file and avoid MSVCRT?  If yes, with which
versions of Windows is it compatible?

I ask because you said

 > Either all engines switch to a nonstandard C runtime that
 > interprets file names as UTF-8, [...]

and I'm wondering whether it's *our* mistake to rely on MSVCRT (which
actually supports MS-DOG only), even though current versions of
Windows provide system calls which support UTF-8 natively.  What do
you mean with "nonstandard"?  Not shipped with recent versions of
Windows or has to be installed explicitly?

There is a system call execvpe() in MSVCRT, but some people mentioned
CreateProcess().  Where does the latter come from?  Obviously not from
MSVCRT.  

Is there another runtime lib beyond MSVCRT?  If yes, is it still
appropriate to rely on the old stuff?

Regards,
  Reinhard

-- 
----------------------------------------------------------------------------
Reinhard Kotucha                                      Phone: +49-511-3373112
Marschnerstr. 25
D-30167 Hannover                              mailto:reinhard.kotucha at web.de
----------------------------------------------------------------------------
Microsoft isn't the answer. Microsoft is the question, and the answer is NO.
----------------------------------------------------------------------------

From st_philipp at yahoo.de  Sat May 14 02:43:31 2011
From: st_philipp at yahoo.de (Philipp Stephani)
Date: Sat, 14 May 2011 02:43:31 +0200
Subject: [luatex] [lltx] [tex-live] Location of recorder file
In-Reply-To: <19917.49641.123496.100580@zaphod.ms25.net>
References: <201105122301.p4CN1qPc007735@freefriends.org>
 <3BB8C0DD-95DC-47BC-BD36-47841A93CBDE@yahoo.de> <4DCCDAAB.2000505@elzevir.fr>
 <4DCCEAEC.5060105@free.fr> <20110513104349.GA3562@oberdiek.my-fqdn.de>
 <4DCD0E8D.60302@free.fr> <20110513111538.GA3639@oberdiek.my-fqdn.de>
 <CC7A752E-DF7A-40F8-9B77-04696F811F43@yahoo.de>
 <19917.49641.123496.100580@zaphod.ms25.net>
Message-ID: <BB998378-677D-45D2-8BB6-E51EAD203C56@yahoo.de>


Am 14.05.2011 um 01:42 schrieb Reinhard Kotucha:

> On 2011-05-13 at 13:41:32 +0200, Philipp Stephani wrote:
> 
>> Am 13.05.2011 um 13:15 schrieb Heiko Oberdiek:
>> 
>>> I think, the file name interfaces should be transparent
>>> in the sense, that all characters are supported and
>>> the user is only hit by the restrictions of the operating
>>> system or the file system, but not by artificial restrictions
>>> by the software inbetween.
>> 
>> I agree, but this will never happen: try to use a Unicode file name
>> on Windows in any engine ... even though they are perfectly legal
>> as far as the operating system is concerned, no TeX processor ever
>> will accept them because fopen doesn't accept Unicode file names on
>> Windows. Either all engines switch to a nonstandard C runtime that
>> interprets file names as UTF-8, or all engines are rewritten to
>> avoid fopen on Windows. Both are extremely unlikely to ever happen.
> 
> I must admit that I don't understand.  First of all, when talking
> about character encodings, I don't know what "the operating system"
> means.  AKAIK, filenames are stored as UTF-8 in NTFS (don't know
> whether FAT supports UTF-8).  

It uses UTF-16 (both on NTFS and VFAT). The operating system functions expect UTF-16 as well.
The difference between Windows and Unix-like systems in this respect is that the latter expect an opaque byte string that is simply passed through to the file system, while Windows expects an UTF-16 string.

> 
> My question is how and where this is implemented.
> 
> The user interfaces are using different encodings, in a German
> Windows, the Exploder uses CP1252 and cmd.exe is using CP850.  I would
> expect that they translate filenames to UTF-8 internally.

Everything in Windows is UTF-16, there is no UTF-8 or other encodings involved. The console does use CP850 (or similar) sometimes, but only to support legacy programs; internally it uses UTF-16 as well. Other encodings than UTF-16 exist only in application-level wrappers; everything starting from the Native API (NTDLL.DLL) down to the kernel and file system uses UTF-16.

> 
> When you say
> 
>> even though they [Unicode file names] are perfectly legal
>> as far as the operating system is concerned [...]
> 
> I suppose that you have the C API in mind, and I suppose that the
> fopen() you mention is that from MSVCRT.
> 
> Which character encoding does fopen() expect?

The C standard does not specify this. In MSVCRT, fopen wraps CreateFileA, which assumes its arguments to be in Windows-1252 (or any other of the legacy codepages), and converts it to UTF-16 and then calls CreateFileW, which does the actual work.

> 
> Does the Exploder use fopen() from MSVCRT?

No, never, otherwise it wouldn't support Unicode. It uses CreateFileW, either directly or via a wrapper (e.g. _wfopen).

>  I ask because I've seen so
> many differences between the Exploder and cmd.exe, especially
> regarding file permissions and UNC paths.

This has nothing to do with encodings, it is handled by the kernel. Both the Explorer and the console use the native UTF-16 API internally.

> 
> Is it possible to open a file and avoid MSVCRT?

Of course, every file open must go through CreateFileW, it does not matter whether it is wrapped or not. (This is just like using open(2) instead of fopen(3)).

>  If yes, with which
> versions of Windows is it compatible?

All NT-based systems, including Windows 2000, XP, Vista and 7 (that is, all Windows systems that are relevant today).

> 
> I ask because you said
> 
>> Either all engines switch to a nonstandard C runtime that
>> interprets file names as UTF-8, [...]
> 
> and I'm wondering whether it's *our* mistake to rely on MSVCRT (which
> actually supports MS-DOG only), even though current versions of
> Windows provide system calls which support UTF-8 natively.  What do
> you mean with "nonstandard"?  Not shipped with recent versions of
> Windows or has to be installed explicitly?

I've only heard that there exist versions of the C runtime that are supposed to accept UTF-8 file names. But now I can't find any reference to it, sorry; the library doesn't seem to be that popular, since all discussions I've found ended in the suggestion to give the operating system what it wants (UTF-16). See for example the top answer to http://stackoverflow.com/questions/402283 for a nice explanation.

> 
> There is a system call execvpe() in MSVCRT,

Not really, there is no way to replace a running process on Windows. execvpe simply creates a new process and exits the old one.

> but some people mentioned
> CreateProcess().  Where does the latter come from?

It is the operating system function to start a new process (comparable to fork + exec). The "spawn" and "system" C runtime functions are wrappers of this function.

>  Obviously not from
> MSVCRT.  
> 
> Is there another runtime lib beyond MSVCRT?  If yes, is it still
> appropriate to rely on the old stuff?

The Microsoft Visual C runtime is the current standard C runtime and not at all old or outdated.

From reinhard.kotucha at web.de  Sun May 15 00:36:57 2011
From: reinhard.kotucha at web.de (Reinhard Kotucha)
Date: Sun, 15 May 2011 00:36:57 +0200
Subject: [luatex] [lltx] [tex-live] Location of recorder file
In-Reply-To: <BB998378-677D-45D2-8BB6-E51EAD203C56@yahoo.de>
References: <201105122301.p4CN1qPc007735@freefriends.org>
 <3BB8C0DD-95DC-47BC-BD36-47841A93CBDE@yahoo.de>
 <4DCCDAAB.2000505@elzevir.fr> <4DCCEAEC.5060105@free.fr>
 <20110513104349.GA3562@oberdiek.my-fqdn.de>
 <4DCD0E8D.60302@free.fr>
 <20110513111538.GA3639@oberdiek.my-fqdn.de>
 <CC7A752E-DF7A-40F8-9B77-04696F811F43@yahoo.de>
 <19917.49641.123496.100580@zaphod.ms25.net>
 <BB998378-677D-45D2-8BB6-E51EAD203C56@yahoo.de>
Message-ID: <19919.1033.891695.792985@zaphod.ms25.net>

On 2011-05-14 at 02:43:31 +0200, Philipp Stephani wrote:

 > [...] 
 > 
 > The Microsoft Visual C runtime is the current standard C runtime
 > and not at all old or outdated.

Hi Philipp,
thank you very much for the comprehensive response.

I was confused by different behavior of cmd.exe and the Exploder, and
I have the sources of MSVCRT from 1998 and a recent version but I
didn't see significant changes.

Windows is quite confusing.

Regards,
  Reinhard

-- 
----------------------------------------------------------------------------
Reinhard Kotucha                                      Phone: +49-511-3373112
Marschnerstr. 25
D-30167 Hannover                              mailto:reinhard.kotucha at web.de
----------------------------------------------------------------------------
Microsoft isn't the answer. Microsoft is the question, and the answer is NO.
----------------------------------------------------------------------------

From luatex at nililand.de  Sun May 15 12:38:01 2011
From: luatex at nililand.de (Ulrike Fischer)
Date: Sun, 15 May 2011 12:38:01 +0200
Subject: [luatex] [lltx] [tex-live] Location of recorder file
References: <201105122301.p4CN1qPc007735@freefriends.org>
 <3BB8C0DD-95DC-47BC-BD36-47841A93CBDE@yahoo.de> <4DCCDAAB.2000505@elzevir.fr>
 <4DCCEAEC.5060105@free.fr> <20110513104349.GA3562@oberdiek.my-fqdn.de>
 <4DCD0E8D.60302@free.fr> <20110513111538.GA3639@oberdiek.my-fqdn.de>
 <CC7A752E-DF7A-40F8-9B77-04696F811F43@yahoo.de>
Message-ID: <1g3obn9vcfftp.dlg@nililand.de>

Am Fri, 13 May 2011 13:41:32 +0200 schrieb Philipp Stephani:

>> I think, the file name interfaces should be transparent
>> in the sense, that all characters are supported and
>> the user is only hit by the restrictions of the operating
>> system or the file system, but not by artificial restrictions
>> by the software inbetween.
 
> I agree, but this will never happen: try to use a Unicode file
> name on Windows in any engine ... even though they are perfectly
> legal as far as the operating system is concerned,

Which reminds me this news:

http://www.heise.de/security/meldung/Rueckwaerts-wird-ein-Virus-draus-1242127.html
(german with a link to an english article)

So to give you some more headaches: Did someone try what happens (in
luatex) with file names which do contain 0x202E (right-to-left
override) und 0x202B (right-to-left embedding)?

(Personally I'm a strict ASCII-with-no-spaces-file-names-user and
only expect "lualatex \def\myflag{true}\input file" to work
correctly.)


-- 
Ulrike Fischer 


From st_philipp at yahoo.de  Sun May 15 11:45:01 2011
From: st_philipp at yahoo.de (Philipp Stephani)
Date: Sun, 15 May 2011 11:45:01 +0200
Subject: [luatex] [lltx] [tex-live] Location of recorder file
In-Reply-To: <19919.1033.891695.792985@zaphod.ms25.net>
References: <201105122301.p4CN1qPc007735@freefriends.org>
 <3BB8C0DD-95DC-47BC-BD36-47841A93CBDE@yahoo.de> <4DCCDAAB.2000505@elzevir.fr>
 <4DCCEAEC.5060105@free.fr> <20110513104349.GA3562@oberdiek.my-fqdn.de>
 <4DCD0E8D.60302@free.fr> <20110513111538.GA3639@oberdiek.my-fqdn.de>
 <CC7A752E-DF7A-40F8-9B77-04696F811F43@yahoo.de>
 <19917.49641.123496.100580@zaphod.ms25.net>
 <BB998378-677D-45D2-8BB6-E51EAD203C56@yahoo.de>
 <19919.1033.891695.792985@zaphod.ms25.net>
Message-ID: <67BB1E83-5DBF-4C0B-AB54-2B193C2683B7@yahoo.de>


Am 15.05.2011 um 00:36 schrieb Reinhard Kotucha:

> On 2011-05-14 at 02:43:31 +0200, Philipp Stephani wrote:
> 
>> [...] 
>> 
>> The Microsoft Visual C runtime is the current standard C runtime
>> and not at all old or outdated.
> 
> Hi Philipp,
> thank you very much for the comprehensive response.
> 
> I was confused by different behavior of cmd.exe and the Exploder,

What exactly is the different behavior? AFAIK cmd doesn't accept / as a path delimiter (due to historical reasons, of course...), but that's about it. Missing Unicode support is generally caused by the non-Unicode font that is used by default.
There are also a few other differences and issues, e.g. (at least several versions of) the Explorer refuse to create files starting with a dot, even if they are perfectly legal for the kernel.

> and
> I have the sources of MSVCRT from 1998 and a recent version but I
> didn't see significant changes

Probably because most of the system-related functions like spawn*, fopen, etc. simply wrap the Windows API functions whose interface essentially hasn't changed since 1995 (there have been a small number of additions, but if you had good working code in 1995, it will still compile and run just fine, with full Unicode support). Similarly files like execl.c in the glibc [1] don't have to change often; it is rather the underlying operating system function (like execve or CreateProcess) that has to be modified for new releases of the system.
The unfortunate situation on Windows is that you always have to use non-standard function (i.e. functions not defined by the C standard) to get Unicode support. Therefore many applications switch to higher-level abstractions (e.g. Qt, Boost.Filesystem...) that wrap the platform-specific details and can guarantee Unicode support on all platforms.

[1] http://sourceware.org/git/?p=glibc.git;a=blob;f=posix/execl.c

From st_philipp at yahoo.de  Sun May 15 13:21:33 2011
From: st_philipp at yahoo.de (Philipp Stephani)
Date: Sun, 15 May 2011 13:21:33 +0200
Subject: [luatex] [lltx] [tex-live] Location of recorder file
In-Reply-To: <1g3obn9vcfftp.dlg@nililand.de>
References: <201105122301.p4CN1qPc007735@freefriends.org>
 <3BB8C0DD-95DC-47BC-BD36-47841A93CBDE@yahoo.de> <4DCCDAAB.2000505@elzevir.fr>
 <4DCCEAEC.5060105@free.fr> <20110513104349.GA3562@oberdiek.my-fqdn.de>
 <4DCD0E8D.60302@free.fr> <20110513111538.GA3639@oberdiek.my-fqdn.de>
 <CC7A752E-DF7A-40F8-9B77-04696F811F43@yahoo.de>
 <1g3obn9vcfftp.dlg@nililand.de>
Message-ID: <66FAA852-0C92-4FE5-AF64-7657279CAA51@yahoo.de>


Am 15.05.2011 um 12:38 schrieb Ulrike Fischer:

> Am Fri, 13 May 2011 13:41:32 +0200 schrieb Philipp Stephani:
> 
>>> I think, the file name interfaces should be transparent
>>> in the sense, that all characters are supported and
>>> the user is only hit by the restrictions of the operating
>>> system or the file system, but not by artificial restrictions
>>> by the software inbetween.
> 
>> I agree, but this will never happen: try to use a Unicode file
>> name on Windows in any engine ... even though they are perfectly
>> legal as far as the operating system is concerned,
> 
> Which reminds me this news:
> 
> http://www.heise.de/security/meldung/Rueckwaerts-wird-ein-Virus-draus-1242127.html
> (german with a link to an english article)
> 
> So to give you some more headaches: Did someone try what happens (in
> luatex) with file names which do contain 0x202E (right-to-left
> override) und 0x202B (right-to-left embedding)?

Well, nothing (I don't have to try it, I *know* it). These characters are just ordinary Unicode characters that don't trigger any different interpretation from other Unicode characters. The program and the kernel see nothing but a sequence of UTF-16 code units (on Windows) or 8-bit code units (most Unix-like systems). The directionality of a text matters only to the visual interpretation, i.e., the text rendering engine. Compiling such a document leads to funny output on the (OS X) console, but causes no harm.
Besides, this is not a bug or security hole, it's an intended and correct implementation of the Unicode bidirectional algorithms.

From reinhard.kotucha at web.de  Mon May 16 03:48:04 2011
From: reinhard.kotucha at web.de (Reinhard Kotucha)
Date: Mon, 16 May 2011 03:48:04 +0200
Subject: [luatex] Lua Profiler
Message-ID: <19920.33364.186942.458720@zaphod.ms25.net>

Hi,
I compiled the Lua profiler from

  http://luaprofiler.luaforge.net

and installed the shared library in $SELFAUTOLOC/lib .

It works fine, except that the function profiler.start() ignores its
argument (the name of the output file).  It always creates a file
lprof_<random number>.

However, when I use the same shared library with stock Lua, I get

Lua 5.1.4  Copyright (C) 1994-2008 Lua.org, PUC-Rio
> require('profiler')
> profiler.start('foo')
> print('hello')
hello
> profiler.stop()
> os.exit()
Segmentation fault (core dumped)

Despite the segmentation fault, it creates a file

-rw-r--r-- 1 reinhard users     333 May 16 02:57 foo

at least.

Did anybody encounter similar problems?

luatex --version
This is LuaTeX, Version beta-0.70.0-2011051603 (rev 4267)

$ uname -rmo
2.6.30-gentoo-r5 x86_64 GNU/Linux

luaprofiler-2.0.2

Regards,
  Reinhard

-- 
----------------------------------------------------------------------------
Reinhard Kotucha                                      Phone: +49-511-3373112
Marschnerstr. 25
D-30167 Hannover                              mailto:reinhard.kotucha at web.de
----------------------------------------------------------------------------
Microsoft isn't the answer. Microsoft is the question, and the answer is NO.
----------------------------------------------------------------------------

From taco at elvenkind.com  Mon May 16 08:18:16 2011
From: taco at elvenkind.com (Taco Hoekwater)
Date: Mon, 16 May 2011 08:18:16 +0200
Subject: [luatex] Lua Profiler
In-Reply-To: <19920.33364.186942.458720@zaphod.ms25.net>
References: <19920.33364.186942.458720@zaphod.ms25.net>
Message-ID: <4DD0C1A8.3040104@elvenkind.com>

On 05/16/2011 03:48 AM, Reinhard Kotucha wrote:
> Hi,
> I compiled the Lua profiler from
>
>    http://luaprofiler.luaforge.net
>
> and installed the shared library in $SELFAUTOLOC/lib .
>
> It works fine, except that the function profiler.start() ignores its
> argument (the name of the output file).  It always creates a file
> lprof_<random number>.

I think this is because luatex already includes luaprofiler,
and an older version of it, that ignores the argument everywhere
except on win32.

Somehow, this never got into the manual, so that gives me two
todo's: 1) update 2) document.

Best wishes,
Taco

From st_philipp at yahoo.de  Mon May 16 11:01:28 2011
From: st_philipp at yahoo.de (Philipp Stephani)
Date: Mon, 16 May 2011 11:01:28 +0200
Subject: [luatex] Lua Profiler
In-Reply-To: <19920.33364.186942.458720@zaphod.ms25.net>
References: <19920.33364.186942.458720@zaphod.ms25.net>
Message-ID: <0F1F49B0-7F78-4616-9FE8-B033738A1ACA@yahoo.de>


Am 16.05.2011 um 03:48 schrieb Reinhard Kotucha:

> Hi,
> I compiled the Lua profiler from
> 
>  http://luaprofiler.luaforge.net
> 
> and installed the shared library in $SELFAUTOLOC/lib .
> 
> It works fine, except that the function profiler.start() ignores its
> argument (the name of the output file).  It always creates a file
> lprof_<random number>.
> 
> However, when I use the same shared library with stock Lua, I get
> 
> Lua 5.1.4  Copyright (C) 1994-2008 Lua.org, PUC-Rio
>> require('profiler')
>> profiler.start('foo')
>> print('hello')
> hello
>> profiler.stop()
>> os.exit()
> Segmentation fault (core dumped)
> 
> Despite the segmentation fault, it creates a file
> 
> -rw-r--r-- 1 reinhard users     333 May 16 02:57 foo
> 
> at least.
> 
> Did anybody encounter similar problems?

Hello,

how did you compile and install the profiler library? Does your process differ in some way from the steps taken by LuaRocks? I'm asking this because segmentation faults are typical on Unix-like systems when an extension module is linked to a Lua library; so you shouldn't link with e.g. -llua. If you installed the library via LuaRocks and it crashes with stock Lua, then there's definitely a bug somewhere in the library.

From reinhard.kotucha at web.de  Mon May 16 14:21:40 2011
From: reinhard.kotucha at web.de (Reinhard Kotucha)
Date: Mon, 16 May 2011 14:21:40 +0200
Subject: [luatex] Lua Profiler
In-Reply-To: <0F1F49B0-7F78-4616-9FE8-B033738A1ACA@yahoo.de>
References: <19920.33364.186942.458720@zaphod.ms25.net>
 <0F1F49B0-7F78-4616-9FE8-B033738A1ACA@yahoo.de>
Message-ID: <19921.5844.893862.631316@zaphod.ms25.net>

On 2011-05-16 at 11:01:28 +0200, Philipp Stephani wrote:

 > 
 > Am 16.05.2011 um 03:48 schrieb Reinhard Kotucha:
 > 
 > > Hi,
 > > I compiled the Lua profiler from
 > > 
 > >  http://luaprofiler.luaforge.net
 > > 
 > > and installed the shared library in $SELFAUTOLOC/lib .
 > > 
 > > It works fine, except that the function profiler.start() ignores its
 > > argument (the name of the output file).  It always creates a file
 > > lprof_<random number>.
 > > 
 > > However, when I use the same shared library with stock Lua, I get
 > > 
 > > Lua 5.1.4  Copyright (C) 1994-2008 Lua.org, PUC-Rio
 > >> require('profiler')
 > >> profiler.start('foo')
 > >> print('hello')
 > > hello
 > >> profiler.stop()
 > >> os.exit()
 > > Segmentation fault (core dumped)
 > > 
 > > Despite the segmentation fault, it creates a file
 > > 
 > > -rw-r--r-- 1 reinhard users     333 May 16 02:57 foo
 > > 
 > > at least.
 > > 
 > > Did anybody encounter similar problems?
 > 
 > Hello,
 > 
 > how did you compile and install the profiler library? Does your
 > process differ in some way from the steps taken by LuaRocks? I'm
 > asking this because segmentation faults are typical on Unix-like
 > systems when an extension module is linked to a Lua library; so you
 > shouldn't link with e.g. -llua. If you installed the library via
 > LuaRocks and it crashes with stock Lua, then there's definitely a
 > bug somewhere in the library.

Hi Philipp,
I simply ran make -f Makefile.linux.  It complained that I have to
compile with -fPIC, so I added this to CFLAGS in config.linux and
compiled again.  Then I copied bin/profiler.so to $SELFAUTOLOC/lib and
later to /usr/lib64/lua.

I didn't use LuaRocks because, according to its documentation, it
tries to detect an installed Lua but I wanted to use the profiler with
texlua anyway.

Now I installed again with LuaRocks (nice tool) and don't get the
segfault anymore.

When Taco said that luaprofiler is already compiled into texlua, I ran
my script in strace and now I see that the external module isn't
loaded indeed.

BTW, did anybody try base64 encoding with the luatex mime module?
The created base64 string is lacking the last two bytes, but maybe I
did something wrong.  However, *de*coding base64 strings works fine.

Regards,
  Reinhard

-- 
----------------------------------------------------------------------------
Reinhard Kotucha                                      Phone: +49-511-3373112
Marschnerstr. 25
D-30167 Hannover                              mailto:reinhard.kotucha at web.de
----------------------------------------------------------------------------
Microsoft isn't the answer. Microsoft is the question, and the answer is NO.
----------------------------------------------------------------------------

From reinhard.kotucha at web.de  Mon May 16 15:07:02 2011
From: reinhard.kotucha at web.de (Reinhard Kotucha)
Date: Mon, 16 May 2011 15:07:02 +0200
Subject: [luatex] Lua Profiler
In-Reply-To: <4DD0C1A8.3040104@elvenkind.com>
References: <19920.33364.186942.458720@zaphod.ms25.net>
 <4DD0C1A8.3040104@elvenkind.com>
Message-ID: <19921.8566.125112.110795@zaphod.ms25.net>

On 2011-05-16 at 08:18:16 +0200, Taco Hoekwater wrote:

 > On 05/16/2011 03:48 AM, Reinhard Kotucha wrote:
 > > Hi,
 > > I compiled the Lua profiler from
 > >
 > >    http://luaprofiler.luaforge.net
 > >
 > > and installed the shared library in $SELFAUTOLOC/lib .
 > >
 > > It works fine, except that the function profiler.start() ignores its
 > > argument (the name of the output file).  It always creates a file
 > > lprof_<random number>.
 > 
 > I think this is because luatex already includes luaprofiler,

Hi Taco,
sorry, I missed that.

 > and an older version of it, that ignores the argument everywhere
 > except on win32.

I just copied the *.{h,c} files from luaprofiler-2.0.2/src to
branches/0.70.x/source/texk/web2c/luatexdir/luaprofiler and compiled
luatex again.

However, I had to apply the patch below because the script
summary.lua, which is shipped with luaprofiler, doesn't support
concatenated output files.  It obviously expects the header only at
the beginning of the file:  

$ texlua summary.lua -v profile
summary.lua:54: attempt to perform arithmetic on global 'local_time' (a string value)

IMO it doesn't make sense to concatenate output files because this
doesn't circumvent the limitation that times are multiples of 10ms.
And in most cases one changes the code of the evaluated script between
consecutive runs in order to compare the differences.

However, now it works as expected here and creates a file with the
name specified in profiler.start(), which can be processed with
summary.lua.

Regards,
  Reinhard


--- core_profiler.c--	2008-05-19 20:36:23.000000000 +0200
+++ core_profiler.c	2011-05-16 14:29:10.000000000 +0200
@@ -140,7 +140,7 @@
     randstr[strlen(randstr)-1]='\0';
 
   sprintf(auxs, out_filename, randstr);
-  outf = fopen(auxs, "a");
+  outf = fopen(auxs, "w");
   if (!outf) {
     return 0;
   }



-- 
----------------------------------------------------------------------------
Reinhard Kotucha                                      Phone: +49-511-3373112
Marschnerstr. 25
D-30167 Hannover                              mailto:reinhard.kotucha at web.de
----------------------------------------------------------------------------
Microsoft isn't the answer. Microsoft is the question, and the answer is NO.
----------------------------------------------------------------------------

From st_philipp at yahoo.de  Mon May 16 16:38:34 2011
From: st_philipp at yahoo.de (Philipp Stephani)
Date: Mon, 16 May 2011 16:38:34 +0200
Subject: [luatex] Lua Profiler
In-Reply-To: <19921.5844.893862.631316@zaphod.ms25.net>
References: <19920.33364.186942.458720@zaphod.ms25.net>
 <0F1F49B0-7F78-4616-9FE8-B033738A1ACA@yahoo.de>
 <19921.5844.893862.631316@zaphod.ms25.net>
Message-ID: <463AB65A-6403-40B9-8C4F-0B417E622487@yahoo.de>


Am 16.05.2011 um 14:21 schrieb Reinhard Kotucha:

> On 2011-05-16 at 11:01:28 +0200, Philipp Stephani wrote:
> 
>> 
>> Am 16.05.2011 um 03:48 schrieb Reinhard Kotucha:
>> 
>>> Hi,
>>> I compiled the Lua profiler from
>>> 
>>> http://luaprofiler.luaforge.net
>>> 
>>> and installed the shared library in $SELFAUTOLOC/lib .
>>> 
>>> It works fine, except that the function profiler.start() ignores its
>>> argument (the name of the output file).  It always creates a file
>>> lprof_<random number>.
>>> 
>>> However, when I use the same shared library with stock Lua, I get
>>> 
>>> Lua 5.1.4  Copyright (C) 1994-2008 Lua.org, PUC-Rio
>>>> require('profiler')
>>>> profiler.start('foo')
>>>> print('hello')
>>> hello
>>>> profiler.stop()
>>>> os.exit()
>>> Segmentation fault (core dumped)
>>> 
>>> Despite the segmentation fault, it creates a file
>>> 
>>> -rw-r--r-- 1 reinhard users     333 May 16 02:57 foo
>>> 
>>> at least.
>>> 
>>> Did anybody encounter similar problems?
>> 
>> Hello,
>> 
>> how did you compile and install the profiler library? Does your
>> process differ in some way from the steps taken by LuaRocks? I'm
>> asking this because segmentation faults are typical on Unix-like
>> systems when an extension module is linked to a Lua library; so you
>> shouldn't link with e.g. -llua. If you installed the library via
>> LuaRocks and it crashes with stock Lua, then there's definitely a
>> bug somewhere in the library.
> 
> Hi Philipp,
> I simply ran make -f Makefile.linux.  It complained that I have to
> compile with -fPIC, so I added this to CFLAGS in config.linux and
> compiled again.  Then I copied bin/profiler.so to $SELFAUTOLOC/lib and
> later to /usr/lib64/lua.

Seems all fine to me, and in fact I can reproduce your segfault. I'm quite sure this is a programming bug in the library code (use of the profiler state object after free).

> 
> I didn't use LuaRocks because, according to its documentation, it
> tries to detect an installed Lua but I wanted to use the profiler with
> texlua anyway.
> 
> Now I installed again with LuaRocks (nice tool) and don't get the
> segfault anymore.

Which is a bit surprising, but use-after-free bugs are not really deterministic.

From reinhard.kotucha at web.de  Tue May 17 01:27:43 2011
From: reinhard.kotucha at web.de (Reinhard Kotucha)
Date: Tue, 17 May 2011 01:27:43 +0200
Subject: [luatex] [lltx] [tex-live] Location of recorder file
In-Reply-To: <67BB1E83-5DBF-4C0B-AB54-2B193C2683B7@yahoo.de>
References: <201105122301.p4CN1qPc007735@freefriends.org>
 <3BB8C0DD-95DC-47BC-BD36-47841A93CBDE@yahoo.de>
 <4DCCDAAB.2000505@elzevir.fr> <4DCCEAEC.5060105@free.fr>
 <20110513104349.GA3562@oberdiek.my-fqdn.de>
 <4DCD0E8D.60302@free.fr>
 <20110513111538.GA3639@oberdiek.my-fqdn.de>
 <CC7A752E-DF7A-40F8-9B77-04696F811F43@yahoo.de>
 <19917.49641.123496.100580@zaphod.ms25.net>
 <BB998378-677D-45D2-8BB6-E51EAD203C56@yahoo.de>
 <19919.1033.891695.792985@zaphod.ms25.net>
 <67BB1E83-5DBF-4C0B-AB54-2B193C2683B7@yahoo.de>
Message-ID: <19921.45807.661155.34913@zaphod.ms25.net>

On 2011-05-15 at 11:45:01 +0200, Philipp Stephani wrote:

 > Am 15.05.2011 um 00:36 schrieb Reinhard Kotucha:
 > 
 > > On 2011-05-14 at 02:43:31 +0200, Philipp Stephani wrote:
 > > 
 > >> [...] 
 > >> 
 > >> The Microsoft Visual C runtime is the current standard C runtime
 > >> and not at all old or outdated.
 > > 
 > > Hi Philipp,
 > > thank you very much for the comprehensive response.
 > > 
 > > I was confused by different behavior of cmd.exe and the Exploder,
 > 
 > What exactly is the different behavior? AFAIK cmd doesn't accept /
 > as a path delimiter (due to historical reasons, of course...), but
 > that's about it. Missing Unicode support is generally caused by the
 > non-Unicode font that is used by default.

There were differences regarding file permissions.  In cmd.exe I was
sometimes unable to [re]move files.  I got a "permission denied" error
though I could [re]move the files in the Exploder.  I don't know what
caused the file permission problem, but I vaguely remember that it
sometimes could be solved by setting the executable flag under Cygwin,
though I don't understand why.

Another thing are UNC paths.  Try:

   start "" \\server\path\to\file.pdf

And there is also the encoding mess.  We had TortoiseSVN, which was
running in the Exploder and thus used CP1252.  When I committed files
on the command line (cmd), CP850 was used and non-ASCII characters in
log messages were not displayed properly in the GUI.  I tried "chcp
1252" in the CLI but cmd.exe obviously didn't support it.

There is also another issue, besides that reported by Mojca and Ulrike,
regarding the display of filenames.  Put a Type 1 font into
c:\windows\fonts.  The CLI (dir) lists both, the PFB and the PFM file,
while the Exploder only shows the PFM file.

That was on XP SP2, I've never used Vista or W7, but I don't expect
much progress anyway.

Regarding forward slashes, I think that cmd.exe can deal with them
unless you pass a file name containing them as path delimiters to a
program which interprets them as prefixes for optional arguments.

It's the Exploder which doesn't accept them as path delimiters.  If
you enter a file name with forward slashes, the Exploder prepends
"http://" to the path, which is probably not what you expect. :) 

Furthermore, the gap between the CLI and the GUI seems to increase.
On a German XP there was a directory c:\Programme.  This directory was
displayed by the Exploder too.  Under Vista, programs are installed
under "c:\Program Files", but the Exploder shows the non-existent
directory "Programme" instead.

I'm a bit wondering that you say that the only difference between the
CLI and the GUI is how they handle forward slashes and file names
beginning with a dot.  I have the impression that Windows (please note
the plural) are at least two distinct operating systems, NTVDM
provides a third one, and I've heard that even some XP programs are
virtualized too under W7...

However, I think that you, as a C programmer, don't have to worry so
much about the limitations of cmd.exe.  But if you are using Perl or
Emacs, you can't avoid shell escapes.  I encountered the problem with
file permissions in Emacs, which calls "cmd /c delete ..." in order to
delete a file.  When we wrote the installer, we encountered severe
problems with pipes.  They are implemented in cmd.exe and don't
support binary files reliably.  As a C programmer you would certainly
avoid the shell and use popen() directly, which can be forced to
binary mode.  The pipes implemented in cmd.exe are *guessing* whether
a file is a text or binary file and try to "repair" line endings
occasionally.

You recently said:

 > If I read perldoc perlfunc correctly, something like
 > open(HANDLE, "-|", "command", "arg1", "arg2", ...)
 > should do the job, provided that maps to the correct CreateProcessW
 > invocation (with conversion to UTF-16 and proper quoting) on Windows
 > and to a fork/exec or spawn_process invocation on Linux and OS X
 > without going through any shell or standard C function.

Well, since we painfully had to learn that even if you pass arguments
as a list to execve(), you still have to quote arguments because
Windows converts the argument list to a string and then back to a list
internally, before passing the arguments to its child process, I doubt
that even low-level functions avoid the shell.

If you are aware of specifications from Microsoft which explain how
Windows is messing up the execve() argument list before passing it to
the new process, please let us know.

Look at

  texmf/scripts/texlive/rungs.tlu 

in order to see how we solve the problem ATM.  It would be nice to
have the annoying function fixwin() integrated in texlua, similarly as
it's integrated in Perl.  However, Taco won't do that without a clear
specification from Microsoft.  Understandably.  But we didn't find any
specifications so far.

Regards,
  Reinhard

-- 
----------------------------------------------------------------------------
Reinhard Kotucha                                      Phone: +49-511-3373112
Marschnerstr. 25
D-30167 Hannover                              mailto:reinhard.kotucha at web.de
----------------------------------------------------------------------------
Microsoft isn't the answer. Microsoft is the question, and the answer is NO.
----------------------------------------------------------------------------

From st_philipp at yahoo.de  Tue May 17 10:43:54 2011
From: st_philipp at yahoo.de (Philipp Stephani)
Date: Tue, 17 May 2011 10:43:54 +0200
Subject: [luatex] [lltx] [tex-live] Location of recorder file
In-Reply-To: <19921.45807.661155.34913@zaphod.ms25.net>
References: <201105122301.p4CN1qPc007735@freefriends.org>
 <3BB8C0DD-95DC-47BC-BD36-47841A93CBDE@yahoo.de> <4DCCDAAB.2000505@elzevir.fr>
 <4DCCEAEC.5060105@free.fr> <20110513104349.GA3562@oberdiek.my-fqdn.de>
 <4DCD0E8D.60302@free.fr> <20110513111538.GA3639@oberdiek.my-fqdn.de>
 <CC7A752E-DF7A-40F8-9B77-04696F811F43@yahoo.de>
 <19917.49641.123496.100580@zaphod.ms25.net>
 <BB998378-677D-45D2-8BB6-E51EAD203C56@yahoo.de>
 <19919.1033.891695.792985@zaphod.ms25.net>
 <67BB1E83-5DBF-4C0B-AB54-2B193C2683B7@yahoo.de>
 <19921.45807.661155.34913@zaphod.ms25.net>
Message-ID: <D7B2F13C-81C9-422C-8839-5D46D28EB68A@yahoo.de>


Am 17.05.2011 um 01:27 schrieb Reinhard Kotucha:

> On 2011-05-15 at 11:45:01 +0200, Philipp Stephani wrote:
> 
>> Am 15.05.2011 um 00:36 schrieb Reinhard Kotucha:
>> 
>>> On 2011-05-14 at 02:43:31 +0200, Philipp Stephani wrote:
>>> 
>>>> [...] 
>>>> 
>>>> The Microsoft Visual C runtime is the current standard C runtime
>>>> and not at all old or outdated.
>>> 
>>> Hi Philipp,
>>> thank you very much for the comprehensive response.
>>> 
>>> I was confused by different behavior of cmd.exe and the Exploder,
>> 
>> What exactly is the different behavior? AFAIK cmd doesn't accept /
>> as a path delimiter (due to historical reasons, of course...), but
>> that's about it. Missing Unicode support is generally caused by the
>> non-Unicode font that is used by default.
> 
> There were differences regarding file permissions.  In cmd.exe I was
> sometimes unable to [re]move files.  I got a "permission denied" error
> though I could [re]move the files in the Exploder.  I don't know what
> caused the file permission problem, but I vaguely remember that it
> sometimes could be solved by setting the executable flag under Cygwin,
> though I don't understand why.

AFAIK there can't be any such differences since both the console and the Explorer only report back the errors reported by the kernel. Maybe you ran the Explorer with elevated privileges in that case?

> 
> And there is also the encoding mess.  We had TortoiseSVN, which was
> running in the Exploder and thus used CP1252.  When I committed files
> on the command line (cmd), CP850 was used and non-ASCII characters in
> log messages were not displayed properly in the GUI.  I tried "chcp
> 1252" in the CLI but cmd.exe obviously didn't support it.

As I explained, everything in Windows uses UTF-16, the old "codepages" are only for legacy applications. If you have encoding problems, they are *almost always* application-related. You can use any Unicode filename just fine in both the Explorer and the command prompt. So this is purely a TortoiseSVN problem.

> 
> There is also another issue, besides that reported by Mojca and Ulrike,
> regarding the display of filenames.  Put a Type 1 font into
> c:\windows\fonts.  The CLI (dir) lists both, the PFB and the PFM file,
> while the Exploder only shows the PFM file.

The "Fonts" directory lists fonts, not files.

> 
> That was on XP SP2, I've never used Vista or W7, but I don't expect
> much progress anyway.

XP was already a good operating system, and much progress in all areas has been made since then. Sure, there are a few issues, but most of them don't matter in practice for average users (and that's the target audience of Windows). Unfortunately there is a lot of backward-compatibility stuff that makes the system more complex than needed, but if you follow modern programming rules (e.g., none of the legacy *A functions, don't try to write in C:\Windows, ...), there shouldn't be too many problems. (I know that trying to code platform-independently adds several orders of magnitude.)

> It's the Exploder which doesn't accept them as path delimiters.  If
> you enter a file name with forward slashes, the Exploder prepends
> "http://" to the path, which is probably not what you expect. :) 

Well, why not? The backslash is the standard directory separator on Windows, and the slash is the URL component separator. I think this is quite a user-friendly choice.

> 
> Furthermore, the gap between the CLI and the GUI seems to increase.

There is no gap, these are just two different interfaces to the operating system, both of which are in active development.

> On a German XP there was a directory c:\Programme.  This directory was
> displayed by the Exploder too.  Under Vista, programs are installed
> under "c:\Program Files", but the Exploder shows the non-existent
> directory "Programme" instead.

This behavior was adopted from OS X, where several folders have localized names in the UI, but non-localized names for the kernel (e.g. /Applications is listed as "Programme" on my system). The idea is that a programmer wants a fixed path such as "/Applications", while the user prefers to see the folders in his native language.

> 
> I'm a bit wondering that you say that the only difference between the
> CLI and the GUI is how they handle forward slashes and file names
> beginning with a dot.

There are certainly more differences, but nothing spectacular, I think. (But I don't really know since I've never used the command prompt that much.)

>  I have the impression that Windows (please note
> the plural) are at least two distinct operating systems, NTVDM
> provides a third one, and I've heard that even some XP programs are
> virtualized too under W7...

Yes, there is a lot of virtualization of every kind, and a lot of legacy support. This is all for backwards compatibility, but not something to worry about in new programs.

> 
> However, I think that you, as a C programmer, don't have to worry so
> much about the limitations of cmd.exe.  But if you are using Perl or
> Emacs, you can't avoid shell escapes.  I encountered the problem with
> file permissions in Emacs, which calls "cmd /c delete ..." in order to
> delete a file.  When we wrote the installer, we encountered severe
> problems with pipes.  They are implemented in cmd.exe and don't
> support binary files reliably.  As a C programmer you would certainly
> avoid the shell and use popen() directly, which can be forced to
> binary mode.  The pipes implemented in cmd.exe are *guessing* whether
> a file is a text or binary file and try to "repair" line endings
> occasionally.

I must confess that I don't use cmd.exe much, and I think that's pretty common for Windows programmers. Cmd.exe is good for simple administrative tasks, but not so good for scripting, where there are more powerful application (e.g. PowerShell).
It is true that Windows doesn't really encourage command line work. Programs that would be text scripts on Linux would often be implemented as full-fledged binary programs on Windows. Put it another way, the gap between a normal user and a programmer is somewhat larger on Windows: programming usually means using Visual Studio, and the notion of "hacking together a small shell script" is almost not present.

> 
> You recently said:
> 
>> If I read perldoc perlfunc correctly, something like
>> open(HANDLE, "-|", "command", "arg1", "arg2", ...)
>> should do the job, provided that maps to the correct CreateProcessW
>> invocation (with conversion to UTF-16 and proper quoting) on Windows
>> and to a fork/exec or spawn_process invocation on Linux and OS X
>> without going through any shell or standard C function.
> 
> Well, since we painfully had to learn that even if you pass arguments
> as a list to execve(), you still have to quote arguments because
> Windows converts the argument list to a string and then back to a list
> internally, before passing the arguments to its child process, I doubt
> that even low-level functions avoid the shell.

No, you shouldn't have to quote anything, that's what the language's standard library is for. For example, Python converts an argument list to a command-line string using the list2cmdline functions:
>>> print subprocess.list2cmdline(["a b", r'c" d\""ef g'])
"a b" "c\" d\\\"\"ef g"
Indeed this is something that only the language runtime can do: the spawn* functions indeed don't quote their arguments properly, as discussed in http://msdn.microsoft.com/en-us/library/20y988d2.aspx. As usual, that behavior can't be changed because it could break anything. Therefore I think the spawn* and exec* functions should be avoided altogether: if you have to preprocess the argument vector in any case, directly calling CreateProcessW isn't such a big deal either.

> 
> Look at
> 
>  texmf/scripts/texlive/rungs.tlu 
> 
> in order to see how we solve the problem ATM.  It would be nice to
> have the annoying function fixwin() integrated in texlua, similarly as
> it's integrated in Perl.  However, Taco won't do that without a clear
> specification from Microsoft.  Understandably.  But we didn't find any
> specifications so far.

The rules are described here:
http://msdn.microsoft.com/en-us/library/17w5ykft(v=VS.100).aspx
However, I think adding them to luatex isn't such a good idea since it would widen the gap between stock Lua and LuaTeX even more. The best thing would be to write an extension module that wraps CreateProcessW directly.
If it's only about calculating the command line from an argument vector (i.e. the list2cmdline) function, then that can be done in pure Lua. For example, you could simply translate the list2cmdline function from http://hg.python.org/cpython/file/4b7c29201c60/Lib/subprocess.py.

From P.Taylor at Rhul.Ac.Uk  Tue May 17 11:05:16 2011
From: P.Taylor at Rhul.Ac.Uk (Philip TAYLOR (Webmaster, Ret'd))
Date: Tue, 17 May 2011 10:05:16 +0100
Subject: [luatex] [tex-live]  [lltx]  Location of recorder file
In-Reply-To: <D7B2F13C-81C9-422C-8839-5D46D28EB68A@yahoo.de>
References: <201105122301.p4CN1qPc007735@freefriends.org>
 <3BB8C0DD-95DC-47BC-BD36-47841A93CBDE@yahoo.de> <4DCCDAAB.2000505@elzevir.fr>
 <4DCCEAEC.5060105@free.fr> <20110513104349.GA3562@oberdiek.my-fqdn.de>
 <4DCD0E8D.60302@free.fr> <20110513111538.GA3639@oberdiek.my-fqdn.de>
 <CC7A752E-DF7A-40F8-9B77-04696F811F43@yahoo.de>
 <19917.49641.123496.100580@zaphod.ms25.net>
 <BB998378-677D-45D2-8BB6-E51EAD203C56@yahoo.de>
 <19919.1033.891695.792985@zaphod.ms25.net>
 <67BB1E83-5DBF-4C0B-AB54-2B193C2683B7@yahoo.de>
 <19921.45807.661155.34913@zaphod.ms25.net>
 <D7B2F13C-81C9-422C-8839-5D46D28EB68A@yahoo.de>
Message-ID: <4DD23A4C.8010702@Rhul.Ac.Uk>



Philipp Stephani wrote:
> XP was already a good operating system, and much progress in all areas 
> has been made since then.
I wish I knew what this "progress" was.  Vista was a nightmare, and I groan
whenever someone needs me to fix (or even do) something under Windows 7.
If only Microsoft had heeded the axiom "If it ain't broke, don't fix it 
!".  For
me, XP and Server 2003 remain the only two OSs with which I am willing
to share my life (following the sad demise of VMS).

** Phil.

From reinhard.kotucha at web.de  Tue May 17 22:23:39 2011
From: reinhard.kotucha at web.de (Reinhard Kotucha)
Date: Tue, 17 May 2011 22:23:39 +0200
Subject: [luatex] [lltx] [tex-live] Location of recorder file
In-Reply-To: <D7B2F13C-81C9-422C-8839-5D46D28EB68A@yahoo.de>
References: <201105122301.p4CN1qPc007735@freefriends.org>
 <3BB8C0DD-95DC-47BC-BD36-47841A93CBDE@yahoo.de>
 <4DCCDAAB.2000505@elzevir.fr> <4DCCEAEC.5060105@free.fr>
 <20110513104349.GA3562@oberdiek.my-fqdn.de>
 <4DCD0E8D.60302@free.fr>
 <20110513111538.GA3639@oberdiek.my-fqdn.de>
 <CC7A752E-DF7A-40F8-9B77-04696F811F43@yahoo.de>
 <19917.49641.123496.100580@zaphod.ms25.net>
 <BB998378-677D-45D2-8BB6-E51EAD203C56@yahoo.de>
 <19919.1033.891695.792985@zaphod.ms25.net>
 <67BB1E83-5DBF-4C0B-AB54-2B193C2683B7@yahoo.de>
 <19921.45807.661155.34913@zaphod.ms25.net>
 <D7B2F13C-81C9-422C-8839-5D46D28EB68A@yahoo.de>
Message-ID: <19922.55627.144583.10152@zaphod.ms25.net>

On 2011-05-17 at 10:43:54 +0200, Philipp Stephani wrote:

 > Am 17.05.2011 um 01:27 schrieb Reinhard Kotucha:

 > > There were differences regarding file permissions.  In cmd.exe I
 > > was sometimes unable to [re]move files.  I got a "permission
 > > denied" error though I could [re]move the files in the Exploder.
 > > I don't know what caused the file permission problem, but I
 > > vaguely remember that it sometimes could be solved by setting the
 > > executable flag under Cygwin, though I don't understand why.
 > 
 > AFAIK there can't be any such differences since both the console
 > and the Explorer only report back the errors reported by the
 > kernel. Maybe you ran the Explorer with elevated privileges in that
 > case?

I always had admin rights.

 > > Well, since we painfully had to learn that even if you pass
 > > arguments as a list to execve(), you still have to quote
 > > arguments because Windows converts the argument list to a string
 > > and then back to a list internally, before passing the arguments
 > > to its child process, I doubt that even low-level functions avoid
 > > the shell.
 > 
 > No, you shouldn't have to quote anything, that's what the
 > language's standard library is for. For example, Python converts an
 > argument list to a command-line string using the list2cmdline
 > functions: 
 >>> print subprocess.list2cmdline(["a b", r'c" d\""ef g']) "a b" "c\"
 > d\\\"\"ef g"
 > Indeed this is something that only the
 > language runtime can do: the spawn* functions indeed don't quote
 > their arguments properly, as discussed in
 > http://msdn.microsoft.com/en-us/library/20y988d2.aspx. As usual,
 > that behavior can't be changed because it could break
 > anything. Therefore I think the spawn* and exec* functions should
 > be avoided altogether: if you have to preprocess the argument
 > vector in any case, directly calling CreateProcessW isn't such a
 > big deal either.
 > 
 > > 
 > > Look at
 > > 
 > >  texmf/scripts/texlive/rungs.tlu 
 > > 
 > > in order to see how we solve the problem ATM.  It would be nice
 > > to have the annoying function fixwin() integrated in texlua,
 > > similarly as it's integrated in Perl.  However, Taco won't do
 > > that without a clear specification from Microsoft.
 > > Understandably.  But we didn't find any specifications so far.
 > 
 > The rules are described here:
 > http://msdn.microsoft.com/en-us/library/17w5ykft(v=VS.100).aspx

Thanks for this link.  I think it's quite helpful.

 > However, I think adding them to luatex isn't such a good idea since
 > it would widen the gap between stock Lua and LuaTeX even more. 

The gap between stock Lua and LuaTeX is already quite large.  What I
miss in stock Lua is TeX, for example. :)

Well, I don't think that the gap has to be kept small in the first
place.  Lua is designed to be embedded in programs on a particular
platform and is not aware of the operating system at all.  It just
inherits behavior from the operating system it runs on, for instance
line endings.  I'd like to use texlua as a general, platform
independent scripting language without the need of conditional code
for different platforms in the scripts.  As a first step into this
direction, Taco made io.read('*lines') line ending neutral.  There are
not many differences between Lua and LuaTeX, mostly extensions, which
are described in the manual.

Lua provides os.execute() as the only function for calling external
programs.  Taco added os.exec(), which was supposed to replace the
current process image by another one.  Since this doesn't work as
expected on Windows, he added os.spawn().  All these functions
expected a string as an argument, which means that file names with
spaces have to be quoted in each script, which is quite annoying.
Also, string concatenation is quite ugly.  With table support we can
simply pass arg{} to the new process.

Therefore I asked Taco to add support for Lua tables to
the new functions.  They now accept either a string or a table.

If you pass arguments as a table, you don't have to quote, except on
Windows.  I looked at the description of CreateProcess() and it seems
that it accepts a string only.  However, I suppose that

  http://msdn.microsoft.com/en-us/library/20y988d2.aspx

is the specification Taco was missing.

 > The best thing would be to write an extension module that wraps
 > CreateProcessW directly.  If it's only about calculating the
 > command line from an argument vector (i.e. the list2cmdline)
 > function, then that can be done in pure Lua.

Sure, this is quite similar to what the fixwin() function does, though
the latter doesn't create a string, but it would be much nicer if we
can avoid it completely.

Regards,
  Reinhard

-- 
----------------------------------------------------------------------------
Reinhard Kotucha                                      Phone: +49-511-3373112
Marschnerstr. 25
D-30167 Hannover                              mailto:reinhard.kotucha at web.de
----------------------------------------------------------------------------
Microsoft isn't the answer. Microsoft is the question, and the answer is NO.
----------------------------------------------------------------------------

From st_philipp at yahoo.de  Tue May 17 22:49:39 2011
From: st_philipp at yahoo.de (Philipp Stephani)
Date: Tue, 17 May 2011 22:49:39 +0200
Subject: [luatex] [lltx] [tex-live] Location of recorder file
In-Reply-To: <19922.55627.144583.10152@zaphod.ms25.net>
References: <201105122301.p4CN1qPc007735@freefriends.org>
 <3BB8C0DD-95DC-47BC-BD36-47841A93CBDE@yahoo.de> <4DCCDAAB.2000505@elzevir.fr>
 <4DCCEAEC.5060105@free.fr> <20110513104349.GA3562@oberdiek.my-fqdn.de>
 <4DCD0E8D.60302@free.fr> <20110513111538.GA3639@oberdiek.my-fqdn.de>
 <CC7A752E-DF7A-40F8-9B77-04696F811F43@yahoo.de>
 <19917.49641.123496.100580@zaphod.ms25.net>
 <BB998378-677D-45D2-8BB6-E51EAD203C56@yahoo.de>
 <19919.1033.891695.792985@zaphod.ms25.net>
 <67BB1E83-5DBF-4C0B-AB54-2B193C2683B7@yahoo.de>
 <19921.45807.661155.34913@zaphod.ms25.net>
 <D7B2F13C-81C9-422C-8839-5D46D28EB68A@yahoo.de>
 <19922.55627.144583.10152@zaphod.ms25.net>
Message-ID: <9B3805EB-AD0C-4C19-9332-CF0B49D1C9E2@yahoo.de>


Am 17.05.2011 um 22:23 schrieb Reinhard Kotucha:

> The gap between stock Lua and LuaTeX is already quite large.  What I
> miss in stock Lua is TeX, for example. :)
> 
> Well, I don't think that the gap has to be kept small in the first
> place.  Lua is designed to be embedded in programs on a particular
> platform and is not aware of the operating system at all.  It just
> inherits behavior from the operating system it runs on, for instance
> line endings.  I'd like to use texlua as a general, platform
> independent scripting language without the need of conditional code
> for different platforms in the scripts.  As a first step into this
> direction, Taco made io.read('*lines') line ending neutral.  There are
> not many differences between Lua and LuaTeX, mostly extensions, which
> are described in the manual.
> 
> Lua provides os.execute() as the only function for calling external
> programs.  Taco added os.exec(), which was supposed to replace the
> current process image by another one.  Since this doesn't work as
> expected on Windows, he added os.spawn().  All these functions
> expected a string as an argument, which means that file names with
> spaces have to be quoted in each script, which is quite annoying.
> Also, string concatenation is quite ugly.  With table support we can
> simply pass arg{} to the new process.

Additions don't cause problems, it's more the changes I'm a bit worried about. I think that changed functionality should generally be reflected in an interface addition. What happens if I run a script that expects stock Lua behavior through TeXLua?

> 
> Therefore I asked Taco to add support for Lua tables to
> the new functions.  They now accept either a string or a table.
> 
> If you pass arguments as a table, you don't have to quote, except on
> Windows.  I looked at the description of CreateProcess() and it seems
> that it accepts a string only.  However, I suppose that
> 
>  http://msdn.microsoft.com/en-us/library/20y988d2.aspx
> 
> is the specification Taco was missing.

Yes, that is just the conversion from the argument vector to the command-line string that CreateProcessW expects.
But then you still have to write wrapper code for CreateProcessW, convert the UTF-8 arguments to UTF-16, etc. Not hard to do, but adds even more platform-specific code to LuaTeX.

> 
>> The best thing would be to write an extension module that wraps
>> CreateProcessW directly.  If it's only about calculating the
>> command line from an argument vector (i.e. the list2cmdline)
>> function, then that can be done in pure Lua.
> 
> Sure, this is quite similar to what the fixwin() function does, though
> the latter doesn't create a string, but it would be much nicer if we
> can avoid it completely.

The problem remains that unless you wrap CreateProcessW or at least wspawn* directly, you never get Unicode support on Windows. Therefore you have to add platform-specific code anyway. It's a bit less if you call spawn/wspawn, but it's still there.
If you really want to make Lua truly platform-independent, you have to add those Unicode wrapper functions for Windows. No Unicode support on a Unicode operating system is almost unacceptable.

From till.heilmann at unibas.ch  Wed May 18 12:14:37 2011
From: till.heilmann at unibas.ch (Heilmann, Till A.)
Date: Wed, 18 May 2011 12:14:37 +0200
Subject: [luatex] Typesetting URLs
Message-ID: <51B7A5B7-0F31-47AD-BD00-E461CA40C840@unibas.ch>

Sorry to bother you again with this, guys, but apparently something has changed with LuaTeX beta 0.70 so that Paul's and Ulrike's code to typeset URLs (see below) doesn't work when the string contains a _ character (this problem was corrected by Ulrike a few days ago but now seems to have resurfaced). Any thoughts on this?

Thanks and best regards,
--Till

\documentclass{article}
\def\makeother#1{\catcode`#1=12 }
\def\url{%
    \begingroup
    \catcode`\%=12
    \URL
    }
\newbox\urlbox
\def\URL#1{%
  \setbox\urlbox=\hbox{%
    \directlua{%
      tex.sprint(-2,"\luatexluaescapestring{\unexpanded{#1}}")}}%
  \directlua{%
     local box = tex.box["urlbox"].list
     local glyf, disc = node.id("glyph"), node.id("disc")
     for n in node.traverse_id(disc, box) do
       node.remove(box, n)
     end
     for n in node.traverse_id(glyf, box) do
       local b = url.breakpoints[n.char]
       if b == "before" then
         url.before(box, n)
       elseif b == "after" then
         url.after(box, n)
       elseif b == "both" then
         url.before(box, n)
         url.after(box, n)
       end
     end}%
   \unhbox\urlbox
   \endgroup
   }
\directlua{
local id, copy, insert_before, insert_after = node.id, node.copy, node.insert_before, node.insert_after
url = {}
url.breakpoints = {}
local penalty = node.new(id("penalty"))
penalty.penalty = 0
function url.before (l, n)
   if n.prev then
     if n.prev.id == id("kern") and n.prev.subtype == 0 then
       n = n.prev
     end
     insert_before(l, n, copy(penalty))
   end
end
function url.after(l, n)
   if n.next then
     insert_after(l, n, copy(penalty))
   end
end
}
\def\urladdbreakpoint#1#2{%
    \directlua{url.breakpoints[\the\numexpr`#1] = "#2"}%
    }
\urladdbreakpoint{_}{both}
\begin{document}
\url{_}
\end{document}

From luatex at nililand.de  Wed May 18 12:47:38 2011
From: luatex at nililand.de (Ulrike Fischer)
Date: Wed, 18 May 2011 12:47:38 +0200
Subject: [luatex] Typesetting URLs
References: <51B7A5B7-0F31-47AD-BD00-E461CA40C840@unibas.ch>
Message-ID: <3vf6n7p03htx.dlg@nililand.de>

Am Wed, 18 May 2011 12:14:37 +0200 schrieb Heilmann, Till A.:

> Sorry to bother you again with this, guys, but apparently
> something has changed with LuaTeX beta 0.70 so that Paul's and
> Ulrike's code to typeset URLs (see below) doesn't work when the
> string contains a _ character (this problem was corrected by
> Ulrike a few days ago but now seems to have resurfaced). Any
> thoughts on this?

Obviously "-2" in the tex.sprint command no longer gives a
catcodetable where everything has catcode 12. Looks like a bug. But
you can replace the -2 by \the\CatcodeTableString from luatexbase:

\documentclass{article}
\usepackage{luatexbase}
\begin{document}
\directlua{tex.sprint(\the\CatcodeTableString,"a_b")}

%\directlua{tex.sprint(-2,"a_b")} %error
\end{document}


-- 
Ulrike Fischer 


From zappathustra at free.fr  Wed May 18 12:49:52 2011
From: zappathustra at free.fr (Paul Isambert)
Date: Wed, 18 May 2011 12:49:52 +0200
Subject: [luatex] Typesetting URLs
In-Reply-To: <51B7A5B7-0F31-47AD-BD00-E461CA40C840@unibas.ch>
References: <51B7A5B7-0F31-47AD-BD00-E461CA40C840@unibas.ch>
Message-ID: <4DD3A450.8030202@free.fr>

Le 18/05/2011 12:14, Heilmann, Till A. a ?crit :
> Sorry to bother you again with this, guys, but apparently something has changed with LuaTeX beta 0.70 so that Paul's and Ulrike's code to typeset URLs (see below) doesn't work when the string contains a _ character (this problem was corrected by Ulrike a few days ago but now seems to have resurfaced). Any thoughts on this?

Apparently a bug (tex.print and tex.sprint ignore -2 as "all others"), 
I'll add it to the tracker.
In the meanwhile, you can rely on the previous version (changing catcodes).

Paul


From zappathustra at free.fr  Wed May 18 21:12:24 2011
From: zappathustra at free.fr (Paul Isambert)
Date: Wed, 18 May 2011 21:12:24 +0200
Subject: [luatex] Typesetting URLs
In-Reply-To: <4DD3A450.8030202@free.fr>
References: <51B7A5B7-0F31-47AD-BD00-E461CA40C840@unibas.ch>
 <4DD3A450.8030202@free.fr>
Message-ID: <4DD41A18.40503@free.fr>

Le 18/05/2011 12:49, Paul Isambert a ?crit :
> Le 18/05/2011 12:14, Heilmann, Till A. a ?crit :
>> Sorry to bother you again with this, guys, but apparently something 
>> has changed with LuaTeX beta 0.70 so that Paul's and Ulrike's code to 
>> typeset URLs (see below) doesn't work when the string contains a _ 
>> character (this problem was corrected by Ulrike a few days ago but 
>> now seems to have resurfaced). Any thoughts on this?
>
> Apparently a bug (tex.print and tex.sprint ignore -2 as "all others"), 
> I'll add it to the tracker.

Taco has just fixed the bug, so you can build from the source or wait 
for the next TLContrib release (I don't know when).
Paul

From reinhard.kotucha at web.de  Thu May 19 01:19:32 2011
From: reinhard.kotucha at web.de (Reinhard Kotucha)
Date: Thu, 19 May 2011 01:19:32 +0200
Subject: [luatex] [lltx] [tex-live] Location of recorder file
In-Reply-To: <9B3805EB-AD0C-4C19-9332-CF0B49D1C9E2@yahoo.de>
References: <201105122301.p4CN1qPc007735@freefriends.org>
 <3BB8C0DD-95DC-47BC-BD36-47841A93CBDE@yahoo.de>
 <4DCCDAAB.2000505@elzevir.fr> <4DCCEAEC.5060105@free.fr>
 <20110513104349.GA3562@oberdiek.my-fqdn.de>
 <4DCD0E8D.60302@free.fr>
 <20110513111538.GA3639@oberdiek.my-fqdn.de>
 <CC7A752E-DF7A-40F8-9B77-04696F811F43@yahoo.de>
 <19917.49641.123496.100580@zaphod.ms25.net>
 <BB998378-677D-45D2-8BB6-E51EAD203C56@yahoo.de>
 <19919.1033.891695.792985@zaphod.ms25.net>
 <67BB1E83-5DBF-4C0B-AB54-2B193C2683B7@yahoo.de>
 <19921.45807.661155.34913@zaphod.ms25.net>
 <D7B2F13C-81C9-422C-8839-5D46D28EB68A@yahoo.de>
 <19922.55627.144583.10152@zaphod.ms25.net>
 <9B3805EB-AD0C-4C19-9332-CF0B49D1C9E2@yahoo.de>
Message-ID: <19924.21508.830863.360192@zaphod.ms25.net>

On 2011-05-17 at 22:49:39 +0200, Philipp Stephani wrote:

 > 
 > Am 17.05.2011 um 22:23 schrieb Reinhard Kotucha:
 > 
 > > The gap between stock Lua and LuaTeX is already quite large.
 > > What I miss in stock Lua is TeX, for example. :)
 > > 
 > > Well, I don't think that the gap has to be kept small in the
 > > first place.  Lua is designed to be embedded in programs on a
 > > particular platform and is not aware of the operating system at
 > > all.  It just inherits behavior from the operating system it runs
 > > on, for instance line endings.  I'd like to use texlua as a
 > > general, platform independent scripting language without the need
 > > of conditional code for different platforms in the scripts.  As a
 > > first step into this direction, Taco made io.read('*lines') line
 > > ending neutral.  There are not many differences between Lua and
 > > LuaTeX, mostly extensions, which are described in the manual.
 > > 
 > > Lua provides os.execute() as the only function for calling
 > > external programs.  Taco added os.exec(), which was supposed to
 > > replace the current process image by another one.  Since this
 > > doesn't work as expected on Windows, he added os.spawn().  All
 > > these functions expected a string as an argument, which means
 > > that file names with spaces have to be quoted in each script,
 > > which is quite annoying.  Also, string concatenation is quite
 > > ugly.  With table support we can simply pass arg{} to the new
 > > process.
 > 
 > Additions don't cause problems, it's more the changes I'm a bit
 > worried about. I think that changed functionality should generally
 > be reflected in an interface addition. What happens if I run a
 > script that expects stock Lua behavior through TeXLua?

You don't have to worry about line endings. :)
I'm not aware of incomatible changes, except that lexlua doesn't
support locales, in sake of portability.
 
 > > Therefore I asked Taco to add support for Lua tables to
 > > the new functions.  They now accept either a string or a table.
 > > 
 > > If you pass arguments as a table, you don't have to quote, except on
 > > Windows.  I looked at the description of CreateProcess() and it seems
 > > that it accepts a string only.  However, I suppose that
 > > 
 > >  http://msdn.microsoft.com/en-us/library/20y988d2.aspx
 > > 
 > > is the specification Taco was missing.
 > 
 > Yes, that is just the conversion from the argument vector to the
 > command-line string that CreateProcessW expects.  But then you
 > still have to write wrapper code for CreateProcessW, convert the
 > UTF-8 arguments to UTF-16, etc. Not hard to do, but adds even more
 > platform-specific code to LuaTeX.
 > > 
 > >> The best thing would be to write an extension module that wraps
 > >> CreateProcessW directly.  If it's only about calculating the
 > >> command line from an argument vector (i.e. the list2cmdline)
 > >> function, then that can be done in pure Lua.
 > > 
 > > Sure, this is quite similar to what the fixwin() function does,
 > > though the latter doesn't create a string, but it would be much
 > > nicer if we can avoid it completely.
 > 
 > The problem remains that unless you wrap CreateProcessW or at least
 > wspawn* directly, you never get Unicode support on
 > Windows. Therefore you have to add platform-specific code
 > anyway. It's a bit less if you call spawn/wspawn, but it's still
 > there.  If you really want to make Lua truly platform-independent,
 > you have to add those Unicode wrapper functions for Windows. No
 > Unicode support on a Unicode operating system is almost
 > unacceptable.

In principle, yes.  But I'm sceptical in respect of Unicode file
names.  Sounds non-trivial.  Does io.open() in stock Lua convert UTF-8
encoded file names to UTF-16 on Windows?

Regards,
  Reinhard

-- 
----------------------------------------------------------------------------
Reinhard Kotucha                                      Phone: +49-511-3373112
Marschnerstr. 25
D-30167 Hannover                              mailto:reinhard.kotucha at web.de
----------------------------------------------------------------------------
Microsoft isn't the answer. Microsoft is the question, and the answer is NO.
----------------------------------------------------------------------------

From mpg at elzevir.fr  Thu May 19 03:56:02 2011
From: mpg at elzevir.fr (=?ISO-8859-1?Q?Manuel_P=E9gouri=E9-Gonnard?=)
Date: Thu, 19 May 2011 03:56:02 +0200
Subject: [luatex] \U*spacing and pointer
Message-ID: <4DD478B2.8060108@elzevir.fr>

Hi,

Consider the following test file for LuaTeX with Plain:

\newmuskip\testmuskip
\testmuskip=18mu
\thinmuskip=18mu

\Umathopopspacing\textstyle=\testmuskip
\Umathordordspacing\textstyle=\thinmuskip
$11$\par % 18mu, ok
$++$\par % 18mu, ok

\testmuskip=0mu
\thinmuskip=0mu
$11$\par % 0 mu ?!
$++$\par % 0 mu, ok

\bye

I would have expected a different result on the line marked '?!'. Quoting from
the manual:

> Note 1: for ease of use as well as for backward compatibility,
> \thinmuskip, \medmuskip and \thickmuskip are treated especially. In
> their case a pointer to the corresponding internal parameter is
> saved, not the actual \muskip value. This means that any later changes
> to one of these three parameters will be taken into account.

Looks like this special treatment is extended to muskip registers as
well. Is that on purpose or only an unintended side-effect?

Manuel.

PS : This is LuaTeX, Version beta-0.70.0-2011050620 (rev 4250)

From taco at elvenkind.com  Thu May 19 07:23:49 2011
From: taco at elvenkind.com (Taco Hoekwater)
Date: Thu, 19 May 2011 07:23:49 +0200
Subject: [luatex] [tex-live]  [lltx]  Location of recorder file
In-Reply-To: <19924.21508.830863.360192@zaphod.ms25.net>
References: <201105122301.p4CN1qPc007735@freefriends.org>
 <3BB8C0DD-95DC-47BC-BD36-47841A93CBDE@yahoo.de> <4DCCDAAB.2000505@elzevir.fr>
 <4DCCEAEC.5060105@free.fr> <20110513104349.GA3562@oberdiek.my-fqdn.de>
 <4DCD0E8D.60302@free.fr> <20110513111538.GA3639@oberdiek.my-fqdn.de>
 <CC7A752E-DF7A-40F8-9B77-04696F811F43@yahoo.de>
 <19917.49641.123496.100580@zaphod.ms25.net>
 <BB998378-677D-45D2-8BB6-E51EAD203C56@yahoo.de>
 <19919.1033.891695.792985@zaphod.ms25.net>
 <67BB1E83-5DBF-4C0B-AB54-2B193C2683B7@yahoo.de>
 <19921.45807.661155.34913@zaphod.ms25.net>
 <D7B2F13C-81C9-422C-8839-5D46D28EB68A@yahoo.de>
 <19922.55627.144583.10152@zaphod.ms25.net>
 <9B3805EB-AD0C-4C19-9332-CF0B49D1C9E2@yahoo.de>
 <19924.21508.830863.360192@zaphod.ms25.net>
Message-ID: <4DD4A965.9070007@elvenkind.com>



On 05/19/11 01:19, Reinhard Kotucha wrote:
>  > 
>  > The problem remains that unless you wrap CreateProcessW or at least
>  > wspawn* directly, you never get Unicode support on
>  > Windows. Therefore you have to add platform-specific code
>  > anyway. It's a bit less if you call spawn/wspawn, but it's still
>  > there.  If you really want to make Lua truly platform-independent,
>  > you have to add those Unicode wrapper functions for Windows. No
>  > Unicode support on a Unicode operating system is almost
>  > unacceptable.
> 
> In principle, yes.  But I'm sceptical in respect of Unicode file
> names.  Sounds non-trivial.  Does io.open() in stock Lua convert UTF-8
> encoded file names to UTF-16 on Windows?

No, it does not.

Best wishes,
Taco

From st_philipp at yahoo.de  Thu May 19 07:55:30 2011
From: st_philipp at yahoo.de (Philipp Stephani)
Date: Thu, 19 May 2011 07:55:30 +0200
Subject: [luatex] [lltx] [tex-live] Location of recorder file
In-Reply-To: <19924.21508.830863.360192@zaphod.ms25.net>
References: <201105122301.p4CN1qPc007735@freefriends.org>
 <3BB8C0DD-95DC-47BC-BD36-47841A93CBDE@yahoo.de> <4DCCDAAB.2000505@elzevir.fr>
 <4DCCEAEC.5060105@free.fr> <20110513104349.GA3562@oberdiek.my-fqdn.de>
 <4DCD0E8D.60302@free.fr> <20110513111538.GA3639@oberdiek.my-fqdn.de>
 <CC7A752E-DF7A-40F8-9B77-04696F811F43@yahoo.de>
 <19917.49641.123496.100580@zaphod.ms25.net>
 <BB998378-677D-45D2-8BB6-E51EAD203C56@yahoo.de>
 <19919.1033.891695.792985@zaphod.ms25.net>
 <67BB1E83-5DBF-4C0B-AB54-2B193C2683B7@yahoo.de>
 <19921.45807.661155.34913@zaphod.ms25.net>
 <D7B2F13C-81C9-422C-8839-5D46D28EB68A@yahoo.de>
 <19922.55627.144583.10152@zaphod.ms25.net>
 <9B3805EB-AD0C-4C19-9332-CF0B49D1C9E2@yahoo.de>
 <19924.21508.830863.360192@zaphod.ms25.net>
Message-ID: <4D48ED7F-B0EE-47A0-9462-98D6D039D96A@yahoo.de>


Am 19.05.2011 um 01:19 schrieb Reinhard Kotucha:

> lexlua doesn't
> support locales, in sake of portability.

I think it does support locales, it simply doesn't fetch them from the environment by default, but os.setlocale("") should work.

>> The problem remains that unless you wrap CreateProcessW or at least
>> wspawn* directly, you never get Unicode support on
>> Windows. Therefore you have to add platform-specific code
>> anyway. It's a bit less if you call spawn/wspawn, but it's still
>> there.  If you really want to make Lua truly platform-independent,
>> you have to add those Unicode wrapper functions for Windows. No
>> Unicode support on a Unicode operating system is almost
>> unacceptable.
> 
> In principle, yes.  But I'm sceptical in respect of Unicode file
> names.  Sounds non-trivial.

It is. :-(
The coding itself is trivial (e.g. using _wfopen instead of fopen on Windows), but the conceptual problem lies deeper. On Unix-like systems, C strings (char*) are just byte sequences without direct textual interpretation; the interpretation as a text string is locale-based. Therefore you can pass the kernel in its open syscall any byte sequence, regardless of whether it gives an useful interpretation in the current locale. In general you can't tell what encoding char* uses. On Windows, however, strings use always UTF-16: the kernel expects UTF-16 for file names, the console works with UTF-16 strings (actually UCS-2), UI controls return their textual content in UTF-16, etc. Therefore you always know the encoding of a given text string on Windows. If you use char* arrays, you can use UTF-8, no problem, but then *everybody* has to agree on this. This is the non-trivial part: you have to follow each string until you arrive at its source, and there you have to make sure that you get the right encoding. But there are many such sources: the command line, configuration files, \input commands, ...

> Does io.open() in stock Lua convert UTF-8
> encoded file names to UTF-16 on Windows?

I haven't looked at the code, but I'm sure it doesn't. Lua uses only standard C functions (except for dynamical linking), and io.open is just fopen, which wraps CreateFileA, which expects a legacy-encoded string (Windows-1252 on "western" systems). So changing io.open to use _wfopen instead would break compatibility to stock Lua.
I think this is something worth pursuing, but certainly not for TeX Live 2011.

From taco at elvenkind.com  Thu May 19 07:56:04 2011
From: taco at elvenkind.com (Taco Hoekwater)
Date: Thu, 19 May 2011 07:56:04 +0200
Subject: [luatex] Luatex 0.70.1 announcement
Message-ID: <4DD4B0F4.5060003@elvenkind.com>

Hi,

I have just uploaded the archives for a new luatex release, 0.70.1.

About a dozen or so bugfixes that were mostly discovered while
working on TeXLive 2011.

News:

* fixed: recorder file location from TL.

* fixed: missing newline on 'No output' line.

* fixed: relative names in synctex file.

* fixed: 16bit png images in generated %!PDF-1.4.

* fixed: building with (installed) libpng < 1.5.0

* fixed: year in --version output.

* fixed: box output to synctex.

* fixed: FontDescriptor for non-embedded OpenType fonts has an
  invalid FontFile3 entry (#654)

* fixed: crash on non-existent images.

* fixed: small memory leak in the ipc code.

* fixed: tex.print() and tex.sprint() don't recognize -2 as the
  first argument (#659)


The archives can be downloaded from supelec as usual:

        http://foundry.supelec.fr/gf/project/luatex/

You could also check out the sources via anonymous svn:

  svn co http://foundry.supelec.fr/svn/luatex/tags/beta-0.70.1

Bugs and feature requests can be added to the issue tracker at

       http://tracker.luatex.org

Have fun,
Taco




From taco at elvenkind.com  Thu May 19 08:26:55 2011
From: taco at elvenkind.com (Taco Hoekwater)
Date: Thu, 19 May 2011 08:26:55 +0200
Subject: [luatex] \U*spacing and pointer
In-Reply-To: <4DD478B2.8060108@elzevir.fr>
References: <4DD478B2.8060108@elzevir.fr>
Message-ID: <4DD4B82F.9030505@elvenkind.com>



On 05/19/11 03:56, Manuel P?gouri?-Gonnard wrote:
> Hi,
> 
> Consider the following test file for LuaTeX with Plain:
> 
> \newmuskip\testmuskip
> \testmuskip=18mu
> \thinmuskip=18mu
> 
> \Umathopopspacing\textstyle=\testmuskip
> \Umathordordspacing\textstyle=\thinmuskip
> $11$\par % 18mu, ok
> $++$\par % 18mu, ok
> 
> \testmuskip=0mu
> \thinmuskip=0mu
> $11$\par % 0 mu ?!
> $++$\par % 0 mu, ok
> 
> \bye
> 
> I would have expected a different result on the line marked '?!'. Quoting from
> the manual:

You meant the other line, I think. Anyay, ++ deteriorates into
Ord-Ord spacing following the texbook's Appendix G, so the
\testmuskip is never used.

(and even if it did not, you should have used \Umathbinbinspacing
as + is a Bin, not Op).

Best wishes,
Taco

From mpg at elzevir.fr  Thu May 19 11:09:16 2011
From: mpg at elzevir.fr (=?ISO-8859-1?Q?Manuel_P=E9gouri=E9-Gonnard?=)
Date: Thu, 19 May 2011 11:09:16 +0200
Subject: [luatex] \U*spacing and pointer
In-Reply-To: <4DD4B82F.9030505@elvenkind.com>
References: <4DD478B2.8060108@elzevir.fr> <4DD4B82F.9030505@elvenkind.com>
Message-ID: <4DD4DE3C.6090203@elzevir.fr>

Le 19/05/2011 08:26, Taco Hoekwater a ?crit :
> 
> 
> On 05/19/11 03:56, Manuel P?gouri?-Gonnard wrote:
>> \newmuskip\testmuskip
>> \testmuskip=18mu
>> \thinmuskip=18mu
>>
>> \Umathopopspacing\textstyle=\testmuskip
>> \Umathordordspacing\textstyle=\thinmuskip
>> $11$\par % 18mu, ok
>> $++$\par % 18mu, ok
>>
>> \testmuskip=0mu
>> \thinmuskip=0mu
>> $11$\par % 0 mu ?!
>> $++$\par % 0 mu, ok
>>
>> \bye
>>
>> I would have expected a different result on the line marked '?!'.
> 
> You meant the other line, I think. Anyay, ++ deteriorates into
> Ord-Ord spacing following the texbook's Appendix G, so the
> \testmuskip is never used.
> 
> (and even if it did not, you should have used \Umathbinbinspacing
> as + is a Bin, not Op).
> 
Right I completely messed up. I should have gone to bed earlier and tried again
with a clear mind. Sorry for the noise.

Manuel.

From luigi.scarso at gmail.com  Thu May 19 11:16:28 2011
From: luigi.scarso at gmail.com (luigi scarso)
Date: Thu, 19 May 2011 11:16:28 +0200
Subject: [luatex] \U*spacing and pointer
In-Reply-To: <4DD4DE3C.6090203@elzevir.fr>
References: <4DD478B2.8060108@elzevir.fr> <4DD4B82F.9030505@elvenkind.com>
 <4DD4DE3C.6090203@elzevir.fr>
Message-ID: <BANLkTi=GvTiRMjMb0udXWoBEQ+J3YyQUcA@mail.gmail.com>

On Thu, May 19, 2011 at 11:09 AM, Manuel P?gouri?-Gonnard
<mpg at elzevir.fr> wrote:
> I should have gone to bed earlier and tried again
> with a clear mind.
Unfortunately also this doesn't work, at least for me.
The best solution is still
"ask Taco".


-- 
luigi


From mpg at elzevir.fr  Thu May 19 11:19:52 2011
From: mpg at elzevir.fr (=?UTF-8?B?TWFudWVsIFDDqWdvdXJpw6ktR29ubmFyZA==?=)
Date: Thu, 19 May 2011 11:19:52 +0200
Subject: [luatex] \U*spacing and pointer
In-Reply-To: <BANLkTi=GvTiRMjMb0udXWoBEQ+J3YyQUcA@mail.gmail.com>
References: <4DD478B2.8060108@elzevir.fr> <4DD4B82F.9030505@elvenkind.com>
 <4DD4DE3C.6090203@elzevir.fr>
 <BANLkTi=GvTiRMjMb0udXWoBEQ+J3YyQUcA@mail.gmail.com>
Message-ID: <4DD4E0B8.4020200@elzevir.fr>

Le 19/05/2011 11:16, luigi scarso a ?crit :
> On Thu, May 19, 2011 at 11:09 AM, Manuel P?gouri?-Gonnard
> <mpg at elzevir.fr> wrote:
>> I should have gone to bed earlier and tried again
>> with a clear mind.
> Unfortunately also this doesn't work, at least for me.
> The best solution is still
> "ask Taco".
> 
Well, this solution is best for us, but probably not for Taco ;-)

m

From luigi.scarso at gmail.com  Thu May 19 11:31:05 2011
From: luigi.scarso at gmail.com (luigi scarso)
Date: Thu, 19 May 2011 11:31:05 +0200
Subject: [luatex] \U*spacing and pointer
In-Reply-To: <4DD4E0B8.4020200@elzevir.fr>
References: <4DD478B2.8060108@elzevir.fr> <4DD4B82F.9030505@elvenkind.com>
 <4DD4DE3C.6090203@elzevir.fr>
 <BANLkTi=GvTiRMjMb0udXWoBEQ+J3YyQUcA@mail.gmail.com>
 <4DD4E0B8.4020200@elzevir.fr>
Message-ID: <BANLkTin4H5FFAYyCeCz71EX1VrfE9KUygw@mail.gmail.com>

On Thu, May 19, 2011 at 11:19 AM, Manuel P?gouri?-Gonnard
<mpg at elzevir.fr> wrote:
> Le 19/05/2011 11:16, luigi scarso a ?crit :
>> On Thu, May 19, 2011 at 11:09 AM, Manuel P?gouri?-Gonnard
>> <mpg at elzevir.fr> wrote:
>>> I should have gone to bed earlier and tried again
>>> with a clear mind.
>> Unfortunately also this doesn't work, at least for me.
>> The best solution is still
>> "ask Taco".
>>
> Well, this solution is best for us, but probably not for Taco ;-)
The solution is optimal, if we are able to submit good bug or good
feature request.
Unfortunately, good bugs tend to be practically unresolvable, so it's
better to submit
a bit-less-than-good bug ( and hide the good one) .
The same for feature, more or less.

-- 
luigi


From zappathustra at free.fr  Thu May 19 11:58:27 2011
From: zappathustra at free.fr (Paul Isambert)
Date: Thu, 19 May 2011 11:58:27 +0200
Subject: [luatex] \U*spacing and pointer
In-Reply-To: <BANLkTin4H5FFAYyCeCz71EX1VrfE9KUygw@mail.gmail.com>
References: <4DD478B2.8060108@elzevir.fr> <4DD4B82F.9030505@elvenkind.com>
 <4DD4DE3C.6090203@elzevir.fr>
 <BANLkTi=GvTiRMjMb0udXWoBEQ+J3YyQUcA@mail.gmail.com>
 <4DD4E0B8.4020200@elzevir.fr>
 <BANLkTin4H5FFAYyCeCz71EX1VrfE9KUygw@mail.gmail.com>
Message-ID: <4DD4E9C3.80307@free.fr>

Le 19/05/2011 11:31, luigi scarso a ?crit :
> On Thu, May 19, 2011 at 11:19 AM, Manuel P?gouri?-Gonnard
> <mpg at elzevir.fr>  wrote:
>> Le 19/05/2011 11:16, luigi scarso a ?crit :
>>> On Thu, May 19, 2011 at 11:09 AM, Manuel P?gouri?-Gonnard
>>> <mpg at elzevir.fr>  wrote:
>>>> I should have gone to bed earlier and tried again
>>>> with a clear mind.
>>> Unfortunately also this doesn't work, at least for me.
>>> The best solution is still
>>> "ask Taco".
>>>
>> Well, this solution is best for us, but probably not for Taco ;-)
> The solution is optimal,

The second best solution is ask-the-wiki. Just in case you happen to 
solve a problem or implement a nice feature, it could profitably be put 
on the wiki, which for the moment is a bit underfed. For instance, an 
article on all those math parameters would be great. Just in case, you 
see. Hmm. Nice weather, eh?

Paul

--
YOU GOTTA PROBLEM WITH LUATEX? DON'T ASK TACO, ASK THE WIKI!
http://wiki.luatex.org/
24/7/365 100% FREE
OUR CUSTOMERS SAY IT: ``Well, sometimes I get really stuck, but I go to 
the wiki and wow, here's a solution! That's awesome!'' (Hans H., LuaTeX 
user)
NEW ARTICLES EVERY ... WELL, REGULARLY!

From luatex at nililand.de  Thu May 19 12:24:23 2011
From: luatex at nililand.de (Ulrike Fischer)
Date: Thu, 19 May 2011 12:24:23 +0200
Subject: [luatex] Luatex 0.70.1 announcement
References: <4DD4B0F4.5060003@elvenkind.com>
Message-ID: <wxtdx9do4df9$.dlg@nililand.de>

Am Thu, 19 May 2011 07:56:04 +0200 schrieb Taco Hoekwater:

> Hi,
> 
> I have just uploaded the archives for a new luatex release, 0.70.1.

The documentations
(http://www.luatex.org/manuals/luatexref-t-070.pdf,
http://www.luatex.org/svn/trunk/manual/luatexref-t.pdf) still claim
that they belong to version 0.66. 


-- 
Ulrike Fischer 


From luigi.scarso at gmail.com  Thu May 19 12:35:47 2011
From: luigi.scarso at gmail.com (luigi scarso)
Date: Thu, 19 May 2011 12:35:47 +0200
Subject: [luatex] \U*spacing and pointer
In-Reply-To: <4DD4E9C3.80307@free.fr>
References: <4DD478B2.8060108@elzevir.fr> <4DD4B82F.9030505@elvenkind.com>
 <4DD4DE3C.6090203@elzevir.fr>
 <BANLkTi=GvTiRMjMb0udXWoBEQ+J3YyQUcA@mail.gmail.com>
 <4DD4E0B8.4020200@elzevir.fr>
 <BANLkTin4H5FFAYyCeCz71EX1VrfE9KUygw@mail.gmail.com>
 <4DD4E9C3.80307@free.fr>
Message-ID: <BANLkTikhtN7BMnLDdxDon11p773g3Osr8g@mail.gmail.com>

On Thu, May 19, 2011 at 11:58 AM, Paul Isambert <zappathustra at free.fr> wrote:
> The second best solution is ask-the-wiki. Just in case you happen to solve a
> problem or implement a nice feature, it could profitably be put on the wiki,
> which for the moment is a bit underfed. For instance, an article on all
> those math parameters would be great. Just in case, you see. Hmm. Nice
> weather, eh?
This is a bit different topic.

A dev mailing list (or forum ala stack overflow) and a bug tracker
help the developer(s) to implement the specifications
and to correct the bugs. Hopefully messages stay for a while, then
become obsoletes.

The wiki helps to show the features or to explain some parts of the
manual (which we are lucky to have for each branch in this case) and
pages tend to rest for more time.
Most of us are more involved with LaTeX or ConTeXt than LuaTeX,
it's reasonable to see few contributes to the wiki (this is not bad
thing in this case, given that the contributors have all an  high
profile).


-- 
luigi

From zappathustra at free.fr  Fri May 20 06:48:58 2011
From: zappathustra at free.fr (Paul Isambert)
Date: Fri, 20 May 2011 06:48:58 +0200
Subject: [luatex] \U*spacing and pointer
In-Reply-To: <BANLkTikhtN7BMnLDdxDon11p773g3Osr8g@mail.gmail.com>
References: <4DD478B2.8060108@elzevir.fr> <4DD4B82F.9030505@elvenkind.com>
 <4DD4DE3C.6090203@elzevir.fr>
 <BANLkTi=GvTiRMjMb0udXWoBEQ+J3YyQUcA@mail.gmail.com>
 <4DD4E0B8.4020200@elzevir.fr>
 <BANLkTin4H5FFAYyCeCz71EX1VrfE9KUygw@mail.gmail.com> <4DD4E9C3.80307@free.fr>
 <BANLkTikhtN7BMnLDdxDon11p773g3Osr8g@mail.gmail.com>
Message-ID: <4DD5F2BA.3040901@free.fr>

Le 19/05/2011 12:35, luigi scarso a ?crit :
> On Thu, May 19, 2011 at 11:58 AM, Paul Isambert<zappathustra at free.fr>  wrote:
>> The second best solution is ask-the-wiki. Just in case you happen to solve a
>> problem or implement a nice feature, it could profitably be put on the wiki,
>> which for the moment is a bit underfed. For instance, an article on all
>> those math parameters would be great. Just in case, you see. Hmm. Nice
>> weather, eh?
> This is a bit different topic.
>
> A dev mailing list (or forum ala stack overflow) and a bug tracker
> help the developer(s) to implement the specifications
> and to correct the bugs. Hopefully messages stay for a while, then
> become obsoletes.
>
> The wiki helps to show the features or to explain some parts of the
> manual (which we are lucky to have for each branch in this case) and
> pages tend to rest for more time.
> Most of us are more involved with LaTeX or ConTeXt than LuaTeX,
> it's reasonable to see few contributes to the wiki (this is not bad
> thing in this case, given that the contributors have all an  high
> profile).

That's not the answer I expected, Luigi. I was rather expecting 
something along the lines of: YES YOU'RE RIGHT! EVERYBODY TO THE WIKI!
Kind of trying to advertise the thing a little bit :)

Best,
Paul

--
TIME MAGAZINE'S PERSON OF THE YEAR: THE LUATEX WIKI (http://wiki.luatex.org)

From luigi.scarso at gmail.com  Fri May 20 10:38:38 2011
From: luigi.scarso at gmail.com (luigi scarso)
Date: Fri, 20 May 2011 10:38:38 +0200
Subject: [luatex] \U*spacing and pointer
In-Reply-To: <4DD5F2BA.3040901@free.fr>
References: <4DD478B2.8060108@elzevir.fr> <4DD4B82F.9030505@elvenkind.com>
 <4DD4DE3C.6090203@elzevir.fr>
 <BANLkTi=GvTiRMjMb0udXWoBEQ+J3YyQUcA@mail.gmail.com>
 <4DD4E0B8.4020200@elzevir.fr>
 <BANLkTin4H5FFAYyCeCz71EX1VrfE9KUygw@mail.gmail.com>
 <4DD4E9C3.80307@free.fr>
 <BANLkTikhtN7BMnLDdxDon11p773g3Osr8g@mail.gmail.com>
 <4DD5F2BA.3040901@free.fr>
Message-ID: <BANLkTi=uSTmvaehB9SpQW0FQMHES0Sno=Q@mail.gmail.com>

On Fri, May 20, 2011 at 6:48 AM, Paul Isambert <zappathustra at free.fr> wrote:

> That's not the answer I expected, Luigi.
I understand.

>I was rather expecting something
> along the lines of: YES YOU'RE RIGHT! EVERYBODY TO THE WIKI!
Yes, and it's not my point of view.
Let's say that between wikipedia and
scholarpedia  I choose the last one, at least until now and for luatex
(for  LuaLaTeX and ConTeXt MkIV things are different).
And, following this way,  I find natural  to see you  as a kind of
editor/reviewer of contributions
(as a sort of PractTeX journal but for wiki) and maybe even stimulate
selected contributors.


> Kind of trying to advertise the thing a little bit :)
> --
> TIME MAGAZINE'S PERSON OF THE YEAR: THE LUATEX WIKI (http://wiki.luatex.org)
>
Again, I understand and in some sense it's true ---
my talk at EuroTeX meeting was about "here the news: LuaTeX. Look at
what you can do with it".  I'm still following this way, but it's not
strictly about LuaTeX, it's more about applications (and I feel
comfortable with MkIV, then).

-- 
luigi

From zappathustra at free.fr  Sat May 21 10:13:58 2011
From: zappathustra at free.fr (Paul Isambert)
Date: Sat, 21 May 2011 10:13:58 +0200
Subject: [luatex] \U*spacing and pointer
In-Reply-To: <BANLkTi=uSTmvaehB9SpQW0FQMHES0Sno=Q@mail.gmail.com>
References: <4DD478B2.8060108@elzevir.fr> <4DD4B82F.9030505@elvenkind.com>
 <4DD4DE3C.6090203@elzevir.fr>
 <BANLkTi=GvTiRMjMb0udXWoBEQ+J3YyQUcA@mail.gmail.com>
 <4DD4E0B8.4020200@elzevir.fr>
 <BANLkTin4H5FFAYyCeCz71EX1VrfE9KUygw@mail.gmail.com> <4DD4E9C3.80307@free.fr>
 <BANLkTikhtN7BMnLDdxDon11p773g3Osr8g@mail.gmail.com>
 <4DD5F2BA.3040901@free.fr>
 <BANLkTi=uSTmvaehB9SpQW0FQMHES0Sno=Q@mail.gmail.com>
Message-ID: <4DD77446.3040307@free.fr>

Le 20/05/2011 10:38, luigi scarso a ?crit :
> On Fri, May 20, 2011 at 6:48 AM, Paul Isambert<zappathustra at free.fr>  wrote:
>
>> That's not the answer I expected, Luigi.
> I understand.
>
>> I was rather expecting something
>> along the lines of: YES YOU'RE RIGHT! EVERYBODY TO THE WIKI!
> Yes, and it's not my point of view.
> Let's say that between wikipedia and
> scholarpedia  I choose the last one, at least until now and for luatex
> (for  LuaLaTeX and ConTeXt MkIV things are different).
> And, following this way,  I find natural  to see you  as a kind of
> editor/reviewer of contributions
> (as a sort of PractTeX journal but for wiki) and maybe even stimulate
> selected contributors.

Me?
Well, no thank you. Not that I dislike Scholarpedia and have faith in 
the ``true democracy'' of Wikipedia, but simply the wiki is not mine and 
I don't want it to be.

The thing is I believe people willing to write for the wiki are advanced 
users anyway. So by advertising the wiki here I am kind of stimulating 
selected contributors, because well-informed people post here. There are 
also questions by not-so-advanced users, but I doubt they'll want to 
write for the wiki; but if they do, that might still be a valid 
contribution (actually it would be encouraging: no need to be a wizard 
to profit from LuaTeX). Comprehensive articles on a subject are one 
thing, small pages with simple things are another, of no less value.

Anyway I will correct/edit articles if necessary, but as an ordinary 
user (not an editor).

>> Kind of trying to advertise the thing a little bit :)
>> --
>> TIME MAGAZINE'S PERSON OF THE YEAR: THE LUATEX WIKI (http://wiki.luatex.org)
>>
> Again, I understand and in some sense it's true ---
> my talk at EuroTeX meeting was about "here the news: LuaTeX. Look at
> what you can do with it".  I'm still following this way, but it's not
> strictly about LuaTeX, it's more about applications (and I feel
> comfortable with MkIV, then).

I have encouraged articles to be low-level and to ignore formats. Since 
I am *not* an editor but just a user, this point of view can be 
disagreed with, or even ignored altogether. So anything dealing with 
LuaTeX is welcome on the wiki, even though some loud-mouthed plain TeX 
user (i.e. me) says otherwise. (Let's recall that the wiki was set up by 
Taco in the first place, then populated by Patrick with articles from 
bluwiki.)

What I wonder sometimes is whether wikis work for TeX; mailing lists or 
similar are quite active, but the only wiki I know of is ConTeXt garden, 
and I'd like to know if it is much read or not.
Perhaps TeX works better with big comprehensive books + fast Q&A (i.e. 
mailing lists), but perhaps I'm completely wrong here.

Best,
Paul

From jorssen.leraincy at free.fr  Mon May 23 11:23:25 2011
From: jorssen.leraincy at free.fr (Christophe Jorssen)
Date: Mon, 23 May 2011 11:23:25 +0200
Subject: [luatex] Getting a glue node subtype on lua side
Message-ID: <BANLkTimMjwAz_47ZT=QahiwJpOzd4VziMA@mail.gmail.com>

Hello all,

I'd like to get a glue node subtype on lua side, ie a function that
returns 102 for, say, xleaders. Is there something like

node.id('glue')

(used for node type) for node subtype ? node.subtype only works for
whatsits, am I right ?

Thanks in advance and sorry if I missed something.

Best regards

-- 
Christophe

From zappathustra at free.fr  Mon May 23 11:43:42 2011
From: zappathustra at free.fr (Paul Isambert)
Date: Mon, 23 May 2011 11:43:42 +0200
Subject: [luatex] Getting a glue node subtype on lua side
In-Reply-To: <BANLkTimMjwAz_47ZT=QahiwJpOzd4VziMA@mail.gmail.com>
References: <BANLkTimMjwAz_47ZT=QahiwJpOzd4VziMA@mail.gmail.com>
Message-ID: <4DDA2C4E.1060300@free.fr>

Le 23/05/2011 11:23, Christophe Jorssen a ?crit :
> Hello all,
>
> I'd like to get a glue node subtype on lua side, ie a function that
> returns 102 for, say, xleaders. Is there something like
>
> node.id('glue')
>
> (used for node type) for node subtype ? node.subtype only works for
> whatsits, am I right ?

There is no such function, but you can do it yourself:

local glue_subtypes = {
     [0] = "skip",
     "lineskip", "baselineskip", "parskip", "abovedisplayskip", 
"belowdisplayskip",
     "abovedisplayshortskip", "belowdisplayshortskip", "leftskip", 
"rightskip", "topskip",
     "splittopskip", "tabskip", "spaceskip", "xspaceskip", 
"parfillskip", "thinmuskip",
     "medmuskip", "thickmuskip",
     [100] = "leaders",
     [101] = "cleaders",
     [102] = "xleaders",
     [103] = "gleaders"
     }

function glue_subtype (str)
     return glue_subtypes[str]
end

Of course you have to check development regularly to make sure glue 
subtypes don't change (for instance, I think there might be a 
glue-from-space-character subtype someday).

Best,
Paul

From taco at elvenkind.com  Mon May 23 11:46:58 2011
From: taco at elvenkind.com (Taco Hoekwater)
Date: Mon, 23 May 2011 11:46:58 +0200
Subject: [luatex] Getting a glue node subtype on lua side
In-Reply-To: <4DDA2C4E.1060300@free.fr>
References: <BANLkTimMjwAz_47ZT=QahiwJpOzd4VziMA@mail.gmail.com>
 <4DDA2C4E.1060300@free.fr>
Message-ID: <4DDA2D12.7070807@elvenkind.com>

On 05/23/2011 11:43 AM, Paul Isambert wrote:
>
> Of course you have to check development regularly to make sure glue
> subtypes don't change (for instance, I think there might be a
> glue-from-space-character subtype someday).

Next time anything changes to those numbers, I will also write a
function to avoid further confusion.

Best wishes,
Taco

From jorssen.leraincy at free.fr  Mon May 23 11:59:55 2011
From: jorssen.leraincy at free.fr (Christophe Jorssen)
Date: Mon, 23 May 2011 11:59:55 +0200
Subject: [luatex] Getting a glue node subtype on lua side
In-Reply-To: <4DDA2C4E.1060300@free.fr>
References: <BANLkTimMjwAz_47ZT=QahiwJpOzd4VziMA@mail.gmail.com>
 <4DDA2C4E.1060300@free.fr>
Message-ID: <BANLkTi=7TadfvbaNvyHe-Oc3fPZbZDf-Lw@mail.gmail.com>

2011/5/23 Paul Isambert <zappathustra at free.fr>:
>
> There is no such function, but you can do it yourself:
>
[snip]
>
> Of course you have to check development regularly to make sure glue subtypes
> don't change (for instance, I think there might be a
> glue-from-space-character subtype someday).
>

Ok. Thank you.

Sorry to ask, but is there a reason why it is not implemented? From my
(newbie) point of vue, there is no difference between hard coded node
types (for which node.id is provided) and hard coded node subtypes?
So, what about a node.subtypeid?

local GLUE = node.id('glue')
local XLEADERS = node.subtypeid('glue','xleaders')
local points = node.new(GLUE, XLEADERS)

Thanks and sorry again if I missed something.

Best regards

-- 
Christophe

From zappathustra at free.fr  Mon May 23 15:09:18 2011
From: zappathustra at free.fr (Paul Isambert)
Date: Mon, 23 May 2011 15:09:18 +0200
Subject: [luatex] Getting a glue node subtype on lua side
In-Reply-To: <BANLkTi=7TadfvbaNvyHe-Oc3fPZbZDf-Lw@mail.gmail.com>
References: <BANLkTimMjwAz_47ZT=QahiwJpOzd4VziMA@mail.gmail.com>
 <4DDA2C4E.1060300@free.fr>
 <BANLkTi=7TadfvbaNvyHe-Oc3fPZbZDf-Lw@mail.gmail.com>
Message-ID: <4DDA5C7E.6060708@free.fr>



Le 23/05/2011 11:59, Christophe Jorssen a ?crit :
> 2011/5/23 Paul Isambert<zappathustra at free.fr>:
>> There is no such function, but you can do it yourself:
>>
> [snip]
>> Of course you have to check development regularly to make sure glue subtypes
>> don't change (for instance, I think there might be a
>> glue-from-space-character subtype someday).
>>
> Ok. Thank you.
>
> Sorry to ask, but is there a reason why it is not implemented? From my
> (newbie) point of vue, there is no difference between hard coded node
> types (for which node.id is provided) and hard coded node subtypes?
> So, what about a node.subtypeid?

I think the reason is that there are many different node ids and whatsit 
subtypes, and that the numerical value might change before LuaTeX is 
stable. So a function that always return the right number is essential. 
On the other hand, nodes, except whatsits, don't have many subtypes, so 
numerical values are ok (not that I'm against the idea of your 
node.subtypeid function, mind you). Glue nodes appear to be crowded 
after all, but Taco's just said he would add a function if things 
changed (and they will, I suppose, because the glue-from-space-character 
I mentioned is a long-awaited subtype).

Best,
Paul

From patrick at gundla.ch  Tue May 24 19:32:10 2011
From: patrick at gundla.ch (Patrick Gundlach)
Date: Tue, 24 May 2011 19:32:10 +0200
Subject: [luatex] Getting different image parameters
Message-ID: <DC442C27-DDA5-4400-8B8A-8E0FBFD8924E@gundla.ch>

Hi,

I have a PDF file and I'd like to query the dimensions of the different PDF boxes (art box, trim box etc.)

I guess I have to do something like

a = img.scan({filename = "cow.pdf", pagebox = "media"})
b = img.scan({filename = "cow.pdf", pagebox = "art"})
c = img.scan({filename = "cow.pdf", pagebox = "crop"})

print(a.width, a.height)
print(b.width, b.height)
print(c.width, c.height)

right?

Patrick



From mpg at elzevir.fr  Tue May 24 23:42:22 2011
From: mpg at elzevir.fr (=?ISO-8859-1?Q?Manuel_P=E9gouri=E9-Gonnard?=)
Date: Tue, 24 May 2011 23:42:22 +0200
Subject: [luatex] Solving the \jobname issue: a new callback? (with patch)
Message-ID: <4DDC263E.6010003@elzevir.fr>

Hi,

It looks like the issues with \jobname quoting discussed again recently cannot
be solved using only TeX macros, and some modification of LuaTeX is needed.

It has been suggested by David Kastrup (and Philipp Stephani) to modify \jobname
so that it expands only to catcode-12 tokens, and \input and \openout to
recognize only catcode 10 spaces as delimiters. However, this seems somewhat
unnatural and ad hoc, IMO. (And could cause compatibility issues too.)

I'd like to propose a solution more in line with the LuaTeX spirit as I
understand it (provide tools, not solutions): a new callback 'process_jobname'
called when \jobname is expanded in TeX or tex.jobname consulted in Lua.

At first glance, it may look more reasonable for the callback to be executed
when the jobname is set rather than consulted, but since callbacks are not saved
in the format and \jobname is generally set before \everyjob is called, this
wouldn't be practical. Also, the ability to change the callback during a TeX run
provides more flexibility when mixing macros that prefer their jobname processed
one way or another.

I admit I can see no other use for this callback than autoquoting \jobname (the
way other engines do) for compatibility with macros that can't be changed easily
to use the new braced syntax of \input and \openout. OTOH, it's a 20-line patch
and it provides a general tool that can be used to solve the problem.

The attached patch applies to branch 0.70.x in its current state (r4281). Please
consider including it.

Thanks,
Manuel.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: process_jobname.diff
Type: text/x-patch
Size: 3555 bytes
Desc: not available
URL: <http://tug.org/pipermail/luatex/attachments/20110524/f269f376/attachment.bin>

From taco at elvenkind.com  Wed May 25 14:07:21 2011
From: taco at elvenkind.com (Taco Hoekwater)
Date: Wed, 25 May 2011 14:07:21 +0200
Subject: [luatex] Solving the \jobname issue: a new callback? (with
	patch)
In-Reply-To: <4DDC263E.6010003@elzevir.fr>
References: <4DDC263E.6010003@elzevir.fr>
Message-ID: <4DDCF0F9.7070604@elvenkind.com>



On 05/24/11 23:42, Manuel P?gouri?-Gonnard wrote:
> 
> I'd like to propose a solution more in line with the LuaTeX spirit as I
> understand it (provide tools, not solutions): a new callback 'process_jobname'
> called when \jobname is expanded in TeX or tex.jobname consulted in Lua.

Neat idea, and I like that much better than forcing some change to the
\jobname primitive code itself.

> At first glance, it may look more reasonable for the callback to be executed
> when the jobname is set rather than consulted, but since callbacks are not saved
> in the format and \jobname is generally set before \everyjob is called, this
> wouldn't be practical. 

Agreed.

> Also, the ability to change the callback during a TeX run
> provides more flexibility when mixing macros that prefer their jobname processed
> one way or another.

There is a potential there for confusion, but I agree that it could be
useful in some situations.

> I admit I can see no other use for this callback than autoquoting \jobname (the
> way other engines do) for compatibility with macros that can't be changed easily
> to use the new braced syntax of \input and \openout. OTOH, it's a 20-line patch
> and it provides a general tool that can be used to solve the problem.
> 
> The attached patch applies to branch 0.70.x in its current state (r4281). Please
> consider including it.

I'll apply the patch to trunk (at least for now). It comes too late for
texlive 2011 anyway.

Best wishes,
Taco

From patrick at gundla.ch  Wed May 25 16:04:57 2011
From: patrick at gundla.ch (Patrick Gundlach)
Date: Wed, 25 May 2011 16:04:57 +0200
Subject: [luatex] intercept PDF warnings
Message-ID: <67B353AE-B251-43A0-ABD9-8ECA5333E59A@gundla.ch>

Hi,

sometimes I get warnings like these:

LuaTeX warning: PDF inclusion: found PDF version <1.6>, but at most version <1.4> allowed

I use img.scan() and img.copy() for image inclusion.

Is it possible to intercept these warnings/messages? Currently they are written to the log and to the console, but I'd like to present them in a different form to the user.

Patrick




From taco at elvenkind.com  Wed May 25 16:50:51 2011
From: taco at elvenkind.com (Taco Hoekwater)
Date: Wed, 25 May 2011 16:50:51 +0200
Subject: [luatex] intercept PDF warnings
In-Reply-To: <67B353AE-B251-43A0-ABD9-8ECA5333E59A@gundla.ch>
References: <67B353AE-B251-43A0-ABD9-8ECA5333E59A@gundla.ch>
Message-ID: <4DDD174B.40304@elvenkind.com>



On 05/25/11 16:04, Patrick Gundlach wrote:
> Hi,
> 
> sometimes I get warnings like these:
> 
> LuaTeX warning: PDF inclusion: found PDF version <1.6>, but at most version <1.4> allowed
> 
> I use img.scan() and img.copy() for image inclusion.
> 
> Is it possible to intercept these warnings/messages? 

no

Best wishes,
Taco
(Who loves simple yes/no questions)

From patrick at gundla.ch  Wed May 25 16:52:33 2011
From: patrick at gundla.ch (Patrick Gundlach)
Date: Wed, 25 May 2011 16:52:33 +0200
Subject: [luatex] intercept PDF warnings
In-Reply-To: <4DDD174B.40304@elvenkind.com>
References: <67B353AE-B251-43A0-ABD9-8ECA5333E59A@gundla.ch>
 <4DDD174B.40304@elvenkind.com>
Message-ID: <E4E8DBA1-8018-462F-BFD5-E2750DCB14DF@gundla.ch>

Hi,

>> Is it possible to intercept these warnings/messages? 
> 
> no

Thanks

Patrick

(who loves creating tracker items :)

From mpg at elzevir.fr  Fri May 27 11:50:15 2011
From: mpg at elzevir.fr (=?ISO-8859-1?Q?Manuel_P=E9gouri=E9-Gonnard?=)
Date: Fri, 27 May 2011 11:50:15 +0200
Subject: [luatex] Solving the \jobname issue: a new callback?
	(with	patch)
In-Reply-To: <4DDCF0F9.7070604@elvenkind.com>
References: <4DDC263E.6010003@elzevir.fr> <4DDCF0F9.7070604@elvenkind.com>
Message-ID: <4DDF73D7.4080908@elzevir.fr>

Le 25/05/2011 14:07, Taco Hoekwater a ?crit :
>> The attached patch applies to branch 0.70.x in its current state (r4281). Please
>> consider including it.
> 
> I'll apply the patch to trunk (at least for now).

Great, thanks!

> It comes too late for
> texlive 2011 anyway.
> 
Ok. Don't forget to fix the version in the doc then :-)

+\subsubsection{\luatex{process_jobname} (0.XX)}

Manuel.

From mailing_list at arcor.de  Fri May 27 17:33:37 2011
From: mailing_list at arcor.de (Stephan Hennig)
Date: Fri, 27 May 2011 17:33:37 +0200
Subject: [luatex] [lltx] wrong hyphenation in four-letter word
In-Reply-To: <4DC943BE.60902@arcor.de>
References: <4DC943BE.60902@arcor.de>
Message-ID: <4DDFC451.9000306@arcor.de>

schrieb Stephan Hennig:

> I'm observing a wrong hyphenation of a four-letter word with lualatex
> and German hyphenation patterns.

According to Akira the problem seems to be VS 2003.  There are now
binaries compiled with a newer VS version in tlcontrib that work OK for me.

Best regards,
Stephan Hennig

From culleton-p-md at comcast.net  Sun May 29 00:01:52 2011
From: culleton-p-md at comcast.net (John Culleton)
Date: Sat, 28 May 2011 18:01:52 -0400
Subject: [luatex] Set paper size.
Message-ID: <201105281801.52778.culleton-p-md@comcast.net>

In Lualatex with pdfx in use what is the preferred way to set a paper size of 
6 in x 9 in? Everything I try reverts to A4.

In plain luatex this is straightforward. But because I need to use the pdfx 
package I have to venture into lualatex. Currently I am using book class. 
-- 
John Culleton
Create Book Covers with Scribus:
http://www.booklocker.com/books/4055.html
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://tug.org/pipermail/luatex/attachments/20110528/7740e45d/attachment.html>

From martin at oneiros.de  Sun May 29 16:37:40 2011
From: martin at oneiros.de (=?ISO-8859-1?Q?Martin_Schr=F6der?=)
Date: Sun, 29 May 2011 16:37:40 +0200
Subject: [luatex] Set paper size.
In-Reply-To: <201105281801.52778.culleton-p-md@comcast.net>
References: <201105281801.52778.culleton-p-md@comcast.net>
Message-ID: <BANLkTim9cf=cf6Y2f362wt99kpJcnb5VJA@mail.gmail.com>

2011/5/29 John Culleton <culleton-p-md at comcast.net>:
> In plain luatex this is straightforward. But because I need to use the pdfx
> package I have to venture into lualatex. Currently I am using book class.

\usepackage{geometry}

Best
   Martin

From luatex at nililand.de  Sun May 29 16:41:20 2011
From: luatex at nililand.de (Ulrike Fischer)
Date: Sun, 29 May 2011 16:41:20 +0200
Subject: [luatex] Set paper size.
References: <201105281801.52778.culleton-p-md@comcast.net>
Message-ID: <15cw173rrgxnw$.dlg@nililand.de>

Am Sat, 28 May 2011 18:01:52 -0400 schrieb John Culleton:

> In Lualatex with pdfx in use what is the preferred way to set a paper size of 
> 6 in x 9 in? Everything I try reverts to A4.
> 
> In plain luatex this is straightforward. But because I need to use the pdfx 
> package I have to venture into lualatex. Currently I am using book class.

You would make it much easier to answer you if you would add
complete examples which demonstrates your problem instead of hoping
that someone can guess what your problem is. 

Beside this: From c.t.t. I know that you are using pdfx with optiopn
\usepackage[x-1a]{pdfx}. This sets the mediabox to a fixed value.
You will have to change pdfx.sty. 

(according to this (german) discussion pdfx seems to be a bit buggy
http://www.ureader.de/msg/136221612.aspx)



-- 
Ulrike Fischer 


From john at wexfordpress.com  Mon May 30 16:33:25 2011
From: john at wexfordpress.com (John Culleton)
Date: Mon, 30 May 2011 10:33:25 -0400
Subject: [luatex] accented characters in plain luatex
In-Reply-To: <4da70b2e.7rc5YhtQMdOl6NcS%rdt@cs.queensu.ca>
References: <4da70b2e.7rc5YhtQMdOl6NcS%rdt@cs.queensu.ca>
Message-ID: <201105301033.26065.john@wexfordpress.com>

On Thursday, April 14, 2011 10:56:46 am Bob Tennent wrote:
> I'm finding that accented characters (?, ?, ?, etc.) in my documents
> produce
> 
> ! String contains an invalid utf-8 sequence.
> 
> But the manual says
> 
>   All LuaTeX text input and output is considered to be Unicode text.
> 
> Is there a simple fix, apart from resorting to \`a, \'e, \:a, etc.?
> 
> Bob T.

I have a plain luatex file where I am indeed using \' and \` to get acute 
and grave accents. The font in use is the TeX version of Palladio. The file 
compiles but the accents don't appear in the pdf. In Gvim I set the 
fontencoding to 
:set fileencoding=utf-8
but that doesn't help, perhaps because I am using a traditional Type 1 font 
for my body font (I have a truetype script font for headings, hence luatex 
instead of pdftex.) 

I am open to all suggestions. I have only one word (American Indian name)
that uses accents in this file so I can do a mass change in Gvim if 
necessary. I suppose I could create a TeX implementation of the Truetype 
file and use plain pdftex.
 
 Linux Slackware 13.37.TeXlive 2010


 
-- 
John Culleton
Wexford Press

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://tug.org/pipermail/luatex/attachments/20110530/42371ffc/attachment.html>

From luatex at nililand.de  Mon May 30 16:54:40 2011
From: luatex at nililand.de (Ulrike Fischer)
Date: Mon, 30 May 2011 16:54:40 +0200
Subject: [luatex] accented characters in plain luatex
References: <4da70b2e.7rc5YhtQMdOl6NcS%rdt@cs.queensu.ca>
 <201105301033.26065.john@wexfordpress.com>
Message-ID: <1mmyd0ssd33xg$.dlg@nililand.de>

Am Mon, 30 May 2011 10:33:25 -0400 schrieb John Culleton:

> I have a plain luatex file where I am indeed using \' and \` to get acute 
> and grave accents. The font in use is the TeX version of Palladio. The file 
> compiles but the accents don't appear in the pdf. In Gvim I set the 
> fontencoding to 
>:set fileencoding=utf-8
> but that doesn't help, perhaps because I am using a traditional Type 1 font 
> for my body font (I have a truetype script font for headings, hence luatex 
> instead of pdftex.)

\' and \` are pure ascii input so the file encoding doesn't matter. 

What matters are the definitions of the commands, the encoding of
your fonts, how you are loading the fonts and other informations you
are not giving. 


-- 
Ulrike Fischer 


From dpl at sun.ac.za  Mon May 30 19:23:07 2011
From: dpl at sun.ac.za (Dirk Laurie)
Date: Mon, 30 May 2011 19:23:07 +0200
Subject: [luatex] accented characters in plain luatex
In-Reply-To: <201105301033.26065.john@wexfordpress.com>
References: <4da70b2e.7rc5YhtQMdOl6NcS%rdt@cs.queensu.ca>
 <201105301033.26065.john@wexfordpress.com>
Message-ID: <20110530172307.GA25224@rondloper>

On Mon, May 30, 2011 at 04:33:25PM +0200, John Culleton wrote:
> but that doesn't help, perhaps because I am using a traditional Type 1 font
> for my body font (I have a truetype script font for headings, hence luatex
> instead of pdftex.)

Using the IAEF-RTFM approach to troubleshooting, one finds in Section 7.1 
of the LuaTeX manual:
|    For Type1 fonts, you have to set encodingbytes to 2 explicitly. 
Have you done that?  

If not, I don't see any alternative to the \'a method. 

Dirk

From john at wexfordpress.com  Mon May 30 23:03:25 2011
From: john at wexfordpress.com (John Culleton)
Date: Mon, 30 May 2011 17:03:25 -0400
Subject: [luatex] accented characters in plain luatex
In-Reply-To: <20110530172307.GA25224@rondloper>
References: <4da70b2e.7rc5YhtQMdOl6NcS%rdt@cs.queensu.ca>
 <201105301033.26065.john@wexfordpress.com> <20110530172307.GA25224@rondloper>
Message-ID: <201105301703.25817.john@wexfordpress.com>

On Monday, May 30, 2011 01:23:07 pm Dirk Laurie wrote:
> On Mon, May 30, 2011 at 04:33:25PM +0200, John Culleton wrote:
> > but that doesn't help, perhaps because I am using a traditional Type 1
> > font for my body font (I have a truetype script font for headings, 
hence
> > luatex instead of pdftex.)
> 
> Using the IAEF-RTFM approach to troubleshooting, one finds in Section 7.1
> 
> of the LuaTeX manual:
> |    For Type1 fonts, you have to set encodingbytes to 2 explicitly.
> 
> Have you done that?
> 
> If not, I don't see any alternative to the \'a method.
> 
> Dirk

The point is, I am using the \' method and it doesn't work. The font is 
defined thus:
\font\rm pplr8r at 10bp 

-- 
John Culleton
Wexford Press
"Death Wore Black"
Police procedural
by retired police chief Bill Redding
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://tug.org/pipermail/luatex/attachments/20110530/327c9887/attachment.html>

From john at wexfordpress.com  Mon May 30 23:04:47 2011
From: john at wexfordpress.com (John Culleton)
Date: Mon, 30 May 2011 17:04:47 -0400
Subject: [luatex] accented characters in plain luatex
In-Reply-To: <1mmyd0ssd33xg$.dlg@nililand.de>
References: <4da70b2e.7rc5YhtQMdOl6NcS%rdt@cs.queensu.ca>
 <201105301033.26065.john@wexfordpress.com> <1mmyd0ssd33xg$.dlg@nililand.de>
Message-ID: <201105301704.47234.john@wexfordpress.com>

On Monday, May 30, 2011 10:54:40 am Ulrike Fischer wrote:
> Am Mon, 30 May 2011 10:33:25 -0400 schrieb John Culleton:
> > I have a plain luatex file where I am indeed using \' and \` to get 
acute
> > and grave accents. The font in use is the TeX version of Palladio. The
> > file compiles but the accents don't appear in the pdf. In Gvim I set 
the
> > fontencoding to
> > 
> >:set fileencoding=utf-8
> >:
> > but that doesn't help, perhaps because I am using a traditional Type 1
> > font for my body font (I have a truetype script font for headings, 
hence
> > luatex instead of pdftex.)
> 
> \' and \` are pure ascii input so the file encoding doesn't matter.
> 
> What matters are the definitions of the commands, the encoding of
> your fonts, how you are loading the fonts and other informations you
> are not giving.
As previously stated I am using the Tex version of Palladio. It is loaded 
by these statements:
\font\rm pplr8r at 10bp 
\font\it pplri8r at 10bp
etc.

I also load a Truetype font in several different sizes but that should not 
affect the body text. To get to that font I use:
\input luaotfload.sty
\font\lll={CHOPS___.TTF} at 48bp
\font\lk={CHOPS___.TTF} at 36bp
\font\hl={CHOPS___.TTF} at 16bp
\font\head={CHOPS___.TTF} at 26bp
etc.

In short except fo the script font I am using statements as I would use 
them in pdftex. I am setting up accents as I would in every version of TeX 
I have ever used. But luatex is apparently different. 


-
- 
John Culleton
Wexford Press
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://tug.org/pipermail/luatex/attachments/20110530/da14288a/attachment-0001.html>

From taco at elvenkind.com  Mon May 30 23:05:13 2011
From: taco at elvenkind.com (Taco Hoekwater)
Date: Mon, 30 May 2011 23:05:13 +0200
Subject: [luatex] accented characters in plain luatex
In-Reply-To: <201105301704.47234.john@wexfordpress.com>
References: <4da70b2e.7rc5YhtQMdOl6NcS%rdt@cs.queensu.ca>
 <201105301033.26065.john@wexfordpress.com> <1mmyd0ssd33xg$.dlg@nililand.de>
 <201105301704.47234.john@wexfordpress.com>
Message-ID: <5FE40FB1-51F0-4560-B74A-BE07A3D3E9FE@elvenkind.com>





On 30 mei 2011, at 23:04, John Culleton <john at wexfordpress.com> wrote:

> On Monday, May 30, 2011 10:54:40 am Ulrike Fischer wrote:
> > Am Mon, 30 May 2011 10:33:25 -0400 schrieb John Culleton:
> > > I have a plain luatex file where I am indeed using \' and \` to get acute
> > > and grave accents. The font in use is the TeX version of Palladio. The
> > > file compiles but the accents don't appear in the pdf. In Gvim I set the
> > > fontencoding to
> > >
> > >:set fileencoding=utf-8
> > >:
> > > but that doesn't help, perhaps because I am using a traditional Type 1
> > > font for my body font (I have a truetype script font for headings, hence
> > > luatex instead of pdftex.)
> >
> > \' and \` are pure ascii input so the file encoding doesn't matter.
> >
> > What matters are the definitions of the commands, the encoding of
> > your fonts, how you are loading the fonts and other informations you
> > are not giving.
> As previously stated I am using the Tex version of Palladio. It is loaded by these statements:
> \font\rm pplr8r at 10bp
> \font\it pplri8r at 10bp

At a guess: i think you want pplr8t or pplr7t here. 8t is latex t1 encoding, 7t is plain tex ot1, 8r is adobe raw encoding. Since \' & co are macros, they will expect a tex-based encoding, not an Adobe one.

Best wishes,

Taco
> 


From john at wexfordpress.com  Tue May 31 14:50:11 2011
From: john at wexfordpress.com (John Culleton)
Date: Tue, 31 May 2011 08:50:11 -0400
Subject: [luatex] accented characters in plain luatex
In-Reply-To: <5FE40FB1-51F0-4560-B74A-BE07A3D3E9FE@elvenkind.com>
References: <4da70b2e.7rc5YhtQMdOl6NcS%rdt@cs.queensu.ca>
 <201105301704.47234.john@wexfordpress.com>
 <5FE40FB1-51F0-4560-B74A-BE07A3D3E9FE@elvenkind.com>
Message-ID: <201105310850.11567.john@wexfordpress.com>

On Monday, May 30, 2011 05:05:13 pm Taco Hoekwater wrote:
> On 30 mei 2011, at 23:04, John Culleton <john at wexfordpress.com> wrote:
> > On Monday, May 30, 2011 10:54:40 am Ulrike Fischer wrote:
> > > Am Mon, 30 May 2011 10:33:25 -0400 schrieb John Culleton:
> > > > I have a plain luatex file where I am indeed using \' and \` to get
> > > > acute and grave accents. The font in use is the TeX version of
> > > > Palladio. The file compiles but the accents don't appear in the 
pdf.
> > > > In Gvim I set the fontencoding to
> > > > 
> > > >:set fileencoding=utf-8
> > > >:
> > > > but that doesn't help, perhaps because I am using a traditional 
Type
> > > > 1 font for my body font (I have a truetype script font for 
headings,
> > > > hence luatex instead of pdftex.)
> > > 
> > > \' and \` are pure ascii input so the file encoding doesn't matter.
> > > 
> > > What matters are the definitions of the commands, the encoding of
> > > your fonts, how you are loading the fonts and other informations you
> > > are not giving.
> > 
> > As previously stated I am using the Tex version of Palladio. It is 
loaded
> > by these statements: \font\rm pplr8r at 10bp
> > \font\it pplri8r at 10bp
> 
> At a guess: i think you want pplr8t or pplr7t here. 8t is latex t1
> encoding, 7t is plain tex ot1, 8r is adobe raw encoding. Since \' & co 
are
> macros, they will expect a tex-based encoding, not an Adobe one.
> 
> Best wishes,
> 
> Taco
In about 20 seconds my problem was solved using 7t instead of 8r. The nice 
thing about TeX is that you never stop learning about it. The nicer thing 
is that there are always wiser heads to educate you. 

Thanks Taco. In any plain version, pdftex or luatex, I will be using 7t 
from now on in, and 8t for LaTeX variants. 
-- 
John Culleton
Wexford Press
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://tug.org/pipermail/luatex/attachments/20110531/531d6158/attachment.html>

From luatex at nililand.de  Tue May 31 15:14:13 2011
From: luatex at nililand.de (Ulrike Fischer)
Date: Tue, 31 May 2011 15:14:13 +0200
Subject: [luatex] accented characters in plain luatex
References: <4da70b2e.7rc5YhtQMdOl6NcS%rdt@cs.queensu.ca>
 <201105301704.47234.john@wexfordpress.com>
 <5FE40FB1-51F0-4560-B74A-BE07A3D3E9FE@elvenkind.com>
 <201105310850.11567.john@wexfordpress.com>
Message-ID: <f86vi3ftppll$.dlg@nililand.de>

Am Tue, 31 May 2011 08:50:11 -0400 schrieb John Culleton:

> Thanks Taco. In any plain version, pdftex or luatex, I will be using 7t 
> from now on in, and 8t for LaTeX variants.

In 7t the accented chars are build by putting an accent over a char.
So you won't be able to copy and paste the characters in the pdf,
instead you will get something like this "`a ?a". 

I would prefer the 8t-variant. Quite a lot accented chars can be
writen directly, and for others you can try the acmacros.sty from
the ec-plain package:

\input acmacros.sty

\font\test= pplr8t

\test ?? ?? \`a \'a

\bye 



-- 
Ulrike Fischer 


From john at wexfordpress.com  Tue May 31 15:58:13 2011
From: john at wexfordpress.com (John Culleton)
Date: Tue, 31 May 2011 09:58:13 -0400
Subject: [luatex] accented characters in plain luatex
In-Reply-To: <f86vi3ftppll$.dlg@nililand.de>
References: <4da70b2e.7rc5YhtQMdOl6NcS%rdt@cs.queensu.ca>
 <201105310850.11567.john@wexfordpress.com> <f86vi3ftppll$.dlg@nililand.de>
Message-ID: <201105310958.14227.john@wexfordpress.com>

On Tuesday, May 31, 2011 09:14:13 am Ulrike Fischer wrote:
> Am Tue, 31 May 2011 08:50:11 -0400 schrieb John Culleton:
> > Thanks Taco. In any plain version, pdftex or luatex, I will be using 7t
> > from now on in, and 8t for LaTeX variants.
> 
> In 7t the accented chars are build by putting an accent over a char.
> So you won't be able to copy and paste the characters in the pdf,
> instead you will get something like this "`a ?a".
> 
> I would prefer the 8t-variant. Quite a lot accented chars can be
> writen directly, and for others you can try the acmacros.sty from
> the ec-plain package:
> 
> \input acmacros.sty
> 
> \font\test= pplr8t
> 
> \test ?? ?? \`a \'a
> 
> \bye

To each his own. I don't edit pdfs directly. And I find that modifying my 
keyboard and typing accented characters is more trouble than typing e.g., 
\'u now and then in TeX. At one time when I was fooling with Irish I had my 
keyboard set up to type acute accents over certain vowels but I am some 
years past that activity.


Those involved with non-English languages on a regular basis will of course 
have other needs. For my current use the traditional TeX notation is 
perfectly adequate. In my current project there is only one accented word 
and I was able to add accents through a Gvim mass change to that word:
:%s/Mukipha/M\\'uki\\`pha/

 The accents are centered more precisely using luatex than they are in the 
author's original doc file---which will surprise no one here I suspect. And 
the accented letter p is sufficiently odd that it might be difficult to 
type directly even from a modified keyboard. 

Thanks to all who commented. 
-- 
John Culleton
Wexford Press
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://tug.org/pipermail/luatex/attachments/20110531/22c91980/attachment.html>

From luatex at nililand.de  Tue May 31 16:04:28 2011
From: luatex at nililand.de (Ulrike Fischer)
Date: Tue, 31 May 2011 16:04:28 +0200
Subject: [luatex] accented characters in plain luatex
References: <4da70b2e.7rc5YhtQMdOl6NcS%rdt@cs.queensu.ca>
 <201105310850.11567.john@wexfordpress.com> <f86vi3ftppll$.dlg@nililand.de>
 <201105310958.14227.john@wexfordpress.com>
Message-ID: <ezwnrme1411k$.dlg@nililand.de>

Am Tue, 31 May 2011 09:58:13 -0400 schrieb John Culleton:

>> In 7t the accented chars are build by putting an accent over a char.
>> So you won't be able to copy and paste the characters in the pdf,
>> instead you will get something like this "`a ?a".
>> 
>> I would prefer the 8t-variant. Quite a lot accented chars can be
>> writen directly, and for others you can try the acmacros.sty from
>> the ec-plain package:
>> 
>> \input acmacros.sty
>> 
>> \font\test= pplr8t
>> 
>> \test ?? ?? \`a \'a
>> 
>> \bye
> 
> To each his own. I don't edit pdfs directly.

I didn't wrote about editing a pdf but copy & paste from the pdf. Do
you never mark text in your pdf viewer and copy/paste it e.g. to
your editor? Do you never search for a word in your pdfs? Write caf?
in your document with the pplr7t and then try to copy or find it in
the pdf. Then load the acmacros.sty and change to pplr8t and then
try again.


-- 
Ulrike Fischer 


From luigi.scarso at gmail.com  Tue May 31 16:14:38 2011
From: luigi.scarso at gmail.com (luigi scarso)
Date: Tue, 31 May 2011 16:14:38 +0200
Subject: [luatex] accented characters in plain luatex
In-Reply-To: <201105310958.14227.john@wexfordpress.com>
References: <4da70b2e.7rc5YhtQMdOl6NcS%rdt@cs.queensu.ca>
 <201105310850.11567.john@wexfordpress.com>
 <f86vi3ftppll$.dlg@nililand.de>
 <201105310958.14227.john@wexfordpress.com>
Message-ID: <BANLkTimDX2E3Rwhgd++ea6QFO1L3ubPRGQ@mail.gmail.com>

On Tue, May 31, 2011 at 3:58 PM, John Culleton <john at wexfordpress.com> wrote:
> To each his own. I don't edit pdfs directly. And I find that modifying my
> keyboard and typing accented characters is more trouble than typing e.g.,
> \'u now and then in TeX. At one time when I was fooling with Irish I had my
> keyboard set up to type acute accents over certain vowels but I am some
> years past that activity.
>
> Those involved with non-English languages on a regular basis will of course
> have other needs. For my current use the traditional TeX notation is
> perfectly adequate. In my current project there is only one accented word
> and I was able to add accents through a Gvim mass change to that word:
>
> :%s/Mukipha/M\\'uki\\`pha/
>
> The accents are centered more precisely using luatex than they are in the
> author's original doc file---which will surprise no one here I suspect. And
> the accented letter p is sufficiently odd that it might be difficult to type
> directly even from a modified keyboard.
If I remember correctly there is an Emacs TeX mode that permits to
insert an accented character,
and it uses a sort of TeX combination of \ and ' .

-- 
luigi

From Robin.Fairbairns at cl.cam.ac.uk  Tue May 31 16:28:12 2011
From: Robin.Fairbairns at cl.cam.ac.uk (Robin Fairbairns)
Date: Tue, 31 May 2011 15:28:12 +0100
Subject: [luatex] accented characters in plain luatex
In-Reply-To: Your message of Tue, 31 May 2011 16:14:38 +0200.
 <BANLkTimDX2E3Rwhgd++ea6QFO1L3ubPRGQ@mail.gmail.com>
Message-ID: <9542.1306852092@cl.cam.ac.uk>

luigi scarso <luigi.scarso at gmail.com> wrote:

> On Tue, May 31, 2011 at 3:58 PM, John Culleton <john at wexfordpress.com> wrote:
> > Those involved with non-English languages on a regular basis will of course
> > have other needs. For my current use the traditional TeX notation is
> > perfectly adequate. In my current project there is only one accented word
> > and I was able to add accents through a Gvim mass change to that word:
> >
> > :%s/Mukipha/M\\'uki\\`pha/
> >
> > [...]
>
> If I remember correctly there is an Emacs TeX mode that permits to
> insert an accented character,
> and it uses a sort of TeX combination of \ and ' .

i once used such, and it only produced iso latin 1 output; \'p isn't in
that character set afaik.  (there's probably one that produces utf-8,
now, i've not looked, but it's not relevant even though unicode
presumably _does_ have \'p.)

not relevant, because john's a committed vim user and is as unlikely to
switch to emacs as i am to switch to vim.

personally, i think john's making life difficult for himself, but that's
up to him.  he seems not to care about copying text from his final
output; this would be reasonable if his ultimate output is print; but if
not, he's at least been warned of the issue.

robin

(so tired i can hardly type my own name...)

From luigi.scarso at gmail.com  Tue May 31 16:43:24 2011
From: luigi.scarso at gmail.com (luigi scarso)
Date: Tue, 31 May 2011 16:43:24 +0200
Subject: [luatex] accented characters in plain luatex
In-Reply-To: <9542.1306852092@cl.cam.ac.uk>
References: <BANLkTimDX2E3Rwhgd++ea6QFO1L3ubPRGQ@mail.gmail.com>
 <9542.1306852092@cl.cam.ac.uk>
Message-ID: <BANLkTi=ZieCJ4qYa2LbrXA2b6JhpHHBTGw@mail.gmail.com>

On Tue, May 31, 2011 at 4:28 PM, Robin Fairbairns
<Robin.Fairbairns at cl.cam.ac.uk> wrote:
>
> not relevant, because john's a committed vim user and is as unlikely to
> switch to emacs as i am to switch to vim.
Uh, never say never...
Vim is a good editor in some situations:
I've estimated that
I will able to complete my transition from emacs to vim in the next
five (or maybe six) years.



-- 
luigi

From dpl at sun.ac.za  Tue May 31 17:51:55 2011
From: dpl at sun.ac.za (Dirk Laurie)
Date: Tue, 31 May 2011 17:51:55 +0200
Subject: [luatex] accented characters in plain luatex
In-Reply-To: <201105310958.14227.john@wexfordpress.com>
References: <4da70b2e.7rc5YhtQMdOl6NcS%rdt@cs.queensu.ca>
 <201105310850.11567.john@wexfordpress.com>
 <f86vi3ftppll$.dlg@nililand.de>
 <201105310958.14227.john@wexfordpress.com>
Message-ID: <20110531155155.GB30090@rondloper>

On Tue, May 31, 2011 at 03:58:13PM +0200, John Culleton wrote:
> ? I find that modifying my keyboard and typing accented characters is more 
> trouble than typing e.g., \'u now and then in TeX. 
> ? And the accented letter p is sufficiently odd that it might be difficult to 
> type directly even from a modified keyboard.
Wouldn't know about other systems, but X11 makes it fairly easy to 
define a user-specific Compose key, the abilities of which are defined 
in a locale-dependent Compose file.  

In the locale en_US.UTF-8, more than 5000 key combinations are defined, giving 
more than 1700 distinct UTF-8 characters.

For example,                              
    Compose,quote,p gives ?

Dirk

==========================================================================

-- Count the number of different characters in the Compose file 

Compose = io.open("/usr/share/X11/locale/en_US.UTF-8/Compose")
names = {}
chars = {}
for l in Compose:lines() do
    local keys,char,name,description = string.match(l,
    [[^(.*):.*"(.*)"%s*(%S+).*#(.*)]])
    if name then names[name]=keys; 
    if chars[char] and chars[char]~=name then 
        print ("Character ".."char".." has names '"..chars[char]
        .."' and also '"..name.."'")
    end
    chars[char]=name 
    end
    end
count = function(t) local n=0 for _ in pairs(t) do n=n+1 end return n end
print(count(names).." names ",count(chars).." chars")


From Robin.Fairbairns at cl.cam.ac.uk  Tue May 31 17:52:37 2011
From: Robin.Fairbairns at cl.cam.ac.uk (Robin Fairbairns)
Date: Tue, 31 May 2011 16:52:37 +0100
Subject: [luatex] accented characters in plain luatex
In-Reply-To: Your message of Tue, 31 May 2011 16:43:24 +0200.
 <BANLkTi=ZieCJ4qYa2LbrXA2b6JhpHHBTGw@mail.gmail.com>
Message-ID: <10529.1306857157@cl.cam.ac.uk>

luigi scarso <luigi.scarso at gmail.com> wrote:

> On Tue, May 31, 2011 at 4:28 PM, Robin Fairbairns
> <Robin.Fairbairns at cl.cam.ac.uk> wrote:
> >
> > not relevant, because john's a committed vim user and is as unlikely to
> > switch to emacs as i am to switch to vim.
>
> Uh, never say never...
> Vim is a good editor in some situations:
> I've estimated that
> I will able to complete my transition from emacs to vim in the next
> five (or maybe six) years.

by which time i'll be an experienced "retired person"...

i don't know what i'm going to do then, but i doubt it will involve
changing editor-worship-object ;-)

robin

From john at wexfordpress.com  Tue May 31 18:29:25 2011
From: john at wexfordpress.com (John Culleton)
Date: Tue, 31 May 2011 12:29:25 -0400
Subject: [luatex] accented characters in plain luatex
In-Reply-To: <9542.1306852092@cl.cam.ac.uk>
References: <9542.1306852092@cl.cam.ac.uk>
Message-ID: <201105311229.25119.john@wexfordpress.com>

On Tuesday, May 31, 2011 10:28:12 am Robin Fairbairns wrote:
> luigi scarso <luigi.scarso at gmail.com> wrote:
> > On Tue, May 31, 2011 at 3:58 PM, John Culleton <john at wexfordpress.com> 
wrote:
> > > Those involved with non-English languages on a regular basis will of
> > > course have other needs. For my current use the traditional TeX
> > > notation is perfectly adequate. In my current project there is only
> > > one accented word
> > > 
> > > and I was able to add accents through a Gvim mass change to that 
word:
> > > :%s/Mukipha/M\\'uki\\`pha/
> > > 
> > > [...]
> > 
> > If I remember correctly there is an Emacs TeX mode that permits to
> > insert an accented character,
> > and it uses a sort of TeX combination of \ and ' .
> 
> i once used such, and it only produced iso latin 1 output; \'p isn't in
> that character set afaik.  (there's probably one that produces utf-8,
> now, i've not looked, but it's not relevant even though unicode
> presumably _does_ have \'p.)
> 
> not relevant, because john's a committed vim user and is as unlikely to
> switch to emacs as i am to switch to vim.
> 
> personally, i think john's making life difficult for himself, but that's
> up to him.  he seems not to care about copying text from his final
> output; this would be reasonable if his ultimate output is print; but if
> not, he's at least been warned of the issue.
> 
> robin
> 
> (so tired i can hardly type my own name...)

Bed rest away from any electronic devices is prescribed.

Your points carefully noted. This discussion continues to be instructive.

Temperature here 89 F and headed to the 90's this afternoon. Hopefully it 
is cooler elsewhere. I am in the late 70's headed to my 80's so I stay 
inside near the air conditioner.

Thus far almost all my work has been in print or now and then in html. I 
have one pdf book for sale on Booklocker.com, singing the praises of 
Scribus for book cover design. I have not yet been dragged kicking and 
screaming into the world of Kindle and Epub but that may come next. There 
is money to be made there. But it will be difficult to dumb down TeX enough 
to produce such outputs.
-- 
John Culleton
Wexford Press
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://tug.org/pipermail/luatex/attachments/20110531/b3aa4c57/attachment-0001.html>

From reinhard.kotucha at web.de  Tue May 31 18:52:40 2011
From: reinhard.kotucha at web.de (Reinhard Kotucha)
Date: Tue, 31 May 2011 18:52:40 +0200
Subject: [luatex] accented characters in plain luatex
In-Reply-To: <9542.1306852092@cl.cam.ac.uk>
References: <BANLkTimDX2E3Rwhgd++ea6QFO1L3ubPRGQ@mail.gmail.com>
 <9542.1306852092@cl.cam.ac.uk>
Message-ID: <19941.7384.523367.686716@zaphod.ms25.net>

On 2011-05-31 at 15:28:12 +0100, Robin Fairbairns wrote:

 > luigi scarso <luigi.scarso at gmail.com> wrote:
 > 
 > > On Tue, May 31, 2011 at 3:58 PM, John Culleton <john at wexfordpress.com> wrote:
 > > > Those involved with non-English languages on a regular basis
 > > > will of course have other needs. For my current use the
 > > > traditional TeX notation is perfectly adequate. In my current
 > > > project there is only one accented word and I was able to add
 > > > accents through a Gvim mass change to that word:
 > > >
 > > > :%s/Mukipha/M\\'uki\\`pha/
 > > >
 > > > [...]
 > >
 > > If I remember correctly there is an Emacs TeX mode that permits to
 > > insert an accented character,
 > > and it uses a sort of TeX combination of \ and ' .
 > 
 > i once used such, and it only produced iso latin 1 output; \'p isn't in
 > that character set afaik.  (there's probably one that produces utf-8,
 > now, i've not looked, but it's not relevant even though unicode
 > presumably _does_ have \'p.)

Recent versions of Emacs are using UTF-8 by default.  Older versions
used Latin-1 by default but if the buffer contained non-Latin-1
characters, you were asked you to select an other encoding for saving
the file.

What Luigi means is that Emacs supports different "input methods".
They are independent of Emacs modes.  There is one input method called
"TeX", which allows you to type characters not available on your
keyboard in TeX notation.
 
 > not relevant, because john's a committed vim user and is as
 > unlikely to switch to emacs as i am to switch to vim.

But John is using Linux.  I'm using Terminal instead of xterm and when
I click the right mouse button, a menu pops up which allows me to
select an input method.  This also works within vim.

 > personally, i think john's making life difficult for himself, but
 > that's up to him.  he seems not to care about copying text from his
 > final output; this would be reasonable if his ultimate output is
 > print; but if not, he's at least been warned of the issue.

If the document source is in UTF-8, I suppose that with LuaTeX and
OpenType fonts the whole encoding mess can be avoided, which makes
things easier, especially when using plain TeX.

Regards,
  Reinhard

-- 
----------------------------------------------------------------------------
Reinhard Kotucha                                      Phone: +49-511-3373112
Marschnerstr. 25
D-30167 Hannover                              mailto:reinhard.kotucha at web.de
----------------------------------------------------------------------------
Microsoft isn't the answer. Microsoft is the question, and the answer is NO.
----------------------------------------------------------------------------

From luigi.scarso at gmail.com  Tue May 31 21:35:32 2011
From: luigi.scarso at gmail.com (luigi scarso)
Date: Tue, 31 May 2011 21:35:32 +0200
Subject: [luatex] accented characters in plain luatex
In-Reply-To: <201105311229.25119.john@wexfordpress.com>
References: <9542.1306852092@cl.cam.ac.uk>
 <201105311229.25119.john@wexfordpress.com>
Message-ID: <BANLkTinWqSfm-tvSFyi8yDYmTiSBYpZjFw@mail.gmail.com>

On Tue, May 31, 2011 at 6:29 PM, John Culleton <john at wexfordpress.com> wrote:
> I have not yet been dragged kicking and screaming
> into the world of Kindle and Epub but that may come next. There is money to
> be made there. But it will be difficult to dumb down TeX enough to produce
> such outputs.
well at least ConTeXt MkIv has an experimental mode for epub

http://wiki.contextgarden.net/epub
and also
http://randomdeterminism.wordpress.com/2011/05/29/html-export/


-- 
luigi

