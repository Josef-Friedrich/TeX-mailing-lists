From graham.douglas at readytext.co.uk  Tue Mar  1 08:47:15 2011
From: graham.douglas at readytext.co.uk (Graham Douglas)
Date: Tue, 01 Mar 2011 07:47:15 +0000
Subject: [luatex] installing luatex betas
In-Reply-To: <AANLkTimq8YogJ_VMS_s23=iKSaZWVjJCn54_=kjhmFyD@mail.gmail.com>
References: <AANLkTimq8YogJ_VMS_s23=iKSaZWVjJCn54_=kjhmFyD@mail.gmail.com>
Message-ID: <4D6CA483.5030507@readytext.co.uk>

Hi All

Just for the record on the list, I solved  Jose's problem in a private 
e-mail
--- I don't use Linux but guessed this was the issue:  use \\dump not 
\dump on command line
or put \dump in the file

Cheers

Graham





From khaledhosny at eglug.org  Wed Mar  2 02:01:53 2011
From: khaledhosny at eglug.org (Khaled Hosny)
Date: Wed, 2 Mar 2011 03:01:53 +0200
Subject: [luatex] Optical Sizes of Adobe Utopia Std Bold
In-Reply-To: <AANLkTinwNgvgWpBXze+VO3jMEMXc5pGvwHXQHav5p69K@mail.gmail.com>
References: <AANLkTinwNgvgWpBXze+VO3jMEMXc5pGvwHXQHav5p69K@mail.gmail.com>
Message-ID: <20110302010153.GA16126@khaled-laptop>

On Thu, Feb 10, 2011 at 06:23:13AM -0500, Andy Lin wrote:
> Hi,
> I just started using LuaLaTeX for the first time this week (texlive
> 2010) and I've run into a problem. Below is a minimal example:
> 
> \documentclass{article}
> \usepackage{fontspec}
> \usepackage{graphics}
> \setmainfont{Utopia Std}
> \begin{document}
> \noindent\resizebox{!}{24pt}{\fontsize{24}{28}\selectfont k \textbf{k}
> \textit{k} \textbf{\textit{k}}}\\
> \resizebox{!}{24pt}{\fontsize{16}{28}\selectfont k \textbf{k}
> \textit{k} \textbf{\textit{k}}}\\
> \resizebox{!}{24pt}{\fontsize{10}{28}\selectfont k \textbf{k}
> \textit{k} \textbf{\textit{k}}}\\
> \resizebox{!}{24pt}{\fontsize{8}{28}\selectfont k \textbf{k}
> \textit{k} \textbf{\textit{k}}}
> \end{document}
> 
> If this is processed with lualatex, the bold 24-point k is typeset
> with Utopia Std Bold Caption when it is supposed to be typeset with
> Utopia Std Bold Display. Oddly enough, all the other characters have
> the correct optical size font. Using xelatex, this problem does not
> occur. (I've attached the output for both and the log for the luatex
> run.)
> 
> I've tried clearing the lua font cache in texmf-var and running
> mkluatexfontdb with the -f switch.
> 
> When I look at the log, I find this:
> 
> luaotfload | load font: auto-selecting default features for script: dflt (was l
> atn)
> luaotfload | load font: font family='utopiastd', subfamily='regular' found: uto
> piastd-disp.otf(load: D:/texlive/texmf-var/luatex-cache/generic/fonts/otf/temp-
> utopiastd-disp.lua)
> luaotfload | load font: auto-selecting default features for script: dflt (was l
> atn)
> luaotfload | load font: font family='utopiastd', subfamily='bold' found: utopia
> std-boldcapt.otf(load: D:/texlive/texmf-var/luatex-cache/generic/fonts/otf/temp
> -utopiastd-boldcapt.lua)
> luaotfload | load font: auto-selecting default features for script: dflt (was l
> atn)
> luaotfload | load font: font family='utopiastd', subfamily='italic' found: utop
> iastd-dispit.otf(load: D:/texlive/texmf-var/luatex-cache/generic/fonts/otf/temp
> -utopiastd-dispit.lua)
> luaotfload | load font: auto-selecting default features for script: dflt (was l
> atn)
> luaotfload | load font: font family='utopiastd', subfamily='bolditalic' found:
> utopiastd-bolddispit.otf(load: D:/texlive/texmf-var/luatex-cache/generic/fonts/
> otf/temp-utopiastd-bolddispit.lua)
> 
> When luaotfload loads the fonts for the first line, it selects the
> Display size for the other three characters, but selects the Caption
> size for the bold character. Is this a fontspec problem? Or is there
> something wrong with my luatex setup?

Hard to tell without having the fonts, but can you first check with
plain, e.g.:

\input luaotfload.sty
\font\testa="Utopia Std/B/S=24" at 10pt
\font\testb="Utopia Std/B/S=16" at 10pt
\font\testc="Utopia Std/B/S=10" at 10pt
\font\testd="Utopia Std/B/S=8"  at 10pt
\testa k
\testb k
\testc k
\testd k
\bye

And see if you get the same issue (testing with xetex can help
excluding font bugs).

Regards,
 Khaled

-- 
 Khaled Hosny
 Egyptian
 Arab

From khaledhosny at eglug.org  Wed Mar  2 02:10:25 2011
From: khaledhosny at eglug.org (Khaled Hosny)
Date: Wed, 2 Mar 2011 03:10:25 +0200
Subject: [luatex] Inconsistent results.
In-Reply-To: <201101281715.13699.john@wexfordpress.com>
References: <201101281715.13699.john@wexfordpress.com>
Message-ID: <20110302011025.GB16126@khaled-laptop>

On Fri, Jan 28, 2011 at 05:15:13PM -0500, John Culleton wrote:
> First I ran mkluatexfontdb with no error messages.
> Then I ran this test program using luatex:
> -------------------------------------------------------------------
> \input luaotfload.sty % works for plain despite the .sty

The file tries to be smart and detects being running under plain, the
.sty is to please latex and it is better than maintaining two separate
files.
Well, I don't actually believe any of what I said above, and I'd rather
have a luaotfload.tex that gets included by luaotfload.sty and simplify
the later, but it would break existing files for no good reason so I'm
not doing it.

> \font\pagella={name:TeX Gyre Pagella:script=latn;+onum} at 10pt
> \font\termes={file:texgyretermes-regular.otf:script=latn} at 10pt
> \font\foo={file:SyrCOMJerusalem.otf:script=latn} at 20bp
> \font\barr={file:georgia.ttf} at 30bp
> \pagella some text 12345\par
> \termes other text\par
> \foo my test font.
> \barr Georgia 978!
> \bye
> -------------------------------------------------------------
> When I ran luatex on this file the first two fonts worked but the last
> two did not.

Can we be more specific about how they didn't work, any error messages?
may be it is the bp unit? (it is the first time I see it to be honest).

> Let's take georgia.ttf in more detail. The database file
> /home/safe/.texlive2010/texmf-var/luatex-cache/generic/names/otfl-
> names.lua
> shows:
> ---------------------------------------------------------------------------
> {
> ? ?["familyname"]="Georgia",
> ? ?["filename"]={ "/usr/share/fonts/TTF/georgia.ttf", false },
> ? ?["fontname"]="Georgia",
> ? ?["fullname"]="Georgia",
> ? ?["names"]={
> ? ? ["family"]="Georgia",
> ? ? ["fullname"]="Georgia",
> ? ? ["psname"]="Georgia",
> ? ? ["subfamily"]="Regular",
> ? ?},
> ? ?["size"]={},
> ? ?["slant"]=0,
> ? ?["weight"]=400,
> ? ?["width"]=5,
> ? },
> ------------------------------------------------------

I see nothing suspicious.

Regards,
 Khaled

-- 
 Khaled Hosny
 Egyptian
 Arab

From mailing_list at arcor.de  Sat Mar  5 18:22:16 2011
From: mailing_list at arcor.de (Stephan Hennig)
Date: Sat, 05 Mar 2011 18:22:16 +0100
Subject: [luatex] [lltx] pattern loading in luatex
In-Reply-To: <4D665A6A.1020900@elzevir.fr>
References: <AANLkTim_KEWAc4OGG2x-ke=PmbgDXY4PhPo+Cyx8AAWd@mail.gmail.com>	<20110116.095504.434466674.wl@gnu.org>	<AANLkTi=bbYdMe6mbwjVk8H0NW-KOfAPkxB1sKCwn63Y_@mail.gmail.com>	<20110117.041625.235476367.wl@gnu.org>	<AANLkTi=XQwLhgysX8AuHVrNe2H_tdOunU6tiFkgBxE2=@mail.gmail.com>	<4D61573A.9010802@arcor.de>	<AANLkTi=0CpW8T567rhAXik5PrJ81PL15y6B40mZ+WvXz@mail.gmail.com>	<4D6172B9.50701@arcor.de>	<AANLkTimh7WaErU5XMoqv6X5hRATeDXTQ5G2Z35zuK6C0@mail.gmail.com>	<4D617FB0.8050001@arcor.de>	<AANLkTikMkAYC+vbwx7MF2TpdxX9_=mnFNiKXZT9=6JKu@mail.gmail.com>	<4D624872.3030907@arcor.de>
 <AANLkTi=xoZ99K5g+NzN=k3APb1M7o3n_gjvO6wm4W0fO@mail.gmail.com>
 <4D662605.7030009@arcor.de> <4D665A6A.1020900@elzevir.fr>
Message-ID: <4D727148.8050908@arcor.de>

[CC'ing luatex list]

Thanks to you and Ulrike and sorry for the late reply!

schrieb Manuel P?gouri?-Gonnard:
> Le 24/02/2011 10:33, Stephan Hennig a ?crit :
>> 
>> With LuaTeX being able to load patterns at run-time, there are now
>> three different pattern loading strategies possible (that I can
>> think of):
>> 
>>   1.  Load all patterns ...
>> 
> I'm afraid "load" is too imprecise to precisely describe what happens with
> LuaTeX. There are now two possibly distinct operations:
> a. read the patterns (as a string of characters)
> b. process them into a form usable by *TeX (a trie)

OK.


> With LuaTeX you have two options:
> 
> 1. Read all patterns at initex time and store them as a string of characters in
> the format; process them all at startup when the format is loaded.
> 2. Read and process requested patterns on demand.
> 
> Option 1 was used up to TeX Live 2009 and resulted in a long startup time.

AFAIK, LuaTeX uses a more complex trie with pre-calculated fall-back
states.  Are there any numbers about what makes loading and processing
(many) patterns in LuaTeX slow?  Is it the first stage of building the
traditional pattern trie from text files or is it the calculation of
fall-back states afterwards?


> Option 2 is implemented since TL 2010.

Great!  Somehow I happened to followed that back then, but missed what
it was all about. :/

Best regards,
Stephan Hennig

From mpg at elzevir.fr  Sat Mar  5 19:24:00 2011
From: mpg at elzevir.fr (=?ISO-8859-1?Q?Manuel_P=E9gouri=E9-Gonnard?=)
Date: Sat, 05 Mar 2011 19:24:00 +0100
Subject: [luatex] [lltx] pattern loading in luatex
In-Reply-To: <4D727148.8050908@arcor.de>
References: <AANLkTim_KEWAc4OGG2x-ke=PmbgDXY4PhPo+Cyx8AAWd@mail.gmail.com>	<20110116.095504.434466674.wl@gnu.org>	<AANLkTi=bbYdMe6mbwjVk8H0NW-KOfAPkxB1sKCwn63Y_@mail.gmail.com>	<20110117.041625.235476367.wl@gnu.org>	<AANLkTi=XQwLhgysX8AuHVrNe2H_tdOunU6tiFkgBxE2=@mail.gmail.com>	<4D61573A.9010802@arcor.de>	<AANLkTi=0CpW8T567rhAXik5PrJ81PL15y6B40mZ+WvXz@mail.gmail.com>	<4D6172B9.50701@arcor.de>	<AANLkTimh7WaErU5XMoqv6X5hRATeDXTQ5G2Z35zuK6C0@mail.gmail.com>	<4D617FB0.8050001@arcor.de>	<AANLkTikMkAYC+vbwx7MF2TpdxX9_=mnFNiKXZT9=6JKu@mail.gmail.com>	<4D624872.3030907@arcor.de>
 <AANLkTi=xoZ99K5g+NzN=k3APb1M7o3n_gjvO6wm4W0fO@mail.gmail.com>
 <4D662605.7030009@arcor.de> <4D665A6A.1020900@elzevir.fr>
 <4D727148.8050908@arcor.de>
Message-ID: <4D727FC0.8030207@elzevir.fr>

Le 05/03/2011 18:22, Stephan Hennig a ?crit :
> AFAIK, LuaTeX uses a more complex trie with pre-calculated fall-back
> states.

I wasn't aware of that, good to know.

> Are there any numbers about what makes loading and processing
> (many) patterns in LuaTeX slow?  Is it the first stage of building the
> traditional pattern trie from text files or is it the calculation of
> fall-back states afterwards?
> 
Well, I just ran some tests, all with the Plain + etex.src format. First, I had
pdfTeX generate this format with USenglish only and with all languages
available. Next, I tried loading a format with LuaTeX from TeX Live 2009, either
with only USenglish or with all languages. Finally, I had LuaTeX 0.65 with
formats from TL 2010 process a file loading only USenglish or all languages.
Here are the results:

pdftex (TL 2010) fmt gen, USenglish only:       0.3s
pdftex (TL 2010) fmt gen, all lang:             3.3s

luatex (TL 2009) fmt load, USen only:           0.4s
luatex (TL 2009) fmt load, all lang:            6.1s

luatex 0.65 (TL 2010) \uselanguage{USenglish}:  0.5s
luatex 0.65 (TL 2010) \uselanguage{<ALL>}:      6.8s

So, it looks like processing all languages at format generation time takes some
3 seconds to pdfTeX. Processing them at format loading time takes some 5.7
seconds to LuaTeX, while reading from external files and processing them takes
something like 6.3 seconds.

So, unless I missed something, it looks like pattern processing with LuaTeX
takes almost twice the times is takes with pdfTeX. Not sure if it is related to
the generation of the fall-back states you mention or some other change in the
internal code.

Anyway, you rarely need all 85 languages in one single document, so probably
it's not a big deal in normal situations.

>> Option 2 is implemented since TL 2010.
> 
> Great!  Somehow I happened to followed that back then, but missed what
> it was all about. :/
> 
IIRC, the discussions weren't exactly easy to follow, and there was already
enough questions about the multiple versions of German patterns to keep you busy :-)

Manuel.

From pragma at wxs.nl  Sat Mar  5 22:34:18 2011
From: pragma at wxs.nl (Hans Hagen)
Date: Sat, 05 Mar 2011 22:34:18 +0100
Subject: [luatex] [lltx] pattern loading in luatex
In-Reply-To: <4D727FC0.8030207@elzevir.fr>
References: <AANLkTim_KEWAc4OGG2x-ke=PmbgDXY4PhPo+Cyx8AAWd@mail.gmail.com>	<20110116.095504.434466674.wl@gnu.org>	<AANLkTi=bbYdMe6mbwjVk8H0NW-KOfAPkxB1sKCwn63Y_@mail.gmail.com>	<20110117.041625.235476367.wl@gnu.org>	<AANLkTi=XQwLhgysX8AuHVrNe2H_tdOunU6tiFkgBxE2=@mail.gmail.com>	<4D61573A.9010802@arcor.de>	<AANLkTi=0CpW8T567rhAXik5PrJ81PL15y6B40mZ+WvXz@mail.gmail.com>	<4D6172B9.50701@arcor.de>	<AANLkTimh7WaErU5XMoqv6X5hRATeDXTQ5G2Z35zuK6C0@mail.gmail.com>	<4D617FB0.8050001@arcor.de>	<AANLkTikMkAYC+vbwx7MF2TpdxX9_=mnFNiKXZT9=6JKu@mail.gmail.com>	<4D624872.3030907@arcor.de>
 <AANLkTi=xoZ99K5g+NzN=k3APb1M7o3n_gjvO6wm4W0fO@mail.gmail.com>
 <4D662605.7030009@arcor.de> <4D665A6A.1020900@elzevir.fr>
 <4D727148.8050908@arcor.de> <4D727FC0.8030207@elzevir.fr>
Message-ID: <4D72AC5A.5020207@wxs.nl>

On 5-3-2011 7:24, Manuel P?gouri?-Gonnard wrote:

> So, unless I missed something, it looks like pattern processing with LuaTeX
> takes almost twice the times is takes with pdfTeX. Not sure if it is related to
> the generation of the fall-back states you mention or some other change in the
> internal code.

(1) the internal code is different
(2) the machinery is utf (large numbers internally)
(3) patterns are utf

in general the luatex machinery is slower than pdftex (upto two times, 
depending on what you do) which is mostly due to the fact that pdftex is 
8 bit

in context mkii we are using utf encoded patterns and there loading 
patterns in pdftex is definitely slower than in xetex and luatex simply 
because in pdftex one has to parse

(also, it depends on the language, for instance, russian has large slow 
loading patterns)

Hans



-----------------------------------------------------------------
                                           Hans Hagen | PRAGMA ADE
               Ridderstraat 27 | 8061 GH Hasselt | The Netherlands
     tel: 038 477 53 69 | voip: 087 875 68 74 | www.pragma-ade.com
                                              | www.pragma-pod.nl
-----------------------------------------------------------------

From luatex at nililand.de  Fri Mar 11 13:53:16 2011
From: luatex at nililand.de (Ulrike Fischer)
Date: Fri, 11 Mar 2011 13:53:16 +0100
Subject: [luatex]
 =?iso-8859-1?q?=5Blltx=5D_Patching_fonts_with_the_luaotf?=
 =?iso-8859-1?q?load_callback=09=22luaotfload=2Epatch=5Ffont=22?=
References: <1ljwcgp8ixgpm.dlg@nililand.de>
 <CE5F0784-4A6C-48F9-A2D0-E37705597F62@yahoo.de>
 <4D4E68F2.9030601@elvenkind.com>
Message-ID: <15tkookzynck5.dlg@nililand.de>

Am Sun, 06 Feb 2011 10:25:06 +0100 schrieb Taco Hoekwater:

[About virtual fonts and tounicode entries]

>> The tounicode entries still don't work as expected; hopefully Taco can enlighten us.
> 
> tounicode (and the PDF /ToUnicode feature) works on the font glyphs
> that are actually included in the pdf, that is why it does not work. In
> the virtual font, it does notwork because there is no actual glyph, and
> in the original is works 'too well' as both 'a' and 'b' use the same
> glyph.

I have now a working virtual font which reencodes a chess font. But
I'm still struck how to manipulate the tounicode values. I have now
put various combinations of XXX.characters[YY].tounicode=ZZ  in
various places and nothing works. Can you tell me what I should do? 

The code of the virtual font is below, (it uses Arial instead of the
chess font to allow easier testing). It should go in a file e.g.
testfont.lua and then can be used in a current context with 

 \font\mine=file:testfont.lua at 12pt

 \starttext
 \mine KQRBNp
 \stoptext
 \bye

I would like to get as result of a copy and paste in the pdf
"KQRBNp" oder better "KQRBNP" or even better "KDTLBb"


********** virtual font testfont.lua

 return function(specification)
    local f1, id1 = fonts.tfm.readanddefine('Arial',
specification.size)
    local reencoding = {
         --bishop
         [66] = 8226,
         --king
         [75] = 162,
         -- Knight
         [78] = 167,
         -- Queen
         [81] = 163,
         -- Rook
         [82] = 182,
         -- Pawn
         [112]= 223,
     }

    if f1 then
        f1.name = specification.name
        f1.virtualized = true
        f1.tounicode=1 --needed?
        f1.fonts = {
            { id = id1 },
        }
       local chars = fonts.identifiers[id1].characters
       -- reencode
       -- u=target, v=source
       for u, v in next, reencoding do
           local c = chars[v]
            chars[u].commands = {{ 'char', v }}
            chars[u].kerns    = nil
            chars[u].width    = c.width
            chars[u].height   = c.height
            chars[u].depth    = c.depth
            chars[u].italic   = nil
       end
       -- remove the other chars
       for u,v in next,chars do
        if not reencoding[u] then
         chars[u]=nil
        end
       end
    end
    return f1
end


-- 
Ulrike Fischer 


From Arno.Trautmann at gmx.de  Mon Mar 14 08:31:05 2011
From: Arno.Trautmann at gmx.de (Arno Trautmann)
Date: Mon, 14 Mar 2011 08:31:05 +0100
Subject: [luatex] parallel computing
Message-ID: <4D7DC439.3040300@gmx.de>

Hi all,

I think this has been discussed a few times: An a multi-core computer,
*TeX can only use one core as the typesetting process is linear. Now, I
had an idea and wanted to ask what is stupid about it (elsewise it would
have been implemented already, I guess):
While the breaking of paragraphs is linear, there is a second process
that starts only after paragraph breaking has been done, which is page
building. Now I could imagine a *TeX that lets one core do the paragraph
breaking and another one do pagebuilding. Depending on which one of
those is faster, the paragraph breaker has to be stopped at a
(specified) number of lines it is in advance of the page builder. If the
page builder is faster, everything is fine from start on.

Thankful for any comments,
cheers
Arno

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 262 bytes
Desc: OpenPGP digital signature
URL: <http://tug.org/pipermail/luatex/attachments/20110314/250da9e6/attachment.bin>

From taco at elvenkind.com  Mon Mar 14 08:43:25 2011
From: taco at elvenkind.com (Taco Hoekwater)
Date: Mon, 14 Mar 2011 08:43:25 +0100
Subject: [luatex] parallel computing
In-Reply-To: <4D7DC439.3040300@gmx.de>
References: <4D7DC439.3040300@gmx.de>
Message-ID: <4D7DC71D.6060506@elvenkind.com>

On 03/14/2011 08:31 AM, Arno Trautmann wrote:
> Hi all,
>
> I think this has been discussed a few times: An a multi-core computer,
> *TeX can only use one core as the typesetting process is linear.

In fact I think I have replied to some of these threads already.

> While the breaking of paragraphs is linear,

Actually it is not, there are up to three passes over the paragraph
during breaking (1: no hyphens, 2: hyphens, 3: emergency), and these
could be run in parallel. If 1) is good enough, the results of 2)
and 3) can be discarded, and similar for 2) and 3). But it remains
to be seen whether the extra setup does not in practise make the
process slower instead of faster.

> there is a second process
> that starts only after paragraph breaking has been done, which is page
> building. Now I could imagine a *TeX that lets one core do the paragraph
> breaking and another one do pagebuilding. Depending on which one of
> those is faster, the paragraph breaker has to be stopped at a
> (specified) number of lines it is in advance of the page builder. If the
> page builder is faster, everything is fine from start on.

That won't work. There are no lines coming put of the paragraph builder
at all until it is completely finished. What could be made to work is
to let the tokenizer engine start on reading a second paragraph already
while the first paragraph is still being broken. There are a number of
commands that would create a pause, but most paragraphs do not contain
them (querying \prevdepth or \pagetotal, for example).

But the most useful multicore operation we can do is to put the pdf
generator into a separate core so that generating pdf from a finished
page one can run in parallel with the creation of a new page two. And
that is the only multi-core optimization that has a chance of being
included before version 1.0.

Best wishes,
Taco





From taco at elvenkind.com  Mon Mar 14 09:54:31 2011
From: taco at elvenkind.com (Taco Hoekwater)
Date: Mon, 14 Mar 2011 09:54:31 +0100
Subject: [luatex] [lltx] Patching fonts with the luaotfload callback
	"luaotfload.patch_font"
In-Reply-To: <15tkookzynck5.dlg@nililand.de>
References: <1ljwcgp8ixgpm.dlg@nililand.de>
 <CE5F0784-4A6C-48F9-A2D0-E37705597F62@yahoo.de>
 <4D4E68F2.9030601@elvenkind.com> <15tkookzynck5.dlg@nililand.de>
Message-ID: <4D7DD7C7.7030404@elvenkind.com>

On 03/11/2011 01:53 PM, Ulrike Fischer wrote:
> Am Sun, 06 Feb 2011 10:25:06 +0100 schrieb Taco Hoekwater:
>
> [About virtual fonts and tounicode entries]
>
>>> The tounicode entries still don't work as expected; hopefully Taco can enlighten us.
>>
>> tounicode (and the PDF /ToUnicode feature) works on the font glyphs
>> that are actually included in the pdf, that is why it does not work. In
>> the virtual font, it does notwork because there is no actual glyph, and
>> in the original is works 'too well' as both 'a' and 'b' use the same
>> glyph.
>
> I have now a working virtual font which reencodes a chess font. But
> I'm still struck how to manipulate the tounicode values. I have now
> put various combinations of XXX.characters[YY].tounicode=ZZ  in
> various places and nothing works. Can you tell me what I should do?

It does not work because the _real_ font needs tounicode values. As I
wrote earlier: tounicode works on actual glyphs, not virtual glyphs:

        -- u=target, v=source
        local real = font.fonts[id1]
        for u, v in next, reencoding do
            local c = chars[v]
             chars[u].commands = {{ 'char', v }}
             chars[u].kerns    = nil
             chars[u].width    = c.width
             chars[u].height   = c.height
             chars[u].depth    = c.depth
             chars[u].italic   = nil
             real.characters[v].tounicode = string.format("%04x",u)
        end
        font.fonts[id1] = real;

Best wishes,
Taco

From smsojala at gmail.com  Thu Mar 17 21:25:11 2011
From: smsojala at gmail.com (Simo Ojala)
Date: Thu, 17 Mar 2011 22:25:11 +0200 (EET)
Subject: [luatex] How to color unicode combinging characters.
Message-ID: <alpine.DEB.2.00.1103172137130.2959@kosh.hut.fi>


Hi,

I am really just taking my first steps in TeX world, so forgive me my 
ignorance. However I already have this quite advanced coloring problem and 
I have read and been told that LuaTeX might be able to solve this kind of 
stuff. So thats why I try to ask this here, hopefully found the right 
place to post this kind of problem...

I am trying to create some ancient hebrew inflection charts and the 
problem is to be able to paint vowels (and other diacritics) without 
changing color of the consonants they are combined with. (The vowels are 
unicode combining characters which are positioned according to and 
combined with consonants.) I already have got some suggestions that I 
could do some thing like this:

\textcolor{red}{a}\textcolor{blue}{b} % where 'a' represents a consonant 
and 'b' a vowel

However this leads to situation where the characters are not actually 
combined, but just placed separately to the document. That it turn leads 
to positioning problems and other bad stuff.

Thanks,

Simo Ojala


PS: If I failed explaining my problem clearly enough, please checkout 
my question at TeX/Stackexchange.

http://tex.stackexchange.com/questions/13069/coloring-combining-characters-without-changing-color-of-a-base-character

From khaledhosny at eglug.org  Fri Mar 18 02:39:50 2011
From: khaledhosny at eglug.org (Khaled Hosny)
Date: Fri, 18 Mar 2011 03:39:50 +0200
Subject: [luatex] How to color unicode combinging characters.
In-Reply-To: <alpine.DEB.2.00.1103172137130.2959@kosh.hut.fi>
References: <alpine.DEB.2.00.1103172137130.2959@kosh.hut.fi>
Message-ID: <20110318013950.GA7285@khaled-laptop>

On Thu, Mar 17, 2011 at 10:25:11PM +0200, Simo Ojala wrote:
> 
> Hi,
> 
> I am really just taking my first steps in TeX world, so forgive me
> my ignorance. However I already have this quite advanced coloring
> problem and I have read and been told that LuaTeX might be able to
> solve this kind of stuff. So thats why I try to ask this here,
> hopefully found the right place to post this kind of problem...
> 
> I am trying to create some ancient hebrew inflection charts and the
> problem is to be able to paint vowels (and other diacritics) without
> changing color of the consonants they are combined with. (The vowels
> are unicode combining characters which are positioned according to
> and combined with consonants.) I already have got some suggestions
> that I could do some thing like this:
> 
> \textcolor{red}{a}\textcolor{blue}{b} % where 'a' represents a
> consonant and 'b' a vowel
> 
> However this leads to situation where the characters are not
> actually combined, but just placed separately to the document. That
> it turn leads to positioning problems and other bad stuff.

You don't provide any sample files, so one can only guess.

I think the problem is related to pdfliteral whatsits used to implement
color, so using luacolor package (check its documentation) in LaTeX or
using ConTeXt would help, either would get rid of whatsits in favour of
attributes. But again, without a test file one can only guess.

ConTeXt have even more "goodies" to automatically color certain glyphs
without manually inserted color commands, but I never used it, though.

Regards,
 Khaled

-- 
 Khaled Hosny
 Egyptian
 Arab

From khaledhosny at eglug.org  Fri Mar 18 03:21:45 2011
From: khaledhosny at eglug.org (Khaled Hosny)
Date: Fri, 18 Mar 2011 04:21:45 +0200
Subject: [luatex] How to color unicode combinging characters.
In-Reply-To: <20110318013950.GA7285@khaled-laptop>
References: <alpine.DEB.2.00.1103172137130.2959@kosh.hut.fi>
 <20110318013950.GA7285@khaled-laptop>
Message-ID: <20110318022145.GA7743@khaled-laptop>

On Fri, Mar 18, 2011 at 03:39:50AM +0200, Khaled Hosny wrote:
> On Thu, Mar 17, 2011 at 10:25:11PM +0200, Simo Ojala wrote:
> > 
> > Hi,
> > 
> > I am really just taking my first steps in TeX world, so forgive me
> > my ignorance. However I already have this quite advanced coloring
> > problem and I have read and been told that LuaTeX might be able to
> > solve this kind of stuff. So thats why I try to ask this here,
> > hopefully found the right place to post this kind of problem...
> > 
> > I am trying to create some ancient hebrew inflection charts and the
> > problem is to be able to paint vowels (and other diacritics) without
> > changing color of the consonants they are combined with. (The vowels
> > are unicode combining characters which are positioned according to
> > and combined with consonants.) I already have got some suggestions
> > that I could do some thing like this:
> > 
> > \textcolor{red}{a}\textcolor{blue}{b} % where 'a' represents a
> > consonant and 'b' a vowel
> > 
> > However this leads to situation where the characters are not
> > actually combined, but just placed separately to the document. That
> > it turn leads to positioning problems and other bad stuff.
> 
> You don't provide any sample files, so one can only guess.
> 
> I think the problem is related to pdfliteral whatsits used to implement
> color, so using luacolor package (check its documentation) in LaTeX or
> using ConTeXt would help, either would get rid of whatsits in favour of
> attributes. But again, without a test file one can only guess.
> 
> ConTeXt have even more "goodies" to automatically color certain glyphs
> without manually inserted color commands, but I never used it, though.

Looks like luacolor is not compatible with luaotfload so opentype
features (needed for mark positioning) will not work.

However, ConTeXt test was successful (as far as my non-Hebrew eye can
tell).

Regards,
 Khaled

-- 
 Khaled Hosny
 Egyptian
 Arab
-------------- next part --------------
A non-text attachment was scrubbed...
Name: test.tex
Type: text/x-tex
Size: 310 bytes
Desc: not available
URL: <http://tug.org/pipermail/luatex/attachments/20110318/10bb13da/attachment-0002.bin>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: test.ltx
Type: text/x-tex
Size: 455 bytes
Desc: not available
URL: <http://tug.org/pipermail/luatex/attachments/20110318/10bb13da/attachment-0003.bin>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: test.pdf
Type: application/pdf
Size: 16383 bytes
Desc: not available
URL: <http://tug.org/pipermail/luatex/attachments/20110318/10bb13da/attachment-0001.pdf>

From st_philipp at yahoo.de  Fri Mar 18 03:23:01 2011
From: st_philipp at yahoo.de (Philipp Stephani)
Date: Fri, 18 Mar 2011 03:23:01 +0100
Subject: [luatex] How to color unicode combinging characters.
In-Reply-To: <20110318013950.GA7285@khaled-laptop>
References: <alpine.DEB.2.00.1103172137130.2959@kosh.hut.fi>
 <20110318013950.GA7285@khaled-laptop>
Message-ID: <4D82C205.8080605@yahoo.de>

Am 18.03.2011 02:39, schrieb Khaled Hosny:
> On Thu, Mar 17, 2011 at 10:25:11PM +0200, Simo Ojala wrote:
>>
>> Hi,
>>
>> I am really just taking my first steps in TeX world, so forgive me
>> my ignorance. However I already have this quite advanced coloring
>> problem and I have read and been told that LuaTeX might be able to
>> solve this kind of stuff. So thats why I try to ask this here,
>> hopefully found the right place to post this kind of problem...
>>
>> I am trying to create some ancient hebrew inflection charts and the
>> problem is to be able to paint vowels (and other diacritics) without
>> changing color of the consonants they are combined with. (The vowels
>> are unicode combining characters which are positioned according to
>> and combined with consonants.) I already have got some suggestions
>> that I could do some thing like this:
>>
>> \textcolor{red}{a}\textcolor{blue}{b} % where 'a' represents a
>> consonant and 'b' a vowel
>>
>> However this leads to situation where the characters are not
>> actually combined, but just placed separately to the document. That
>> it turn leads to positioning problems and other bad stuff.
> 
> You don't provide any sample files, so one can only guess.

See the answer to the tex.sx question. I tried to provide an example,
and the coloring itself does work, but the marks are positioned
incorrectly and the text direction is wrong.

From khaledhosny at eglug.org  Fri Mar 18 04:16:20 2011
From: khaledhosny at eglug.org (Khaled Hosny)
Date: Fri, 18 Mar 2011 05:16:20 +0200
Subject: [luatex] How to color unicode combinging characters.
In-Reply-To: <4D82C205.8080605@yahoo.de>
References: <alpine.DEB.2.00.1103172137130.2959@kosh.hut.fi>
 <20110318013950.GA7285@khaled-laptop> <4D82C205.8080605@yahoo.de>
Message-ID: <20110318031620.GA7791@khaled-laptop>

On Fri, Mar 18, 2011 at 03:23:01AM +0100, Philipp Stephani wrote:
> Am 18.03.2011 02:39, schrieb Khaled Hosny:
> > On Thu, Mar 17, 2011 at 10:25:11PM +0200, Simo Ojala wrote:
> >>
> >> Hi,
> >>
> >> I am really just taking my first steps in TeX world, so forgive me
> >> my ignorance. However I already have this quite advanced coloring
> >> problem and I have read and been told that LuaTeX might be able to
> >> solve this kind of stuff. So thats why I try to ask this here,
> >> hopefully found the right place to post this kind of problem...
> >>
> >> I am trying to create some ancient hebrew inflection charts and the
> >> problem is to be able to paint vowels (and other diacritics) without
> >> changing color of the consonants they are combined with. (The vowels
> >> are unicode combining characters which are positioned according to
> >> and combined with consonants.) I already have got some suggestions
> >> that I could do some thing like this:
> >>
> >> \textcolor{red}{a}\textcolor{blue}{b} % where 'a' represents a
> >> consonant and 'b' a vowel
> >>
> >> However this leads to situation where the characters are not
> >> actually combined, but just placed separately to the document. That
> >> it turn leads to positioning problems and other bad stuff.
> > 
> > You don't provide any sample files, so one can only guess.
> 
> See the answer to the tex.sx question. I tried to provide an example,
> and the coloring itself does work, but the marks are positioned
> incorrectly and the text direction is wrong.

I did already, I just wanted a non colored version of the string but
striping the interwoven combining marks and braces was tricky (both vim
and gedit would treat the closing brace and the combining mark before as
one entity even in regex matching! I ended up passing the string through
sed), see my other reply for (semi)working tests.

Regards,
 Khaled


-- 
 Khaled Hosny
 Egyptian
 Arab

From luatex at nililand.de  Fri Mar 18 17:22:20 2011
From: luatex at nililand.de (Ulrike Fischer)
Date: Fri, 18 Mar 2011 17:22:20 +0100
Subject: [luatex] newlines in key-value list
Message-ID: <85z3mgd2v08m$.dlg@nililand.de>

In the following example using the variable A to get a key val list
gives and error (` color` not a key). Obviously because of the
newline in the string definition (B works fine). How can I avoid it?


\documentclass{scrartcl}
\usepackage{chessboard}
\usepackage{luacode}
\begin{document}
\begin{luacode}

A=[[color=green,
    color=red]]

B=[[color=green, color=red]]
\end{luacode}

\chessboard[\directlua{tex.sprint(A)}]

\chessboard[\directlua{tex.sprint(B)}]

\end{document}

-- 
Ulrike Fischer 


From zappathustra at free.fr  Fri Mar 18 20:26:49 2011
From: zappathustra at free.fr (Paul Isambert)
Date: Fri, 18 Mar 2011 20:26:49 +0100
Subject: [luatex] newlines in key-value list
In-Reply-To: <85z3mgd2v08m$.dlg@nililand.de>
References: <85z3mgd2v08m$.dlg@nililand.de>
Message-ID: <4D83B1F9.4020203@free.fr>

Le 18/03/2011 17:22, Ulrike Fischer a ?crit :
> In the following example using the variable A to get a key val list
> gives and error (` color` not a key). Obviously because of the
> newline in the string definition (B works fine). How can I avoid it?
>
>
> \documentclass{scrartcl}
> \usepackage{chessboard}
> \usepackage{luacode}
> \begin{document}
> \begin{luacode}
>
> A=[[color=green,
>      color=red]]
>
> B=[[color=green, color=red]]
> \end{luacode}
>
> \chessboard[\directlua{tex.sprint(A)}]
>
> \chessboard[\directlua{tex.sprint(B)}]
>
> \end{document}


I'd say use a real table in Lua, and traverse it, but you're probably 
using strings for some good reason, hence:

\begin{luacode}

local eol = [[

]]

function remove_eol (str)
     str = str:gsub(eol, "")
     return str
end

\end{luacode}

Then use remove_eol() in the tex.sprint() statement. (Defining "eol" 
with /two/ lines is necessary because the first end-of-line isn't taken 
into account if there is no character before.)

Best,
Paul
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://tug.org/pipermail/luatex/attachments/20110318/4bce1b56/attachment.html>

From zappathustra at free.fr  Fri Mar 18 20:29:04 2011
From: zappathustra at free.fr (Paul Isambert)
Date: Fri, 18 Mar 2011 20:29:04 +0100
Subject: [luatex] How to color unicode combinging characters.
In-Reply-To: <20110318022145.GA7743@khaled-laptop>
References: <alpine.DEB.2.00.1103172137130.2959@kosh.hut.fi>
 <20110318013950.GA7285@khaled-laptop> <20110318022145.GA7743@khaled-laptop>
Message-ID: <4D83B280.2000402@free.fr>



Le 18/03/2011 03:21, Khaled Hosny a ?crit :
> On Fri, Mar 18, 2011 at 03:39:50AM +0200, Khaled Hosny wrote:
>> On Thu, Mar 17, 2011 at 10:25:11PM +0200, Simo Ojala wrote:
>>> Hi,
>>>
>>> I am really just taking my first steps in TeX world, so forgive me
>>> my ignorance. However I already have this quite advanced coloring
>>> problem and I have read and been told that LuaTeX might be able to
>>> solve this kind of stuff. So thats why I try to ask this here,
>>> hopefully found the right place to post this kind of problem...
>>>
>>> I am trying to create some ancient hebrew inflection charts and the
>>> problem is to be able to paint vowels (and other diacritics) without
>>> changing color of the consonants they are combined with. (The vowels
>>> are unicode combining characters which are positioned according to
>>> and combined with consonants.) I already have got some suggestions
>>> that I could do some thing like this:
>>>
>>> \textcolor{red}{a}\textcolor{blue}{b} % where 'a' represents a
>>> consonant and 'b' a vowel
>>>
>>> However this leads to situation where the characters are not
>>> actually combined, but just placed separately to the document. That
>>> it turn leads to positioning problems and other bad stuff.
>> You don't provide any sample files, so one can only guess.
>>
>> I think the problem is related to pdfliteral whatsits used to implement
>> color, so using luacolor package (check its documentation) in LaTeX or
>> using ConTeXt would help, either would get rid of whatsits in favour of
>> attributes. But again, without a test file one can only guess.
>>
>> ConTeXt have even more "goodies" to automatically color certain glyphs
>> without manually inserted color commands, but I never used it, though.
> Looks like luacolor is not compatible with luaotfload so opentype
> features (needed for mark positioning) will not work.

Just a question: wouldn't it be simpler to create a virtual font? 
(Virtual fonts are illustrated in luatexref with colors, precisely).

Best,
Paul

From luatex at nililand.de  Sat Mar 19 18:04:25 2011
From: luatex at nililand.de (Ulrike Fischer)
Date: Sat, 19 Mar 2011 18:04:25 +0100
Subject: [luatex] newlines in key-value list
References: <85z3mgd2v08m$.dlg@nililand.de> <4D83B1F9.4020203@free.fr>
Message-ID: <88suzsidqwwz$.dlg@nililand.de>

Am Fri, 18 Mar 2011 20:26:49 +0100 schrieb Paul Isambert:

> Le 18/03/2011 17:22, Ulrike Fischer a ?crit :
>> In the following example using the variable A to get a key val list
>> gives and error (` color` not a key). Obviously because of the
>> newline in the string definition (B works fine). How can I avoid it?
>>
>>
>> \documentclass{scrartcl}
>> \usepackage{chessboard}
>> \usepackage{luacode}
>> \begin{document}
>> \begin{luacode}
>>
>> A=[[color=green,
>>      color=red]]
>>
>> B=[[color=green, color=red]]
>> \end{luacode}
>>
>> \chessboard[\directlua{tex.sprint(A)}]
>>
>> \chessboard[\directlua{tex.sprint(B)}]
>>
>> \end{document}
> 
> 
> I'd say use a real table in Lua, and traverse it, but you're probably 
> using strings for some good reason, 

Actually I do have a real table. And some of the entries are
key-val-combinations I wanted to test. And I use [[..]] to avoid to
long lines.

Meanwhile I have understood what's going on: lua use newline (\n,
^^J) at the end of the lines. ^^J has catcode 12 (and when printed
(using OT1-encoding) gives the Omega mentioned the line break
discussion some weeks ago).

I would get the same problem with A=[[text \n text]], while A=[[text
\r text]] would work fine. 

So I think the best is to change the catcode of ^^J when I want to
use such strings:

\documentclass{scrartcl}

\usepackage{chessboard}
\usepackage{luacode,luatexbase,listings}

\newluatexcatcodetable\nlspcatcodes

\begingroup
\catcode`\^^J=10 %
\luatexsavecatcodetable\nlspcatcodes
\endgroup

\newluatexcatcodetable\nlakcatcodes
\begingroup
\catcode`\^^J=\active %
\gdef^^J{\newline}
\luatexsavecatcodetable\nlakcatcodes
\endgroup

\begin{document}

\begin{luacode*}

A="color=green,\n addpieces=Ke1"

B=[[color=green,
    addpieces=Ke1]]


\end{luacode*}

\chessboard[\directlua{tex.sprint(luatexbase.catcodetables.nlspcatcodes,
A)}]
\chessboard[\directlua{tex.sprint(luatexbase.catcodetables.nlspcatcodes,
B)}]

\begin{lstlisting}[escapeinside={[}{]},escapebegin={[},escapeend={]}]
\chessboard[\directlua{tex.sprint(luatexbase.catcodetables.nlakcatcodes,A)}]
\chessboard[\directlua{tex.sprint(luatexbase.catcodetables.nlspcatcodes,A)}]
\end{lstlisting}

\end{document} 



-- 
Ulrike Fischer 


From luatex at nililand.de  Sun Mar 20 12:43:57 2011
From: luatex at nililand.de (Ulrike Fischer)
Date: Sun, 20 Mar 2011 12:43:57 +0100
Subject: [luatex] How to color unicode combinging characters.
References: <alpine.DEB.2.00.1103172137130.2959@kosh.hut.fi>
 <20110318013950.GA7285@khaled-laptop> <20110318022145.GA7743@khaled-laptop>
 <4D83B280.2000402@free.fr>
Message-ID: <11oxxus7g48rk$.dlg@nililand.de>

Am Fri, 18 Mar 2011 20:29:04 +0100 schrieb Paul Isambert:

>>>> I am trying to create some ancient hebrew inflection charts and the
>>>> problem is to be able to paint vowels (and other diacritics) without
>>>> changing color of the consonants they are combined with. (The vowels

> Just a question: wouldn't it be simpler to create a virtual font? 
> (Virtual fonts are illustrated in luatexref with colors, precisely).

There is also in the context files a example of such  a virtual font
"luatex-fonts-demo-vf-1.lua" which can be use like other fonts e.g.

{\font\test=file:luatex-fonts-demo-vf-1.lua \test K}

This also work with latex if you have the unstable branch of
luaotfload (you need a corrected fontspec-lua) too. 

The user command of fontspec doesn't yet accept such "virtual"
fonts, but you can use them in fd-files. 


-- 
Ulrike Fischer 


From mpg at elzevir.fr  Sun Mar 20 19:53:50 2011
From: mpg at elzevir.fr (=?ISO-8859-1?Q?Manuel_P=E9gouri=E9-Gonnard?=)
Date: Sun, 20 Mar 2011 19:53:50 +0100
Subject: [luatex] unsetting attributes in the manual
Message-ID: <4D864D3E.108@elzevir.fr>

Hi,

The manual for version 0.65.0 says (page 16 = pdf page 20)

> \setbox2=\hbox attr1=12 attr2=-1{Hello}
> 
> This will set the attribute list of box 2 to 1 = 12, and the attributes of 
> box 0 will be 2 = 5. As you can see, assigning a negative value causes an 
> attribute to be ignored.

Unless I missed something, -1 should be changed to -"7FFFFFFF and the following
sentence adapted accordingly due to changes in luatex 0.37.

Manuel.

From mpg at elzevir.fr  Mon Mar 21 17:39:24 2011
From: mpg at elzevir.fr (=?ISO-8859-1?Q?Manuel_P=E9gouri=E9-Gonnard?=)
Date: Mon, 21 Mar 2011 17:39:24 +0100
Subject: [luatex] unsetting attributes in the manual
In-Reply-To: <4D864D3E.108@elzevir.fr>
References: <4D864D3E.108@elzevir.fr>
Message-ID: <4D877F3C.2070303@elzevir.fr>

Le 20/03/2011 19:53, Manuel P?gouri?-Gonnard a ?crit :
> The manual for version 0.65.0 says (page 16 = pdf page 20)
> 
Btw, the manual also says (in the same section)

\attribute 16-bit number optional equals 31-bit number

However, the value looks very much like a (signed) 32-bit number to me. Perhaps
the 31-bit thing is also a remnant from the time where only non-negative values
were allowed.

Manuel.

From taco at elvenkind.com  Tue Mar 22 09:45:38 2011
From: taco at elvenkind.com (Taco Hoekwater)
Date: Tue, 22 Mar 2011 09:45:38 +0100
Subject: [luatex] unsetting attributes in the manual
In-Reply-To: <4D877F3C.2070303@elzevir.fr>
References: <4D864D3E.108@elzevir.fr> <4D877F3C.2070303@elzevir.fr>
Message-ID: <4D8861B2.3060305@elvenkind.com>


Hi Manuel,

On 03/21/2011 05:39 PM, Manuel P?gouri?-Gonnard wrote:
> Le 20/03/2011 19:53, Manuel P?gouri?-Gonnard a ?crit :
>> The manual for version 0.65.0 says (page 16 = pdf page 20)
>>
> Btw, the manual also says (in the same section)

Both remarks move to a tracker item. Thanks for the report.

Best wishes,
Taco

From luatex at nililand.de  Thu Mar 24 17:22:20 2011
From: luatex at nililand.de (Ulrike Fischer)
Date: Thu, 24 Mar 2011 17:22:20 +0100
Subject: [luatex] "nop" in virtual fonts
Message-ID: <17cpakrkngwtw$.dlg@nililand.de>

The luatex manual mentions in the section about virtual fonts the
command "nop" which should do nothing.

But when I tried it in a virtual font

chars[u].commands=  {{'nop'}}

I got a lot of messages 

unknown packet command nop!



-- 
Ulrike Fischer 


From taco at elvenkind.com  Fri Mar 25 07:56:48 2011
From: taco at elvenkind.com (Taco Hoekwater)
Date: Fri, 25 Mar 2011 07:56:48 +0100
Subject: [luatex] "nop" in virtual fonts
In-Reply-To: <17cpakrkngwtw$.dlg@nililand.de>
References: <17cpakrkngwtw$.dlg@nililand.de>
Message-ID: <4D8C3CB0.60006@elvenkind.com>

On 03/24/2011 05:22 PM, Ulrike Fischer wrote:
> The luatex manual mentions in the section about virtual fonts the
> command "nop" which should do nothing.
>
> But when I tried it in a virtual font
>
> chars[u].commands=  {{'nop'}}
>
> I got a lot of messages
>
> unknown packet command nop!

Strange, should work. Can you provide a small test file please?

Best wishes,
Taco

From martin_hosken at sil.org  Fri Mar 25 07:59:20 2011
From: martin_hosken at sil.org (Martin Hosken)
Date: Fri, 25 Mar 2011 13:59:20 +0700
Subject: [luatex] 'glyphing' for smart font rendering
Message-ID: <20110325135920.7b0332f5@sil-mh5>

Dear All,

I've started investigating how hard it is to do real smart font rendering by trying to integrate graphite with luatex (via lua). It's going well, except that I realise that luatex is still treating glyphs as characters. What I mean is that while the node.id for a glyph node is set to a glyph, the char is still interpretted via a cmap as a character rather than taking the dimensions, offsets, etc. from the glyph node itself.

Am I right in assuming that it is intended that once a glyph node is no longer a character node but has become a glyph node, that it really will be interpretted as a glyph and the width will come from the node rather than using font,char everywhere in the backend? If so, do you want help in getting there?

I did try to build luatex but it fell over trying to find ptexenc.h from lib/ptexenc. Is that something that should be checked in?

TIA,
Yours,
Martin

From luatex at nililand.de  Fri Mar 25 09:00:32 2011
From: luatex at nililand.de (Ulrike Fischer)
Date: Fri, 25 Mar 2011 09:00:32 +0100
Subject: [luatex] "nop" in virtual fonts
References: <17cpakrkngwtw$.dlg@nililand.de> <4D8C3CB0.60006@elvenkind.com>
Message-ID: <8lh45x6ou2kx.dlg@nililand.de>

Am Fri, 25 Mar 2011 07:56:48 +0100 schrieb Taco Hoekwater:

> On 03/24/2011 05:22 PM, Ulrike Fischer wrote:
>> The luatex manual mentions in the section about virtual fonts the
>> command "nop" which should do nothing.
>>
>> But when I tried it in a virtual font
>>
>> chars[u].commands=  {{'nop'}}
>>
>> I got a lot of messages
>>
>> unknown packet command nop!
> 
> Strange, should work. Can you provide a small test file please?

OK. 

In the context minimals there is in tex\generic\context a
luatex-fonts-demo-vf-1.lua (written by Hans).

If one compile (in context minimals updated some days ago)  the
document below which use this virtual font one gets a three colored
text.

Now if I exchange line 27

- v.commands = { color[n], { 'slot', n, u }, color[0]}
+ v.commands = { color[n], { 'slot', n, u }, color[0], {'nop'}}

I get

unknown packet command nop!
PANIC: unprotected error in call to Lua API (bad argument #-1
(number expected,
got nil))

If I use

- v.commands = { color[n], { 'slot', n, u }, color[0]}
+ v.commands = { {'nop'}}

the document compiles but I get tons of the messages "unknown packet
command nop!"

I:\Z-Test>luatex --version
This is LuaTeX, Version beta-0.66.0-2011031911 (Web2C 2010) (rev
4093)


\starttext
  \font\mine=file:luatex-fonts-demo-vf-1.lua at 12pt
  \mine \input tufte \par
\stoptext

-- 
Ulrike Fischer 


From taco at elvenkind.com  Sat Mar 26 09:24:19 2011
From: taco at elvenkind.com (Taco Hoekwater)
Date: Sat, 26 Mar 2011 09:24:19 +0100
Subject: [luatex] "nop" in virtual fonts
In-Reply-To: <8lh45x6ou2kx.dlg@nililand.de>
References: <17cpakrkngwtw$.dlg@nililand.de> <4D8C3CB0.60006@elvenkind.com>
 <8lh45x6ou2kx.dlg@nililand.de>
Message-ID: <4D8DA2B3.2030107@elvenkind.com>

On 03/25/2011 09:00 AM, Ulrike Fischer wrote:
>
> In the context minimals there is in tex\generic\context a
> luatex-fonts-demo-vf-1.lua (written by Hans).
>
> If one compile (in context minimals updated some days ago)  the
> document below which use this virtual font one gets a three colored
> text.

> Now if I exchange line 27

Ok, thanks. I have moved this too a tracker item for now,
more later. I really have to focus on metapost at the moment.

Best wishes,
Taco

From taco at elvenkind.com  Sat Mar 26 09:26:47 2011
From: taco at elvenkind.com (Taco Hoekwater)
Date: Sat, 26 Mar 2011 09:26:47 +0100
Subject: [luatex] 'glyphing' for smart font rendering
In-Reply-To: <20110325135920.7b0332f5@sil-mh5>
References: <20110325135920.7b0332f5@sil-mh5>
Message-ID: <4D8DA347.7060904@elvenkind.com>

On 03/25/2011 07:59 AM, Martin Hosken wrote:
> Dear All,
>
> I've started investigating how hard it is to do real smart font
> rendering by trying to integrate graphite with luatex (via lua).

Interesting idea.

> Am I right in assuming that it is intended that once a glyph node is
> no longer a character node but has become a glyph node, that it

That is the plan, but the current code is not there yet. At the
moment, it still takes the actual width/height/depth/italic &
tounicode values from the actual font definition.

> I did try to build luatex but it fell over trying to find ptexenc.h
> from lib/ptexenc. Is that something that should be checked in?

Try running "build.sh" at top level, not configure itself.

Best wishes,
Taco

From kiryen at gmail.com  Mon Mar 28 01:03:43 2011
From: kiryen at gmail.com (Andy Lin)
Date: Sun, 27 Mar 2011 19:03:43 -0400
Subject: [luatex] Optical Sizes of Adobe Utopia Std Bold
In-Reply-To: <20110302010153.GA16126@khaled-laptop>
References: <AANLkTinwNgvgWpBXze+VO3jMEMXc5pGvwHXQHav5p69K@mail.gmail.com>
 <20110302010153.GA16126@khaled-laptop>
Message-ID: <AANLkTi=evmAiTi1rD3eSYj1iZQhoi+DneAb28WiqJG9Z@mail.gmail.com>

Sorry for the delay, I lost this thread beneath the xetex list posts.
I've attached the output of the code you sent, with one addition of
the optical size at 60pt as \testf, to provide a comparison.

The problem appears in luatex, but not in xetex. I'm not sure what
exactly is causing them problems. I've tried deleting the luatex font
cache files and rebuilding them, but that didn't have any effect.

\input luaotfload.sty %omitted for xetex
\font\testf="Utopia Std/B/S=60" at 10pt
\font\testa="Utopia Std/B/S=24" at 10pt
\font\testb="Utopia Std/B/S=16" at 10pt
\font\testc="Utopia Std/B/S=10" at 10pt
\font\testd="Utopia Std/B/S=8"  at 10pt
\testf k
\testa k
\testb k
\testc k
\testd k
\bye
-------------- next part --------------
A non-text attachment was scrubbed...
Name: UTestXeTeX.pdf
Type: application/pdf
Size: 6597 bytes
Desc: not available
URL: <http://tug.org/pipermail/luatex/attachments/20110327/4af96526/attachment-0002.pdf>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: UTestLuaTeX.pdf
Type: application/pdf
Size: 13503 bytes
Desc: not available
URL: <http://tug.org/pipermail/luatex/attachments/20110327/4af96526/attachment-0003.pdf>

From smsojala at gmail.com  Mon Mar 28 16:09:01 2011
From: smsojala at gmail.com (Simo Ojala)
Date: Mon, 28 Mar 2011 17:09:01 +0300 (EEST)
Subject: [luatex] How to color unicode combinging characters.
In-Reply-To: <9610_1300414953_ZZ0LI800G5JELK08.00_20110318022145.GA7743@khaled-laptop>
References: <alpine.DEB.2.00.1103172137130.2959@kosh.hut.fi>
 <20110318013950.GA7285@khaled-laptop>
 <9610_1300414953_ZZ0LI800G5JELK08.00_20110318022145.GA7743@khaled-laptop>
Message-ID: <alpine.DEB.2.00.1103281320260.2699@kosh.hut.fi>


On Fri, 18 Mar 2011, Khaled Hosny wrote:

> On Fri, Mar 18, 2011 at 03:39:50AM +0200, Khaled Hosny wrote:
>> On Thu, Mar 17, 2011 at 10:25:11PM +0200, Simo Ojala wrote:
>>>
>>> Hi,
>>>
>>> I am really just taking my first steps in TeX world, so forgive me
>>> my ignorance. However I already have this quite advanced coloring
>>> problem and I have read and been told that LuaTeX might be able to
>>> solve this kind of stuff. So thats why I try to ask this here,
>>> hopefully found the right place to post this kind of problem...
>>>
>>> I am trying to create some ancient hebrew inflection charts and the
>>> problem is to be able to paint vowels (and other diacritics) without
>>> changing color of the consonants they are combined with. (The vowels
>>> are unicode combining characters which are positioned according to
>>> and combined with consonants.) I already have got some suggestions
>>> that I could do some thing like this:
>>>
>>> \textcolor{red}{a}\textcolor{blue}{b} % where 'a' represents a
>>> consonant and 'b' a vowel
>>>
>>> However this leads to situation where the characters are not
>>> actually combined, but just placed separately to the document. That
>>> it turn leads to positioning problems and other bad stuff.
>>
>> You don't provide any sample files, so one can only guess.
>>
>> I think the problem is related to pdfliteral whatsits used to implement
>> color, so using luacolor package (check its documentation) in LaTeX or
>> using ConTeXt would help, either would get rid of whatsits in favour of
>> attributes. But again, without a test file one can only guess.
>>
>> ConTeXt have even more "goodies" to automatically color certain glyphs
>> without manually inserted color commands, but I never used it, though.
>
> Looks like luacolor is not compatible with luaotfload so opentype
> features (needed for mark positioning) will not work.
>
> However, ConTeXt test was successful (as far as my non-Hebrew eye can
> tell).
>
> Regards,
> Khaled
>
> -- 
> Khaled Hosny
> Egyptian
> Arab
>

Hi,

Many thanks to all who contributed in solving this problem, and special 
thanks to Khaled for his solution and the great in-depth explanation in 
tex.stackexchange. I decided to go the ConTeXt way that Khaled proposed as 
it seemed most easiest solution to me.

Little sum up of my findings.

1. As far as I see the ConTeXt solution works and coloring does not lead 
to wandering characters. (And apparently this is exactly what should 
happen as Khaled explained in stackexchange.)

2. However, I managed to stumble upon one special problem case with 
'dagesh' character (Unicode: 05bc, HEBREW POINT DAGESH OR MAPIQ). If I 
use 'SBL Hebrew' or 'Ezra SIL' fonts I am not able to color dagesh 
independently from the consonant it is combined with. However if I use 
'DejaVu Sans' or 'Cardo', there is no problem. I am wondering that maybe 
there is some way to fix this, but could not figure it out yet.
 	I quickly created test case for this if you wanna see what 
happens. (If needed Cardo and Ezra SIL are both open font lincensed and 
downloadable from internet, SBL Hebrew seems to be free to non commercial 
use.)


Sincerely,

Simo Ojala

-------------- next part --------------
A non-text attachment was scrubbed...
Name: testcase.tex
Type: text/x-tex
Size: 1402 bytes
Desc: 
URL: <http://tug.org/pipermail/luatex/attachments/20110328/5cfe7625/attachment-0001.bin>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: testcase.pdf
Type: application/pdf
Size: 69711 bytes
Desc: 
URL: <http://tug.org/pipermail/luatex/attachments/20110328/5cfe7625/attachment-0001.pdf>

