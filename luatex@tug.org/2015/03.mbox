From simon.b.may at gmail.com  Tue Mar  3 20:03:33 2015
From: simon.b.may at gmail.com (Simon May)
Date: Tue, 3 Mar 2015 20:03:33 +0100
Subject: [luatex] Wrong placement of \int\limits in Lua(La)TeX
Message-ID: <54F60585.3080302@gmail.com>

Hello,

with unicode-math and LuaLaTeX, the placement of the limits using
\int\limits is incorrect. The limits are placed too far to the right. As
discussed in the comments at
https://tex.stackexchange.com/a/103925/51235
this issue does not occur with XeTeX. There is also a bug at
http://tracker.luatex.org/view.php?id=729
that might refer to this same issue. Is this indeed a bug in LuaTeX and
are there perhaps any workarounds?
I'm using LuaTeX beta-0.79.1 (TeX Live 2014/Debian) (rev 4971).

Below is a demonstration of this issue. Producing the document will show
the incorrect placement of the limits. Removing the line
"\usepackage{unicode-math}" will show the expected output.


\documentclass{scrartcl}
\usepackage{unicode-math}
\begin{document}
\[
	\int_a^b
	\int\limits_a^b
\]
\end{document}


Out of interest: Using unicode-math (even without limits) does not
produce the same output in the example as the same document without
unicode-math. The the size of the integral sign and the spacing of the
limits changes slightly. Is this intended/expected?

Regards,
Simon May
-------------- next part --------------
A non-text attachment was scrubbed...
Name: 0x6C294338.asc
Type: application/pgp-keys
Size: 69062 bytes
Desc: not available
URL: <http://tug.org/pipermail/luatex/attachments/20150303/1081f38f/attachment-0002.bin>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 819 bytes
Desc: OpenPGP digital signature
URL: <http://tug.org/pipermail/luatex/attachments/20150303/1081f38f/attachment-0003.bin>

From luatex at nililand.de  Wed Mar  4 11:25:46 2015
From: luatex at nililand.de (Ulrike Fischer)
Date: Wed, 4 Mar 2015 11:25:46 +0100
Subject: [luatex] Wrong placement of \int\limits in Lua(La)TeX
References: <54F60585.3080302@gmail.com>
Message-ID: <1idgwhlp6aznu.dlg@nililand.de>

Am Tue, 3 Mar 2015 20:03:33 +0100 schrieb Simon May:

> Hello,
> 
> with unicode-math and LuaLaTeX, the placement of the limits using
> \int\limits is incorrect. The limits are placed too far to the right. As
> discussed in the comments at
> https://tex.stackexchange.com/a/103925/51235
> this issue does not occur with XeTeX. There is also a bug at
> http://tracker.luatex.org/view.php?id=729
> that might refer to this same issue. Is this indeed a bug in LuaTeX and
> are there perhaps any workarounds?
> I'm using LuaTeX beta-0.79.1 (TeX Live 2014/Debian) (rev 4971).
> 
> Below is a demonstration of this issue. Producing the document will show
> the incorrect placement of the limits. Removing the line
> "\usepackage{unicode-math}" will show the expected output.
> 
> 
> \documentclass{scrartcl}
> \usepackage{unicode-math}
> \begin{document}
> \[
> 	\int_a^b
> 	\int\limits_a^b
> \]
> \end{document}

The placement is certainly different than with xelatex or without
unicode-math. But I do find it difficult to describe exactly where
the symbol should placed and I often don't like the placement in
pdflatex. It also depends a bit on the actual font. You can always
move the subscripts a bit if you want:

\documentclass{scrartcl}
\usepackage{unicode-math}
%\setmathfont{Cambria Math}
\begin{document}
\[
	\int_a^b
	\int\limits_{\!\!\!\!a}^{b}
    \int\limits_{a}^{b}
    \int\limits_{a}^{b=5}
    \int\limits_{a=1}^{b}
    \int\limits_{a=1}^{b=5}
\]
\end{document}


> Out of interest: Using unicode-math (even without limits) does not
> produce the same output in the example as the same document without
> unicode-math. The the size of the integral sign and the spacing of the
> limits changes slightly. Is this intended/expected?

You are using different fonts. So differences are always possible. 


-- 
Ulrike Fischer 
http://www.troubleshooting-tex.de/


From simon.b.may at gmail.com  Wed Mar  4 15:26:18 2015
From: simon.b.may at gmail.com (Simon May)
Date: Wed, 4 Mar 2015 15:26:18 +0100
Subject: [luatex]  Wrong placement of \int\limits in Lua(La)TeX
Message-ID: <54F7160A.1020707@gmail.com>

(Apologies for breaking the thread ? I hadn't subscribed to the list
before.)

I agree that it's not trivial to decide where the limits should actually
be, but I guess many things in typesetting are a matter of taste.
However, I think anyone would agree that
? Using the same TeX input, the output of Lua(La)TeX and Xe(La)TeX
  should be (at least qualitatively) the same. If I decide that I want
  or need to use a different engine for a document, I want to change
  as little as possible (preferably nothing) in my document as a result.
  If a change of engine produces significantly different output, that's
  always a hint that there must be a bug somewhere.
? "\limits" should mean that the limits of the operator are placed above
  and below instead of to the sides. Whether one thinks that the
  placement with unicode-math looks good or not, the limits are so far
  to the side that it cannot really be said that they are placed above
  and below.

Moreover, I really do think that the current placement with unicode-math
looks just bad. The limits are floating somewhere to the upper
right/upper left with barely any attachment to the operator they belong
to. Originally, I thought that the placement and spacing demonstrated at
https://tex.stackexchange.com/a/103925
could universally agreed upon to be good-looking (and definitely better
than the same document typeset with LuaLaTeX).

Now that I'm looking more closely at some tests, it seems that there is
way too much space inserted after an integral sign with LuaLaTeX.
Looking at the following TeX source:

\documentclass{scrartcl}
\usepackage{unicode-math}
\begin{document}
\[
	A = \int f(x) \,\mathrm{d}x
\]
\end{document}

It seems like the amount of space between the integral sign and f(x) is
almost doubled compared to the version without unicode-math. It actually
looks really ugly. Perhaps this issue is related?


Ulrike Fischer wrote:
>Am Tue, 3 Mar 2015 20:03:33 +0100 schrieb Simon May:
>
>> Hello,
>>
>> with unicode-math and LuaLaTeX, the placement of the limits using
>> \int\limits is incorrect. The limits are placed too far to the
>> right. As
>> discussed in the comments at
>> https://tex.stackexchange.com/a/103925/51235
>> this issue does not occur with XeTeX. There is also a bug at
>> http://tracker.luatex.org/view.php?id=729
>> that might refer to this same issue. Is this indeed a bug in LuaTeX
>> and
>> are there perhaps any workarounds?
>> I'm using LuaTeX beta-0.79.1 (TeX Live 2014/Debian) (rev 4971).
>>
>> Below is a demonstration of this issue. Producing the document will
>> show
>> the incorrect placement of the limits. Removing the line
>> "\usepackage{unicode-math}" will show the expected output.
>>
>>
>> \documentclass{scrartcl}
>> \usepackage{unicode-math}
>> \begin{document}
>> \[
>> 	\int_a^b
>> 	\int\limits_a^b
>> \]
>> \end{document}
>
> The placement is certainly different than with xelatex or without
> unicode-math. But I do find it difficult to describe exactly where
> the symbol should placed and I often don't like the placement in
> pdflatex. It also depends a bit on the actual font. You can always
> move the subscripts a bit if you want:
>
> \documentclass{scrartcl}
> \usepackage{unicode-math}
> %\setmathfont{Cambria Math}
> \begin{document}
> \[
> 	\int_a^b
> 	\int\limits_{\!\!\!\!a}^{b}
>     \int\limits_{a}^{b}
>     \int\limits_{a}^{b=5}
>     \int\limits_{a=1}^{b}
>     \int\limits_{a=1}^{b=5}
> \]
> \end{document}
>
>
>> Out of interest: Using unicode-math (even without limits) does not
>> produce the same output in the example as the same document without
>> unicode-math. The the size of the integral sign and the spacing of
>> the limits changes slightly. Is this intended/expected?
>
> You are using different fonts. So differences are always possible.
>
>
> --
> Ulrike Fischer
> http://www.troubleshooting-tex.de/
-------------- next part --------------
A non-text attachment was scrubbed...
Name: 0x6C294338.asc
Type: application/pgp-keys
Size: 69062 bytes
Desc: not available
URL: <http://tug.org/pipermail/luatex/attachments/20150304/8db18a9b/attachment-0001.bin>

From eduardoochs at gmail.com  Sat Mar  7 01:48:43 2015
From: eduardoochs at gmail.com (Eduardo Ochs)
Date: Fri, 6 Mar 2015 21:48:43 -0300
Subject: [luatex] creating a "verbatim"-like catcode table from Lua
Message-ID: <CADs++6hN-KzGG34=WQBg-ogZYnNgqaZFuC3urqZ4mPUe09UP-Q@mail.gmail.com>

Hi list,

this code uses token.getnext() to "eat" the CR immediately after the
\directlua{...} and the lines that say "one", "two two", and "three
three three" before returning control to LaTeX's parser:

  cd /tmp/
  cat > test.tex <<'%%%'
  \documentclass{book}
  \begin{document}
  \directlua{
  makecrendofline = function () tex.catcode[13] = 5  end
  makecrother     = function () tex.catcode[13] = 12 end
  nextchar = function () return token.get_next()[2] end
  eatline  = function () repeat until nextchar() == 13 end
  makecrother()
  for i=1,4 do eatline() end
  makecrendofline()
  }
  one
  two two
  three three three
  four four four four
  five five five five five
  \end{document}
  %%%
  lualatex test.tex
  xpdf test.pdf

We can use that idea, combined with something like this,

  texfile = readfile(tex.jobname..".tex")
  lines   = splitlines(texfile)
  for i=0,10 do dosomethingwith(lines[tex.inputlineno + 1]) end

to make Lua interpret the lines after a certain point, and then make
TeX's parser skip them.

The catcode trick that I used above is quite fragile, though - it will
not notice CRs in comments, for example. It would be better to use a
pre-prepared catcode table like the one that "verbatim" uses, instead
of just changing the catcodes of CR, %, and a few other chars.

How do I construct a "verbatim"-ish catcode table? How do I save it
and activate it? Is there a way to do that from pure Lua? How do I
check, for a given number n, if the catcode table "n" exists? I saw in
the reference manual that there are primitives \initcatcodetable and
\savecatcodetable... so there is a way to do that mixing TeX and Lua.

  Thanks in advance! Pointers appreciated!...
  Cheers,
    Eduardo Ochs
    eduardoochs at gmail.com
    http://angg.twu.net/

From elie.roux at telecom-bretagne.eu  Sat Mar  7 09:38:05 2015
From: elie.roux at telecom-bretagne.eu (=?UTF-8?B?w4lsaWUgUm91eA==?=)
Date: Sat, 7 Mar 2015 09:38:05 +0100
Subject: [luatex] creating a "verbatim"-like catcode table from Lua
In-Reply-To: <CADs++6hN-KzGG34=WQBg-ogZYnNgqaZFuC3urqZ4mPUe09UP-Q@mail.gmail.com>
References: <CADs++6hN-KzGG34=WQBg-ogZYnNgqaZFuC3urqZ4mPUe09UP-Q@mail.gmail.com>
Message-ID: <54FAB8ED.7030400@telecom-bretagne.eu>

Hi,

There is a "String" catcodetable pre-defined by luatexbase, its
definition is around

https://github.com/lualatex/luatexbase/blob/master/luatexbase-cctb.dtx#L510

Thank you,
-- 
Elie

From luigi.scarso at gmail.com  Sat Mar  7 10:07:57 2015
From: luigi.scarso at gmail.com (luigi scarso)
Date: Sat, 7 Mar 2015 10:07:57 +0100
Subject: [luatex] No hyphenation when \lccodes zero with explicit hyphens
In-Reply-To: <CAG5iGsDa-=wsSJCj_+y9o7G16xzmyQs4iBqc_mQLzJvNoHUr4A@mail.gmail.com>
References: <54ECED38.8010107@morningstar2.co.uk>
 <CAG5iGsDa-=wsSJCj_+y9o7G16xzmyQs4iBqc_mQLzJvNoHUr4A@mail.gmail.com>
Message-ID: <CAG5iGsDjXiX1+bkm7kKGV+xdAOgDbZ7x=86dtxeiZokJ2RY4eg@mail.gmail.com>

Hm, I'm not able to reproduce the bug


# luatex --version
This is LuaTeX, Version beta-0.79.1 (TeX Live 2014) (rev 4971)

Execute  'luatex --credits'  for credits and version details.

There is NO warranty. Redistribution of this software is covered by
the terms of the GNU General Public License, version 2 or (at your option)
any later version. For more information about these matters, see the file
named COPYING and the LuaTeX source.

Copyright 2014 Taco Hoekwater, the LuaTeX Team.

# pdftex --version
pdfTeX 3.14159265-2.6-1.40.15 (TeX Live 2014)
kpathsea version 6.2.0
Copyright 2014 Peter Breitenlohner (eTeX)/Han The Thanh (pdfTeX).
There is NO warranty.  Redistribution of this software is
covered by the terms of both the pdfTeX copyright and
the Lesser GNU General Public License.
For more information about these matters, see the file
named COPYING and the pdfTeX source.
Primary author of pdfTeX: Peter Breitenlohner (eTeX)/Han The Thanh (pdfTeX).
Compiled with libpng 1.6.10; using libpng 1.6.10
Compiled with zlib 1.2.8; using zlib 1.2.8
Compiled with xpdf version 3.03

# xetex --version
XeTeX 3.14159265-2.6-0.99991 (TeX Live 2014)
kpathsea version 6.2.0
Copyright 2014 SIL International, Jonathan Kew and Khaled Hosny.
There is NO warranty.  Redistribution of this software is
covered by the terms of both the XeTeX copyright and
the Lesser GNU General Public License.
For more information about these matters, see the file
named COPYING and the XeTeX source.
Primary author of XeTeX: Jonathan Kew.
Compiled with ICU version 53.1; using 53.1
Compiled with zlib version 1.2.8; using 1.2.8
Compiled with FreeType2 version 2.5.3; using 2.5.3
Compiled with Graphite2 version 1.2.4; using 1.2.4
Compiled with HarfBuzz version 0.9.28; using 0.9.28
Compiled with libpng version 1.6.10; using 1.6.10
Compiled with poppler version 0.25.2
Compiled with fontconfig version 2.11.1; using 2.11.0

luatex
#  mtxrun --script plain bug6.tex ?

pdftex
# texexec --pdf bug6.tex
 2006  mupdf bug6.pdf


xetex
#  xetex  bug6.tex

--
luigi
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://tug.org/pipermail/luatex/attachments/20150307/a1170ab3/attachment-0001.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: bug6.tex
Type: application/x-tex
Size: 125 bytes
Desc: not available
URL: <http://tug.org/pipermail/luatex/attachments/20150307/a1170ab3/attachment-0001.tex>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: bug6-pdftex.pdf
Type: application/pdf
Size: 22073 bytes
Desc: not available
URL: <http://tug.org/pipermail/luatex/attachments/20150307/a1170ab3/attachment-0003.pdf>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: bug6-xetex.pdf
Type: application/pdf
Size: 2140 bytes
Desc: not available
URL: <http://tug.org/pipermail/luatex/attachments/20150307/a1170ab3/attachment-0004.pdf>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: bug6-luatexTL2014.pdf
Type: application/pdf
Size: 3670 bytes
Desc: not available
URL: <http://tug.org/pipermail/luatex/attachments/20150307/a1170ab3/attachment-0005.pdf>

From luigi.scarso at gmail.com  Sat Mar  7 10:09:48 2015
From: luigi.scarso at gmail.com (luigi scarso)
Date: Sat, 7 Mar 2015 10:09:48 +0100
Subject: [luatex] No hyphenation when \lccodes zero with explicit hyphens
In-Reply-To: <CAG5iGsDjXiX1+bkm7kKGV+xdAOgDbZ7x=86dtxeiZokJ2RY4eg@mail.gmail.com>
References: <54ECED38.8010107@morningstar2.co.uk>
 <CAG5iGsDa-=wsSJCj_+y9o7G16xzmyQs4iBqc_mQLzJvNoHUr4A@mail.gmail.com>
 <CAG5iGsDjXiX1+bkm7kKGV+xdAOgDbZ7x=86dtxeiZokJ2RY4eg@mail.gmail.com>
Message-ID: <CAG5iGsBvXrv9QcEor3drxtcoQpd7oQsSrAEXj4ijG0_t5uNa+w@mail.gmail.com>

On Sat, Mar 7, 2015 at 10:07 AM, luigi scarso <luigi.scarso at gmail.com>
wrote:

> Hm, I'm not able to reproduce the bug
>
> my fault, wrong file.
Ok, now I see it.

--
luigi
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://tug.org/pipermail/luatex/attachments/20150307/0bede641/attachment.html>

From dirk.laurie at gmail.com  Sun Mar  8 06:50:00 2015
From: dirk.laurie at gmail.com (Dirk Laurie)
Date: Sun, 8 Mar 2015 07:50:00 +0200
Subject: [luatex] luatex manpage not quite the status quo
Message-ID: <CABcj=tn7AmfAV=am0WhR6r0Qo-qvpoz4Jv7fPq2++BUQ2hGp0w@mail.gmail.com>

It says: "Run the luaTeX typesetter on TEXNAME, usually creating
TEXNAME.pdf. ... If  called  as texlua it acts as lua interpreter."

There are two gotchas here.

1. The clear implication is that if called as `luatex` it treats the input
file as TeX. In fact, if the filename ends in `.lua`, it treats it as Lua.
This is good, it is what the user would expect ? but the manpage
does not say so.

2. Input cannot come from STDIN, a filename must be given,
but `texlua myfile.lua` does not give the same behaviour as
`lua myfile.lua` would have. The difference is subtle.

The behaviour is as if the lines of `myfile.lua` were entered one
by one in interactive mode. That is to say, the scope of all local
variables ends at the end of the line they are defined on, unless
they are inside an unclosed block. This causes a perfectly valid
Lua script to fail when run by texlua.

I cannot think of a good reason why this behaviour might be
desirable. It IHMO would be preferable to make `texlua` behave
exactly like `lua`. But if there is some subtle reason for it, maybe
the manpage could warn the user about it.


From luigi.scarso at gmail.com  Sun Mar  8 12:00:18 2015
From: luigi.scarso at gmail.com (luigi scarso)
Date: Sun, 8 Mar 2015 12:00:18 +0100
Subject: [luatex] No hyphenation when \lccodes zero with explicit hyphens
In-Reply-To: <CAG5iGsBvXrv9QcEor3drxtcoQpd7oQsSrAEXj4ijG0_t5uNa+w@mail.gmail.com>
References: <54ECED38.8010107@morningstar2.co.uk>
 <CAG5iGsDa-=wsSJCj_+y9o7G16xzmyQs4iBqc_mQLzJvNoHUr4A@mail.gmail.com>
 <CAG5iGsDjXiX1+bkm7kKGV+xdAOgDbZ7x=86dtxeiZokJ2RY4eg@mail.gmail.com>
 <CAG5iGsBvXrv9QcEor3drxtcoQpd7oQsSrAEXj4ijG0_t5uNa+w@mail.gmail.com>
Message-ID: <CAG5iGsCve+OjJyY1Dd0F0RNO7_6kZC-vy_P=zwu06mU9JH0KEw@mail.gmail.com>

On Sat, Mar 7, 2015 at 10:09 AM, luigi scarso <luigi.scarso at gmail.com>
wrote:

>
>
> On Sat, Mar 7, 2015 at 10:07 AM, luigi scarso <luigi.scarso at gmail.com>
> wrote:
>
>> Hm, I'm not able to reproduce the bug
>>
>> my fault, wrong file.
> Ok, now I see it.
>
>
There is a (temp patch) on experimental by Hans
-- 
luigi
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://tug.org/pipermail/luatex/attachments/20150308/989bb3b4/attachment.html>

From luigi.scarso at gmail.com  Sun Mar  8 12:09:46 2015
From: luigi.scarso at gmail.com (luigi scarso)
Date: Sun, 8 Mar 2015 12:09:46 +0100
Subject: [luatex] luatex manpage not quite the status quo
In-Reply-To: <CABcj=tn7AmfAV=am0WhR6r0Qo-qvpoz4Jv7fPq2++BUQ2hGp0w@mail.gmail.com>
References: <CABcj=tn7AmfAV=am0WhR6r0Qo-qvpoz4Jv7fPq2++BUQ2hGp0w@mail.gmail.com>
Message-ID: <CAG5iGsAWfF_yN1HO4sbCphOGbc-EbN_c6fB81oRPLEhK_LkZuQ@mail.gmail.com>

On Sun, Mar 8, 2015 at 6:50 AM, Dirk Laurie <dirk.laurie at gmail.com> wrote:

> It says: "Run the luaTeX typesetter on TEXNAME, usually creating
> TEXNAME.pdf. ... If  called  as texlua it acts as lua interpreter."
>
> There are two gotchas here.
>
> 1. The clear implication is that if called as `luatex` it treats the input
> file as TeX. In fact, if the filename ends in `.lua`, it treats it as Lua.
> This is good, it is what the user would expect ? but the manpage
> does not say so.
>
> 2. Input cannot come from STDIN, a filename must be given,
> but `texlua myfile.lua` does not give the same behaviour as
> `lua myfile.lua` would have. The difference is subtle.
>
> The behaviour is as if the lines of `myfile.lua` were entered one
> by one in interactive mode. That is to say, the scope of all local
> variables ends at the end of the line they are defined on, unless
> they are inside an unclosed block. This causes a perfectly valid
> Lua script to fail when run by texlua.
>
> I cannot think of a good reason why this behaviour might be
> desirable. It IHMO would be preferable to make `texlua` behave
> exactly like `lua`. But if there is some subtle reason for it, maybe
> the manpage could warn the user about it.
>
>
hm, could be...can you give an example ?

-- 
luigi
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://tug.org/pipermail/luatex/attachments/20150308/57633f9d/attachment.html>

From dirk.laurie at gmail.com  Sun Mar  8 13:33:43 2015
From: dirk.laurie at gmail.com (Dirk Laurie)
Date: Sun, 8 Mar 2015 14:33:43 +0200
Subject: [luatex] luatex manpage not quite the status quo
In-Reply-To: <CAG5iGsAWfF_yN1HO4sbCphOGbc-EbN_c6fB81oRPLEhK_LkZuQ@mail.gmail.com>
References: <CABcj=tn7AmfAV=am0WhR6r0Qo-qvpoz4Jv7fPq2++BUQ2hGp0w@mail.gmail.com>
 <CAG5iGsAWfF_yN1HO4sbCphOGbc-EbN_c6fB81oRPLEhK_LkZuQ@mail.gmail.com>
Message-ID: <CABcj=tm9XNS99wCMmJb_MA+xT1KcRvSacGC+14KBOrTeRBL9gg@mail.gmail.com>

2015-03-08 13:09 GMT+02:00 luigi scarso <luigi.scarso at gmail.com>:
>

>> The behaviour is as if the lines of `myfile.lua` were entered one
>> by one in interactive mode. That is to say, the scope of all local
>> variables ends at the end of the line they are defined on, unless
>> they are inside an unclosed block. This causes a perfectly valid
>> Lua script to fail when run by texlua.
>
> hm, could be...can you give an example ?

This was the example:

package.path = "./?.lua"
local msg, apl = pcall(require, "gnuapl")
print( msg,apl)

print(apl.what(_G))
print(apl.what(package.loaded))

which produced the following output

$ texlua xxx.lua
true    table: 0x276c3c0
./gnuapl.lua:157: attempt to index global 'apl' (a nil value)

Removing `local` makes it work.

However, staring at the above made me realize that the error
arises because a global variable `apl` inside the module is not
defined in time, but since the call defines it globally, by the
time `what` is called, it is defined in the second case. So
texlua is absolved.

Sorry for the noise.

Dirk

However

From jolson at kth.se  Mon Mar  9 10:18:20 2015
From: jolson at kth.se (Jonas Olson)
Date: Mon, 9 Mar 2015 10:18:20 +0100
Subject: [luatex] Refuses to page break between section headings
Message-ID: <54FD655C.4040207@kth.se>

Hi!

I'm struggling with a document that contains successive section headings 
(with no text between them). My problem is that I'm being refused any 
page breaks between such headings, resulting in an "Overfull \vbox" and 
a blank page. Please find attached a minimal example and its output. I'm 
compiling with "lualatex blank.tex".

It would be fantastic to get help sorting this out. Grandmother's 
funeral is in a few days and I'm trying to finish the funeral programme. 
Honestly, I don't know if I'm supposed to take this issue up with 
LuaLaTeX or elsewhere, but I have to start somewhere.

Regards,
Jonas
-------------- next part --------------
A non-text attachment was scrubbed...
Name: blank.pdf
Type: application/pdf
Size: 18234 bytes
Desc: not available
URL: <http://tug.org/pipermail/luatex/attachments/20150309/7c1c2937/attachment-0001.pdf>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: blank.tex
Type: text/x-tex
Size: 419 bytes
Desc: not available
URL: <http://tug.org/pipermail/luatex/attachments/20150309/7c1c2937/attachment-0001.bin>

From d.p.carlisle at gmail.com  Mon Mar  9 10:55:59 2015
From: d.p.carlisle at gmail.com (David Carlisle)
Date: Mon, 9 Mar 2015 09:55:59 +0000
Subject: [luatex] Refuses to page break between section headings
In-Reply-To: <54FD655C.4040207@kth.se>
References: <54FD655C.4040207@kth.se>
Message-ID: <CAEW6iOizcECQkb06-JdsY7_DgDZnSetc0Dta6do-W3_vWa6O2w@mail.gmail.com>

On 9 March 2015 at 09:18, Jonas Olson <jolson at kth.se> wrote:
> Hi!
>
> I'm struggling with a document that contains successive section headings
> (with no text between them). My problem is that I'm being refused any page
> breaks between such headings, resulting in an "Overfull \vbox" and a blank
> page. Please find attached a minimal example and its output. I'm compiling
> with "lualatex blank.tex".
>
> It would be fantastic to get help sorting this out. Grandmother's funeral is
> in a few days and I'm trying to finish the funeral programme. Honestly, I
> don't know if I'm supposed to take this issue up with LuaLaTeX or elsewhere,
> but I have to start somewhere.
>
> Regards,
> Jonas



This is unrelated to luatex.

latex does not break a page after a section heading.

If (for some reason) you need a blank document just put some invisible
paragraph text
(an empty \mbox{} will do)

so that latex can break after the blank paragraph.

David

From jolson at kth.se  Mon Mar  9 11:54:00 2015
From: jolson at kth.se (Jonas Olson)
Date: Mon, 9 Mar 2015 11:54:00 +0100
Subject: [luatex] Refuses to page break between section headings
In-Reply-To: <CAEW6iOizcECQkb06-JdsY7_DgDZnSetc0Dta6do-W3_vWa6O2w@mail.gmail.com>
References: <54FD655C.4040207@kth.se>
 <CAEW6iOizcECQkb06-JdsY7_DgDZnSetc0Dta6do-W3_vWa6O2w@mail.gmail.com>
Message-ID: <54FD7BC8.3090305@kth.se>

Den 2015-03-09 10:55, David Carlisle skrev:
> This is unrelated to luatex.

I see. Thank you so much for replying anyway. For the future, what would 
be the best place to take issues like this? Is it Stack Exchange?

> latex does not break a page after a section heading.

How come it doesn't even break after the heading when the section is 
empty? Is there a switch to change this behaviour?

> If (for some reason) you need a blank document just put some invisible
> paragraph text
> (an empty \mbox{} will do)
>
> so that latex can break after the blank paragraph.

This unfortunately also creates an actual, empty line, which messes up 
the spacing. Is there something that takes up zero space, but still 
allows for a page break? Otherwise, I suppose I should try to make 
something that just looks like a header (bold, large, spacing around it) 
instead of actually being one.

Best,
Jonas

From d.p.carlisle at gmail.com  Mon Mar  9 12:19:42 2015
From: d.p.carlisle at gmail.com (David Carlisle)
Date: Mon, 9 Mar 2015 11:19:42 +0000
Subject: [luatex] Refuses to page break between section headings
In-Reply-To: <54FD7BC8.3090305@kth.se>
References: <54FD655C.4040207@kth.se>
 <CAEW6iOizcECQkb06-JdsY7_DgDZnSetc0Dta6do-W3_vWa6O2w@mail.gmail.com>
 <54FD7BC8.3090305@kth.se>
Message-ID: <CAEW6iOi8WnM4P8DFnTkR_j_CV0VTc5Zu0CowHtvcm_dWQ34K_A@mail.gmail.com>

On 9 March 2015 at 10:54, Jonas Olson <jolson at kth.se> wrote:
> Den 2015-03-09 10:55, David Carlisle skrev:
>>
>> This is unrelated to luatex.
>
>
> I see. Thank you so much for replying anyway. For the future, what would be
> the best place to take issues like this? Is it Stack Exchange?
>

Probably (although I'd guess it is a duplicate:-)

>> latex does not break a page after a section heading.
>
>
> How come it doesn't even break after the heading when the section is empty?
It has already typeset a section and prevented a page break, it can't go back
and re-allow a page break even if it had some way to know the section is empty.

> Is there a switch to change this behaviour?

No. Empty sections are not part of the design at all.

>> If (for some reason) you need a blank document just put some invisible
>> paragraph text
>> (an empty \mbox{} will do)
>>
>> so that latex can break after the blank paragraph.
>
>
> This unfortunately also creates an actual, empty line, which messes up the
> spacing. Is there something that takes up zero space, but still allows for a
> page break? Otherwise, I suppose I should try to make something that just
> looks like a header (bold, large, spacing around it) instead of actually
> being one.
>
I assumed this was a stub document and text was to be added later,
in which case spacing wouldn't matter much. If it isn't, thenprobably
\section is the wrong markup (a section with a heading but no text
doesn't make sense really)

However if you really want that you can force a page break with

....

\section{A}
\clearpage
\section{A}
...


> Best,
> Jonas



David

From luatex at nililand.de  Mon Mar  9 16:35:28 2015
From: luatex at nililand.de (Ulrike Fischer)
Date: Mon, 9 Mar 2015 16:35:28 +0100
Subject: [luatex] Refuses to page break between section headings
References: <54FD655C.4040207@kth.se>
 <CAEW6iOizcECQkb06-JdsY7_DgDZnSetc0Dta6do-W3_vWa6O2w@mail.gmail.com>
 <54FD7BC8.3090305@kth.se>
Message-ID: <12es7d5fdfytj.dlg@nililand.de>

Am Mon, 9 Mar 2015 11:54:00 +0100 schrieb Jonas Olson:

> This unfortunately also creates an actual, empty line, which messes up 
> the spacing. Is there something that takes up zero space, but still 
> allows for a page break?

You could add \filbreak.

But imho the source of your problem is the misuse of \section. Why
are you using it if you actually don't want a section title? Why
don't you define a command that is more suitable?


-- 
Ulrike Fischer 
http://www.troubleshooting-tex.de/


From jolson at kth.se  Mon Mar  9 17:28:50 2015
From: jolson at kth.se (Jonas Olson)
Date: Mon, 9 Mar 2015 17:28:50 +0100
Subject: [luatex] Refuses to page break between section headings
In-Reply-To: <12es7d5fdfytj.dlg@nililand.de>
References: <54FD655C.4040207@kth.se>
 <CAEW6iOizcECQkb06-JdsY7_DgDZnSetc0Dta6do-W3_vWa6O2w@mail.gmail.com>
 <54FD7BC8.3090305@kth.se> <12es7d5fdfytj.dlg@nililand.de>
Message-ID: <54FDCA42.9060304@kth.se>

Den 2015-03-09 16:35, Ulrike Fischer skrev:
> But imho the source of your problem is the misuse of \section. Why
> are you using it if you actually don't want a section title? Why
> don't you define a command that is more suitable?

I don't really know enough to construct a suitable command myself, 
especially things like adding a vertical space above the heading iff it 
is not the first thing on the page, and adding a vertical space below 
the heading iff it has a text body.

Jonas

From luatex at nililand.de  Mon Mar  9 18:16:53 2015
From: luatex at nililand.de (Ulrike Fischer)
Date: Mon, 9 Mar 2015 18:16:53 +0100
Subject: [luatex] Refuses to page break between section headings
References: <54FD655C.4040207@kth.se>
 <CAEW6iOizcECQkb06-JdsY7_DgDZnSetc0Dta6do-W3_vWa6O2w@mail.gmail.com>
 <54FD7BC8.3090305@kth.se> <12es7d5fdfytj.dlg@nililand.de>
 <54FDCA42.9060304@kth.se>
Message-ID: <j3larnoq5vp7.dlg@nililand.de>

Am Mon, 9 Mar 2015 17:28:50 +0100 schrieb Jonas Olson:

>> But imho the source of your problem is the misuse of \section. Why
>> are you using it if you actually don't want a section title? Why
>> don't you define a command that is more suitable?
> 
> I don't really know enough to construct a suitable command myself, 
> especially things like adding a vertical space above the heading iff it 
> is not the first thing on the page, and adding a vertical space below 
> the heading iff it has a text body.

But your text doesn't has a text body or you wouldn't have run into
the break problem.

So why did you use \section? Because the output is bold? Because of
the spacing? Because the output is numbered? What is the meaning of
the list of \sections?




-- 
Ulrike Fischer 
http://www.troubleshooting-tex.de/


From luigi.scarso at gmail.com  Mon Mar  9 18:24:57 2015
From: luigi.scarso at gmail.com (luigi scarso)
Date: Mon, 9 Mar 2015 18:24:57 +0100
Subject: [luatex] Refuses to page break between section headings
In-Reply-To: <54FDCA42.9060304@kth.se>
References: <54FD655C.4040207@kth.se>
 <CAEW6iOizcECQkb06-JdsY7_DgDZnSetc0Dta6do-W3_vWa6O2w@mail.gmail.com>
 <54FD7BC8.3090305@kth.se>	<12es7d5fdfytj.dlg@nililand.de>
 <54FDCA42.9060304@kth.se>
Message-ID: <CAG5iGsAPodkeLXCCxy+DBQT=fecQrj3P2A5CRq-ouFucgLXPQA@mail.gmail.com>

On Mon, Mar 9, 2015 at 5:28 PM, Jonas Olson <jolson at kth.se> wrote:

> Den 2015-03-09 16:35, Ulrike Fischer skrev:
>
>> But imho the source of your problem is the misuse of \section. Why
>> are you using it if you actually don't want a section title? Why
>> don't you define a command that is more suitable?
>>
>
> I don't really know enough to construct a suitable command myself,
> especially things like adding a vertical space above the heading iff it is
> not the first thing on the page, and adding a vertical space below the
> heading iff it has a text body.
>
> Jonas
>
something like this ?
\documentclass[]{article}

\begin{document}
\section{A}\vfill\eject
\section{A}\vfill\eject
\section{A}\vfill\eject
\section{A}\vfill\eject
\section{A}\vfill\eject
\section{A}\vfill\eject
\section{A}\vfill\eject
\section{A}\vfill\eject
\section{A}\vfill\eject
\section{A}\vfill\eject
\section{A}\vfill\eject
\section{A}\vfill\eject
\section{A}\vfill\eject
\section{A}\vfill\eject
\section{A}\vfill\eject
\section{A}\vfill\eject
\section{A}\vfill\eject
\section{A}\vfill\eject
\section{A}\vfill\eject
\section{A}\vfill\eject
\section{A}\vfill\eject
\section{A}\vfill\eject
\section{A}\vfill\eject
\section{A}\vfill\eject
\section{A}\vfill\eject
\section{A}\vfill\eject
\section{A}\vfill\eject
\section{A}\vfill\eject
\section{A}\vfill\eject
\section{A}\vfill\eject
\section{A}\vfill\eject
\section{A}\vfill\eject
\section{A}\vfill\eject
\section{A}\vfill\eject
\section{A}\vfill\eject
\section{A}\vfill\eject
\section{A}\vfill\eject
\section{A}\vfill\eject
\section{A}\vfill\eject
\section{A}\vfill\eject
\section{A}\vfill\eject
\section{A}\vfill\eject
\section{A}\vfill\eject

\end{document}


-- 
luigi
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://tug.org/pipermail/luatex/attachments/20150309/8c9ba8bf/attachment-0001.html>

From jolson at kth.se  Mon Mar  9 21:07:24 2015
From: jolson at kth.se (Jonas Olson)
Date: Mon, 9 Mar 2015 21:07:24 +0100
Subject: [luatex] Refuses to page break between section headings
In-Reply-To: <CAG5iGsAPodkeLXCCxy+DBQT=fecQrj3P2A5CRq-ouFucgLXPQA@mail.gmail.com>
References: <54FD655C.4040207@kth.se>
 <CAEW6iOizcECQkb06-JdsY7_DgDZnSetc0Dta6do-W3_vWa6O2w@mail.gmail.com>
 <54FD7BC8.3090305@kth.se>	<12es7d5fdfytj.dlg@nililand.de>
 <54FDCA42.9060304@kth.se>
 <CAG5iGsAPodkeLXCCxy+DBQT=fecQrj3P2A5CRq-ouFucgLXPQA@mail.gmail.com>
Message-ID: <54FDFD7C.2040000@kth.se>

Den 2015-03-09 18:24, luigi scarso skrev:
> something like this ?
> \documentclass[]{article}
>
> \begin{document}
> \section{A}\vfill\eject
> \section{A}\vfill\eject
> \section{A}\vfill\eject
> \section{A}\vfill\eject
> \section{A}\vfill\eject
> \section{A}\vfill\eject
> \section{A}\vfill\eject
> \section{A}\vfill\eject
> \section{A}\vfill\eject
> \section{A}\vfill\eject
> \section{A}\vfill\eject
> \section{A}\vfill\eject
> \section{A}\vfill\eject
> \section{A}\vfill\eject
> \section{A}\vfill\eject
> \section{A}\vfill\eject
> \section{A}\vfill\eject
> \section{A}\vfill\eject
> \section{A}\vfill\eject
> \section{A}\vfill\eject
> \section{A}\vfill\eject
> \section{A}\vfill\eject
> \section{A}\vfill\eject
> \section{A}\vfill\eject
> \section{A}\vfill\eject
> \section{A}\vfill\eject
> \section{A}\vfill\eject
> \section{A}\vfill\eject
> \section{A}\vfill\eject
> \section{A}\vfill\eject
> \section{A}\vfill\eject
> \section{A}\vfill\eject
> \section{A}\vfill\eject
> \section{A}\vfill\eject
> \section{A}\vfill\eject
> \section{A}\vfill\eject
> \section{A}\vfill\eject
> \section{A}\vfill\eject
> \section{A}\vfill\eject
> \section{A}\vfill\eject
> \section{A}\vfill\eject
> \section{A}\vfill\eject
> \section{A}\vfill\eject
>
> \end{document}

That seems to put a page break after every section heading, not just 
when we have reached the bottom of a page.

Jonas

From jolson at kth.se  Mon Mar  9 21:18:51 2015
From: jolson at kth.se (Jonas Olson)
Date: Mon, 9 Mar 2015 21:18:51 +0100
Subject: [luatex] Refuses to page break between section headings
In-Reply-To: <j3larnoq5vp7.dlg@nililand.de>
References: <54FD655C.4040207@kth.se>
 <CAEW6iOizcECQkb06-JdsY7_DgDZnSetc0Dta6do-W3_vWa6O2w@mail.gmail.com>
 <54FD7BC8.3090305@kth.se> <12es7d5fdfytj.dlg@nililand.de>
 <54FDCA42.9060304@kth.se> <j3larnoq5vp7.dlg@nililand.de>
Message-ID: <54FE002B.7070909@kth.se>

Den 2015-03-09 18:16, Ulrike Fischer skrev:
> But your text doesn't has a text body or you wouldn't have run into
> the break problem.

Just to be clear: My actual document has a few lines of text under some 
of the headings, but not under all.
> So why did you use \section? Because the output is bold? Because of
> the spacing? Because the output is numbered?

Because it's bold and large (though I can recreate that myself), but 
most of all because of the spacing. I don't need the numbering, so I use 
the starred version. (Actually, I use "\documentclass[article]{memoir}" 
and have "\chapter*{A}" instead of sections, but I wanted to create a 
simpler example for posting here.)

> What is the meaning of
> the list of \sections?

Nothing particular. Well, I guess it's a list of the sections that the 
funeral service will consist of, similar to how a document is a list of 
sections of text.

Jonas

From reinhard.kotucha at web.de  Mon Mar  9 21:27:13 2015
From: reinhard.kotucha at web.de (Reinhard Kotucha)
Date: Mon, 9 Mar 2015 21:27:13 +0100
Subject: [luatex] Refuses to page break between section headings
In-Reply-To: <CAG5iGsAPodkeLXCCxy+DBQT=fecQrj3P2A5CRq-ouFucgLXPQA@mail.gmail.com>
References: <54FD655C.4040207@kth.se>
 <CAEW6iOizcECQkb06-JdsY7_DgDZnSetc0Dta6do-W3_vWa6O2w@mail.gmail.com>
 <54FD7BC8.3090305@kth.se>	<12es7d5fdfytj.dlg@nililand.de>
 <54FDCA42.9060304@kth.se>
 <CAG5iGsAPodkeLXCCxy+DBQT=fecQrj3P2A5CRq-ouFucgLXPQA@mail.gmail.com>
Message-ID: <21758.545.340073.931092@zaphod.ms25.net>

On 2015-03-09 at 18:24:57 +0100, luigi scarso wrote:

 > On Mon, Mar 9, 2015 at 5:28 PM, Jonas Olson <jolson at kth.se> wrote:
 > 
 > > Den 2015-03-09 16:35, Ulrike Fischer skrev:
 > >
 > >> But imho the source of your problem is the misuse of \section. Why
 > >> are you using it if you actually don't want a section title? Why
 > >> don't you define a command that is more suitable?
 > >>
 > >
 > > I don't really know enough to construct a suitable command myself,
 > > especially things like adding a vertical space above the heading iff it is
 > > not the first thing on the page, and adding a vertical space below the
 > > heading iff it has a text body.
 > >
 > > Jonas
 > >
 > something like this ?
 > \documentclass[]{article}
 > 
 > \begin{document}
 > \section{A}\vfill\eject
 > \section{A}\vfill\eject
 > \section{A}\vfill\eject
 > \section{A}\vfill\eject
 [....]
 > \section{A}\vfill\eject
 > \section{A}\vfill\eject
 > \section{A}\vfill\eject
 > \section{A}\vfill\eject
 > 
 > \end{document}

Well, as far as I understand Jonas, not all sections are empty.  But
if there are too many empty sections on one page, no pagebreak occurs
and you get a big overfull \hbox.  Thus, I suppose that DPC's
suggestion to insert pagebreaks manually (\clearpage) is an
appropriate solution.

Ulrike, the reason Jonas [ab]uses \section is because this macro
contains discardable vertical space i.e., the space above the section
header disappears if the section begins at the top of a page.  This is
exactly what Jonas wants, hence using \section is appropriate.

Writing a dedicated macro is certainly possible.  But unless the
document is large or has to be revised in the future, inserting
\clearpage manually where needed makes sense.  I suppose that Jonas
needs a solution soon and is not interested in an everlasting reseach
project.

Jonas, does \clearpage, as suggested by David, solve your problem?

Regards,
  Reinhard

-- 
------------------------------------------------------------------
Reinhard Kotucha                            Phone: +49-511-3373112
Marschnerstr. 25
D-30167 Hannover                    mailto:reinhard.kotucha at web.de
------------------------------------------------------------------

From luatex at nililand.de  Mon Mar  9 21:38:35 2015
From: luatex at nililand.de (Ulrike Fischer)
Date: Mon, 9 Mar 2015 21:38:35 +0100
Subject: [luatex] Refuses to page break between section headings
References: <54FD655C.4040207@kth.se>
 <CAEW6iOizcECQkb06-JdsY7_DgDZnSetc0Dta6do-W3_vWa6O2w@mail.gmail.com>
 <54FD7BC8.3090305@kth.se> <12es7d5fdfytj.dlg@nililand.de>
 <54FDCA42.9060304@kth.se> <j3larnoq5vp7.dlg@nililand.de>
 <54FE002B.7070909@kth.se>
Message-ID: <1m2yxlmrszmsa.dlg@nililand.de>

Am Mon, 9 Mar 2015 21:18:51 +0100 schrieb Jonas Olson:


>> So why did you use \section? Because the output is bold? Because of
>> the spacing? Because the output is numbered?
 
> Because it's bold and large (though I can recreate that myself), but 
> most of all because of the spacing. I don't need the numbering, so I use 
> the starred version. (Actually, I use "\documentclass[article]{memoir}" 
> and have "\chapter*{A}" instead of sections, but I wanted to create a 
> simpler example for posting here.)


I hadn't seen that you are creating an one-time, rather small which
is needed soon document. In this case both \clearpage (forced
pagebreak) or \filbreak (allows a break) is ok.


 



-- 
Ulrike Fischer 
http://www.troubleshooting-tex.de/


From reinhard.kotucha at web.de  Mon Mar  9 23:34:21 2015
From: reinhard.kotucha at web.de (Reinhard Kotucha)
Date: Mon, 9 Mar 2015 23:34:21 +0100
Subject: [luatex] Refuses to page break between section headings
In-Reply-To: <1m2yxlmrszmsa.dlg@nililand.de>
References: <54FD655C.4040207@kth.se>
 <CAEW6iOizcECQkb06-JdsY7_DgDZnSetc0Dta6do-W3_vWa6O2w@mail.gmail.com>
 <54FD7BC8.3090305@kth.se>	<12es7d5fdfytj.dlg@nililand.de>
 <54FDCA42.9060304@kth.se>	<j3larnoq5vp7.dlg@nililand.de>
 <54FE002B.7070909@kth.se>	<1m2yxlmrszmsa.dlg@nililand.de>
Message-ID: <21758.8173.913475.558069@zaphod.ms25.net>

On 2015-03-09 at 21:38:35 +0100, Ulrike Fischer wrote:

 > Am Mon, 9 Mar 2015 21:18:51 +0100 schrieb Jonas Olson:
 > 
 > 
 > >> So why did you use \section? Because the output is bold? Because of
 > >> the spacing? Because the output is numbered?
 >  
 > > Because it's bold and large (though I can recreate that myself), but 
 > > most of all because of the spacing. I don't need the numbering, so I use 
 > > the starred version. (Actually, I use "\documentclass[article]{memoir}" 
 > > and have "\chapter*{A}" instead of sections, but I wanted to create a 
 > > simpler example for posting here.)
 > 
 > 
 > I hadn't seen that you are creating an one-time, rather small which
 > is needed soon document. In this case both \clearpage (forced
 > pagebreak) or \filbreak (allows a break) is ok.

Ulrike,
at a first glance is seems that \filbreak is the best solution because
one could consider to redefine the section command:

  \newcommand\Section[1]{\section{#1}\filbreak}

It works like a charm if the paragraph fits on the current page, but
unfortunately it's moved to the next page if there isn't enough space
on the current page.  See the example below.  However, it's good that
you mentioned it though.  It seems that \clearpage is the right way to
go for the time being.

Regards,
  Reinhard

\documentclass{article}
\usepackage[showframe]{geometry}
\newcommand\text{The quick brown fox jumps over the lazy dog. }
\newcommand\Section[1]{\section{#1}\filbreak}
\begin{document}
\Section{A}
\Section{A}
\Section{A}
\Section{A}
\Section{A}
\Section{A}
\Section{A}
\Section{A}
\Section{A}
\Section{A}
\Section{A}
\Section{A}
\Section{A}
\Section{A}
\Section{A}
\Section{A}
\Section{A}
\Section{A}
\Section{A}
\text \text \text \text
\Section{A}
\Section{A}
\Section{A}
\Section{A}
\Section{A}
\Section{A}
\Section{A}
\Section{A}
\Section{A}
\Section{A}
\Section{A}
\Section{A}
\Section{A}
\Section{A}
\Section{A}
\Section{A}
\Section{A}
\text \text \text \text \text \text \text
\Section{A}
\Section{A}
\end{document}


-- 
------------------------------------------------------------------
Reinhard Kotucha                            Phone: +49-511-3373112
Marschnerstr. 25
D-30167 Hannover                    mailto:reinhard.kotucha at web.de
------------------------------------------------------------------

From luatex at nililand.de  Mon Mar  9 23:45:14 2015
From: luatex at nililand.de (Ulrike Fischer)
Date: Mon, 9 Mar 2015 23:45:14 +0100
Subject: [luatex] Refuses to page break between section headings
References: <54FD655C.4040207@kth.se>
 <CAEW6iOizcECQkb06-JdsY7_DgDZnSetc0Dta6do-W3_vWa6O2w@mail.gmail.com>
 <54FD7BC8.3090305@kth.se> <12es7d5fdfytj.dlg@nililand.de>
 <54FDCA42.9060304@kth.se> <j3larnoq5vp7.dlg@nililand.de>
 <54FE002B.7070909@kth.se> <1m2yxlmrszmsa.dlg@nililand.de>
 <21758.8173.913475.558069@zaphod.ms25.net>
Message-ID: <7b4qx5vbz8wn$.dlg@nililand.de>

Am Mon, 9 Mar 2015 23:34:21 +0100 schrieb Reinhard Kotucha:

>  > I hadn't seen that you are creating an one-time, rather small which
>  > is needed soon document. In this case both \clearpage (forced
>  > pagebreak) or \filbreak (allows a break) is ok.
> 
> Ulrike,
> at a first glance is seems that \filbreak is the best solution because
> one could consider to redefine the section command:
> 
>   \newcommand\Section[1]{\section{#1}\filbreak}
> 
> It works like a charm if the paragraph fits on the current page, but
> unfortunately it's moved to the next page if there isn't enough space
> on the current page. 

If I wanted to insert \filbreak automatically (and not only when
there is no text after a section) I would put it before the
\section.


-- 
Ulrike Fischer 
http://www.troubleshooting-tex.de/


From yuvalery at gmail.com  Tue Mar 10 00:34:27 2015
From: yuvalery at gmail.com (Valery Yundin)
Date: Tue, 10 Mar 2015 00:34:27 +0100
Subject: [luatex] Problematic "tounicode" entries for ligatures in
	luatex-cache
Message-ID: <CABNxngPFWU9XWj7SSKkh72hEYv-0kN_Prn1899VEZWFxCxzSFQ@mail.gmail.com>

Hi,

There seems to be a problem in how cache files for fonts are saved.

The font loader (?) writes "tounicode" entries as numbers if they do
not contain digits A-F. Which means that if such entry has leading
zeros, they will be lost, because Lua ignores leading zeros in numeric
literals. This leads to wrong CMap entries in PDF and
non-copy-pasteable glyphs. (Apparently this problem does not affect
single code point glyphs, probably because string format has a minimum
width of 4)

For example Carlito font has ligature for "ti", which doesn't have
standard unicode code point and has to be represented as a pair of "t"
and "i'.

The luatex generates the following cache file
$HOME/.cache/texmf/fonts/luatex-cache/generic/fonts/otf/carlito-regular.lua:
["tounicode"]={
...
[2210]=00740069,
...

Note the missing quotes around 00740069. When we use Carlito again
luatex will read this cache file and leading zeroes will be ignored,
which will result in wrong CMap entry in PDF file:
<08A2> <740069>

While for instance another non-standard ligature "fj" has mapping
["tounicode"]={
...
[85]="0066006A",
...

Note quotes around due to hexadecimal digit "A". And CMap entry
correctly preserves leading zeroes:
<0055> <0066006A>

If I fix the cache file by hand and put quotes around 00740069 for
"ti" ligature, CMap in PDF will be correct for it too. Perhaps it
would make sense to write all "tounicode" values as strings.

Here is an example for lualatex:

\documentclass{article}
\usepackage{fontspec}
\setmainfont{Carlito}
\defaultfontfeatures{Ligatures=TeX}
\begin{document}
Beautiful fjord
\end{document}

First run (with empty font cache) will produce correct PDF file. While
all subsequent runs will mess up CMap for ligature "ti". You can check
it easily by running pdftotext on the resulting PDF.

With best regards, Valery Yundin.

From slitt at troubleshooters.com  Tue Mar 10 15:24:53 2015
From: slitt at troubleshooters.com (Steve Litt)
Date: Tue, 10 Mar 2015 10:24:53 -0400
Subject: [luatex] Refuses to page break between section headings
In-Reply-To: <21758.545.340073.931092@zaphod.ms25.net>
References: <54FD655C.4040207@kth.se>
 <CAEW6iOizcECQkb06-JdsY7_DgDZnSetc0Dta6do-W3_vWa6O2w@mail.gmail.com>
 <54FD7BC8.3090305@kth.se>	<12es7d5fdfytj.dlg@nililand.de>
 <54FDCA42.9060304@kth.se>
 <CAG5iGsAPodkeLXCCxy+DBQT=fecQrj3P2A5CRq-ouFucgLXPQA@mail.gmail.com>
 <21758.545.340073.931092@zaphod.ms25.net>
Message-ID: <20150310102453.053b4bba@mydesq2.domain.cxm>

On Mon, 9 Mar 2015 21:27:13 +0100
Reinhard Kotucha <reinhard.kotucha at web.de> wrote:

> On 2015-03-09 at 18:24:57 +0100, luigi scarso wrote:
> 
>  > On Mon, Mar 9, 2015 at 5:28 PM, Jonas Olson <jolson at kth.se> wrote:
>  > 
>  > > Den 2015-03-09 16:35, Ulrike Fischer skrev:
>  > >
>  > >> But imho the source of your problem is the misuse of \section.
>  > >> Why are you using it if you actually don't want a section
>  > >> title? Why don't you define a command that is more suitable?
>  > >>
>  > >
>  > > I don't really know enough to construct a suitable command
>  > > myself, especially things like adding a vertical space above the
>  > > heading iff it is not the first thing on the page, and adding a
>  > > vertical space below the heading iff it has a text body.
>  > >
>  > > Jonas
>  > >
>  > something like this ?
>  > \documentclass[]{article}
>  > 
>  > \begin{document}
>  > \section{A}\vfill\eject
>  > \section{A}\vfill\eject
>  > \section{A}\vfill\eject
>  > \section{A}\vfill\eject
>  [....]
>  > \section{A}\vfill\eject
>  > \section{A}\vfill\eject
>  > \section{A}\vfill\eject
>  > \section{A}\vfill\eject
>  > 
>  > \end{document}
> 
> Well, as far as I understand Jonas, not all sections are empty.  But
> if there are too many empty sections on one page, no pagebreak occurs
> and you get a big overfull \hbox.  Thus, I suppose that DPC's
> suggestion to insert pagebreaks manually (\clearpage) is an
> appropriate solution.
> 
> Ulrike, the reason Jonas [ab]uses \section is because this macro
> contains discardable vertical space i.e., the space above the section
> header disappears if the section begins at the top of a page.  This is
> exactly what Jonas wants, hence using \section is appropriate.
> 
> Writing a dedicated macro is certainly possible.  But unless the
> document is large or has to be revised in the future, inserting
> \clearpage manually where needed makes sense.  I suppose that Jonas
> needs a solution soon and is not interested in an everlasting reseach
> project.
> 
> Jonas, does \clearpage, as suggested by David, solve your problem?
> 
> Regards,
>   Reinhard

We don't know the exact nature of the Jonas' Funeral Program, but I'd
be willing to bet it's no more than ten pages long (5K words), and it's
clear that Jonas wants a strong degree of control over page placement
and page breaks. As such, *TeX is the wrong tool to be using. *TeX is
optimized to deliver stylistic consistency throughout a document, with
little or no human intervention on individual pages, and is
traditionally most necessary in long documents.

I bet that if Jonas did this task in Inkscape and/or Scribus, he'd have
the task complete in four hours, and it would be laid out *exactly* as
he wants, with no compromises.

https://inkscape.org/en/

http://wiki.scribus.net/canvas/Scribus

SteveT

Steve Litt                *  http://www.troubleshooters.com/
Troubleshooting Training  *  Human Performance


From elie.roux at telecom-bretagne.eu  Tue Mar 10 20:48:54 2015
From: elie.roux at telecom-bretagne.eu (=?UTF-8?B?w4lsaWUgUm91eA==?=)
Date: Tue, 10 Mar 2015 20:48:54 +0100
Subject: [luatex] feature request: absolute path of main tex file
Message-ID: <54FF4AA6.8030802@telecom-bretagne.eu>

Dear All,

For a project, I need to make a few convoluted checks and treatments
before including some files. The problem comes when the path to this
included file is relative, and when compilation occurs outside the
directory of the main .tex file. In this case \jobname is just the
filename, and lfs.currentdir() is the directory where the compilation
occurs, but it's not enough to know where the main .tex file really is.

Is there a way to get to know the absolute directory of the main .tex
file in luatex (argument string parsing maybe?)? If not would it be
reasonable to create one?

Thank you,
-- 
Elie

From luigi.scarso at gmail.com  Tue Mar 10 21:34:12 2015
From: luigi.scarso at gmail.com (luigi scarso)
Date: Tue, 10 Mar 2015 21:34:12 +0100
Subject: [luatex] feature request: absolute path of main tex file
In-Reply-To: <54FF4AA6.8030802@telecom-bretagne.eu>
References: <54FF4AA6.8030802@telecom-bretagne.eu>
Message-ID: <CAG5iGsALubS-MfjuO16bA5v3KxY_MgLT091CSJdR-z5Mem=5xg@mail.gmail.com>

On Tue, Mar 10, 2015 at 8:48 PM, ?lie Roux <elie.roux at telecom-bretagne.eu>
wrote:

> Dear All,
>
> For a project, I need to make a few convoluted checks and treatments
> before including some files. The problem comes when the path to this
> included file is relative, and when compilation occurs outside the
> directory of the main .tex file. In this case \jobname is just the
> filename, and lfs.currentdir() is the directory where the compilation
> occurs, but it's not enough to know where the main .tex file really is.
>
> Is there a way to get to know the absolute directory of the main .tex
> file in luatex (argument string parsing maybe?)? If not would it be
> reasonable to create one?
>
> Thank you,
> --
> Elie
>

can you try with
\directlua{
    print()
    print("currentdir:"..lfs.currentdir())
    texio.write_nl("")
    for k, v in ipairs(arg) do
        texio.write_nl(k .. " " .. v)
    end
    texio.write_nl("")

}



\bye
-- 
luigi
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://tug.org/pipermail/luatex/attachments/20150310/3c647155/attachment-0001.html>

From elie.roux at telecom-bretagne.eu  Tue Mar 10 21:45:05 2015
From: elie.roux at telecom-bretagne.eu (=?UTF-8?B?w4lsaWUgUm91eA==?=)
Date: Tue, 10 Mar 2015 21:45:05 +0100
Subject: [luatex] feature request: absolute path of main tex file
In-Reply-To: <CAG5iGsALubS-MfjuO16bA5v3KxY_MgLT091CSJdR-z5Mem=5xg@mail.gmail.com>
References: <54FF4AA6.8030802@telecom-bretagne.eu>
 <CAG5iGsALubS-MfjuO16bA5v3KxY_MgLT091CSJdR-z5Mem=5xg@mail.gmail.com>
Message-ID: <54FF57D1.9040403@telecom-bretagne.eu>

Le 10/03/2015 21:34, luigi scarso a ?crit :
> \directlua{
>     print()
>     print("currentdir:"..lfs.currentdir())
>     texio.write_nl("")
>     for k, v in ipairs(arg) do
>         texio.write_nl(k .. " " .. v)
>     end
>     texio.write_nl("")
>     
> }
> 
> 
> 
> \bye

Thanks, it will require some more tests (for instance the arg must end
by \jobname.xxx, etc.), but I can handle it from now.

Thank you very much!
-- 
Elie

From luigi.scarso at gmail.com  Tue Mar 10 23:35:59 2015
From: luigi.scarso at gmail.com (luigi scarso)
Date: Tue, 10 Mar 2015 23:35:59 +0100
Subject: [luatex] feature request: absolute path of main tex file
In-Reply-To: <54FF57D1.9040403@telecom-bretagne.eu>
References: <54FF4AA6.8030802@telecom-bretagne.eu>
 <CAG5iGsALubS-MfjuO16bA5v3KxY_MgLT091CSJdR-z5Mem=5xg@mail.gmail.com>
 <54FF57D1.9040403@telecom-bretagne.eu>
Message-ID: <CAG5iGsB95i4jjSz=uPT_i0r3mRNqKh_GAdkHU6_oXs_yJ-FZaA@mail.gmail.com>

On Tue, Mar 10, 2015 at 9:45 PM, ?lie Roux <elie.roux at telecom-bretagne.eu>
wrote:

> Le 10/03/2015 21:34, luigi scarso a ?crit :
> > \directlua{
> >     print()
> >     print("currentdir:"..lfs.currentdir())
> >     texio.write_nl("")
> >     for k, v in ipairs(arg) do
> >         texio.write_nl(k .. " " .. v)
> >     end
> >     texio.write_nl("")
> >
> > }
> >
> >
> >
> > \bye
>
> Thanks, it will require some more tests (for instance the arg must end
> by \jobname.xxx, etc.), but I can handle it from now.
>
> Thank you very much!
> --
> Elie
>
another one from Hans
\catcode`\%=11

\directlua{
    function fulljobname()
        local p = nil
        for k, v in ipairs(arg) do
            if not string.find(v,"^%-") then
                p = v
                break
            end
        end
        if p then
            p = string.gsub(p,"%-%.","%%1")
            if string.find(p,tex.jobname) then
                return p
            end
        end
        return tex.jobname
    end
    texio.write_nl("")
    texio.write_nl(fulljobname())
    texio.write_nl("")
}

\bye

-- 
luigi
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://tug.org/pipermail/luatex/attachments/20150310/c7ce7390/attachment.html>

From reinhard.kotucha at web.de  Wed Mar 11 00:10:57 2015
From: reinhard.kotucha at web.de (Reinhard Kotucha)
Date: Wed, 11 Mar 2015 00:10:57 +0100
Subject: [luatex] Refuses to page break between section headings
In-Reply-To: <7b4qx5vbz8wn$.dlg@nililand.de>
References: <54FD655C.4040207@kth.se>
 <CAEW6iOizcECQkb06-JdsY7_DgDZnSetc0Dta6do-W3_vWa6O2w@mail.gmail.com>
 <54FD7BC8.3090305@kth.se>	<12es7d5fdfytj.dlg@nililand.de>
 <54FDCA42.9060304@kth.se>	<j3larnoq5vp7.dlg@nililand.de>
 <54FE002B.7070909@kth.se>	<1m2yxlmrszmsa.dlg@nililand.de>
 <21758.8173.913475.558069@zaphod.ms25.net>	<7b4qx5vbz8wn$.dlg@nililand.de>
Message-ID: <21759.31233.818511.82404@zaphod.ms25.net>

On 2015-03-09 at 23:45:14 +0100, Ulrike Fischer wrote:

 > Am Mon, 9 Mar 2015 23:34:21 +0100 schrieb Reinhard Kotucha:
 > 
 > >  > I hadn't seen that you are creating an one-time, rather small
 > >  > which is needed soon document. In this case both \clearpage
 > >  > (forced pagebreak) or \filbreak (allows a break) is ok.
 > > 
 > > Ulrike,
 > > at a first glance is seems that \filbreak is the best solution
 > > because one could consider to redefine the section command:
 > > 
 > >   \newcommand\Section[1]{\section{#1}\filbreak}
 > > 
 > > It works like a charm if the paragraph fits on the current page,
 > > but unfortunately it's moved to the next page if there isn't
 > > enough space on the current page.
 > 
 > If I wanted to insert \filbreak automatically (and not only when
 > there is no text after a section) I would put it before the
 > \section.

Yes,

  \newcommand\Section[1]{\filbreak\section{#1}}

is better than

  \newcommand\Section[1]{\section{#1}\filbreak}

but it's not perfect.  In both cases the whole paragraph is pushed to
the next page.  If \filbreak comes before \section, the section header
is pushed to the next page too.  This is the only difference.  TeX
doesn't make any attempt to split the paragraph.

Regards,
  Reinhard

-- 
------------------------------------------------------------------
Reinhard Kotucha                            Phone: +49-511-3373112
Marschnerstr. 25
D-30167 Hannover                    mailto:reinhard.kotucha at web.de
------------------------------------------------------------------

From elie.roux at telecom-bretagne.eu  Wed Mar 11 08:59:01 2015
From: elie.roux at telecom-bretagne.eu (=?UTF-8?B?w4lsaWUgUm91eA==?=)
Date: Wed, 11 Mar 2015 08:59:01 +0100
Subject: [luatex] feature request: absolute path of main tex file
In-Reply-To: <CAG5iGsB95i4jjSz=uPT_i0r3mRNqKh_GAdkHU6_oXs_yJ-FZaA@mail.gmail.com>
References: <54FF4AA6.8030802@telecom-bretagne.eu>
 <CAG5iGsALubS-MfjuO16bA5v3KxY_MgLT091CSJdR-z5Mem=5xg@mail.gmail.com>
 <54FF57D1.9040403@telecom-bretagne.eu>
 <CAG5iGsB95i4jjSz=uPT_i0r3mRNqKh_GAdkHU6_oXs_yJ-FZaA@mail.gmail.com>
Message-ID: <54FFF5C5.6040908@telecom-bretagne.eu>

> another one from Hans

Great, thank you very much!
-- 
Elie

From luatex at nililand.de  Wed Mar 11 18:36:42 2015
From: luatex at nililand.de (Ulrike Fischer)
Date: Wed, 11 Mar 2015 18:36:42 +0100
Subject: [luatex] Problematic "tounicode" entries for ligatures in
	luatex-cache
References: <CABNxngPFWU9XWj7SSKkh72hEYv-0kN_Prn1899VEZWFxCxzSFQ@mail.gmail.com>
Message-ID: <1p0crv4vn7qrc$.dlg@nililand.de>

Am Tue, 10 Mar 2015 00:34:27 +0100 schrieb Valery Yundin:

> Hi,
> 
> There seems to be a problem in how cache files for fonts are saved.
> 
> The font loader (?) writes "tounicode" entries as numbers if they do
> not contain digits A-F. Which means that if such entry has leading
> zeros, they will be lost, because Lua ignores leading zeros in numeric
> literals. This leads to wrong CMap entries in PDF and
> non-copy-pasteable glyphs. (Apparently this problem does not affect
> single code point glyphs, probably because string format has a minimum
> width of 4)
> 
> For example Carlito font has ligature for "ti", which doesn't have
> standard unicode code point and has to be represented as a pair of "t"
> and "i'.
> 
> The luatex generates the following cache file
> $HOME/.cache/texmf/fonts/luatex-cache/generic/fonts/otf/carlito-regular.lua:
> ["tounicode"]={
> ...
> [2210]=00740069,
> ...
> 

I tried with a current texlive 2014 on windows and luaotfload
2014/08/10 v2.5-4 OpenType layout system
, and also in a current
miktex and got with both systems the entry

[2210]="00740069",

in carlito-regular.lua. I had no problems to copy & paste the
ligature: Beautiful fjord

Is your system up-to-date?

-- 
Ulrike Fischer 
http://www.troubleshooting-tex.de/


From phg at phi-gamma.net  Thu Mar 12 00:57:14 2015
From: phg at phi-gamma.net (Philipp Gesang)
Date: Thu, 12 Mar 2015 00:57:14 +0100
Subject: [luatex] Problematic "tounicode" entries for ligatures in
 luatex-cache
In-Reply-To: <1p0crv4vn7qrc$.dlg@nililand.de>
References: <CABNxngPFWU9XWj7SSKkh72hEYv-0kN_Prn1899VEZWFxCxzSFQ@mail.gmail.com>
 <1p0crv4vn7qrc$.dlg@nililand.de>
Message-ID: <20150311235714.GC28058@acheron>

???<Datum: Wednesday, 11. March 2015>???<Von: Ulrike Fischer>???

> Am Tue, 10 Mar 2015 00:34:27 +0100 schrieb Valery Yundin:
> 
> > There seems to be a problem in how cache files for fonts are saved.
> > 
> > The font loader (?) writes "tounicode" entries as numbers if they do
> > not contain digits A-F. Which means that if such entry has leading
> > zeros, they will be lost, because Lua ignores leading zeros in numeric
> > literals. This leads to wrong CMap entries in PDF and
> > non-copy-pasteable glyphs. (Apparently this problem does not affect
> > single code point glyphs, probably because string format has a minimum
> > width of 4)
> > 
> > For example Carlito font has ligature for "ti", which doesn't have
> > standard unicode code point and has to be represented as a pair of "t"
> > and "i'.
> > 
> > The luatex generates the following cache file
> > $HOME/.cache/texmf/fonts/luatex-cache/generic/fonts/otf/carlito-regular.lua:
> > ["tounicode"]={
> > ...
> > [2210]=00740069,
> > ...
> > 
> 
> I tried with a current texlive 2014 on windows and luaotfload
> 2014/08/10 v2.5-4 OpenType layout system
> , and also in a current
> miktex and got with both systems the entry
> 
> [2210]="00740069",
> 
> in carlito-regular.lua. I had no problems to copy & paste the
> ligature: Beautiful fjord
> 
> Is your system up-to-date?

That?s the right question. We had a similar discussion a while
ago on the Context list:

    http://www.ntg.nl/pipermail/ntg-context/2013/073958.html

The problem was fixed then, IIRC.

If it persists or resurfaced somewhere, please post the output of
``luaotfload-tool --version``.

Best,
Philipp

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 819 bytes
Desc: not available
URL: <http://tug.org/pipermail/luatex/attachments/20150312/348aef22/attachment.bin>

From yuvalery at gmail.com  Thu Mar 12 11:31:46 2015
From: yuvalery at gmail.com (Valery Yundin)
Date: Thu, 12 Mar 2015 11:31:46 +0100
Subject: [luatex] Problematic "tounicode" entries for ligatures in
	luatex-cache
In-Reply-To: <CABNxngPFWU9XWj7SSKkh72hEYv-0kN_Prn1899VEZWFxCxzSFQ@mail.gmail.com>
References: <CABNxngPFWU9XWj7SSKkh72hEYv-0kN_Prn1899VEZWFxCxzSFQ@mail.gmail.com>
Message-ID: <CABNxngPuuHwQsm-+GcbYCayktrPz4=W=kZwV_TBmTS5_ujwMNw@mail.gmail.com>

Hi,

I missed that discussion when I was investigating the problem.

It seems that the openSUSE TeX packages are quite outdated and that is
the reason the bug it still there, thanks for confirming that it works
for you!

Cheers,
Valery Yundin.


> That?s the right question. We had a similar discussion a while
> ago on the Context list:
>
>    http://www.ntg.nl/pipermail/ntg-context/2013/073958.html
>
> The problem was fixed then, IIRC.
>
> If it persists or resurfaced somewhere, please post the output of
> ``luaotfload-tool --version``.


From simon.b.may at gmail.com  Fri Mar 13 03:49:12 2015
From: simon.b.may at gmail.com (Simon May)
Date: Fri, 13 Mar 2015 03:49:12 +0100
Subject: [luatex] Wrong placement of \int\limits in Lua(La)TeX
In-Reply-To: <54F7160A.1020707@gmail.com>
References: <54F7160A.1020707@gmail.com>
Message-ID: <55025028.7010705@gmail.com>

Are these known issues?
With such greatly differing output between TeX engines, how is one
expected to write portable TeX documents?


On 04.03.2015 15:26, Simon May wrote:
> (Apologies for breaking the thread ? I hadn't subscribed to the list
> before.)
> 
> I agree that it's not trivial to decide where the limits should actually
> be, but I guess many things in typesetting are a matter of taste.
> However, I think anyone would agree that
> ? Using the same TeX input, the output of Lua(La)TeX and Xe(La)TeX
>   should be (at least qualitatively) the same. If I decide that I want
>   or need to use a different engine for a document, I want to change
>   as little as possible (preferably nothing) in my document as a result.
>   If a change of engine produces significantly different output, that's
>   always a hint that there must be a bug somewhere.
> ? "\limits" should mean that the limits of the operator are placed above
>   and below instead of to the sides. Whether one thinks that the
>   placement with unicode-math looks good or not, the limits are so far
>   to the side that it cannot really be said that they are placed above
>   and below.
> 
> Moreover, I really do think that the current placement with unicode-math
> looks just bad. The limits are floating somewhere to the upper
> right/upper left with barely any attachment to the operator they belong
> to. Originally, I thought that the placement and spacing demonstrated at
> https://tex.stackexchange.com/a/103925
> could universally agreed upon to be good-looking (and definitely better
> than the same document typeset with LuaLaTeX).
> 
> Now that I'm looking more closely at some tests, it seems that there is
> way too much space inserted after an integral sign with LuaLaTeX.
> Looking at the following TeX source:
> 
> \documentclass{scrartcl}
> \usepackage{unicode-math}
> \begin{document}
> \[
> 	A = \int f(x) \,\mathrm{d}x
> \]
> \end{document}
> 
> It seems like the amount of space between the integral sign and f(x) is
> almost doubled compared to the version without unicode-math. It actually
> looks really ugly. Perhaps this issue is related?
> 
> 
> Ulrike Fischer wrote:
>> Am Tue, 3 Mar 2015 20:03:33 +0100 schrieb Simon May:
>>
>>> Hello,
>>>
>>> with unicode-math and LuaLaTeX, the placement of the limits using
>>> \int\limits is incorrect. The limits are placed too far to the
>>> right. As
>>> discussed in the comments at
>>> https://tex.stackexchange.com/a/103925/51235
>>> this issue does not occur with XeTeX. There is also a bug at
>>> http://tracker.luatex.org/view.php?id=729
>>> that might refer to this same issue. Is this indeed a bug in LuaTeX
>>> and
>>> are there perhaps any workarounds?
>>> I'm using LuaTeX beta-0.79.1 (TeX Live 2014/Debian) (rev 4971).
>>>
>>> Below is a demonstration of this issue. Producing the document will
>>> show
>>> the incorrect placement of the limits. Removing the line
>>> "\usepackage{unicode-math}" will show the expected output.
>>>
>>>
>>> \documentclass{scrartcl}
>>> \usepackage{unicode-math}
>>> \begin{document}
>>> \[
>>> 	\int_a^b
>>> 	\int\limits_a^b
>>> \]
>>> \end{document}
>>
>> The placement is certainly different than with xelatex or without
>> unicode-math. But I do find it difficult to describe exactly where
>> the symbol should placed and I often don't like the placement in
>> pdflatex. It also depends a bit on the actual font. You can always
>> move the subscripts a bit if you want:
>>
>> \documentclass{scrartcl}
>> \usepackage{unicode-math}
>> %\setmathfont{Cambria Math}
>> \begin{document}
>> \[
>> 	\int_a^b
>> 	\int\limits_{\!\!\!\!a}^{b}
>>     \int\limits_{a}^{b}
>>     \int\limits_{a}^{b=5}
>>     \int\limits_{a=1}^{b}
>>     \int\limits_{a=1}^{b=5}
>> \]
>> \end{document}
>>
>>
>>> Out of interest: Using unicode-math (even without limits) does not
>>> produce the same output in the example as the same document without
>>> unicode-math. The the size of the integral sign and the spacing of
>>> the limits changes slightly. Is this intended/expected?
>>
>> You are using different fonts. So differences are always possible.
>>
>>
>> --
>> Ulrike Fischer
>> http://www.troubleshooting-tex.de/
-------------- next part --------------
A non-text attachment was scrubbed...
Name: 0x6C294338.asc
Type: application/pgp-keys
Size: 69062 bytes
Desc: not available
URL: <http://tug.org/pipermail/luatex/attachments/20150313/f285cde1/attachment-0002.bin>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 819 bytes
Desc: OpenPGP digital signature
URL: <http://tug.org/pipermail/luatex/attachments/20150313/f285cde1/attachment-0003.bin>

From joseph.wright at morningstar2.co.uk  Fri Mar 13 08:30:32 2015
From: joseph.wright at morningstar2.co.uk (Joseph Wright)
Date: Fri, 13 Mar 2015 07:30:32 +0000
Subject: [luatex] Wrong placement of \int\limits in Lua(La)TeX
In-Reply-To: <55025028.7010705@gmail.com>
References: <54F7160A.1020707@gmail.com> <55025028.7010705@gmail.com>
Message-ID: <55029218.1040608@morningstar2.co.uk>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA512

On 13/03/2015 02:49, Simon May wrote:
> Are these known issues? With such greatly differing output between
> TeX engines, how is one expected to write portable TeX documents?

LuaTeX is specifically marked as not 100% back-compatible with Knuth's
TeX and the team behind it reserve the right to make additional
changes to behaviours. At the same time, it's also still in
development and so bugs are to be expected. Unicode math font handling
is still in its infancy and it's not a surprise that XeTeX and LuaTeX
can show differing outcomes.
- --
Joseph Wright

-----BEGIN PGP SIGNATURE-----
Version: GnuPG/MacGPG2 v2
Comment: GPGTools - https://gpgtools.org

iQEcBAEBCgAGBQJVApIYAAoJEFn7VsXH86MMPusH/jq60w6+2RKTGNM0FSv0OaZN
vDXxRdswKAfQ7cESCer82AAbAui8JJCZJrUle3yLuTN7CW0p2TUFBMGnVq4SOyXp
UHgWsssuuz744yyObTlcM+Tm5yV4WHgcT49sogTxDc2/aXMrD6NQsRKN52W2MbIP
cG0D8lOwIo+S7Oy/ehiztHKjpT/AgiH6JersQhfg21wwEoOR+4LlcsoMgvqofwZN
2O0j2jyVhZG0pi/HlPAgxfxsGhXldysjICU2U+AZqjLOxNVUZfeplDLCbFC9iOcL
7qGSJs+pGHwSkstj0xnh4FvSnkxKrKc639IOx+gDUlf3Za1uUJbNjWuzHtIGQwg=
=TtEV
-----END PGP SIGNATURE-----

From dirk.laurie at gmail.com  Sat Mar 14 10:57:36 2015
From: dirk.laurie at gmail.com (Dirk Laurie)
Date: Sat, 14 Mar 2015 11:57:36 +0200
Subject: [luatex] Verbatim printing of Lua strings
Message-ID: <CABcj=tk1TH16RYVrj9Nw+UAHFOfGKXVb9NdXpXHar9F043F=qA@mail.gmail.com>

I have a Lua script that produces a Lua string like this:

    str = [[
1. First line.
2. Second line.
]]

I wish to achieve the effect that

\begin{verbatim}
1. First line.
2. Second line.
\end{verbatim}

would have produced. My attempt has been to make the module
produce

    vstr = [[
\begin{verbatim}
1. First line.
2. Second line.
\end{verbatim}
]]

and code `\directlua{tex.print(vstr)}`. But the end-of-line is not respected.

I can't find the string `verbatim` in the LuaTeX manual. Under what word
should I search for a trick that can achieve what I need?

From pragma at wxs.nl  Sat Mar 14 13:00:53 2015
From: pragma at wxs.nl (Hans Hagen)
Date: Sat, 14 Mar 2015 13:00:53 +0100
Subject: [luatex] Verbatim printing of Lua strings
In-Reply-To: <CABcj=tk1TH16RYVrj9Nw+UAHFOfGKXVb9NdXpXHar9F043F=qA@mail.gmail.com>
References: <CABcj=tk1TH16RYVrj9Nw+UAHFOfGKXVb9NdXpXHar9F043F=qA@mail.gmail.com>
Message-ID: <550422F5.2030600@wxs.nl>

On 3/14/2015 10:57 AM, Dirk Laurie wrote:
> I have a Lua script that produces a Lua string like this:
>
>      str = [[
> 1. First line.
> 2. Second line.
> ]]
>
> I wish to achieve the effect that
>
> \begin{verbatim}
> 1. First line.
> 2. Second line.
> \end{verbatim}
>
> would have produced. My attempt has been to make the module
> produce
>
>      vstr = [[
> \begin{verbatim}
> 1. First line.
> 2. Second line.
> \end{verbatim}
> ]]
>
> and code `\directlua{tex.print(vstr)}`. But the end-of-line is not respected.
>
> I can't find the string `verbatim` in the LuaTeX manual. Under what word
> should I search for a trick that can achieve what I need?

this is because by default a newline becomes a space

you need to change the catcode of the newline character (and probably 
more if you want verbatim but that is macro package dependent so not 
relevant here) or alternatively print line by line and add a \par at the 
end of each line

Hans

-----------------------------------------------------------------
                                           Hans Hagen | PRAGMA ADE
               Ridderstraat 27 | 8061 GH Hasselt | The Netherlands
     tel: 038 477 53 69 | voip: 087 875 68 74 | www.pragma-ade.com
                                              | www.pragma-pod.nl
-----------------------------------------------------------------

From dirk.laurie at gmail.com  Sat Mar 14 13:15:10 2015
From: dirk.laurie at gmail.com (Dirk Laurie)
Date: Sat, 14 Mar 2015 14:15:10 +0200
Subject: [luatex] Verbatim printing of Lua strings
In-Reply-To: <550422F5.2030600@wxs.nl>
References: <CABcj=tk1TH16RYVrj9Nw+UAHFOfGKXVb9NdXpXHar9F043F=qA@mail.gmail.com>
 <550422F5.2030600@wxs.nl>
Message-ID: <CABcj=tk0AnsTjD2vFtYR8oRVJvCKBtpyYrwuJdpo0PgEgkYsCw@mail.gmail.com>

2015-03-14 14:00 GMT+02:00 Hans Hagen <pragma at wxs.nl>:
> On 3/14/2015 10:57 AM, Dirk Laurie wrote:

>> I can't find the string `verbatim` in the LuaTeX manual. Under what word
>> should I search for a trick that can achieve what I need?
>
>
> this is because by default a newline becomes a space
>
> you need to change the catcode of the newline character (and probably more
> if you want verbatim but that is macro package dependent so not relevant
> here) or alternatively print line by line and add a \par at the end of each
> line

I messed around a bit with \catcode but since all of Lua is available,
I found it easier to do the line-by-line approach using `gsub`. It's as
easy as this (inside a Lua script file):

    str:gsub("[^\n]+","\\verb$%0$\\\\")

Thanks.

Dirk

From elie.roux at telecom-bretagne.eu  Sat Mar 14 15:17:12 2015
From: elie.roux at telecom-bretagne.eu (=?UTF-8?B?w4lsaWUgUm91eA==?=)
Date: Sat, 14 Mar 2015 15:17:12 +0100
Subject: [luatex] fine grained discretionary's penalty
Message-ID: <550442E8.3030301@telecom-bretagne.eu>

Dear All,

First I would like to remind a bug I've reported here[1] and that has
already been discussed on the list here[2]. It starts to be blocking for
me... do you think it's possible for someone who doesn't really know
LuaTeX codebase to work on it? If not, are you planning to look at it?
Is a bounty something imaginable?

Also, for a quite complex project, I need to assign different penalties
to discretionaries of the same paragraph. I've asked on [3], but it
doesn't seem possible with PdfTeX. Is there currently a way to do so in
LuaTeX (by hacking the nodes)? If not, would it be doable, like by
adding a 'penalty' field to disc nodes, with \hyphenpenalty (or any
other relevant value) assigned to it be default, but changeable?

Thank you!

[1] http://tracker.luatex.org/view.php?id=842
[2] http://tug.org/pipermail/luatex/2013-July/004509.html
[3]
http://tex.stackexchange.com/questions/233061/assign-penalty-to-one-discretionary-not-all-paragraph
-- 
Elie

From elie.roux at telecom-bretagne.eu  Sat Mar 14 17:57:10 2015
From: elie.roux at telecom-bretagne.eu (=?UTF-8?B?w4lsaWUgUm91eA==?=)
Date: Sat, 14 Mar 2015 17:57:10 +0100
Subject: [luatex] fine grained discretionary's penalty
In-Reply-To: <550442E8.3030301@telecom-bretagne.eu>
References: <550442E8.3030301@telecom-bretagne.eu>
Message-ID: <55046866.8060103@telecom-bretagne.eu>

Le 14/03/2015 15:17, ?lie Roux a ?crit :
> Dear All,
> 
> First I would like to remind a bug I've reported here[1] and that has
> already been discussed on the list here[2]. It starts to be blocking for
> me... do you think it's possible for someone who doesn't really know
> LuaTeX codebase to work on it?

The answer seems to be yes: this patch fixes the issue for my case:

Index: source/texk/web2c/luatexdir/tex/linebreak.w
===================================================================
--- source/texk/web2c/luatexdir/tex/linebreak.w	(r?vision 5187)
+++ source/texk/web2c/luatexdir/tex/linebreak.w	(copie de travail)
@@ -1950,7 +1950,7 @@
                 /* The following code knows that discretionary texts
contain
                    only character nodes, kern nodes, box nodes, and rule
                    nodes. */
-                if (second_pass) {
+                if (second_pass || subtype(cur_p) == discretionary_disc) {
                     int actual_penalty = hyphen_penalty;
                     if (subtype(cur_p) == automatic_disc)
                         actual_penalty = ex_hyphen_penalty;

Is it ok or are there other subtypes that need to be included?

Thank you,
-- 
Elie

From elie.roux at telecom-bretagne.eu  Sat Mar 14 19:25:50 2015
From: elie.roux at telecom-bretagne.eu (=?UTF-8?B?w4lsaWUgUm91eA==?=)
Date: Sat, 14 Mar 2015 19:25:50 +0100
Subject: [luatex] fine grained discretionary's penalty
In-Reply-To: <550442E8.3030301@telecom-bretagne.eu>
References: <550442E8.3030301@telecom-bretagne.eu>
Message-ID: <55047D2E.5090507@telecom-bretagne.eu>

> Also, for a quite complex project, I need to assign different penalties
> to discretionaries of the same paragraph. I've asked on [3], but it
> doesn't seem possible with PdfTeX. Is there currently a way to do so in
> LuaTeX (by hacking the nodes)? If not, would it be doable, like by
> adding a 'penalty' field to disc nodes, with \hyphenpenalty (or any
> other relevant value) assigned to it be default, but changeable?

Attached is a patch for this feature. It is very small and
non-intrusive: it basically just sets a new "penalty" field to disc
nodes, always set to 0. If the field value is 0 while line breaking, it
is ignored and the penalty associated to the disc is hyphenpenalty or
exhyphenpenalty. But if the field value is non-zero, then line breaking
uses it as the penalty associated to the disc. The value needs to be set
in a pre_linebreak_filter callback.

Attached is also a small Plain TeX example demonstrating the new feature.

It would be a huge help for me as it unlocks totally new possibilities.

What do you think?

Thank you,
-- 
Elie
-------------- next part --------------
A non-text attachment was scrubbed...
Name: new_disc_penalty.patch
Type: text/x-patch
Size: 5646 bytes
Desc: not available
URL: <http://tug.org/pipermail/luatex/attachments/20150314/1e70b5eb/attachment-0001.bin>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: mwe.tex
Type: application/x-tex
Size: 413 bytes
Desc: not available
URL: <http://tug.org/pipermail/luatex/attachments/20150314/1e70b5eb/attachment-0001.tex>

From pragma at wxs.nl  Sun Mar 15 10:14:46 2015
From: pragma at wxs.nl (Hans Hagen)
Date: Sun, 15 Mar 2015 10:14:46 +0100
Subject: [luatex] fine grained discretionary's penalty
In-Reply-To: <55046866.8060103@telecom-bretagne.eu>
References: <550442E8.3030301@telecom-bretagne.eu>
 <55046866.8060103@telecom-bretagne.eu>
Message-ID: <55054D86.8020302@wxs.nl>

On 3/14/2015 5:57 PM, ?lie Roux wrote:
> Le 14/03/2015 15:17, ?lie Roux a ?crit :
>> Dear All,
>>
>> First I would like to remind a bug I've reported here[1] and that has
>> already been discussed on the list here[2]. It starts to be blocking for
>> me... do you think it's possible for someone who doesn't really know
>> LuaTeX codebase to work on it?
>
> The answer seems to be yes: this patch fixes the issue for my case:
>
> Index: source/texk/web2c/luatexdir/tex/linebreak.w
> ===================================================================
> --- source/texk/web2c/luatexdir/tex/linebreak.w	(r?vision 5187)
> +++ source/texk/web2c/luatexdir/tex/linebreak.w	(copie de travail)
> @@ -1950,7 +1950,7 @@
>                   /* The following code knows that discretionary texts
> contain
>                      only character nodes, kern nodes, box nodes, and rule
>                      nodes. */
> -                if (second_pass) {
> +                if (second_pass || subtype(cur_p) == discretionary_disc) {
>                       int actual_penalty = hyphen_penalty;
>                       if (subtype(cur_p) == automatic_disc)
>                           actual_penalty = ex_hyphen_penalty;
>
> Is it ok or are there other subtypes that need to be included?

Adding stuff at that level is not going to happen in this stage of 
freezing for texlive 2015.

I'll have a look at it but a change in such core functionality doesn't 
come easy (there are some more things possible so maybe as part of that).

Hans


-----------------------------------------------------------------
                                           Hans Hagen | PRAGMA ADE
               Ridderstraat 27 | 8061 GH Hasselt | The Netherlands
     tel: 038 477 53 69 | voip: 087 875 68 74 | www.pragma-ade.com
                                              | www.pragma-pod.nl
-----------------------------------------------------------------

From pragma at wxs.nl  Sun Mar 15 10:19:58 2015
From: pragma at wxs.nl (Hans Hagen)
Date: Sun, 15 Mar 2015 10:19:58 +0100
Subject: [luatex] fine grained discretionary's penalty
In-Reply-To: <55047D2E.5090507@telecom-bretagne.eu>
References: <550442E8.3030301@telecom-bretagne.eu>
 <55047D2E.5090507@telecom-bretagne.eu>
Message-ID: <55054EBE.10004@wxs.nl>

On 3/14/2015 7:25 PM, ?lie Roux wrote:
>> Also, for a quite complex project, I need to assign different penalties
>> to discretionaries of the same paragraph. I've asked on [3], but it
>> doesn't seem possible with PdfTeX. Is there currently a way to do so in
>> LuaTeX (by hacking the nodes)? If not, would it be doable, like by
>> adding a 'penalty' field to disc nodes, with \hyphenpenalty (or any
>> other relevant value) assigned to it be default, but changeable?
>
> Attached is a patch for this feature. It is very small and
> non-intrusive: it basically just sets a new "penalty" field to disc
> nodes, always set to 0. If the field value is 0 while line breaking, it
> is ignored and the penalty associated to the disc is hyphenpenalty or
> exhyphenpenalty. But if the field value is non-zero, then line breaking
> uses it as the penalty associated to the disc. The value needs to be set
> in a pre_linebreak_filter callback.
>
> Attached is also a small Plain TeX example demonstrating the new feature.
>
> It would be a huge help for me as it unlocks totally new possibilities.
>
> What do you think?

i'll check it but as we now need to keep experimental and trunk a bit in 
sync it will be end-of-month before something might show up in expermental

Hans

-----------------------------------------------------------------
                                           Hans Hagen | PRAGMA ADE
               Ridderstraat 27 | 8061 GH Hasselt | The Netherlands
     tel: 038 477 53 69 | voip: 087 875 68 74 | www.pragma-ade.com
                                              | www.pragma-pod.nl
-----------------------------------------------------------------

From dirk.laurie at gmail.com  Mon Mar 16 08:33:48 2015
From: dirk.laurie at gmail.com (Dirk Laurie)
Date: Mon, 16 Mar 2015 09:33:48 +0200
Subject: [luatex] Finding user-specific Lua binary packages
Message-ID: <CABcj=t=oYBWNbRCb6GAuTW5geMVm1brsTvfXKkh8WnayXvrsxg@mail.gmail.com>

I'm using luatex as installed by Ubuntu 14.04 LTS.

A Lua script loaded by `luatex` inside`\directlua' does not consult
package.path and package.cpath. It examines package.preload, and
then tries the kpse lua searcher and the kpse C searcher.

`kpsepath lua` and `kpsepath so` are not valid pathtypes, but I have
discovered that I can put Lua scripts in $HOME/texmf/scripts/lua and
`require` inside `\directlua` will find them with no need to `texhash`.

However, packages provided as shared objects are not found if put
there, and I have not discovered where in $HOME/texmf I can put them.
The manual says they are looked for in

    CLUAINPUTS=.:$SELFAUTOLOC/lib/{$progname,$engine,}/lua//

but this path seems not to provide for $HOME/texmf. I could put
a symbolic link to the .so files in `.` every time, but that really defeats
the purpose of kpse.

From luigi.scarso at gmail.com  Mon Mar 16 09:04:45 2015
From: luigi.scarso at gmail.com (luigi scarso)
Date: Mon, 16 Mar 2015 09:04:45 +0100
Subject: [luatex] Finding user-specific Lua binary packages
In-Reply-To: <CABcj=t=oYBWNbRCb6GAuTW5geMVm1brsTvfXKkh8WnayXvrsxg@mail.gmail.com>
References: <CABcj=t=oYBWNbRCb6GAuTW5geMVm1brsTvfXKkh8WnayXvrsxg@mail.gmail.com>
Message-ID: <CAG5iGsAhjtN6yn-xwm=nw7AdPQueXvTCRODHK3jJMV7EqrabPA@mail.gmail.com>

On Mon, Mar 16, 2015 at 8:33 AM, Dirk Laurie <dirk.laurie at gmail.com> wrote:

> I'm using luatex as installed by Ubuntu 14.04 LTS.
>
> A Lua script loaded by `luatex` inside`\directlua' does not consult
> package.path and package.cpath. It examines package.preload, and
> then tries the kpse lua searcher and the kpse C searcher.
>
> `kpsepath lua` and `kpsepath so` are not valid pathtypes, but I have
> discovered that I can put Lua scripts in $HOME/texmf/scripts/lua and
> `require` inside `\directlua` will find them with no need to `texhash`.
>
> However, packages provided as shared objects are not found if put
> there, and I have not discovered where in $HOME/texmf I can put them.
> The manual says they are looked for in
>
>     CLUAINPUTS=.:$SELFAUTOLOC/lib/{$progname,$engine,}/lua//
>
> but this path seems not to provide for $HOME/texmf. I could put
> a symbolic link to the .so files in `.` every time, but that really defeats
> the purpose of kpse.
>

here
$ kpsewhere core.so
/opt/luatex/standalone-mkiv-new/tex/texmf-linux-64/bin/lib/luatex/lua/swiglib/qpdf/5.0.1/core.so


-- 
luigi
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://tug.org/pipermail/luatex/attachments/20150316/8ac505c1/attachment.html>

From dirk.laurie at gmail.com  Mon Mar 16 10:31:06 2015
From: dirk.laurie at gmail.com (Dirk Laurie)
Date: Mon, 16 Mar 2015 11:31:06 +0200
Subject: [luatex] Finding user-specific Lua binary packages
In-Reply-To: <CAG5iGsAhjtN6yn-xwm=nw7AdPQueXvTCRODHK3jJMV7EqrabPA@mail.gmail.com>
References: <CABcj=t=oYBWNbRCb6GAuTW5geMVm1brsTvfXKkh8WnayXvrsxg@mail.gmail.com>
 <CAG5iGsAhjtN6yn-xwm=nw7AdPQueXvTCRODHK3jJMV7EqrabPA@mail.gmail.com>
Message-ID: <CABcj=tkoveomJXQkVAKQPJV5MKR0xCrmapDkaBXovSoYxTf0+Q@mail.gmail.com>

2015-03-16 10:04 GMT+02:00 luigi scarso <luigi.scarso at gmail.com>:
> On Mon, Mar 16, 2015 at 8:33 AM, Dirk Laurie <dirk.laurie at gmail.com> wrote:
>> The manual says they are looked for in
>>
>>     CLUAINPUTS=.:$SELFAUTOLOC/lib/{$progname,$engine,}/lua//
>>
>> but this path seems not to provide for $HOME/texmf. I could put
>> a symbolic link to the .so files in `.` every time, but that really
>> defeats the purpose of kpse.
>
> here
> $ kpsewhere core.so
> /opt/luatex/standalone-mkiv-new/tex/texmf-linux-64/bin/lib/luatex/lua/swiglib/qpdf/5.0.1/core.so

This tells me that on your system,

SELFAUTOLOC=/opt/luatex/standalone-mkiv-new/tex/texmf-linux-64/bin

Presumably SELFAUTOLOC is where the TeX binaries are. On Ubuntu,
they are in /usr/bin. It is hardly proper for an ordinary user, even one with
sudo permission, to make a directory /usr/bin/lib/luatex/lua/ for personal
stuff, but I have checked that doing so, besides giving one a thrill like
sneaking into the headmaster's office when he is not there, does work.
And that /usr/local/bin/lib/luatex/lua/ and $HOME/bin/lib/luatex/lua/ do not.

So, at present the bottom line seems to be: user-written Lua scripts
are OK for LuaTeX, but user-written C modules are OK only for those
with superuser status.

From luigi.scarso at gmail.com  Mon Mar 16 11:01:13 2015
From: luigi.scarso at gmail.com (luigi scarso)
Date: Mon, 16 Mar 2015 11:01:13 +0100
Subject: [luatex] Finding user-specific Lua binary packages
In-Reply-To: <CABcj=tkoveomJXQkVAKQPJV5MKR0xCrmapDkaBXovSoYxTf0+Q@mail.gmail.com>
References: <CABcj=t=oYBWNbRCb6GAuTW5geMVm1brsTvfXKkh8WnayXvrsxg@mail.gmail.com>
 <CAG5iGsAhjtN6yn-xwm=nw7AdPQueXvTCRODHK3jJMV7EqrabPA@mail.gmail.com>
 <CABcj=tkoveomJXQkVAKQPJV5MKR0xCrmapDkaBXovSoYxTf0+Q@mail.gmail.com>
Message-ID: <CAG5iGsBj9LxNjJng1vyp5nX1N-1Wgb=r-FdgjRwYJ+7MWrQ8SQ@mail.gmail.com>

On Mon, Mar 16, 2015 at 10:31 AM, Dirk Laurie <dirk.laurie at gmail.com> wrote:

> 2015-03-16 10:04 GMT+02:00 luigi scarso <luigi.scarso at gmail.com>:
> > On Mon, Mar 16, 2015 at 8:33 AM, Dirk Laurie <dirk.laurie at gmail.com>
> wrote:
> >> The manual says they are looked for in
> >>
> >>     CLUAINPUTS=.:$SELFAUTOLOC/lib/{$progname,$engine,}/lua//
> >>
> >> but this path seems not to provide for $HOME/texmf. I could put
> >> a symbolic link to the .so files in `.` every time, but that really
> >> defeats the purpose of kpse.
> >
> > here
> > $ kpsewhere core.so
> >
> /opt/luatex/standalone-mkiv-new/tex/texmf-linux-64/bin/lib/luatex/lua/swiglib/qpdf/5.0.1/core.so
>
> This tells me that on your system,
>
> SELFAUTOLOC=/opt/luatex/standalone-mkiv-new/tex/texmf-linux-64/bin
>
> Presumably SELFAUTOLOC is where the TeX binaries are. On Ubuntu,
> they are in /usr/bin. It is hardly proper for an ordinary user, even one
> with
> sudo permission, to make a directory /usr/bin/lib/luatex/lua/ for personal
> stuff, but I have checked that doing so, besides giving one a thrill like
> sneaking into the headmaster's office when he is not there, does work.
> And that /usr/local/bin/lib/luatex/lua/ and $HOME/bin/lib/luatex/lua/ do
> not.
>
> So, at present the bottom line seems to be: user-written Lua scripts
> are OK for LuaTeX, but user-written C modules are OK only for those
> with superuser status.
>
well a C modules compiled is a binary, so it could be reasonable.
But in any case
package.loadlib (libname, funcname)
should work (libname is something like /<my_path>/core.so).

-- 
luigi
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://tug.org/pipermail/luatex/attachments/20150316/f8c3f9ce/attachment-0001.html>

From dirk.laurie at gmail.com  Mon Mar 16 12:03:00 2015
From: dirk.laurie at gmail.com (Dirk Laurie)
Date: Mon, 16 Mar 2015 13:03:00 +0200
Subject: [luatex] Finding user-specific Lua binary packages
In-Reply-To: <CAG5iGsBj9LxNjJng1vyp5nX1N-1Wgb=r-FdgjRwYJ+7MWrQ8SQ@mail.gmail.com>
References: <CABcj=t=oYBWNbRCb6GAuTW5geMVm1brsTvfXKkh8WnayXvrsxg@mail.gmail.com>
 <CAG5iGsAhjtN6yn-xwm=nw7AdPQueXvTCRODHK3jJMV7EqrabPA@mail.gmail.com>
 <CABcj=tkoveomJXQkVAKQPJV5MKR0xCrmapDkaBXovSoYxTf0+Q@mail.gmail.com>
 <CAG5iGsBj9LxNjJng1vyp5nX1N-1Wgb=r-FdgjRwYJ+7MWrQ8SQ@mail.gmail.com>
Message-ID: <CABcj=tnYZGJbrKWyifDckXYYmyfyzzVJgcpeXQ+QjcViaP=E1w@mail.gmail.com>

2015-03-16 12:01 GMT+02:00 luigi scarso <luigi.scarso at gmail.com>:

> well a C modules compiled is a binary, so it could be reasonable.

I can see why LuaTeX prefers seaching via kpse. I can't see why
searching on package.path and package.cpath is completely
discarded. They should be retained as the last fallbacks in
package.searchers.

> But in any case
> package.loadlib (libname, funcname)
> should work (libname is something like /<my_path>/core.so).

That works fine for satisfying external references from C packages.
I.e. if I write a .so that needs liblapack.so, then I should loadlib that.

But It does not produce Lua-visible objects. It cannot replace
"require".

From luigi.scarso at gmail.com  Mon Mar 16 12:25:35 2015
From: luigi.scarso at gmail.com (luigi scarso)
Date: Mon, 16 Mar 2015 12:25:35 +0100
Subject: [luatex] Finding user-specific Lua binary packages
In-Reply-To: <CABcj=tnYZGJbrKWyifDckXYYmyfyzzVJgcpeXQ+QjcViaP=E1w@mail.gmail.com>
References: <CABcj=t=oYBWNbRCb6GAuTW5geMVm1brsTvfXKkh8WnayXvrsxg@mail.gmail.com>
 <CAG5iGsAhjtN6yn-xwm=nw7AdPQueXvTCRODHK3jJMV7EqrabPA@mail.gmail.com>
 <CABcj=tkoveomJXQkVAKQPJV5MKR0xCrmapDkaBXovSoYxTf0+Q@mail.gmail.com>
 <CAG5iGsBj9LxNjJng1vyp5nX1N-1Wgb=r-FdgjRwYJ+7MWrQ8SQ@mail.gmail.com>
 <CABcj=tnYZGJbrKWyifDckXYYmyfyzzVJgcpeXQ+QjcViaP=E1w@mail.gmail.com>
Message-ID: <CAG5iGsDZHGAHSRReeEm3ev43hOVbqiuGjEU8oMfSgmqXg83fcQ@mail.gmail.com>

On Mon, Mar 16, 2015 at 12:03 PM, Dirk Laurie <dirk.laurie at gmail.com> wrote:

> 2015-03-16 12:01 GMT+02:00 luigi scarso <luigi.scarso at gmail.com>:
>
> > well a C modules compiled is a binary, so it could be reasonable.
>
> I can see why LuaTeX prefers seaching via kpse. I can't see why
> searching on package.path and package.cpath is completely
> discarded. They should be retained as the last fallbacks in
> package.searchers.
>
> > But in any case
> > package.loadlib (libname, funcname)
> > should work (libname is something like /<my_path>/core.so).
>
> That works fine for satisfying external references from C packages.
> I.e. if I write a .so that needs liblapack.so, then I should loadlib that.
>
> But It does not produce Lua-visible objects. It cannot replace
> "require".
>

This works,
assuming Linux,
a core.so in
../resources/lib64/
and funcname luaopen_core

--
-- luatex has lfs
--
local function loadmod(path)
  local current_dir = lfs.currentdir()
  local f, err = lfs.chdir(path  .. "/resources/lib64/")
  if not(f) then
    print(err)
    os.exit(1)
  end
  local mod_dir = lfs.currentdir()
  local _core= package.loadlib( mod_dir .."/core.so","luaopen_core")
  if not(_core) then print("error loading core"); lfs.chdir(current_dir);
os.exit(1) end
  local __core = _core()
  lfs.chdir(current_dir)
  return  __core
end

local path

path=".."
local clibm= loadmod(path)
print(clibm.exp2f(1.23))



-- 
luigi
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://tug.org/pipermail/luatex/attachments/20150316/b0b9e570/attachment.html>

From dirk.laurie at gmail.com  Mon Mar 16 14:17:19 2015
From: dirk.laurie at gmail.com (Dirk Laurie)
Date: Mon, 16 Mar 2015 15:17:19 +0200
Subject: [luatex] Finding user-specific Lua binary packages
In-Reply-To: <CAG5iGsDZHGAHSRReeEm3ev43hOVbqiuGjEU8oMfSgmqXg83fcQ@mail.gmail.com>
References: <CABcj=t=oYBWNbRCb6GAuTW5geMVm1brsTvfXKkh8WnayXvrsxg@mail.gmail.com>
 <CAG5iGsAhjtN6yn-xwm=nw7AdPQueXvTCRODHK3jJMV7EqrabPA@mail.gmail.com>
 <CABcj=tkoveomJXQkVAKQPJV5MKR0xCrmapDkaBXovSoYxTf0+Q@mail.gmail.com>
 <CAG5iGsBj9LxNjJng1vyp5nX1N-1Wgb=r-FdgjRwYJ+7MWrQ8SQ@mail.gmail.com>
 <CABcj=tnYZGJbrKWyifDckXYYmyfyzzVJgcpeXQ+QjcViaP=E1w@mail.gmail.com>
 <CAG5iGsDZHGAHSRReeEm3ev43hOVbqiuGjEU8oMfSgmqXg83fcQ@mail.gmail.com>
Message-ID: <CABcj=t=qNDtURv0be2HjR=r9EknbztoUTOOx1qeiR0_te69zGg@mail.gmail.com>

2015-03-16 13:25 GMT+02:00 luigi scarso <luigi.scarso at gmail.com>:

> This works,
> assuming Linux,
> a core.so in
> ../resources/lib64/
> and funcname luaopen_core

Thanks, it solves my problem. (And I _really_ am grateful,
despite the next sentence.)

But how much nicer would it not have been if LuaTeX could simply
search for .so and .dll files containing Lua modules in say
$HOME/texmf/scripts/clua.

From luigi.scarso at gmail.com  Mon Mar 16 14:33:38 2015
From: luigi.scarso at gmail.com (luigi scarso)
Date: Mon, 16 Mar 2015 14:33:38 +0100
Subject: [luatex] Finding user-specific Lua binary packages
In-Reply-To: <CABcj=t=qNDtURv0be2HjR=r9EknbztoUTOOx1qeiR0_te69zGg@mail.gmail.com>
References: <CABcj=t=oYBWNbRCb6GAuTW5geMVm1brsTvfXKkh8WnayXvrsxg@mail.gmail.com>
 <CAG5iGsAhjtN6yn-xwm=nw7AdPQueXvTCRODHK3jJMV7EqrabPA@mail.gmail.com>
 <CABcj=tkoveomJXQkVAKQPJV5MKR0xCrmapDkaBXovSoYxTf0+Q@mail.gmail.com>
 <CAG5iGsBj9LxNjJng1vyp5nX1N-1Wgb=r-FdgjRwYJ+7MWrQ8SQ@mail.gmail.com>
 <CABcj=tnYZGJbrKWyifDckXYYmyfyzzVJgcpeXQ+QjcViaP=E1w@mail.gmail.com>
 <CAG5iGsDZHGAHSRReeEm3ev43hOVbqiuGjEU8oMfSgmqXg83fcQ@mail.gmail.com>
 <CABcj=t=qNDtURv0be2HjR=r9EknbztoUTOOx1qeiR0_te69zGg@mail.gmail.com>
Message-ID: <CAG5iGsDjCADdxJgbzBgDQQt4hmyLfwSwGTA+BXnirvjPP5VMUA@mail.gmail.com>

On Mon, Mar 16, 2015 at 2:17 PM, Dirk Laurie <dirk.laurie at gmail.com> wrote:

> 2015-03-16 13:25 GMT+02:00 luigi scarso <luigi.scarso at gmail.com>:
>
> > This works,
> > assuming Linux,
> > a core.so in
> > ../resources/lib64/
> > and funcname luaopen_core
>
> Thanks, it solves my problem. (And I _really_ am grateful,
> despite the next sentence.)
>
> But how much nicer would it not have been if LuaTeX could simply
> search for .so and .dll files containing Lua modules in say
> $HOME/texmf/scripts/clua.
>

dso are until now  still something to take with care with TeX because they
tightly
depend on the underlying  OS, something that we try to avoid.
For example, it's better that the location and dependencies of dso r are
resolved in
the context of a tds tree, because otherwise we are lost.
And of course a format should not see these differences at all.
For this reasons ConTeXt has its own loader swiglib but LaTeX can have his
own as well probably based on kpathsea.


-- 
luigi
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://tug.org/pipermail/luatex/attachments/20150316/a6279061/attachment-0001.html>

From dirk.laurie at gmail.com  Mon Mar 16 15:02:00 2015
From: dirk.laurie at gmail.com (Dirk Laurie)
Date: Mon, 16 Mar 2015 16:02:00 +0200
Subject: [luatex] Finding user-specific Lua binary packages
In-Reply-To: <CAG5iGsDjCADdxJgbzBgDQQt4hmyLfwSwGTA+BXnirvjPP5VMUA@mail.gmail.com>
References: <CABcj=t=oYBWNbRCb6GAuTW5geMVm1brsTvfXKkh8WnayXvrsxg@mail.gmail.com>
 <CAG5iGsAhjtN6yn-xwm=nw7AdPQueXvTCRODHK3jJMV7EqrabPA@mail.gmail.com>
 <CABcj=tkoveomJXQkVAKQPJV5MKR0xCrmapDkaBXovSoYxTf0+Q@mail.gmail.com>
 <CAG5iGsBj9LxNjJng1vyp5nX1N-1Wgb=r-FdgjRwYJ+7MWrQ8SQ@mail.gmail.com>
 <CABcj=tnYZGJbrKWyifDckXYYmyfyzzVJgcpeXQ+QjcViaP=E1w@mail.gmail.com>
 <CAG5iGsDZHGAHSRReeEm3ev43hOVbqiuGjEU8oMfSgmqXg83fcQ@mail.gmail.com>
 <CABcj=t=qNDtURv0be2HjR=r9EknbztoUTOOx1qeiR0_te69zGg@mail.gmail.com>
 <CAG5iGsDjCADdxJgbzBgDQQt4hmyLfwSwGTA+BXnirvjPP5VMUA@mail.gmail.com>
Message-ID: <CABcj=tns46-OVOoxiTVPPAm0J2EMyzY4_KHCeG_9TGUL+CY9uw@mail.gmail.com>

2015-03-16 15:33 GMT+02:00 luigi scarso <luigi.scarso at gmail.com>:

> dso are until now  still something to take with care with TeX because they
> tightly depend on the underlying OS, something that we try to avoid.

Surely putting a module in the user's own texmf tree is enough of
an indication that the module is not merely specific to the OS but,
more strongly, to that particular user?

But anyway, I am grateful, both for your workaround and for the fact
that the present working directory is searched first.

From luatex at nililand.de  Mon Mar 16 15:54:43 2015
From: luatex at nililand.de (Ulrike Fischer)
Date: Mon, 16 Mar 2015 15:54:43 +0100
Subject: [luatex] Finding user-specific Lua binary packages
References: <CABcj=t=oYBWNbRCb6GAuTW5geMVm1brsTvfXKkh8WnayXvrsxg@mail.gmail.com>
Message-ID: <mj4v66aix5ap.dlg@nililand.de>

Am Mon, 16 Mar 2015 09:33:48 +0200 schrieb Dirk Laurie:

> However, packages provided as shared objects are not found if put
> there, and I have not discovered where in $HOME/texmf I can put them.
> The manual says they are looked for in
> 
>     CLUAINPUTS=.:$SELFAUTOLOC/lib/{$progname,$engine,}/lua//
> 
> but this path seems not to provide for $HOME/texmf. I could put
> a symbolic link to the .so files in `.` every time, but that really defeats
> the purpose of kpse.

Can't you add more pathes in your local texmf.cnf?


-- 
Ulrike Fischer 
http://www.troubleshooting-tex.de/


From dirk.laurie at gmail.com  Mon Mar 16 16:00:09 2015
From: dirk.laurie at gmail.com (Dirk Laurie)
Date: Mon, 16 Mar 2015 17:00:09 +0200
Subject: [luatex] Finding user-specific Lua binary packages
In-Reply-To: <mj4v66aix5ap.dlg@nililand.de>
References: <CABcj=t=oYBWNbRCb6GAuTW5geMVm1brsTvfXKkh8WnayXvrsxg@mail.gmail.com>
 <mj4v66aix5ap.dlg@nililand.de>
Message-ID: <CABcj=tm5Jpi_9aZTGGiJkz1VeQLN2XCA=eedA0VT7UuFjd8t+A@mail.gmail.com>

2015-03-16 16:54 GMT+02:00 Ulrike Fischer <luatex at nililand.de>:
> Am Mon, 16 Mar 2015 09:33:48 +0200 schrieb Dirk Laurie:
>
>> However, packages provided as shared objects are not found if put
>> there, and I have not discovered where in $HOME/texmf I can put them.
>> The manual says they are looked for in
>>
>>     CLUAINPUTS=.:$SELFAUTOLOC/lib/{$progname,$engine,}/lua//
>>
>> but this path seems not to provide for $HOME/texmf. I could put
>> a symbolic link to the .so files in `.` every time, but that really defeats
>> the purpose of kpse.
>
> Can't you add more pathes in your local texmf.cnf?

This, too, requires superuser privileges:

$ kpsepath cnf
/etc/texmf/web2c:/usr/local/share/texmf/web2c:/usr/share/texmf/web2c:/usr/share/texlive/texmf-dist/web2c

From luatex at nililand.de  Mon Mar 16 16:07:43 2015
From: luatex at nililand.de (Ulrike Fischer)
Date: Mon, 16 Mar 2015 16:07:43 +0100
Subject: [luatex] Finding user-specific Lua binary packages
References: <CABcj=t=oYBWNbRCb6GAuTW5geMVm1brsTvfXKkh8WnayXvrsxg@mail.gmail.com>
 <mj4v66aix5ap.dlg@nililand.de>
 <CABcj=tm5Jpi_9aZTGGiJkz1VeQLN2XCA=eedA0VT7UuFjd8t+A@mail.gmail.com>
Message-ID: <f2v0ptcy294k$.dlg@nililand.de>

Am Mon, 16 Mar 2015 17:00:09 +0200 schrieb Dirk Laurie:

>>> However, packages provided as shared objects are not found if put
>>> there, and I have not discovered where in $HOME/texmf I can put them.
>>> The manual says they are looked for in
>>>
>>>     CLUAINPUTS=.:$SELFAUTOLOC/lib/{$progname,$engine,}/lua//
>>>
>>> but this path seems not to provide for $HOME/texmf. I could put
>>> a symbolic link to the .so files in `.` every time, but that really defeats
>>> the purpose of kpse.
>>
>> Can't you add more pathes in your local texmf.cnf?
> 
> This, too, requires superuser privileges:
> 
> $ kpsepath cnf

? I don't know this command. On windows I use 

  kpsewhich --show-path texmf.cnf

> /etc/texmf/web2c:/usr/local/share/texmf/web2c:/usr/share/texmf/web2c:/usr/share/texlive/texmf-dist/web2c

Imho not in a normal installation. There texmf-local is part of the
search path. Beside this you should be able to add any location by
setting the TEXMFCNF environment variable. 


-- 
Ulrike Fischer 
http://www.troubleshooting-tex.de/


From dirk.laurie at gmail.com  Mon Mar 16 17:10:49 2015
From: dirk.laurie at gmail.com (Dirk Laurie)
Date: Mon, 16 Mar 2015 18:10:49 +0200
Subject: [luatex] Finding user-specific Lua binary packages
In-Reply-To: <f2v0ptcy294k$.dlg@nililand.de>
References: <CABcj=t=oYBWNbRCb6GAuTW5geMVm1brsTvfXKkh8WnayXvrsxg@mail.gmail.com>
 <mj4v66aix5ap.dlg@nililand.de>
 <CABcj=tm5Jpi_9aZTGGiJkz1VeQLN2XCA=eedA0VT7UuFjd8t+A@mail.gmail.com>
 <f2v0ptcy294k$.dlg@nililand.de>
Message-ID: <CABcj=tkjxQyWkHDtTohC9vrUsO_6ZubQgiUFjxiNL9bHsPKY1g@mail.gmail.com>

2015-03-16 17:07 GMT+02:00 Ulrike Fischer <luatex at nililand.de>:

>   kpsewhich --show-path texmf.cnf

That gives essentially the same result.

> Imho not in a normal installation.

Ubuntu TeXLive is Debian :-/

It takes 660 lines to document the things Debian does in its own way.
I have never read them all, but I have now read enough for this purpose.

There is a standard location for customized configuration files, but any
`texmf.cnf` you put in there is ignored by default. You have to explicitly
set TEXMFCNF if you want it to be taken into account.

Once I realized that, the rest was easy. I now have:

CLUAINPUTS = .;$TEXMF/clua//;$SELFAUTOLOC/lib/{$progname,$engine,}/lua//

Thanks!

From r.f.wolpert at gmail.com  Thu Mar 19 00:20:46 2015
From: r.f.wolpert at gmail.com (Rembrandt Wolpert)
Date: Wed, 18 Mar 2015 18:20:46 -0500
Subject: [luatex]  clash between fontspec  and luatexja-fontspec
Message-ID: <550A084E.8080506@gmail.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Dear Kitagawa-san and others,

I am not sure if this really should go to the LaTeX list... so
apologies if misguided.

Updating texlive to fontspec 2015/03/14 v2.4c seems to have broken the
use of \newjfontfamily; \setmainjfont works (as far as I can tell -- I
get kanji etc.), but newjfontfamily (I need both Chinese and Japanese
fonts in the same document) throws a "missing \begin{document}" error.

Reverting to the earlier fontspec "solves" the problem temporarily.

Thanks for looking into this.

as ever,
Rembrandt

- -- 
??????????

-----BEGIN PGP SIGNATURE-----
Version: GnuPG/MacGPG2 v2.0.17 (Darwin)
Comment: GPGTools - http://gpgtools.org

iQEcBAEBAgAGBQJVCghFAAoJEFWqP1hIXLxablAH/356FxYwiDxAeMymLhJl7ssn
DJCjkfzc8AoGYOEsRIHr/QMyEzIAnrZMr0Q0UlM24jNz/fTKm1NgTA/8xsbtIdPT
qXsIal74GqtgA4zw4OmaNCRop9seop7BkwW5UL2V492dBShq2huX703NcIvFgf+s
lLI0r2gi50AI42EFhAWHmAvuS06+u9VAyqX3gVpzUm2xdM556/QkTqh8lVwVluGs
ZaW5dPZNkZ1wx2KaE2Y4TakHUlM+A6OTyN7xEueGkkKClMQ6ihyBL2mZdLisQajF
w76P61J72UENGV+4hijEvgfGR4L86eDyJoOn4XFZOoXc/jn8AnuADWvlXLsg3gY=
=KBRe
-----END PGP SIGNATURE-----

From h_kitagawa2001 at yahoo.co.jp  Thu Mar 19 00:34:19 2015
From: h_kitagawa2001 at yahoo.co.jp (Hironori KITAGAWA)
Date: Thu, 19 Mar 2015 08:34:19 +0900
Subject: [luatex] clash between fontspec  and luatexja-fontspec
In-Reply-To: <550A084E.8080506@gmail.com>
References: <550A084E.8080506@gmail.com>
Message-ID: <20150319083419.9c60c7122fa2daaf7ee7f013@yahoo.co.jp>

Hello,

On Wed, 18 Mar 2015 18:20:46 -0500
Rembrandt Wolpert <r.f.wolpert at gmail.com> wrote:

> Updating texlive to fontspec 2015/03/14 v2.4c seems to have broken the
> use of \newjfontfamily; \setmainjfont works (as far as I can tell -- I
> get kanji etc.), but newjfontfamily (I need both Chinese and Japanese
> fonts in the same document) throws a "missing \begin{document}" error.
> 
> Reverting to the earlier fontspec "solves" the problem temporarily.

Thanks for reporting. 
The following patch of addons/luatexja-fontspec-24.sty seems to work
in my environment:

--- a/src/addons/luatexja-fontspec-24.sty
+++ b/src/addons/luatexja-fontspec-24.sty
@@ -207,7 +207,7 @@
 
 \DeclareDocumentCommand \newjfontfamily { m O{} m O{} } {
   \cs_set_eq:NN \fontspec_set_family:Nnn \ltj_fontspec_set_family:Nnn
-  \newfontfamily #1 [#2] {#3} [#4]
+  \newfontfamily #1 [#2,#4] {#3}
   \cs_set_eq:NN \fontspec_set_family:Nnn \__ltj_orig_fontspec_set_family:Nnn
 }
 

Regards
Hironori KITAGAWA <h_kitagawa2001 at yahoo.co.jp>

From r.f.wolpert at gmail.com  Thu Mar 19 02:03:15 2015
From: r.f.wolpert at gmail.com (Rembrandt Wolpert)
Date: Wed, 18 Mar 2015 20:03:15 -0500
Subject: [luatex] clash between fontspec  and luatexja-fontspec
In-Reply-To: <20150319083419.9c60c7122fa2daaf7ee7f013@yahoo.co.jp>
References: <550A084E.8080506@gmail.com>
 <20150319083419.9c60c7122fa2daaf7ee7f013@yahoo.co.jp>
Message-ID: <550A2053.8020304@gmail.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

On 3/18/15 6:34 PM, Hironori KITAGAWA wrote:
> Hello,
> 
> On Wed, 18 Mar 2015 18:20:46 -0500 Rembrandt Wolpert
> <r.f.wolpert at gmail.com> wrote:
> 
>> Updating texlive to fontspec 2015/03/14 v2.4c seems to have
>> broken the use of \newjfontfamily; \setmainjfont works (as far as
>> I can tell -- I get kanji etc.), but newjfontfamily (I need both
>> Chinese and Japanese fonts in the same document) throws a
>> "missing \begin{document}" error.
>> 
>> Reverting to the earlier fontspec "solves" the problem
>> temporarily.
> 
> Thanks for reporting. The following patch of
> addons/luatexja-fontspec-24.sty seems to work in my environment:
> 
> --- a/src/addons/luatexja-fontspec-24.sty +++
> b/src/addons/luatexja-fontspec-24.sty @@ -207,7 +207,7 @@
> 
> \DeclareDocumentCommand \newjfontfamily { m O{} m O{} } { 
> \cs_set_eq:NN \fontspec_set_family:Nnn
> \ltj_fontspec_set_family:Nnn -  \newfontfamily #1 [#2] {#3} [#4] +
> \newfontfamily #1 [#2,#4] {#3} \cs_set_eq:NN
> \fontspec_set_family:Nnn \__ltj_orig_fontspec_set_family:Nnn }
> 
> 
> Regards Hironori KITAGAWA <h_kitagawa2001 at yahoo.co.jp>
> 

Dear Kitagawa-sensei,

yes, that solves it! Thank you so much for such rapid solution!

as ever,
Rembrandt

- -- 
????? ?????
 - ?? (1249-1293)
-----BEGIN PGP SIGNATURE-----
Version: GnuPG/MacGPG2 v2
Comment: GPGTools - http://gpgtools.org

iQEcBAEBAgAGBQJVCiBTAAoJEFWqP1hIXLxaaP0H/ie6aYym8sdrkPJgd1Q5/SBs
6Q9uzTtn9qLEz9xUxF+GA3TqKFCiii0QBhY9AddKyJG0MlIDFkOZs/XCyLWivfk2
g7A01WR9O2Nrw7+SfB90Fn3/8qqX71GkSy9CKhAHVN8eHjxI2yG7Mu4UGMoq4Zti
IcZWpNDMDKorjap+O263bNjPC1hq2SlniRgcmiG52TrTtsuacfsfZB2YwAkZfkbc
wrtbumcBkDMlAUA/o79MmWxelkKikndzn+aBNBf+PlBpK3x7Nrp+zZHqg7TvEO9P
fR3PoATawozVr0tbjDwvovpfCXjptONkrJFEIoevh2hTJFz4R5dx3YvIT2X5Kps=
=BQ/B
-----END PGP SIGNATURE-----

From jfbu at free.fr  Tue Mar 24 19:36:38 2015
From: jfbu at free.fr (jfbu)
Date: Tue, 24 Mar 2015 19:36:38 +0100
Subject: [luatex] behavior of \write in LuaTeX differs from the one of
	PdfTeX/XeTeX
Message-ID: <A2881E41-DA8D-41FC-AB3A-E23930B066CB@free.fr>

Hi,

this is presumably related to 

% http://tracker.luatex.org/view.php?id=733

% http://tex.stackexchange.com/questions/65151/scantokens-in-luatex

% http://tug.org/pipermail/lualatex-dev/2011-November/001376.html

which address the behavior of \scantokens

While investigating the issue I ended up with this,
which might very well have been discussed here or is
already on the tracker.

If I assign catcode 12 to the CTRL-M character, and then
\write ^^M to an external file:

with pdftex/xetex we get ^^M (three characters) in the file
with LuaTeX we get a single CTRL-M (ascii code 13) in the file

as a result, the \input then behaves differently

see MWE below

%----START
% author: jfbu

% Mardi 24 mars 2015 a 19:25:11

\catcode 13 12 %
\newwrite\out %
\immediate\openout\out=\jobname.out %
\immediate\write\out {a^^Mbcdef}%
\immediate\closeout\out %
\catcode 13 5 %

% luatex writes to the file CTRL-M
% pdftex/xetex write the three characters ^^M

% as a result the input now behaves differently

% luatex will see two lines, hence prints a<space>bcdef<space>+++
% pdftex/xetex see only one line with catcode 5 token and thus ignore bcdef
% and print a<space>+++
\input \jobname.out +++
\bye
%----STOP

This is XeTeX, Version 3.14159265-2.6-0.99991 (TeX Live 2014) (preloaded format=xetex 2014.7.10)  24 MAR 2015 19:25

This is pdfTeX, Version 3.14159265-2.6-1.40.15 (TeX Live 2014) (preloaded format=pdfetex 2015.1.21)  24 MAR 2015 19:35

This is LuaTeX, Version beta-0.79.1 (TeX Live 2014) (rev 4971)  (format=luatex 2014.7.10)  24 MAR 2015 19:36

Regards

Jean-Francois



From jfbu at free.fr  Tue Mar 24 19:39:53 2015
From: jfbu at free.fr (jfbu)
Date: Tue, 24 Mar 2015 19:39:53 +0100
Subject: [luatex] behavior of \write in LuaTeX differs from the one of
	PdfTeX/XeTeX
In-Reply-To: <A2881E41-DA8D-41FC-AB3A-E23930B066CB@free.fr>
References: <A2881E41-DA8D-41FC-AB3A-E23930B066CB@free.fr>
Message-ID: <6A1CC8FA-4B08-4DB8-9970-B7B0AF11D4E3@free.fr>


Le 24 mars 2015 ? 19:36, jfbu <jfbu at free.fr> a ?crit :

> Hi,
> 
> this is presumably related to 
> 
> % http://tracker.luatex.org/view.php?id=733
> 
> % http://tex.stackexchange.com/questions/65151/scantokens-in-luatex
> 
> % http://tug.org/pipermail/lualatex-dev/2011-November/001376.html
> 
> which address the behavior of \scantokens
> 
> While investigating the issue I ended up with this,
> which might very well have been discussed here or is
> already on the tracker.
> 
> If I assign catcode 12 to the CTRL-M character, and then
> \write ^^M to an external file:
> 
> with pdftex/xetex we get ^^M (three characters) in the file
> with LuaTeX we get a single CTRL-M (ascii code 13) in the file
> 
> as a result, the \input then behaves differently
> 
> see MWE below
> 
> %----START
> % author: jfbu
> 
> % Mardi 24 mars 2015 a 19:25:11
> 
> \catcode 13 12 %
> \newwrite\out %
> \immediate\openout\out=\jobname.out %
> \immediate\write\out {a^^Mbcdef}%
> \immediate\closeout\out %
> \catcode 13 5 %
> 
> % luatex writes to the file CTRL-M
> % pdftex/xetex write the three characters ^^M
> 
> % as a result the input now behaves differently
> 
> % luatex will see two lines, hence prints a<space>bcdef<space>+++
> % pdftex/xetex see only one line with catcode 5 token and thus ignore bcdef
> % and print a<space>+++
> \input \jobname.out +++
> \bye
> %----STOP

Forgot to say it is on Mac OS X !

> 
> This is XeTeX, Version 3.14159265-2.6-0.99991 (TeX Live 2014) (preloaded format=xetex 2014.7.10)  24 MAR 2015 19:25
> 
> This is pdfTeX, Version 3.14159265-2.6-1.40.15 (TeX Live 2014) (preloaded format=pdfetex 2015.1.21)  24 MAR 2015 19:35
> 
> This is LuaTeX, Version beta-0.79.1 (TeX Live 2014) (rev 4971)  (format=luatex 2014.7.10)  24 MAR 2015 19:36
> 
> Regards
> 
> Jean-Francois
> 
> 



From pragma at wxs.nl  Wed Mar 25 10:44:21 2015
From: pragma at wxs.nl (Hans Hagen)
Date: Wed, 25 Mar 2015 10:44:21 +0100
Subject: [luatex] behavior of \write in LuaTeX differs from the one of
 PdfTeX/XeTeX
In-Reply-To: <A2881E41-DA8D-41FC-AB3A-E23930B066CB@free.fr>
References: <A2881E41-DA8D-41FC-AB3A-E23930B066CB@free.fr>
Message-ID: <55128375.8030003@wxs.nl>

On 3/24/2015 7:36 PM, jfbu wrote:
> Hi,
>
> this is presumably related to
>
> % http://tracker.luatex.org/view.php?id=733
>
> % http://tex.stackexchange.com/questions/65151/scantokens-in-luatex
>
> % http://tug.org/pipermail/lualatex-dev/2011-November/001376.html
>
> which address the behavior of \scantokens
>
> While investigating the issue I ended up with this,
> which might very well have been discussed here or is
> already on the tracker.
>
> If I assign catcode 12 to the CTRL-M character, and then
> \write ^^M to an external file:
>
> with pdftex/xetex we get ^^M (three characters) in the file
> with LuaTeX we get a single CTRL-M (ascii code 13) in the file

if i run

\starttext

\edef\newline{\directlua{tex.write(string.char(10))}}

\newwrite\out %
\immediate\openout\out=\jobname.out %
\immediate\normalwrite\out {a\newline b}%
\immediate\normalwrite\out {c^^Md}%
\immediate\closeout\out %

\stoptext

i get

a
b
c^^Md

which looks ok to me from the perspective of luatex

(btw, in general you cannot expect luatex to behave exactly like pdftex 
and xetex esp when it comes to file io and logging)

> as a result, the \input then behaves differently
>
> see MWE below
>
> %----START
> % author: jfbu
>
> % Mardi 24 mars 2015 a 19:25:11
>
> \catcode 13 12 %
> \newwrite\out %
> \immediate\openout\out=\jobname.out %
> \immediate\write\out {a^^Mbcdef}%
> \immediate\closeout\out %
> \catcode 13 5 %
>
> % luatex writes to the file CTRL-M
> % pdftex/xetex write the three characters ^^M
>
> % as a result the input now behaves differently
>
> % luatex will see two lines, hence prints a<space>bcdef<space>+++
> % pdftex/xetex see only one line with catcode 5 token and thus ignore bcdef
> % and print a<space>+++
> \input \jobname.out +++
> \bye
> %----STOP
>
> This is XeTeX, Version 3.14159265-2.6-0.99991 (TeX Live 2014) (preloaded format=xetex 2014.7.10)  24 MAR 2015 19:25
>
> This is pdfTeX, Version 3.14159265-2.6-1.40.15 (TeX Live 2014) (preloaded format=pdfetex 2015.1.21)  24 MAR 2015 19:35
>
> This is LuaTeX, Version beta-0.79.1 (TeX Live 2014) (rev 4971)  (format=luatex 2014.7.10)  24 MAR 2015 19:36
>
> Regards
>
> Jean-Francois
>
>


-- 

-----------------------------------------------------------------
                                           Hans Hagen | PRAGMA ADE
               Ridderstraat 27 | 8061 GH Hasselt | The Netherlands
     tel: 038 477 53 69 | voip: 087 875 68 74 | www.pragma-ade.com
                                              | www.pragma-pod.nl
-----------------------------------------------------------------

From pragma at wxs.nl  Wed Mar 25 11:12:15 2015
From: pragma at wxs.nl (Hans Hagen)
Date: Wed, 25 Mar 2015 11:12:15 +0100
Subject: [luatex] behavior of \write in LuaTeX differs from the one of
 PdfTeX/XeTeX
In-Reply-To: <A2881E41-DA8D-41FC-AB3A-E23930B066CB@free.fr>
References: <A2881E41-DA8D-41FC-AB3A-E23930B066CB@free.fr>
Message-ID: <551289FF.6070001@wxs.nl>

On 3/24/2015 7:36 PM, jfbu wrote:

> This is XeTeX, Version 3.14159265-2.6-0.99991 (TeX Live 2014) (preloaded format=xetex 2014.7.10)  24 MAR 2015 19:25
>
> This is pdfTeX, Version 3.14159265-2.6-1.40.15 (TeX Live 2014) (preloaded format=pdfetex 2015.1.21)  24 MAR 2015 19:35
>
> This is LuaTeX, Version beta-0.79.1 (TeX Live 2014) (rev 4971)  (format=luatex 2014.7.10)  24 MAR 2015 19:36

btw, you should run pdftex/xetex in -8bit mode in order to compare

Hans

-----------------------------------------------------------------
                                           Hans Hagen | PRAGMA ADE
               Ridderstraat 27 | 8061 GH Hasselt | The Netherlands
     tel: 038 477 53 69 | voip: 087 875 68 74 | www.pragma-ade.com
                                              | www.pragma-pod.nl
-----------------------------------------------------------------

From joseph.wright at morningstar2.co.uk  Wed Mar 25 11:22:23 2015
From: joseph.wright at morningstar2.co.uk (Joseph Wright)
Date: Wed, 25 Mar 2015 10:22:23 +0000
Subject: [luatex] behavior of \write in LuaTeX differs from the one of
 PdfTeX/XeTeX
In-Reply-To: <55128375.8030003@wxs.nl>
References: <A2881E41-DA8D-41FC-AB3A-E23930B066CB@free.fr>
 <55128375.8030003@wxs.nl>
Message-ID: <55128C5F.60709@morningstar2.co.uk>

On 25/03/2015 09:44, Hans Hagen wrote:
> On 3/24/2015 7:36 PM, jfbu wrote:
>> Hi,
>>
>> this is presumably related to
>>
>> % http://tracker.luatex.org/view.php?id=733
>>
>> % http://tex.stackexchange.com/questions/65151/scantokens-in-luatex
>>
>> % http://tug.org/pipermail/lualatex-dev/2011-November/001376.html
>>
>> which address the behavior of \scantokens
>>
>> While investigating the issue I ended up with this,
>> which might very well have been discussed here or is
>> already on the tracker.
>>
>> If I assign catcode 12 to the CTRL-M character, and then
>> \write ^^M to an external file:
>>
>> with pdftex/xetex we get ^^M (three characters) in the file
>> with LuaTeX we get a single CTRL-M (ascii code 13) in the file
> 
> if i run
> 
> \starttext
> 
> \edef\newline{\directlua{tex.write(string.char(10))}}
> 
> \newwrite\out %
> \immediate\openout\out=\jobname.out %
> \immediate\normalwrite\out {a\newline b}%
> \immediate\normalwrite\out {c^^Md}%
> \immediate\closeout\out %
> 
> \stoptext
> 
> i get
> 
> a
> b
> c^^Md
> 
> which looks ok to me from the perspective of luatex

Isn't that a very different thing: ConTeXt has \catcode`\^=12 here (so
the above fails with plain).
--
Joseph Wright

From luigi.scarso at gmail.com  Wed Mar 25 11:44:27 2015
From: luigi.scarso at gmail.com (luigi scarso)
Date: Wed, 25 Mar 2015 11:44:27 +0100
Subject: [luatex] behavior of \write in LuaTeX differs from the one of
	PdfTeX/XeTeX
In-Reply-To: <551289FF.6070001@wxs.nl>
References: <A2881E41-DA8D-41FC-AB3A-E23930B066CB@free.fr>
 <551289FF.6070001@wxs.nl>
Message-ID: <CAG5iGsBXKv5zzv_0gC0JFNVC2Le3w6oVL3DN-HOV=uSc8H2MYw@mail.gmail.com>

On Wed, Mar 25, 2015 at 11:12 AM, Hans Hagen <pragma at wxs.nl> wrote:

> On 3/24/2015 7:36 PM, jfbu wrote:
>
>  This is XeTeX, Version 3.14159265-2.6-0.99991 (TeX Live 2014) (preloaded
>> format=xetex 2014.7.10)  24 MAR 2015 19:25
>>
>> This is pdfTeX, Version 3.14159265-2.6-1.40.15 (TeX Live 2014) (preloaded
>> format=pdfetex 2015.1.21)  24 MAR 2015 19:35
>>
>> This is LuaTeX, Version beta-0.79.1 (TeX Live 2014) (rev 4971)
>> (format=luatex 2014.7.10)  24 MAR 2015 19:36
>>
>
> btw, you should run pdftex/xetex in -8bit mode in order to compare
>
> pdftex -8bit
and
xetex -8bit
both give the same result
(luatex is in '-8bit' mode by default).

-- 
luigi
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://tug.org/pipermail/luatex/attachments/20150325/863c750f/attachment.html>

From d.p.carlisle at gmail.com  Wed Mar 25 12:07:14 2015
From: d.p.carlisle at gmail.com (David Carlisle)
Date: Wed, 25 Mar 2015 11:07:14 +0000
Subject: [luatex] behavior of \write in LuaTeX differs from the one of
	PdfTeX/XeTeX
In-Reply-To: <CAG5iGsBXKv5zzv_0gC0JFNVC2Le3w6oVL3DN-HOV=uSc8H2MYw@mail.gmail.com>
References: <A2881E41-DA8D-41FC-AB3A-E23930B066CB@free.fr>
 <551289FF.6070001@wxs.nl>
 <CAG5iGsBXKv5zzv_0gC0JFNVC2Le3w6oVL3DN-HOV=uSc8H2MYw@mail.gmail.com>
Message-ID: <CAEW6iOgudpzZXFe_MipfUgctEKeb9nTXdM9P0RQ8ai0DabFh9g@mail.gmail.com>

On 25 March 2015 at 10:44, luigi scarso <luigi.scarso at gmail.com> wrote:

>
>
> On Wed, Mar 25, 2015 at 11:12 AM, Hans Hagen <pragma at wxs.nl> wrote:
>
>> On 3/24/2015 7:36 PM, jfbu wrote:
>>
>>  This is XeTeX, Version 3.14159265-2.6-0.99991 (TeX Live 2014) (preloaded
>>> format=xetex 2014.7.10)  24 MAR 2015 19:25
>>>
>>> This is pdfTeX, Version 3.14159265-2.6-1.40.15 (TeX Live 2014)
>>> (preloaded format=pdfetex 2015.1.21)  24 MAR 2015 19:35
>>>
>>> This is LuaTeX, Version beta-0.79.1 (TeX Live 2014) (rev 4971)
>>> (format=luatex 2014.7.10)  24 MAR 2015 19:36
>>>
>>
>> btw, you should run pdftex/xetex in -8bit mode in order to compare
>>
>> pdftex -8bit
> and
> xetex -8bit
> both give the same result
> (luatex is in '-8bit' mode by default).
>
> --
> luigi
>



It's true that luatex acts like pdftex -8bit here but this appears to be a
bug (in all three engines)

\immediate\write20{start}

\catcode`\^^M=12
\immediate\write20{aaaa^^Mb^^Mc}
\bye



outputs

caaa

that is the ^^M is causing the write to restart the line overprinting
earlier characters.

pdftex without -8bit produces

aaaa^^Mb^^Mc


David
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://tug.org/pipermail/luatex/attachments/20150325/16a57a59/attachment.html>

From jfbu at free.fr  Wed Mar 25 12:09:30 2015
From: jfbu at free.fr (jfbu)
Date: Wed, 25 Mar 2015 12:09:30 +0100
Subject: [luatex] behavior of \write in LuaTeX differs from the one of
 PdfTeX/XeTeX
In-Reply-To: <CAG5iGsBXKv5zzv_0gC0JFNVC2Le3w6oVL3DN-HOV=uSc8H2MYw@mail.gmail.com>
References: <A2881E41-DA8D-41FC-AB3A-E23930B066CB@free.fr>
 <551289FF.6070001@wxs.nl>
 <CAG5iGsBXKv5zzv_0gC0JFNVC2Le3w6oVL3DN-HOV=uSc8H2MYw@mail.gmail.com>
Message-ID: <5512976A.6090604@free.fr>

le 25/03/2015 11:44 selon luigi scarso:
> 
> 
> On Wed, Mar 25, 2015 at 11:12 AM, Hans Hagen <pragma at wxs.nl <mailto:pragma at wxs.nl>> wrote:
> 
>     On 3/24/2015 7:36 PM, jfbu wrote:
> 
>         This is XeTeX, Version 3.14159265-2.6-0.99991 (TeX Live 2014) (preloaded format=xetex 2014.7.10)  24 MAR 2015 19:25
> 
>         This is pdfTeX, Version 3.14159265-2.6-1.40.15 (TeX Live 2014) (preloaded format=pdfetex 2015.1.21)  24 MAR 2015 19:35
> 
>         This is LuaTeX, Version beta-0.79.1 (TeX Live 2014) (rev 4971)  (format=luatex 2014.7.10)  24 MAR 2015 19:36
> 
> 
>     btw, you should run pdftex/xetex in -8bit mode in order to compare
> 
> pdftex -8bit 
> and
> xetex -8bit
> both give the same result 
> (luatex is in '-8bit' mode by default).
> 
> -- 
> luigi


yes, I tested now (on a TL2010) and indeed with -8bit option produced .out file is identical for pdftex/xetex/luatex and then the pdf's also

thanks

Jean-Francois

From d.p.carlisle at gmail.com  Wed Mar 25 12:11:25 2015
From: d.p.carlisle at gmail.com (David Carlisle)
Date: Wed, 25 Mar 2015 11:11:25 +0000
Subject: [luatex] behavior of \write in LuaTeX differs from the one of
	PdfTeX/XeTeX
In-Reply-To: <5512976A.6090604@free.fr>
References: <A2881E41-DA8D-41FC-AB3A-E23930B066CB@free.fr>
 <551289FF.6070001@wxs.nl>
 <CAG5iGsBXKv5zzv_0gC0JFNVC2Le3w6oVL3DN-HOV=uSc8H2MYw@mail.gmail.com>
 <5512976A.6090604@free.fr>
Message-ID: <CAEW6iOii+SM=UJcgjWS4Q8ExhAHKFPuF2eJ64riCHL6Mshec7A@mail.gmail.com>

Sorry ignore my previous response it was wrong (confused by the way xterm
displays a bare ^^M on the terminal)

David
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://tug.org/pipermail/luatex/attachments/20150325/44750bf7/attachment.html>

From jfbu at free.fr  Wed Mar 25 13:37:22 2015
From: jfbu at free.fr (jfbu)
Date: Wed, 25 Mar 2015 13:37:22 +0100
Subject: [luatex] behavior of \write in LuaTeX differs from the one of
 PdfTeX/XeTeX
In-Reply-To: <551289FF.6070001@wxs.nl>
References: <A2881E41-DA8D-41FC-AB3A-E23930B066CB@free.fr>
 <551289FF.6070001@wxs.nl>
Message-ID: <5512AC02.9040907@free.fr>

le 25/03/2015 11:12 selon Hans Hagen:
> On 3/24/2015 7:36 PM, jfbu wrote:
> 
>> This is XeTeX, Version 3.14159265-2.6-0.99991 (TeX Live 2014) (preloaded format=xetex 2014.7.10)  24 MAR 2015 19:25
>>
>> This is pdfTeX, Version 3.14159265-2.6-1.40.15 (TeX Live 2014) (preloaded format=pdfetex 2015.1.21)  24 MAR 2015 19:35
>>
>> This is LuaTeX, Version beta-0.79.1 (TeX Live 2014) (rev 4971)  (format=luatex 2014.7.10)  24 MAR 2015 19:36
> 
> btw, you should run pdftex/xetex in -8bit mode in order to compare

I didn't know about these options, thanks

regarding:


> (btw, in general you cannot expect luatex to behave exactly like pdftex and xetex esp when it comes to file io and logging) 

could there be a -7bit option to luatex for matters of \write ?

else packages from the pre-scantokens pre-detokenize area which
rely on external file output+input might be broken in certain
circumstances (I dont' have anything specific in mind, this is
pure rhetoric)

and about the \scantokens issue

the tracker

http://tracker.luatex.org/view.php?id=733

displays the topic as open

is there anything in the works ?

best

Jean-Francois


From pragma at wxs.nl  Wed Mar 25 14:06:25 2015
From: pragma at wxs.nl (Hans Hagen)
Date: Wed, 25 Mar 2015 14:06:25 +0100
Subject: [luatex] behavior of \write in LuaTeX differs from the one of
 PdfTeX/XeTeX
In-Reply-To: <5512AC02.9040907@free.fr>
References: <A2881E41-DA8D-41FC-AB3A-E23930B066CB@free.fr>
 <551289FF.6070001@wxs.nl> <5512AC02.9040907@free.fr>
Message-ID: <5512B2D1.1040607@wxs.nl>

On 3/25/2015 1:37 PM, jfbu wrote:
> le 25/03/2015 11:12 selon Hans Hagen:
>> On 3/24/2015 7:36 PM, jfbu wrote:
>>
>>> This is XeTeX, Version 3.14159265-2.6-0.99991 (TeX Live 2014) (preloaded format=xetex 2014.7.10)  24 MAR 2015 19:25
>>>
>>> This is pdfTeX, Version 3.14159265-2.6-1.40.15 (TeX Live 2014) (preloaded format=pdfetex 2015.1.21)  24 MAR 2015 19:35
>>>
>>> This is LuaTeX, Version beta-0.79.1 (TeX Live 2014) (rev 4971)  (format=luatex 2014.7.10)  24 MAR 2015 19:36
>>
>> btw, you should run pdftex/xetex in -8bit mode in order to compare
>
> I didn't know about these options, thanks
>
> regarding:
>
>
>> (btw, in general you cannot expect luatex to behave exactly like pdftex and xetex esp when it comes to file io and logging)
>
> could there be a -7bit option to luatex for matters of \write ?

no, that will not happen .. luatex us 8 bit and utf and if you want 
something else you can use the callbacks and or luatex for implementing 
whatever file thingies you like

> else packages from the pre-scantokens pre-detokenize area which
> rely on external file output+input might be broken in certain
> circumstances (I dont' have anything specific in mind, this is
> pure rhetoric)

adapt the packages to modern times

> and about the \scantokens issue
>
> the tracker
>
> http://tracker.luatex.org/view.php?id=733
>
> displays the topic as open
>
> is there anything in the works ?

not yet (certainly not around the current code freeze for tl 2015)

Hans

-----------------------------------------------------------------
                                           Hans Hagen | PRAGMA ADE
               Ridderstraat 27 | 8061 GH Hasselt | The Netherlands
     tel: 038 477 53 69 | voip: 087 875 68 74 | www.pragma-ade.com
                                              | www.pragma-pod.nl
-----------------------------------------------------------------

From jfbu at free.fr  Wed Mar 25 18:19:59 2015
From: jfbu at free.fr (jfbu)
Date: Wed, 25 Mar 2015 18:19:59 +0100
Subject: [luatex] behavior of \write in LuaTeX differs from the one of
 PdfTeX/XeTeX
In-Reply-To: <5512B2D1.1040607@wxs.nl>
References: <A2881E41-DA8D-41FC-AB3A-E23930B066CB@free.fr>
 <551289FF.6070001@wxs.nl> <5512AC02.9040907@free.fr>
 <5512B2D1.1040607@wxs.nl>
Message-ID: <5512EE3F.1030900@free.fr>

le 25/03/2015 14:06 selon Hans Hagen:
> On 3/25/2015 1:37 PM, jfbu wrote:
>> le 25/03/2015 11:12 selon Hans Hagen:
>>> On 3/24/2015 7:36 PM, jfbu wrote:
>>>
>>>> This is XeTeX, Version 3.14159265-2.6-0.99991 (TeX Live 2014) (preloaded format=xetex 2014.7.10)  24 MAR 2015 19:25
>>>>
>>>> This is pdfTeX, Version 3.14159265-2.6-1.40.15 (TeX Live 2014) (preloaded format=pdfetex 2015.1.21)  24 MAR 2015 19:35
>>>>
>>>> This is LuaTeX, Version beta-0.79.1 (TeX Live 2014) (rev 4971)  (format=luatex 2014.7.10)  24 MAR 2015 19:36
>>>
>>> btw, you should run pdftex/xetex in -8bit mode in order to compare
>>
>> I didn't know about these options, thanks
>>
>> regarding:
>>
>>
>>> (btw, in general you cannot expect luatex to behave exactly like pdftex and xetex esp when it comes to file io and logging)
>>
>> could there be a -7bit option to luatex for matters of \write ?
> 
> no, that will not happen .. luatex us 8 bit and utf and if you want something else you can use the callbacks and or luatex for implementing whatever file thingies you like
> 
>> else packages from the pre-scantokens pre-detokenize area which
>> rely on external file output+input might be broken in certain
>> circumstances (I dont' have anything specific in mind, this is
>> pure rhetoric)
> 
> adapt the packages to modern times
> 
>> and about the \scantokens issue
>>
>> the tracker
>>
>> http://tracker.luatex.org/view.php?id=733
>>
>> displays the topic as open
>>
>> is there anything in the works ?
> 
> not yet (certainly not around the current code freeze for tl 2015)
> 
> Hans

ok thanks for all

Jean-Francois


From jfbu at free.fr  Wed Mar 25 21:00:25 2015
From: jfbu at free.fr (jfbu)
Date: Wed, 25 Mar 2015 21:00:25 +0100
Subject: [luatex] behavior of \write in LuaTeX differs from the one of
	PdfTeX/XeTeX
In-Reply-To: <5512B2D1.1040607@wxs.nl>
References: <A2881E41-DA8D-41FC-AB3A-E23930B066CB@free.fr>
 <551289FF.6070001@wxs.nl> <5512AC02.9040907@free.fr>
 <5512B2D1.1040607@wxs.nl>
Message-ID: <BA710057-DC99-4292-99AA-8E651E9B710C@free.fr>


Le 25 mars 2015 ? 14:06, Hans Hagen <pragma at wxs.nl> a ?crit :

>>> btw, you should run pdftex/xetex in -8bit mode in order to compare
> 

Hi again,

sorry if this follow-up threatens to bring the thread off-list but
out of curiosity

where is the -8bit option documented? all info I could get is from

pdftex --help

-8bit                   make all characters printable by default

man pdftex did not bring anything, and in the PdfTeX pdftex-a.pdf
a search for 8bit does not bring anything either

I am not sure I understand what "make all characters printable by default"
says exactly. I know now that a catcode 12 ^^M will be printed as
character with ascii code 13, is that all there is to it? and how does
that related to "8bit" ?

best,

Jean-Fran?ois

From pragma at wxs.nl  Wed Mar 25 22:28:42 2015
From: pragma at wxs.nl (Hans Hagen)
Date: Wed, 25 Mar 2015 22:28:42 +0100
Subject: [luatex] behavior of \write in LuaTeX differs from the one of
 PdfTeX/XeTeX
In-Reply-To: <BA710057-DC99-4292-99AA-8E651E9B710C@free.fr>
References: <A2881E41-DA8D-41FC-AB3A-E23930B066CB@free.fr>
 <551289FF.6070001@wxs.nl> <5512AC02.9040907@free.fr>
 <5512B2D1.1040607@wxs.nl> <BA710057-DC99-4292-99AA-8E651E9B710C@free.fr>
Message-ID: <5513288A.6010305@wxs.nl>

On 3/25/2015 9:00 PM, jfbu wrote:
>
> Le 25 mars 2015 ? 14:06, Hans Hagen <pragma at wxs.nl> a ?crit :
>
>>>> btw, you should run pdftex/xetex in -8bit mode in order to compare
>>
>
> Hi again,
>
> sorry if this follow-up threatens to bring the thread off-list but
> out of curiosity
>
> where is the -8bit option documented? all info I could get is from
>
> pdftex --help
>
> -8bit                   make all characters printable by default
>
> man pdftex did not bring anything, and in the PdfTeX pdftex-a.pdf
> a search for 8bit does not bring anything either
>
> I am not sure I understand what "make all characters printable by default"
> says exactly. I know now that a catcode 12 ^^M will be printed as
> character with ascii code 13, is that all there is to it? and how does
> that related to "8bit" ?

it means that characters < 32 will be output as byte and not as 
^^<letter> which is needed for proper round-trip usage and also makes 
files acceptable for other applications

btw, the -translate-file option can be used for input mapping

luatex is an utf8 engine and if you want something not-8 bit or utf you 
can use callbacks to implement whatever you want

in addition to this there are also catcodes involved and how these are 
set up depends on the macro package (for instance you use \obeylines 
which quite certainly has a different implementation in different 
macropackages and that influences input end-of-line handling too)

Hans

-----------------------------------------------------------------
                                           Hans Hagen | PRAGMA ADE
               Ridderstraat 27 | 8061 GH Hasselt | The Netherlands
     tel: 038 477 53 69 | voip: 087 875 68 74 | www.pragma-ade.com
                                              | www.pragma-pod.nl
-----------------------------------------------------------------

From jfbu at free.fr  Thu Mar 26 17:09:12 2015
From: jfbu at free.fr (jfbu)
Date: Thu, 26 Mar 2015 17:09:12 +0100
Subject: [luatex] behavior of \write in LuaTeX differs from the one of
	PdfTeX/XeTeX
In-Reply-To: <5513288A.6010305@wxs.nl>
References: <A2881E41-DA8D-41FC-AB3A-E23930B066CB@free.fr>
 <551289FF.6070001@wxs.nl> <5512AC02.9040907@free.fr>
 <5512B2D1.1040607@wxs.nl> <BA710057-DC99-4292-99AA-8E651E9B710C@free.fr>
 <5513288A.6010305@wxs.nl>
Message-ID: <051BA125-94C5-41AF-9FDB-22FA716AF7F3@free.fr>


Le 25 mars 2015 ? 22:28, Hans Hagen <pragma at wxs.nl> a ?crit :
>> [...]
>> where is the -8bit option documented? all info I could get is from
>> 
>> pdftex --help
>> 
>> -8bit                   make all characters printable by default
>> 
>> man pdftex did not bring anything, and in the PdfTeX pdftex-a.pdf
>> a search for 8bit does not bring anything either
>> 
>> I am not sure I understand what "make all characters printable by default"
>> says exactly. I know now that a catcode 12 ^^M will be printed as
>> character with ascii code 13, is that all there is to it? and how does
>> that related to "8bit" ?
> 
> it means that characters < 32 will be output as byte and not as ^^<letter> which is needed for proper round-trip usage and also makes files acceptable for other applications
> 

this answers it, thanks. 

"-8bit" denomination is a bit strange, as the affected stuff are control characters of the 7bit ASCII set (and already  etex prints >127 characters as is, well at least in my limited experience at least regarding ?, ?, ... be it uft-8 or latin-1, for example when docstrip is invoked via etex on an .ins file, contrarily to tex82 which writes stuff like ^^c3^^a9, ^^c3^^a0 for utf-8 case and ^^e9, ^^e0 for latin-1 case)

Even if I had seen -8bit option somewhere in past (perhaps I have, but the other day I have not found it elsewhere than via pdftex --help), I would not have immediately guessed it had to do with ASCII Control characters.



> btw, the -translate-file option can be used for input mapping
> 
> luatex is an utf8 engine and if you want something not-8 bit or utf you can use callbacks to implement whatever you want
> 

noted


> in addition to this there are also catcodes involved and how these are set up depends on the macro package (for instance you use \obeylines which quite certainly has a different implementation in different macropackages and that influences input end-of-line handling too)


ok, but I don't understand here your reference to \obeylines, as there was no \obeylines but a \catcode13=12 in my code, but maybe that's just a missing "if you use \obeylines.."

anyway, thanks again

Jean-Fran?ois

From pragma at wxs.nl  Thu Mar 26 18:23:22 2015
From: pragma at wxs.nl (Hans Hagen)
Date: Thu, 26 Mar 2015 18:23:22 +0100
Subject: [luatex] behavior of \write in LuaTeX differs from the one of
 PdfTeX/XeTeX
In-Reply-To: <051BA125-94C5-41AF-9FDB-22FA716AF7F3@free.fr>
References: <A2881E41-DA8D-41FC-AB3A-E23930B066CB@free.fr>
 <551289FF.6070001@wxs.nl> <5512AC02.9040907@free.fr>
 <5512B2D1.1040607@wxs.nl> <BA710057-DC99-4292-99AA-8E651E9B710C@free.fr>
 <5513288A.6010305@wxs.nl> <051BA125-94C5-41AF-9FDB-22FA716AF7F3@free.fr>
Message-ID: <5514408A.4030905@wxs.nl>

On 3/26/2015 5:09 PM, jfbu wrote:

> ok, but I don't understand here your reference to \obeylines, as there was no \obeylines but a \catcode13=12 in my code, but maybe that's just a missing "if you use \obeylines.."

it saw in some posted link but didn't look too close into it as i don't 
run latex here

% http://tug.org/pipermail/lualatex-dev/2011-November/001376.html

  -----------------------------------------------------------------
                                           Hans Hagen | PRAGMA ADE
               Ridderstraat 27 | 8061 GH Hasselt | The Netherlands
     tel: 038 477 53 69 | voip: 087 875 68 74 | www.pragma-ade.com
                                              | www.pragma-pod.nl
-----------------------------------------------------------------

From jfbu at free.fr  Thu Mar 26 18:38:10 2015
From: jfbu at free.fr (jfbu)
Date: Thu, 26 Mar 2015 18:38:10 +0100
Subject: [luatex] behavior of \write in LuaTeX differs from the one of
	PdfTeX/XeTeX
In-Reply-To: <5514408A.4030905@wxs.nl>
References: <A2881E41-DA8D-41FC-AB3A-E23930B066CB@free.fr>
 <551289FF.6070001@wxs.nl> <5512AC02.9040907@free.fr>
 <5512B2D1.1040607@wxs.nl> <BA710057-DC99-4292-99AA-8E651E9B710C@free.fr>
 <5513288A.6010305@wxs.nl> <051BA125-94C5-41AF-9FDB-22FA716AF7F3@free.fr>
 <5514408A.4030905@wxs.nl>
Message-ID: <888EDFBB-E2C0-441D-AD42-16E3DFDE0BEC@free.fr>


Le 26 mars 2015 ? 18:23, Hans Hagen <pragma at wxs.nl> a ?crit :

> On 3/26/2015 5:09 PM, jfbu wrote:
> 
>> ok, but I don't understand here your reference to \obeylines, as there was no \obeylines but a \catcode13=12 in my code, but maybe that's just a missing "if you use \obeylines.."
> 
> it saw in some posted link but didn't look too close into it as i don't run latex here
> 
> % http://tug.org/pipermail/lualatex-dev/2011-November/001376.html

this explains it!

let me correct my 

> file, contrarily to tex82 which writes stuff like ^^c3^^a9, ^^c3^^a0 for utf-8 

that should have been a reference TeX3 (from what I read in TeX by Topic)
which was released in 1989 (if I trust the wikipedia page). 

... but everybody knows that on the list, me too, except every 3 months I
must redo \immediate\write\brain{DATA}  ...

best
Jean-Fran?ois
 

From jfbu at free.fr  Thu Mar 26 21:40:32 2015
From: jfbu at free.fr (jfbu)
Date: Thu, 26 Mar 2015 21:40:32 +0100
Subject: [luatex] behavior of \write in LuaTeX differs from the one of
	PdfTeX/XeTeX
In-Reply-To: <888EDFBB-E2C0-441D-AD42-16E3DFDE0BEC@free.fr>
References: <A2881E41-DA8D-41FC-AB3A-E23930B066CB@free.fr>
 <551289FF.6070001@wxs.nl> <5512AC02.9040907@free.fr>
 <5512B2D1.1040607@wxs.nl> <BA710057-DC99-4292-99AA-8E651E9B710C@free.fr>
 <5513288A.6010305@wxs.nl> <051BA125-94C5-41AF-9FDB-22FA716AF7F3@free.fr>
 <5514408A.4030905@wxs.nl> <888EDFBB-E2C0-441D-AD42-16E3DFDE0BEC@free.fr>
Message-ID: <00586126-3C18-48F4-ACB9-C7E5FAED6411@free.fr>


Le 26 mars 2015 ? 18:38, jfbu <jfbu at free.fr> a ?crit :

> Le 26 mars 2015 ? 18:23, Hans Hagen <pragma at wxs.nl> a ?crit :
> 
>> On 3/26/2015 5:09 PM, jfbu wrote:
>> 
>>> ok, but I don't understand here your reference to \obeylines, as there was no \obeylines but a \catcode13=12 in my code, but maybe that's just a missing "if you use \obeylines.."
>> 
>> it saw in some posted link but didn't look too close into it as i don't run latex here
>> 
>> % http://tug.org/pipermail/lualatex-dev/2011-November/001376.html
> 
> this explains it!

just for the record the \obeylines in the latex code snippet from 
the link above was irrelevant to the problem and can be commented out. 

It sets the \catcode of 13 to active, but as \endlinechar is then set 
to 10, the \toks0 receives a character 10 token (of catcode 12 as 
per default in latex). 

The issue is that 10 is also the default \newlinechar in LaTeX. 

With pdftex at least, the \scantokens
is truly close to a \write (with no expansion) followed by an \input, 
and the \newlinechar matters at the stage of the \write. 

In the code snippet from the link above setting \newlinechar to anything 
but 10 has no issues, but if it is set to 10 (the default in LaTeX), the 
\scantokens of LuaLaTeX just drops whatever is inside the \scantokens
after the encountered token of character code = \the\newlinechar

The issue about 7bit or 8bit output seems irrelevant here, here is
a variant of the code snippet from the link above where I chose
at random character 17 to play the role of \newlinechar

(sorry I don't know ConTeXT hence I will use Plain (e)TeX )

\catcode 17 = 12
\mathcode17=\the\mathcode`A

\begingroup
    \endlinechar=17
    \global\toks0{$
                  =A$}%
\endgroup %

\scantokens\expandafter{\the\toks0\relax}

\newlinechar = 17 % PROBLEM WITH LUATEX, NOT WITH ETEX/PDFTEX/XETEX
\scantokens\expandafter{\the\toks0\relax}

\bye

Jean-Fran?ois



From jfbu at free.fr  Thu Mar 26 21:50:58 2015
From: jfbu at free.fr (jfbu)
Date: Thu, 26 Mar 2015 21:50:58 +0100
Subject: [luatex] behavior of \write in LuaTeX differs from the one of
	PdfTeX/XeTeX
In-Reply-To: <00586126-3C18-48F4-ACB9-C7E5FAED6411@free.fr>
References: <A2881E41-DA8D-41FC-AB3A-E23930B066CB@free.fr>
 <551289FF.6070001@wxs.nl> <5512AC02.9040907@free.fr>
 <5512B2D1.1040607@wxs.nl> <BA710057-DC99-4292-99AA-8E651E9B710C@free.fr>
 <5513288A.6010305@wxs.nl> <051BA125-94C5-41AF-9FDB-22FA716AF7F3@free.fr>
 <5514408A.4030905@wxs.nl> <888EDFBB-E2C0-441D-AD42-16E3DFDE0BEC@free.fr>
 <00586126-3C18-48F4-ACB9-C7E5FAED6411@free.fr>
Message-ID: <FAF7D583-42B7-4FAB-8CFB-FB6DC5588777@free.fr>

sorry about the superfluous \the below


Le 26 mars 2015 ? 21:40, jfbu <jfbu at free.fr> a ?crit :

> \catcode 17 = 12
> \mathcode17=\the\mathcode`A
              ^^^
> 
> \begingroup
>    \endlinechar=17
>    \global\toks0{$
>                  =A$}%
> \endgroup %
> 
> \scantokens\expandafter{\the\toks0\relax}
> 
> \newlinechar = 17 % PROBLEM WITH LUATEX, NOT WITH ETEX/PDFTEX/XETEX
> \scantokens\expandafter{\the\toks0\relax}
> 
> \bye



From jolson at kth.se  Fri Mar 27 14:05:22 2015
From: jolson at kth.se (Jonas Olson)
Date: Fri, 27 Mar 2015 14:05:22 +0100
Subject: [luatex] Refuses to page break between section headings
In-Reply-To: <21758.545.340073.931092@zaphod.ms25.net>
References: <54FD655C.4040207@kth.se>
 <CAEW6iOizcECQkb06-JdsY7_DgDZnSetc0Dta6do-W3_vWa6O2w@mail.gmail.com>
 <54FD7BC8.3090305@kth.se>	<12es7d5fdfytj.dlg@nililand.de>
 <54FDCA42.9060304@kth.se>
 <CAG5iGsAPodkeLXCCxy+DBQT=fecQrj3P2A5CRq-ouFucgLXPQA@mail.gmail.com>
 <21758.545.340073.931092@zaphod.ms25.net>
Message-ID: <55155592.8060409@kth.se>

Den 2015-03-09 21:27, Reinhard Kotucha skrev:
> Well, as far as I understand Jonas, not all sections are empty.  But
> if there are too many empty sections on one page, no pagebreak occurs
> and you get a big overfull \hbox.  Thus, I suppose that DPC's
> suggestion to insert pagebreaks manually (\clearpage) is an
> appropriate solution.

That's correct, and I did end up using manual page breaks. This is the 
end result: <https://copy.com/IunhoT0CaeCWhgWb?download=1>
Thank you all for your help.

> Ulrike, the reason Jonas [ab]uses \section is because this macro
> contains discardable vertical space i.e., the space above the section
> header disappears if the section begins at the top of a page.  This is
> exactly what Jonas wants, hence using \section is appropriate.

Precisely so. Some day, I might learn how to modify \section to allow an 
empty body, or how write my own command that has "discardable vertical 
space".

Jonas

