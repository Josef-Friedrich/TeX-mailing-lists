From patrick at gundla.ch  Sat Feb 11 15:04:34 2017
From: patrick at gundla.ch (Patrick Gundlach)
Date: Sat, 11 Feb 2017 15:04:34 +0100
Subject: [luatex] IPC best practices?
Message-ID: <D0EED636-CD8F-4623-8F03-A5567739FCA3@gundla.ch>

Hi all,

I have a bit of a vague question about inter process communication. The setup is a program written in Go (but that should not matter very much) that starts one LuaTeX process as a child. Supported systems are Linux, Windows and Mac. Now I would like to talk between the parent process (Go) and the child process (LuaTeX) such as:

  parent: "Hello child, please do this"
  child: "hi parent, I have done this, here is the result"

and so on.

What is the cleanest way to do this? I used to do that over TCP sockets (talking on a defined port on the local host), but this does not seem as the optimal solution. For example on Windows I get a "firewall warning" that the user has to click away.

Any idea on that topic?

Patrick



From pragma at wxs.nl  Sun Feb 12 17:56:49 2017
From: pragma at wxs.nl (Hans Hagen)
Date: Sun, 12 Feb 2017 17:56:49 +0100
Subject: [luatex] IPC best practices?
In-Reply-To: <D0EED636-CD8F-4623-8F03-A5567739FCA3@gundla.ch>
References: <D0EED636-CD8F-4623-8F03-A5567739FCA3@gundla.ch>
Message-ID: <1ecc212a-f3f1-604d-9e68-2f9d68c57c82@wxs.nl>

On 2/11/2017 3:04 PM, Patrick Gundlach wrote:
> Hi all,
>
> I have a bit of a vague question about inter process communication. The setup is a program written in Go (but that should not matter very much) that starts one LuaTeX process as a child. Supported systems are Linux, Windows and Mac. Now I would like to talk between the parent process (Go) and the child process (LuaTeX) such as:
>
>   parent: "Hello child, please do this"
>   child: "hi parent, I have done this, here is the result"
>
> and so on.
>
> What is the cleanest way to do this? I used to do that over TCP sockets (talking on a defined port on the local host), but this does not seem as the optimal solution. For example on Windows I get a "firewall warning" that the user has to click away.
>
> Any idea on that topic?

use sockets (socket library is present)


-----------------------------------------------------------------
                                           Hans Hagen | PRAGMA ADE
               Ridderstraat 27 | 8061 GH Hasselt | The Netherlands
        tel: 038 477 53 69 | www.pragma-ade.nl | www.pragma-pod.nl
-----------------------------------------------------------------

From patrick at gundla.ch  Mon Feb 13 15:19:12 2017
From: patrick at gundla.ch (Patrick Gundlach)
Date: Mon, 13 Feb 2017 15:19:12 +0100
Subject: [luatex] IPC best practices?
In-Reply-To: <1ecc212a-f3f1-604d-9e68-2f9d68c57c82@wxs.nl>
References: <D0EED636-CD8F-4623-8F03-A5567739FCA3@gundla.ch>
 <1ecc212a-f3f1-604d-9e68-2f9d68c57c82@wxs.nl>
Message-ID: <26731565-BE0C-4FCB-95FA-CB7D582E2A45@gundla.ch>


> Am 12.02.2017 um 17:56 schrieb Hans Hagen <pragma at wxs.nl>:
> 
> On 2/11/2017 3:04 PM, Patrick Gundlach wrote:
>> Hi all,
>> 
>> I have a bit of a vague question about inter process communication. The setup is a program written in Go (but that should not matter very much) that starts one LuaTeX process as a child. Supported systems are Linux, Windows and Mac. Now I would like to talk between the parent process (Go) and the child process (LuaTeX) such as:
>> 
>>  parent: "Hello child, please do this"
>>  child: "hi parent, I have done this, here is the result"
>> 
>> and so on.
>> 
>> What is the cleanest way to do this? I used to do that over TCP sockets (talking on a defined port on the local host), but this does not seem as the optimal solution. For example on Windows I get a "firewall warning" that the user has to click away.
>> 
>> Any idea on that topic?
> 
> use sockets (socket library is present)

Do you mean TCP sockets or unix sockets? If the second: is this well supported by windows? I can't really find a documentation on that.

Patrick




From pragma at wxs.nl  Mon Feb 13 16:19:41 2017
From: pragma at wxs.nl (Hans Hagen)
Date: Mon, 13 Feb 2017 16:19:41 +0100
Subject: [luatex] IPC best practices?
In-Reply-To: <26731565-BE0C-4FCB-95FA-CB7D582E2A45@gundla.ch>
References: <D0EED636-CD8F-4623-8F03-A5567739FCA3@gundla.ch>
 <1ecc212a-f3f1-604d-9e68-2f9d68c57c82@wxs.nl>
 <26731565-BE0C-4FCB-95FA-CB7D582E2A45@gundla.ch>
Message-ID: <de8dc411-536c-4164-7034-4625d37fd6d3@wxs.nl>

On 2/13/2017 3:19 PM, Patrick Gundlach wrote:
>
>> Am 12.02.2017 um 17:56 schrieb Hans Hagen <pragma at wxs.nl>:
>>
>> On 2/11/2017 3:04 PM, Patrick Gundlach wrote:
>>> Hi all,
>>>
>>> I have a bit of a vague question about inter process communication. The setup is a program written in Go (but that should not matter very much) that starts one LuaTeX process as a child. Supported systems are Linux, Windows and Mac. Now I would like to talk between the parent process (Go) and the child process (LuaTeX) such as:
>>>
>>>  parent: "Hello child, please do this"
>>>  child: "hi parent, I have done this, here is the result"
>>>
>>> and so on.
>>>
>>> What is the cleanest way to do this? I used to do that over TCP sockets (talking on a defined port on the local host), but this does not seem as the optimal solution. For example on Windows I get a "firewall warning" that the user has to click away.
>>>
>>> Any idea on that topic?
>>
>> use sockets (socket library is present)
>
> Do you mean TCP sockets or unix sockets? If the second: is this well supported by windows? I can't really find a documentation on that.

i normaly use tcp ... no problems on windows

Hans


-----------------------------------------------------------------
                                           Hans Hagen | PRAGMA ADE
               Ridderstraat 27 | 8061 GH Hasselt | The Netherlands
        tel: 038 477 53 69 | www.pragma-ade.nl | www.pragma-pod.nl
-----------------------------------------------------------------

From luigi.scarso at gmail.com  Fri Feb 17 09:55:19 2017
From: luigi.scarso at gmail.com (luigi scarso)
Date: Fri, 17 Feb 2017 09:55:19 +0100
Subject: [luatex] png and svg backend in mplib embedded in luatex
Message-ID: <CAG5iGsCXt-mCr3LEUH+AQa4=OeQhjV1Zj25ke8EF5dfLCV6nZQ@mail.gmail.com>

We are planning to drop the png and svg
backend of mplib embedded in luatex .
This means that if test.lua  uses the png or svg  backend

$>luatex --luaonly test.lua

will not work anymore as expected.

To be clear:,
*) metapost  and mplib will stay as is now;
*) mplib when embedded in luatex will loose  the png and svg backend.

ConTeXt doesn't use the png and svg  backend,
and it seems that   LuaLateX doesn't use these backend too.

So....does anybody use the png or svg backend of mplib embedded in luatex ?

-- 
luigi

From d.p.carlisle at gmail.com  Fri Feb 17 18:21:07 2017
From: d.p.carlisle at gmail.com (David Carlisle)
Date: Fri, 17 Feb 2017 17:21:07 +0000
Subject: [luatex] \noligs
Message-ID: <CAEW6iOg16JJee1OJp6rN-dquhVEJ+OK-Rzv1BZ2sewJXtA-0bA@mail.gmail.com>

According to the manual \noligs taks an integer and suppresses
ligatures when node lists are being built.

There's no example and no information about what the integer was supposed to be.

I guessed the font id or 0/1 true false but nothing seemed to have any effect.

Are there any examples of the correct usage of this command?

I tried with tfm fonts as

\font\rmm="cmr10" at 20pt

{\rmm ffind ffish ffood}

{\rmm \noligs\fontid\font ffind ffish ffood}

{\rmm \noligs0 ffind ffish ffood}

{\rmm \noligs1 ffind ffish ffood}


\bye

or with OpenType fonts by changing the first line to

\input{luaotfload.sty}
\font\rmm="[lmroman10-regular]:" at 20pt

but all lines looked the same and had ff and ffi ligatures.

David

From luigi.scarso at gmail.com  Fri Feb 17 20:57:09 2017
From: luigi.scarso at gmail.com (luigi scarso)
Date: Fri, 17 Feb 2017 20:57:09 +0100
Subject: [luatex] LuaTeX 1.0.3 announcement
Message-ID: <CAG5iGsAE3Yc+b6rHf7vV9_63Jw6pkPyMgfhpz841wwXUzgM2+A@mail.gmail.com>

==============================================================
LuaTeX Release 1.0.3  was released 2017021514
==============================================================

This is a minor upgrade and probably this version will go on texlive.
There are a couple
of fixes and additions.
- We added a few a few more helpers in the pdf namespace (like
set|get]gentounicode,
  [set|get]omitcidset and set|get]decimaldigits. Some helpers were
moved from the tex
  to the pdf namespace.

- We added a build_page_insert callback for inserts so that one can
for instance adapt
  spacing on demand.

- On the agenda has been some more control over word start and end in
hyphenation and
  this is now possible via hyphenationbounds. We also updated the
manual with some more
  details.

- An old tracker item with respect to control over spacing around math
was revived and
  has resulted in mathsurroundmode (one can wonder how useful this is).

- We improved the resolution detection in included jpeg images.


- An ffi library has been added to luatex so that it is more in sync
with luajittex. This
  permits easy and flexible loading of libraries. Our policy is to
make luatex as lean
  as possible with no dependencies and this is a step towards that.
Eventually we hope
  to support all relevant platforms.

- The glue and skip register accessors have been improved as a step in
freeing the user
  from glue spec management.

- We added a few more getters and setters for nodes in order to get a
more consistent
  set.

- Irrelevant fields have been removed from the status table and an
engine identifier
  has been added.

- Of course there are numerous fixes and improvements but none of
these have consequences
  for the interfaces.

- The manual has been updated but will be improved over time.




Have fun,
Hans, Luigi, Taco

From pragma at wxs.nl  Fri Feb 17 21:20:45 2017
From: pragma at wxs.nl (Hans Hagen)
Date: Fri, 17 Feb 2017 21:20:45 +0100
Subject: [luatex] \noligs
In-Reply-To: <CAEW6iOg16JJee1OJp6rN-dquhVEJ+OK-Rzv1BZ2sewJXtA-0bA@mail.gmail.com>
References: <CAEW6iOg16JJee1OJp6rN-dquhVEJ+OK-Rzv1BZ2sewJXtA-0bA@mail.gmail.com>
Message-ID: <0c7deb95-fe68-94d0-993b-6106fa32d300@wxs.nl>

On 2/17/2017 6:21 PM, David Carlisle wrote:
> According to the manual \noligs taks an integer and suppresses
> ligatures when node lists are being built.
>
> There's no example and no information about what the integer was supposed to be.
>
> I guessed the font id or 0/1 true false but nothing seemed to have any effect.
>
> Are there any examples of the correct usage of this command?
>
> I tried with tfm fonts as
>
> \font\rmm="cmr10" at 20pt
>
> {\rmm ffind ffish ffood}
>
> {\rmm \noligs\fontid\font ffind ffish ffood}
>
> {\rmm \noligs0 ffind ffish ffood}
>
> {\rmm \noligs1 ffind ffish ffood}

it's a bit of old junk staying around (for now) it is supposed to 
suppress ligs in math with traditional fonts .. not really advocated 
features

> \bye
>
> or with OpenType fonts by changing the first line to
>
> \input{luaotfload.sty}
> \font\rmm="[lmroman10-regular]:" at 20pt
>
> but all lines looked the same and had ff and ffi ligatures.

the opentype / unicode way is to inject a zwj or so

Hans

-----------------------------------------------------------------
                                           Hans Hagen | PRAGMA ADE
               Ridderstraat 27 | 8061 GH Hasselt | The Netherlands
        tel: 038 477 53 69 | www.pragma-ade.nl | www.pragma-pod.nl
-----------------------------------------------------------------

From d.p.carlisle at gmail.com  Fri Feb 17 22:33:20 2017
From: d.p.carlisle at gmail.com (David Carlisle)
Date: Fri, 17 Feb 2017 21:33:20 +0000
Subject: [luatex] \noligs
In-Reply-To: <0c7deb95-fe68-94d0-993b-6106fa32d300@wxs.nl>
References: <CAEW6iOg16JJee1OJp6rN-dquhVEJ+OK-Rzv1BZ2sewJXtA-0bA@mail.gmail.com>
 <0c7deb95-fe68-94d0-993b-6106fa32d300@wxs.nl>
Message-ID: <CAEW6iOivG3qaqWd=56g4bkQPijcCu-gd6zSUU_CN-0qZj1zs7w@mail.gmail.com>

Hans,

> to suppress ligs in math with traditional fonts

thanks.

 ooh maths, I'd not have guessed that (and was looking in the wrong
place in the sources!),

> the opentype / unicode way is to inject a zwj or so


yes it was more a matter of trying to understand the manual than
actually wanting to suppress any ligatures:-)

David

From d.p.carlisle at gmail.com  Sat Feb 18 15:13:30 2017
From: d.p.carlisle at gmail.com (David Carlisle)
Date: Sat, 18 Feb 2017 14:13:30 +0000
Subject: [luatex] kerning with delimiters with opentype math fonts
Message-ID: <CAEW6iOhOq48gceV8sqNs-L1s4q-8CrU2Qe914V4+EGytNR6EPA@mail.gmail.com>

there is a full (plain TeX) example and screenshots in a (non)answer
on stackexchange

http://tex.stackexchange.com/a/354485

but in brief:

\left| T \right|

has a kern between the T and the right hand | matching the kern in |T|

if tfm fonts are used in luatex or xetex or pdftex

but if Opentype Latin modern is used

xetex shows the kern but luatex has no kern once \right or \Uright are
used, but does still show the kern with |T|.

I'm not sure if this is a luatex or luaotfload issue?

David

From pragma at wxs.nl  Sat Feb 18 16:12:35 2017
From: pragma at wxs.nl (Hans Hagen)
Date: Sat, 18 Feb 2017 16:12:35 +0100
Subject: [luatex] kerning with delimiters with opentype math fonts
In-Reply-To: <CAEW6iOhOq48gceV8sqNs-L1s4q-8CrU2Qe914V4+EGytNR6EPA@mail.gmail.com>
References: <CAEW6iOhOq48gceV8sqNs-L1s4q-8CrU2Qe914V4+EGytNR6EPA@mail.gmail.com>
Message-ID: <53a8cd00-42a6-9a4c-8c8c-96f5a5101bb6@wxs.nl>

On 2/18/2017 3:13 PM, David Carlisle wrote:
> there is a full (plain TeX) example and screenshots in a (non)answer
> on stackexchange
>
> http://tex.stackexchange.com/a/354485
>
> but in brief:
>
> \left| T \right|
>
> has a kern between the T and the right hand | matching the kern in |T|
>
> if tfm fonts are used in luatex or xetex or pdftex
>
> but if Opentype Latin modern is used
>
> xetex shows the kern but luatex has no kern once \right or \Uright are
> used, but does still show the kern with |T|.
>
> I'm not sure if this is a luatex or luaotfload issue?

It's a font issue ... try pagella or so ... latin modern has old math 
font like properties so it has char boundingboxes / widths that assume 
that italic correction is added.

For opentype fonts luatex doesn't use the traditional 8 bit font code 
path. Early versions had a kind of hybrid but that failed miserably when 
more opentype mathfonts came around and messy heuristics were dropped in 
favour of separate code paths (not even lua magic could beat that so i 
dropped most of that kind of hackery from context). Kerns have similar 
issues as opentype has staircase kerns.

I can of course add a pseudo feature to the font loader that adds italic 
to the width for fonts that need that. I might also cook up some magic 
related to fences but again it's a macro package issue then.

The best solution is proper fonts.

Hans

-----------------------------------------------------------------
                                           Hans Hagen | PRAGMA ADE
               Ridderstraat 27 | 8061 GH Hasselt | The Netherlands
        tel: 038 477 53 69 | www.pragma-ade.nl | www.pragma-pod.nl
-----------------------------------------------------------------

From d.p.carlisle at gmail.com  Sat Feb 18 16:23:50 2017
From: d.p.carlisle at gmail.com (David Carlisle)
Date: Sat, 18 Feb 2017 15:23:50 +0000
Subject: [luatex] kerning with delimiters with opentype math fonts
In-Reply-To: <53a8cd00-42a6-9a4c-8c8c-96f5a5101bb6@wxs.nl>
References: <CAEW6iOhOq48gceV8sqNs-L1s4q-8CrU2Qe914V4+EGytNR6EPA@mail.gmail.com>
 <53a8cd00-42a6-9a4c-8c8c-96f5a5101bb6@wxs.nl>
Message-ID: <CAEW6iOg0gJtKxpQKABkn3zac0HPJ54jsvm8txPUJdH0dfYECpQ@mail.gmail.com>

On 18 February 2017 at 15:12, Hans Hagen <pragma at wxs.nl> wrote:
> On 2/18/2017 3:13 PM, David Carlisle wrote:
>>
>> there is a full (plain TeX) example and screenshots in a (non)answer
>> on stackexchange
>>
>> http://tex.stackexchange.com/a/354485
>>
>> but in brief:
>>
>> \left| T \right|
>>
>> has a kern between the T and the right hand | matching the kern in |T|
>>
>> if tfm fonts are used in luatex or xetex or pdftex
>>
>> but if Opentype Latin modern is used
>>
>> xetex shows the kern but luatex has no kern once \right or \Uright are
>> used, but does still show the kern with |T|.
>>
>> I'm not sure if this is a luatex or luaotfload issue?
>
>
> It's a font issue ... try pagella or so ... latin modern has old math font
> like properties so it has char boundingboxes / widths that assume that
> italic correction is added.
>
> For opentype fonts luatex doesn't use the traditional 8 bit font code path.
> Early versions had a kind of hybrid but that failed miserably when more
> opentype mathfonts came around and messy heuristics were dropped in favour
> of separate code paths (not even lua magic could beat that so i dropped most
> of that kind of hackery from context). Kerns have similar issues as opentype
> has staircase kerns.
>
> I can of course add a pseudo feature to the font loader that adds italic to
> the width for fonts that need that. I might also cook up some magic related
> to fences but again it's a macro package issue then.
>
> The best solution is proper fonts.
>
> Hans
>

Hmm not unreasonable from an engine point of view but that still
leaves the users coming to us and us (me at least) not knowing what to
do..

If you add something to the font loader could you ping us so we know
to use it in latex, or ...

I suppose what you are really saying is that best would be a
latin-modern-math-without-legacy-metric-weirdness.otf.
Is it clear what would be need to be done to make such a thing? (is it
a systematic re-adjustment of italic correction and widths for
example?)
if it is systematic could it be done via the luatex virtual font
feature rather than actually making a new OTF font?

Not asking for actual code (at this point:-)  just bouncing thoughts.....


David

From joseph.wright at morningstar2.co.uk  Sat Feb 18 16:26:38 2017
From: joseph.wright at morningstar2.co.uk (Joseph Wright)
Date: Sat, 18 Feb 2017 15:26:38 +0000
Subject: [luatex] kerning with delimiters with opentype math fonts
In-Reply-To: <CAEW6iOg0gJtKxpQKABkn3zac0HPJ54jsvm8txPUJdH0dfYECpQ@mail.gmail.com>
References: <CAEW6iOhOq48gceV8sqNs-L1s4q-8CrU2Qe914V4+EGytNR6EPA@mail.gmail.com>
 <53a8cd00-42a6-9a4c-8c8c-96f5a5101bb6@wxs.nl>
 <CAEW6iOg0gJtKxpQKABkn3zac0HPJ54jsvm8txPUJdH0dfYECpQ@mail.gmail.com>
Message-ID: <12e386ab-bd7a-94f1-b484-bcd2db12a93d@morningstar2.co.uk>

On 18/02/2017 15:23, David Carlisle wrote:
> On 18 February 2017 at 15:12, Hans Hagen <pragma at wxs.nl> wrote:
>> On 2/18/2017 3:13 PM, David Carlisle wrote:
>>>
>>> there is a full (plain TeX) example and screenshots in a (non)answer
>>> on stackexchange
>>>
>>> http://tex.stackexchange.com/a/354485
>>>
>>> but in brief:
>>>
>>> \left| T \right|
>>>
>>> has a kern between the T and the right hand | matching the kern in |T|
>>>
>>> if tfm fonts are used in luatex or xetex or pdftex
>>>
>>> but if Opentype Latin modern is used
>>>
>>> xetex shows the kern but luatex has no kern once \right or \Uright are
>>> used, but does still show the kern with |T|.
>>>
>>> I'm not sure if this is a luatex or luaotfload issue?
>>
>>
>> It's a font issue ... try pagella or so ... latin modern has old math font
>> like properties so it has char boundingboxes / widths that assume that
>> italic correction is added.
>>
>> For opentype fonts luatex doesn't use the traditional 8 bit font code path.
>> Early versions had a kind of hybrid but that failed miserably when more
>> opentype mathfonts came around and messy heuristics were dropped in favour
>> of separate code paths (not even lua magic could beat that so i dropped most
>> of that kind of hackery from context). Kerns have similar issues as opentype
>> has staircase kerns.
>>
>> I can of course add a pseudo feature to the font loader that adds italic to
>> the width for fonts that need that. I might also cook up some magic related
>> to fences but again it's a macro package issue then.
>>
>> The best solution is proper fonts.
>>
>> Hans
>>
> 
> Hmm not unreasonable from an engine point of view but that still
> leaves the users coming to us and us (me at least) not knowing what to
> do..
> 
> If you add something to the font loader could you ping us so we know
> to use it in latex, or ...
> 
> I suppose what you are really saying is that best would be a
> latin-modern-math-without-legacy-metric-weirdness.otf.

Surely given the developing nature of OpenType math a simple change to
the current font file would be best: this is far from stable as-yet.

Joseph


From luatex at nililand.de  Sat Feb 18 18:25:01 2017
From: luatex at nililand.de (Ulrike Fischer)
Date: Sat, 18 Feb 2017 18:25:01 +0100
Subject: [luatex] kerning with delimiters with opentype math fonts
References: <CAEW6iOhOq48gceV8sqNs-L1s4q-8CrU2Qe914V4+EGytNR6EPA@mail.gmail.com>
 <53a8cd00-42a6-9a4c-8c8c-96f5a5101bb6@wxs.nl>
Message-ID: <hcxzcfmhn3wj.dlg@nililand.de>

Am Sat, 18 Feb 2017 16:12:35 +0100 schrieb Hans Hagen:


> It's a font issue

Why does one get the faulty spacing only with \left/right? E.g. in
this context version only the first is wrong:

\starttext

$\left|T \right|$ $|T|$

\stoptext


-- 
Ulrike Fischer 
http://www.troubleshooting-tex.de/


From d.p.carlisle at gmail.com  Sat Feb 18 19:49:55 2017
From: d.p.carlisle at gmail.com (David Carlisle)
Date: Sat, 18 Feb 2017 18:49:55 +0000
Subject: [luatex] kerning with delimiters with opentype math fonts
In-Reply-To: <hcxzcfmhn3wj.dlg@nililand.de>
References: <CAEW6iOhOq48gceV8sqNs-L1s4q-8CrU2Qe914V4+EGytNR6EPA@mail.gmail.com>
 <53a8cd00-42a6-9a4c-8c8c-96f5a5101bb6@wxs.nl> <hcxzcfmhn3wj.dlg@nililand.de>
Message-ID: <CAEW6iOi3guZHsBrzD=F0rw=vWh6nUHyGcGFu3oZLAESnx2eq7A@mail.gmail.com>

Hans,

Following up a bit on Ulrike's question, can you be more specific about
what is wrong with the metrics
and what should change? I'm happy to help encourage the font maintainers if
that's what needs to
happen but currently I wouldn't know what to ask for.

As you said, the issue doesn't show with Pagella Math, but it does with
other TeX Gyre fonts:
Termes Math and Bonum Math as well as the Latin Modern Math in the original
example.
 Also Asana and XITS show the same thing.

Of the files in this test only Pagella, Cambria and Stix2 show an expected
result.
This means that the already small pool of usable math fonts is even smaller
than thought,
if the recommendation is simply just to avoid fonts with this issue?

David




?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://tug.org/pipermail/luatex/attachments/20170218/f6e5181b/attachment-0001.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: tmod.png
Type: image/png
Size: 50349 bytes
Desc: not available
URL: <http://tug.org/pipermail/luatex/attachments/20170218/f6e5181b/attachment-0001.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: tmod.tex
Type: application/x-tex
Size: 360 bytes
Desc: not available
URL: <http://tug.org/pipermail/luatex/attachments/20170218/f6e5181b/attachment-0001.tex>

From rpspringuel at gmail.com  Sat Feb 18 21:06:08 2017
From: rpspringuel at gmail.com (Br. Samuel Springuel)
Date: Sat, 18 Feb 2017 15:06:08 -0500
Subject: [luatex] Lua interpreter difference between Windows and Mac
Message-ID: <ace71209-7646-1483-e537-cee858114046@gmail.com>

I'm writing a lua script which has the following code block:

   font_target = "greciliae.ttf"
   font_directory = kpse.find_file(font_target)
   print(font_directory)

Given that greciliae.ttf is installed in 
$TEXMFLOCAL/fonts/truetype/public/gregoriotex, the code block works fine 
on my Mac (10.11.6) when executed by texlua (and I assume on other Unix 
flavors, though I haven't tested that yet).  However, when I test the 
same code on a Windows (10) machine, font_directory ends up being nil.

When I type `kpsewhich greciliae.ttf` at the command prompt on the 
Windows machine, I get the proper path returned, so I know that 
kpsewhich can find the file.

If I switch font_target to a "gregoriotex.sty" (which is installed in 
$TEXMFLOCAL/tex/lualatex/gregoriotex/) font_directory returns the proper 
value on both machines.  Thus I know that kpse.find_file does actually 
work, at least some of the time, on Windows.

Why isn't kpse.find_file finding fonts that kpsewhich can find on 
Windows?  Am I doing something wrong?

Both machines are running version 0.95.0 (TeXLive 2016) of texlua.
-- 
?????????????????????????
Br. Samuel, OSB
St. Anselm?s Abbey
Washington, DC
(R. Padraic Springuel)

PAX ? ???????

From squinky86 at gmail.com  Sun Feb 19 03:34:26 2017
From: squinky86 at gmail.com (Jon Hood)
Date: Sat, 18 Feb 2017 20:34:26 -0600
Subject: [luatex] Hebrew language error
Message-ID: <CAD0jTRtWhgYOarFq0wXgRjODzrk-M+7ztEA_r=G0wZwS_YwfcQ@mail.gmail.com>

I noticed Hans Hagen's reply to an issue I ran into:
http://ntg-context.ntg.narkive.com/K76Ws03d/luatex-0-95-0-error-with-bidi-and-hebrew#post1

Unfortunately, I don't understand his solution. Can someone please
point me in the correct direction to fix this error?

Thanks!

From kakuto at fuk.kindai.ac.jp  Sun Feb 19 08:02:30 2017
From: kakuto at fuk.kindai.ac.jp (Akira Kakuto)
Date: Sun, 19 Feb 2017 16:02:30 +0900
Subject: [luatex]  Lua interpreter difference between Windows and Mac
Message-ID: <FBAEF007FB4040289B455BB44FE4EB77@CJ3001517A>

> However, when I test the 
> same code on a Windows (10) machine,
> font_directory ends up being nil.

Probably kpse.find_file(filename) on windows without file type
searches TEXINPUTS by default. Try by adding file type as follows:

kpse.set_program_name('texlua')
font_target = "greciliae.ttf"
font_directory = kpse.find_file(font_target, 'truetype fonts')
print(font_directory)

Best,
Akira


From pragma at wxs.nl  Sun Feb 19 13:11:12 2017
From: pragma at wxs.nl (Hans Hagen)
Date: Sun, 19 Feb 2017 13:11:12 +0100
Subject: [luatex] kerning with delimiters with opentype math fonts
In-Reply-To: <CAEW6iOg0gJtKxpQKABkn3zac0HPJ54jsvm8txPUJdH0dfYECpQ@mail.gmail.com>
References: <CAEW6iOhOq48gceV8sqNs-L1s4q-8CrU2Qe914V4+EGytNR6EPA@mail.gmail.com>
 <53a8cd00-42a6-9a4c-8c8c-96f5a5101bb6@wxs.nl>
 <CAEW6iOg0gJtKxpQKABkn3zac0HPJ54jsvm8txPUJdH0dfYECpQ@mail.gmail.com>
Message-ID: <501cd4e1-a1b1-f7a2-909e-3635e8f06457@wxs.nl>

On 2/18/2017 4:23 PM, David Carlisle wrote:
> On 18 February 2017 at 15:12, Hans Hagen <pragma at wxs.nl> wrote:
>> On 2/18/2017 3:13 PM, David Carlisle wrote:
>>>
>>> there is a full (plain TeX) example and screenshots in a (non)answer
>>> on stackexchange
>>>
>>> http://tex.stackexchange.com/a/354485
>>>
>>> but in brief:
>>>
>>> \left| T \right|
>>>
>>> has a kern between the T and the right hand | matching the kern in |T|
>>>
>>> if tfm fonts are used in luatex or xetex or pdftex
>>>
>>> but if Opentype Latin modern is used
>>>
>>> xetex shows the kern but luatex has no kern once \right or \Uright are
>>> used, but does still show the kern with |T|.
>>>
>>> I'm not sure if this is a luatex or luaotfload issue?
>>
>>
>> It's a font issue ... try pagella or so ... latin modern has old math font
>> like properties so it has char boundingboxes / widths that assume that
>> italic correction is added.
>>
>> For opentype fonts luatex doesn't use the traditional 8 bit font code path.
>> Early versions had a kind of hybrid but that failed miserably when more
>> opentype mathfonts came around and messy heuristics were dropped in favour
>> of separate code paths (not even lua magic could beat that so i dropped most
>> of that kind of hackery from context). Kerns have similar issues as opentype
>> has staircase kerns.
>>
>> I can of course add a pseudo feature to the font loader that adds italic to
>> the width for fonts that need that. I might also cook up some magic related
>> to fences but again it's a macro package issue then.
>>
>> The best solution is proper fonts.
>>
>> Hans
>>
>
> Hmm not unreasonable from an engine point of view but that still
> leaves the users coming to us and us (me at least) not knowing what to
> do..
>
> If you add something to the font loader could you ping us so we know
> to use it in latex, or ...

i'll add

italicwidths=yes

but it's up to PG to pick up that pseudo feature in his derived loader 
for latex

> I suppose what you are really saying is that best would be a
> latin-modern-math-without-legacy-metric-weirdness.otf.
> Is it clear what would be need to be done to make such a thing? (is it
> a systematic re-adjustment of italic correction and widths for
> example?)

i think cleaning up the font metrics and kerning of lm is on the gyre 
teams agenda (there are some more issues)

> if it is systematic could it be done via the luatex virtual font
> feature rather than actually making a new OTF font?

sure that how the above does it (a typical implemented in 10 minute 
trick that i then wonder about if i remember it's there in a few years)

> Not asking for actual code (at this point:-)  just bouncing thoughts.....

Hans


-----------------------------------------------------------------
                                           Hans Hagen | PRAGMA ADE
               Ridderstraat 27 | 8061 GH Hasselt | The Netherlands
        tel: 038 477 53 69 | www.pragma-ade.nl | www.pragma-pod.nl
-----------------------------------------------------------------

From pragma at wxs.nl  Sun Feb 19 13:24:08 2017
From: pragma at wxs.nl (Hans Hagen)
Date: Sun, 19 Feb 2017 13:24:08 +0100
Subject: [luatex] kerning with delimiters with opentype math fonts
In-Reply-To: <hcxzcfmhn3wj.dlg@nililand.de>
References: <CAEW6iOhOq48gceV8sqNs-L1s4q-8CrU2Qe914V4+EGytNR6EPA@mail.gmail.com>
 <53a8cd00-42a6-9a4c-8c8c-96f5a5101bb6@wxs.nl> <hcxzcfmhn3wj.dlg@nililand.de>
Message-ID: <1871b617-2eee-3317-2131-fbfebc1833f7@wxs.nl>

On 2/18/2017 6:25 PM, Ulrike Fischer wrote:
> Am Sat, 18 Feb 2017 16:12:35 +0100 schrieb Hans Hagen:
>
>
>> It's a font issue
>
> Why does one get the faulty spacing only with \left/right? E.g. in
> this context version only the first is wrong:
>
> \starttext
>
> $\left|T \right|$ $|T|$
>
> \stoptext

italic correction is between characters and a \right is a fence and more 
a construct where the inter-whatever spacing + staircase kerns apply so 
it boils a bit down to what a sequence of chars is (for instance a \left 
\right delimiter is an extensible character and as such not really a 
character

it's a bit of a fuzzy area (i've seen different specs over time) ... of 
course i can think of some more control options in the engine

(the problem is that at one time i had code in context that analyzed 
this and acted upon it correcting the engine but then inconsistent fonts 
show up and one has to make choices)

Hans

-----------------------------------------------------------------
                                           Hans Hagen | PRAGMA ADE
               Ridderstraat 27 | 8061 GH Hasselt | The Netherlands
        tel: 038 477 53 69 | www.pragma-ade.nl | www.pragma-pod.nl
-----------------------------------------------------------------

From rpspringuel at gmail.com  Sun Feb 19 16:17:33 2017
From: rpspringuel at gmail.com (Br. Samuel Springuel)
Date: Sun, 19 Feb 2017 10:17:33 -0500
Subject: [luatex] Lua interpreter difference between Windows and Mac
In-Reply-To: <FBAEF007FB4040289B455BB44FE4EB77@CJ3001517A>
References: <FBAEF007FB4040289B455BB44FE4EB77@CJ3001517A>
Message-ID: <01b7c24e-0c08-d561-676f-e0a7aaab7dcf@gmail.com>

On 2017-02-19 2:02 AM, Akira Kakuto wrote:
> Probably kpse.find_file(filename) on windows without file type
> searches TEXINPUTS by default. Try by adding file type as follows:
>
> kpse.set_program_name('texlua')
> font_target = "greciliae.ttf"
> font_directory = kpse.find_file(font_target, 'truetype fonts')
> print(font_directory)

That does seem to have fixed the problem.  Thanks.

-- 
?????????????????????????
Br. Samuel, OSB
St. Anselm?s Abbey
Washington, DC
(R. Padraic Springuel)

PAX ? ???????

