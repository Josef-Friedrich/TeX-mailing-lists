From patrick at gundla.ch  Wed Jul  3 13:28:28 2019
From: patrick at gundla.ch (Patrick Gundlach)
Date: Wed, 3 Jul 2019 13:28:28 +0200
Subject: [luatex] [Dev-luatex] luatex and harfbuzz 2.5.1
In-Reply-To: <CAG5iGsA=brP5cTXFWJ4nB_0jKoJfw0A0YHhSp9NDZY=914X7WA@mail.gmail.com>
References: <CAG5iGsA=brP5cTXFWJ4nB_0jKoJfw0A0YHhSp9NDZY=914X7WA@mail.gmail.com>
Message-ID: <6A033EC3-318B-4DFB-80D3-6C45F89A1E1A@gundla.ch>

Hi Luigi/all,


Am 18.06.2019 um 20:48 schrieb luigi scarso <luigi.scarso at gmail.com>:
> 
> In experimental there is now
> luatex 1.11.0 with harfbuzz 2.5.1

...

I have tried current experimental and did a 

local harfbuzz = require("harfbuzz")

but I get an error that the module is not found. Any idea where to look?

I have also tried without require, such as:

local ffi = require("ffi")
ffi.cdef[[
const char *
hb_version_string (void);
]]

print(ffi.string(hb_version_string()))



--------------------------------------------------------------------
This is LuajitTeX, Version 1.11.0 (TeX Live 2020/dev)

The LuaTeX team is Hans Hagen, Hartmut Henkel, Taco Hoekwater, Luigi Scarso.

LuajitTeX merges and builds upon (parts of) the code from these projects:

tex       : Donald Knuth
etex      : Peter Breitenlohner, Phil Taylor and friends
omega     : John Plaice and Yannis Haralambous
aleph     : Giuseppe Bilotta
pdftex    : Han The Thanh and friends
kpathsea  : Karl Berry, Olaf Weber and others
lua       : Roberto Ierusalimschy, Waldemar Celes and Luiz Henrique de Figueiredo
metapost  : John Hobby, Taco Hoekwater, Luigi Scarso, Hans Hagen and friends
pplib     : Pawe? Jackowski
fontforge : George Williams (partial)
luajit    : Mike Pall (used in LuajitTeX)

Compiled with libharfbuzz 2.5.3; using 2.5.3
Compiled with libpng 1.6.37; using 1.6.37
Compiled with LuaJIT 2.1.0-beta3
Compiled with mplib version 2.00
Compiled with zlib 1.2.11; using 1.2.11

Development id: 7168
--------------------------------------------------------------------



Patrick

From luigi.scarso at gmail.com  Wed Jul  3 13:40:52 2019
From: luigi.scarso at gmail.com (luigi scarso)
Date: Wed, 3 Jul 2019 13:40:52 +0200
Subject: [luatex] [Dev-luatex] luatex and harfbuzz 2.5.1
In-Reply-To: <6A033EC3-318B-4DFB-80D3-6C45F89A1E1A@gundla.ch>
References: <CAG5iGsA=brP5cTXFWJ4nB_0jKoJfw0A0YHhSp9NDZY=914X7WA@mail.gmail.com>
 <6A033EC3-318B-4DFB-80D3-6C45F89A1E1A@gundla.ch>
Message-ID: <CAG5iGsBCF=-8CkAzXbScWjB_3-kLoHPXN0KHXH46x5dHWeW6yQ@mail.gmail.com>

On Wed, Jul 3, 2019 at 1:29 PM Patrick Gundlach <patrick at gundla.ch> wrote:

> Hi Luigi/all,
>
>
> Am 18.06.2019 um 20:48 schrieb luigi scarso <luigi.scarso at gmail.com>:
> >
> > In experimental there is now
> > luatex 1.11.0 with harfbuzz 2.5.1
>
> ...
>
> I have tried current experimental and did a
>
> local harfbuzz = require("harfbuzz")
>
>
maybe
local harfbuzz = require("luaharfbuzz")
?


-- 
luigi
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://tug.org/pipermail/luatex/attachments/20190703/bbc20323/attachment.html>

From patrick at gundla.ch  Wed Jul  3 14:11:42 2019
From: patrick at gundla.ch (Patrick Gundlach)
Date: Wed, 3 Jul 2019 14:11:42 +0200
Subject: [luatex] [Dev-luatex] luatex and harfbuzz 2.5.1
In-Reply-To: <CAG5iGsBCF=-8CkAzXbScWjB_3-kLoHPXN0KHXH46x5dHWeW6yQ@mail.gmail.com>
References: <CAG5iGsA=brP5cTXFWJ4nB_0jKoJfw0A0YHhSp9NDZY=914X7WA@mail.gmail.com>
 <6A033EC3-318B-4DFB-80D3-6C45F89A1E1A@gundla.ch>
 <CAG5iGsBCF=-8CkAzXbScWjB_3-kLoHPXN0KHXH46x5dHWeW6yQ@mail.gmail.com>
Message-ID: <C59140A3-7266-4841-AB9A-CD387566CA75@gundla.ch>

> 
> I have tried current experimental and did a 
> 
> local harfbuzz = require("harfbuzz")
> 
> 
> maybe 
> local harfbuzz = require("luaharfbuzz")


no, although I'd expect it from luastuff.c / l. 192 to work.

I have found the symbol in the binary, so it looks OK.

$ nm bin/sdluatex | grep harf
000000010030abc0 T _luaopen_luaharfbuzz


The binary version number is 1.11.0

Any more ideas?

When I run 

build/texk/web2c/luajittex --ini
and I input
\relax
\catcode`\{=1 \catcode`\}=2 \directlua{ require("luaharfbuzz") } 

I get an error message, but when I load other libraries such as sha2, I don't get an error message

--------------------------------------------------------------------
$ build/texk/web2c/luajittex --ini
warning: kpathsea: configuration file texmf.cnf not found in these directories: 
...
This is LuajitTeX, Version 1.11.0 (TeX Live 2020/dev)  (INITEX)
**\relax        

*\catcode`\{=1 \catcode`\}=2 \directlua{ require("luaharfbuzz") } 
[\directlua]:1: module 'luaharfbuzz' not found:
	no field package.preload['luaharfbuzz']
	[kpse lua searcher] file not found: 'luaharfbuzz'
	[kpse C searcher] file not found: 'luaharfbuzz'
stack traceback:
	[C]: in function 'require'
	[\directlua]:1: in main chunk.
<*> ...code`\}=2 \directlua{ require("luaharfbuzz") }
                                                  
? x
No pages of output.
Transcript written on texput.log.
--------------------------------------------------------------------

Patrick




From patrick at gundla.ch  Wed Jul  3 14:14:32 2019
From: patrick at gundla.ch (Patrick Gundlach)
Date: Wed, 3 Jul 2019 14:14:32 +0200
Subject: [luatex] [Dev-luatex] luatex and harfbuzz 2.5.1
In-Reply-To: <C59140A3-7266-4841-AB9A-CD387566CA75@gundla.ch>
References: <CAG5iGsA=brP5cTXFWJ4nB_0jKoJfw0A0YHhSp9NDZY=914X7WA@mail.gmail.com>
 <6A033EC3-318B-4DFB-80D3-6C45F89A1E1A@gundla.ch>
 <CAG5iGsBCF=-8CkAzXbScWjB_3-kLoHPXN0KHXH46x5dHWeW6yQ@mail.gmail.com>
 <C59140A3-7266-4841-AB9A-CD387566CA75@gundla.ch>
Message-ID: <0AC66A7A-506D-46FC-B749-15B14347C969@gundla.ch>

> 
> When I run 
> 
> build/texk/web2c/luajittex --ini
> and I input
> \relax
> \catcode`\{=1 \catcode`\}=2 \directlua{ require("luaharfbuzz") } 


doing this without jittex (just luatex) works, I don't get an error.

(but I need luajittex)


Patrick



From luigi.scarso at gmail.com  Wed Jul  3 14:39:03 2019
From: luigi.scarso at gmail.com (luigi scarso)
Date: Wed, 3 Jul 2019 14:39:03 +0200
Subject: [luatex] [Dev-luatex] luatex and harfbuzz 2.5.1
In-Reply-To: <0AC66A7A-506D-46FC-B749-15B14347C969@gundla.ch>
References: <CAG5iGsA=brP5cTXFWJ4nB_0jKoJfw0A0YHhSp9NDZY=914X7WA@mail.gmail.com>
 <6A033EC3-318B-4DFB-80D3-6C45F89A1E1A@gundla.ch>
 <CAG5iGsBCF=-8CkAzXbScWjB_3-kLoHPXN0KHXH46x5dHWeW6yQ@mail.gmail.com>
 <C59140A3-7266-4841-AB9A-CD387566CA75@gundla.ch>
 <0AC66A7A-506D-46FC-B749-15B14347C969@gundla.ch>
Message-ID: <CAG5iGsAhi-hnVYAeL_=jfNMLEV+3ChYzx2W1aO=7_oMcT=SWjQ@mail.gmail.com>

On Wed, Jul 3, 2019 at 2:15 PM Patrick Gundlach <patrick at gundla.ch> wrote:

>
> (but I need luajittex)
>

ok, I will see it but not immediately, currently I am  re-organizing  the
code.

-- 
luigi
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://tug.org/pipermail/luatex/attachments/20190703/6f065c27/attachment.html>

From tex at 2krueger.de  Wed Jul  3 14:42:30 2019
From: tex at 2krueger.de (Marcel Fabian =?utf-8?Q?Kr=C3=BCger?=)
Date: Wed, 3 Jul 2019 14:42:30 +0200
Subject: [luatex] Question about creating virtual fonts
Message-ID: <20190703124230.gcclebyufm57jikp@yoga>

Dear Henri,

there are two problems: First the sizes. You observed that all
characters appear to have zero width and adding a size field makes the
font disappear. The problem is that the size has to be given in scaled
points, so your size "10" equals "10sp" or "0.00015pt". So if you
specify the size field, the font is loaded with that fontsize and
is therefore hard to see. This size is also given to `font.read_tfm`, so
every character gets the width it would have with such a small fontsize,
resulting in effectivly zero width. You can fix both problems by passing
`655360` (10*2^16) instead. This leaves the problem of the digits
appearing "in reverse" (now *they* appear on top of each other).
TeX has to keep track of your current position on the page and it can't
know what your specials are doing. So after `{ "char", i }` TeX knows
that it moved by one character width to the right, but it doesn't
realize that the `Q` moves it back to the left. So it gets out of sync.
To avoid this, `q` and `Q` should (like `\pdfsave` and `\pdfrestore`)
always be used in a way that TeX believes these to be at the same point.
This can be archived through `push` and `pop`.
So a working version would be


\directlua{
f = font.read_tfm("cmtt10", 655360)
f.name = "cmtt10-digits"
f.type = "virtual"
f.fonts = {
    {
        name = "cmtt10", 
        size = 655360
    }
}
for i,v in pairs(f.characters) do
    local height = v.height
    local width = v.width
    if (string.char(i)):find("[1234567890]") then
        v.commands = {
            { "pdf", "origin", string.format("q 1 0 0 -1 0 \csstring\%.5f cm", height/65781.76) },
            { "push" },
            { "char", i },
            { "pop" },
            { "pdf", "origin", "Q" },
        }
    else
        v.commands = {
            { "char", i },
        }
    end
end
tex.definefont("myfont", font.define(f))
}

\font\cmtt=cmtt10

\cmtt abc 1234567 def

\myfont abc 1234567 def

\bye


Best regards,
Marcel Kr?ger

From luigi.scarso at gmail.com  Wed Jul  3 15:01:33 2019
From: luigi.scarso at gmail.com (luigi scarso)
Date: Wed, 3 Jul 2019 15:01:33 +0200
Subject: [luatex] [Dev-luatex] luatex and harfbuzz 2.5.1
In-Reply-To: <CAG5iGsAhi-hnVYAeL_=jfNMLEV+3ChYzx2W1aO=7_oMcT=SWjQ@mail.gmail.com>
References: <CAG5iGsA=brP5cTXFWJ4nB_0jKoJfw0A0YHhSp9NDZY=914X7WA@mail.gmail.com>
 <6A033EC3-318B-4DFB-80D3-6C45F89A1E1A@gundla.ch>
 <CAG5iGsBCF=-8CkAzXbScWjB_3-kLoHPXN0KHXH46x5dHWeW6yQ@mail.gmail.com>
 <C59140A3-7266-4841-AB9A-CD387566CA75@gundla.ch>
 <0AC66A7A-506D-46FC-B749-15B14347C969@gundla.ch>
 <CAG5iGsAhi-hnVYAeL_=jfNMLEV+3ChYzx2W1aO=7_oMcT=SWjQ@mail.gmail.com>
Message-ID: <CAG5iGsBR7xs0tvVro4oCG1NNiGGPqXgmYcMW5FQPWymPsBxd6w@mail.gmail.com>

On Wed, Jul 3, 2019 at 2:39 PM luigi scarso <luigi.scarso at gmail.com> wrote:

>
>
> On Wed, Jul 3, 2019 at 2:15 PM Patrick Gundlach <patrick at gundla.ch> wrote:
>
>>
>> (but I need luajittex)
>>
>
> ok, I will see it but not immediately, currently I am  re-organizing  the
> code.
>
>
very likely the code to register the luaharfbuzz table is ok only for lua
and  not enough wrong  to be rejected by the compiler.

-- 
luigi
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://tug.org/pipermail/luatex/attachments/20190703/86da3626/attachment.html>

From luigi.scarso at gmail.com  Wed Jul  3 15:17:02 2019
From: luigi.scarso at gmail.com (luigi scarso)
Date: Wed, 3 Jul 2019 15:17:02 +0200
Subject: [luatex] [Dev-luatex] luatex and harfbuzz 2.5.1
In-Reply-To: <CAG5iGsBR7xs0tvVro4oCG1NNiGGPqXgmYcMW5FQPWymPsBxd6w@mail.gmail.com>
References: <CAG5iGsA=brP5cTXFWJ4nB_0jKoJfw0A0YHhSp9NDZY=914X7WA@mail.gmail.com>
 <6A033EC3-318B-4DFB-80D3-6C45F89A1E1A@gundla.ch>
 <CAG5iGsBCF=-8CkAzXbScWjB_3-kLoHPXN0KHXH46x5dHWeW6yQ@mail.gmail.com>
 <C59140A3-7266-4841-AB9A-CD387566CA75@gundla.ch>
 <0AC66A7A-506D-46FC-B749-15B14347C969@gundla.ch>
 <CAG5iGsAhi-hnVYAeL_=jfNMLEV+3ChYzx2W1aO=7_oMcT=SWjQ@mail.gmail.com>
 <CAG5iGsBR7xs0tvVro4oCG1NNiGGPqXgmYcMW5FQPWymPsBxd6w@mail.gmail.com>
Message-ID: <CAG5iGsA97ywyV94zEfWA0k+zTTtGwMi1FtVrxjN+eqR2J9-WkQ@mail.gmail.com>

On Wed, Jul 3, 2019 at 3:01 PM luigi scarso <luigi.scarso at gmail.com> wrote:

>
> very likely the code to register the luaharfbuzz table is ok only for lua
> and  not enough wrong  to be rejected by the compiler
>
>

for luajittex


-- 
luigi
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://tug.org/pipermail/luatex/attachments/20190703/636ea739/attachment-0001.html>

From luigi.scarso at gmail.com  Mon Jul  8 09:04:51 2019
From: luigi.scarso at gmail.com (luigi scarso)
Date: Mon, 8 Jul 2019 09:04:51 +0200
Subject: [luatex] luatex and harfbuzz 2.5.1
In-Reply-To: <CAG5iGsA=brP5cTXFWJ4nB_0jKoJfw0A0YHhSp9NDZY=914X7WA@mail.gmail.com>
References: <CAG5iGsA=brP5cTXFWJ4nB_0jKoJfw0A0YHhSp9NDZY=914X7WA@mail.gmail.com>
Message-ID: <CAG5iGsCORmgZgXbHE3HU0FzwbU_HZyzqsj5xrDtEcQ9rn-TU0Q@mail.gmail.com>

On Tue, Jun 18, 2019 at 8:48 PM luigi scarso <luigi.scarso at gmail.com> wrote:

> In experimental there is now
> luatex 1.11.0 with harfbuzz 2.5.1
> It follows from the development of harftex by K. Hosny.
> Please note that the code is
> 1) in experimental
> 2) marked as work in progress
> so  it can stay as is, it can be changed , it can be removed completely.
>
>
>
In experimental and in texlive there are now luatex &  luahbtex and jit
variants.
Briefly, after some discussions emerged the point that luatex with hb
statically linked
very likely doesn't work in workflows that already use luatex with a
dynamic  binding with a dll/so version of harfbuzz,
even considering the API stability of harfbuzz itself and the fact that now
the hb symbols are hidden.
In this way we preserve the workflows that use luatex, because there is no
harfbuzz code in luatex.

It's better to think   luahbtex  as "luatex + a binding to harfbuzz."
and not as a variant of luatex adapted to harfbuzz.
So any change in luatex will be in luahbtex, because there is a single
source.
On the other side, the only constrain  on the hb binding is that it cannot
modify the luatex source,
so in principle it can grow to cover all the  harfbuzz API  --- there are
of course others constrains to consider
as maintenance and compatibility with formats, just to say the  most
obvious.

-- 
luigi
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://tug.org/pipermail/luatex/attachments/20190708/a775578d/attachment.html>

From dr.khaled.hosny at gmail.com  Mon Jul  8 10:21:49 2019
From: dr.khaled.hosny at gmail.com (Khaled Hosny)
Date: Mon, 8 Jul 2019 10:21:49 +0200
Subject: [luatex] [Dev-luatex] luatex and harfbuzz 2.5.1
In-Reply-To: <CAG5iGsCORmgZgXbHE3HU0FzwbU_HZyzqsj5xrDtEcQ9rn-TU0Q@mail.gmail.com>
References: <CAG5iGsA=brP5cTXFWJ4nB_0jKoJfw0A0YHhSp9NDZY=914X7WA@mail.gmail.com>
 <CAG5iGsCORmgZgXbHE3HU0FzwbU_HZyzqsj5xrDtEcQ9rn-TU0Q@mail.gmail.com>
Message-ID: <CAKgnQDQAsNSYVVTSW5+a2Ori9MyRaJtCSzNsEW7TUdR1SxsHQQ@mail.gmail.com>

On Mon, Jul 8, 2019 at 9:05 AM luigi scarso <luigi.scarso at gmail.com> wrote:
>
> even considering the API stability of harfbuzz itself


HarfBuzz has stable ABI/API and has been so even before version 1.0.0.

Regards,
Khaled

From luigi.scarso at gmail.com  Mon Jul  8 10:32:42 2019
From: luigi.scarso at gmail.com (luigi scarso)
Date: Mon, 8 Jul 2019 10:32:42 +0200
Subject: [luatex] [Dev-luatex] luatex and harfbuzz 2.5.1
In-Reply-To: <CAKgnQDQAsNSYVVTSW5+a2Ori9MyRaJtCSzNsEW7TUdR1SxsHQQ@mail.gmail.com>
References: <CAG5iGsA=brP5cTXFWJ4nB_0jKoJfw0A0YHhSp9NDZY=914X7WA@mail.gmail.com>
 <CAG5iGsCORmgZgXbHE3HU0FzwbU_HZyzqsj5xrDtEcQ9rn-TU0Q@mail.gmail.com>
 <CAKgnQDQAsNSYVVTSW5+a2Ori9MyRaJtCSzNsEW7TUdR1SxsHQQ@mail.gmail.com>
Message-ID: <CAG5iGsDLSJiDucrMsxKG5PToUziEkowgDWY7Gzh1n0ZQEix0BA@mail.gmail.com>

On Mon, Jul 8, 2019 at 10:22 AM Khaled Hosny <dr.khaled.hosny at gmail.com>
wrote:

> On Mon, Jul 8, 2019 at 9:05 AM luigi scarso <luigi.scarso at gmail.com>
> wrote:
> >
> > even considering the API stability of harfbuzz itself
>
>
> HarfBuzz has stable ABI/API and has been so even before version 1.0.0.
>
> Regards,
> Khaled
>

1 )  "stable api" doesn't mean that that private implementation stays the
same.
This is (one of ) the  problem in using dynamic binding

2) "stable api" is a promise by the developer(s)  --- but already in
texlive there are  the TLpatches,
e.g Build/source/libs/harfbuzz/TLpatches


-- 
luigi
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://tug.org/pipermail/luatex/attachments/20190708/7233497f/attachment.html>

From harald.hanche-olsen at ntnu.no  Sat Jul 27 14:58:47 2019
From: harald.hanche-olsen at ntnu.no (Harald Hanche-Olsen)
Date: Sat, 27 Jul 2019 14:58:47 +0200
Subject: [luatex] \openin does not find files with no extension
Message-ID: <etPan.5d3c4a87.44a35bdd.33e@ntnu.no>

Consider this code:

\newread\foobar?
\openin\foobar=test-import?
\ifeof\foobar?
\message{The file test-import does NOT exist}
\else?
\message{The file test-import DOES exist}
\fi?
\input test-import
\bye

If the file test-import (without any extension) exists
with this content:

\message{This is test-import}

the result is as follows:

? luatex sxxx
This is LuaTeX, Version 1.10.0 (TeX Live 2019)
?restricted system commands enabled.
(./sxxx.tex The file test-import does NOT exist (./test-import
This is test-import))
warning ?(pdf backend): no pages of output.
Transcript written on sxxx.log.

This is on a mac. I get the same result on linux.

If I rename test-import to test-import.tex, I get the expected result:

(./sxxx.tex The file test-import DOES exist (./test-import.tex
This is test-import))

Alternatively, if I replace the second line of the driver file with

\openin\foobar{test-import}

I also get the expected result.

This all seems a bit confusing to me. Bug, or feature?

? Harald


From luatex at nililand.de  Sat Jul 27 16:15:44 2019
From: luatex at nililand.de (Ulrike Fischer)
Date: Sat, 27 Jul 2019 16:15:44 +0200
Subject: [luatex] \openin does not find files with no extension
References: <etPan.5d3c4a87.44a35bdd.33e@ntnu.no>
Message-ID: <1gzioyklnyemi.dlg@nililand.de>

Am Sat, 27 Jul 2019 14:58:47 +0200 schrieb Harald Hanche-Olsen:


> This all seems a bit confusing to me. Bug, or feature?

This sounds like an old problem 

https://tug.org/pipermail/luatex/2013-May/004208.html

The issue I opened at the time has been closed in 2015 as resolved
http://tracker.luatex.org/view.php?id=827

But when I test now Hans example there I get a "not found" for the
first case with "\openin0 makefile", so it looks as if some
regression has happened. 

-- 
Ulrike Fischer 
https://www.troubleshooting-tex.de/


From luigi.scarso at gmail.com  Sat Jul 27 18:00:21 2019
From: luigi.scarso at gmail.com (luigi scarso)
Date: Sat, 27 Jul 2019 18:00:21 +0200
Subject: [luatex] \openin does not find files with no extension
In-Reply-To: <1gzioyklnyemi.dlg@nililand.de>
References: <etPan.5d3c4a87.44a35bdd.33e@ntnu.no>
 <1gzioyklnyemi.dlg@nililand.de>
Message-ID: <CAG5iGsA6h8K9DXumKM-nYnz4cBm5dv-x63oxkUBLUf4ijPRcAQ@mail.gmail.com>

On Sat, Jul 27, 2019 at 4:16 PM Ulrike Fischer <luatex at nililand.de> wrote:

> Am Sat, 27 Jul 2019 14:58:47 +0200 schrieb Harald Hanche-Olsen:
>
>
> > This all seems a bit confusing to me. Bug, or feature?
>
> This sounds like an old problem
>
> https://tug.org/pipermail/luatex/2013-May/004208.html
>
> The issue I opened at the time has been closed in 2015 as resolved
> http://tracker.luatex.org/view.php?id=827
>
> But when I test now Hans example there I get a "not found" for the
> first case with "\openin0 makefile", so it looks as if some
> regression has happened.
>

Thank for the report, we are seeing it.


-- 
luigi
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://tug.org/pipermail/luatex/attachments/20190727/c542cb3d/attachment.html>

From luigi.scarso at gmail.com  Sat Jul 27 18:57:30 2019
From: luigi.scarso at gmail.com (luigi scarso)
Date: Sat, 27 Jul 2019 18:57:30 +0200
Subject: [luatex] \openin does not find files with no extension
In-Reply-To: <CAG5iGsA6h8K9DXumKM-nYnz4cBm5dv-x63oxkUBLUf4ijPRcAQ@mail.gmail.com>
References: <etPan.5d3c4a87.44a35bdd.33e@ntnu.no>
 <1gzioyklnyemi.dlg@nililand.de>
 <CAG5iGsA6h8K9DXumKM-nYnz4cBm5dv-x63oxkUBLUf4ijPRcAQ@mail.gmail.com>
Message-ID: <CAG5iGsDQem8U885BL1LYA+60nHypaLCZOpStoJhJ7Q8utsPFfw@mail.gmail.com>

On Sat, Jul 27, 2019 at 6:00 PM luigi scarso <luigi.scarso at gmail.com> wrote:

>
>
> On Sat, Jul 27, 2019 at 4:16 PM Ulrike Fischer <luatex at nililand.de> wrote:
>
>> Am Sat, 27 Jul 2019 14:58:47 +0200 schrieb Harald Hanche-Olsen:
>>
>>
>> > This all seems a bit confusing to me. Bug, or feature?
>>
>>

We have to decide what to do here:
\openin\foobar=test-import
fails in pdftex and luatex

\openin\foobar={test-import}
fails in pdftex but not in luatex

We are discussing if keep such situation or extend the second case to the
first , having
\openin\foobar=test-import
fails in pdftex but not in luatex

-- 
luigi
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://tug.org/pipermail/luatex/attachments/20190727/5ddb5667/attachment.html>

From luatex at nililand.de  Sat Jul 27 19:23:16 2019
From: luatex at nililand.de (Ulrike Fischer)
Date: Sat, 27 Jul 2019 19:23:16 +0200
Subject: [luatex] \openin does not find files with no extension
References: <etPan.5d3c4a87.44a35bdd.33e@ntnu.no>
 <1gzioyklnyemi.dlg@nililand.de>
 <CAG5iGsA6h8K9DXumKM-nYnz4cBm5dv-x63oxkUBLUf4ijPRcAQ@mail.gmail.com>
 <CAG5iGsDQem8U885BL1LYA+60nHypaLCZOpStoJhJ7Q8utsPFfw@mail.gmail.com>
Message-ID: <16vgrbo6ne62u$.dlg@nililand.de>

Am Sat, 27 Jul 2019 18:57:30 +0200 schrieb luigi scarso:

 
> We have to decide what to do here:
> \openin\foobar=test-import
> fails in pdftex and luatex
> 

Not for me. pdftex finds a file without extension, luatex not.

\openin0 makefile % makefile exist in the folder
  \ifeof0         % gives: luatex: don't exist; pdftex: exist
   don't exist
  \else
   exist
  \fi
\closein0

\input makefile %input by both engines

\bye

Imho luatex should find the file with \openin0 as it does with
\input.



> \openin\foobar={test-import}
> fails in pdftex but not in luatex

yes, the luatex syntax has been extended here (which is fine). That
pdftex doesn't know this syntax is documented and not a problem. 



-- 
Ulrike Fischer 
https://www.troubleshooting-tex.de/


From luigi.scarso at gmail.com  Sat Jul 27 19:27:01 2019
From: luigi.scarso at gmail.com (luigi scarso)
Date: Sat, 27 Jul 2019 19:27:01 +0200
Subject: [luatex] \openin does not find files with no extension
In-Reply-To: <16vgrbo6ne62u$.dlg@nililand.de>
References: <etPan.5d3c4a87.44a35bdd.33e@ntnu.no>
 <1gzioyklnyemi.dlg@nililand.de>
 <CAG5iGsA6h8K9DXumKM-nYnz4cBm5dv-x63oxkUBLUf4ijPRcAQ@mail.gmail.com>
 <CAG5iGsDQem8U885BL1LYA+60nHypaLCZOpStoJhJ7Q8utsPFfw@mail.gmail.com>
 <16vgrbo6ne62u$.dlg@nililand.de>
Message-ID: <CAG5iGsAbmeOcTzcEwRb9b4FVBBvsUF8h9Rk5_S4hTGYyC-odxg@mail.gmail.com>

On Sat, Jul 27, 2019 at 7:23 PM Ulrike Fischer <luatex at nililand.de> wrote:

> Am Sat, 27 Jul 2019 18:57:30 +0200 schrieb luigi scarso:
>
>
> > We have to decide what to do here:
> > \openin\foobar=test-import
> > fails in pdftex and luatex
> >
>
> Not for me. pdftex finds a file without extension, luatex not.
>
>
hm. Let me check again.


-- 
luigi
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://tug.org/pipermail/luatex/attachments/20190727/e631fc6f/attachment.html>

From harald.hanche-olsen at ntnu.no  Sat Jul 27 19:30:03 2019
From: harald.hanche-olsen at ntnu.no (Harald Hanche-Olsen)
Date: Sat, 27 Jul 2019 19:30:03 +0200
Subject: [luatex] \openin does not find files with no extension
In-Reply-To: <CAG5iGsDQem8U885BL1LYA+60nHypaLCZOpStoJhJ7Q8utsPFfw@mail.gmail.com>
References: <etPan.5d3c4a87.44a35bdd.33e@ntnu.no>
 <1gzioyklnyemi.dlg@nililand.de>
 <CAG5iGsA6h8K9DXumKM-nYnz4cBm5dv-x63oxkUBLUf4ijPRcAQ@mail.gmail.com>
 <CAG5iGsDQem8U885BL1LYA+60nHypaLCZOpStoJhJ7Q8utsPFfw@mail.gmail.com>
Message-ID: <etPan.5d3c8a1b.21a06d0b.33e@ntnu.no>

From:?luigi scarso <luigi.scarso at gmail.com>
Date:?27 July 2019 at 18:58:23

We have to decide what to do here:
\openin\foobar=test-import
fails in pdftex and luatex
Hmm? Fails in luatex but not in pdftex ? on mac and linux, at least. It should work in luatex, in my opinion.

\openin\foobar={test-import}
fails in pdftex but not in luatex
In pdftex, it tries to open {test-import} (braces included in the filename).

On luatex, it tries to open test-import (no braces).

This is documented, and the expected behaviour. I see no need to change this.

We are discussing if keep such situation or extend the second case to the first , having
\openin\foobar=test-import?
fails in pdftex but not in luatex
Not sure I understand this option. It works in pdftex. Do we not want it to work in luatex too?

As far as I can tell, the problem with luatex is the different treatment of the filename depending on whether there are braces or not. So long as the filename does not contain spaces (and possibly other troublesome characters), I don't see why there should be a difference.

? Harald

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://tug.org/pipermail/luatex/attachments/20190727/fbb3e0b1/attachment-0001.html>

From harald.hanche-olsen at ntnu.no  Sat Jul 27 19:31:21 2019
From: harald.hanche-olsen at ntnu.no (Harald Hanche-Olsen)
Date: Sat, 27 Jul 2019 19:31:21 +0200
Subject: [luatex] \openin does not find files with no extension
In-Reply-To: <etPan.5d3c8a1b.21a06d0b.33e@ntnu.no>
References: <etPan.5d3c4a87.44a35bdd.33e@ntnu.no>
 <1gzioyklnyemi.dlg@nililand.de>
 <CAG5iGsA6h8K9DXumKM-nYnz4cBm5dv-x63oxkUBLUf4ijPRcAQ@mail.gmail.com>
 <CAG5iGsDQem8U885BL1LYA+60nHypaLCZOpStoJhJ7Q8utsPFfw@mail.gmail.com>
 <etPan.5d3c8a1b.21a06d0b.33e@ntnu.no>
Message-ID: <etPan.5d3c8a69.21175ff7.33e@ntnu.no>

Um, sorry, I missed the last two entries in the discussion while composing my reply.

? Harald
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://tug.org/pipermail/luatex/attachments/20190727/85327f5d/attachment.html>

From luigi.scarso at gmail.com  Sat Jul 27 19:35:42 2019
From: luigi.scarso at gmail.com (luigi scarso)
Date: Sat, 27 Jul 2019 19:35:42 +0200
Subject: [luatex] \openin does not find files with no extension
In-Reply-To: <CAG5iGsAbmeOcTzcEwRb9b4FVBBvsUF8h9Rk5_S4hTGYyC-odxg@mail.gmail.com>
References: <etPan.5d3c4a87.44a35bdd.33e@ntnu.no>
 <1gzioyklnyemi.dlg@nililand.de>
 <CAG5iGsA6h8K9DXumKM-nYnz4cBm5dv-x63oxkUBLUf4ijPRcAQ@mail.gmail.com>
 <CAG5iGsDQem8U885BL1LYA+60nHypaLCZOpStoJhJ7Q8utsPFfw@mail.gmail.com>
 <16vgrbo6ne62u$.dlg@nililand.de>
 <CAG5iGsAbmeOcTzcEwRb9b4FVBBvsUF8h9Rk5_S4hTGYyC-odxg@mail.gmail.com>
Message-ID: <CAG5iGsCN0bQcK8jCMJ=vYwCw_qjz6fvkK6pNvH9LKEe6+kRZZQ@mail.gmail.com>

On Sat, Jul 27, 2019 at 7:27 PM luigi scarso <luigi.scarso at gmail.com> wrote:

>
>
> On Sat, Jul 27, 2019 at 7:23 PM Ulrike Fischer <luatex at nililand.de> wrote:
>
>> Am Sat, 27 Jul 2019 18:57:30 +0200 schrieb luigi scarso:
>>
>>
>> > We have to decide what to do here:
>> > \openin\foobar=test-import
>> > fails in pdftex and luatex
>> >
>>
>> Not for me. pdftex finds a file without extension, luatex not.
>>
>>
> hm. Let me check again.
>
>
ok, I have messed up pdftex and luatex output.
Good, fix it it's more easy then.

-- 
luigi
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://tug.org/pipermail/luatex/attachments/20190727/f7bd7c93/attachment.html>

From luigi.scarso at gmail.com  Sat Jul 27 20:06:13 2019
From: luigi.scarso at gmail.com (luigi scarso)
Date: Sat, 27 Jul 2019 20:06:13 +0200
Subject: [luatex] \openin does not find files with no extension
In-Reply-To: <CAG5iGsCN0bQcK8jCMJ=vYwCw_qjz6fvkK6pNvH9LKEe6+kRZZQ@mail.gmail.com>
References: <etPan.5d3c4a87.44a35bdd.33e@ntnu.no>
 <1gzioyklnyemi.dlg@nililand.de>
 <CAG5iGsA6h8K9DXumKM-nYnz4cBm5dv-x63oxkUBLUf4ijPRcAQ@mail.gmail.com>
 <CAG5iGsDQem8U885BL1LYA+60nHypaLCZOpStoJhJ7Q8utsPFfw@mail.gmail.com>
 <16vgrbo6ne62u$.dlg@nililand.de>
 <CAG5iGsAbmeOcTzcEwRb9b4FVBBvsUF8h9Rk5_S4hTGYyC-odxg@mail.gmail.com>
 <CAG5iGsCN0bQcK8jCMJ=vYwCw_qjz6fvkK6pNvH9LKEe6+kRZZQ@mail.gmail.com>
Message-ID: <CAG5iGsAFPSwPZ8UODdFBnUGTW7g7g7-iFHdZyGRb562914hp5g@mail.gmail.com>

On Sat, Jul 27, 2019 at 7:35 PM luigi scarso <luigi.scarso at gmail.com> wrote:

> ok, I have messed up pdftex and luatex output.
> Good, fix it it's more easy then.
>
>
Fixed in experimental revision 7178.
-- 
luigi
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://tug.org/pipermail/luatex/attachments/20190727/779ffc86/attachment.html>

From j.hagen at xs4all.nl  Sat Jul 27 21:49:54 2019
From: j.hagen at xs4all.nl (Hans Hagen)
Date: Sat, 27 Jul 2019 21:49:54 +0200
Subject: [luatex] \openin does not find files with no extension
In-Reply-To: <16vgrbo6ne62u$.dlg@nililand.de>
References: <etPan.5d3c4a87.44a35bdd.33e@ntnu.no>
 <1gzioyklnyemi.dlg@nililand.de>
 <CAG5iGsA6h8K9DXumKM-nYnz4cBm5dv-x63oxkUBLUf4ijPRcAQ@mail.gmail.com>
 <CAG5iGsDQem8U885BL1LYA+60nHypaLCZOpStoJhJ7Q8utsPFfw@mail.gmail.com>
 <16vgrbo6ne62u$.dlg@nililand.de>
Message-ID: <65319368-bd45-5cc1-c65c-fe65bb5755bc@xs4all.nl>

On 7/27/2019 7:23 PM, Ulrike Fischer wrote:

> yes, the luatex syntax has been extended here (which is fine). That
> pdftex doesn't know this syntax is documented and not a problem.
Yes but the same 'add suffix when not set' code is used as in pdftex, 
but luatex did that only in then non-braced case (whjich pdftex doesn't 
have) while actually checking with a .tex suffix when not found is a 
kpse feature controlled by some flags in the cnf so even for pdftex one 
can wonder what is the right way (support for {} shouldn't be too hard 
for pdftex). Keep in mind that adding a .tex in case of no suffix being 
there makes it impossible to open files without suffix.

Hans

-----------------------------------------------------------------
                                           Hans Hagen | PRAGMA ADE
               Ridderstraat 27 | 8061 GH Hasselt | The Netherlands
        tel: 038 477 53 69 | www.pragma-ade.nl | www.pragma-pod.nl
-----------------------------------------------------------------

From reinhard.kotucha at web.de  Sat Jul 27 23:18:44 2019
From: reinhard.kotucha at web.de (Reinhard Kotucha)
Date: Sat, 27 Jul 2019 23:18:44 +0200
Subject: [luatex] \openin does not find files with no extension
In-Reply-To: <65319368-bd45-5cc1-c65c-fe65bb5755bc@xs4all.nl>
References: <etPan.5d3c4a87.44a35bdd.33e@ntnu.no>
 <1gzioyklnyemi.dlg@nililand.de>
 <CAG5iGsA6h8K9DXumKM-nYnz4cBm5dv-x63oxkUBLUf4ijPRcAQ@mail.gmail.com>
 <CAG5iGsDQem8U885BL1LYA+60nHypaLCZOpStoJhJ7Q8utsPFfw@mail.gmail.com>
 <16vgrbo6ne62u$.dlg@nililand.de>
 <65319368-bd45-5cc1-c65c-fe65bb5755bc@xs4all.nl>
Message-ID: <23868.49076.501184.403820@gargle.gargle.HOWL>

On 2019-07-27 at 21:49:54 +0200, Hans Hagen wrote:

 > Keep in mind that adding a .tex in case of no suffix being
 > there makes it impossible to open files without suffix.

There is more to consider:  Kpathsea searches each texmf tree for a
file without an extension and if none is found it appends '.tex' to
the name and searches again within the same tree.

It does *not* search all trees for a file without extension and
restart the search again if none is found.

This is intended behavior.  So people who need files without
extensions should keep this in mind and be very careful.

Regards,
  Reinhard

--
------------------------------------------------------------------
Reinhard Kotucha                            Phone: +49-511-3373112
Marschnerstr. 25
D-30167 Hannover                    mailto:reinhard.kotucha at web.de
------------------------------------------------------------------


From arpandeytest at gmail.com  Sun Jul 28 18:58:57 2019
From: arpandeytest at gmail.com (Ankit Raj Pandey)
Date: Sun, 28 Jul 2019 22:43:57 +0545
Subject: [luatex] Backend control through Lua
Message-ID: <87r26axfhq.fsf@smtp.gmail.com>

Hello,

I was wondering if there was any way to access the low-level functions
included in the DVI/PDF backend through Lua. For example, is it
possible to force the contents of the backend's buffer to be written
to the output file?

Thanks,

Ankit

From j.hagen at xs4all.nl  Mon Jul 29 17:39:26 2019
From: j.hagen at xs4all.nl (Hans Hagen)
Date: Mon, 29 Jul 2019 17:39:26 +0200
Subject: [luatex] \openin does not find files with no extension
In-Reply-To: <23868.49076.501184.403820@gargle.gargle.HOWL>
References: <etPan.5d3c4a87.44a35bdd.33e@ntnu.no>
 <1gzioyklnyemi.dlg@nililand.de>
 <CAG5iGsA6h8K9DXumKM-nYnz4cBm5dv-x63oxkUBLUf4ijPRcAQ@mail.gmail.com>
 <CAG5iGsDQem8U885BL1LYA+60nHypaLCZOpStoJhJ7Q8utsPFfw@mail.gmail.com>
 <16vgrbo6ne62u$.dlg@nililand.de>
 <65319368-bd45-5cc1-c65c-fe65bb5755bc@xs4all.nl>
 <23868.49076.501184.403820@gargle.gargle.HOWL>
Message-ID: <69e389b9-5b7b-6b2a-d43f-1709b819380e@xs4all.nl>

On 7/27/2019 11:18 PM, Reinhard Kotucha wrote:
> On 2019-07-27 at 21:49:54 +0200, Hans Hagen wrote:
> 
>   > Keep in mind that adding a .tex in case of no suffix being
>   > there makes it impossible to open files without suffix.
> 
> There is more to consider:  Kpathsea searches each texmf tree for a
> file without an extension and if none is found it appends '.tex' to
> the name and searches again within the same tree.

but afaik it doesn't remove a suffix first so if an engine explicitly 
adds one (we no longer do now in the openin case but pdftex does) one 
cannot open a file without suffix

so,

\input foo      : search for 'foo' and if not found 'foo.tex'
\input foo.tex  : search for 'foo.tex'
\input foo.bar  : search for 'foo.bar' and 'foo.bar.tex' when enabled

> It does *not* search all trees for a file without extension and
> restart the search again if none is found.

so, \openin foo with tex appending to foo.tex automatically in the 
engine (not kpse) will never find 'foo'

(in luatex no suffix is appended any more in the engine now)

> This is intended behavior.  So people who need files without
> extensions should keep this in mind and be very careful.
i didn't look up the specs of the two flags in cnf so i might be wrong

Hans

-----------------------------------------------------------------
                                           Hans Hagen | PRAGMA ADE
               Ridderstraat 27 | 8061 GH Hasselt | The Netherlands
        tel: 038 477 53 69 | www.pragma-ade.nl | www.pragma-pod.nl
-----------------------------------------------------------------

From harald.hanche-olsen at ntnu.no  Mon Jul 29 18:19:25 2019
From: harald.hanche-olsen at ntnu.no (Harald Hanche-Olsen)
Date: Mon, 29 Jul 2019 18:19:25 +0200
Subject: [luatex] \openin does not find files with no extension
In-Reply-To: <69e389b9-5b7b-6b2a-d43f-1709b819380e@xs4all.nl>
References: <etPan.5d3c4a87.44a35bdd.33e@ntnu.no>
 <1gzioyklnyemi.dlg@nililand.de>
 <CAG5iGsA6h8K9DXumKM-nYnz4cBm5dv-x63oxkUBLUf4ijPRcAQ@mail.gmail.com>
 <CAG5iGsDQem8U885BL1LYA+60nHypaLCZOpStoJhJ7Q8utsPFfw@mail.gmail.com>
 <16vgrbo6ne62u$.dlg@nililand.de>
 <65319368-bd45-5cc1-c65c-fe65bb5755bc@xs4all.nl>
 <23868.49076.501184.403820@gargle.gargle.HOWL>
 <69e389b9-5b7b-6b2a-d43f-1709b819380e@xs4all.nl>
Message-ID: <etPan.5d3f1c8d.373fbfe4.33e@ntnu.no>

From: Hans Hagen (mailto:j.hagen at xs4all.nl)
Date: 29 July 2019 at 17:40:22

> but afaik it doesn't remove a suffix first so if an engine explicitly  
> adds one (we no longer do now in the openin case but pdftex does) one  
> cannot open a file without suffix  

Perhaps pdftex did so in the past, but it doesn't now,
unless I misunderstand what you're saying:

? cat bar.tex
\newread\foo
\openin\foo=foo
\ifeof\foo
? \message{No foo!}
\else
? \read\foo to \bar
? \bar
\fi
\end
? cat foo
\message{This is foo (no extension)}
? pdftex bar
This is pdfTeX, Version 3.14159265-2.6-1.40.20 (TeX Live 2019) (preloaded format=pdftex)
?restricted \write18 enabled.
entering extended mode
(./bar.tex This is foo (no extension) )
No pages of output.
Transcript written on bar.log.

? Harald


From j.hagen at xs4all.nl  Mon Jul 29 18:33:52 2019
From: j.hagen at xs4all.nl (Hans Hagen)
Date: Mon, 29 Jul 2019 18:33:52 +0200
Subject: [luatex] \openin does not find files with no extension
In-Reply-To: <etPan.5d3f1c8d.373fbfe4.33e@ntnu.no>
References: <etPan.5d3c4a87.44a35bdd.33e@ntnu.no>
 <1gzioyklnyemi.dlg@nililand.de>
 <CAG5iGsA6h8K9DXumKM-nYnz4cBm5dv-x63oxkUBLUf4ijPRcAQ@mail.gmail.com>
 <CAG5iGsDQem8U885BL1LYA+60nHypaLCZOpStoJhJ7Q8utsPFfw@mail.gmail.com>
 <16vgrbo6ne62u$.dlg@nililand.de>
 <65319368-bd45-5cc1-c65c-fe65bb5755bc@xs4all.nl>
 <23868.49076.501184.403820@gargle.gargle.HOWL>
 <69e389b9-5b7b-6b2a-d43f-1709b819380e@xs4all.nl>
 <etPan.5d3f1c8d.373fbfe4.33e@ntnu.no>
Message-ID: <05787799-3081-f3a8-b9d7-041faf0cbd5f@xs4all.nl>

On 7/29/2019 6:19 PM, Harald Hanche-Olsen wrote:
> From: Hans Hagen (mailto:j.hagen at xs4all.nl)
> Date: 29 July 2019 at 17:40:22
> 
>> but afaik it doesn't remove a suffix first so if an engine explicitly
>> adds one (we no longer do now in the openin case but pdftex does) one
>> cannot open a file without suffix
> 
> Perhaps pdftex did so in the past, but it doesn't now,
> unless I misunderstand what you're saying:
> 
> ? cat bar.tex
> \newread\foo
> \openin\foo=foo
> \ifeof\foo
>  ? \message{No foo!}
> \else
>  ? \read\foo to \bar
>  ? \bar
> \fi
> \end
> ? cat foo
> \message{This is foo (no extension)}
> ? pdftex bar
> This is pdfTeX, Version 3.14159265-2.6-1.40.20 (TeX Live 2019) (preloaded format=pdftex)
>  ?restricted \write18 enabled.
> entering extended mode
> (./bar.tex This is foo (no extension) )
> No pages of output.
> Transcript written on bar.log.
maybe it changed then as

https://www.tug.org/svn/texlive/trunk/Build/source/texk/web2c/pdftexdir/pdftex.web?view=markup

shows in line 32270

if cur_ext="" then cur_ext:=".tex";

(i'm not sure if that's the right source)

for \openin ... anyhow, i don't use pdftex now so i'm not going to 
investigate what really happens deep down (it would be kin dof weird if 
that code is still there and the suffix is ignored)

Hans

-----------------------------------------------------------------
                                           Hans Hagen | PRAGMA ADE
               Ridderstraat 27 | 8061 GH Hasselt | The Netherlands
        tel: 038 477 53 69 | www.pragma-ade.nl | www.pragma-pod.nl
-----------------------------------------------------------------

From lists at openlilylib.org  Tue Jul 30 11:50:15 2019
From: lists at openlilylib.org (Urs Liska)
Date: Tue, 30 Jul 2019 09:50:15 +0000
Subject: [luatex] lilyglyphs package compatibility with TeXLive 2019
Message-ID: <3f3d9dacd1fd8d73b0e03463c584bff1@openlilylib.org>

I noticed that my package lilyglyphs (http://ctan.org/pkg/lilyglyphs) seems to have issues with TeX
Live 2019 that weren't there in TL2017. When compiled with lualatex any glyph printed directly gets
an added rectangle like shown in the attached screenshot.

This is not present when compiled with XeLaTeX. The code that prints the glyphs is here
(https://github.com/uliska/lilyglyphs/blob/master/core/genericAccess.inp#L45-L52)

\newcommand*{\lilyPrint}[2][]{%
	% interpret optional argument
	\interpretLilyOptions{#1}%
	% print the glyph in a raisebox
	\raisebox{\lilyEffectiveRaise ex}{%
		{\fontspec[Scale=\lilyEffectiveScale]{emmentaler-\lilyOpticalSuffix.otf}#2}%
	}%
}

and the code used to load a glyph in lualatex is here: https://github.com/uliska/lilyglyphs/blob/master/core/genericAccess.inp#L117-L137

\ifluatex
\usepackage{luaotfload,luacode} 
\begin{luacode}
documentdata = documentdata or { }

local stringformat = string.format
local texsprint = tex.sprint
local slot_of_name = luaotfload.aux.slot_of_name

documentdata.fontchar = function (chr)
local chr = slot_of_name(font.current(), chr, false)
if chr and type(chr) == "number" then
texsprint
 (\the\CatcodeTableLaTeX, 
  stringformat ([[\char"%X"]], chr))
end
end
\end{luacode}

\def\lilyGetGlyph#1{\directlua{documentdata.fontchar "#1"}}
\fi

Is there any suggestion as to where these rectangles come from and what may be the change leading to the issue? I'm somewhat inclined to rewrite the whole package with the Lua knowledge I have by now (all the Lua in the package had been contributed by someone else then), but I don't really have the time right now.

Thanks
Urs
-------------- next part --------------
A non-text attachment was scrubbed...
Name: lualatex-rectangles.png
Type: image/png
Size: 5231 bytes
Desc: not available
URL: <https://tug.org/pipermail/luatex/attachments/20190730/bf4523e2/attachment.png>

From luatex at nililand.de  Tue Jul 30 16:36:39 2019
From: luatex at nililand.de (Ulrike Fischer)
Date: Tue, 30 Jul 2019 16:36:39 +0200
Subject: [luatex] lilyglyphs package compatibility with TeXLive 2019
References: <3f3d9dacd1fd8d73b0e03463c584bff1@openlilylib.org>
Message-ID: <kviwjpor8q52.dlg@nililand.de>

Am Tue, 30 Jul 2019 09:50:15 +0000 schrieb Urs Liska:

> I noticed that my package lilyglyphs (http://ctan.org/pkg/lilyglyphs) seems to have issues with TeX
> Live 2019 that weren't there in TL2017. When compiled with lualatex any glyph printed directly gets
> an added rectangle like shown in the attached screenshot.

> Is there any suggestion as to where these rectangles come from and
> what may be the change leading to the issue?

luaotfload changed the handling of "missing chars". 

In previous version when you used a char in your document which had
no glyph in the current font it was silently dropped. Now it shows
the .notdef glyph which can be a space or this rectangle. You can
disable this by using the font feature notdef:

\documentclass{article}
\usepackage{fontspec}
\setmainfont{roboto} %show notdef
\setsansfont{roboto}[RawFeature={notdef=false}] %don't show
\begin{document}
xx??yy

\sffamily
xx??yy
\end{document}

 
-- 
Ulrike Fischer 
http://www.troubleshooting-tex.de/


From lists at openlilylib.org  Tue Jul 30 17:13:40 2019
From: lists at openlilylib.org (Urs Liska)
Date: Tue, 30 Jul 2019 15:13:40 +0000
Subject: [luatex] lilyglyphs package compatibility with TeXLive 2019
In-Reply-To: <kviwjpor8q52.dlg@nililand.de>
References: <kviwjpor8q52.dlg@nililand.de>
 <3f3d9dacd1fd8d73b0e03463c584bff1@openlilylib.org>
Message-ID: <70aa50c2c691e92725b46ff1f9122083@openlilylib.org>

Hi Ulrike,

thank you for this explanation. I'll look into it and try to rather remove the missing chars than the warning ;-)

Best
Urs

30. Juli 2019 16:37, "Ulrike Fischer" <luatex at nililand.de> schrieb:

> Am Tue, 30 Jul 2019 09:50:15 +0000 schrieb Urs Liska:
> 
>> I noticed that my package lilyglyphs (http://ctan.org/pkg/lilyglyphs) seems to have issues with TeX
>> Live 2019 that weren't there in TL2017. When compiled with lualatex any glyph printed directly gets
>> an added rectangle like shown in the attached screenshot.
>> 
>> Is there any suggestion as to where these rectangles come from and
>> what may be the change leading to the issue?
> 
> luaotfload changed the handling of "missing chars".
> 
> In previous version when you used a char in your document which had
> no glyph in the current font it was silently dropped. Now it shows
> the .notdef glyph which can be a space or this rectangle. You can
> disable this by using the font feature notdef:
> 
> \documentclass{article}
> \usepackage{fontspec}
> \setmainfont{roboto} %show notdef
> \setsansfont{roboto}[RawFeature={notdef=false}] %don't show
> \begin{document}
> xx??yy
> 
> \sffamily
> xx??yy
> \end{document}
> 
> --
> Ulrike Fischer
> http://www.troubleshooting-tex.de


