From patrick at gundla.ch  Mon Feb  3 14:16:21 2020
From: patrick at gundla.ch (Patrick Gundlach)
Date: Mon, 3 Feb 2020 14:16:21 +0100
Subject: [luatex] Harfbuzz: how to get unicode values for ligature?
In-Reply-To: <C6726699-2B04-4FD5-A71F-ADE98AB0A0CF@gundla.ch>
References: <C6726699-2B04-4FD5-A71F-ADE98AB0A0CF@gundla.ch>
Message-ID: <56290CC4-6B91-44CD-8F62-5683DF7E501A@gundla.ch>

Hello all, 

I am still struggling with this. And I don't know if this is a harfbuzz question or a LuaTeX question.

I have a truetype font (Zapfino.ttf), and I don't understand the values returned from shape_full (codepoint) or what to put into the char filed in the glyph nodes.


Doing shape_full with the letters "Za" gives me the code points 104 and 504, which seem to be the glyph ids for this font.

I get the unicode values from a font with

face:collect_unicodes() 

and iterate over the resulting unicode values to get the glyph id with

glyphid = font:get_nominal_glyph(<unicode-codepoint>)

So everything is fine for simple letters.


But this seems to cover only parts of the font. For example the 'pf' ligature gives codepoint 1108, which has no unicode counterpart from the method above. 

What should I do with the 1108 to get a value to put into the char entry of a glyph node?

Patrick



> Am 10.01.2020 um 10:46 schrieb Patrick Gundlach <patrick at gundla.ch>:
> 
> Hello all,
> 
> I try to use the Harfbuzz shaper. I use, for example, the Zapfino truetype font which is pre-installed on the Mac.
> 
> I add the utf8 encoded characters Z and a to a buffer and call harfbuzz.shape_full() with the default font features. The result is:
> 
> glyphs = {
>  [1] = {
>    ["y_advance"] = "0"
>    ["x_advance"] = "416"
>    ["cluster"] = "0"
>    ["codepoint"] = "104"
>    ["y_offset"] = "0"
>    ["x_offset"] = "0"
>  },
>  [2] = {
>    ["flags"] = "1"
>    ["y_advance"] = "0"
>    ["x_advance"] = "264"
>    ["cluster"] = "1"
>    ["codepoint"] = "504"
>    ["y_offset"] = "0"
>    ["x_offset"] = "-21"
>  },
> },
> 
> Then I try to get the two unicode values of the glyph ids 104 and 504 which map to 90 ('Z') and 97 ('a') and create glyph nodes with the char value of 90 and 97 and output these as a novelist. The PDF looks fine.
> 
> When I try to do the same with the word Zapfino, which gets rendered as one ligature, I get
> 
> glyphs = {
>  [1] = {
>    ["y_advance"] = "0"
>    ["x_advance"] = "2333"
>    ["cluster"] = "0"
>    ["codepoint"] = "1059"
>    ["y_offset"] = "0"
>    ["x_offset"] = "0"
>  },
> },
> 
> which is what I expect. Now the problem is, that I can't find out the unicode value which I need for the glyph node. Can anybody help me with this step?
> 
> I get the unicode values from a font with
> 
> face:collect_unicodes() 
> 
> and iterate over the resulting unicode values to get the glyph id with
> 
> glyphid = font:get_nominal_glyph(<unicode-codepoint>)
> 
> Thank you!
>  Patrick
> 
> 
> 




From patrick at gundla.ch  Tue Feb  4 16:18:11 2020
From: patrick at gundla.ch (Patrick Gundlach)
Date: Tue, 4 Feb 2020 16:18:11 +0100
Subject: [luatex] glyph_nodes / character id instead of unicode value
Message-ID: <4E2DD115-E149-4B86-B4E2-7AE1A1894408@gundla.ch>

Hello all,

so far (at least if I understand my own code correctly), I create glyph nodes and insert unicode values into the char field to get the desired output. Can I put glyph ids there instead? Do I need to specify something somewhere else?

My other mails deal with the Zapfino experiment. The ligature Zapfino has glyph id 1059, but putting this into the char field results in an empty PDF file. 

How can I put the glyph id instead of the unicode value into char field and get the desired output?


Patrick

From luigi.scarso at gmail.com  Wed Feb  5 09:04:06 2020
From: luigi.scarso at gmail.com (luigi scarso)
Date: Wed, 5 Feb 2020 09:04:06 +0100
Subject: [luatex] Bugs in \input{...}
In-Reply-To: <CANfjC0_BmPxF5n6c-gxmDHxwS6MVqU7teRtqeRpSpn2j76bn0A@mail.gmail.com>
References: <CANfjC0_BmPxF5n6c-gxmDHxwS6MVqU7teRtqeRpSpn2j76bn0A@mail.gmail.com>
Message-ID: <CAG5iGsAi2ArXxNkZX2c-3Dp7WHSH9KJvJn8nBMis4q2D9Xe9dQ@mail.gmail.com>

On Mon, Jan 27, 2020 at 2:53 PM Phelype Oleinik <phe.h.o1 at gmail.com> wrote:

> Hello all,
>
> When using \input{...} inside an \edef the first token
> in the file disappears:
>
>     \directlua{\unexpanded{%
>       out = io.open('testfile.tex','w')
>       out:write('hello\\noexpand')
>       io.close(out)}}
>     \edef\tmpa{\input{testfile.tex}}\show\tmpa
>     % > \tmpa=macro:
>     % ello
>     \bye
>
> For some reason, it gets worse if the file starts
> with \noexpand\something:
>
>     \directlua{\unexpanded{%
>       out = io.open('testfile.tex','w')
>       out:write('\\noexpand\\hello\\noexpand')
>       io.close(out)}}
>     \edef\tmpa{\input{testfile.tex}}\show\tmpa
>     % > \tmpa=macro:
>     % <gibberish>
>     \bye
>
> If I use \edef\tmpa{\input testfile.tex } instead, both
> examples work as expected.
>
>
I have a fix , but I need to check it better.




> Also, a smaller issue: \input{...} doesn't seem to be
> setting cur_cs when using scan_toks, then the
> runaway error message reports it wrong:
>
>     \outer\def\boom{}
>     \input{\boom
>     \bye
>
> this reports:
>
>     Runaway text?
>     ! Forbidden control sequence found while scanning text of
> \csname\endcsname.
>     <inserted text>
>     }
>     <to be read again>
>     \boom
>     l.3 \input{\boom
>
>     ?


probably related.


--
luigi
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://tug.org/pipermail/luatex/attachments/20200205/48106d9c/attachment.html>

From patrick at gundla.ch  Wed Feb  5 09:58:47 2020
From: patrick at gundla.ch (Patrick Gundlach)
Date: Wed, 5 Feb 2020 09:58:47 +0100
Subject: [luatex] glyph_nodes / character id instead of unicode value
In-Reply-To: <4E2DD115-E149-4B86-B4E2-7AE1A1894408@gundla.ch>
References: <4E2DD115-E149-4B86-B4E2-7AE1A1894408@gundla.ch>
Message-ID: <15909FAE-550B-4356-A47E-D1749344FBB3@gundla.ch>

Hello all,

I think I have sorted this out (thanks to Khaled). The values in values in glyph_node.char have to correspond to the index in the font.characters array. That's it.

Patrick



From j.hagen at xs4all.nl  Wed Feb  5 14:40:07 2020
From: j.hagen at xs4all.nl (Hans Hagen)
Date: Wed, 5 Feb 2020 14:40:07 +0100
Subject: [luatex] glyph_nodes / character id instead of unicode value
In-Reply-To: <4E2DD115-E149-4B86-B4E2-7AE1A1894408@gundla.ch>
References: <4E2DD115-E149-4B86-B4E2-7AE1A1894408@gundla.ch>
Message-ID: <0b4ded87-f035-3cab-1088-bdcbba8d33ea@xs4all.nl>

On 2/4/2020 4:18 PM, Patrick Gundlach wrote:

> so far (at least if I understand my own code correctly), I create glyph nodes and insert unicode values into the char field to get the desired output. Can I put glyph ids there instead? Do I need to specify something somewhere else?
In e.g. pdftex (8 bit font engine) the char index actually is the index 
in a font, although you can cheat a bit by using an encoding vector in 
the backend. This is why in the 8 bit engines one speaks of font 
encoding, etc. The char field is then also related to the hyphenation 
mechanism (patterns).

In luatex it is entirely up to you what use the field for. If you use 8 
bit fonts, then they can be indexed (as in pdftex), but normally you 
will consider them unicode slots. They are just numbers. When using the 
built in font handler, they can be indices or whetever goes into the 
font's character table, where each entry can also have an index field 
that then maps into the glyph indices vector of a font. Of course when 
you replace some character (maybe using lua) then the reference can be 
something else than unicode.

So, for the frontend it's just numbers, for the backend end it depends 
on the presence of an index field or when you use t1 fonts the mapping 
in the encoding vector. The backend also looks at an optional tounicode 
field.

So, one answer can be: it's anything you like it to be.

In traditional tex there was a distinction between chartacter and glyphs 
nodes, in luatex it's all glyphs. The subtype can be (and used when you 
leave all to tex) used to flag such a node as being processed (by the 
lig / kern handlers), for instance in order to prevent duplicate 
processing.

Hans

-----------------------------------------------------------------
                                           Hans Hagen | PRAGMA ADE
               Ridderstraat 27 | 8061 GH Hasselt | The Netherlands
        tel: 038 477 53 69 | www.pragma-ade.nl | www.pragma-pod.nl
-----------------------------------------------------------------

From faheem at faheem.info  Fri Feb  7 10:27:55 2020
From: faheem at faheem.info (Faheem Mitha)
Date: Fri, 7 Feb 2020 14:57:55 +0530 (IST)
Subject: [luatex] Command to write directly from Lua to the aux file?
Message-ID: <1581067734-5023895.89830016.f0179SpNm029722@rs155.luxsci.com>


Hi,

I was thinking it would be convenient to have a convenience function for 
writing to the aux file from Lua. See for example

https://tex.stackexchange.com/questions/337469/write-to-aux-file-directly-from-lua

A manual approach is possible, as described by the answer in that thread, 
of course.

Regards, Faheem Mitha

From faheem at faheem.info  Fri Feb  7 10:55:44 2020
From: faheem at faheem.info (Faheem Mitha)
Date: Fri, 7 Feb 2020 15:25:44 +0530 (IST)
Subject: [luatex] Command to write directly from Lua to the aux file?
In-Reply-To: <alpine.DEB.2.21.2002071451330.9520@orwell.homelinux.org>
References: <alpine.DEB.2.21.2002071451330.9520@orwell.homelinux.org>
Message-ID: <1581069405-2822829.03722087.f0179ufOZ017467@rs155.luxsci.com>


On Fri, 7 Feb 2020, Faheem Mitha wrote:

> Hi,
>
> I was thinking it would be convenient to have a convenience function for 
> writing to the aux file from Lua. See for example
>
> https://tex.stackexchange.com/questions/337469/write-to-aux-file-directly-from-lua
>
> A manual approach is possible, as described by the answer in that thread, of 
> course.

Addendum: (from David Carisle on the TeX SE Chat)

> @FaheemMitha you wont see anything about aux files (a latex convention) 
> but you could ask whether it is possible to writ eto a file stream 
> opened by tex (I a not sure that it is)

Is that better?

From d.p.carlisle at gmail.com  Fri Feb  7 12:35:32 2020
From: d.p.carlisle at gmail.com (David Carlisle)
Date: Fri, 7 Feb 2020 11:35:32 +0000
Subject: [luatex] Command to write directly from Lua to the aux file?
In-Reply-To: <1581067734-5023895.89830016.f0179SpNm029722@rs155.luxsci.com>
References: <1581067734-5023895.89830016.f0179SpNm029722@rs155.luxsci.com>
Message-ID: <CAEW6iOje9OSKrDt7cTrtytdbzi7wc6Riod+-ARtCxhjdu2uVLw@mail.gmail.com>

Marcel points out that you can use the integer as used for TeX's \write, as
the first argument of texio.write (which is a nice feature) Could the
manual be updated to mention this, currently it only documents the first
argument being a string such as "log"

David
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://tug.org/pipermail/luatex/attachments/20200207/30335c61/attachment.html>

From luigi.scarso at gmail.com  Fri Feb  7 12:44:02 2020
From: luigi.scarso at gmail.com (luigi scarso)
Date: Fri, 7 Feb 2020 12:44:02 +0100
Subject: [luatex] Command to write directly from Lua to the aux file?
In-Reply-To: <CAEW6iOje9OSKrDt7cTrtytdbzi7wc6Riod+-ARtCxhjdu2uVLw@mail.gmail.com>
References: <1581067734-5023895.89830016.f0179SpNm029722@rs155.luxsci.com>
 <CAEW6iOje9OSKrDt7cTrtytdbzi7wc6Riod+-ARtCxhjdu2uVLw@mail.gmail.com>
Message-ID: <CAG5iGsAiJMnn5ge687-TJO8+qU02LxePOPtGJ8CnYxVEevuMOw@mail.gmail.com>

On Fri, Feb 7, 2020 at 12:36 PM David Carlisle <d.p.carlisle at gmail.com>
wrote:

>
> Marcel points out that you can use the integer as used for TeX's \write,
> as the first argument of texio.write (which is a nice feature) Could the
> manual be updated to mention this, currently it only documents the first
> argument being a string such as "log"
>
> David
>
>
ok, I will check ( it should be   something inside do_texio_print )
Do you have a mwe (for the records)  ?

-- 
luigi
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://tug.org/pipermail/luatex/attachments/20200207/c3a2aedf/attachment.html>

From d.p.carlisle at gmail.com  Fri Feb  7 12:46:30 2020
From: d.p.carlisle at gmail.com (David Carlisle)
Date: Fri, 7 Feb 2020 11:46:30 +0000
Subject: [luatex] Command to write directly from Lua to the aux file?
In-Reply-To: <CAG5iGsAiJMnn5ge687-TJO8+qU02LxePOPtGJ8CnYxVEevuMOw@mail.gmail.com>
References: <1581067734-5023895.89830016.f0179SpNm029722@rs155.luxsci.com>
 <CAEW6iOje9OSKrDt7cTrtytdbzi7wc6Riod+-ARtCxhjdu2uVLw@mail.gmail.com>
 <CAG5iGsAiJMnn5ge687-TJO8+qU02LxePOPtGJ8CnYxVEevuMOw@mail.gmail.com>
Message-ID: <CAEW6iOiEjcRQdo5mbRdVjjaG_Tz_FbnKD1h7yanzZbCmoQ06bA@mail.gmail.com>

On Fri, 7 Feb 2020 at 11:45, luigi scarso <luigi.scarso at gmail.com> wrote:

>
>
> On Fri, Feb 7, 2020 at 12:36 PM David Carlisle <d.p.carlisle at gmail.com>
> wrote:
>
>>
>> Marcel points out that you can use the integer as used for TeX's \write,
>> as the first argument of texio.write (which is a nice feature) Could the
>> manual be updated to mention this, currently it only documents the first
>> argument being a string such as "log"
>>
>> David
>>
>>
> ok, I will check ( it should be   something inside do_texio_print )
> Do you have a mwe (for the records)  ?
>

yes this works, producing

aaa
Lua
bbb

but the manual says the argument 4 should be the strings "log" or "term"


\immediate\openout4=\jobname.txt

\immediate\write4{aaa}

\directlua{
texio.write(4,"Lua\string\n")
}

\immediate\write4{bbb}

\immediate\closeout4

\bye





> --
> luigi
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://tug.org/pipermail/luatex/attachments/20200207/5799f5f5/attachment.html>

From luigi.scarso at gmail.com  Fri Feb  7 12:55:46 2020
From: luigi.scarso at gmail.com (luigi scarso)
Date: Fri, 7 Feb 2020 12:55:46 +0100
Subject: [luatex] Command to write directly from Lua to the aux file?
In-Reply-To: <CAEW6iOiEjcRQdo5mbRdVjjaG_Tz_FbnKD1h7yanzZbCmoQ06bA@mail.gmail.com>
References: <1581067734-5023895.89830016.f0179SpNm029722@rs155.luxsci.com>
 <CAEW6iOje9OSKrDt7cTrtytdbzi7wc6Riod+-ARtCxhjdu2uVLw@mail.gmail.com>
 <CAG5iGsAiJMnn5ge687-TJO8+qU02LxePOPtGJ8CnYxVEevuMOw@mail.gmail.com>
 <CAEW6iOiEjcRQdo5mbRdVjjaG_Tz_FbnKD1h7yanzZbCmoQ06bA@mail.gmail.com>
Message-ID: <CAG5iGsA-DJ2+Mm=JGuS8g6BKo6VPkNZZNW+mwfAuBOmkM20XgQ@mail.gmail.com>

On Fri, Feb 7, 2020 at 12:47 PM David Carlisle <d.p.carlisle at gmail.com>
wrote:

>
>
> On Fri, 7 Feb 2020 at 11:45, luigi scarso <luigi.scarso at gmail.com> wrote:
>
>>
>>
>> On Fri, Feb 7, 2020 at 12:36 PM David Carlisle <d.p.carlisle at gmail.com>
>> wrote:
>>
>>>
>>> Marcel points out that you can use the integer as used for TeX's \write,
>>> as the first argument of texio.write (which is a nice feature) Could the
>>> manual be updated to mention this, currently it only documents the first
>>> argument being a string such as "log"
>>>
>>> David
>>>
>>>
>> ok, I will check ( it should be   something inside do_texio_print )
>> Do you have a mwe (for the records)  ?
>>
>
> yes this works, producing
>
> aaa
> Lua
> bbb
>
> but the manual says the argument 4 should be the strings "log" or "term"
>
>
> \immediate\openout4=\jobname.txt
>
> \immediate\write4{aaa}
>
> \directlua{
> texio.write(4,"Lua\string\n")
> }
>
> \immediate\write4{bbb}
>
> \immediate\closeout4
>
> \bye
>
>
>
ok.
The code says
 if (selector != term_and_log && selector != log_only && selector !=
term_only) {
        if (! valid_write_file(selector)) {
            normalize_selector();   /* sets selector */
        }
    }

so yes, it seems that integer as said are ok.

 --
luigi
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://tug.org/pipermail/luatex/attachments/20200207/c60810ca/attachment.html>

