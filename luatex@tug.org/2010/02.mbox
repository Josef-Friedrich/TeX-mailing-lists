From pgesang at ix.urz.uni-heidelberg.de  Fri Feb  5 02:09:16 2010
From: pgesang at ix.urz.uni-heidelberg.de (Philipp Gesang)
Date: Fri, 5 Feb 2010 02:09:16 +0100
Subject: [luatex] documentation on builtin utf library
Message-ID: <20100205010916.GA22587@aides.aides.com>

Hello,


could you please point me to some documentation on the selene utf
library that is mentioned in the luatex reference?  I know it has been
brought up earlier[1], but I can't seem to find anything on the web
apart from the slnunicode source that are far from readable for me.  For
now everything I know I gathered by grepping the lua files in
~/context/tex/texmf-context/tex/context/base .

Thanks,


Philipp


[1] http://www.ntg.nl/pipermail/ntg-context/2007/027644.html
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 198 bytes
Desc: not available
URL: <http://tug.org/pipermail/luatex/attachments/20100205/810785df/attachment.bin>

From arthur.reutenauer at normalesup.org  Fri Feb  5 08:11:40 2010
From: arthur.reutenauer at normalesup.org (Arthur Reutenauer)
Date: Fri, 5 Feb 2010 08:11:40 +0100
Subject: [luatex] documentation on builtin utf library
In-Reply-To: <20100205010916.GA22587@aides.aides.com>
References: <20100205010916.GA22587@aides.aides.com>
Message-ID: <20100205071140.GB16147@phare.normalesup.org>

> could you please point me to some documentation on the selene utf
> library that is mentioned in the luatex reference?

  I don't think there is any, but the test file that comes with the library
sources should provide some indications, as well as the general idea that the
unicode.ascii, unicode.utf8 and unicode.grapheme each provide the same
functions as the standard string library (i.e., unicode.utf8.gmatch is a global
match function for UTF-8 strings just like string.gmatch is for ASCII strings,
etc.)

	Arthur

From khaledhosny at eglug.org  Mon Feb 15 20:36:40 2010
From: khaledhosny at eglug.org (Khaled Hosny)
Date: Mon, 15 Feb 2010 21:36:40 +0200
Subject: [luatex] documentation on builtin utf library
In-Reply-To: <20100205071140.GB16147@phare.normalesup.org>
References: <20100205010916.GA22587@aides.aides.com>
	<20100205071140.GB16147@phare.normalesup.org>
Message-ID: <20100215193640.GA9339@khaled-laptop>

On Fri, Feb 05, 2010 at 08:11:40AM +0100, Arthur Reutenauer wrote:
> > could you please point me to some documentation on the selene utf
> > library that is mentioned in the luatex reference?
> 
>   I don't think there is any, but the test file that comes with the library
> sources should provide some indications, as well as the general idea that the
> unicode.ascii, unicode.utf8 and unicode.grapheme each provide the same
> functions as the standard string library (i.e., unicode.utf8.gmatch is a global
> match function for UTF-8 strings just like string.gmatch is for ASCII strings,
> etc.)

I was wondering, since luatex defaults to utf-8 every where, why the
built-in non-unicode compliant string library isn't overridden by the
unicode library? So instead of having to libraries, make the standard
one unicode compliant and get ride of the separate unicode library. This
would decrease the confusion that is made right now and avoid bugs
caused by code not aware of this important fact? Have this ever been
considered, may be there are technical difficulties?

Regards,
 Khaled

-- 
 Khaled Hosny
 Arabic localiser and member of Arabeyes.org team
 Free font developer

From taco at elvenkind.com  Tue Feb 16 08:07:31 2010
From: taco at elvenkind.com (Taco Hoekwater)
Date: Tue, 16 Feb 2010 08:07:31 +0100
Subject: [luatex] documentation on builtin utf library
In-Reply-To: <20100215193640.GA9339@khaled-laptop>
References: <20100205010916.GA22587@aides.aides.com>	<20100205071140.GB16147@phare.normalesup.org>
	<20100215193640.GA9339@khaled-laptop>
Message-ID: <4B7A4433.8000408@elvenkind.com>

Khaled Hosny wrote:
> On Fri, Feb 05, 2010 at 08:11:40AM +0100, Arthur Reutenauer wrote:
>>> could you please point me to some documentation on the selene utf
>>> library that is mentioned in the luatex reference?
>>   I don't think there is any, but the test file that comes with the library
>> sources should provide some indications, as well as the general idea that the
>> unicode.ascii, unicode.utf8 and unicode.grapheme each provide the same
>> functions as the standard string library (i.e., unicode.utf8.gmatch is a global
>> match function for UTF-8 strings just like string.gmatch is for ASCII strings,
>> etc.)
> 
> I was wondering, since luatex defaults to utf-8 every where, why the
> built-in non-unicode compliant string library isn't overridden by the
> unicode library? So instead of having to libraries, make the standard
> one unicode compliant and get ride of the separate unicode library. This
> would decrease the confusion that is made right now and avoid bugs
> caused by code not aware of this important fact? Have this ever been
> considered, may be there are technical difficulties?

Not technical difficulties, but practical ones. The normal string
library allows arbitrary bytes to be handled, which is very useful
functionality. And as the string library has to stay, it may as well
stay in its normal form, as that avoids confusion.

I have thought about replacing the selene unicode library with
something else, but that is a low-priority task.

Best wishes,
Taco

From joseph.wright at morningstar2.co.uk  Tue Feb 16 11:11:39 2010
From: joseph.wright at morningstar2.co.uk (Joseph Wright)
Date: Tue, 16 Feb 2010 10:11:39 +0000
Subject: [luatex] Getting the extra primitives?
Message-ID: <4B7A6F5B.4050800@morningstar2.co.uk>

Hello all,

I'm trying to build a simple format including the e-TeX primitives, etc. 
using LuaTeX in TeX Live 2009. Following the manual, I've got

\begingroup\expandafter\expandafter\expandafter\endgroup
\expandafter\ifx\csname directlua\endcsname\relax
\else
   \directlua{tex.enableprimitives('',tex.extraprimitives ())}
\fi

However, this dies horribly:

This is LuaTeX, Version beta-0.40.6-2009110118 (Web2C 2009)
(format.ltx
! LuaTeX error wrong number of arguments
stack traceback:
         [C]: in function 'enableprimitives'
         <\directlua >:1: in main chunk.
l.27   }

?
! Emergency stop.
l.27   }

What did I get wrong?
-- 
Joseph Wright

From taco at elvenkind.com  Tue Feb 16 11:55:12 2010
From: taco at elvenkind.com (Taco Hoekwater)
Date: Tue, 16 Feb 2010 11:55:12 +0100
Subject: [luatex] Getting the extra primitives?
In-Reply-To: <4B7A6F5B.4050800@morningstar2.co.uk>
References: <4B7A6F5B.4050800@morningstar2.co.uk>
Message-ID: <4B7A7990.9080203@elvenkind.com>



Joseph Wright wrote:
> 
> This is LuaTeX, Version beta-0.40.6-2009110118 (Web2C 2009)
> (format.ltx
> ! LuaTeX error wrong number of arguments
> stack traceback:
>         [C]: in function 'enableprimitives'
>         <\directlua >:1: in main chunk.
> l.27   }
> 
> ?
> ! Emergency stop.
> l.27   }
> 
> What did I get wrong?

That depends on line 1-26 of your input file.

Best wishes,
Taco

From luigi.scarso at gmail.com  Tue Feb 16 12:02:36 2010
From: luigi.scarso at gmail.com (luigi scarso)
Date: Tue, 16 Feb 2010 12:02:36 +0100
Subject: [luatex] Getting the extra primitives?
In-Reply-To: <4B7A6F5B.4050800@morningstar2.co.uk>
References: <4B7A6F5B.4050800@morningstar2.co.uk>
Message-ID: <fe8d59da1002160302y46cda76bv3a70b662dd2ced79@mail.gmail.com>

On Tue, Feb 16, 2010 at 11:11 AM, Joseph Wright
<joseph.wright at morningstar2.co.uk> wrote:
> Hello all,
>
> I'm trying to build a simple format including the e-TeX primitives, etc.
> using LuaTeX in TeX Live 2009. Following the manual, I've got
>
> \begingroup\expandafter\expandafter\expandafter\endgroup
> \expandafter\ifx\csname directlua\endcsname\relax
> \else
> ?\directlua{tex.enableprimitives('',tex.extraprimitives ())}
> \fi
>
> However, this dies horribly:
>
> This is LuaTeX, Version beta-0.40.6-2009110118 (Web2C 2009)

It's an older version, actually we are at 0.50
This is LuaTeX, Version beta-0.50.0-2010021609
I think it's always better to work with last release.

-- 
luigi


From joseph.wright at morningstar2.co.uk  Tue Feb 16 12:04:05 2010
From: joseph.wright at morningstar2.co.uk (Joseph Wright)
Date: Tue, 16 Feb 2010 11:04:05 +0000
Subject: [luatex] Getting the extra primitives?
In-Reply-To: <4B7A7990.9080203@elvenkind.com>
References: <4B7A6F5B.4050800@morningstar2.co.uk>
	<4B7A7990.9080203@elvenkind.com>
Message-ID: <4B7A7BA5.5080308@morningstar2.co.uk>

On 16/02/2010 10:55, Taco Hoekwater wrote:
>
>
> Joseph Wright wrote:
>>
>> This is LuaTeX, Version beta-0.40.6-2009110118 (Web2C 2009)
>> (format.ltx
>> ! LuaTeX error wrong number of arguments
>> stack traceback:
>>          [C]: in function 'enableprimitives'
>>          <\directlua>:1: in main chunk.
>> l.27   }
>>
>> ?
>> ! Emergency stop.
>> l.27   }
>>
>> What did I get wrong?
>
> That depends on line 1-26 of your input file.
>
> Best wishes,
> Taco
>

Hello Taco,

Hmm, very odd: after moving the lines around the problem has gone away, 
even putting everything back as it was. Not sure quite what I messed up: 
sorry for the noise.

Next question, which is sort-of related (now I have some primitives!). 
LuaTeX doesn't have \pdfstrcmp, so what is the best way to do

\def\somefunction#1#2{%
   \ifnum\pdfstrmp{\unexpanded{#1}}{\unexpanded{#2}} = 0\relax
     \expandafter\@firstoftwo
   \else
     \expandafter\@secondoftwo
   \fi
}
\def\someotherfunction#1#2{%
   \ifnum\pdfstrmp{#1}{#2} = 0\relax
     \expandafter\@firstoftwo
   \else
     \expandafter\@secondoftwo
   \fi
}

in LuaTeX? Obviously "using Lua", but I'm still trying to get the hang 
of things.
-- 
Joseph Wright

From mpg at elzevir.fr  Tue Feb 16 12:09:23 2010
From: mpg at elzevir.fr (=?ISO-8859-1?Q?Manuel_P=E9gouri=E9-Gonnard?=)
Date: Tue, 16 Feb 2010 12:09:23 +0100
Subject: [luatex] Getting the extra primitives?
In-Reply-To: <4B7A7BA5.5080308@morningstar2.co.uk>
References: <4B7A6F5B.4050800@morningstar2.co.uk>	<4B7A7990.9080203@elvenkind.com>
	<4B7A7BA5.5080308@morningstar2.co.uk>
Message-ID: <4B7A7CE3.5010503@elzevir.fr>

Hi Joseph,

Joseph Wright a ?crit :
> Next question, which is sort-of related (now I have some primitives!).
> LuaTeX doesn't have \pdfstrcmp, so what is the best way to do
> [...]
> in LuaTeX? Obviously "using Lua", but I'm still trying to get the hang
> of things.

You may want to have a look at Heiko's pdftexcmds package which does precisely this.

Manuel.

From taco at elvenkind.com  Tue Feb 16 12:13:21 2010
From: taco at elvenkind.com (Taco Hoekwater)
Date: Tue, 16 Feb 2010 12:13:21 +0100
Subject: [luatex] Getting the extra primitives?
In-Reply-To: <4B7A7CE3.5010503@elzevir.fr>
References: <4B7A6F5B.4050800@morningstar2.co.uk>	<4B7A7990.9080203@elvenkind.com>	<4B7A7BA5.5080308@morningstar2.co.uk>
	<4B7A7CE3.5010503@elzevir.fr>
Message-ID: <4B7A7DD1.8040806@elvenkind.com>



Manuel P?gouri?-Gonnard wrote:
> Hi Joseph,
> 
> Joseph Wright a ?crit :
>> Next question, which is sort-of related (now I have some primitives!).
>> LuaTeX doesn't have \pdfstrcmp, so what is the best way to do
>> [...]
>> in LuaTeX? Obviously "using Lua", but I'm still trying to get the hang
>> of things.
> 
> You may want to have a look at Heiko's pdftexcmds package which does precisely this.

Straight from pdftexmds:

\long\def\pdf at strcmp#1#2{%
  \directlua0{%
    oberdiek.pdftexcmds.strcmp("\luaescapestring{#1}",%
        "\luaescapestring{#2}")%
  }%
}%

With:

function strcmp(A, B)
  if A == B then
    tex.write("0")
  elseif A < B then
    tex.write("-1")
  else
    tex.write("1")
  end
end

In lua, you can simply compare strings using the math operators.

Best wishes,
Taco


From joseph.wright at morningstar2.co.uk  Tue Feb 16 12:41:06 2010
From: joseph.wright at morningstar2.co.uk (Joseph Wright)
Date: Tue, 16 Feb 2010 11:41:06 +0000
Subject: [luatex] Getting the extra primitives?
In-Reply-To: <4B7A7DD1.8040806@elvenkind.com>
References: <4B7A6F5B.4050800@morningstar2.co.uk>	<4B7A7990.9080203@elvenkind.com>	<4B7A7BA5.5080308@morningstar2.co.uk>	<4B7A7CE3.5010503@elzevir.fr>
	<4B7A7DD1.8040806@elvenkind.com>
Message-ID: <4B7A8452.1030503@morningstar2.co.uk>

On 16/02/2010 11:13, Taco Hoekwater wrote:
> Straight from pdftexmds:
>
> \long\def\pdf at strcmp#1#2{%
>    \directlua0{%
>      oberdiek.pdftexcmds.strcmp("\luaescapestring{#1}",%
>          "\luaescapestring{#2}")%
>    }%
> }%
>
> With:
>
> function strcmp(A, B)
>    if A == B then
>      tex.write("0")
>    elseif A<  B then
>      tex.write("-1")
>    else
>      tex.write("1")
>    end
> end
>
> In lua, you can simply compare strings using the math operators.

Hello Taco,

Thanks for that (and to Manuel too): I was not sure if there were any 
"pitfalls". Also, that simulates \pdfstrcmp itself, but I was wondering 
about doing the entire functions (missing out all of the \ifnum and 
\expandafter stuff). In partial pseudo-code (and using LaTeX3-style 
function naming):

function strcmp:xxTF (A,B,C,D)
   if A == B then
     [Leave C on input stream]
   else
     [Leave D on input stream]
   end
end

(Also, am I correct in thinking that there is no way to avoid needing 
\unexpanded to get the string comparison "as is"?)
-- 
Joseph Wright

From taco at elvenkind.com  Tue Feb 16 12:55:41 2010
From: taco at elvenkind.com (Taco Hoekwater)
Date: Tue, 16 Feb 2010 12:55:41 +0100
Subject: [luatex] Getting the extra primitives?
In-Reply-To: <4B7A8452.1030503@morningstar2.co.uk>
References: <4B7A6F5B.4050800@morningstar2.co.uk>	<4B7A7990.9080203@elvenkind.com>	<4B7A7BA5.5080308@morningstar2.co.uk>	<4B7A7CE3.5010503@elzevir.fr>	<4B7A7DD1.8040806@elvenkind.com>
	<4B7A8452.1030503@morningstar2.co.uk>
Message-ID: <4B7A87BD.9@elvenkind.com>



Joseph Wright wrote:
> 
> Thanks for that (and to Manuel too): I was not sure if there were any
> "pitfalls". Also, that simulates \pdfstrcmp itself, but I was wondering
> about doing the entire functions (missing out all of the \ifnum and
> \expandafter stuff). In partial pseudo-code (and using LaTeX3-style
> function naming):

I do not quite understand, but will try.

If you have this in the input

  \somefunction{stringa}{stringb}{arga}{argb}

then you could use this definition

\def\somefunction#1#2{%
  \directlua{somefunction("\luaescapestring{#1}",
                          "\luaescapestring{#2}")}}

with the lua function defined like this:

function somefunction(A, B)
  if A == B then
    tex.sprint("\\@firstoftwo")
  else
    tex.sprint("\\@secondoftwo")
  end
end

you will need a tex helper definition for the backslashes in the string
if the function is itself defined inside a tex file:

  \let\\\relax

> (Also, am I correct in thinking that there is no way to avoid needing 
> \unexpanded to get the string comparison "as is"?) 

That depends on the actual strings and the current catcode assignments
of course, but \directlua expands its argument, so yes, if you want to
compare control sequence names, you will need some way to make sure
they don't expand automatically.

Best wishes,
Taco


From mpg at elzevir.fr  Tue Feb 16 13:52:48 2010
From: mpg at elzevir.fr (=?ISO-8859-1?Q?Manuel_P=E9gouri=E9-Gonnard?=)
Date: Tue, 16 Feb 2010 13:52:48 +0100
Subject: [luatex] Getting the extra primitives?
In-Reply-To: <4B7A87BD.9@elvenkind.com>
References: <4B7A6F5B.4050800@morningstar2.co.uk>	<4B7A7990.9080203@elvenkind.com>	<4B7A7BA5.5080308@morningstar2.co.uk>	<4B7A7CE3.5010503@elzevir.fr>	<4B7A7DD1.8040806@elvenkind.com>	<4B7A8452.1030503@morningstar2.co.uk>
	<4B7A87BD.9@elvenkind.com>
Message-ID: <4B7A9520.6030609@elzevir.fr>

Taco Hoekwater a ?crit :
> function somefunction(A, B)
>   if A == B then
>     tex.sprint("\\@firstoftwo")
>   else
>     tex.sprint("\\@secondoftwo")
>   end
> end
> 
I'd suggest that a more robust version would use the optional "catcode table"
argument of tex.sprint() in order to make sure the strings like "\\@firstoftwo"
are correctly tokenized. Assuming that \catcodetable42 is the standard LaTeX
catcodes plus @ a letter,

function somefunction(A, B)
  if A == B then
    tex.sprint(42, "\\@firstoftwo")
  else
    tex.sprint(42, "\\@secondoftwo")
  end
end

should work in all circumstances.

By the way, Joseph, do this question mean you are implementing basic support for
LuaTeX in expl3? I'd be glad to hear that!

Manuel.

From joseph.wright at uea.ac.uk  Tue Feb 16 13:14:20 2010
From: joseph.wright at uea.ac.uk (Joseph Wright)
Date: Tue, 16 Feb 2010 12:14:20 +0000
Subject: [luatex] Getting the extra primitives?
In-Reply-To: <4B7A87BD.9@elvenkind.com>
References: <4B7A6F5B.4050800@morningstar2.co.uk>	<4B7A7990.9080203@elvenkind.com>	<4B7A7BA5.5080308@morningstar2.co.uk>	<4B7A7CE3.5010503@elzevir.fr>	<4B7A7DD1.8040806@elvenkind.com>	<4B7A8452.1030503@morningstar2.co.uk>
	<4B7A87BD.9@elvenkind.com>
Message-ID: <4B7A8C1C.8070605@uea.ac.uk>

Hello all,

Thanks for the help thus far. I'm now stuck on the next step, I'm 
afraid. With a file to build a format something like:

\catcode `\{ = 1 \relax
\catcode `\} = 2 \relax
\catcode `\# = 6 \relax
\catcode `\^ = 7 \relax
\catcode `\^^I = 10 \relax
\begingroup\expandafter\expandafter\expandafter\endgroup
\expandafter\ifx\csname directlua\endcsname\relax
\else
   \long\def\pdfstrcmp#1#2{%
     \directlua
       {%
         joseph.strcmp("\luaescapestring{#1}","\luaescapestring{#2}")%
       }%
   }
   \directlua
     {
       tex.enableprimitives('',tex.extraprimitives ())
       module("joseph",package.seeall)
       function strcmp(A, B)
         if A == B then
           tex.write("0")
         elseif A < B then
           tex.write("-1")
         else
           tex.write("1")
         end
       end
     }
\fi
\dump

If I then try building the format and using it, with something as simple as

\ifnum\pdfstrcmp{a}{b}=0\TRUE\else\FALSE\fi

I get:

! LuaTeX error <\directlua >:1: attempt to index global 'joseph' (a nil 
value)
stack traceback:
         <\directlua >:1: in main chunk.
\pdfstrcmp ...ring {#1}","\luaescapestring {#2}")}

<*> \ifnum\pdfstrcmp{a}{b}
                           =0 \TRUE\else\FALSE\fi
?

Obviously I'm still getting something wrong.

>> (Also, am I correct in thinking that there is no way to avoid needing
>> \unexpanded to get the string comparison "as is"?)
>
> That depends on the actual strings and the current catcode assignments
> of course, but \directlua expands its argument, so yes, if you want to
> compare control sequence names, you will need some way to make sure
> they don't expand automatically.

Just thought I should check: thanks.
--
Joseph Wright

From luigi.scarso at gmail.com  Tue Feb 16 16:43:29 2010
From: luigi.scarso at gmail.com (luigi scarso)
Date: Tue, 16 Feb 2010 16:43:29 +0100
Subject: [luatex] Getting the extra primitives?
In-Reply-To: <4B7A8C1C.8070605@uea.ac.uk>
References: <4B7A6F5B.4050800@morningstar2.co.uk>
	<4B7A7990.9080203@elvenkind.com> <4B7A7BA5.5080308@morningstar2.co.uk>
	<4B7A7CE3.5010503@elzevir.fr> <4B7A7DD1.8040806@elvenkind.com>
	<4B7A8452.1030503@morningstar2.co.uk> <4B7A87BD.9@elvenkind.com>
	<4B7A8C1C.8070605@uea.ac.uk>
Message-ID: <fe8d59da1002160743w3982b82ap2fc97e7aecd661b9@mail.gmail.com>

On Tue, Feb 16, 2010 at 1:14 PM, Joseph Wright <joseph.wright at uea.ac.uk> wrote:
> Hello all,
>
> Thanks for the help thus far. I'm now stuck on the next step, I'm afraid.
> With a file to build a format something like:
>
> \catcode `\{ = 1 \relax
> \catcode `\} = 2 \relax
> \catcode `\# = 6 \relax
> \catcode `\^ = 7 \relax
> \catcode `\^^I = 10 \relax
> \begingroup\expandafter\expandafter\expandafter\endgroup
> \expandafter\ifx\csname directlua\endcsname\relax
> \else
> ?\long\def\pdfstrcmp#1#2{%
> ? ?\directlua
> ? ? ?{%
> ? ? ? ?joseph.strcmp("\luaescapestring{#1}","\luaescapestring{#2}")%
> ? ? ?}%
> ?}
> ?\directlua
> ? ?{
> ? ? ?tex.enableprimitives('',tex.extraprimitives ())
> ? ? ?module("joseph",package.seeall)
> ? ? ?function strcmp(A, B)
> ? ? ? ?if A == B then
> ? ? ? ? ?tex.write("0")
> ? ? ? ?elseif A < B then
> ? ? ? ? ?tex.write("-1")
> ? ? ? ?else
> ? ? ? ? ?tex.write("1")
> ? ? ? ?end
> ? ? ?end
> ? ?}
> \fi
> \dump
>
> If I then try building the format and using it, with something as simple as
>
> \ifnum\pdfstrcmp{a}{b}=0\TRUE\else\FALSE\fi
>
> I get:
>
> ! LuaTeX error <\directlua >:1: attempt to index global 'joseph' (a nil
> value)
> stack traceback:
> ? ? ? ?<\directlua >:1: in main chunk.
> \pdfstrcmp ...ring {#1}","\luaescapestring {#2}")}
>
> <*> \ifnum\pdfstrcmp{a}{b}
> ? ? ? ? ? ? ? ? ? ? ? ? ?=0 \TRUE\else\FALSE\fi
> ?
>
> Obviously I'm still getting something wrong.

joseph  = joseph  or { }

Next you need to implement strcmp function

function joseph.strcmp(A,B)
-- your implementation here

end

-- 
luigi


From joseph.wright at morningstar2.co.uk  Wed Feb 17 09:22:46 2010
From: joseph.wright at morningstar2.co.uk (Joseph Wright)
Date: Wed, 17 Feb 2010 08:22:46 +0000
Subject: [luatex] Getting the extra primitives?
In-Reply-To: <4B7A9520.6030609@elzevir.fr>
References: <4B7A6F5B.4050800@morningstar2.co.uk>	<4B7A7990.9080203@elvenkind.com>	<4B7A7BA5.5080308@morningstar2.co.uk>	<4B7A7CE3.5010503@elzevir.fr>	<4B7A7DD1.8040806@elvenkind.com>	<4B7A8452.1030503@morningstar2.co.uk>	<4B7A87BD.9@elvenkind.com>
	<4B7A9520.6030609@elzevir.fr>
Message-ID: <4B7BA756.6030509@morningstar2.co.uk>

On 16/02/2010 12:52, Manuel P?gouri?-Gonnard wrote:
> By the way, Joseph, do this question mean you are implementing basic support for
> LuaTeX in expl3? I'd be glad to hear that!

At the moment I'm just fiddling around with some test files. However, 
the longer-term plan is hopefully clear! (At the moment, expl3 as a 
format will fail with luaTeX as the e-TeX extensions are not around "out 
of the box", which is not great.)
-- 
Joseph Wright

From joseph.wright at morningstar2.co.uk  Wed Feb 17 09:21:08 2010
From: joseph.wright at morningstar2.co.uk (Joseph Wright)
Date: Wed, 17 Feb 2010 08:21:08 +0000
Subject: [luatex] Getting the extra primitives?
In-Reply-To: <fe8d59da1002160743w3982b82ap2fc97e7aecd661b9@mail.gmail.com>
References: <4B7A6F5B.4050800@morningstar2.co.uk>	<4B7A7990.9080203@elvenkind.com>
	<4B7A7BA5.5080308@morningstar2.co.uk>	<4B7A7CE3.5010503@elzevir.fr>
	<4B7A7DD1.8040806@elvenkind.com>	<4B7A8452.1030503@morningstar2.co.uk>
	<4B7A87BD.9@elvenkind.com>	<4B7A8C1C.8070605@uea.ac.uk>
	<fe8d59da1002160743w3982b82ap2fc97e7aecd661b9@mail.gmail.com>
Message-ID: <4B7BA6F4.6020108@morningstar2.co.uk>

On 16/02/2010 15:43, luigi scarso wrote:
> On Tue, Feb 16, 2010 at 1:14 PM, Joseph Wright<joseph.wright at uea.ac.uk>  wrote:
>> Hello all,
>>
>> Thanks for the help thus far. I'm now stuck on the next step, I'm afraid.
>> With a file to build a format something like:
>>
>> \catcode `\{ = 1 \relax
>> \catcode `\} = 2 \relax
>> \catcode `\# = 6 \relax
>> \catcode `\^ = 7 \relax
>> \catcode `\^^I = 10 \relax
>> \begingroup\expandafter\expandafter\expandafter\endgroup
>> \expandafter\ifx\csname directlua\endcsname\relax
>> \else
>>   \long\def\pdfstrcmp#1#2{%
>>     \directlua
>>       {%
>>         joseph.strcmp("\luaescapestring{#1}","\luaescapestring{#2}")%
>>       }%
>>   }
>>   \directlua
>>     {
>>       tex.enableprimitives('',tex.extraprimitives ())
>>       module("joseph",package.seeall)
>>       function strcmp(A, B)
>>         if A == B then
>>           tex.write("0")
>>         elseif A<  B then
>>           tex.write("-1")
>>         else
>>           tex.write("1")
>>         end
>>       end
>>     }
>> \fi
>> \dump
>>
>> If I then try building the format and using it, with something as simple as
>>
>> \ifnum\pdfstrcmp{a}{b}=0\TRUE\else\FALSE\fi
>>
>> I get:
>>
>> ! LuaTeX error<\directlua>:1: attempt to index global 'joseph' (a nil
>> value)
>> stack traceback:
>>         <\directlua>:1: in main chunk.
>> \pdfstrcmp ...ring {#1}","\luaescapestring {#2}")}
>>
>> <*>  \ifnum\pdfstrcmp{a}{b}
>>                           =0 \TRUE\else\FALSE\fi
>> ?
>>
>> Obviously I'm still getting something wrong.
>
> joseph  = joseph  or { }
>
> Next you need to implement strcmp function
>
> function joseph.strcmp(A,B)
> -- your implementation here

Further testing suggests the issue may be slightly different to my 
original explanation. As far as I can tell, if I use \pdfstrcmp as 
defined above during the format-creation process then all is fine (for 
example if I just stick \pdfstrcmp{a}{a} just before \dump): no errors. 
However, if I try to use if after making a format then I get the error 
as described. The conclusion is that the lua part of the set up does not 
survive the format-creation process. This seems to be very odd: am I 
getting something wrong? After all, the whole point of a format is that 
it is a pre-compiled and self-contained entity.
-- 
Joseph Wright

From taco at elvenkind.com  Wed Feb 17 10:27:11 2010
From: taco at elvenkind.com (Taco Hoekwater)
Date: Wed, 17 Feb 2010 10:27:11 +0100
Subject: [luatex] Getting the extra primitives?
In-Reply-To: <4B7BA6F4.6020108@morningstar2.co.uk>
References: <4B7A6F5B.4050800@morningstar2.co.uk>	<4B7A7990.9080203@elvenkind.com>	<4B7A7BA5.5080308@morningstar2.co.uk>	<4B7A7CE3.5010503@elzevir.fr>	<4B7A7DD1.8040806@elvenkind.com>	<4B7A8452.1030503@morningstar2.co.uk>	<4B7A87BD.9@elvenkind.com>	<4B7A8C1C.8070605@uea.ac.uk>	<fe8d59da1002160743w3982b82ap2fc97e7aecd661b9@mail.gmail.com>
	<4B7BA6F4.6020108@morningstar2.co.uk>
Message-ID: <4B7BB66F.4000700@elvenkind.com>

Joseph Wright wrote:
> On 16/02/2010 15:43, luigi scarso wrote:
>> On Tue, Feb 16, 2010 at 1:14 PM, Joseph 
>> Wright<joseph.wright at uea.ac.uk>  wrote:
>>> Hello all,
>>>
>>> Thanks for the help thus far. I'm now stuck on the next step, I'm 
>>> afraid.
>>> With a file to build a format something like:
>>>
>>> \catcode `\{ = 1 \relax
>>> \catcode `\} = 2 \relax
>>> \catcode `\# = 6 \relax
>>> \catcode `\^ = 7 \relax
>>> \catcode `\^^I = 10 \relax
>>> \begingroup\expandafter\expandafter\expandafter\endgroup
>>> \expandafter\ifx\csname directlua\endcsname\relax
>>> \else
>>>   \long\def\pdfstrcmp#1#2{%
>>>     \directlua
>>>       {%
>>>         joseph.strcmp("\luaescapestring{#1}","\luaescapestring{#2}")%
>>>       }%
>>>   }
>>>   \directlua
>>>     {
>>>       tex.enableprimitives('',tex.extraprimitives ())
>>>       module("joseph",package.seeall)
>>>       function strcmp(A, B)
>>>         if A == B then
>>>           tex.write("0")
>>>         elseif A<  B then
>>>           tex.write("-1")
>>>         else
>>>           tex.write("1")
>>>         end
>>>       end
>>>     }
>>> \fi
>>> \dump
>>>
>>> If I then try building the format and using it, with something as 
>>> simple as
>>>
>>> \ifnum\pdfstrcmp{a}{b}=0\TRUE\else\FALSE\fi
>>>
>>> I get:
>>>
>>> ! LuaTeX error<\directlua>:1: attempt to index global 'joseph' (a nil
>>> value)
>>> stack traceback:
>>>         <\directlua>:1: in main chunk.
>>> \pdfstrcmp ...ring {#1}","\luaescapestring {#2}")}
>>>
>>> <*>  \ifnum\pdfstrcmp{a}{b}
>>>                           =0 \TRUE\else\FALSE\fi
>>> ?
>>>
>>> Obviously I'm still getting something wrong.
>>
>> joseph  = joseph  or { }
>>
>> Next you need to implement strcmp function
>>
>> function joseph.strcmp(A,B)
>> -- your implementation here
> 
> Further testing suggests the issue may be slightly different to my 
> original explanation. As far as I can tell, if I use \pdfstrcmp as 
> defined above during the format-creation process then all is fine (for 
> example if I just stick \pdfstrcmp{a}{a} just before \dump): no errors. 
> However, if I try to use if after making a format then I get the error 
> as described. The conclusion is that the lua part of the set up does not 
> survive the format-creation process. This seems to be very odd: am I 
> getting something wrong? After all, the whole point of a format is that 
> it is a pre-compiled and self-contained entity.

Lua stuff is not saved in the format unless you put in a lua bytecode
register (wrapped in a function). This is inconvenient, I know, but
serializing a whole lua state is a lot of work and therefore not done
(yet?).

Best wishes,
Taco


From luigi.scarso at gmail.com  Wed Feb 17 11:03:22 2010
From: luigi.scarso at gmail.com (luigi scarso)
Date: Wed, 17 Feb 2010 11:03:22 +0100
Subject: [luatex] Getting the extra primitives?
In-Reply-To: <4B7BA6F4.6020108@morningstar2.co.uk>
References: <4B7A6F5B.4050800@morningstar2.co.uk>
	<4B7A7990.9080203@elvenkind.com> <4B7A7BA5.5080308@morningstar2.co.uk>
	<4B7A7CE3.5010503@elzevir.fr> <4B7A7DD1.8040806@elvenkind.com>
	<4B7A8452.1030503@morningstar2.co.uk> <4B7A87BD.9@elvenkind.com>
	<4B7A8C1C.8070605@uea.ac.uk>
	<fe8d59da1002160743w3982b82ap2fc97e7aecd661b9@mail.gmail.com>
	<4B7BA6F4.6020108@morningstar2.co.uk>
Message-ID: <fe8d59da1002170203we8315adjedadd3c7e5e72efe@mail.gmail.com>

On Wed, Feb 17, 2010 at 9:21 AM, Joseph Wright
<joseph.wright at morningstar2.co.uk> wrote:
>
>
Maybe this is not what you want,
but format generation and test file are ok.

%% jo.tex %%%%%
\catcode `\{ = 1 \relax
\catcode `\} = 2 \relax
\catcode `\# = 6 \relax
\catcode `\^ = 7 \relax
\catcode `\^^I = 10 \relax
\begingroup\expandafter\expandafter\expandafter\endgroup
\expandafter\ifx\csname directlua\endcsname\relax
\else
 \long\def\pdfstrcmp#1#2{%
   \directlua
     {%
       joseph = joseph or {}
       function joseph.strcmp(A,B)
        if A == B then
         tex.write("0")
       elseif A<  B then
         tex.write("-1")
       else
         tex.write("1")
       end
       end
       joseph.strcmp("\luaescapestring{#1}","\luaescapestring{#2}")%
     }%
 }
 \directlua
   {
     tex.enableprimitives('',tex.extraprimitives ())
     module("joseph",package.seeall)
     function strcmp(A, B)
       if A == B then
         tex.write("0")
       elseif A<  B then
         tex.write("-1")
       else
         tex.write("1")
       end
     end
   }
\fi
\dump
%%%%%%%%

%% jo1.tex
Hello
\pdfstrcmp{W}{Q}
\end


# luatex --ini jo.tex
# luatex --fmt=jo.fmt jo1.tex


-- 
luigi

From joseph.wright at morningstar2.co.uk  Wed Feb 17 12:08:35 2010
From: joseph.wright at morningstar2.co.uk (Joseph Wright)
Date: Wed, 17 Feb 2010 11:08:35 +0000
Subject: [luatex] Getting the extra primitives?
In-Reply-To: <4B7BB66F.4000700@elvenkind.com>
References: <4B7A6F5B.4050800@morningstar2.co.uk>	<4B7A7990.9080203@elvenkind.com>	<4B7A7BA5.5080308@morningstar2.co.uk>	<4B7A7CE3.5010503@elzevir.fr>	<4B7A7DD1.8040806@elvenkind.com>	<4B7A8452.1030503@morningstar2.co.uk>	<4B7A87BD.9@elvenkind.com>	<4B7A8C1C.8070605@uea.ac.uk>	<fe8d59da1002160743w3982b82ap2fc97e7aecd661b9@mail.gmail.com>	<4B7BA6F4.6020108@morningstar2.co.uk>
	<4B7BB66F.4000700@elvenkind.com>
Message-ID: <4B7BCE33.4090306@morningstar2.co.uk>

On 17/02/2010 09:27, Taco Hoekwater wrote:
> Lua stuff is not saved in the format unless you put in a lua bytecode
> register (wrapped in a function). This is inconvenient, I know, but
> serializing a whole lua state is a lot of work and therefore not done
> (yet?).

Okay, how would I do this? As it's only one function, I think some 
awkwardness setting things up is acceptable. AS I'm looking at this from 
a LaTeX-like point of view I'd like the format to be self-contained (no 
additional files required for it to at least load and function "as 
advertised").
-- 
Joseph Wright

From t34www at googlemail.com  Wed Feb 17 12:45:15 2010
From: t34www at googlemail.com (T T)
Date: Wed, 17 Feb 2010 11:45:15 +0000
Subject: [luatex] Getting the extra primitives?
In-Reply-To: <4B7BCE33.4090306@morningstar2.co.uk>
References: <4B7A6F5B.4050800@morningstar2.co.uk> <4B7A7CE3.5010503@elzevir.fr>
	<4B7A7DD1.8040806@elvenkind.com> <4B7A8452.1030503@morningstar2.co.uk>
	<4B7A87BD.9@elvenkind.com> <4B7A8C1C.8070605@uea.ac.uk>
	<fe8d59da1002160743w3982b82ap2fc97e7aecd661b9@mail.gmail.com>
	<4B7BA6F4.6020108@morningstar2.co.uk> <4B7BB66F.4000700@elvenkind.com>
	<4B7BCE33.4090306@morningstar2.co.uk>
Message-ID: <e7fba2611002170345q36f2d7acyefb611af25fe8e06@mail.gmail.com>

On 17 February 2010 11:08, Joseph Wright
<joseph.wright at morningstar2.co.uk> wrote:
> On 17/02/2010 09:27, Taco Hoekwater wrote:
>>
>> Lua stuff is not saved in the format unless you put in a lua bytecode
>> register (wrapped in a function). This is inconvenient, I know, but
>> serializing a whole lua state is a lot of work and therefore not done
>> (yet?).
>
> Okay, how would I do this? As it's only one function, I think some
> awkwardness setting things up is acceptable. AS I'm looking at this from a
> LaTeX-like point of view I'd like the format to be self-contained (no
> additional files required for it to at least load and function "as
> advertised").

Hi Joseph,

I had a quick stab at this (with essentially no prior experience in
LuaTeX programming). The following seemed to work for me and does what
you want:

\catcode `\{ = 1 \relax
\catcode `\} = 2 \relax
\catcode `\# = 6 \relax
\catcode `\^ = 7 \relax
\catcode `\^^I = 10 \relax
\begingroup\expandafter\expandafter\expandafter\endgroup
\expandafter\ifx\csname directlua\endcsname\relax
\else
 \directlua
  {
    tex.enableprimitives('',tex.extraprimitives ())
    lua.bytecode[1]=function (A, B)
      if A == B then
        tex.write("0")
      elseif A < B then
        tex.write("-1")
      else
        tex.write("1")
      end
    end
  }
 \long\def\pdfstrcmp#1#2{%
  \directlua
    {%
      lua.bytecode[1]("\luaescapestring{#1}","\luaescapestring{#2}")%
    }%
 }
\fi
\dump

Cheers,

Tomek

From taco at elvenkind.com  Wed Feb 17 13:41:05 2010
From: taco at elvenkind.com (Taco Hoekwater)
Date: Wed, 17 Feb 2010 13:41:05 +0100
Subject: [luatex] Getting the extra primitives?
In-Reply-To: <e7fba2611002170345q36f2d7acyefb611af25fe8e06@mail.gmail.com>
References: <4B7A6F5B.4050800@morningstar2.co.uk>
	<4B7A7CE3.5010503@elzevir.fr>	<4B7A7DD1.8040806@elvenkind.com>
	<4B7A8452.1030503@morningstar2.co.uk>	<4B7A87BD.9@elvenkind.com>
	<4B7A8C1C.8070605@uea.ac.uk>	<fe8d59da1002160743w3982b82ap2fc97e7aecd661b9@mail.gmail.com>	<4B7BA6F4.6020108@morningstar2.co.uk>
	<4B7BB66F.4000700@elvenkind.com>	<4B7BCE33.4090306@morningstar2.co.uk>
	<e7fba2611002170345q36f2d7acyefb611af25fe8e06@mail.gmail.com>
Message-ID: <4B7BE3E1.1090308@elvenkind.com>

T T wrote:
> On 17 February 2010 11:08, Joseph Wright
> <joseph.wright at morningstar2.co.uk> wrote:
>> On 17/02/2010 09:27, Taco Hoekwater wrote:
>>> Lua stuff is not saved in the format unless you put in a lua bytecode
>>> register (wrapped in a function). This is inconvenient, I know, but
>>> serializing a whole lua state is a lot of work and therefore not done
>>> (yet?).
>> Okay, how would I do this? As it's only one function, I think some
>> awkwardness setting things up is acceptable. AS I'm looking at this from a
>> LaTeX-like point of view I'd like the format to be self-contained (no
>> additional files required for it to at least load and function "as
>> advertised").
> 
> Hi Joseph,
> 
> I had a quick stab at this (with essentially no prior experience in
> LuaTeX programming). The following seemed to work for me and does what
> you want:

Yes. A somewhat more generic solution is this:

\directlua
   {
     tex.enableprimitives('',tex.extraprimitives ())
     lua.bytecode[1]=function ()
       function pdfstrcmp (A, B)
         if A == B then
           tex.write("0")
         elseif A < B then
           tex.write("-1")
         else
           tex.write("1")
         end
       end
     end
     lua.bytecode[1]()
   }
  \everyjob{\directlua{lua.bytecode[1]()}}
  \long\def\pdfstrcmp#1#2{%
   \directlua
     {%
       pdfstrcmp("\luaescapestring{#1}","\luaescapestring{#2}")%
     }%
  }



From mpg at elzevir.fr  Wed Feb 17 13:58:06 2010
From: mpg at elzevir.fr (=?ISO-8859-1?Q?Manuel_P=E9gouri=E9-Gonnard?=)
Date: Wed, 17 Feb 2010 13:58:06 +0100
Subject: [luatex] Getting the extra primitives?
In-Reply-To: <4B7BE3E1.1090308@elvenkind.com>
References: <4B7A6F5B.4050800@morningstar2.co.uk>	<4B7A7CE3.5010503@elzevir.fr>	<4B7A7DD1.8040806@elvenkind.com>	<4B7A8452.1030503@morningstar2.co.uk>	<4B7A87BD.9@elvenkind.com>	<4B7A8C1C.8070605@uea.ac.uk>	<fe8d59da1002160743w3982b82ap2fc97e7aecd661b9@mail.gmail.com>	<4B7BA6F4.6020108@morningstar2.co.uk>	<4B7BB66F.4000700@elvenkind.com>	<4B7BCE33.4090306@morningstar2.co.uk>	<e7fba2611002170345q36f2d7acyefb611af25fe8e06@mail.gmail.com>
	<4B7BE3E1.1090308@elvenkind.com>
Message-ID: <4B7BE7DE.3030806@elzevir.fr>

Taco Hoekwater a ?crit :
> Yes. A somewhat more generic solution is this:
> 
> \directlua
>   {
>     tex.enableprimitives('',tex.extraprimitives ())
>     lua.bytecode[1]=function ()
>       function pdfstrcmp (A, B)
>         if A == B then
>           tex.write("0")
>         elseif A < B then
>           tex.write("-1")
>         else
>           tex.write("1")
>         end
>       end
>     end
>     lua.bytecode[1]()
>   }
>  \everyjob{\directlua{lua.bytecode[1]()}}
>  \long\def\pdfstrcmp#1#2{%
>   \directlua
>     {%
>       pdfstrcmp("\luaescapestring{#1}","\luaescapestring{#2}")%
>     }%
>  }
> 
If one wants to use an external file for Lua code (which is probably preferable
when the amount of code is bigger than a few lines), a solution might be

\directlua{
  lua.bytecode[1]=loadfile("latex3-format.lua")
  lua.bytecode[1]()
}
\everyjob{\directlua{lua.bytecode[1]()}}
% TeX code goes here

using the fact that loadfile() returns a function whose body is the content of
the file.

Manuel.


From joseph.wright at morningstar2.co.uk  Wed Feb 17 13:59:23 2010
From: joseph.wright at morningstar2.co.uk (Joseph Wright)
Date: Wed, 17 Feb 2010 12:59:23 +0000
Subject: [luatex] Getting the extra primitives?
In-Reply-To: <4B7BE3E1.1090308@elvenkind.com>
References: <4B7A6F5B.4050800@morningstar2.co.uk>	<4B7A7CE3.5010503@elzevir.fr>	<4B7A7DD1.8040806@elvenkind.com>	<4B7A8452.1030503@morningstar2.co.uk>	<4B7A87BD.9@elvenkind.com>	<4B7A8C1C.8070605@uea.ac.uk>	<fe8d59da1002160743w3982b82ap2fc97e7aecd661b9@mail.gmail.com>	<4B7BA6F4.6020108@morningstar2.co.uk>	<4B7BB66F.4000700@elvenkind.com>	<4B7BCE33.4090306@morningstar2.co.uk>	<e7fba2611002170345q36f2d7acyefb611af25fe8e06@mail.gmail.com>
	<4B7BE3E1.1090308@elvenkind.com>
Message-ID: <4B7BE82B.7070208@morningstar2.co.uk>

On 17/02/2010 12:41, Taco Hoekwater wrote:
> T T wrote:
>> I had a quick stab at this (with essentially no prior experience in
>> LuaTeX programming). The following seemed to work for me and does what
>> you want:
>
> Yes. A somewhat more generic solution is this:

Thanks both: all is now working. Back to the proper testing :-)
-- 
Joseph Wright

From joseph.wright at morningstar2.co.uk  Wed Feb 17 14:07:30 2010
From: joseph.wright at morningstar2.co.uk (Joseph Wright)
Date: Wed, 17 Feb 2010 13:07:30 +0000
Subject: [luatex] Getting the extra primitives?
In-Reply-To: <4B7BE7DE.3030806@elzevir.fr>
References: <4B7A6F5B.4050800@morningstar2.co.uk>	<4B7A7CE3.5010503@elzevir.fr>	<4B7A7DD1.8040806@elvenkind.com>	<4B7A8452.1030503@morningstar2.co.uk>	<4B7A87BD.9@elvenkind.com>	<4B7A8C1C.8070605@uea.ac.uk>	<fe8d59da1002160743w3982b82ap2fc97e7aecd661b9@mail.gmail.com>	<4B7BA6F4.6020108@morningstar2.co.uk>	<4B7BB66F.4000700@elvenkind.com>	<4B7BCE33.4090306@morningstar2.co.uk>	<e7fba2611002170345q36f2d7acyefb611af25fe8e06@mail.gmail.com>	<4B7BE3E1.1090308@elvenkind.com>
	<4B7BE7DE.3030806@elzevir.fr>
Message-ID: <4B7BEA12.2050009@morningstar2.co.uk>

On 17/02/2010 12:58, Manuel P?gouri?-Gonnard wrote:
> If one wants to use an external file for Lua code (which is probably preferable
> when the amount of code is bigger than a few lines), a solution might be
>
> \directlua{
>    lua.bytecode[1]=loadfile("latex3-format.lua")
>    lua.bytecode[1]()
> }
> \everyjob{\directlua{lua.bytecode[1]()}}
> % TeX code goes here
>
> using the fact that loadfile() returns a function whose body is the content of
> the file.

Hello Manuel,

At present the aim is simply to get the same behaviour across the three 
engines. However, in the longer term this is obviously one to bear in mind.
-- 
Joseph Wright

From mailing_list at arcor.de  Tue Feb 23 00:52:54 2010
From: mailing_list at arcor.de (Stephan Hennig)
Date: Tue, 23 Feb 2010 00:52:54 +0100
Subject: [luatex] get the hyphenation patterns matching a word
Message-ID: <4B8318D6.9080907@arcor.de>

Hi,

is there any way to get the hyphenation patterns matching a word handed 
on a silver platter by luatex?  Seeing callback hyphenate() and function 
lang.hyphenate() as the only related API parts, I assume the answer is no.

Background: I'm doing some simple hyphenation patterns statistics 
(matching patterns per word, matching words per pattern, etc.) to help 
searching for errors in patterns.  I already have my own implementation 
of the - traditional trie-based - hyphenation algorithm in Lua.  But I'd 
like to know if I could take advantage of luatex's built-in hyphenation 
machinery.

Regards,
Stephan Hennig

From taco at elvenkind.com  Tue Feb 23 08:42:32 2010
From: taco at elvenkind.com (Taco Hoekwater)
Date: Tue, 23 Feb 2010 08:42:32 +0100
Subject: [luatex] get the hyphenation patterns matching a word
In-Reply-To: <4B8318D6.9080907@arcor.de>
References: <4B8318D6.9080907@arcor.de>
Message-ID: <4B8386E8.4070503@elvenkind.com>

Stephan Hennig wrote:
> Hi,
> 
> is there any way to get the hyphenation patterns matching a word handed 
> on a silver platter by luatex?  Seeing callback hyphenate() and function 
> lang.hyphenate() as the only related API parts, I assume the answer is no.

No. The best luatex can do is give you all the patterns for a language
as a space-delimited string:

    <string> s = lang.patterns(<number> l)

but you will have to extract the ones that fit a particular word
yourself.

Best wishes,
Taco

From mailing_list at arcor.de  Tue Feb 23 14:08:44 2010
From: mailing_list at arcor.de (Stephan Hennig)
Date: Tue, 23 Feb 2010 14:08:44 +0100
Subject: [luatex] get the hyphenation patterns matching a word
In-Reply-To: <4B8386E8.4070503@elvenkind.com>
References: <4B8318D6.9080907@arcor.de> <4B8386E8.4070503@elvenkind.com>
Message-ID: <4B83D35C.4060005@arcor.de>

Taco Hoekwater schrieb:
> Stephan Hennig wrote:
>>
>> is there any way to get the hyphenation patterns matching a word 
>> handed on a silver platter by luatex?  Seeing callback hyphenate() and 
>> function lang.hyphenate() as the only related API parts, I assume the 
>> answer is no.
> 
> No.

Thanks for making this clear.


> The best luatex can do is give you all the patterns for a language
> as a space-delimited string:
> 
>    <string> s = lang.patterns(<number> l)

Are there any plans to replace libhnj by a pure Lua implementation?  As 
long as hyphenation is hard-coded in C, it remains a black box for the 
LuaTeX user.  As far as I understand it, there is no easy way to monitor 
the hyphenation process other than writing your own hyphenation module, 
messing with nodes, and hook that into the hyphenate() callback. :(


> but you will have to extract the ones that fit a particular word
> yourself.

That's what I'm doing, currently (outside luatex).

Best regards,
Stephan Hennig

From taco at elvenkind.com  Tue Feb 23 17:15:30 2010
From: taco at elvenkind.com (Taco Hoekwater)
Date: Tue, 23 Feb 2010 17:15:30 +0100
Subject: [luatex] get the hyphenation patterns matching a word
In-Reply-To: <4B83D35C.4060005@arcor.de>
References: <4B8318D6.9080907@arcor.de> <4B8386E8.4070503@elvenkind.com>
	<4B83D35C.4060005@arcor.de>
Message-ID: <4B83FF22.7000202@elvenkind.com>

Stephan Hennig wrote:
> 
> Are there any plans to replace libhnj by a pure Lua implementation?  As 
> long as hyphenation is hard-coded in C, it remains a black box for the 
> LuaTeX user. 

But it is a reasonably fast black box. :)

I am not eager to recode hyphen.c into lua, it uses a lot of C trickery.

Best wishes,
Taco

From mailing_list at arcor.de  Tue Feb 23 21:15:59 2010
From: mailing_list at arcor.de (Stephan Hennig)
Date: Tue, 23 Feb 2010 21:15:59 +0100
Subject: [luatex] get the hyphenation patterns matching a word
In-Reply-To: <4B83FF22.7000202@elvenkind.com>
References: <4B8318D6.9080907@arcor.de>
	<4B8386E8.4070503@elvenkind.com>	<4B83D35C.4060005@arcor.de>
	<4B83FF22.7000202@elvenkind.com>
Message-ID: <4B84377F.8050701@arcor.de>

Am 23.02.2010 17:15, schrieb Taco Hoekwater:
> Stephan Hennig wrote:
>>
>> Are there any plans to replace libhnj by a pure Lua implementation?  As
>> long as hyphenation is hard-coded in C, it remains a black box for the
>> LuaTeX user.
>
> But it is a reasonably fast black box. :)

Sure.  But I wonder what impact hyphenation has on runtime in comparison 
to paragraph breaking.


> I am not eager to recode hyphen.c into lua, it uses a lot of C trickery.

I can't judge if that trickery qualifies as dirty or ingenious 
programming. ;-)

I haven't found much about libhnj's finite state hash approach, so I 
have to ask here: Is that something else than an automaton that is the 
result of pre-calculating all states the /list/ of tries can ever take 
on for arbitrary (word) input?  What about the hashes?  Any pointers?

To me, it sound like Lua's tables are just made for automata (but who am 
I?).  I don't want to push you re-writing existing code.  Actually, I'm 
considering doing that myself (for various reasons)).  So, an honest 
question: Is there anything that makes implementing the finite state 
hash approach hard in Lua (other than performance)?

Best regards,
Stephan Hennig

From mailing_list at arcor.de  Wed Feb 24 01:00:02 2010
From: mailing_list at arcor.de (Stephan Hennig)
Date: Wed, 24 Feb 2010 01:00:02 +0100
Subject: [luatex] get the hyphenation patterns matching a word
In-Reply-To: <4B84377F.8050701@arcor.de>
References: <4B8318D6.9080907@arcor.de>	<4B8386E8.4070503@elvenkind.com>	<4B83D35C.4060005@arcor.de>	<4B83FF22.7000202@elvenkind.com>
	<4B84377F.8050701@arcor.de>
Message-ID: <4B846C02.6050004@arcor.de>

Am 23.02.2010 21:15, schrieb Stephan Hennig:

>So, an honest question:

Whatever an honest question might be, I meant to ask a serious question.

Best regards,
Stephan Hennig

From taco at elvenkind.com  Wed Feb 24 09:08:54 2010
From: taco at elvenkind.com (Taco Hoekwater)
Date: Wed, 24 Feb 2010 09:08:54 +0100
Subject: [luatex] get the hyphenation patterns matching a word
In-Reply-To: <4B84377F.8050701@arcor.de>
References: <4B8318D6.9080907@arcor.de>	<4B8386E8.4070503@elvenkind.com>	<4B83D35C.4060005@arcor.de>	<4B83FF22.7000202@elvenkind.com>
	<4B84377F.8050701@arcor.de>
Message-ID: <4B84DE96.7020502@elvenkind.com>

Stephan Hennig wrote:
> Am 23.02.2010 17:15, schrieb Taco Hoekwater:
>> Stephan Hennig wrote:
>>>
>>> Are there any plans to replace libhnj by a pure Lua implementation?  As
>>> long as hyphenation is hard-coded in C, it remains a black box for the
>>> LuaTeX user.
>>
>> But it is a reasonably fast black box. :)
> 
> Sure.  But I wonder what impact hyphenation has on runtime in comparison 
> to paragraph breaking.

Not a lot, that is true.

> I haven't found much about libhnj's finite state hash approach, so I 
> have to ask here: Is that something else than an automaton that is the 
> result of pre-calculating all states the /list/ of tries can ever take 
> on for arbitrary (word) input?

That's pretty much what it does, yes. There is a severe lack of
documentation, though. I recall seeing a set of slides explaining
the algorithm, but I can't find it on the web any more.

> To me, it sound like Lua's tables are just made for automata (but who am 
> I?).  I don't want to push you re-writing existing code.  Actually, I'm 
> considering doing that myself (for various reasons)).  So, an honest 
> question: Is there anything that makes implementing the finite state 
> hash approach hard in Lua (other than performance)?

No, it should be reasonably straightforward. Ok, as I have some time to
spare today, I'll have a go at it (I got stuck in metapost anyway, and
can use a bit of distraction).

Best wishes,
Taco

From elie.roux at telecom-bretagne.eu  Wed Feb 24 13:54:28 2010
From: elie.roux at telecom-bretagne.eu (=?UTF-8?Q?=C3=89lie_Roux?=)
Date: Wed, 24 Feb 2010 14:54:28 +0200
Subject: [luatex] LuaTeX and LuaLaTeX logos
Message-ID: <eba574421002240454x17cbd118s667e5d1a93980042@mail.gmail.com>

Hello,

While trying to get the \LuaTeX and \LuaLaTeX macros into the LaTeX
metalogo package, I tried to make the logos a bit more fancy but still
respecting the style of the LuaTeX manual. Here is my attempt. What do
you think about it? My personal favorites are proposal 3 for both.

Hans and Taco, what do you think about having this kind of logos into
metalogo (which would make them """official""" for LaTeX users)? If
you want to keep the LuaTeX logo quite normal, what about the LuaLaTeX
logo? Can it be a bit fancier like proposal 4?

Thank you in advance,
-- 
Elie
-------------- next part --------------
A non-text attachment was scrubbed...
Name: logos.tex
Type: application/x-tex
Size: 763 bytes
Desc: not available
URL: <http://tug.org/pipermail/luatex/attachments/20100224/b37845a9/attachment-0001.tex>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: logos.pdf
Type: application/pdf
Size: 21807 bytes
Desc: not available
URL: <http://tug.org/pipermail/luatex/attachments/20100224/b37845a9/attachment-0001.pdf>

From taco at elvenkind.com  Wed Feb 24 14:03:07 2010
From: taco at elvenkind.com (Taco Hoekwater)
Date: Wed, 24 Feb 2010 14:03:07 +0100
Subject: [luatex] LuaTeX and LuaLaTeX logos
In-Reply-To: <eba574421002240454x17cbd118s667e5d1a93980042@mail.gmail.com>
References: <eba574421002240454x17cbd118s667e5d1a93980042@mail.gmail.com>
Message-ID: <4B85238B.7040805@elvenkind.com>

?lie Roux wrote:
> Hello,
> 
> While trying to get the \LuaTeX and \LuaLaTeX macros into the LaTeX
> metalogo package, I tried to make the logos a bit more fancy but still
> respecting the style of the LuaTeX manual. Here is my attempt. What do
> you think about it? My personal favorites are proposal 3 for both.

You probably already know how I feel about this: proposal 1 is my
favorite.

Best wishes,
Taco

From ulrik.vieth at arcor.de  Wed Feb 24 15:14:45 2010
From: ulrik.vieth at arcor.de (ulrik.vieth at arcor.de)
Date: Wed, 24 Feb 2010 15:14:45 +0100 (CET)
Subject: [luatex] LuaTeX and LuaLaTeX logos
In-Reply-To: <4B85238B.7040805@elvenkind.com>
References: <4B85238B.7040805@elvenkind.com>
	<eba574421002240454x17cbd118s667e5d1a93980042@mail.gmail.com>
Message-ID: <19655742.1267020885135.JavaMail.ngmail@webmail11.arcor-online.net>

Why not give it to Arthur and let him fiddle out the the amount of spacing.
I recall, he even held a talk at BachoTeX about fine-tuning the logos,
so now we can make him the official logo expert. ;-)

Regards, Ulrik

----- Original Nachricht ----
Von:     Taco Hoekwater <taco at elvenkind.com>
An:      "General discussion of LuaTeX." <luatex at tug.org>
Datum:   24.02.2010 14:03
Betreff: Re: [luatex] LuaTeX and LuaLaTeX logos

> ?lie Roux wrote:
> > Hello,
> > 
> > While trying to get the \LuaTeX and \LuaLaTeX macros into the LaTeX
> > metalogo package, I tried to make the logos a bit more fancy but still
> > respecting the style of the LuaTeX manual. Here is my attempt. What do
> > you think about it? My personal favorites are proposal 3 for both.
> 
> You probably already know how I feel about this: proposal 1 is my
> favorite.
> 
> Best wishes,
> Taco
>


From elie.roux at telecom-bretagne.eu  Wed Feb 24 15:21:34 2010
From: elie.roux at telecom-bretagne.eu (=?UTF-8?Q?=C3=89lie_Roux?=)
Date: Wed, 24 Feb 2010 16:21:34 +0200
Subject: [luatex] LuaTeX and LuaLaTeX logos
In-Reply-To: <19655742.1267020885135.JavaMail.ngmail@webmail11.arcor-online.net>
References: <eba574421002240454x17cbd118s667e5d1a93980042@mail.gmail.com>
	<4B85238B.7040805@elvenkind.com>
	<19655742.1267020885135.JavaMail.ngmail@webmail11.arcor-online.net>
Message-ID: <eba574421002240621v3dac050w3dbf95d75364cd92@mail.gmail.com>

2010/2/24  <ulrik.vieth at arcor.de>:
>
> Why not give it to Arthur and let him fiddle out the the amount of spacing.
> I recall, he even held a talk at BachoTeX about fine-tuning the logos,
> so now we can make him the official logo expert. ;-)

In fact fine tuning depends on the font, I was just wondering if Taco
would allow such a thing or if he would prefer not to have any fine
tuning... Of course my tunings may not be optimal, but if we integrate
it into metalogo, fine tuning will be possible simply.

Thank you,
-- 
Elie

From reinhard.kotucha at web.de  Wed Feb 24 23:31:24 2010
From: reinhard.kotucha at web.de (Reinhard Kotucha)
Date: Wed, 24 Feb 2010 23:31:24 +0100
Subject: [luatex] LuaTeX and LuaLaTeX logos
In-Reply-To: <19655742.1267020885135.JavaMail.ngmail@webmail11.arcor-online.net>
References: <4B85238B.7040805@elvenkind.com>
	<eba574421002240454x17cbd118s667e5d1a93980042@mail.gmail.com>
	<19655742.1267020885135.JavaMail.ngmail@webmail11.arcor-online.net>
Message-ID: <19333.43196.858200.838858@zaphod.ms25.net>

On 24 February 2010 ulrik.vieth at arcor.de wrote:

 > Why not give it to Arthur and let him fiddle out the the amount of
 > spacing.  I recall, he even held a talk at BachoTeX about
 > fine-tuning the logos, so now we can make him the official logo
 > expert. ;-)

I don't think it's worthwhile to invest any time into such stupid
logos.  \TeX is not very problematic, but \LaTeX is a pain if typeset
with anything else but Computer Modern.

LuaTeX combines Lua and TeX, Lua has its own logo and it's wrong to
create a new one.  Thus, the only reasonable solution is:

 \def\LuaTeX{Lua\TeX}
 \def\LuaLaTeX{Lua\LaTeX}

Fine-tuning the logos dosn't make any sense at all unless they all
depend on a particular font.

I also think that Knuth introduced a few bad habits.  Using a logo in
continuous text is pure nonsense.  Suppose you are writing a book about
Lua.  Would you replace every occurrence of the word "Lua" by the Lua
logo?

What bothers me all the time is that every book about TeX/LaTeX wastes
a whole page in order to explain how to pronounce the word "TeX" properly.
A single sentence would suffice: "Knuth pronounces it 'Tek'".

Sorry, I regard TeX as a program, not as a religion.

Regards,
  Reinhard

-- 
----------------------------------------------------------------------------
Reinhard Kotucha			              Phone: +49-511-3373112
Marschnerstr. 25
D-30167 Hannover	                      mailto:reinhard.kotucha at web.de
----------------------------------------------------------------------------
Microsoft isn't the answer. Microsoft is the question, and the answer is NO.
----------------------------------------------------------------------------

From khaledhosny at eglug.org  Wed Feb 24 23:50:07 2010
From: khaledhosny at eglug.org (Khaled Hosny)
Date: Thu, 25 Feb 2010 00:50:07 +0200
Subject: [luatex] LuaTeX and LuaLaTeX logos
In-Reply-To: <19333.43196.858200.838858@zaphod.ms25.net>
References: <4B85238B.7040805@elvenkind.com>
	<eba574421002240454x17cbd118s667e5d1a93980042@mail.gmail.com>
	<19655742.1267020885135.JavaMail.ngmail@webmail11.arcor-online.net>
	<19333.43196.858200.838858@zaphod.ms25.net>
Message-ID: <20100224225007.GA26140@khaled-laptop>

On Wed, Feb 24, 2010 at 11:31:24PM +0100, Reinhard Kotucha wrote:
> Sorry, I regard TeX as a program, not as a religion.

Me too, but still I very fond of TeX logo, simply because it shows how
flexible TeX is; no other system that I know of (including DTP crap)
gives you enough control over glyph positioning to recreate TeX logo.

As a hacker (or pretending to be), I find TeX logo a clever hack that
really amuses me.

Regards,
 Khaled

-- 
 Khaled Hosny
 Arabic localiser and member of Arabeyes.org team
 Free font developer

From arthur.reutenauer at normalesup.org  Thu Feb 25 00:36:38 2010
From: arthur.reutenauer at normalesup.org (Arthur Reutenauer)
Date: Thu, 25 Feb 2010 00:36:38 +0100
Subject: [luatex] LuaTeX and LuaLaTeX logos
In-Reply-To: <19333.43196.858200.838858@zaphod.ms25.net>
References: <4B85238B.7040805@elvenkind.com>
	<eba574421002240454x17cbd118s667e5d1a93980042@mail.gmail.com>
	<19655742.1267020885135.JavaMail.ngmail@webmail11.arcor-online.net>
	<19333.43196.858200.838858@zaphod.ms25.net>
Message-ID: <20100224233637.GB8083@phare.normalesup.org>

> Sorry, I regard TeX as a program, not as a religion.

  That's what you think, but we will make you convert :-)

	Arthur

From Robin.Fairbairns at cl.cam.ac.uk  Thu Feb 25 01:01:43 2010
From: Robin.Fairbairns at cl.cam.ac.uk (Robin Fairbairns)
Date: Thu, 25 Feb 2010 00:01:43 +0000
Subject: [luatex] LuaTeX and LuaLaTeX logos
In-Reply-To: Your message of Wed, 24 Feb 2010 23:31:24 +0100.
	<19333.43196.858200.838858@zaphod.ms25.net>
Message-ID: <30205.1267056103@cl.cam.ac.uk>

Reinhard Kotucha <reinhard.kotucha at web.de> wrote:

> I don't think it's worthwhile to invest any time into such stupid
> logos.  \TeX is not very problematic, but \LaTeX is a pain if typeset
> with anything else but Computer Modern.
> 
> LuaTeX combines Lua and TeX, Lua has its own logo and it's wrong to
> create a new one.  Thus, the only reasonable solution is:
> 
>  \def\LuaTeX{Lua\TeX}
>  \def\LuaLaTeX{Lua\LaTeX}
> 
> Fine-tuning the logos dosn't make any sense at all unless they all
> depend on a particular font.
> 
> I also think that Knuth introduced a few bad habits.  Using a logo in
> continuous text is pure nonsense.  Suppose you are writing a book about
> Lua.  Would you replace every occurrence of the word "Lua" by the Lua
> logo?

which is why i just don't -- i usually don't even bother with silly
capitalisation except in the faq.

> What bothers me all the time is that every book about TeX/LaTeX wastes
> a whole page in order to explain how to pronounce the word "TeX" properly.
> A single sentence would suffice: "Knuth pronounces it 'Tek'".

not quite.  and i believe those of us with a penchant for this sort of
thing should be allowed to discuss the nuances of how various people
pronounce the word.  (i sometimes wonder if i would have got on better
in the world if i had stayed with linguistics, my first job having been
as a programmer in that area.)

> Sorry, I regard TeX as a program, not as a religion.

there are probably those who would consider that heresy.  ;-)

robin

From t34www at googlemail.com  Thu Feb 25 01:31:30 2010
From: t34www at googlemail.com (T T)
Date: Thu, 25 Feb 2010 00:31:30 +0000
Subject: [luatex] LuaTeX and LuaLaTeX logos
In-Reply-To: <20100224225007.GA26140@khaled-laptop>
References: <4B85238B.7040805@elvenkind.com>
	<eba574421002240454x17cbd118s667e5d1a93980042@mail.gmail.com>
	<19655742.1267020885135.JavaMail.ngmail@webmail11.arcor-online.net>
	<19333.43196.858200.838858@zaphod.ms25.net>
	<20100224225007.GA26140@khaled-laptop>
Message-ID: <e7fba2611002241631p17a0fb47k4496980ca1d4a44a@mail.gmail.com>

On 24 February 2010 22:50, Khaled Hosny <khaledhosny at eglug.org> wrote:
>
> Me too, but still I very fond of TeX logo, simply because it shows how
> flexible TeX is; no other system that I know of (including DTP crap)
> gives you enough control over glyph positioning to recreate TeX logo.

You underestimate the power of M$ Word :-)

http://groups.google.com/group/comp.text/msg/c5cea451e98ea7ea

Yours truly,

T3X Mythbuster

From mpg at elzevir.fr  Thu Feb 25 02:04:25 2010
From: mpg at elzevir.fr (=?ISO-8859-1?Q?Manuel_P=E9gouri=E9-Gonnard?=)
Date: Thu, 25 Feb 2010 02:04:25 +0100
Subject: [luatex] LuaTeX and LuaLaTeX logos
In-Reply-To: <e7fba2611002241631p17a0fb47k4496980ca1d4a44a@mail.gmail.com>
References: <4B85238B.7040805@elvenkind.com>	<eba574421002240454x17cbd118s667e5d1a93980042@mail.gmail.com>	<19655742.1267020885135.JavaMail.ngmail@webmail11.arcor-online.net>	<19333.43196.858200.838858@zaphod.ms25.net>	<20100224225007.GA26140@khaled-laptop>
	<e7fba2611002241631p17a0fb47k4496980ca1d4a44a@mail.gmail.com>
Message-ID: <4B85CC99.8060805@elzevir.fr>

T T a ?crit :
> On 24 February 2010 22:50, Khaled Hosny <khaledhosny at eglug.org> wrote:
>> Me too, but still I very fond of TeX logo, simply because it shows how
>> flexible TeX is; no other system that I know of (including DTP crap)
>> gives you enough control over glyph positioning to recreate TeX logo.
> 
> You underestimate the power of M$ Word :-)
> 
> http://groups.google.com/group/comp.text/msg/c5cea451e98ea7ea
> 
Nice one. (But with Ooffice it doesn't render quite exactly as the LaTeX logo.)

While we're at it, in the French version of Sedgewick's book on algorithms, the
preface (taken from the English edition) mentions the book was typeset with TeX
(which is false for the French version). They tried to do something with the TeX
logo, but it merely looks like T\textsubscript{E}X (in LaTeX2e+fixltx2e), with a
smaller E and no kerning. They really should have kept plain "TeX".

(Besides, the  book is poorly typeset in many aspects, I really regret I didn't
purchase the English version instead.)

Manuel.

From reinhard.kotucha at web.de  Thu Feb 25 02:26:36 2010
From: reinhard.kotucha at web.de (Reinhard Kotucha)
Date: Thu, 25 Feb 2010 02:26:36 +0100
Subject: [luatex] LuaTeX and LuaLaTeX logos
In-Reply-To: <20100224233637.GB8083@phare.normalesup.org>
References: <4B85238B.7040805@elvenkind.com>
	<eba574421002240454x17cbd118s667e5d1a93980042@mail.gmail.com>
	<19655742.1267020885135.JavaMail.ngmail@webmail11.arcor-online.net>
	<19333.43196.858200.838858@zaphod.ms25.net>
	<20100224233637.GB8083@phare.normalesup.org>
Message-ID: <19333.53708.565249.73954@zaphod.ms25.net>

On 25 February 2010 Arthur Reutenauer wrote:

 > > Sorry, I regard TeX as a program, not as a religion.
 > 
 >   That's what you think, but we will make you convert :-)

I fear that at the bonfire in Bachotek everything can happen...

Regards,
  Reinhard

-- 
----------------------------------------------------------------------------
Reinhard Kotucha			              Phone: +49-511-3373112
Marschnerstr. 25
D-30167 Hannover	                      mailto:reinhard.kotucha at web.de
----------------------------------------------------------------------------
Microsoft isn't the answer. Microsoft is the question, and the answer is NO.
----------------------------------------------------------------------------

From t34www at googlemail.com  Thu Feb 25 09:00:40 2010
From: t34www at googlemail.com (T T)
Date: Thu, 25 Feb 2010 08:00:40 +0000
Subject: [luatex] LuaTeX and LuaLaTeX logos
In-Reply-To: <4B85CC99.8060805@elzevir.fr>
References: <4B85238B.7040805@elvenkind.com>
	<eba574421002240454x17cbd118s667e5d1a93980042@mail.gmail.com>
	<19655742.1267020885135.JavaMail.ngmail@webmail11.arcor-online.net>
	<19333.43196.858200.838858@zaphod.ms25.net>
	<20100224225007.GA26140@khaled-laptop>
	<e7fba2611002241631p17a0fb47k4496980ca1d4a44a@mail.gmail.com>
	<4B85CC99.8060805@elzevir.fr>
Message-ID: <e7fba2611002250000h13ef8fe5q9b21375ea1a8e4ff@mail.gmail.com>

On 25 February 2010 01:04, Manuel P?gouri?-Gonnard <mpg at elzevir.fr> wrote:
> T T a ?crit :
>> On 24 February 2010 22:50, Khaled Hosny <khaledhosny at eglug.org> wrote:
>>> Me too, but still I very fond of TeX logo, simply because it shows how
>>> flexible TeX is; no other system that I know of (including DTP crap)
>>> gives you enough control over glyph positioning to recreate TeX logo.
>>
>> You underestimate the power of M$ Word :-)
>>
>> http://groups.google.com/group/comp.text/msg/c5cea451e98ea7ea
>>
> Nice one. (But with Ooffice it doesn't render quite exactly as the LaTeX logo.)

Do you mean that kerning is not exactly the same as in LaTeX logo? Or
maybe you didn't copy from the original message (google groups often
mangles source text). Attached original file and screenshot from Word.
I looks close enough to LaTeX, IMO.

Cheers,

Tomek
-------------- next part --------------
A non-text attachment was scrubbed...
Name: LaTeX-logo.rtf
Type: application/rtf
Size: 259 bytes
Desc: not available
URL: <http://tug.org/pipermail/luatex/attachments/20100225/4267537d/attachment-0001.rtf>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: LaTeX-logo.png
Type: image/png
Size: 41933 bytes
Desc: not available
URL: <http://tug.org/pipermail/luatex/attachments/20100225/4267537d/attachment-0001.png>

From mpg at elzevir.fr  Thu Feb 25 13:00:27 2010
From: mpg at elzevir.fr (=?ISO-8859-1?Q?Manuel_P=E9gouri=E9-Gonnard?=)
Date: Thu, 25 Feb 2010 13:00:27 +0100
Subject: [luatex] LuaTeX and LuaLaTeX logos
In-Reply-To: <e7fba2611002250000h13ef8fe5q9b21375ea1a8e4ff@mail.gmail.com>
References: <4B85238B.7040805@elvenkind.com>	<eba574421002240454x17cbd118s667e5d1a93980042@mail.gmail.com>	<19655742.1267020885135.JavaMail.ngmail@webmail11.arcor-online.net>	<19333.43196.858200.838858@zaphod.ms25.net>	<20100224225007.GA26140@khaled-laptop>	<e7fba2611002241631p17a0fb47k4496980ca1d4a44a@mail.gmail.com>	<4B85CC99.8060805@elzevir.fr>
	<e7fba2611002250000h13ef8fe5q9b21375ea1a8e4ff@mail.gmail.com>
Message-ID: <4B86665B.9080208@elzevir.fr>

T T a ?crit :
> On 25 February 2010 01:04, Manuel P?gouri?-Gonnard <mpg at elzevir.fr> wrote:
>> T T a ?crit :
>>> On 24 February 2010 22:50, Khaled Hosny <khaledhosny at eglug.org> wrote:
>>>> Me too, but still I very fond of TeX logo, simply because it shows how
>>>> flexible TeX is; no other system that I know of (including DTP crap)
>>>> gives you enough control over glyph positioning to recreate TeX logo.
>>> You underestimate the power of M$ Word :-)
>>>
>>> http://groups.google.com/group/comp.text/msg/c5cea451e98ea7ea
>>>
>> Nice one. (But with Ooffice it doesn't render quite exactly as the LaTeX logo.)
> 
> Do you mean that kerning is not exactly the same as in LaTeX logo? Or
> maybe you didn't copy from the original message (google groups often
> mangles source text).

The horizontal kerning is ok, but the letters aren't moved vertically. I assume
it is some sort of bug/limitation of OpenOffice.

> Attached original file and screenshot from Word.
> I looks close enough to LaTeX, IMO.
> 
Yes, it's quite impressive :-)

Manuel.

From mailing_list at arcor.de  Thu Feb 25 15:09:53 2010
From: mailing_list at arcor.de (Stephan Hennig)
Date: Thu, 25 Feb 2010 15:09:53 +0100
Subject: [luatex] LuaTeX and LuaLaTeX logos
In-Reply-To: <4B85CC99.8060805@elzevir.fr>
References: <4B85238B.7040805@elvenkind.com>	<eba574421002240454x17cbd118s667e5d1a93980042@mail.gmail.com>	<19655742.1267020885135.JavaMail.ngmail@webmail11.arcor-online.net>	<19333.43196.858200.838858@zaphod.ms25.net>	<20100224225007.GA26140@khaled-laptop>	<e7fba2611002241631p17a0fb47k4496980ca1d4a44a@mail.gmail.com>
	<4B85CC99.8060805@elzevir.fr>
Message-ID: <4B8684B1.2030802@arcor.de>

Am 25.02.2010 02:04, schrieb Manuel P?gouri?-Gonnard:

> While we're at it, in the French version of Sedgewick's book on algorithms, the
> preface (taken from the English edition) mentions the book was typeset with TeX
> (which is false for the French version). They tried to do something with the TeX
> logo, but it merely looks like T\textsubscript{E}X (in LaTeX2e+fixltx2e), with a
> smaller E and no kerning. They really should have kept plain "TeX".

I have this one to offer (Ahuja et al., Network Flows, 1993):
<URL:http://home.arcor.de/stephanhennig/Downloads/texlogo.pdf> 235kB

Here's another related thread from c.t.t
<http://groups.google.com/group/comp.text.tex/msg/2c5a0904ef1bdfb3>

Best regards,
Stephan Hennig

From patrick at gundla.ch  Thu Feb 25 20:32:56 2010
From: patrick at gundla.ch (Patrick Gundlach)
Date: Thu, 25 Feb 2010 20:32:56 +0100
Subject: [luatex] again: breaking paragraphs into lines from lua
Message-ID: <B278B3B0-AA14-448D-8B66-E7368E94FFCC@gundla.ch>

Hi,

some time ago I asked if

\vbox{Hello world!}

could be done in Lua mode (inside \directlua{...}). I have learned that with node.hpack() it is possible to create an \hbox{}. There is no node.vpack() mentioned in the reference manual. Does node.vpack() exist? If yes: how can it be used?

As I understand Taco, the \vbox{...} thing can be done from Lua. But I still wonder how? Can I create a nodelist, invoke the line breaking algorithm and get back a vlist?

Patrick



