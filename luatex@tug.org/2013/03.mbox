From taco at elvenkind.com  Fri Mar  1 14:54:50 2013
From: taco at elvenkind.com (Taco Hoekwater)
Date: Fri, 1 Mar 2013 14:54:50 +0100
Subject: [luatex] Luatex 0.75.0 announcement
Message-ID: <5130B32A.4020600@elvenkind.com>

Hi,

I have just uploaded the archives for a new luatex release, 0.75.0.

Most noticeable changes:

* New expandable primitive \Uchar.

* Metapost 1.790.

* New version of lnodelib.c with speedups by Hans and Luigi.
   Also added some extra sanity checks to the Lua node field
   setting functions.

* Support 'umath' in tex.extraprimitives(), so that formats can
   make the \Umath* primitives unprefixed, now that they will be
   provided by XeTeX as well.

* Removed a bunch of deprecated primitives
   * \AlephVersion, \Alephrevision, \Alephversion, \Alephminorversion
   * \OmegaVersion, \Omegarevision, \Omegaversion, \Omegaminorversion
   * \omathcode, \odelcode, \omathchardef, \omathchar, \omathaccent,
     \odelimiter, \oradical
   * \Umathbotaccent, \Umathaccents

* Fix large file support.

* Fix Lua's loadfile().

* Removed the cidmap callbacks again (let that be done by user lua
   code after the fact).

* Removed the fatal error on fonts where num_glyphs is too high,
   as that problem is actually harmless.

* Some compilation issues under Win32 and Solaris resolved.
   NOTE: You still need an 'installed' pkg-config while building
   luatex. Either install pkg-config for your platform, or make
   sure there is a binary linking to /bin/true while configuring.
   The requirement is for the executable 'pkg-config' itself, not
   for any particular package.

* Allow math extender objects to be zero width.

* The 'epdf' library has been extended to deal with finding and
   saving embedded files (catalog:numEmbeddedFiles() and catalog:
   embeddedFile, new EmbFile object).


The archives can be downloaded from supelec as usual:

         https://foundry.supelec.fr/projects/luatex/

You could also check out the sources via anonymous svn:

   svn co --username anonsvn --password anonsvn              \
       https://foundry.supelec.fr/svn/luatex/tags/beta-0.75.0

Bugs and feature requests can be added to the issue tracker at

        http://tracker.luatex.org

Have fun,
Taco

From luigi.scarso at gmail.com  Fri Mar  1 17:15:15 2013
From: luigi.scarso at gmail.com (luigi scarso)
Date: Fri, 1 Mar 2013 17:15:15 +0100
Subject: [luatex] Luajittex 0.75.0 announcement
Message-ID: <CAG5iGsDQf-Uhe2bA8ZzVP88cn0gAt5gNMgZnjf1HSccuPuw+Mw@mail.gmail.com>

New beta release of luajittex.
It's in sync with luatex beta 0.75.0, plus Luajit 2.0.1


The project is hosted as usual at
https://foundry.supelec.fr/projects/luajittex/

A Tracker for bugs/features and a mailing list for commits are enabled.



--
luigi

From mailing_list at arcor.de  Fri Mar  1 18:33:28 2013
From: mailing_list at arcor.de (Stephan Hennig)
Date: Fri, 1 Mar 2013 18:33:28 +0100
Subject: [luatex] Luatex 0.75.0 announcement
In-Reply-To: <5130B32A.4020600@elvenkind.com>
References: <5130B32A.4020600@elvenkind.com>
Message-ID: <5130E668.8030209@arcor.de>

Am 01.03.2013 14:54, schrieb Taco Hoekwater:

> I have just uploaded the archives for a new luatex release, 0.75.0.
> 
> Most noticeable changes:

There are some patches by Akira the TL repository that result in a
significant speed-up when using piped input (io.popen) on Windows.
Please sync with the TL repository before releasing LuaTeX for TL2013.

Best regards,
Stephan Hennig


From mico.loretan at mac.com  Fri Mar  1 21:06:57 2013
From: mico.loretan at mac.com (Mico Loretan)
Date: Fri, 1 Mar 2013 15:06:57 -0500
Subject: [luatex] when will LuaTeX provide string functions that supersede
 those of the slnunicode library?
Message-ID: <D3CBFA61-E314-4F18-992E-11EC04008F5F@mac.com>

On p. 32 of the LuaTeX reference manual (version 0.75), there's the following enticing statement:

> The slnunicode library [of Unicode-aware string manipulation functions] will be replaced by an 
> internal Unicode library in a future LuaTeX version. 

Is it possible to be a bit more specific as to when this library might become available? :-)

Sincerely,

Mico



From Arno.Trautmann at gmx.de  Sun Mar  3 14:17:48 2013
From: Arno.Trautmann at gmx.de (Arno Trautmann)
Date: Sun, 3 Mar 2013 14:17:48 +0100
Subject: [luatex] Luajittex 0.75.0 announcement
In-Reply-To: <CAG5iGsDQf-Uhe2bA8ZzVP88cn0gAt5gNMgZnjf1HSccuPuw+Mw@mail.gmail.com>
References: <CAG5iGsDQf-Uhe2bA8ZzVP88cn0gAt5gNMgZnjf1HSccuPuw+Mw@mail.gmail.com>
Message-ID: <51334D7C.90604@gmx.de>

Hi all,

luigi scarso wrote:
> New beta release of luajittex.
> It's in sync with luatex beta 0.75.0, plus Luajit 2.0.1

Luigi, would you consider putting luajittex into TL Contrib? I'm not 
sure how you distribute luajittex (code only, binaries, formats?), 
especially since:

> The project is hosted as usual at
> https://foundry.supelec.fr/projects/luajittex/

I cannot find any files there: Clicking on ?files? gives me:
?There are no file packages defined for this project.?

What am I doing wrong?

cheers
Arno

From homerow at lavabit.com  Sun Mar  3 14:26:46 2013
From: homerow at lavabit.com (Marco Patzer)
Date: Sun, 3 Mar 2013 14:26:46 +0100
Subject: [luatex] Luajittex 0.75.0 announcement
In-Reply-To: <51334D7C.90604@gmx.de>
References: <CAG5iGsDQf-Uhe2bA8ZzVP88cn0gAt5gNMgZnjf1HSccuPuw+Mw@mail.gmail.com>
 <51334D7C.90604@gmx.de>
Message-ID: <20130303132646.GK29684@homerow>

On 2013?03?03 Arno Trautmann wrote:

> >The project is hosted as usual at
> >https://foundry.supelec.fr/projects/luajittex/
> 
> I cannot find any files there: Clicking on ?files? gives me:
> ?There are no file packages defined for this project.?
> 
> What am I doing wrong?

The supelec pages are not very intuitive and misleading, I totally
agree.

The source code can be obtained with SVN:

  svn co http://foundry.supelec.fr/svn/luajittex/trunk

The binaries can be found on http://svn.contextgarden.net/suite-bin/tex/

Marco
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 490 bytes
Desc: Digital signature
URL: <http://tug.org/pipermail/luatex/attachments/20130303/52a02006/attachment.bin>

From Arno.Trautmann at gmx.de  Sun Mar  3 14:32:36 2013
From: Arno.Trautmann at gmx.de (Arno Trautmann)
Date: Sun, 3 Mar 2013 14:32:36 +0100
Subject: [luatex] Luajittex 0.75.0 announcement
In-Reply-To: <20130303132646.GK29684@homerow>
References: <CAG5iGsDQf-Uhe2bA8ZzVP88cn0gAt5gNMgZnjf1HSccuPuw+Mw@mail.gmail.com>
 <51334D7C.90604@gmx.de> <20130303132646.GK29684@homerow>
Message-ID: <513350F4.4070603@gmx.de>

Marco Patzer wrote:
> On 2013?03?03 Arno Trautmann wrote:
>
>>> The project is hosted as usual at
>>> https://foundry.supelec.fr/projects/luajittex/
>>
>> I cannot find any files there: Clicking on ?files? gives me:
>> ?There are no file packages defined for this project.?
>>
>> What am I doing wrong?
>
> The supelec pages are not very intuitive and misleading, I totally
> agree.
>
> The source code can be obtained with SVN:
>
>    svn co http://foundry.supelec.fr/svn/luajittex/trunk
>
> The binaries can be found on http://svn.contextgarden.net/suite-bin/tex/

Thanks, that will help me :)

cheers
Arno,

seemingly the first one trying to try out luajittex with LaTeX? ?

From Arno.Trautmann at gmx.de  Sun Mar  3 16:59:10 2013
From: Arno.Trautmann at gmx.de (Arno Trautmann)
Date: Sun, 3 Mar 2013 16:59:10 +0100
Subject: [luatex] Luajittex 0.75.0 announcement
In-Reply-To: <513350F4.4070603@gmx.de>
References: <CAG5iGsDQf-Uhe2bA8ZzVP88cn0gAt5gNMgZnjf1HSccuPuw+Mw@mail.gmail.com>
 <51334D7C.90604@gmx.de> <20130303132646.GK29684@homerow>
 <513350F4.4070603@gmx.de>
Message-ID: <5133734E.3080107@gmx.de>

Arno Trautmann wrote:
> Marco Patzer wrote:
>> On 2013?03?03 Arno Trautmann wrote:
>>
>>>> The project is hosted as usual at
>>>> https://foundry.supelec.fr/projects/luajittex/
>>>
>>> I cannot find any files there: Clicking on ?files? gives me:
>>> ?There are no file packages defined for this project.?
>>>
>>> What am I doing wrong?
>>
>> The supelec pages are not very intuitive and misleading, I totally
>> agree.
>>
>> The source code can be obtained with SVN:
>>
>>    svn co http://foundry.supelec.fr/svn/luajittex/trunk
>>
>> The binaries can be found on http://svn.contextgarden.net/suite-bin/tex/
>
> Thanks, that will help me :)

It certainly helped and I got it working, thank you!
However, in the binaries link I only found 0.72, not 0.75 ? I guess they 
are not already updated?

Now, I'd like to test luajittex with latex, and a minimal examples works 
fine. But trying to load some non-trivial packages fails with an error:

invalid escape sequence near '"

When loading babel, I get:

! LuaTeX error [string "\directlua "]:1: invalid escape sequence near '"'.
\adddialect ...alect("\string #1", "\string #2") }
                                                   \fi \fi \wlog 
{\string #1 ...
l.103   \adddialect\l at canadian\l at american

? x

And loading fontspec results in:

! LuaTeX error 
...e2012/texmf-dist/tex/luatex/luaotfload/otfl-luat-dum.lua:65:
invalid escape sequence near '"'
stack traceback:
	[C]: in function 'dofile'
	...live2012/texmf-dist/tex/luatex/luaotfload/luaotfload.lua:46: in 
function 'l
oadmodule'
	...live2012/texmf-dist/tex/luatex/luaotfload/luaotfload.lua:51: in main 
chunk
	[C]: in function 'require'
	...exlive2012/texmf-dist/tex/luatex/luatexbase/modutils.lua:52: in 
function 'r
equire_module'
	[string "\directlua "]:1: in main chunk.
\lltxb at requirelua ...xluaescapestring {#2}" \fi )}

l.35 \endinput

I invoke luajittex by calling

luajittex --fmt=lualatex --jiton test.tex

I did not rebuild the format with luajittex ? is this a problem? I 
googled fr the ?invalid escape sequence? and found some google entries 
on mailing lists, but clicking on them, I did not find the corresponding 
messages ?

So ? is this a trivial error made by me or is anything broken?

cheers
Arno

From homerow at lavabit.com  Sun Mar  3 17:25:12 2013
From: homerow at lavabit.com (Marco Patzer)
Date: Sun, 3 Mar 2013 17:25:12 +0100
Subject: [luatex] Luajittex 0.75.0 announcement
In-Reply-To: <5133734E.3080107@gmx.de>
References: <CAG5iGsDQf-Uhe2bA8ZzVP88cn0gAt5gNMgZnjf1HSccuPuw+Mw@mail.gmail.com>
 <51334D7C.90604@gmx.de> <20130303132646.GK29684@homerow>
 <513350F4.4070603@gmx.de> <5133734E.3080107@gmx.de>
Message-ID: <20130303162512.GL29684@homerow>

On 2013?03?03 Arno Trautmann wrote:

> It certainly helped and I got it working, thank you!
> However, in the binaries link I only found 0.72, not 0.75 ? I guess
> they are not already updated?

I uploaded the solaris-i386 binary two days ago and it is on version
0.75. I tried the linux binary and indeed, it's still version 0.72.
Maybe the builders for the other platforms missed the announcement
or are struggling with failing builds.

> I did not rebuild the format with luajittex ? is this a problem?

I have no idea, I always rebuilt the format, when I change or update
the engine. You can find out, just generate a new format, try the
failing code and see if the error remains :)


Marco
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 490 bytes
Desc: Digital signature
URL: <http://tug.org/pipermail/luatex/attachments/20130303/d9906601/attachment.bin>

From Arno.Trautmann at gmx.de  Sun Mar  3 17:44:08 2013
From: Arno.Trautmann at gmx.de (Arno Trautmann)
Date: Sun, 3 Mar 2013 17:44:08 +0100
Subject: [luatex] Luajittex 0.75.0 announcement
In-Reply-To: <20130303162512.GL29684@homerow>
References: <CAG5iGsDQf-Uhe2bA8ZzVP88cn0gAt5gNMgZnjf1HSccuPuw+Mw@mail.gmail.com>
 <51334D7C.90604@gmx.de> <20130303132646.GK29684@homerow>
 <513350F4.4070603@gmx.de> <5133734E.3080107@gmx.de>
 <20130303162512.GL29684@homerow>
Message-ID: <51337DD8.3020701@gmx.de>

Marco Patzer wrote:
> On 2013?03?03 Arno Trautmann wrote:
>> I did not rebuild the format with luajittex ? is this a problem?
>
> I have no idea, I always rebuilt the format, when I change or update
> the engine. You can find out, just generate a new format, try the
> failing code and see if the error remains :)

I rebuilt it and it produces the same error. Plus, loading the format 
needs about 2 seconds. (I mean, after calling

luajittex --fmt=luajitlatex.fmt test.tex

I get

This is LuajitTeX, Version beta-0.72.0-2013010315
  restricted \write18 enabled.

than nothing happens for 2 seconds, then it goes on with

(./test.tex

etc. I produced the format by just copying the lualatex.ini and renaming 
it into luajitlatex.ini, than executing

luajittex --ini --jiton luajitlatex.ini

Do I miss an important point somewhere? When i build a plain format by 
copying/renaming luatex.ini, I do not get this delay of 2s. So, 
something with the lualatex format does not fit with luajittex? ?

cheers
Arno

From taco at elvenkind.com  Mon Mar  4 09:18:30 2013
From: taco at elvenkind.com (Taco Hoekwater)
Date: Mon, 4 Mar 2013 09:18:30 +0100
Subject: [luatex] Luatex 0.75.0 announcement
In-Reply-To: <5130E668.8030209@arcor.de>
References: <5130B32A.4020600@elvenkind.com> <5130E668.8030209@arcor.de>
Message-ID: <1DF5F6CD-59CB-4EFA-AE20-D0CDE53C1D9B@elvenkind.com>


On Mar 1, 2013, at 6:33 PM, Stephan Hennig <mailing_list at arcor.de> wrote:

> Am 01.03.2013 14:54, schrieb Taco Hoekwater:
> 
>> I have just uploaded the archives for a new luatex release, 0.75.0.
>> 
>> Most noticeable changes:
> 
> There are some patches by Akira the TL repository that result in a
> significant speed-up when using piped input (io.popen) on Windows.
> Please sync with the TL repository before releasing LuaTeX for TL2013.

Always do ;)

Best wishes,
Taco

From luigi.scarso at gmail.com  Mon Mar  4 09:49:44 2013
From: luigi.scarso at gmail.com (luigi scarso)
Date: Mon, 4 Mar 2013 09:49:44 +0100
Subject: [luatex] Luajittex 0.75.0 announcement
In-Reply-To: <51337DD8.3020701@gmx.de>
References: <CAG5iGsDQf-Uhe2bA8ZzVP88cn0gAt5gNMgZnjf1HSccuPuw+Mw@mail.gmail.com>
 <51334D7C.90604@gmx.de> <20130303132646.GK29684@homerow>
 <513350F4.4070603@gmx.de> <5133734E.3080107@gmx.de>
 <20130303162512.GL29684@homerow> <51337DD8.3020701@gmx.de>
Message-ID: <CAG5iGsDz6JnhrH2N8JY=_3nT1b0SfNG+BU-u0wr_88tPSpkvOw@mail.gmail.com>

On Sun, Mar 3, 2013 at 5:44 PM, Arno Trautmann <Arno.Trautmann at gmx.de> wrote:
> Marco Patzer wrote:
>>
>> On 2013?03?03 Arno Trautmann wrote:
>>>
>>> I did not rebuild the format with luajittex ? is this a problem?
>>
>>
>> I have no idea, I always rebuilt the format, when I change or update
>> the engine. You can find out, just generate a new format, try the
>> failing code and see if the error remains :)
>
>
> I rebuilt it and it produces the same error. Plus, loading the format needs
> about 2 seconds. (I mean, after calling
>
> luajittex --fmt=luajitlatex.fmt test.tex
>
> I get
>
> This is LuajitTeX, Version beta-0.72.0-2013010315
>  restricted \write18 enabled.
>
> than nothing happens for 2 seconds, then it goes on with
>
> (./test.tex
>
> etc. I produced the format by just copying the lualatex.ini and renaming it
> into luajitlatex.ini, than executing
>
> luajittex --ini --jiton luajitlatex.ini
>
> Do I miss an important point somewhere? When i build a plain format by
> copying/renaming luatex.ini, I do not get this delay of 2s. So, something
> with the lualatex format does not fit with luajittex? ?
>
> cheers
> Arno
I'm not a LaTeX user, but if I rename lualatex.ini in luajitlatex.ini
I have that the cslatex files are used instead of latex
(see the logs) .


-- 
luigi


From luigi.scarso at gmail.com  Mon Mar  4 11:10:51 2013
From: luigi.scarso at gmail.com (luigi scarso)
Date: Mon, 4 Mar 2013 11:10:51 +0100
Subject: [luatex] Luajittex 0.75.0 announcement
In-Reply-To: <51334D7C.90604@gmx.de>
References: <CAG5iGsDQf-Uhe2bA8ZzVP88cn0gAt5gNMgZnjf1HSccuPuw+Mw@mail.gmail.com>
 <51334D7C.90604@gmx.de>
Message-ID: <CAG5iGsBLTNL+zb9K+DVgt49nVa=x8EUMRFcryWQQsWUvsSOz6g@mail.gmail.com>

On Sun, Mar 3, 2013 at 2:17 PM, Arno Trautmann <Arno.Trautmann at gmx.de> wrote:
> Hi all,
>
>
> luigi scarso wrote:
>>
>> New beta release of luajittex.
>> It's in sync with luatex beta 0.75.0, plus Luajit 2.0.1
>
>
> Luigi, would you consider putting luajittex into TL Contrib? I'm not sure
> how you distribute luajittex (code only, binaries, formats?), especially
> since:
>
>
>> The project is hosted as usual at
>> https://foundry.supelec.fr/projects/luajittex/
>
>
> I cannot find any files there: Clicking on ?files? gives me:
> ?There are no file packages defined for this project.?
>
> What am I doing wrong?
>
> cheers
> Arno
luajittex would be "almost the same as luatex, apart an average
20%--40% gain in speed ". The problem is that luajit is (still?)
based on Lua 5.1, and luatex is now based on Lua 5.2. luajittex is
compiled with a Lua 5.2 compatible switch on, but I'm not sure that
this can solve all the problems. Also luajit wants a recent gcc, and
is not compilable for all the platforms of the texlive.
Luajit is still in its infancy and needs tests. We have spent quite
some time on ConTeXt mkiv (which probably has the large codebase in
Lua), and we have observed for example that the compiler has its own
influence on luajittex, so for now the choice is to provide only the
sources by svn plus some scripts for the gcc, clang and i586-mingwmscv
 compilers.
The W32TeX project at  http://www.w32tex.org/ or its mirror
at http://ctan.ijs.si has an update version of luajittex for windows
compiled with the MS compiler
(see http://ctan.ijs.si/mirror/w32tex/current/ChangeLog)
Others binaries are managed by Mojca and the builder team at
http://svn.contextgarden.net/suite-bin/tex/

Of course I cannot exclude that in the future I will put some binaries
at TLContrib, but it's not an immediate goal.
--
luigi


From mojca.miklavec.lists at gmail.com  Mon Mar  4 11:15:13 2013
From: mojca.miklavec.lists at gmail.com (Mojca Miklavec)
Date: Mon, 4 Mar 2013 11:15:13 +0100
Subject: [luatex] Luajittex 0.75.0 announcement
In-Reply-To: <CAG5iGsBLTNL+zb9K+DVgt49nVa=x8EUMRFcryWQQsWUvsSOz6g@mail.gmail.com>
References: <CAG5iGsDQf-Uhe2bA8ZzVP88cn0gAt5gNMgZnjf1HSccuPuw+Mw@mail.gmail.com>
 <51334D7C.90604@gmx.de>
 <CAG5iGsBLTNL+zb9K+DVgt49nVa=x8EUMRFcryWQQsWUvsSOz6g@mail.gmail.com>
Message-ID: <CALBOmsZ-jq-p9Lq6Wi6kOZpno7gcJNUS1ugjtw2dJ_dYQi-swQ@mail.gmail.com>

On Mon, Mar 4, 2013 at 11:10 AM, luigi scarso wrote:
>
> The W32TeX project at  http://www.w32tex.org/ or its mirror
> at http://ctan.ijs.si has an update version of luajittex for windows
> compiled with the MS compiler
> (see http://ctan.ijs.si/mirror/w32tex/current/ChangeLog)
> Others binaries are managed by Mojca and the builder team at
> http://svn.contextgarden.net/suite-bin/tex/
>
> Of course I cannot exclude that in the future I will put some binaries
> at TLContrib, but it's not an immediate goal.

If there's a need, I can use the same strategy as is being used for
LuaTeX on TLContrib and put the binaries from ConTeXt distribution to
TLContrib (in a semi-automatic way).

I just need a "please go on and do that".

Mojca

From luigi.scarso at gmail.com  Mon Mar  4 11:19:13 2013
From: luigi.scarso at gmail.com (luigi scarso)
Date: Mon, 4 Mar 2013 11:19:13 +0100
Subject: [luatex] Luajittex 0.75.0 announcement
In-Reply-To: <CALBOmsZ-jq-p9Lq6Wi6kOZpno7gcJNUS1ugjtw2dJ_dYQi-swQ@mail.gmail.com>
References: <CAG5iGsDQf-Uhe2bA8ZzVP88cn0gAt5gNMgZnjf1HSccuPuw+Mw@mail.gmail.com>
 <51334D7C.90604@gmx.de>
 <CAG5iGsBLTNL+zb9K+DVgt49nVa=x8EUMRFcryWQQsWUvsSOz6g@mail.gmail.com>
 <CALBOmsZ-jq-p9Lq6Wi6kOZpno7gcJNUS1ugjtw2dJ_dYQi-swQ@mail.gmail.com>
Message-ID: <CAG5iGsAxcj=RC1_wuQ2NhkZ5Wqdo-o325uDvUH68uPoQqz_04w@mail.gmail.com>

On Mon, Mar 4, 2013 at 11:15 AM, Mojca Miklavec
<mojca.miklavec.lists at gmail.com> wrote:
> On Mon, Mar 4, 2013 at 11:10 AM, luigi scarso wrote:
>> Of course I cannot exclude that in the future I will put some binaries
>> at TLContrib, but it's not an immediate goal.
>
> If there's a need, I can use the same strategy as is being used for
> LuaTeX on TLContrib and put the binaries from ConTeXt distribution to
> TLContrib (in a semi-automatic way).
>
> I just need a "please go on and do that".
>
> Mojca
>From my side, I don't see problems.


-- 
luigi

From mojca.miklavec.lists at gmail.com  Mon Mar  4 12:25:08 2013
From: mojca.miklavec.lists at gmail.com (Mojca Miklavec)
Date: Mon, 4 Mar 2013 12:25:08 +0100
Subject: [luatex] Luajittex 0.75.0 announcement
In-Reply-To: <5133734E.3080107@gmx.de>
References: <CAG5iGsDQf-Uhe2bA8ZzVP88cn0gAt5gNMgZnjf1HSccuPuw+Mw@mail.gmail.com>
 <51334D7C.90604@gmx.de> <20130303132646.GK29684@homerow>
 <513350F4.4070603@gmx.de> <5133734E.3080107@gmx.de>
Message-ID: <CALBOmsbVckKBbarru1ki_vWwySxYQOGKsjfujJwq4GzorgkFwg@mail.gmail.com>

On Sun, Mar 3, 2013 at 4:59 PM, Arno Trautmann wrote:
> Arno Trautmann wrote:
>> Marco Patzer wrote:
>>> On 2013?03?03 Arno Trautmann wrote:
>>>
>>>>> The project is hosted as usual at
>>>>> https://foundry.supelec.fr/projects/luajittex/
>>>>
>>>>
>>>> I cannot find any files there: Clicking on ?files? gives me:
>>>> ?There are no file packages defined for this project.?
>>>>
>>>> What am I doing wrong?
>>>
>>>
>>> The supelec pages are not very intuitive and misleading, I totally
>>> agree.
>>>
>>> The source code can be obtained with SVN:
>>>
>>>    svn co http://foundry.supelec.fr/svn/luajittex/trunk
>>>
>>> The binaries can be found on http://svn.contextgarden.net/suite-bin/tex/
>>
>> Thanks, that will help me :)
>
> It certainly helped and I got it working, thank you!
> However, in the binaries link I only found 0.72, not 0.75 ? I guess they are
> not already updated?

It might take a while before everyone builds the binaries. At the time
of writing this most binaries are up to date, except for sparc-solaris
which won't be supported at all, armel-linux. The (k)freebsd binaries
are arriving as I'm writing this email.

> Now, I'd like to test luajittex with latex, and a minimal examples works
> fine. But trying to load some non-trivial packages fails with an error:

There is a chance that either packages are not yet adapted for
luajittex, or that luajittex has some minor bugs.

Mojca


From taco at elvenkind.com  Tue Mar  5 11:13:23 2013
From: taco at elvenkind.com (Taco Hoekwater)
Date: Tue, 5 Mar 2013 11:13:23 +0100
Subject: [luatex] when will LuaTeX provide string functions that
	supersede those of the slnunicode library?
In-Reply-To: <D3CBFA61-E314-4F18-992E-11EC04008F5F@mac.com>
References: <D3CBFA61-E314-4F18-992E-11EC04008F5F@mac.com>
Message-ID: <53267921-E863-4777-AEAE-81B08B0DB8AA@elvenkind.com>


On Mar 1, 2013, at 9:06 PM, Mico Loretan <mico.loretan at mac.com> wrote:

> On p. 32 of the LuaTeX reference manual (version 0.75), there's the following enticing statement:
> 
>> The slnunicode library [of Unicode-aware string manipulation functions] will be replaced by an 
>> internal Unicode library in a future LuaTeX version. 
> 
> Is it possible to be a bit more specific as to when this library might become available? :-)


In 0.80, hopefully, to be included in TeXLive 2013. In practice, that means in a few weeks, since the deadline for TL 2013 is end of March. In that version, there will be probably be both the old slnunicode library and a new library of our own writing, to ease the transition.

Best wishes,
Taco



From luigi.scarso at gmail.com  Fri Mar  8 17:11:50 2013
From: luigi.scarso at gmail.com (luigi scarso)
Date: Fri, 8 Mar 2013 17:11:50 +0100
Subject: [luatex] Luajittex 0.75.0.1 announcement
Message-ID: <CAG5iGsASzjZiyXDLXn6sLmK9U0Ey9s3ymsx55K+Z2H-9r4pmiw@mail.gmail.com>

New beta release of luajittex  with luajit 2.0.1 patched with  Hotfix#1
(see http://luajit.org/download.html).

--
luigi

From florencioneves at gmail.com  Fri Mar  8 20:31:13 2013
From: florencioneves at gmail.com (=?ISO-8859-1?Q?Flor=EAncio_Neves?=)
Date: Fri, 8 Mar 2013 14:31:13 -0500
Subject: [luatex] Glyph nodes
Message-ID: <CA++uCEn6B3Ra8scYfiz08=yN=c91qdAnmdenvhRcSqtqhHWVnA@mail.gmail.com>

Hi,

I understand how to create a glyph node containing a character
specified by its Unicode number (by saying ?node.new("glyph")? and
setting its ?char? field).  Now, is it possible (or going to be
possible eventually) to create a node containing a glyph that lives in
the font's private area and therefore has no Unicode?

Looking into, say, the TG Pagella Math font, I see that its
\rightarrow has an extensible variant, whose right extreme is a
component named ?arrowright.rt?, and I would like to insert this glyph
in a document.

Thanks.


From taco at elvenkind.com  Mon Mar 11 14:09:14 2013
From: taco at elvenkind.com (Taco Hoekwater)
Date: Mon, 11 Mar 2013 14:09:14 +0100
Subject: [luatex] Glyph nodes
In-Reply-To: <CA++uCEn6B3Ra8scYfiz08=yN=c91qdAnmdenvhRcSqtqhHWVnA@mail.gmail.com>
References: <CA++uCEn6B3Ra8scYfiz08=yN=c91qdAnmdenvhRcSqtqhHWVnA@mail.gmail.com>
Message-ID: <513DD77A.8050702@elvenkind.com>

On 03/08/2013 08:31 PM, Flor?ncio Neves wrote:
> Hi,
>
> I understand how to create a glyph node containing a character
> specified by its Unicode number (by saying ?node.new("glyph")? and
> setting its ?char? field).  Now, is it possible (or going to be
> possible eventually) to create a node containing a glyph that lives in
> the font's private area and therefore has no Unicode?
>
> Looking into, say, the TG Pagella Math font, I see that its
> \rightarrow has an extensible variant, whose right extreme is a
> component named ?arrowright.rt?, and I would like to insert this glyph
> in a document.

It depends on how the macro package loads the font glyphs that do
not have a Unicode slot.

ConTeXt, for example, loads such glyphs in the PUA slots and maintains
a lua table that maps glyph names to slot indices. That allows one
to write

	\fontchar{arrowright.rt}

in the input stream. In the end, that simply produces a glyph node
with a char value somewhere in the PUA.

Best wishes,
Taco


From Arno.Trautmann at gmx.de  Mon Mar 11 21:56:34 2013
From: Arno.Trautmann at gmx.de (Arno Trautmann)
Date: Mon, 11 Mar 2013 21:56:34 +0100
Subject: [luatex] disabling ligatures
Message-ID: <513E4502.2030906@gmx.de>

Hi all,

this is probably a rather simple question, but I am not sure whether I 
have the right starting point for the solution: I want to disable 
ligaturing, not only per document, but per paragraph, and, if possible, 
per paragraph-part (marked by some user command).

What I can do is setting the "ligaturing" callback to false. Works. As 
long as I don't use luaotfload (via fontspec), then I have to clear the 
pre_linebreak_filter. Can do, works. But re-activating is more 
complicated. Most probably that would also be possible, but I just 
wanted to ask whether this is the simplest way to just disaple *all* 
ligatures in a given amount of text.

Cheers
Arno

From patrick at gundla.ch  Mon Mar 11 22:18:30 2013
From: patrick at gundla.ch (Patrick Gundlach)
Date: Mon, 11 Mar 2013 22:18:30 +0100
Subject: [luatex] disabling ligatures
In-Reply-To: <513E4502.2030906@gmx.de>
References: <513E4502.2030906@gmx.de>
Message-ID: <446B0DE0-E670-41F3-863F-CAB6615468B9@gundla.ch>


Am 11.03.2013 um 21:56 schrieb Arno Trautmann <Arno.Trautmann at gmx.de>:

[...]

> but I just wanted to ask whether this is the simplest way to just disaple *all* ligatures in a given amount of text.

I doubt that this is possible, since what luaotfload does is not something I'd call "ligaturing" in the TeX sense, but some complicated manipulation of the node list.

Unless there is some hook to disable the complex mechanism in luaotfload. Hand? Khaled?

Patrick




From patrick at gundla.ch  Tue Mar 12 08:18:21 2013
From: patrick at gundla.ch (Patrick Gundlach)
Date: Tue, 12 Mar 2013 08:18:21 +0100
Subject: [luatex] disabling ligatures
In-Reply-To: <446B0DE0-E670-41F3-863F-CAB6615468B9@gundla.ch>
References: <513E4502.2030906@gmx.de>
 <446B0DE0-E670-41F3-863F-CAB6615468B9@gundla.ch>
Message-ID: <D4F65A21-FE9F-48DC-97AC-26D4290BF953@gundla.ch>


Am 11.03.2013 um 22:18 schrieb Patrick Gundlach <patrick at gundla.ch>:

> 
> Am 11.03.2013 um 21:56 schrieb Arno Trautmann <Arno.Trautmann at gmx.de>:
> 
> [...]
> 
>> but I just wanted to ask whether this is the simplest way to just disaple *all* ligatures in a given amount of text.
> 
> I doubt that this is possible, since what luaotfload does is not something I'd call "ligaturing" in the TeX sense, but some complicated manipulation of the node list.
> 
> Unless there is some hook to disable the complex mechanism in luaotfload. Hand? Khaled?

(doh, late last night.)

should be "Hans? Khaled?"

Patrick

From Arno.Trautmann at gmx.de  Tue Mar 12 08:23:38 2013
From: Arno.Trautmann at gmx.de (Arno L. Trautmann)
Date: Tue, 12 Mar 2013 08:23:38 +0100
Subject: [luatex] disabling ligatures
Message-ID: <9a4141df-6f97-479e-9f6a-27bb17a0e23b@email.android.com>

Hi,
for my simple needs just unregistering the luaotfload.pre_linebreak_filter already did the work. Not sure though if I have destroyed something else this way ...

Cheers
Arno




Patrick Gundlach <patrick at gundla.ch> schrieb:


Am 11.03.2013 um 22:18 schrieb Patrick Gundlach <patrick at gundla.ch>:

> 
> Am 11.03.2013 um 21:56 schrieb Arno Trautmann <Arno.Trautmann at gmx.de>:
> 
> [...]
> 
>> but I just wanted to ask whether this is the simplest way to just disaple *all* ligatures in a given amount of text.
> 
> I doubt that this is possible, since what luaotfload does is not something I'd call "ligaturing" in the TeX sense, but some complicated manipulation of the node list.
> 
> Unless there is some hook to disable the complex mechanism in luaotfload. Hand? Khaled?

(doh, late last night.)

should be "Hans? Khaled?"

Patrick

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://tug.org/pipermail/luatex/attachments/20130312/de3acb60/attachment.html>

From khaledhosny at eglug.org  Tue Mar 12 13:08:51 2013
From: khaledhosny at eglug.org (Khaled Hosny)
Date: Tue, 12 Mar 2013 14:08:51 +0200
Subject: [luatex] disabling ligatures
In-Reply-To: <9a4141df-6f97-479e-9f6a-27bb17a0e23b@email.android.com>
References: <9a4141df-6f97-479e-9f6a-27bb17a0e23b@email.android.com>
Message-ID: <20130312120851.GA32727@khaled-laptop>

On Tue, Mar 12, 2013 at 08:23:38AM +0100, Arno L. Trautmann wrote:
> Hi,
> for my simple needs just unregistering the
> luaotfload.pre_linebreak_filter already did the work. Not sure though
> if I have destroyed something else this way ...

I was about to suggest something like that, it will disable all
luaotfload?s OpenType processing not only ligatures. You may want to do
the same with luaotfload.hpack_filter.

Regards,
Khaled

From mailing_list at arcor.de  Tue Mar 19 19:30:47 2013
From: mailing_list at arcor.de (Stephan Hennig)
Date: Tue, 19 Mar 2013 19:30:47 +0100
Subject: [luatex] when will LuaTeX provide string functions that
 supersede those of the slnunicode library?
In-Reply-To: <53267921-E863-4777-AEAE-81B08B0DB8AA@elvenkind.com>
References: <D3CBFA61-E314-4F18-992E-11EC04008F5F@mac.com>
 <53267921-E863-4777-AEAE-81B08B0DB8AA@elvenkind.com>
Message-ID: <5148AED7.6040806@arcor.de>

Am 05.03.2013 11:13, schrieb Taco Hoekwater:
> On Mar 1, 2013, at 9:06 PM, Mico Loretan <mico.loretan at mac.com> wrote:
> 
>>> The slnunicode library [of Unicode-aware string manipulation
>>> functions] will be replaced by an internal Unicode library in a
>>> future LuaTeX version.
>> 
>> Is it possible to be a bit more specific as to when this library
>> might become available? :-)
> 
> 
> In 0.80, hopefully, to be included in TeXLive 2013. In practice,
> that means in a few weeks, since the deadline for TL 2013 is end of
> March. In that version, there will be probably be both the old
> slnunicode library and a new library of our own writing, to ease the 
> transition.

MediaWiki developers seem to have implemented their own Unicode-aware
string library for Lua, too.  Don't know if and how that differs from
the Selene library, though.

<URL:https://www.mediawiki.org/wiki/Extension%3AScribunto/Lua_reference_manual#Ustring_library>.

Best regards,
Stephan Hennig


From mailing_list at arcor.de  Sat Mar 23 11:31:19 2013
From: mailing_list at arcor.de (Stephan Hennig)
Date: Sat, 23 Mar 2013 11:31:19 +0100
Subject: [luatex] on some special glyph nodes
Message-ID: <514D8477.9000708@arcor.de>

Hi,

some of the ASCII characters are ambiguous in their meaning, e.g.,
APOSTROPHE (0x27) or HYPHEN-MINUS (0x2d).  AFAIK, Unicode standard
recommends to convert such code points to their most useful unambiguous
interpretation, e.g., APOSTROPHE 0x27 => RIGHT SINGLE QUOTATION MARK
0x2019.  In output, if existent, 0x27 should then be rendered as a
vertical line instead of an apostrophe.

In node lists, that is after the above mentioned conversion, under what
circumstances can glyph nodes still happen to represent ambiguous code
points?  Is there some input for LuaTeX that generates such glyphs other
than via node list manipulation?

Additionally, Unicode standard contains many code points representing
various forms of spaces, such as SPACE, NON-BREAKING SPACE, THIN SPACE
etc.  AFAIK, traditional TeX doesn't make use of spacing characters, but
always does absolute positioning of black ink in output.

In node lists, under what circumstances can glyph nodes represent
spacing characters?

Best regards,
Stephan Hennig

From mico.loretan at mac.com  Sat Mar 23 15:14:32 2013
From: mico.loretan at mac.com (Mico Loretan)
Date: Sat, 23 Mar 2013 10:14:32 -0400
Subject: [luatex] luatex 0.74 or 0.75 for MacOSX?
Message-ID: <CBE82FB8-1EB6-476B-BEB8-D59C839A2299@mac.com>

Greetings!

On tlcontrib.metatex.org, I've found .tar.bz files named luatex.universal-darwin and uatex.x86_64-darwin, declared version 0.74.0 in both cases. Unfortunately, upon downloading and unpacking the files, it appears that the version isn't 0.74.x but, rather, "beta-0.70.1-2011051908 (rev 4277)"; at least that's the information I get from running "luatex --version" on the executables. I assume this is an oversight. 

Is there some other place from where I might download one of the latest versions of luatex for MacOSX? I'm somewhat indifferent between using 0.74 and 0.75. Please advise.

Sincerely,

Mico



From zappathustra at free.fr  Sat Mar 23 16:24:05 2013
From: zappathustra at free.fr (Paul Isambert)
Date: Sat, 23 Mar 2013 16:24:05 +0100
Subject: [luatex] on some special glyph nodes
In-Reply-To: <514D8477.9000708@arcor.de>
References: <514D8477.9000708@arcor.de>
Message-ID: <1364052245.514dc91595e56@imp.free.fr>

Stephan Hennig <mailing_list at arcor.de> a ?crit:
> Hi,
>
> some of the ASCII characters are ambiguous in their meaning, e.g.,
> APOSTROPHE (0x27) or HYPHEN-MINUS (0x2d).  AFAIK, Unicode standard
> recommends to convert such code points to their most useful unambiguous
> interpretation, e.g., APOSTROPHE 0x27 => RIGHT SINGLE QUOTATION MARK
> 0x2019.  In output, if existent, 0x27 should then be rendered as a
> vertical line instead of an apostrophe.
>
> In node lists, that is after the above mentioned conversion, under what
> circumstances can glyph nodes still happen to represent ambiguous code
> points?  Is there some input for LuaTeX that generates such glyphs other
> than via node list manipulation?
>
> Additionally, Unicode standard contains many code points representing
> various forms of spaces, such as SPACE, NON-BREAKING SPACE, THIN SPACE
> etc.  AFAIK, traditional TeX doesn't make use of spacing characters, but
> always does absolute positioning of black ink in output.
>
> In node lists, under what circumstances can glyph nodes represent
> spacing characters?

I'm not sure I've understood the questions properly, but I'll make a
tentative answer anyway.

As far as I can tell, there are three places in LuaTeX where such
substitutions can take place:

1. When manipulating the input lines fed to TeX, in either
   open_read_file or process_input_buffer. There characters can be
   easily converted, and 0x27 can be turned to 0x2d.

2. When TeX processes tokens; for instance, a non-breaking space
   character can be made active and \let to (the usual definition of)
   "~" (e.g. so the source looks as little TeXish as possible).

3. Directly on nodes, which is the OpenType way to implement things:
   thus a node with character 0x27 will be turned into a node with
   character 0x2d; the font system (e.g. luaotfload) normally does
   that. TFM fonts are simpler yet: the right quotation mark is
   (generally) in position 0x27, there's no need for a substitution
   (you can implement that too with OTF fonts). In my opinion, this is
   probably the best place, for such substitutions as the apostrophe
   at least, since it can be font-dependent (and you may want some
   fonts, e.g. for code, to keep the real apostrophe).

Another way, not related to TeX, is to input the relevant characters
directly. With a good editor, it is simple to input a quotation mark
when typing an apostrophe (which isn't readily available on a keyboard).

I hope it helps,
Paul

From mico.loretan at mac.com  Sat Mar 23 17:45:11 2013
From: mico.loretan at mac.com (Mico Loretan)
Date: Sat, 23 Mar 2013 12:45:11 -0400
Subject: [luatex] Downloaded compiled version of luatex 0.75 for MacOSX,
 am getting error related to luatex-loader.sty and
 oberdiek.luatex.lua
Message-ID: <237EC038-AA6F-4F03-96A8-35D812D83A86@mac.com>

Greetings!

This is a follow-up to my earlier posting (about obtaining a compiled copy of LuaTeX for MacOSX, either 0.74 0 0.75). I've "found" a copy of version 0.75 in the meantime, at http://minimals.contextgarden.net/current/bin/luatex/osx-intel/bin/.

I run MacTeX2012, and I saved the current version of luatex (0.71) before moving the new executable to its expected location, viz., /usr/local/texlive/2012/bin/x86_64-darwin. I then rebuilt all format files, per the installation instructions, using the commands "sudo fmtutil --all" and "sudo fmtutil-sys --all". (Aside: using either method, I got warning messages that the builds of the following formats failed: amstex, eplain, eptex, and euptex. Since I don't use these formats, I'm not concerned about them...)

I then tried to compile a program that executes the instruction 

      \directlua{  require("selnolig.lua")  }

where selnolig.lua, unsurprisingly, contains some lua code. Unfortunately, the program crashes at that point, with the following error message:


	
(/usr/local/texlive/2012/texmf-dist/tex/generic/oberdiek/luatex-loader.sty
(/usr/local/texlive/2012/texmf-dist/scripts/oberdiek/oberdiek.luatex.lua)
! LuaTeX error ...ive/2012/texmf-dist/scripts/oberdiek/oberdiek.luatex.lua:55: 
bad argument #1 to 'insert' (table expected, got nil)
stack traceback:
	[C]: in function 'insert'
	...ive/2012/texmf-dist/scripts/oberdiek/oberdiek.luatex.lua:55: in main chunk
	[C]: in function 'dofile'
	[string "\directlua "]:6: in main chunk.
l.139   }
         %
? 

Something isn't quite right in luatex-loader.sty, right?

Just for completeness, I downloaded the entire source code for luatex 0.75 and compiled it on my system. (I have Xcode 4.6 plus the command line tools for Xcode, for MacOSX "Lion".) I was able to compile the thing without crashing. Sadly, after setting the proper file permissions, installing it to /usr/local/texlive/2012/bin/x86_64-darwin, and re-running fmtutil and fmtutil-sys, I get the exact same problem as reported above when I try to compile my tex file.

Are there other files besides the executable that must be updated and/or reinstalled before I can run luatex 0.75 on MacTeX2012? Please advise.

Sincerely,

Mico






From Herbert.Voss at FU-Berlin.DE  Sat Mar 23 18:42:05 2013
From: Herbert.Voss at FU-Berlin.DE (Herbert Voss)
Date: Sat, 23 Mar 2013 18:42:05 +0100
Subject: [luatex] Downloaded compiled version of luatex 0.75 for MacOSX,
 am getting error related to luatex-loader.sty and
 oberdiek.luatex.lua
In-Reply-To: <237EC038-AA6F-4F03-96A8-35D812D83A86@mac.com>
References: <237EC038-AA6F-4F03-96A8-35D812D83A86@mac.com>
Message-ID: <514DE96D.9090205@FU-Berlin.DE>

On 23.03.2013 17:45, Mico Loretan wrote:

> Something isn't quite right in luatex-loader.sty, right?
>
> Just for completeness, I downloaded the entire source code for luatex 0.75 and compiled it on my system. (I have Xcode 4.6 plus the command line tools for Xcode, for MacOSX "Lion".) I was able to compile the thing without crashing. Sadly, after setting the proper file permissions, installing it to /usr/local/texlive/2012/bin/x86_64-darwin, and re-running fmtutil and fmtutil-sys, I get the exact same problem as reported above when I try to compile my tex file.
>
> Are there other files besides the executable that must be updated and/or reinstalled before I can run luatex 0.75 on MacTeX2012? Please advise.

you cannot run the latest version with the current LuaLaTeX packages.
Only luatex can be used, but not lualatex.

Move back to version 0.72. I dont't know when and if the package
author will update their packages.

Herbert

From zappathustra at free.fr  Sun Mar 24 00:00:57 2013
From: zappathustra at free.fr (Paul Isambert)
Date: Sun, 24 Mar 2013 00:00:57 +0100
Subject: [luatex] on some special glyph nodes
In-Reply-To: <514E0503.60406@arcor.de>
References: <514D8477.9000708@arcor.de> <1364052245.514dc91595e56@imp.free.fr>
 <514E0503.60406@arcor.de>
Message-ID: <1364079657.514e34291dafc@imp.free.fr>

Stephan Hennig <mailing_list at arcor.de> a ?crit:
> [resending, since I seem to be grey-listed
>
>                    The Postfix program
>
> <luatex at tug.org>: host mx.nfit.au.dk[130.225.30.10] said: 451 4.3.0
> Greylisted:
>     please try again. (in reply to RCPT TO command)
> ]
>
> Am 23.03.2013 16:24, schrieb Paul Isambert:
> > Stephan Hennig <mailing_list at arcor.de> a ?crit:
> >>
> >> under what circumstances can glyph nodes still happen to represent
> >> ambiguous code points? Is there some input for LuaTeX that
> >> generates such glyphs other than via node list manipulation?
> >>
> >> under what circumstances can glyph nodes represent spacing
> >> characters?
> >
> > I'm not sure I've understood the questions properly, but I'll make a
> > tentative answer anyway.
>
> Thank you for taking the time.  To give some context, I'm trying to
> separate words in node lists and to strip punctuation from words.
>
> Concerning ambiguous characters, do I have to expect and deal with
> ambiguous characters in node lists?  Given the conversion recommended by
> Unicode standard, the naive assumption is there won't be ambiguous
> characters any more at the node list level.  Is that reasoning justified?

LuaTeX doesn't by itself do anything to characters, and apostrophes
remain apostrophes; that's the font package that will handle
substitutions, so you have to do what you want to do after the glyphs
have been processed. But if you're using a simple TFM font, you'll see
a glyph node with char field 0x27, even though the glyph is a proper
quotation mark, so you'll have no way to detect that (and that can
happen with OT fonts too if substitution is done directly in the font
when loaded rather than when node are processed).

> I'm only speaking of ASCII characters that can have various meanings and
> are considered ambiguous by the Unicode standard.  Separating
> apostrophes from English single closing quotes, which are both
> represented by RIGHT SINGLE QUOTATION MARK 0x2019, is another story.
> The former should be retained and don't represent a word separator,
> while the latter should be stripped from words.  Handling this needs
> looking ahead at the next glyph nodes. :(  But anyway, 0x2019 is
> considered unambiguous.
>
> Concerning space characters, do I have to deal with these in LuaTeX to
> recognise word boundaries?  I'm beginning to realise that the answer is
> yes.  Probably not because LuaTeX will insert them, but because they can
> already be present in the input file.

At the node level, I suppose a word boundary will generally be either
a normal space, possibly preceded by a penalty, or a non-interglyph
kern. Of course none of those are unambiguous.

> > As far as I can tell, there are three places in LuaTeX where such
> > substitutions can take place:
> >
> > 1. When manipulating the input lines fed to TeX, in either
> >    open_read_file or process_input_buffer. There characters can be
> >    easily converted, and 0x27 can be turned to 0x2d.
>
> I guess you mean 0x27 => 0x2019 (APOSTROPHE => RIGHT SINGLE QUOTATION
> MARK) or 0x2d => 0x2010 (HYPHEN-MINUS => HYPHEN).

Yes, I was careless.

> > 2. When TeX processes tokens; for instance, a non-breaking space
> >    character can be made active and \let to (the usual definition of)
> >    "~" (e.g. so the source looks as little TeXish as possible).
>
> Oh, I need to have a closer look at how LuaTeX processes the different
> space characters in input.  I wonder if making NO-BREAK SPACE 0xa0
> active is really necessary.

In that respect LuaTeX doesn't differ from TeX: it's above all a
matter of catcodes. Tokens with catcodes different from 10 are not
spaces, and tokens with catcodes 10 will be normalised to character
0x20 (ASCII space).

> > 3. Directly on nodes, which is the OpenType way to implement things:
> >    thus a node with character 0x27 will be turned into a node with
> >    character 0x2d; the font system (e.g. luaotfload) normally does
> >    that. TFM fonts are simpler yet: the right quotation mark is
> >    (generally) in position 0x27, there's no need for a substitution
> >    (you can implement that too with OTF fonts). In my opinion, this is
> >    probably the best place, for such substitutions as the apostrophe
> >    at least, since it can be font-dependent (and you may want some
> >    fonts, e.g. for code, to keep the real apostrophe).
>
> My question is whether 0x27 can occur in node lists at all when
> processing usual LuaTeX documents.

Yes, but it depends on when you're looking at the nodelist, as
mentionned above. And it depends on how much the font reflects
Unicode.

> > Another way, not related to TeX, is to input the relevant characters
> > directly. With a good editor, it is simple to input a quotation mark
> > when typing an apostrophe (which isn't readily available on a keyboard).
>
> Yeah, I have to do some tests with the range of space characters
> provided by Unicode.

Honestly, I'm not sure it's necessary; TeX's \hskip and \kern are much
more powerful than space characters, which must be processed anyway.

Best,
Paul

From reinhard.kotucha at web.de  Sun Mar 24 00:20:37 2013
From: reinhard.kotucha at web.de (Reinhard Kotucha)
Date: Sun, 24 Mar 2013 00:20:37 +0100
Subject: [luatex] Downloaded compiled version of luatex 0.75 for MacOSX,
 am getting error related to luatex-loader.sty and
 oberdiek.luatex.lua
In-Reply-To: <514DE96D.9090205@FU-Berlin.DE>
References: <237EC038-AA6F-4F03-96A8-35D812D83A86@mac.com>
 <514DE96D.9090205@FU-Berlin.DE>
Message-ID: <20814.14533.506145.596294@zaphod.ms25.net>

On 2013-03-23 at 18:42:05 +0100, Herbert Voss wrote:

 > you cannot run the latest version with the current LuaLaTeX packages.
 > Only luatex can be used, but not lualatex.

Herbert, do you have an overview which packages are concerned?

Regards,
  Reinhard

-- 
----------------------------------------------------------------------------
Reinhard Kotucha                                      Phone: +49-511-3373112
Marschnerstr. 25
D-30167 Hannover                              mailto:reinhard.kotucha at web.de
----------------------------------------------------------------------------
Microsoft isn't the answer. Microsoft is the question, and the answer is NO.
----------------------------------------------------------------------------

From Herbert.Voss at FU-Berlin.DE  Sun Mar 24 07:42:30 2013
From: Herbert.Voss at FU-Berlin.DE (Herbert Voss)
Date: Sun, 24 Mar 2013 07:42:30 +0100
Subject: [luatex] Downloaded compiled version of luatex 0.75 for MacOSX,
 am getting error related to luatex-loader.sty and
 oberdiek.luatex.lua
In-Reply-To: <20814.14533.506145.596294@zaphod.ms25.net>
References: <237EC038-AA6F-4F03-96A8-35D812D83A86@mac.com>
 <514DE96D.9090205@FU-Berlin.DE> <20814.14533.506145.596294@zaphod.ms25.net>
Message-ID: <514EA056.2000309@FU-Berlin.DE>

On 24.03.2013 00:20, Reinhard Kotucha wrote:
> On 2013-03-23 at 18:42:05 +0100, Herbert Voss wrote:
>
>   > you cannot run the latest version with the current LuaLaTeX packages.
>   > Only luatex can be used, but not lualatex.
>
> Herbert, do you have an overview which packages are concerned?

not really. I suppose nearly all packages in $TEXMF/tex/lualatex/
At least all which use the deprecated names like module, etc

See Tacos anouncement of Lua 0.75

Herbert


From Arno.Trautmann at gmx.de  Sun Mar 24 10:50:49 2013
From: Arno.Trautmann at gmx.de (Arno Trautmann)
Date: Sun, 24 Mar 2013 10:50:49 +0100
Subject: [luatex] Downloaded compiled version of luatex 0.75 for MacOSX,
 am getting error related to luatex-loader.sty and
 oberdiek.luatex.lua
In-Reply-To: <514EA056.2000309@FU-Berlin.DE>
References: <237EC038-AA6F-4F03-96A8-35D812D83A86@mac.com>
 <514DE96D.9090205@FU-Berlin.DE> <20814.14533.506145.596294@zaphod.ms25.net>
 <514EA056.2000309@FU-Berlin.DE>
Message-ID: <514ECC79.9060705@gmx.de>

Herbert Voss wrote:
> On 24.03.2013 00:20, Reinhard Kotucha wrote:
>> On 2013-03-23 at 18:42:05 +0100, Herbert Voss wrote:
>>
>>   > you cannot run the latest version with the current LuaLaTeX packages.
>>   > Only luatex can be used, but not lualatex.
>>
>> Herbert, do you have an overview which packages are concerned?
>
> not really. I suppose nearly all packages in $TEXMF/tex/lualatex/
> At least all which use the deprecated names like module, etc
>
> See Tacos anouncement of Lua 0.75

Would it be possible to provide a (temporary) compatibilty fix that 
might go into the format? Thinking of TeX Live 2013 I fear to have a 
broken system from start an ? And I guess not all authors might be able 
to fix their packages until then?

cheers
Arno

From mico.loretan at mac.com  Sun Mar 24 19:25:28 2013
From: mico.loretan at mac.com (Mico Loretan)
Date: Sun, 24 Mar 2013 14:25:28 -0400
Subject: [luatex]  Downloaded compiled version of luatex 0.75 for MacOSX,
 am getting error related to luatex-loader.sty and
 oberdiek.luatex.lua
In-Reply-To: <mailman.9.1364122801.32321.luatex@tug.org>
References: <mailman.9.1364122801.32321.luatex@tug.org>
Message-ID: <2D6C4181-6DB0-48E6-BD6E-31879B44BFBD@mac.com>

Herbert Voss wrote:
> Reinhard Kotucha wrote:
> Herbert Voss wrote:
> 
>> you cannot run the latest version with the current LuaLaTeX packages.
>> Only luatex can be used, but not lualatex.
> 
> Herbert, do you have an overview which packages are concerned?
> 
> not really. I suppose nearly all packages in $TEXMF/tex/lualatex/
> At least all which use the deprecated names like module, etc
> not really. I suppose nearly all packages in $TEXMF/tex/lualatex/
> At least all which use the deprecated names like module, etc

I suppose files such as luatex.sty, luatex-loader.sty and oberdiek.luatex.lua -- all in $TEXMF/tex/generic/oberdiek, and all derived from Heiko's luatex.dtx -- should be added to list of files that'll need to be updated as well, right?

From Herbert.Voss at FU-Berlin.DE  Sun Mar 24 20:21:48 2013
From: Herbert.Voss at FU-Berlin.DE (Herbert Voss)
Date: Sun, 24 Mar 2013 20:21:48 +0100
Subject: [luatex] Downloaded compiled version of luatex 0.75 for MacOSX,
 am getting error related to luatex-loader.sty and
 oberdiek.luatex.lua
In-Reply-To: <2D6C4181-6DB0-48E6-BD6E-31879B44BFBD@mac.com>
References: <mailman.9.1364122801.32321.luatex@tug.org>
 <2D6C4181-6DB0-48E6-BD6E-31879B44BFBD@mac.com>
Message-ID: <514F524C.1070705@FU-Berlin.DE>

On 24.03.2013 19:25, Mico Loretan wrote:
> Herbert Voss wrote:
>> Reinhard Kotucha wrote:
>> Herbert Voss wrote:
>>
>>> you cannot run the latest version with the current LuaLaTeX packages.
>>> Only luatex can be used, but not lualatex.
>>
>> Herbert, do you have an overview which packages are concerned?
>>
>> not really. I suppose nearly all packages in $TEXMF/tex/lualatex/
>> At least all which use the deprecated names like module, etc
>
> I suppose files such as luatex.sty, luatex-loader.sty and oberdiek.luatex.lua -- all in $TEXMF/tex/generic/oberdiek, and all derived from Heiko's luatex.dtx -- should be added to list of files that'll need to be updated as well, right?

all files which are defined by module, which use the
function package.loaders and which use table.nmax

Herbert

From arthur.reutenauer at normalesup.org  Mon Mar 25 09:39:58 2013
From: arthur.reutenauer at normalesup.org (Arthur Reutenauer)
Date: Mon, 25 Mar 2013 08:39:58 +0000
Subject: [luatex] on some special glyph nodes
In-Reply-To: <514D8477.9000708@arcor.de>
References: <514D8477.9000708@arcor.de>
Message-ID: <20130325083957.GC20418@phare.normalesup.org>

> In node lists, that is after the above mentioned conversion

  I think you're misunderstanding the Unicode recommendation.  What it
means is that the characters you mention, inherited from ASCII, should
generally not be used, and replaced in input by the characters with a
more precise semantics.  I does not at all recommend to convert them at
any point once they've been input, that would have the opposite effect
to what the recommendation aims at.

  Needless to say, that recommendation is hardly followed at all,
neither for U+0027 which is still overwhelmingly used to represent the
apostrophe (instead of U+2019 for the correct apostrophe), and even less
so for U+002D.  I myself have given up on using U+2019 in emails, as
too many systems still don't support it correctly (although there's
definitely been progress).

	Arthur

From reinhard.kotucha at web.de  Mon Mar 25 23:10:30 2013
From: reinhard.kotucha at web.de (Reinhard Kotucha)
Date: Mon, 25 Mar 2013 23:10:30 +0100
Subject: [luatex] on some special glyph nodes
In-Reply-To: <20130325083957.GC20418@phare.normalesup.org>
References: <514D8477.9000708@arcor.de>
 <20130325083957.GC20418@phare.normalesup.org>
Message-ID: <20816.52054.12018.121103@zaphod.ms25.net>

On 2013-03-25 at 08:39:58 +0000, Arthur Reutenauer wrote:

 > > In node lists, that is after the above mentioned conversion
 > 
 >   I think you're misunderstanding the Unicode recommendation.  What it
 > means is that the characters you mention, inherited from ASCII, should
 > generally not be used, and replaced in input by the characters with a
 > more precise semantics.  I does not at all recommend to convert them at
 > any point once they've been input, that would have the opposite effect
 > to what the recommendation aims at.

In order to typeset program code, I often need the ASCII variants of
single quotes because "typograpic quotes" are sometimes confusing.
Consider shell scripts.  And in some typewriter fonts left and right
quotes are undistinguishable with the naked eye.  An example is IBM
Courier (shipped with X11):

  http://ms25.ath.cx/courier.pdf

There is a LaTeX package upquote.sty which patches \verb and the
verbatim environment.  It doesn't work with OTF (yet?).  It doesn't
even work with .dtx files, but for Type 1 fonts I can simply load a
modified .enc file with \pdfmapline.

What is the best way to achieve this with LuaTeX?  Is there a solution
already or do I have to modify the encoding of the Lua representation
of the OTF myself?  (like Ulrike tried to modify the chess font)

 >   Needless to say, that recommendation is hardly followed at all,
 > neither for U+0027 which is still overwhelmingly used to represent the
 > apostrophe (instead of U+2019 for the correct apostrophe), and even less
 > so for U+002D.  I myself have given up on using U+2019 in emails, as
 > too many systems still don't support it correctly (although there's
 > definitely been progress).

Does it mean that the U+2019 slot is empty in the font the recipient
is using?

I ask because I remember vaguely that some time ago there was a
problem because different fonts used different slots for /Omega and I
wondered why the glyph wasn't simply mapped to both code points.

Regards,
  Reinhard

-- 
----------------------------------------------------------------------------
Reinhard Kotucha                                      Phone: +49-511-3373112
Marschnerstr. 25
D-30167 Hannover                              mailto:reinhard.kotucha at web.de
----------------------------------------------------------------------------
Microsoft isn't the answer. Microsoft is the question, and the answer is NO.
----------------------------------------------------------------------------

From arthur.reutenauer at normalesup.org  Tue Mar 26 11:45:54 2013
From: arthur.reutenauer at normalesup.org (Arthur Reutenauer)
Date: Tue, 26 Mar 2013 10:45:54 +0000
Subject: [luatex] on some special glyph nodes
In-Reply-To: <20816.52054.12018.121103@zaphod.ms25.net>
References: <514D8477.9000708@arcor.de>
 <20130325083957.GC20418@phare.normalesup.org>
 <20816.52054.12018.121103@zaphod.ms25.net>
Message-ID: <20130326104554.GE20418@phare.normalesup.org>

> In order to typeset program code, I often need the ASCII variants of
> single quotes because "typograpic quotes" are sometimes confusing.

  Yes, that's understandable.

> What is the best way to achieve this with LuaTeX?

  I don't know.  It doesn't seem to me that there is a package out there
to do just that, but it shouldn't be hard to write one.

> Does it mean that the U+2019 slot is empty in the font the recipient
> is using?

  No, it means that U+2019 gets converted somewhere down the way, and
sometimes gets corrupted.  You must have seen that: the resulting email
contains either a question mark, the Unicode "not a character" character
(U+FFFD), or even something else.  To simply not display the character
would actually not be that bad.

  Of course the situation is improving, but it's enough for one link of
the chain to introduce errors to get a bad end result, and it's
particularly tricky to make a choice in emails because it depends on a
lot of factors at the other end of the chain (the email agent the
recipient(s) use, etc.)  Just the other day, I wrote an email to a
mailing list that included the British pound sign (?), which is part of
latin-1.  My mailer (mutt) sent out the email as latin-1, because I've
configured it to do so (latin-1 if possible, UTF-8 otherwise), and when
it came back to me (since I was subscribed to the mailing list I was
posting to), it came out, in UTF-8, as a capital Polish slashed L (?).
Very disturbing, and the mailing list is managed by Google Groups, which
- one would think - should be able to handle that kind of things
properly.

	Arthur

From luatex at nililand.de  Tue Mar 26 12:10:11 2013
From: luatex at nililand.de (Ulrike Fischer)
Date: Tue, 26 Mar 2013 12:10:11 +0100
Subject: [luatex] on some special glyph nodes
References: <514D8477.9000708@arcor.de>
 <20130325083957.GC20418@phare.normalesup.org>
 <20816.52054.12018.121103@zaphod.ms25.net>
Message-ID: <11zlyapfe6c11$.dlg@nililand.de>

Am Mon, 25 Mar 2013 23:10:30 +0100 schrieb Reinhard Kotucha:

> What is the best way to achieve this with LuaTeX?  Is there a solution
> already or do I have to modify the encoding of the Lua representation
> of the OTF myself?  

Well regarding the apostroph and ' there is no problem in lualatex:
The mapping is already done with (faked) ligatures:

\documentclass[]{scrartcl}
\usepackage{fontspec}
\begin{document}

a'b a^^^^2019b

\setmainfont{Arial}
a'b a^^^^2019b

\setmainfont[Ligatures=TeX]{Arial}
a'b a^^^^2019b

\verb+a'b+ 

\end{document} 

(You get ' in the verb as the typewriter font doesn't activate the
tex-ligatures).

You can implement more substituations with feature files. 


-- 
Ulrike Fischer 
http://www.troubleshooting-tex.de/


From reinhard.kotucha at web.de  Tue Mar 26 23:36:50 2013
From: reinhard.kotucha at web.de (Reinhard Kotucha)
Date: Tue, 26 Mar 2013 23:36:50 +0100
Subject: [luatex] on some special glyph nodes
In-Reply-To: <11zlyapfe6c11$.dlg@nililand.de>
References: <514D8477.9000708@arcor.de>
 <20130325083957.GC20418@phare.normalesup.org>
 <20816.52054.12018.121103@zaphod.ms25.net>
 <11zlyapfe6c11$.dlg@nililand.de>
Message-ID: <20818.8962.936343.495250@zaphod.ms25.net>

On 2013-03-26 at 12:10:11 +0100, Ulrike Fischer wrote:

 > Am Mon, 25 Mar 2013 23:10:30 +0100 schrieb Reinhard Kotucha:
 > 
 > > What is the best way to achieve this with LuaTeX?  Is there a solution
 > > already or do I have to modify the encoding of the Lua representation
 > > of the OTF myself?  
 > 
 > Well regarding the apostroph and ' there is no problem in lualatex:
 > The mapping is already done with (faked) ligatures:
 > 
 > \documentclass[]{scrartcl}
 > \usepackage{fontspec}
 > \begin{document}
 > 
 > a'b a^^^^2019b
 > 
 > \setmainfont{Arial}
 > a'b a^^^^2019b
 > 
 > \setmainfont[Ligatures=TeX]{Arial}
 > a'b a^^^^2019b
 > 
 > \verb+a'b+ 
 > 
 > \end{document} 
 > 
 > (You get ' in the verb as the typewriter font doesn't activate the
 > tex-ligatures).

Thanks, Ulrike!

Your example works well.  Your font configuration is much simpler than
mine.  Seems that I tried too much of a good thing and broke everything.

I'll adapt my .cls file accordingly.
 
Regards,
  Reinhard

-- 
----------------------------------------------------------------------------
Reinhard Kotucha                                      Phone: +49-511-3373112
Marschnerstr. 25
D-30167 Hannover                              mailto:reinhard.kotucha at web.de
----------------------------------------------------------------------------
Microsoft isn't the answer. Microsoft is the question, and the answer is NO.
----------------------------------------------------------------------------

From reinhard.kotucha at web.de  Thu Mar 28 00:43:03 2013
From: reinhard.kotucha at web.de (Reinhard Kotucha)
Date: Thu, 28 Mar 2013 00:43:03 +0100
Subject: [luatex] [lltx] Speeding up otf lua cache file load
In-Reply-To: <1364047163.852370911@f186.mail.ru>
References: <1364047163.852370911@f186.mail.ru>
Message-ID: <20819.33799.36994.106339@zaphod.ms25.net>


I copied this thread from [lltx] to [luatex] because I fear that the
luaotfload maintainer is not listening on [lltx]


On 2013-03-23 at 17:59:23 +0400, LS wrote:

 >  Hi, all,

 > I think, that compiling? with otf font would be very quick if it
 > would be possible? to create a separate "temp-<font-name>.lua" in a
 > current directory only with the project used glyphs.  It could be a
 > package f.e. "glyphstoluahash.sty" witch would do all that. Maybe,
 > on the first run it would be slow, while it will pick all these
 > glyphs, but on other runs, if? "temp-<font-name>.lua" exists in a
 > current directory, it would do nothing, but ??luaotfload would use
 > this local hash file.  How many different glyphs uses articles,
 > probably less than 500 from one font. So it would be a huge
 > improvement.
 > 
 > I see in a otfl-luat-dum.lua that $TEXMFCACHE can be set for the
 > cache look up, but when I set it to: TEXMFCACHE=.//;$TEXMFVAR
 > luatex crates a local empty directories ./luatex-cache/generic. I
 > tried to copy font cache file in local directory and in a created
 > one, but it still loads cache files from?
 > $TEXMFVAR\luatex-cache\generic\fonts\otf\
 > 
 > So, what do you think about that idea?

A better approach is to pre-compile the Lua files.  A pre-compiled Lua
file is loaded significantly faster because it doesn't have to be
parsed.  I observed that loading a .luc file is up to 30 times as fast
as loading .lua file.

You can try yourself.  Since Lua recognizes whether a file is
pre-compiled, regardless of the extension, you can do

  texluac -s -o foo.luc foo.lua
  move foo.luc foo.lua

for testing.

What I nowadys do in my own programs in order to load large files with
dofile() is to provide a wrapper, let's call it do_file().  The
wrapper takes a file name as an argument.  If the file name has an
extension, then the argument is passed directly to dofile().  
If no extension is given, the wrapper looks for foo.luc and foo.lua.
If both are present, the newer one is used.

I think that this approach can be used by luaotfload too without much
effort.  The filename cache can be large, but the Lua representation
of OTFs can be huge.  Pre-compiling the Lua files helps in both cases.

Vafa, AFAIR you offered to maintain luaotfload some time ago.  What do
you think about this suggestion?  See the function do_file() below.

BTW, luaotfload creates files containing absolute paths.  In my
current application it's a pain.  Thus the function below is using
kpathsea in order to locate files.  It's the preferred way to locate
files in TeX Live anyway.

Regards,
  Reinhard

------------------------------------------------------------------
function do_file (file)
  if file:find('\.lu[ac]$') then -- extension provided
     return dofile(kpse.find_file(file))
  end

  -- no extension:

  local function mtime (f)
    return lfs.attributes(f).modification
  end

  local luafile=kpse.find_file(file..'.lua') or false
  local lucfile=kpse.find_file(file..'.luc') or false

  local function exists (f) 
     if f then return true end 
  end 

  local filename=luafile

  if exists(lucfile) then 
     if exists(luafile) then -- compare timestamps, the newer file wins
        if mtime(lucfile) > mtime(luafile) then
	   filename=lucfile
        end
     else -- no .lua file
        filename=lucfile
     end
  end
  return dofile(filename)
end
------------------------------------------------------------------


-- 
----------------------------------------------------------------------------
Reinhard Kotucha                                      Phone: +49-511-3373112
Marschnerstr. 25
D-30167 Hannover                              mailto:reinhard.kotucha at web.de
----------------------------------------------------------------------------
Microsoft isn't the answer. Microsoft is the question, and the answer is NO.
----------------------------------------------------------------------------


From zappathustra at free.fr  Thu Mar 28 10:09:18 2013
From: zappathustra at free.fr (Paul Isambert)
Date: Thu, 28 Mar 2013 10:09:18 +0100
Subject: [luatex] [lltx] Speeding up otf lua cache file load
In-Reply-To: <20819.33799.36994.106339@zaphod.ms25.net>
References: <1364047163.852370911@f186.mail.ru>
 <20819.33799.36994.106339@zaphod.ms25.net>
Message-ID: <1364461758.515408be5ff47@imp.free.fr>

Reinhard Kotucha <reinhard.kotucha at web.de> a ?crit:
> I copied this thread from [lltx] to [luatex] because I fear that the
> luaotfload maintainer is not listening on [lltx]
>
>
> On 2013-03-23 at 17:59:23 +0400, LS wrote:
>
>  >  Hi, all,
>
>  > I think, that compiling? with otf font would be very quick if it
>  > would be possible? to create a separate "temp-<font-name>.lua" in a
>  > current directory only with the project used glyphs.  It could be a
>  > package f.e. "glyphstoluahash.sty" witch would do all that. Maybe,
>  > on the first run it would be slow, while it will pick all these
>  > glyphs, but on other runs, if? "temp-<font-name>.lua" exists in a
>  > current directory, it would do nothing, but &#65279;&#65279;luaotfload
would use
>  > this local hash file.  How many different glyphs uses articles,
>  > probably less than 500 from one font. So it would be a huge
>  > improvement.
>  >
>  > I see in a otfl-luat-dum.lua that $TEXMFCACHE can be set for the
>  > cache look up, but when I set it to: TEXMFCACHE=.//;$TEXMFVAR
>  > luatex crates a local empty directories ./luatex-cache/generic. I
>  > tried to copy font cache file in local directory and in a created
>  > one, but it still loads cache files from?
>  > $TEXMFVAR\luatex-cache\generic\fonts\otf\
>  >
>  > So, what do you think about that idea?
>
> A better approach is to pre-compile the Lua files.  A pre-compiled Lua
> file is loaded significantly faster because it doesn't have to be
> parsed.  I observed that loading a .luc file is up to 30 times as fast
> as loading .lua file.
>
> You can try yourself.  Since Lua recognizes whether a file is
> pre-compiled, regardless of the extension, you can do
>
>   texluac -s -o foo.luc foo.lua
>   move foo.luc foo.lua
>
> for testing.
>
> What I nowadys do in my own programs in order to load large files with
> dofile() is to provide a wrapper, let's call it do_file().  The
> wrapper takes a file name as an argument.  If the file name has an
> extension, then the argument is passed directly to dofile().
> If no extension is given, the wrapper looks for foo.luc and foo.lua.
> If both are present, the newer one is used.
>
> I think that this approach can be used by luaotfload too without much
> effort.  The filename cache can be large, but the Lua representation
> of OTFs can be huge.  Pre-compiling the Lua files helps in both cases.
>
> Vafa, AFAIR you offered to maintain luaotfload some time ago.  What do
> you think about this suggestion?  See the function do_file() below.
>
> BTW, luaotfload creates files containing absolute paths.  In my
> current application it's a pain.  Thus the function below is using
> kpathsea in order to locate files.  It's the preferred way to locate
> files in TeX Live anyway.

I've never really tried to make font loading faster, but in my
experience the bulk of the time spent processing comes from setting
kern tables to the demanded size. Loading Minion Pro twenty times
with:

  \directlua{T = os.time()}
  % Loading the font 20 times.
  \directlua{texio.write_nl("TIME: " .. os.time()-T)}

returns "2" if kern tables are set, "0" otherwise. Using pre-compiled
Lua files doesn't make that faster (the loading of the cache file is
negligible compared to its processing). A font that is lighter on kern
tables (e.g. Palatino Linotype) also loads much faster.

One solution I've considered but never implemented is to cache fonts
at a given size, the one most used by the user (e.g. 10pt); then it
would be faster by default, unless loading at a different size (the
font could also be cached with several sizes too).

Of course, reducing cache files to a subset of the glyphs would also
make things faster, provided only the relevant parts of the kern table
are processed. How much faster it would be, I don't know, though.

Best,
Paul

From martin at oneiros.de  Thu Mar 28 11:54:06 2013
From: martin at oneiros.de (=?ISO-8859-1?Q?Martin_Schr=F6der?=)
Date: Thu, 28 Mar 2013 11:54:06 +0100
Subject: [luatex] [lltx] Speeding up otf lua cache file load
In-Reply-To: <20819.33799.36994.106339@zaphod.ms25.net>
References: <1364047163.852370911@f186.mail.ru>
 <20819.33799.36994.106339@zaphod.ms25.net>
Message-ID: <CAP7DCDcVqhWJ2Usu0t2F_ZX=z9PabOCopnghP-JXnKV0zCLvGg@mail.gmail.com>

2013/3/28 Reinhard Kotucha <reinhard.kotucha at web.de>:
> I copied this thread from [lltx] to [luatex] because I fear that the
> luaotfload maintainer is not listening on [lltx]

AFAIK there is no luaotfload maintainer.

Best
   Martin

From w.m.l at gmx.net  Thu Mar 28 19:06:07 2013
From: w.m.l at gmx.net (Robert)
Date: Thu, 28 Mar 2013 19:06:07 +0100
Subject: [luatex] \rightmarginkern bugs
Message-ID: <kj20qb$9rt$1@ger.gmane.org>

Hi,

the below example shows two bugs with \rightmarginkern: it doesn't work 
with the discretionary hyphen (line 5), and it doesn't work in the last 
line (this latter bug was fixed in pdftex 1.40.11, see 
<http://sarovar.org/tracker/index.php?func=detail&aid=4292&group_id=106&atid=493>)

\pdftracingfonts2
\hsize3.9cm
\rpcode\font`\-300
\rpcode\font`\.300
\pdfprotrudechars2
\parindent0pt
\parfillskip0pt
\splittopskip0pt
\newbox\splitbox
\setbox0\vbox{testing protrusion testing- protrusion
               testing protrusion testing protrusion.}
\unvcopy0
\medskip
\loop\ifvbox0
   \setbox\splitbox\vsplit0 to\baselineskip
   \unvbox\splitbox\setbox\splitbox=\lastbox
   \hbox to \hsize{\expandafter\unhbox\expandafter\splitbox
                   \expandafter\kern\rightmarginkern\splitbox}
\repeat

\bye
-- 
  Robert


From w.m.l at gmx.net  Thu Mar 28 19:09:34 2013
From: w.m.l at gmx.net (Robert)
Date: Thu, 28 Mar 2013 19:09:34 +0100
Subject: [luatex] \hyphenchar bug
Message-ID: <kj210q$9rt$2@ger.gmane.org>

Hi again,

\hyphenchar doesn't have any effect (except with -1).

\hsize2,5cm
\hyphenchar\font=`\=
testing testing test hyphenchar

\bye

PS. I have only tested with 0.70.1, so sorry for the noise if this 
should be fixed in 0.75.

Regards,
-- 
  Robert


From zappathustra at free.fr  Thu Mar 28 19:28:25 2013
From: zappathustra at free.fr (Paul Isambert)
Date: Thu, 28 Mar 2013 19:28:25 +0100
Subject: [luatex] \hyphenchar bug
In-Reply-To: <kj210q$9rt$2@ger.gmane.org>
References: <kj210q$9rt$2@ger.gmane.org>
Message-ID: <20130328182827.09825D481B1@smtp5-g21.free.fr>

Robert <w.m.l at gmx.net> a ?crit:
> Hi again,
> 
> \hyphenchar doesn't have any effect (except with -1).
> 
> \hsize2,5cm
> \hyphenchar\font=`\=
> testing testing test hyphenchar
> 
> \bye
> 
> PS. I have only tested with 0.70.1, so sorry for the noise if this 
> should be fixed in 0.75.

It isn?t. In case you don?t know, you can report bugs to the tracker:
http://tracker.luatex.org.

Best,
Paul


From khaledhosny at eglug.org  Thu Mar 28 19:51:06 2013
From: khaledhosny at eglug.org (Khaled Hosny)
Date: Thu, 28 Mar 2013 20:51:06 +0200
Subject: [luatex] \hyphenchar bug
In-Reply-To: <kj210q$9rt$2@ger.gmane.org>
References: <kj210q$9rt$2@ger.gmane.org>
Message-ID: <20130328185106.GA15009@khaled-laptop>

On Thu, Mar 28, 2013 at 07:09:34PM +0100, Robert wrote:
> Hi again,
> 
> \hyphenchar doesn't have any effect (except with -1).
> 
> \hsize2,5cm
> \hyphenchar\font=`\=
> testing testing test hyphenchar
> 
> \bye

AFAIK this is a feature, see section 6.2 of the manual. This should work
instead:

\hsize2,5cm
\prehyphenchar=`\=
testing testing test hyphenchar
\bye

(see section 6.4 of the manual for explanation).

Regards,
Khaled

From reinhard.kotucha at web.de  Thu Mar 28 20:14:19 2013
From: reinhard.kotucha at web.de (Reinhard Kotucha)
Date: Thu, 28 Mar 2013 20:14:19 +0100
Subject: [luatex] [lltx] Speeding up otf lua cache file load
In-Reply-To: <CAP7DCDcVqhWJ2Usu0t2F_ZX=z9PabOCopnghP-JXnKV0zCLvGg@mail.gmail.com>
References: <1364047163.852370911@f186.mail.ru>
 <20819.33799.36994.106339@zaphod.ms25.net>
 <CAP7DCDcVqhWJ2Usu0t2F_ZX=z9PabOCopnghP-JXnKV0zCLvGg@mail.gmail.com>
Message-ID: <20820.38539.963103.644239@zaphod.ms25.net>

On 2013-03-28 at 11:54:06 +0100, Martin Schr?der wrote:

 > 2013/3/28 Reinhard Kotucha <reinhard.kotucha at web.de>:
 > > I copied this thread from [lltx] to [luatex] because I fear that the
 > > luaotfload maintainer is not listening on [lltx]
 > 
 > AFAIK there is no luaotfload maintainer.

I vaguely remember that Vafa said that he would do it if nobody else
does.

Regards,
  Reinhard

-- 
----------------------------------------------------------------------------
Reinhard Kotucha                                      Phone: +49-511-3373112
Marschnerstr. 25
D-30167 Hannover                              mailto:reinhard.kotucha at web.de
----------------------------------------------------------------------------
Microsoft isn't the answer. Microsoft is the question, and the answer is NO.
----------------------------------------------------------------------------


From khaledhosny at eglug.org  Thu Mar 28 20:28:03 2013
From: khaledhosny at eglug.org (Khaled Hosny)
Date: Thu, 28 Mar 2013 21:28:03 +0200
Subject: [luatex] [lltx] Speeding up otf lua cache file load
In-Reply-To: <20820.38539.963103.644239@zaphod.ms25.net>
References: <1364047163.852370911@f186.mail.ru>
 <20819.33799.36994.106339@zaphod.ms25.net>
 <CAP7DCDcVqhWJ2Usu0t2F_ZX=z9PabOCopnghP-JXnKV0zCLvGg@mail.gmail.com>
 <20820.38539.963103.644239@zaphod.ms25.net>
Message-ID: <20130328192803.GA15510@khaled-laptop>

On Thu, Mar 28, 2013 at 08:14:19PM +0100, Reinhard Kotucha wrote:
> On 2013-03-28 at 11:54:06 +0100, Martin Schr?der wrote:
> 
>  > 2013/3/28 Reinhard Kotucha <reinhard.kotucha at web.de>:
>  > > I copied this thread from [lltx] to [luatex] because I fear that the
>  > > luaotfload maintainer is not listening on [lltx]
>  > 
>  > AFAIK there is no luaotfload maintainer.
> 
> I vaguely remember that Vafa said that he would do it if nobody else
> does.

It has a maintainer, and the first letter of his name is Arthur
Reutenauer, but he seems to be as busy as ex-maintainer(s) :)

Regards,
Khaled

From w.m.l at gmx.net  Thu Mar 28 23:41:29 2013
From: w.m.l at gmx.net (Robert)
Date: Thu, 28 Mar 2013 23:41:29 +0100
Subject: [luatex] \hyphenchar bug
In-Reply-To: <20130328185106.GA15009@khaled-laptop>
References: <kj210q$9rt$2@ger.gmane.org> <20130328185106.GA15009@khaled-laptop>
Message-ID: <kj2gul$b32$1@ger.gmane.org>

On 28.03.13 19:51, Khaled Hosny wrote:
> AFAIK this is a feature, see section 6.2 of the manual.

Right, I hadn't looked, thanks.

On 28.03.13 19:28, Paul Isambert wrote:
> In case you don?t know, you can report bugs to the tracker:
> http://tracker.luatex.org.

I was somewhat reluctant to set up yet another account, will do next time.

Regards
-- 
  Robert


From taco at elvenkind.com  Fri Mar 29 11:52:44 2013
From: taco at elvenkind.com (Taco Hoekwater)
Date: Fri, 29 Mar 2013 11:52:44 +0100
Subject: [luatex] \rightmarginkern bugs
In-Reply-To: <kj20qb$9rt$1@ger.gmane.org>
References: <kj20qb$9rt$1@ger.gmane.org>
Message-ID: <5155727C.50102@elvenkind.com>

On 03/28/2013 07:06 PM, Robert wrote:
> Hi,
>
> the below example shows two bugs with \rightmarginkern: it doesn't work
> with the discretionary hyphen (line 5), and it doesn't work in the last
> line

http://tracker.luatex.org/view.php?id=816

Best wishes,
Taco


From reinhard.kotucha at web.de  Fri Mar 29 22:41:13 2013
From: reinhard.kotucha at web.de (Reinhard Kotucha)
Date: Fri, 29 Mar 2013 22:41:13 +0100
Subject: [luatex] [lltx] Speeding up otf lua cache file load
In-Reply-To: <1364461758.515408be5ff47@imp.free.fr>
References: <1364047163.852370911@f186.mail.ru>
 <20819.33799.36994.106339@zaphod.ms25.net>
 <1364461758.515408be5ff47@imp.free.fr>
Message-ID: <20822.2681.910909.728746@zaphod.ms25.net>

On 2013-03-28 at 10:09:18 +0100, Paul Isambert wrote:

 > Reinhard Kotucha <reinhard.kotucha at web.de> a ?crit:
 > > I copied this thread from [lltx] to [luatex] because I fear that the
 > > luaotfload maintainer is not listening on [lltx]
 > >
 > >
 > > On 2013-03-23 at 17:59:23 +0400, LS wrote:
 > >
 > >  >  Hi, all,
 > >
 > >  > I think, that compiling? with otf font would be very quick if
 > >  > it would be possible? to create a separate
 > >  > "temp-<font-name>.lua" in a current directory only with the
 > >  > project used glyphs.  It could be a package
 > >  > f.e. "glyphstoluahash.sty" witch would do all that. Maybe, on
 > >  > the first run it would be slow, while it will pick all these
 > >  > glyphs, but on other runs, if? "temp-<font-name>.lua" exists
 > >  > in a current directory, it would do nothing, but
 > >  > &#65279;&#65279;luaotfload > would use this local hash file.
 > >  > How many different glyphs uses articles, probably less than
 > >  > 500 from one font. So it would be a huge improvement.
 > >  >
 > >  > I see in a otfl-luat-dum.lua that $TEXMFCACHE can be set for
 > >  > the cache look up, but when I set it to:
 > >  > TEXMFCACHE=.//;$TEXMFVAR luatex crates a local empty
 > >  > directories ./luatex-cache/generic. I tried to copy font cache
 > >  > file in local directory and in a created one, but it still
 > >  > loads cache files from?
 > >  > $TEXMFVAR\luatex-cache\generic\fonts\otf\
 > >  >
 > >  > So, what do you think about that idea?
 > >
 > > A better approach is to pre-compile the Lua files.  A
 > > pre-compiled Lua file is loaded significantly faster because it
 > > doesn't have to be parsed.  I observed that loading a .luc file
 > > is up to 30 times as fast as loading .lua file.
 > >
 > > You can try yourself.  Since Lua recognizes whether a file is
 > > pre-compiled, regardless of the extension, you can do
 > >
 > >   texluac -s -o foo.luc foo.lua
 > >   move foo.luc foo.lua
 > >
 > > for testing.
 > >
 > > What I nowadys do in my own programs in order to load large files with
 > > dofile() is to provide a wrapper, let's call it do_file().  The
 > > wrapper takes a file name as an argument.  If the file name has an
 > > extension, then the argument is passed directly to dofile().
 > > If no extension is given, the wrapper looks for foo.luc and foo.lua.
 > > If both are present, the newer one is used.
 > >
 > > I think that this approach can be used by luaotfload too without much
 > > effort.  The filename cache can be large, but the Lua representation
 > > of OTFs can be huge.  Pre-compiling the Lua files helps in both cases.
 > >
 > > Vafa, AFAIR you offered to maintain luaotfload some time ago.  What do
 > > you think about this suggestion?  See the function do_file() below.
 > >
 > > BTW, luaotfload creates files containing absolute paths.  In my
 > > current application it's a pain.  Thus the function below is using
 > > kpathsea in order to locate files.  It's the preferred way to locate
 > > files in TeX Live anyway.
 > 
 > I've never really tried to make font loading faster, but in my
 > experience the bulk of the time spent processing comes from setting
 > kern tables to the demanded size. Loading Minion Pro twenty times
 > with:
 > 
 >   \directlua{T = os.time()}
 >   % Loading the font 20 times.
 >   \directlua{texio.write_nl("TIME: " .. os.time()-T)}
 > 
 > returns "2" if kern tables are set, "0" otherwise. Using pre-compiled
 > Lua files doesn't make that faster (the loading of the cache file is
 > negligible compared to its processing). A font that is lighter on kern
 > tables (e.g. Palatino Linotype) also loads much faster.

Linas tried the function I attached to my previous mail and sent me
the result:

 | Here's what I've got testing one font:
 |
 | Lua size: 13MB
 | Luc size: ~8MB.
 |
 | Time loading lua: ~5.8s.
 | Time loading luc: ~1.5s.

He only loaded the file and didn't process it further.
However, I can't reproduce this at all.  Pre-compiling *all* cached
fonts takes 2.4s normally and 3.6s with an empty filesystem cache.

Loading:

  temp-charissilr.lua  2.4MB  160ms
  temp-charissilr.luc  1.5MB   45ms

Thus, on my system there will be only a noticable difference if many
large fonts are used.  However, I can't neglect Linas' experience,
though I have no idea why it's *that* slow there.
 
 > One solution I've considered but never implemented is to cache fonts
 > at a given size, the one most used by the user (e.g. 10pt); then it
 > would be faster by default, unless loading at a different size (the
 > font could also be cached with several sizes too).

The program I wrote recently had to be optimized for speed because
it's run in the background and people expect a reaction immediately
after pressing a button.  The solution was to load luaotfload and
declare the fonts when the format file is created.  I only need two
fonts (CharisSIL, Regular and Bold) at three different sizes.  Thus,
this approach is possible.  I currently avoid fontspec.  It blows up
the format file significantly and slows down everything.

When the format file is loaded, os.clock() returns 0.4s.  If I remember
correctly, whithout the preloaded fonts it returned 0.25s.  The
CharisSIL fonts and their Lua representations are quite large, much
larger than Latin Modern.  So I'm quite satisfied with the result.
Generating a PDF file takes 0.6 or 0.7 seconds, depending on its
content.  The former version (fontspec and without a dedicated format
file) took at least 1.6s.  I can't determine the total time under
Windows, but it's slower there, especially if it's run the first time.

There is not much text in the PDF files, just a few small tables.
Maybe this is the reason why the font subsetting doesn't take much
time.  The main content of the file are ECG plots created with
\pdfliteral.  BTW, my first attempt was to use Metapost but it was
much too slow.  Processing data with Lua and writing PDF stuff
directly into the PDF file is extremely fast.  It's similar to what
you described in a TUGboat article.  The difference is that your
approach is more Metapost orientated while mine is more PostScript
orientated, just because I don't need a user interface.

 > Of course, reducing cache files to a subset of the glyphs would
 > also make things faster, provided only the relevant parts of the
 > kern table are processed. How much faster it would be, I don't
 > know, though.

What would this subset contain?  The glyphs you're currently using in
a particular document or all the glyphs needed for a particular
language?

Regards,
  Reinhard

-- 
----------------------------------------------------------------------------
Reinhard Kotucha                                      Phone: +49-511-3373112
Marschnerstr. 25
D-30167 Hannover                              mailto:reinhard.kotucha at web.de
----------------------------------------------------------------------------
Microsoft isn't the answer. Microsoft is the question, and the answer is NO.
----------------------------------------------------------------------------


From reinhard.kotucha at web.de  Fri Mar 29 22:55:05 2013
From: reinhard.kotucha at web.de (Reinhard Kotucha)
Date: Fri, 29 Mar 2013 22:55:05 +0100
Subject: [luatex] on some special glyph nodes
In-Reply-To: <20818.8962.936343.495250@zaphod.ms25.net>
References: <514D8477.9000708@arcor.de>
 <20130325083957.GC20418@phare.normalesup.org>
 <20816.52054.12018.121103@zaphod.ms25.net>
 <11zlyapfe6c11$.dlg@nililand.de>
 <20818.8962.936343.495250@zaphod.ms25.net>
Message-ID: <20822.3513.682793.682643@zaphod.ms25.net>

On 2013-03-26 at 23:36:50 +0100, Reinhard Kotucha wrote:

 > On 2013-03-26 at 12:10:11 +0100, Ulrike Fischer wrote:
 > 
 >  > Am Mon, 25 Mar 2013 23:10:30 +0100 schrieb Reinhard Kotucha:
 >  > 
 >  > > What is the best way to achieve this with LuaTeX?  Is there a solution
 >  > > already or do I have to modify the encoding of the Lua representation
 >  > > of the OTF myself?  
 >  > 
 >  > Well regarding the apostroph and ' there is no problem in lualatex:
 >  > The mapping is already done with (faked) ligatures:
 >  > 
 >  > \documentclass[]{scrartcl}
 >  > \usepackage{fontspec}
 >  > \begin{document}
 >  > 
 >  > a'b a^^^^2019b
 >  > 
 >  > \setmainfont{Arial}
 >  > a'b a^^^^2019b
 >  > 
 >  > \setmainfont[Ligatures=TeX]{Arial}
 >  > a'b a^^^^2019b
 >  > 
 >  > \verb+a'b+ 
 >  > 
 >  > \end{document} 
 >  > 
 >  > (You get ' in the verb as the typewriter font doesn't activate the
 >  > tex-ligatures).
 > 
 > Thanks, Ulrike!
 > 
 > Your example works well.  Your font configuration is much simpler than
 > mine.  Seems that I tried too much of a good thing and broke everything.
 > 
 > I'll adapt my .cls file accordingly.

For the record, my mistake was to apply "Ligatures=TeX" globally, i.e.

  \defaultfontfeatures{Ligatures=TeX}

Thus it was used by typewriter fonts as well.

Regards, and thanks again,
  Reinhard

-- 
----------------------------------------------------------------------------
Reinhard Kotucha                                      Phone: +49-511-3373112
Marschnerstr. 25
D-30167 Hannover                              mailto:reinhard.kotucha at web.de
----------------------------------------------------------------------------
Microsoft isn't the answer. Microsoft is the question, and the answer is NO.
----------------------------------------------------------------------------

From zappathustra at free.fr  Fri Mar 29 23:35:54 2013
From: zappathustra at free.fr (Paul Isambert)
Date: Fri, 29 Mar 2013 23:35:54 +0100
Subject: [luatex] [lltx] Speeding up otf lua cache file load
In-Reply-To: <20822.2681.910909.728746@zaphod.ms25.net>
References: <1364047163.852370911@f186.mail.ru>
 <20819.33799.36994.106339@zaphod.ms25.net>
 <1364461758.515408be5ff47@imp.free.fr>
 <20822.2681.910909.728746@zaphod.ms25.net>
Message-ID: <1364596554.5156174aba9bb@imp.free.fr>

Reinhard Kotucha <reinhard.kotucha at web.de> a ?crit:
> On 2013-03-28 at 10:09:18 +0100, Paul Isambert wrote:
>
>  > Reinhard Kotucha <reinhard.kotucha at web.de> a ?crit:
>  > > I copied this thread from [lltx] to [luatex] because I fear that the
>  > > luaotfload maintainer is not listening on [lltx]
>  > >
>  > >
>  > > On 2013-03-23 at 17:59:23 +0400, LS wrote:
>  > >
>  > >  >  Hi, all,
>  > >
>  > >  > I think, that compiling? with otf font would be very quick if
>  > >  > it would be possible? to create a separate
>  > >  > "temp-<font-name>.lua" in a current directory only with the
>  > >  > project used glyphs.  It could be a package
>  > >  > f.e. "glyphstoluahash.sty" witch would do all that. Maybe, on
>  > >  > the first run it would be slow, while it will pick all these
>  > >  > glyphs, but on other runs, if? "temp-<font-name>.lua" exists
>  > >  > in a current directory, it would do nothing, but
>  > >  > &#65279;&#65279;luaotfload > would use this local hash file.
>  > >  > How many different glyphs uses articles, probably less than
>  > >  > 500 from one font. So it would be a huge improvement.
>  > >  >
>  > >  > I see in a otfl-luat-dum.lua that $TEXMFCACHE can be set for
>  > >  > the cache look up, but when I set it to:
>  > >  > TEXMFCACHE=.//;$TEXMFVAR luatex crates a local empty
>  > >  > directories ./luatex-cache/generic. I tried to copy font cache
>  > >  > file in local directory and in a created one, but it still
>  > >  > loads cache files from?
>  > >  > $TEXMFVAR\luatex-cache\generic\fonts\otf\
>  > >  >
>  > >  > So, what do you think about that idea?
>  > >
>  > > A better approach is to pre-compile the Lua files.  A
>  > > pre-compiled Lua file is loaded significantly faster because it
>  > > doesn't have to be parsed.  I observed that loading a .luc file
>  > > is up to 30 times as fast as loading .lua file.
>  > >
>  > > You can try yourself.  Since Lua recognizes whether a file is
>  > > pre-compiled, regardless of the extension, you can do
>  > >
>  > >   texluac -s -o foo.luc foo.lua
>  > >   move foo.luc foo.lua
>  > >
>  > > for testing.
>  > >
>  > > What I nowadys do in my own programs in order to load large files with
>  > > dofile() is to provide a wrapper, let's call it do_file().  The
>  > > wrapper takes a file name as an argument.  If the file name has an
>  > > extension, then the argument is passed directly to dofile().
>  > > If no extension is given, the wrapper looks for foo.luc and foo.lua.
>  > > If both are present, the newer one is used.
>  > >
>  > > I think that this approach can be used by luaotfload too without much
>  > > effort.  The filename cache can be large, but the Lua representation
>  > > of OTFs can be huge.  Pre-compiling the Lua files helps in both cases.
>  > >
>  > > Vafa, AFAIR you offered to maintain luaotfload some time ago.  What do
>  > > you think about this suggestion?  See the function do_file() below.
>  > >
>  > > BTW, luaotfload creates files containing absolute paths.  In my
>  > > current application it's a pain.  Thus the function below is using
>  > > kpathsea in order to locate files.  It's the preferred way to locate
>  > > files in TeX Live anyway.
>  >
>  > I've never really tried to make font loading faster, but in my
>  > experience the bulk of the time spent processing comes from setting
>  > kern tables to the demanded size. Loading Minion Pro twenty times
>  > with:
>  >
>  >   \directlua{T = os.time()}
>  >   % Loading the font 20 times.
>  >   \directlua{texio.write_nl("TIME: " .. os.time()-T)}
>  >
>  > returns "2" if kern tables are set, "0" otherwise. Using pre-compiled
>  > Lua files doesn't make that faster (the loading of the cache file is
>  > negligible compared to its processing). A font that is lighter on kern
>  > tables (e.g. Palatino Linotype) also loads much faster.
>
> Linas tried the function I attached to my previous mail and sent me
> the result:
>
>  | Here's what I've got testing one font:
>  |
>  | Lua size: 13MB
>  | Luc size: ~8MB.
>  |
>  | Time loading lua: ~5.8s.
>  | Time loading luc: ~1.5s.
>
> He only loaded the file and didn't process it further.
> However, I can't reproduce this at all.  Pre-compiling *all* cached
> fonts takes 2.4s normally and 3.6s with an empty filesystem cache.
>
> Loading:
>
>   temp-charissilr.lua  2.4MB  160ms
>   temp-charissilr.luc  1.5MB   45ms
>
> Thus, on my system there will be only a noticable difference if many
> large fonts are used.  However, I can't neglect Linas' experience,
> though I have no idea why it's *that* slow there.

I hadn't tried large fonts; I've just tested Gabriola, and indeed it
runs faster when pre-compiled, although Linas's figures are quite
surprising.

>  > One solution I've considered but never implemented is to cache fonts
>  > at a given size, the one most used by the user (e.g. 10pt); then it
>  > would be faster by default, unless loading at a different size (the
>  > font could also be cached with several sizes too).
>
> The program I wrote recently had to be optimized for speed because
> it's run in the background and people expect a reaction immediately
> after pressing a button.  The solution was to load luaotfload and
> declare the fonts when the format file is created.  I only need two
> fonts (CharisSIL, Regular and Bold) at three different sizes.  Thus,
> this approach is possible.  I currently avoid fontspec.  It blows up
> the format file significantly and slows down everything.
>
> When the format file is loaded, os.clock() returns 0.4s.  If I remember
> correctly, whithout the preloaded fonts it returned 0.25s.  The
> CharisSIL fonts and their Lua representations are quite large, much
> larger than Latin Modern.  So I'm quite satisfied with the result.
> Generating a PDF file takes 0.6 or 0.7 seconds, depending on its
> content.  The former version (fontspec and without a dedicated format
> file) took at least 1.6s.  I can't determine the total time under
> Windows, but it's slower there, especially if it's run the first time.

Dumping formats in order to save time is probably a very good
solution, even though not very widespread as far as I can tell (I
myself don't use it, but I'm constantly modifying the files I use...).

> There is not much text in the PDF files, just a few small tables.
> Maybe this is the reason why the font subsetting doesn't take much
> time.  The main content of the file are ECG plots created with
> \pdfliteral.  BTW, my first attempt was to use Metapost but it was
> much too slow.  Processing data with Lua and writing PDF stuff
> directly into the PDF file is extremely fast.  It's similar to what
> you described in a TUGboat article.  The difference is that your
> approach is more Metapost orientated while mine is more PostScript
> orientated, just because I don't need a user interface.

Nice to know that article rang some bells. I think there's a lot to do
in that area, and I'll even bet the next new graphic kid on the TeX
block will be in Lua.

>  > Of course, reducing cache files to a subset of the glyphs would
>  > also make things faster, provided only the relevant parts of the
>  > kern table are processed. How much faster it would be, I don't
>  > know, though.
>
> What would this subset contain?  The glyphs you're currently using in
> a particular document or all the glyphs needed for a particular
> language?

I don't know (probably the latter), it was the OP's idea. My idea of
saving time is to stop compiling and checking the PDF after every sentence. :)

Best,
Paul

From reinhard.kotucha at web.de  Sat Mar 30 03:47:12 2013
From: reinhard.kotucha at web.de (Reinhard Kotucha)
Date: Sat, 30 Mar 2013 03:47:12 +0100
Subject: [luatex] [lltx] Speeding up otf lua cache file load
In-Reply-To: <1364596554.5156174aba9bb@imp.free.fr>
References: <1364047163.852370911@f186.mail.ru>
 <20819.33799.36994.106339@zaphod.ms25.net>
 <1364461758.515408be5ff47@imp.free.fr>
 <20822.2681.910909.728746@zaphod.ms25.net>
 <1364596554.5156174aba9bb@imp.free.fr>
Message-ID: <20822.21040.576325.748460@zaphod.ms25.net>

On 2013-03-29 at 23:35:54 +0100, Paul Isambert wrote:

 > Dumping formats in order to save time is probably a very good
 > solution, even though not very widespread as far as I can tell (I
 > myself don't use it, but I'm constantly modifying the files I use...).

I could do it because users can't change things anyway.  In medical
environments they aren't even allowed to install software themselves
and the IT departments will not change anything because they don't
want to be responsible if somethings goes wrong.

In general it's quite problematic to provide dedicated format files.
Suppose you've written a LaTeX .cls file for your students in order to
write their theses.  Providing a dedicated format file would speed up
things significantly, especially if packages like tikz or pgfplots are
used, which load zillions of files.

But format files are not portable among different versions of a
particular program, a format file created under TeX Live 2012 will not
work under TeX Live 2013.  The only reasonable way to distribute such
a .cls file is to provide a .zip file which can be extracted either in
TEXMFLOCAL or in TEXMFHOME.

Font preloading makes sense for particular documents.  But the
portability issue of format files remains.

 > > There is not much text in the PDF files, just a few small tables.
 > > Maybe this is the reason why the font subsetting doesn't take much
 > > time.  The main content of the file are ECG plots created with
 > > \pdfliteral.  BTW, my first attempt was to use Metapost but it was
 > > much too slow.  Processing data with Lua and writing PDF stuff
 > > directly into the PDF file is extremely fast.  It's similar to what
 > > you described in a TUGboat article.  The difference is that your
 > > approach is more Metapost orientated while mine is more PostScript
 > > orientated, just because I don't need a user interface.
 > 
 > Nice to know that article rang some bells. 

I'm absolutely convinced that many readers enjoyed this article.  Of
course, I was interested even more because I was doing something
similar already.

 > I think there's a lot to do in that area, and I'll even bet the
 > next new graphic kid on the TeX block will be in Lua.

The main problem with our approach is that there is no graphics state
stack.  Without a graphics state stack there is no currentpoint and
without a currentpoint there is no rmoveto.  It's easy to turn a
circle into an ellipse by modifying the transformation matrix, but
it's useless because the shape of the pen is distorted too.

In order to use the full power of PostScript, it makes more sense to
use Escrito.  It's probably a bit slower than our approach but it
dosn't have all these nasty limitations.

I'm not sure whether a "new graphic kid" will solve our problems.
Taco provided Escrito already.  It currently supports PS Level 1 only,
supporting newer PS levels is planned.  

Regards,
  Reinhard

-- 
----------------------------------------------------------------------------
Reinhard Kotucha                                      Phone: +49-511-3373112
Marschnerstr. 25
D-30167 Hannover                              mailto:reinhard.kotucha at web.de
----------------------------------------------------------------------------
Microsoft isn't the answer. Microsoft is the question, and the answer is NO.
----------------------------------------------------------------------------

From zappathustra at free.fr  Sat Mar 30 10:46:41 2013
From: zappathustra at free.fr (Paul Isambert)
Date: Sat, 30 Mar 2013 10:46:41 +0100
Subject: [luatex] [lltx] Speeding up otf lua cache file load
In-Reply-To: <20822.21040.576325.748460@zaphod.ms25.net>
References: <1364047163.852370911@f186.mail.ru>
 <20819.33799.36994.106339@zaphod.ms25.net>
 <1364461758.515408be5ff47@imp.free.fr>
 <20822.2681.910909.728746@zaphod.ms25.net>
 <1364596554.5156174aba9bb@imp.free.fr>
 <20822.21040.576325.748460@zaphod.ms25.net>
Message-ID: <1364636801.5156b48122419@imp.free.fr>

Reinhard Kotucha <reinhard.kotucha at web.de> a ?crit:
> On 2013-03-29 at 23:35:54 +0100, Paul Isambert wrote:
>
>  > Dumping formats in order to save time is probably a very good
>  > solution, even though not very widespread as far as I can tell (I
>  > myself don't use it, but I'm constantly modifying the files I use...).
>
> I could do it because users can't change things anyway.  In medical
> environments they aren't even allowed to install software themselves
> and the IT departments will not change anything because they don't
> want to be responsible if somethings goes wrong.
>
> In general it's quite problematic to provide dedicated format files.
> Suppose you've written a LaTeX .cls file for your students in order to
> write their theses.  Providing a dedicated format file would speed up
> things significantly, especially if packages like tikz or pgfplots are
> used, which load zillions of files.
>
> But format files are not portable among different versions of a
> particular program, a format file created under TeX Live 2012 will not
> work under TeX Live 2013.  The only reasonable way to distribute such
> a .cls file is to provide a .zip file which can be extracted either in
> TEXMFLOCAL or in TEXMFHOME.
>
> Font preloading makes sense for particular documents.  But the
> portability issue of format files remains.

That decided me: I've dumped my usual files into a format; I'd never
really done it because, besides changing my files a lot, I didn't
really know how to create a format in TeXLive (a simple shell script
is a safeguard against my forgetting again), and I knew Lua code
wasn't dumped so I had to tweak all Lua material so that it is both
loaded and stored into \everyjob.

The gain in time is quite wonderful. I'm even thinking about writing a
format for every document, with the relevant fonts preloaded; again a
simple script could automate that easily.

>  > > There is not much text in the PDF files, just a few small tables.
>  > > Maybe this is the reason why the font subsetting doesn't take much
>  > > time.  The main content of the file are ECG plots created with
>  > > \pdfliteral.  BTW, my first attempt was to use Metapost but it was
>  > > much too slow.  Processing data with Lua and writing PDF stuff
>  > > directly into the PDF file is extremely fast.  It's similar to what
>  > > you described in a TUGboat article.  The difference is that your
>  > > approach is more Metapost orientated while mine is more PostScript
>  > > orientated, just because I don't need a user interface.
>  >
>  > Nice to know that article rang some bells.
>
> I'm absolutely convinced that many readers enjoyed this article.  Of
> course, I was interested even more because I was doing something
> similar already.
>
>  > I think there's a lot to do in that area, and I'll even bet the
>  > next new graphic kid on the TeX block will be in Lua.
>
> The main problem with our approach is that there is no graphics state
> stack.  Without a graphics state stack there is no currentpoint and
> without a currentpoint there is no rmoveto.

Actually, in the code I'd written which gave me the basic ideas for
the article, all points could be relative, so that paths could be
reused, and rmoveto was a basic function. Coordinates were made
absolute only when writing to the PDF.

>                                              It's easy to turn a
> circle into an ellipse by modifying the transformation matrix, but
> it's useless because the shape of the pen is distorted too.

Transformations were dealt with in Lua (modifying paths), not with the
transformation matrix, so I did not encounter that problem.

On the other hand, my pen had no shape anyway, because pen shapes were
way beyond my programming skills. That's one of the reasons why I
dropped the project (there were just too many things I couldn't do; I
even tried to tackle 3D, and that definitely killed me).

> In order to use the full power of PostScript, it makes more sense to
> use Escrito.  It's probably a bit slower than our approach but it
> dosn't have all these nasty limitations.
>
> I'm not sure whether a "new graphic kid" will solve our problems.
> Taco provided Escrito already.  It currently supports PS Level 1 only,
> supporting newer PS levels is planned.

Since everything boils down to Lua code itself producing PDF code, I
don't see why an interface in Lua couldn't be achieved, all the more
as it would integrate nicely with the rest of LuaTeX. Note that I've
never really done anything in PS, so to me it's just yet another weird
language I'd gladly trade for our nice little Lua.

Best,
Paul

From Arno.Trautmann at gmx.de  Sat Mar 30 18:15:01 2013
From: Arno.Trautmann at gmx.de (Arno Trautmann)
Date: Sat, 30 Mar 2013 18:15:01 +0100
Subject: [luatex] [lltx] Speeding up otf lua cache file load
In-Reply-To: <1364636801.5156b48122419@imp.free.fr>
References: <1364047163.852370911@f186.mail.ru>
 <20819.33799.36994.106339@zaphod.ms25.net>
 <1364461758.515408be5ff47@imp.free.fr>
 <20822.2681.910909.728746@zaphod.ms25.net>
 <1364596554.5156174aba9bb@imp.free.fr>
 <20822.21040.576325.748460@zaphod.ms25.net>
 <1364636801.5156b48122419@imp.free.fr>
Message-ID: <51571D95.2030602@gmx.de>

Hi all,

Paul Isambert wrote:
> Reinhard Kotucha <reinhard.kotucha at web.de> a ?crit:
>> On 2013-03-29 at 23:35:54 +0100, Paul Isambert wrote:
>>
>>   > Dumping formats in order to save time is probably a very good
>>   > solution, even though not very widespread as far as I can tell (I
>>   > myself don't use it, but I'm constantly modifying the files I use...).
>>
>> I could do it because users can't change things anyway.  In medical
>> environments they aren't even allowed to install software themselves
>> and the IT departments will not change anything because they don't
>> want to be responsible if somethings goes wrong.
>>
>> In general it's quite problematic to provide dedicated format files.
>> Suppose you've written a LaTeX .cls file for your students in order to
>> write their theses.  Providing a dedicated format file would speed up
>> things significantly, especially if packages like tikz or pgfplots are
>> used, which load zillions of files.
>>
>> But format files are not portable among different versions of a
>> particular program, a format file created under TeX Live 2012 will not
>> work under TeX Live 2013.  The only reasonable way to distribute such
>> a .cls file is to provide a .zip file which can be extracted either in
>> TEXMFLOCAL or in TEXMFHOME.
>>
>> Font preloading makes sense for particular documents.  But the
>> portability issue of format files remains.
>
> That decided me: I've dumped my usual files into a format; I'd never
> really done it because, besides changing my files a lot, I didn't
> really know how to create a format in TeXLive (a simple shell script
> is a safeguard against my forgetting again), and I knew Lua code
> wasn't dumped so I had to tweak all Lua material so that it is both
> loaded and stored into \everyjob.
>
> The gain in time is quite wonderful. I'm even thinking about writing a
> format for every document, with the relevant fonts preloaded; again a
> simple script could automate that easily.

That's actually an ?old? dream of mine: I'd like to be able to 
automatically produce a format for any given document (up to 
\begin{document}) which is changed if and only if the preamble is 
changed. LuaTeX seems to be the simplest way to do this via some Lua 
action. However, so far I wasn't even able to produce a format dump on 
LuaTeX. (I'm trying to do this by now using the myformat.ltx and 
mylatexformat.ltx, but they produce errors when used with LuaTeX. I 
still have a lot to learn for producing formats, I guess ?)

>>   > > There is not much text in the PDF files, just a few small tables.
>>   > > Maybe this is the reason why the font subsetting doesn't take much
>>   > > time.  The main content of the file are ECG plots created with
>>   > > \pdfliteral.  BTW, my first attempt was to use Metapost but it was
>>   > > much too slow.  Processing data with Lua and writing PDF stuff
>>   > > directly into the PDF file is extremely fast.  It's similar to what
>>   > > you described in a TUGboat article.  The difference is that your
>>   > > approach is more Metapost orientated while mine is more PostScript
>>   > > orientated, just because I don't need a user interface.
>>   >
>>   > Nice to know that article rang some bells.
>>
>> I'm absolutely convinced that many readers enjoyed this article.  Of
>> course, I was interested even more because I was doing something
>> similar already.

I was very interested, too, and used the functions provided some times.

cheers
Arno

From reinhard.kotucha at web.de  Sat Mar 30 23:26:22 2013
From: reinhard.kotucha at web.de (Reinhard Kotucha)
Date: Sat, 30 Mar 2013 23:26:22 +0100
Subject: [luatex] [lltx] Speeding up otf lua cache file load
In-Reply-To: <51571D95.2030602@gmx.de>
References: <1364047163.852370911@f186.mail.ru>
 <20819.33799.36994.106339@zaphod.ms25.net>
 <1364461758.515408be5ff47@imp.free.fr>
 <20822.2681.910909.728746@zaphod.ms25.net>
 <1364596554.5156174aba9bb@imp.free.fr>
 <20822.21040.576325.748460@zaphod.ms25.net>
 <1364636801.5156b48122419@imp.free.fr> <51571D95.2030602@gmx.de>
Message-ID: <20823.26254.359455.543660@zaphod.ms25.net>

On 2013-03-30 at 18:15:01 +0100, Arno Trautmann wrote:

 > That's actually an ?old? dream of mine: I'd like to be able to 
 > automatically produce a format for any given document (up to 
 > \begin{document}) which is changed if and only if the preamble is 
 > changed. LuaTeX seems to be the simplest way to do this via some Lua 
 > action. However, so far I wasn't even able to produce a format dump on 
 > LuaTeX. (I'm trying to do this by now using the myformat.ltx and 
 > mylatexformat.ltx, but they produce errors when used with LuaTeX. I 
 > still have a lot to learn for producing formats, I guess ?)

Hi Arno,
copy lualatex.ini to your current working directory, rename it to
myformat.ini and run

  luatex -ini --progname=lualatex myformat.ini

Create a symlink myformat -> luatex in the bin directory.

If this works, add your stuff to myformat.ini and create the format
file again.

Regards,
  Reinhard

-- 
----------------------------------------------------------------------------
Reinhard Kotucha                                      Phone: +49-511-3373112
Marschnerstr. 25
D-30167 Hannover                              mailto:reinhard.kotucha at web.de
----------------------------------------------------------------------------
Microsoft isn't the answer. Microsoft is the question, and the answer is NO.
----------------------------------------------------------------------------


From Arno.Trautmann at gmx.de  Sat Mar 30 23:44:12 2013
From: Arno.Trautmann at gmx.de (Arno Trautmann)
Date: Sat, 30 Mar 2013 23:44:12 +0100
Subject: [luatex] [lltx] Speeding up otf lua cache file load
In-Reply-To: <20823.26254.359455.543660@zaphod.ms25.net>
References: <1364047163.852370911@f186.mail.ru>
 <20819.33799.36994.106339@zaphod.ms25.net>
 <1364461758.515408be5ff47@imp.free.fr>
 <20822.2681.910909.728746@zaphod.ms25.net>
 <1364596554.5156174aba9bb@imp.free.fr>
 <20822.21040.576325.748460@zaphod.ms25.net>
 <1364636801.5156b48122419@imp.free.fr> <51571D95.2030602@gmx.de>
 <20823.26254.359455.543660@zaphod.ms25.net>
Message-ID: <51576ABC.2010903@gmx.de>

Hi Reinhard,

Reinhard Kotucha wrote:
> On 2013-03-30 at 18:15:01 +0100, Arno Trautmann wrote:
>
>   > That's actually an ?old? dream of mine: I'd like to be able to
>   > automatically produce a format for any given document (up to
>   > \begin{document}) which is changed if and only if the preamble is
>   > changed. LuaTeX seems to be the simplest way to do this via some Lua
>   > action. However, so far I wasn't even able to produce a format dump on
>   > LuaTeX. (I'm trying to do this by now using the myformat.ltx and
>   > mylatexformat.ltx, but they produce errors when used with LuaTeX. I
>   > still have a lot to learn for producing formats, I guess ?)
>
> Hi Arno,
> copy lualatex.ini to your current working directory, rename it to
> myformat.ini and run
>
>    luatex -ini --progname=lualatex myformat.ini
>
> Create a symlink myformat -> luatex in the bin directory.
>
> If this works, add your stuff to myformat.ini and create the format
> file again.

That works so far, but it's not flexible at all. What I want is to load 
a format, load additional definitions, and then dump everything. 
However, I just found out that this is a known bug, discussed here, on 
SX and there's also a tracker item:

http://tug.org/pipermail/luatex/2012-January/003375.html
http://tex.stackexchange.com/questions/46672/custom-luatex-format-file
http://tracker.luatex.org/view.php?id=746

As the guys write there, it works with pdftex (and also XeTeX, for me) 
but not with LuaTeX. I also tested with 0.74 just to be sure, but the 
error is still present.

cheers
Arno

From zappathustra at free.fr  Sat Mar 30 23:28:58 2013
From: zappathustra at free.fr (Paul Isambert)
Date: Sat, 30 Mar 2013 23:28:58 +0100
Subject: [luatex] [lltx] Speeding up otf lua cache file load
In-Reply-To: <51571D95.2030602@gmx.de>
References: <1364047163.852370911@f186.mail.ru>
 <20819.33799.36994.106339@zaphod.ms25.net>
 <1364461758.515408be5ff47@imp.free.fr>
 <20822.2681.910909.728746@zaphod.ms25.net>
 <1364596554.5156174aba9bb@imp.free.fr>
 <20822.21040.576325.748460@zaphod.ms25.net>
 <1364636801.5156b48122419@imp.free.fr> <51571D95.2030602@gmx.de>
Message-ID: <1364682538.5157672ac94d1@imp.free.fr>

Arno Trautmann <Arno.Trautmann at gmx.de> a ?crit:
> Hi all,
>
> Paul Isambert wrote:
> > Reinhard Kotucha <reinhard.kotucha at web.de> a ?crit:
> >> On 2013-03-29 at 23:35:54 +0100, Paul Isambert wrote:
> >>
> >>   > Dumping formats in order to save time is probably a very good
> >>   > solution, even though not very widespread as far as I can tell (I
> >>   > myself don't use it, but I'm constantly modifying the files I use...).
> >>
> >> I could do it because users can't change things anyway.  In medical
> >> environments they aren't even allowed to install software themselves
> >> and the IT departments will not change anything because they don't
> >> want to be responsible if somethings goes wrong.
> >>
> >> In general it's quite problematic to provide dedicated format files.
> >> Suppose you've written a LaTeX .cls file for your students in order to
> >> write their theses.  Providing a dedicated format file would speed up
> >> things significantly, especially if packages like tikz or pgfplots are
> >> used, which load zillions of files.
> >>
> >> But format files are not portable among different versions of a
> >> particular program, a format file created under TeX Live 2012 will not
> >> work under TeX Live 2013.  The only reasonable way to distribute such
> >> a .cls file is to provide a .zip file which can be extracted either in
> >> TEXMFLOCAL or in TEXMFHOME.
> >>
> >> Font preloading makes sense for particular documents.  But the
> >> portability issue of format files remains.
> >
> > That decided me: I've dumped my usual files into a format; I'd never
> > really done it because, besides changing my files a lot, I didn't
> > really know how to create a format in TeXLive (a simple shell script
> > is a safeguard against my forgetting again), and I knew Lua code
> > wasn't dumped so I had to tweak all Lua material so that it is both
> > loaded and stored into \everyjob.
> >
> > The gain in time is quite wonderful. I'm even thinking about writing a
> > format for every document, with the relevant fonts preloaded; again a
> > simple script could automate that easily.
>
> That's actually an &#8220;old&#8221; dream of mine: I'd like to be able to
> automatically produce a format for any given document (up to
> \begin{document}) which is changed if and only if the preamble is
> changed. LuaTeX seems to be the simplest way to do this via some Lua
> action. However, so far I wasn't even able to produce a format dump on
> LuaTeX. (I'm trying to do this by now using the myformat.ltx and
> mylatexformat.ltx, but they produce errors when used with LuaTeX. I
> still have a lot to learn for producing formats, I guess &#8230;)

Here's what I've done; since I'm quite lame with shell scripts, and
since everything is executed from my editor (Vim) anyway, it was just
simpler for me to script said editor; it's less useful to anybody
interested, but the code's quite simple so it's easily adapted,
provided one uses a powerful enough editor (the real Vim code is at
the end of this message; here I just describe what the code does --
it has just occurred to me, by the way, that I could have done the
whole thing in Lua, since Vim can be scripted with Lua):

When compiling, the following happens:

1. If <jobname>.fmt already exists in the current directory, compile
   with "luatex fmt=<jobname>.fmt <jobname>.tex".
2. If the first non-blank line of <jobname>.tex isn't \format, compile
   with the default luatex format or whatever else suits your need.
3. If none of the above is true (i.e. <jobname>.fmt doesn't exist and
   the file begins with \format), then:
   a) Create a file <jobname>.ini containing whatever basic format you
   use, plus the material between \format and \endformat in the
   current file, plus a few other things, like "\long\def\format#1\endformat{}",
   so that the material isn't processed again when the file is really
   compiled.
   b) Create the format with "luatex --ini <jobname>.ini".
   c) Deletes <jobname>.ini to avoid garbage.
   d) Compile with "luatex --fmt=<jobname>.fmt <jobname>.tex".

Point 1 could be changed so that the format is recreated if the
material between \format and \endformat has been modified.

Well, well, that's good fun, but actually I just won half a second (I
don't load TikZ, mind you), and most of the time is spent processing
good ol' TeX macros (which I tend to write pretty thick, admittedly)...

(My saying above that the gain in time was wonderful was due to the
fact that I'd only tested dummy documents with heavy fonts; now with
normal fonts and long documents, it's not so wonderful anymore...)


> >>   > > There is not much text in the PDF files, just a few small tables.
> >>   > > Maybe this is the reason why the font subsetting doesn't take much
> >>   > > time.  The main content of the file are ECG plots created with
> >>   > > \pdfliteral.  BTW, my first attempt was to use Metapost but it was
> >>   > > much too slow.  Processing data with Lua and writing PDF stuff
> >>   > > directly into the PDF file is extremely fast.  It's similar to what
> >>   > > you described in a TUGboat article.  The difference is that your
> >>   > > approach is more Metapost orientated while mine is more PostScript
> >>   > > orientated, just because I don't need a user interface.
> >>   >
> >>   > Nice to know that article rang some bells.
> >>
> >> I'm absolutely convinced that many readers enjoyed this article.  Of
> >> course, I was interested even more because I was doing something
> >> similar already.
>
> I was very interested, too, and used the functions provided some times.

Thank you for the remark. Time for me to start a cult :)

Best,
Paul

" Vim script code:

function! MakeFormat ()
  " <jobname>.ini
  let ini  = expand("%:r") . '.ini'
  " <jobname>.fmt
  let fmt  = expand("%:r") . '.fmt'

  " Format doesn't exist
  if !len(glob(fmt))

    "  Buffer begins with \format
    if getline(nextnonblank(1)) == '\format'

      " Base format to be loaded.
      let data = ['\let\DUMP\dump \let\dump\relax \input pitex']
      call add(data, '')

      " Gathers material between \format and \endformat
      let l = nextnonblank(1) + 1
      let L = getline(l)
      while L != '\endformat'
        call add(data, L)
        let l += 1
        let L = getline(l)
      endwhile
      call add(data, '')
      call add(data, '\long\def\format#1\endformat{} \let\dump\DUMP
\let\DUMP\undefined \dump')

      " Writes <jobname>.ini
      call writefile(data, ini)

      " Dumps format
      echo 'Creating format ' . fmt
      call system('luatex --ini ' . ini)

      " Deletes <jobname>.ini
      call delete(ini)

    else " No special format
      let fmt = 'luatex'
    endif
  endif

  " Compiles
  echo 'Compiling'
  call system('luatex --fmt=' . fmt . ' ' . expand('%:r'))
endfunction

From reinhard.kotucha at web.de  Sun Mar 31 06:53:05 2013
From: reinhard.kotucha at web.de (Reinhard Kotucha)
Date: Sun, 31 Mar 2013 06:53:05 +0200
Subject: [luatex] [lltx] Speeding up otf lua cache file load
In-Reply-To: <1364636801.5156b48122419@imp.free.fr>
References: <1364047163.852370911@f186.mail.ru>
 <20819.33799.36994.106339@zaphod.ms25.net>
 <1364461758.515408be5ff47@imp.free.fr>
 <20822.2681.910909.728746@zaphod.ms25.net>
 <1364596554.5156174aba9bb@imp.free.fr>
 <20822.21040.576325.748460@zaphod.ms25.net>
 <1364636801.5156b48122419@imp.free.fr>
Message-ID: <20823.49457.218019.399808@zaphod.ms25.net>

On 2013-03-30 at 10:46:41 +0100, Paul Isambert wrote:

 > > circle into an ellipse by modifying the transformation matrix, but
 > > it's useless because the shape of the pen is distorted too.
 > 
 > Transformations were dealt with in Lua (modifying paths), not with the
 > transformation matrix, so I did not encounter that problem.
 > 
 > On the other hand, my pen had no shape anyway, because pen shapes were
 > way beyond my programming skills. That's one of the reasons why I
 > dropped the project (there were just too many things I couldn't do; I
 > even tried to tackle 3D, and that definitely killed me).

I'm not talking about the pen shapes you know from Metapost.  Simply
create a path describing a square.  Apply "1 0 0 5 0 0 cm" and you'll
see that vertical lines are thicker than horizontal lines.
 
 > Since everything boils down to Lua code itself producing PDF code, I
 > don't see why an interface in Lua couldn't be achieved, all the more
 > as it would integrate nicely with the rest of LuaTeX. Note that I've
 > never really done anything in PS, so to me it's just yet another weird
 > language I'd gladly trade for our nice little Lua.

I don't insist on PostScript syntax.  But if you want a fully fledged
graphics interface, you need at least PostScript's functionality.  

Regards,
  Reinhard

-- 
----------------------------------------------------------------------------
Reinhard Kotucha                                      Phone: +49-511-3373112
Marschnerstr. 25
D-30167 Hannover                              mailto:reinhard.kotucha at web.de
----------------------------------------------------------------------------
Microsoft isn't the answer. Microsoft is the question, and the answer is NO.
----------------------------------------------------------------------------

