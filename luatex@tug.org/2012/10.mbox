From mailing_list at arcor.de  Wed Oct 10 19:17:11 2012
From: mailing_list at arcor.de (Stephan Hennig)
Date: Wed, 10 Oct 2012 19:17:11 +0200
Subject: [luatex] [lltx] spell checking TeX files
In-Reply-To: <506C7EAC.3030009@arcor.de>
References: <CALBOmsZCZujU9DRYt8DxK6A=r8G-CbUykaZfnbctib7dEEcE9A@mail.gmail.com>
 <506AF3D2.9080109@users.sourceforge.net> <506C7EAC.3030009@arcor.de>
Message-ID: <5075AD97.8070401@arcor.de>

[Full quote, because I mistakenly moved the discussion to the lualatex
list.  Moving now to luatex at tug.org, please reply there.  Sorry for the
multiple mails.]


Am 03.10.2012 20:06, schrieb Stephan Hennig:
> [CC'ing lualatex-dev at tug.org and tex-hyphen at tug.org,
> since spell checking is of international concern.
> Please reply to lualatex-dev at tug.org.]
> 
> Am 02.10.2012 16:01, schrieb Pander:
> 
>> You can mention that the Dutch patterns are being processed by OpenTaal.
>> They are put on hold since we are working very hard on the next version
>> of spell checking at the moment.
> 
> You're speaking about spell checking, not hyphenation, right?  Could you
> please elaborate a bit?
> 
> I've recently thought about spell checking of TeX documents and came up
> with the following idea that requires LuaTeX's node list manipulations:
> 
> 1. In the first LuaTeX run, write all typeset text into a UTF-8 encoded
> text file.
> 
> 2. Feed that text file to your favourite spell checker, generating a
> list of bad words.
> 
> 3. In the second run, LuaTeX reads-in the list of bad words and puts a
> red wavy line under all bad words in the document.  A possible approach
> is to mark nodes corresponding to a bad word in pre_linebreak_filter
> with an attribute so that they can be identified later.
> 
> 
> Pro:
> 
> + The approach is spell checking application agnostic.  It only
>   requires that the spell checker can output a list of bad words
>   (aspell and hunspell can do so).
> 
> + The spell checker doesn't need to know TeX syntax.  Even though,
>   aspell as well as hunspell can cope with TeX source files, they
>   cannot spell check TeX generated text that is not explicitly in
>   the source file.  Additionally, commercial spell checkers likely
>   do not know about TeX (such as Duden Korrektor, a spell checker
>   for the German language).
> 
> + You can optionally use multiple spell checkers at once.
> 
> + Point'n'click people have their red wavy lines in the PDF, while
>   others can still just look at the list of bad words.
> 
> + The approach might work with Grammar checkers as well.  Don't know.
> 
> 
> Cons:
> 
> - Red wavy lines are only marketing ...
> 
> 
> I have attached a small package totext (license is LPPL) trying to
> implement step 1 outlined above.  To test it, add the line
> 
>   \usepackage{totext}
> 
> to a LaTeX file and process that with LuaLaTeX.  The package should work
> with other formats as well, but then users need to adapt file
> totext.sty, which consists of only 2 lines.  During the TeX run, a file
> <jobname>.txt is created that should contain most of the text of the TeX
> output.  The output is broken to a fixed line length, that is currently
> hard-coded to 72 characters per line (can be adjusted on ln. 164 in
> totext.lua).  Attached is file sample2e.txt, which contains the output
> of a compile run of sample2e.tex.
> 
> The package currently hooks into the pre_linebreak_filter and
> hpack_filter callbacks.  I'm not sure what the best callbacks are, but
> to avoid irritating the spell checker words should preferably not be
> hyphenated in the text file.  The red wavy lines, on the other hand,
> need to be inserted after all text is laid-out on the page (perhaps in
> buildpage_filter?).

The code is now available on GitHub,
<URL:https://github.com/hennigs/spelling>.


> What doesn't work:
> 
> * The package currently doesn't deal with mathematics.

See issue #8.


> * Ligatures are not resolved into their constituent letters.

I've added a code point substitution feature.  The most important latin
ligatures, like '?', '?' etc., are now translated into 'ff', 'fi' etc.
to help the incapable spell-checker.  The translation table is currently
hard-coded.  A TeX interface for fine-grained substitution control would
be nice, e.g., for switching of substitution of long s (?) by s.
Contributions are warmly welcome, especially those for the TeX parts.
I'd love to see issues #1 and #2 resolved soon to make a first upload to
CTAN.


> * Footnote marks are missing in the text.

That works now.


> * It fails miserably on the \LaTeX logo.  The package adopted the
>   definition of a word from the chickenize package (start with a
>   glyph node, end with a node whose id is neither of 37 glyph,
>   7 disc, 11 kern, 22 ???).  It seems like more nodes have to be
>   considered as being possible parts of a word.

The definition of the LaTeX logo contains a \vbox.  That is best
repaired by providing a definition of the Logo without a \vbox within a
word (the TeX logo does without), see issue #12.

I'm on the road for the rest of the week and perhaps a bit less
responsive.  Oh, and did I mention that I'd be happy to hand-over
maintenance of this package to someone else?  Check it out!

Happy TeXing,
Stephan Hennig


From jfbu at free.fr  Fri Oct 12 22:01:30 2012
From: jfbu at free.fr (jfbu)
Date: Fri, 12 Oct 2012 22:01:30 +0200
Subject: [luatex] a problem with luatexUmathcode
Message-ID: <69E13E61-0931-45AA-8F1F-F9728048E603@free.fr>

Hi,  [I just posted on c.t.tex, but figured here could be better]

the following code gives dissimilar results for XeTeX 
and LuaLatex. 

\documentclass{article} 
\usepackage{ifxetex} 
\begin{document} 
\ifxetex 

\the\mathcode`\-           % 8704="2200 
\the\XeTeXmathcodenum`\-   % 37748736=2.2^{24} + 2.2^{21} + 0 

\else 

\the\mathcode`\-           % 8704 = "2200 

\the\luatexUmathcodenum`\- % 8704, if interpreted as Unicode 
                           % mathcode 0.2^{24} + 0.2^{21} + 8704 
\fi 
\end{document} 

This is a bit strange. The problem with this behavior of LuaLaTeX 
is that I need to know *in advance* if I have to interpret the 
number resulting from \luatexUmathcodenum as a legacy mathcode 
or as a Unicode mathcode ! ... 

best wishes, 
Jean-Francois

From mail at patrickbergner.de  Fri Oct 12 18:43:45 2012
From: mail at patrickbergner.de (Patrick Bergner)
Date: Fri, 12 Oct 2012 18:43:45 +0200
Subject: [luatex]  Interfere with page breaking to balance pages
Message-ID: <507848C1.9000204@patrickbergner.de>

Hi folks,

I'm currently working on a project to automate typical manual
typesetting tasks using LuaTeX. One of these is balancing pages, i.e.,
making the left and right side of a typical double page in a book equal
in length.

Manually this is usually achieved by using a negative value for
\enlargethispage on the left side of a double page.

Now I'm trying to replicate this approach with Lua. What I (generally)
need is the following:
- Get a callback once TeX has all the material to output a page (or
double page).
- Be able to work with the to be placed page content, i.e., getting its
contents/dimensions _and_ be able to move things around between pages.

If this general approach is unfeasible a more problem specific one will
help too (something like playing with the textheight to replicate a
negative \enlargethispage).

What I tried so far:
1) buildpage_filter
The LuaTeX manual states this hook can be used "to do specialized
manipulation of the page building stage like imposition or column
balancing.". Sounds promising. ;-)

What I understood so far: For every page a callback for this hook is
called multiple times and the information about the stage of the page
building process is stored in the "extrainfo" string argument. To get to
the actual content of the page one has to use the virtual tables in
tex.lists, e.g., tex.lists.page_head.

Unfortunately I could not find a combination of page building phase and
tex.lists table that serves me the content of a page once and only once
before it is output.

2) pre_output_filter
A callback for this hook is served with a node pointer, like in
pre_linebreak_filter, so no need for tex.lists. Sadly I was unable to
get a clue what this node pointer actually represents and if it is the
right hook for my purpose as it again is called multiple times per page.

______

This is where I'm stuck currently. Maybe you can give me a heads up
and/or point me in the right direction.

Thank you
Patrick

From zappathustra at free.fr  Sat Oct 13 12:35:29 2012
From: zappathustra at free.fr (Paul Isambert)
Date: Sat, 13 Oct 2012 12:35:29 +0200
Subject: [luatex] Interfere with page breaking to balance pages
In-Reply-To: <507848C1.9000204@patrickbergner.de>
References: <507848C1.9000204@patrickbergner.de>
Message-ID: <20121013103530.BDB94D48114@smtp5-g21.free.fr>

Hello Patrick,

Patrick Bergner <mail at patrickbergner.de> a ?crit:
> I'm currently working on a project to automate typical manual
> typesetting tasks using LuaTeX. One of these is balancing pages, i.e.,
> making the left and right side of a typical double page in a book equal
> in length.
> 
> Manually this is usually achieved by using a negative value for
> \enlargethispage on the left side of a double page.
> 
> Now I'm trying to replicate this approach with Lua. What I (generally)
> need is the following:
> - Get a callback once TeX has all the material to output a page (or
> double page).
> - Be able to work with the to be placed page content, i.e., getting its
> contents/dimensions _and_ be able to move things around between pages.

[a lot snipped]

Instead of callbacks, I'd recommend kicking in at shipout time with
whatever can do that in LaTeX (e.g. everyshi, I think), and add some
\directlua code manipulating the content of "tex.box.outputbox". Of
course you also need to cancel shipout every other page, since you can't
write a left page to the PDF before it has been compared to the right
one. Unfortunately, I don't know how to do that in LaTeX. I wrote a
paper on the subject, but I'm not sure it will help since it deals
neither with LaTeX nor LuaTeX (I didn't use the former anymore, and I
didn't use the latter yet, when the paper was written), but perhaps
you'll find some ideas: http://tug.org/TUGboat/tb31-1/tb97isambert.pdf

Best,
Paul


From jfbu at free.fr  Sat Oct 13 13:14:56 2012
From: jfbu at free.fr (jfbu)
Date: Sat, 13 Oct 2012 13:14:56 +0200
Subject: [luatex] a problem with luatexUmathcode
In-Reply-To: <69E13E61-0931-45AA-8F1F-F9728048E603@free.fr>
References: <69E13E61-0931-45AA-8F1F-F9728048E603@free.fr>
Message-ID: <DD7AF1A1-54A6-454F-B9D7-EEF96D24B82F@free.fr>


Le 12 oct. 2012  22:01, jfbu <jfbu at free.fr> wrote :

> Hi,  [I just posted on c.t.tex, but figured here could be better]
> 
> the following code gives dissimilar results for XeTeX 
> and LuaLatex. 
> 
> \documentclass{article} 
> \usepackage{ifxetex} 
> \begin{document} 
> \ifxetex 
> 
> \the\mathcode`\-           % 8704="2200 
> \the\XeTeXmathcodenum`\-   % 37748736=2.2^{24} + 2.2^{21} + 0 
> 
> \else 
> 
> \the\mathcode`\-           % 8704 = "2200 
> 
> \the\luatexUmathcodenum`\- % 8704, if interpreted as Unicode 
>                           % mathcode 0.2^{24} + 0.2^{21} + 8704 
> \fi 
> \end{document} 
> 
> This is a bit strange. The problem with this behavior of LuaLaTeX 
> is that I need to know *in advance* if I have to interpret the 
> number resulting from \luatexUmathcodenum as a legacy mathcode 
> or as a Unicode mathcode ! ... 
> 
> best wishes, 
> Jean-Francois


Hi again

\documentclass{article} 
\usepackage{ifxetex} 
\begin{document} 
\ifxetex 
\the\XeTeXmathcodenum`\a   % 31457377 
\the\XeTeXmathcodenum`\1   % 14680113 
\the\XeTeXmathcodenum`\-   % 37748736 
\else 
\the\luatexUmathcodenum`\a   % 31457377 
\the\luatexUmathcodenum`\1   % 28721 
\the\luatexUmathcodenum`\-   % 8704 
\fi 
\end{document} 

Why the difference between querying the mathcode of a and 1?

This makes it impossible for me to use \luatexUmathcodenum to
query the family number for 1 or -, as I can not know in advance
if it will return a legacy mathcode (as here) or a Unicode mathcode
(if 1 or - have been assigned Unicode mathcode).

Jean-Francois

From jfbu at free.fr  Sat Oct 13 13:29:44 2012
From: jfbu at free.fr (jfbu)
Date: Sat, 13 Oct 2012 13:29:44 +0200
Subject: [luatex] a problem with luatexUmathcode
In-Reply-To: <DD7AF1A1-54A6-454F-B9D7-EEF96D24B82F@free.fr>
References: <69E13E61-0931-45AA-8F1F-F9728048E603@free.fr>
 <DD7AF1A1-54A6-454F-B9D7-EEF96D24B82F@free.fr>
Message-ID: <872BADCA-EADB-48C9-B745-B98173D41AEC@free.fr>


Le 13 oct. 2012 a 13:14, jfbu <jfbu at free.fr> wrote :

> 
> Le 12 oct. 2012  22:01, jfbu <jfbu at free.fr> wrote :
> 
>> Hi,  [I just posted on c.t.tex, but figured here could be better]
>> 
>> the following code gives dissimilar results for XeTeX 
>> and LuaLatex. 
>> 
>> \documentclass{article} 
>> \usepackage{ifxetex} 
>> \begin{document} 
>> \ifxetex 
>> 
>> \the\mathcode`\-           % 8704="2200 
>> \the\XeTeXmathcodenum`\-   % 37748736=2.2^{24} + 2.2^{21} + 0 
>> 
>> \else 
>> 
>> \the\mathcode`\-           % 8704 = "2200 
>> 
>> \the\luatexUmathcodenum`\- % 8704, if interpreted as Unicode 
>>                          % mathcode 0.2^{24} + 0.2^{21} + 8704 
>> \fi 
>> \end{document} 
>> 
>> This is a bit strange. The problem with this behavior of LuaLaTeX 
>> is that I need to know *in advance* if I have to interpret the 
>> number resulting from \luatexUmathcodenum as a legacy mathcode 
>> or as a Unicode mathcode ! ... 
>> 
>> best wishes, 
>> Jean-Francois
> 
> 
> Hi again
> 
> \documentclass{article} 
> \usepackage{ifxetex} 
> \begin{document} 
> \ifxetex 
> \the\XeTeXmathcodenum`\a   % 31457377 
> \the\XeTeXmathcodenum`\1   % 14680113 
> \the\XeTeXmathcodenum`\-   % 37748736 
> \else 
> \the\luatexUmathcodenum`\a   % 31457377 
> \the\luatexUmathcodenum`\1   % 28721 
> \the\luatexUmathcodenum`\-   % 8704 
> \fi 
> \end{document} 
> 
> Why the difference between querying the mathcode of a and 1?
> 
> This makes it impossible for me to use \luatexUmathcodenum to
> query the family number for 1 or -, as I can not know in advance
> if it will return a legacy mathcode (as here) or a Unicode mathcode
> (if 1 or - have been assigned Unicode mathcode).
> 
> Jean-Francois


How do I know that a package did not do something 
like \mathcode`\a="161\relax?

If this happens \the\luatexUmathcodenum`\a will be 
a legacy mathcode 353 and not a Unicode mathcode
like 31457377. The family number is not on the same
bits, and my code will be broken.

Is there some primitive (not some Lua code that I don't
want to have to learn) from Lualatex which gives me
a safe way to extract the family number of a math character?

regards

Jean-Francois




From h_kitagawa2001 at yahoo.co.jp  Sun Oct 14 06:58:12 2012
From: h_kitagawa2001 at yahoo.co.jp (Hironori Kitagawa)
Date: Sun, 14 Oct 2012 06:58:12 +0200
Subject: [luatex] Segmentation fault on LuaTeX
Message-ID: <507A4664.8090202@yahoo.co.jp>

Hello,

I found that the following source (b.tex, say):

 > %#!luatex
 > \newcount\X
 >
 > \X=1
 > \loop A%
 >   \advance\X by 1
 >   \ifnum \X < 10000
 > \repeat
 >
 > \end

causes a segmentation fault on LuaTeX.

$ luatex b
This is LuaTeX, Version beta-0.71.0-2012082121 (rev 4465)
  restricted \write18 enabled.
(./b.texSegmentation fault

If I the number on the line 7 reduced from 10000 to 1000,
this segmentation fault disappeared.

Does anyone know the cause of this behavior?

-- 
Hironori Kitagawa <h_kitagawa2001 at yahoo.co.jp>

From dirk.laurie at gmail.com  Sun Oct 14 08:29:49 2012
From: dirk.laurie at gmail.com (Dirk Laurie)
Date: Sun, 14 Oct 2012 08:29:49 +0200
Subject: [luatex] Segmentation fault on LuaTeX
In-Reply-To: <507A4664.8090202@yahoo.co.jp>
References: <507A4664.8090202@yahoo.co.jp>
Message-ID: <CABcj=tnK0z0RQTedVoGqLw3JKFDXz3+Ck+22zzCBTURUUMwkqQ@mail.gmail.com>

2012/10/14 Hironori Kitagawa <h_kitagawa2001 at yahoo.co.jp>:

>> %#!luatex
>> \newcount\X
>>
>> \X=1
>> \loop A%
>>   \advance\X by 1
>>   \ifnum \X < 10000
>> \repeat
>>
>> \end
>
> causes a segmentation fault on LuaTeX.
>
...
> If I the number on the line 7 reduced from 10000 to 1000,
> this segmentation fault disappeared.
>
> Does anyone know the cause of this behavior?

For the following variation:

\newcount\X%
\X=1%
\loop i%
  \advance\X by 1%
  \ifnum \X < 1085%
\repeat
\end

the error message is more informative:

This is LuaTeX, Version beta-0.70.2-2012062812 (TeX Live 2012)
 restricted \write18 enabled.
(./b.texluatex: ../../../texk/web2c/luatexdir/tex/primitive.w:314:
store_primitive_name: Assertion `idx<=0xFFFF' failed.
Aborted (core dumped)

From kakuto at fuk.kindai.ac.jp  Sun Oct 14 09:49:59 2012
From: kakuto at fuk.kindai.ac.jp (Akira Kakuto)
Date: Sun, 14 Oct 2012 16:49:59 +0900
Subject: [luatex] Segmentation fault on LuaTeX
Message-ID: <135020099915740900002f1d@sniffer>

> \newcount\X
> 
> \X=1
> \loop A%
>   \advance\X by 1
>   \ifnum \X <10000
> \repeat
> 
> \end

If I test with
void new_hyphenation(halfword head, halfword tail)
{
    return;
}

in lang/texlang.w, the example runs.
So the function may be problematic.

Best,
Akira


From taco at elvenkind.com  Sun Oct 14 12:23:00 2012
From: taco at elvenkind.com (Taco Hoekwater)
Date: Sun, 14 Oct 2012 12:23:00 +0200
Subject: [luatex] Segmentation fault on LuaTeX
In-Reply-To: <CABcj=tnK0z0RQTedVoGqLw3JKFDXz3+Ck+22zzCBTURUUMwkqQ@mail.gmail.com>
References: <507A4664.8090202@yahoo.co.jp>
 <CABcj=tnK0z0RQTedVoGqLw3JKFDXz3+Ck+22zzCBTURUUMwkqQ@mail.gmail.com>
Message-ID: <507A9284.8050208@elvenkind.com>


Hi,

I am still recovering from eurotex, but I will check this
out soon.

Best wishes,
Taco

On 10/14/2012 08:29 AM, Dirk Laurie wrote:
> 2012/10/14 Hironori Kitagawa <h_kitagawa2001 at yahoo.co.jp>:
>
>>> %#!luatex
>>> \newcount\X
>>>
>>> \X=1
>>> \loop A%
>>>    \advance\X by 1
>>>    \ifnum \X < 10000
>>> \repeat
>>>
>>> \end
>>
>> causes a segmentation fault on LuaTeX.


From taco at elvenkind.com  Sun Oct 14 12:25:00 2012
From: taco at elvenkind.com (Taco Hoekwater)
Date: Sun, 14 Oct 2012 12:25:00 +0200
Subject: [luatex] a problem with luatexUmathcode
In-Reply-To: <69E13E61-0931-45AA-8F1F-F9728048E603@free.fr>
References: <69E13E61-0931-45AA-8F1F-F9728048E603@free.fr>
Message-ID: <507A92FC.2050408@elvenkind.com>

On 10/12/2012 10:01 PM, jfbu wrote:
> Hi,  [I just posted on c.t.tex, but figured here could be better]
>
> the following code gives dissimilar results for XeTeX
> and LuaLatex.
>
> \documentclass{article}
> \usepackage{ifxetex}
> \begin{document}
> \ifxetex
>
> \the\mathcode`\-           % 8704="2200
> \the\XeTeXmathcodenum`\-   % 37748736=2.2^{24} + 2.2^{21} + 0
>
> \else
>
> \the\mathcode`\-           % 8704 = "2200
>
> \the\luatexUmathcodenum`\- % 8704, if interpreted as Unicode
>                             % mathcode 0.2^{24} + 0.2^{21} + 8704
> \fi
> \end{document}
>
> This is a bit strange.

Somehow I misinterpreted what XeTeX did, so the current version
of \Umathcodenum in luatex remembers what the defining command was.
I can easily revert that to be compatible with XeTeX (after all,
that was the goal) but you will have to wait for the next release.

And at the moment, I do not see an easy solution for your problem,
sorry.

Best wishes,
Taco


From jfbu at free.fr  Sun Oct 14 12:47:36 2012
From: jfbu at free.fr (jfbu)
Date: Sun, 14 Oct 2012 12:47:36 +0200
Subject: [luatex] a problem with luatexUmathcode
In-Reply-To: <507A92FC.2050408@elvenkind.com>
References: <69E13E61-0931-45AA-8F1F-F9728048E603@free.fr>
 <507A92FC.2050408@elvenkind.com>
Message-ID: <4C3AA00F-794B-41AF-96E5-937F385E7DB6@free.fr>


Le 14 oct. 2012 a 12:25, Taco Hoekwater <taco at elvenkind.com> wrote:

> On 10/12/2012 10:01 PM, jfbu wrote:
>> Hi,  [I just posted on c.t.tex, but figured here could be better]
>> 
>> the following code gives dissimilar results for XeTeX
>> and LuaLatex.
>> 
>> \documentclass{article}
>> \usepackage{ifxetex}
>> \begin{document}
>> \ifxetex
>> 
>> \the\mathcode`\-           % 8704="2200
>> \the\XeTeXmathcodenum`\-   % 37748736=2.2^{24} + 2.2^{21} + 0
>> 
>> \else
>> 
>> \the\mathcode`\-           % 8704 = "2200
>> 
>> \the\luatexUmathcodenum`\- % 8704, if interpreted as Unicode
>>                            % mathcode 0.2^{24} + 0.2^{21} + 8704
>> \fi
>> \end{document}
>> 
>> This is a bit strange.
> 
> Somehow I misinterpreted what XeTeX did, so the current version
> of \Umathcodenum in luatex remembers what the defining command was.
> I can easily revert that to be compatible with XeTeX (after all,
> that was the goal) but you will have to wait for the next release.
> 
> And at the moment, I do not see an easy solution for your problem,
> sorry.
> 
> Best wishes,
> Taco
> 


Thanks for the information. I bumped into this problem
because I wanted to check all occurrences of \mathcode in my
package mathastext and make sure the code would be
compatible with Unicode engines. This I partially had done
already in 2011, but the other day after returning to the
package I saw that there were some parts which still needed
to be fixed, and this time it was not a matter of assigning
a known Unicode mathcode to a character, but rather of
querying first its value.

The solution retained at this moment (in the version which
has been uploaded to CTAN yesterday and will appear in
mirrors in a few days) is that for the LuaLatex part the
package does as if the mathcodes it cares about (the ones of
\-, \=, \|, and also for a and 1) have their default values;
whereas in the XeTeX part, it does query the value for
compatibility with packages which might have altered them. I
need these things because I change the mathcodes of -, =, |,
but they are used in \relbar and \Relbar for arrows (or in
the \models macro) so obviously I need to maintain \relbar
and \Relbar to act as if nothing had been done to - and =.

As you tell me that in a later release the
\luatexUmathcodenum will, as \XeTeXmathcodenum, always
return a Unicode mathcode, this is good news to me as I have
just have to wait until this is done, and then making
mathastext finally compatible with Lualatex will be
immediate.

Thanks a lot, best regards
Jean-Francois

From mail at patrickbergner.de  Tue Oct 16 18:23:04 2012
From: mail at patrickbergner.de (Patrick Bergner)
Date: Tue, 16 Oct 2012 18:23:04 +0200
Subject: [luatex] Interfere with page breaking to balance pages
In-Reply-To: <mailman.11.1350208802.816.luatex@tug.org>
References: <mailman.11.1350208802.816.luatex@tug.org>
Message-ID: <507D89E8.3090608@patrickbergner.de>

> Hello Patrick,
> 
> [a lot snipped]
> 
> Instead of callbacks, I'd recommend kicking in at shipout time with
> whatever can do that in LaTeX (e.g. everyshi, I think), and add some
> \directlua code manipulating the content of "tex.box.outputbox". Of
> course you also need to cancel shipout every other page, since you can't
> write a left page to the PDF before it has been compared to the right
> one. Unfortunately, I don't know how to do that in LaTeX. I wrote a
> paper on the subject, but I'm not sure it will help since it deals
> neither with LaTeX nor LuaTeX (I didn't use the former anymore, and I
> didn't use the latter yet, when the paper was written), but perhaps
> you'll find some ideas: http://tug.org/TUGboat/tb31-1/tb97isambert.pdf
> 
> Best,
> Paul

Hello Paul,

thank you very much for your response. I heard about the
\EveryShipout{\directlua{...}} hack before (I call it a hack because it
requires more than LuaTeX's own capabilities), but was hoping to get
around it.

Using "everyshi" I was able to retrieve the page content via
tex.box[255]. I was, however, neither able to cancel the shipout of left
pages nor able to ship out both left and right pages after balancing them.

Using "atbegshi" I was unable to retrieve the page content as it is only
accessible using \AtBeginShipoutBox (...and I don't know how to use it
from the Lua side). The package does provide a \AtBeginShipoutDiscard
command to discard shipout though (...although, again, I don't know how
to use it from the Lua side).

A more Lua-esque solution (i.e., pure Lua with a hook for
luatexbase.add_to_callback) would still be preferred. Maybe someone else
has a clue?

Thank you again
Patrick

From John at wexfordpress.com  Tue Oct 16 21:05:35 2012
From: John at wexfordpress.com (john Culleton)
Date: Tue, 16 Oct 2012 15:05:35 -0400
Subject: [luatex] Interfere with page breaking to balance pages
In-Reply-To: <507D89E8.3090608@patrickbergner.de>
References: <mailman.11.1350208802.816.luatex@tug.org>
 <507D89E8.3090608@patrickbergner.de>
Message-ID: <20121016150535.4749fc09@sda3.wexfordpress.net>

On Tue, 16 Oct 2012 18:23:04 +0200
Patrick Bergner <mail at patrickbergner.de> wrote:

> > Hello Patrick,
> > 
> > [a lot snipped]
> Hello Paul,

<snip> 
If all you want is bottom margins even from left to right most
version s of TeX do this automatically. The specific command is
\normalbottom  which is the default.


-- 
John Culleton
Wexford Press
Free list of books for self-publishers:
http://wexfordpress.net/shortlist.html
PDF e-book: "Create Book Covers with Scribus"
available at http://www.booklocker.com/books/4055.html

From mail at patrickbergner.de  Wed Oct 17 14:17:35 2012
From: mail at patrickbergner.de (Patrick Bergner)
Date: Wed, 17 Oct 2012 14:17:35 +0200
Subject: [luatex] Interfere with page breaking to balance pages
In-Reply-To: <20121016150535.4749fc09@sda3.wexfordpress.net>
References: <mailman.11.1350208802.816.luatex@tug.org>
 <507D89E8.3090608@patrickbergner.de>
 <20121016150535.4749fc09@sda3.wexfordpress.net>
Message-ID: <507EA1DF.7010603@patrickbergner.de>

Hello John,

thank you for your reply. I now see I was too unspecific when asking my
question. Of course TeX fills pages up to \textheight by default if
there is enough material.

I was talking about the specific case where there is *not* enough
material to fill up the right page of a spread, e.g. at the end of a
chapter.

If what I want cannot be achieved by pure Lua maybe someone can explain why?

Thank you
Patrick

Am 16.10.2012 21:05, schrieb john Culleton:
> On Tue, 16 Oct 2012 18:23:04 +0200
> Patrick Bergner <mail at patrickbergner.de> wrote:
> 
>>> Hello Patrick,
>>>
>>> [a lot snipped]
>> Hello Paul,
> 
> <snip> 
> If all you want is bottom margins even from left to right most
> version s of TeX do this automatically. The specific command is
> \normalbottom  which is the default.

From mailing_list at arcor.de  Wed Oct 17 15:44:58 2012
From: mailing_list at arcor.de (Stephan Hennig)
Date: Wed, 17 Oct 2012 15:44:58 +0200
Subject: [luatex] Interfere with page breaking to balance pages
In-Reply-To: <507D89E8.3090608@patrickbergner.de>
References: <mailman.11.1350208802.816.luatex@tug.org>
 <507D89E8.3090608@patrickbergner.de>
Message-ID: <507EB65A.6030406@arcor.de>

Am 16.10.2012 18:23, schrieb Patrick Bergner:

> Using "atbegshi" I was unable to retrieve the page content as it is only
> accessible using \AtBeginShipoutBox (...and I don't know how to use it
> from the Lua side).

For me the following works

\directlua{
  function myfunc(box)
    texio.write_nl('box = ' .. box)
  end
}

\AtBeginShipout{%
  \directlua{myfunc(\the\AtBeginShipoutBox)}%
}

But I'm not a TeX expert and I don't know when that might go wrong.


> The package does provide a \AtBeginShipoutDiscard command to discard
> shipout though (...although, again, I don't know how to use it from
> the Lua side).

tex.print('\AtBeginShipoutDiscard')


> A more Lua-esque solution (i.e., pure Lua with a hook for
> luatexbase.add_to_callback) would still be preferred.

I, too, think a pre-shipout callback is missing to access a completely
rendered page.  Unsurprisingly, variable tex.lists.page_head (see sec.
'Special lists' in luatexref-t.pdf) as well as tex.box[255] are nil in
buildpage_filter when extrainfo == 'after_output'.  And when extrainfo
isn't 'after_output', you never know if the page has already been
completed.  Am I missing something?

Best regards,
Stephan Hennig


From patrick at gundla.ch  Wed Oct 17 15:50:44 2012
From: patrick at gundla.ch (Patrick Gundlach)
Date: Wed, 17 Oct 2012 15:50:44 +0200
Subject: [luatex] Interfere with page breaking to balance pages
In-Reply-To: <507EB65A.6030406@arcor.de>
References: <mailman.11.1350208802.816.luatex@tug.org>
 <507D89E8.3090608@patrickbergner.de> <507EB65A.6030406@arcor.de>
Message-ID: <F3028844-EE66-4623-8C54-24B626E35501@gundla.ch>


> For me the following works
> 
> \directlua{
>  function myfunc(box)
>    texio.write_nl('box = ' .. box)
>  end
> }
> 
> \AtBeginShipout{%
>  \directlua{myfunc(\the\AtBeginShipoutBox)}%
> }

you can do something like this:

tex.box["AtBeginShipoutBox"]

that's a bit more luaeque IMO.

Patrick


From patrick at gundla.ch  Wed Oct 17 17:11:02 2012
From: patrick at gundla.ch (Patrick Gundlach)
Date: Wed, 17 Oct 2012 17:11:02 +0200
Subject: [luatex] Interfere with page breaking to balance pages
In-Reply-To: <507EC936.5070009@arcor.de>
References: <mailman.11.1350208802.816.luatex@tug.org>
 <507D89E8.3090608@patrickbergner.de> <507EB65A.6030406@arcor.de>
 <F3028844-EE66-4623-8C54-24B626E35501@gundla.ch> <507EC936.5070009@arcor.de>
Message-ID: <5F0089C2-F3F2-40D8-A09F-2A308AF66FAB@gundla.ch>


>> you can do something like this:
>> 
>> tex.box["AtBeginShipoutBox"]
>> 
>> that's a bit more luaeque IMO.
> 
> Nice, but when did Taco tell you that secret?  I can't find it in the
> LuaTeX manual. :/


4.13.4 Attribute, count, dimension, skip and token registers

"It is possible to use the names of relevant \attributedef, \countdef, \dimendef, \skipdef, or \toksdef control sequences as indices to these tables[...]"


and I just tried it with tex.box[] and it worked :)

Patrick



From mailing_list at arcor.de  Wed Oct 17 17:05:26 2012
From: mailing_list at arcor.de (Stephan Hennig)
Date: Wed, 17 Oct 2012 17:05:26 +0200
Subject: [luatex] Interfere with page breaking to balance pages
In-Reply-To: <F3028844-EE66-4623-8C54-24B626E35501@gundla.ch>
References: <mailman.11.1350208802.816.luatex@tug.org>
 <507D89E8.3090608@patrickbergner.de> <507EB65A.6030406@arcor.de>
 <F3028844-EE66-4623-8C54-24B626E35501@gundla.ch>
Message-ID: <507EC936.5070009@arcor.de>

Am 17.10.2012 15:50, schrieb Patrick Gundlach:

> you can do something like this:
> 
> tex.box["AtBeginShipoutBox"]
> 
> that's a bit more luaeque IMO.

Nice, but when did Taco tell you that secret?  I can't find it in the
LuaTeX manual. :/

Best regards,
Stephan Hennig


From zappathustra at free.fr  Thu Oct 18 07:04:14 2012
From: zappathustra at free.fr (Paul Isambert)
Date: Thu, 18 Oct 2012 07:04:14 +0200
Subject: [luatex] Interfere with page breaking to balance pages
In-Reply-To: <F3028844-EE66-4623-8C54-24B626E35501@gundla.ch>
References: <mailman.11.1350208802.816.luatex@tug.org>
 <507D89E8.3090608@patrickbergner.de> <507EB65A.6030406@arcor.de>
 <F3028844-EE66-4623-8C54-24B626E35501@gundla.ch>
Message-ID: <20121018050415.B4B0CD480ED@smtp5-g21.free.fr>

Patrick Gundlach <patrick at gundla.ch> a ?crit:
> 
> > For me the following works
> > 
> > \directlua{
> >  function myfunc(box)
> >    texio.write_nl('box = ' .. box)
> >  end
> > }
> > 
> > \AtBeginShipout{%
> >  \directlua{myfunc(\the\AtBeginShipoutBox)}%
> > }
> 
> you can do something like this:
> 
> tex.box["AtBeginShipoutBox"]
> 
> that's a bit more luaeque IMO.

And better yet, though totally equivalent:

  tex.box.AtBeginShipoutBox

Best,
Paul


From taco at elvenkind.com  Thu Oct 18 10:11:17 2012
From: taco at elvenkind.com (Taco Hoekwater)
Date: Thu, 18 Oct 2012 10:11:17 +0200
Subject: [luatex] Interfere with page breaking to balance pages
In-Reply-To: <5F0089C2-F3F2-40D8-A09F-2A308AF66FAB@gundla.ch>
References: <mailman.11.1350208802.816.luatex@tug.org>
 <507D89E8.3090608@patrickbergner.de> <507EB65A.6030406@arcor.de>
 <F3028844-EE66-4623-8C54-24B626E35501@gundla.ch> <507EC936.5070009@arcor.de>
 <5F0089C2-F3F2-40D8-A09F-2A308AF66FAB@gundla.ch>
Message-ID: <507FB9A5.8070804@elvenkind.com>

On 10/17/2012 05:11 PM, Patrick Gundlach wrote:
>
>>> you can do something like this:
>>>
>>> tex.box["AtBeginShipoutBox"]
>>>
>>> that's a bit more luaeque IMO.
>>
>> Nice, but when did Taco tell you that secret?  I can't find it in the
>> LuaTeX manual. :/

Documentation oversight (it happens).

On the original problem: TeX's page breaking is more than a little
tricky to get 'into' from the Lua end because there are a bunch
of interwoven C functions that mutually depend on each other's
calculations. In fact, that is why the current interface is so
weird: it closely follows what the internals do.

When we exposed the current situation, it was not at all
clear what a 'good' interface would look like (and personally, I
am still not sure). So, any constructive thoughts on that would
be welcome.

A better, cleaner solution would be nice to have, but whatever
form it takes, it will require some digging and a bit of a rewrite in
the internal code. And to make sure at the same time that something
important does not break is tricky, which is also part of why it has
not been done yet.

Best wishes,
Taco



From zappathustra at free.fr  Thu Oct 18 10:42:12 2012
From: zappathustra at free.fr (Paul Isambert)
Date: Thu, 18 Oct 2012 10:42:12 +0200
Subject: [luatex] Interfere with page breaking to balance pages
In-Reply-To: <507FB9A5.8070804@elvenkind.com>
References: <mailman.11.1350208802.816.luatex@tug.org>
 <507D89E8.3090608@patrickbergner.de> <507EB65A.6030406@arcor.de>
 <F3028844-EE66-4623-8C54-24B626E35501@gundla.ch> <507EC936.5070009@arcor.de>
 <5F0089C2-F3F2-40D8-A09F-2A308AF66FAB@gundla.ch>
 <507FB9A5.8070804@elvenkind.com>
Message-ID: <1350549732.507fc0e465ad2@imp.free.fr>

Selon Taco Hoekwater <taco at elvenkind.com>:

> On 10/17/2012 05:11 PM, Patrick Gundlach wrote:
> >
> >>> you can do something like this:
> >>>
> >>> tex.box["AtBeginShipoutBox"]
> >>>
> >>> that's a bit more luaeque IMO.
> >>
> >> Nice, but when did Taco tell you that secret?  I can't find it in the
> >> LuaTeX manual. :/
>
> Documentation oversight (it happens).
>
> On the original problem: TeX's page breaking is more than a little
> tricky to get 'into' from the Lua end because there are a bunch
> of interwoven C functions that mutually depend on each other's
> calculations. In fact, that is why the current interface is so
> weird: it closely follows what the internals do.
>
> When we exposed the current situation, it was not at all
> clear what a 'good' interface would look like (and personally, I
> am still not sure). So, any constructive thoughts on that would
> be welcome.
>
> A better, cleaner solution would be nice to have, but whatever
> form it takes, it will require some digging and a bit of a rewrite in
> the internal code. And to make sure at the same time that something
> important does not break is tricky, which is also part of why it has
> not been done yet.

Similar to the linebreak callbacks, I've been thinking about the following:

- A pre_shipout would take whatever box is passed to \shipout and return a
similar one; returning nothing would cancel shipout, i.e. it'd be a dead cycle.

- A shipout callback would take what the preceding returns, and return PDF code
representing the page, to be written to the output file; of course it's probably
more complex than that, and not just the page must be written, e.g. a new font
must be written to the PDF and I suppose that's done at the end of the job; so
I'm not sure it's realistic at all.

- A post_shipout could implement whatever must be done after shipout, e.g.
emptying \pdfpageattributes, etc.

Of course all that can be done in good ol' TeX in the output routine, except
point 2, and I don't know if that one would be any good at all.

My illiteracy in C of course prevents me from proposing any thought on the
implementation :)

Best,
Paul



From mail at patrickbergner.de  Thu Oct 18 14:04:54 2012
From: mail at patrickbergner.de (Patrick Bergner)
Date: Thu, 18 Oct 2012 14:04:54 +0200
Subject: [luatex] Interfere with page breaking to balance pages
In-Reply-To: <507FB9A5.8070804@elvenkind.com>
References: <mailman.11.1350208802.816.luatex@tug.org>
 <507D89E8.3090608@patrickbergner.de> <507EB65A.6030406@arcor.de>
 <F3028844-EE66-4623-8C54-24B626E35501@gundla.ch> <507EC936.5070009@arcor.de>
 <5F0089C2-F3F2-40D8-A09F-2A308AF66FAB@gundla.ch>
 <507FB9A5.8070804@elvenkind.com>
Message-ID: <507FF066.2030605@patrickbergner.de>

Thank you all for your comments, advises and explanations.

The tex.box.AtBeginShipoutBox approach is nice, although I'm a bit
ashamed I did not come up with it myself. The shipout cancellation also
works (the back slash had to be escaped though).

For the record, my \AtBeginShipout hook now reads something like

[code]
balancepages = function( page )
  if page < 2 then return end
  if page % 2 == 0 then
    tex.setbox( 'global', 142, node.copy_list( tex.box.AtBeginShipoutBox ) )
    tex.print( '\\AtBeginShipoutDiscard' )
  else
    tex.setbox( 'global', 143, node.copy_list( tex.box.AtBeginShipoutBox ) )
    tex.print( '\\AtBeginShipoutDiscard' )
    -- page balancing to be done here
    tex.shipout( 142 )
    tex.shipout( 143 )
  end
end
[/code]

Now let's see how far I get with the actual page balancing.

______________________

On general page breaking callbacks: I'm with Paul in that something like
a pre_shipout_filter with the possibility to cancel/delay shipout would
be desirable. Basically what pre_linebreak_filter does on paragraph level.

Patrick


Am 18.10.2012 10:11, schrieb Taco Hoekwater:
> On the original problem: TeX's page breaking is more than a little
> tricky to get 'into' from the Lua end because there are a bunch
> of interwoven C functions that mutually depend on each other's
> calculations. In fact, that is why the current interface is so
> weird: it closely follows what the internals do.
> 
> When we exposed the current situation, it was not at all
> clear what a 'good' interface would look like (and personally, I
> am still not sure). So, any constructive thoughts on that would
> be welcome.
> 
> A better, cleaner solution would be nice to have, but whatever
> form it takes, it will require some digging and a bit of a rewrite in
> the internal code. And to make sure at the same time that something
> important does not break is tricky, which is also part of why it has
> not been done yet.
> 
> Best wishes,
> Taco

From mailing_list at arcor.de  Fri Oct 19 01:37:44 2012
From: mailing_list at arcor.de (Stephan Hennig)
Date: Fri, 19 Oct 2012 01:37:44 +0200
Subject: [luatex] Interfere with page breaking to balance pages
In-Reply-To: <1350549732.507fc0e465ad2@imp.free.fr>
References: <mailman.11.1350208802.816.luatex@tug.org>
 <507D89E8.3090608@patrickbergner.de> <507EB65A.6030406@arcor.de>
 <F3028844-EE66-4623-8C54-24B626E35501@gundla.ch> <507EC936.5070009@arcor.de>
 <5F0089C2-F3F2-40D8-A09F-2A308AF66FAB@gundla.ch>
 <507FB9A5.8070804@elvenkind.com> <1350549732.507fc0e465ad2@imp.free.fr>
Message-ID: <508092C8.7060208@arcor.de>

Am 18.10.2012 10:42, schrieb Paul Isambert:

> Similar to the linebreak callbacks, I've been thinking about the following:
> 
> - A pre_shipout would take whatever box is passed to \shipout and return a
> similar one; returning nothing would cancel shipout, i.e. it'd be a dead cycle.
>
> - A shipout callback would take what the preceding returns, and return PDF code
> representing the page,

Plus allow transferring a table of page boxes from pre_shipout to
shipout to make shuffling pages in the former hook easy.  Or balancing
as in Patricks case, or anything that requires looking at more than one
page at a time and is simple enough that you don't need to write a
customized output routine.

Best regards,
Stephan Hennig


From h_kitagawa2001 at yahoo.co.jp  Sun Oct 28 02:32:13 2012
From: h_kitagawa2001 at yahoo.co.jp (Hironori Kitagawa)
Date: Sun, 28 Oct 2012 09:32:13 +0900
Subject: [luatex] Adobe-Identity-0 fonts in LuaTeX
Message-ID: <508C7D0D.5050503@yahoo.co.jp>

Hello.

I'm trying to use Adobe KentenGeneric OpenType Font,
(http://sourceforge.net/projects/kenten-generic.adobe/files/)
whose CID is Adobe-Identity-0.

I tested with the following source test.tex.
The PDF generated by XeTeX (test-xetex.pdf) is fine,
but that by LuaTeX (test-luatex.pdf) doesn't include
any glyphs of KentenGeneric.

Does anyone know a solution for this situation, or its cause?

--- test.tex ---
\documentclass{article}
\usepackage{fontspec}
\begin{document}

\fontspec{KentenGeneric.otf}\Huge

\fbox{%
   \char"2022\char"25B2\char"25B3\char"25C9
   \char"25CB\char"25CE\char"25CF\char"25E6
   \char"FE45\char"FE46
}
\end{document}
---

Regards
Hironori KITAGAWA <h_kitagawa2001 at yahoo.co.jp>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: test-luatex.pdf
Type: application/pdf
Size: 2453 bytes
Desc: not available
URL: <http://tug.org/pipermail/luatex/attachments/20121028/ef4e0d7b/attachment.pdf>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: test-xetex.pdf
Type: application/pdf
Size: 3243 bytes
Desc: not available
URL: <http://tug.org/pipermail/luatex/attachments/20121028/ef4e0d7b/attachment-0001.pdf>

From khaledhosny at eglug.org  Sun Oct 28 13:07:09 2012
From: khaledhosny at eglug.org (Khaled Hosny)
Date: Sun, 28 Oct 2012 14:07:09 +0200
Subject: [luatex] a problem with luatexUmathcode
In-Reply-To: <4C3AA00F-794B-41AF-96E5-937F385E7DB6@free.fr>
References: <69E13E61-0931-45AA-8F1F-F9728048E603@free.fr>
 <507A92FC.2050408@elvenkind.com>
 <4C3AA00F-794B-41AF-96E5-937F385E7DB6@free.fr>
Message-ID: <20121028120709.GA30219@khaled-laptop>

On Sun, Oct 14, 2012 at 12:47:36PM +0200, jfbu wrote:
> 
> Le 14 oct. 2012 a 12:25, Taco Hoekwater <taco at elvenkind.com> wrote:
> 
> > On 10/12/2012 10:01 PM, jfbu wrote:
> >> Hi,  [I just posted on c.t.tex, but figured here could be better]
> >> 
> >> the following code gives dissimilar results for XeTeX
> >> and LuaLatex.
> >> 
> >> \documentclass{article}
> >> \usepackage{ifxetex}
> >> \begin{document}
> >> \ifxetex
> >> 
> >> \the\mathcode`\-           % 8704="2200
> >> \the\XeTeXmathcodenum`\-   % 37748736=2.2^{24} + 2.2^{21} + 0
> >> 
> >> \else
> >> 
> >> \the\mathcode`\-           % 8704 = "2200
> >> 
> >> \the\luatexUmathcodenum`\- % 8704, if interpreted as Unicode
> >>                            % mathcode 0.2^{24} + 0.2^{21} + 8704
> >> \fi
> >> \end{document}
> >> 
> >> This is a bit strange.
> > 
> > Somehow I misinterpreted what XeTeX did, so the current version
> > of \Umathcodenum in luatex remembers what the defining command was.
> > I can easily revert that to be compatible with XeTeX (after all,
> > that was the goal) but you will have to wait for the next release.
>
> As you tell me that in a later release the
> \luatexUmathcodenum will, as \XeTeXmathcodenum, always
> return a Unicode mathcode, this is good news to me as I have
> just have to wait until this is done, and then making
> mathastext finally compatible with Lualatex will be
> immediate.

This should be fixed in SVN r4467, hopefully it will be available TeX
Live 2013 release of LuaTeX.

Regards,
 Khaled

From kmaeda at users.sourceforge.jp  Sun Oct 28 13:15:04 2012
From: kmaeda at users.sourceforge.jp (Kazuki Maeda)
Date: Sun, 28 Oct 2012 21:15:04 +0900
Subject: [luatex] Adobe-Identity-0 fonts in LuaTeX
In-Reply-To: <508C7D0D.5050503@yahoo.co.jp>
References: <508C7D0D.5050503@yahoo.co.jp>
Message-ID: <20121028211504.a68e5274f2272adb9cd6cba5@users.sourceforge.jp>

Hello.

I tried the following code with context. The result was same: no glyphs were displayed.

---
\usemodule[simplefonts]
\setmainfont[kentengeneric]
\starttext
\char"2022\char"25B2\char"25B3\char"25C9
\char"25CB\char"25CE\char"25CF\char"25E6
\char"FE45\char"FE46
\stoptext
---

I also tried to output all information of KentenGeneric.otf provided by fontloader.

---
\documentclass{article}
\directlua{
  require('lualibs-table')
  local font = fontloader.open('/usr/share/fonts/KentenGeneric.otf')
  local metrics = fontloader.to_table(font)
  fontloader.close(font)
  table.tofile('kenten.lua', metrics)
}
\begin{document}
\end{document}
---

Then, it seems that the result 'kenten.lua' does not include any map data between CID and Unicode.


By the way, test-xetex.pdf looks fine, but I found a problem.
I tried to copy the text in the PDF, then I got:
"<U+0002><U+0003><U+0004><U+0005><U+0006><U+0007><U+0008>  <U+000B>".

Best regards,
Kazuki Maeda

From kmaeda at amp.i.kyoto-u.ac.jp  Sun Oct 28 12:21:30 2012
From: kmaeda at amp.i.kyoto-u.ac.jp (Kazuki Maeda)
Date: Sun, 28 Oct 2012 20:21:30 +0900
Subject: [luatex] Adobe-Identity-0 fonts in LuaTeX
In-Reply-To: <508C7D0D.5050503@yahoo.co.jp>
References: <508C7D0D.5050503@yahoo.co.jp>
Message-ID: <20121028202130.11530e5e4d77bc28154cf17e@amp.i.kyoto-u.ac.jp>

Hello.

I tried the following code with context. The result was same: no glyphs were displayed.

---
\usemodule[simplefonts]
\setmainfont[kentengeneric]
\starttext
\char"2022\char"25B2\char"25B3\char"25C9
\char"25CB\char"25CE\char"25CF\char"25E6
\char"FE45\char"FE46
\stoptext
---

I also tried to output all information of KentenGeneric.otf provided by fontloader.

---
\documentclass{article}
\directlua{
  require('lualibs-table')
  local font = fontloader.open('/usr/share/fonts/KentenGeneric.otf')
  local metrics = fontloader.to_table(font)
  fontloader.close(font)
  table.tofile('kenten.lua', metrics)
}
\begin{document}
\end{document}
---

I attach the result 'kenten.lua'.
It seems that kenten.dat does not include any map data between CID and Unicode.


By the way, test-xetex.pdf looks fine, but I found a problem.
I tried to copy the text in the PDF, then I got:
"<U+0002><U+0003><U+0004><U+0005><U+0006><U+0007><U+0008>  <U+000B>".

Best regards,
Kazuki Maeda
-------------- next part --------------
A non-text attachment was scrubbed...
Name: kenten.lua
Type: application/octet-stream
Size: 14831 bytes
Desc: not available
URL: <http://tug.org/pipermail/luatex/attachments/20121028/0beeacc2/attachment-0001.obj>

From kmaeda at amp.i.kyoto-u.ac.jp  Sun Oct 28 12:38:18 2012
From: kmaeda at amp.i.kyoto-u.ac.jp (Kazuki Maeda)
Date: Sun, 28 Oct 2012 20:38:18 +0900
Subject: [luatex] Adobe-Identity-0 fonts in LuaTeX
In-Reply-To: <508C7D0D.5050503@yahoo.co.jp>
References: <508C7D0D.5050503@yahoo.co.jp>
Message-ID: <20121028203818.a94d77b0b332ca09c1d0547e@amp.i.kyoto-u.ac.jp>

Hello.

I tried the following code with context. The result was same: no glyphs were displayed.

---
\usemodule[simplefonts]
\setmainfont[kentengeneric]
\starttext
\char"2022\char"25B2\char"25B3\char"25C9
\char"25CB\char"25CE\char"25CF\char"25E6
\char"FE45\char"FE46
\stoptext
---

I also tried to output all information of KentenGeneric.otf provided by fontloader.

---
\documentclass{article}
\directlua{
  require('lualibs-table')
  local font = fontloader.open('/usr/share/fonts/KentenGeneric.otf')
  local metrics = fontloader.to_table(font)
  fontloader.close(font)
  table.tofile('kenten.lua', metrics)
}
\begin{document}
\end{document}
---

Then, it seems that the result 'kenten.dat' does not include any map data between CID and Unicode.


By the way, test-xetex.pdf looks fine, but I found a problem.
I tried to copy the text in the PDF, then I got:
"<U+0002><U+0003><U+0004><U+0005><U+0006><U+0007><U+0008>  <U+000B>".

Best regards,
Kazuki Maeda

From taco at elvenkind.com  Mon Oct 29 10:53:21 2012
From: taco at elvenkind.com (Taco Hoekwater)
Date: Mon, 29 Oct 2012 10:53:21 +0100
Subject: [luatex] Adobe-Identity-0 fonts in LuaTeX
In-Reply-To: <20121028211504.a68e5274f2272adb9cd6cba5@users.sourceforge.jp>
References: <508C7D0D.5050503@yahoo.co.jp>
 <20121028211504.a68e5274f2272adb9cd6cba5@users.sourceforge.jp>
Message-ID: <508E5211.6040204@elvenkind.com>


Hi,

On 10/28/2012 01:15 PM, Kazuki Maeda wrote:
> Hello.
>
> I tried the following code with context. The result was same: no glyphs were displayed.

There is a bug in the luatex file search routine that is the cause of 
this: it fails to find Adobe-Identity-0.cidmap (because it is not using
kpathsea for discovery of that file). As it stands, luatex will only
find .cidmap files in the current directory. This is definitely a bug.

> By the way, test-xetex.pdf looks fine, but I found a problem.
> I tried to copy the text in the PDF, then I got:
> "<U+0002><U+0003><U+0004><U+0005><U+0006><U+0007><U+0008>  <U+000B>".

Adobe Identity maps Kenten Generic exactly like that, and if luatex
would be able to find the cidmap, you would get the same result.

There is something odd going on with the font's cmap table in that
it seems to have an internal table that maps the values to the
\char"2022 etc. but then it says 'Adobe-Identity-0' which seems
to overrule those, both in ICU and in luatex.

I have no idea yet what is going on there.

Best wishes,
Taco


