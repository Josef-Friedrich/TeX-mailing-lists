From listas at tex-tipografia.com  Wed May  2 08:55:38 2012
From: listas at tex-tipografia.com (Javier Bezos)
Date: Wed, 2 May 2012 08:55:38 +0200
Subject: [luatex] Babel
Message-ID: <4FA0DA6A.9020107@tex-tipografia.com>

Hi all,

Babel gets back on track and it is again actively maintained. The
goals are mainly to fix bugs, to make it compatible with XeTeX and
LuaTeX (as far as possible), and perhaps to add some minor new
features (provided they are backward compatible).

No attempt will be done to take full advantage of the features
provided by XeTeX and LuaTeX, which would require a completely
new core (as for example polyglossia or as part of LaTeX3).

Your comments or suggestions (or questions!) are welcomed.

Javier

From patrick at gundla.ch  Thu May  3 15:35:28 2012
From: patrick at gundla.ch (Patrick Gundlach)
Date: Thu, 3 May 2012 15:35:28 +0200
Subject: [luatex] node.copy_list() does not copy glue_spec nodes
Message-ID: <D805FADD-1E75-48CB-8ADA-0CF71199FD0A@gundla.ch>

Hello all,

it seems that node.copy_list() does not copy the glue_spec nodes, right? Any chance for a fix?

Patrick



\documentclass{article}
\usepackage{luacode}
\begin{document}
\begin{luacode}

g1 = node.new("glue")
g1.spec = node.new("glue_spec")
g1.spec.stretch_order = 3
print(g1.spec.stretch_order) -- 3: ok

g2 = node.copy_list(g1)
g2.spec.stretch_order = 1
print(g1.spec.stretch_order) -- 1, expected 3

-- This is because both are the same:
print(g1.spec)
print(g2.spec)

-- <node    nil <     86 >    nil : glue_spec 0>
-- <node    nil <     86 >    nil : glue_spec 0>

\end{luacode}
\end{document}




From patrick at gundla.ch  Thu May  3 15:37:50 2012
From: patrick at gundla.ch (Patrick Gundlach)
Date: Thu, 3 May 2012 15:37:50 +0200
Subject: [luatex] Babel
In-Reply-To: <4FA0DA6A.9020107@tex-tipografia.com>
References: <4FA0DA6A.9020107@tex-tipografia.com>
Message-ID: <F9FEF39B-F9CE-4076-8C06-2CD946FCDC99@gundla.ch>




> Babel gets back on track and it is again actively maintained.

This is great news! Sorry for such a lame reply, but I think this is a great step forward.

Thanks,

  Patrick



From khaledhosny at eglug.org  Thu May  3 16:19:29 2012
From: khaledhosny at eglug.org (Khaled Hosny)
Date: Thu, 3 May 2012 16:19:29 +0200
Subject: [luatex] node.copy_list() does not copy glue_spec nodes
In-Reply-To: <D805FADD-1E75-48CB-8ADA-0CF71199FD0A@gundla.ch>
References: <D805FADD-1E75-48CB-8ADA-0CF71199FD0A@gundla.ch>
Message-ID: <20120503141928.GA6711@khaled-laptop>

On Thu, May 03, 2012 at 03:35:28PM +0200, Patrick Gundlach wrote:
> Hello all,
> 
> it seems that node.copy_list() does not copy the glue_spec nodes, right? Any chance for a fix?

I'm not sure if this is deliberite or not, but have look at copy_node()
in tex/texnodes.w:

    case glue_spec_node:
        glue_ref_count(r) = null;
        break;

(r is the return value)

Regards,
 Khaled

From khaledhosny at eglug.org  Thu May  3 21:16:00 2012
From: khaledhosny at eglug.org (Khaled Hosny)
Date: Thu, 3 May 2012 21:16:00 +0200
Subject: [luatex] Babel
In-Reply-To: <4FA0DA6A.9020107@tex-tipografia.com>
References: <4FA0DA6A.9020107@tex-tipografia.com>
Message-ID: <20120503191559.GA11424@khaled-laptop>

On Wed, May 02, 2012 at 08:55:38AM +0200, Javier Bezos wrote:
> Hi all,
> 
> Babel gets back on track and it is again actively maintained. The
> goals are mainly to fix bugs, to make it compatible with XeTeX and
> LuaTeX (as far as possible), and perhaps to add some minor new
> features (provided they are backward compatible).
> 
> No attempt will be done to take full advantage of the features
> provided by XeTeX and LuaTeX, which would require a completely
> new core (as for example polyglossia or as part of LaTeX3).
> 
> Your comments or suggestions (or questions!) are welcomed.

There is the issue with having to load hyphenation patterns on demand
with LuaTeX rather than dumping them in the format, and currently we
have to provide a patched hyphen.cfg for this to happen. See[1] for more
details. It would be helpful if this could get rid of the LuaTeX
specific hyphen.cfg.

[1] http://tug.org/svn/texhyphen/trunk/hyph-utf8/doc/luatex/hyph-utf8/luatex-hyphen.pdf?view=co

Regards,
 Khaled

From listas at tex-tipografia.com  Fri May  4 08:59:13 2012
From: listas at tex-tipografia.com (listas at tex-tipografia.com)
Date: Fri, 4 May 2012 07:59:13 +0100
Subject: [luatex] Babel
In-Reply-To: <20120503191559.GA11424@khaled-laptop>
References: <4FA0DA6A.9020107@tex-tipografia.com>
 <20120503191559.GA11424@khaled-laptop>
Message-ID: <8532ae709342d0f729a7ec79546ae696.squirrel@webmail.tex-tipografia.com>

Khaled,

> There is the issue with having to load hyphenation patterns on demand
> with LuaTeX rather than dumping them in the format, and currently we
> have to provide a patched hyphen.cfg for this to happen. See[1] for more
> details. It would be helpful if this could get rid of the LuaTeX
> specific hyphen.cfg.

After fixing major bugs, this is one of the prioritary tasks.

Javier




From dieter.koehler at philo.de  Sat May  5 23:13:41 2012
From: dieter.koehler at philo.de (=?ISO-8859-15?Q?Dieter_K=F6hler?=)
Date: Sat, 5 May 2012 23:13:41 +0200
Subject: [luatex] Attempt to build font name database fails with app crash
Message-ID: <4FA59805.6000502@philo.de>

Hi all,

When I use the \setmainfont{} command from the fontspec package, 
lualatex crashes while attempting to build a font name database.

The last lines from the log are:

> luaotfload | Font names database not found, generating new one.
>              This can take several minutes; please be patient.
> luaotfload | Updating the font names database:
> luaotfload | Scanning TEXMF and OS fonts...

A few seconds after this output lualatex.exe crashes. These are the 
details from the crash report:

>   Problemereignisname:	APPCRASH
>   Anwendungsname:	lualatex.exe
>   Anwendungsversion:	0.0.0.0
>   Anwendungszeitstempel:	4f89c403
>   Fehlermodulname:	MiKTeX209-luatex.dll
>   Fehlermodulversion:	0.0.0.0
>   Fehlermodulzeitstempel:	4f89c401
>   Ausnahmecode:	c0000005
>   Ausnahmeoffset:	001c3112
>   Betriebsystemversion:	6.0.6002.2.2.0.768.3
>   Gebietsschema-ID:	1031
>   Zusatzinformation 1:	a639
>   Zusatzinformation 2:	d30636b18506cc4045e567ea7e0d56ca
>   Zusatzinformation 3:	0d8c
>   Zusatzinformation 4:	b10a82d72fc083b00aac319a4871e166

I am using an up-to-date MiKTeX installation on Windows Vista. MiKTeX is 
installed in the "Program Files" directory. And I am running lualatex as 
user, not an admin.

Has anyone else experienced this bug too and knows about a workaround?

Best regards,

Dieter K?hler


From luatex at nililand.de  Sun May  6 15:55:23 2012
From: luatex at nililand.de (Ulrike Fischer)
Date: Sun, 6 May 2012 15:55:23 +0200
Subject: [luatex] Attempt to build font name database fails with app
	crash
References: <4FA59805.6000502@philo.de>
Message-ID: <1i4td7o2mqht9$.dlg@nililand.de>

Am Sat, 5 May 2012 23:13:41 +0200 schrieb Dieter K?hler:

> Hi all,
> 
> When I use the \setmainfont{} command from the fontspec package, 
> lualatex crashes while attempting to build a font name database.
> 
> The last lines from the log are:
> 
>> luaotfload | Font names database not found, generating new one.
>>              This can take several minutes; please be patient.
>> luaotfload | Updating the font names database:
>> luaotfload | Scanning TEXMF and OS fonts...
> 
> A few seconds after this output lualatex.exe crashes. These are the 
> details from the crash report:

> I am using an up-to-date MiKTeX installation on Windows Vista. MiKTeX is 
> installed in the "Program Files" directory. And I am running lualatex as 
> user, not an admin.

Run on a command line

mkluatexfontdb -v

If it stops/crashes at a font, try if it works if you add this font
to the blacklist. See the documentation of luaotfload for details.


-- 
Ulrike Fischer 


From dieter.koehler at philo.de  Sun May  6 19:16:59 2012
From: dieter.koehler at philo.de (=?ISO-8859-1?Q?Dieter_K=F6hler?=)
Date: Sun, 6 May 2012 19:16:59 +0200
Subject: [luatex] Attempt to build font name database fails with
	app	crash
In-Reply-To: <1i4td7o2mqht9$.dlg@nililand.de>
References: <4FA59805.6000502@philo.de> <1i4td7o2mqht9$.dlg@nililand.de>
Message-ID: <4FA6B20B.3030802@philo.de>

Thank you, Ulrike for you explanation!!!

After discovering the problematic font, it took  me still some time to 
figure out, how to add it to the black list.  So just for the archives, 
here is what I needed to figure out:

After running "mkluatexfontdb -v" as adviced I found out at which font 
mkluatexfontdb crashed.  So I needed to blacklist the font in question. 
For this purpose the luaotfload manual advised me to create a 
otfl-blacklist.cnf file and put it somewhere where "kpse" (whatever this 
is?) can find it.  I first thought: Pehaps I should put the file in the 
same directory as mkluatexfontdb.exe.  But then I found out that there 
is already an otfl-blacklist.cnf file in my MiKTeX Windows installation 
in the "tex/luatex/luaotfload" subdirectory. It had already some 
blacklisted fonts in it.  So I appended the fontname including the file 
extension to it.  However, mkluatexfontdb still tried to process the 
font in question.  After some laborious experiemnts I discovered the 
reason of it: The fontnames in the blacklist need to be normalized to 
lower-case.  And I also discovered that, if I use complete paths, the 
back-slashes needs to be normalized to forward-slashes. After adding the 
fontname (including its file extension) in lower-case to 
otfl-blacklist.cnf, building the fontname database finally worked!

Dieter K?hler


Am 06.05.2012 15:55, schrieb Ulrike Fischer:
> Am Sat, 5 May 2012 23:13:41 +0200 schrieb Dieter K?hler:
>
>> Hi all,
>>
>> When I use the \setmainfont{} command from the fontspec package,
>> lualatex crashes while attempting to build a font name database.
>>
>> The last lines from the log are:
>>
>>> luaotfload | Font names database not found, generating new one.
>>>               This can take several minutes; please be patient.
>>> luaotfload | Updating the font names database:
>>> luaotfload | Scanning TEXMF and OS fonts...
>>
>> A few seconds after this output lualatex.exe crashes. These are the
>> details from the crash report:
>
>> I am using an up-to-date MiKTeX installation on Windows Vista. MiKTeX is
>> installed in the "Program Files" directory. And I am running lualatex as
>> user, not an admin.
>
> Run on a command line
>
> mkluatexfontdb -v
>
> If it stops/crashes at a font, try if it works if you add this font
> to the blacklist. See the documentation of luaotfload for details.
>
>


From mojca.miklavec.lists at gmail.com  Mon May  7 09:34:48 2012
From: mojca.miklavec.lists at gmail.com (Mojca Miklavec)
Date: Mon, 7 May 2012 09:34:48 +0200
Subject: [luatex] Attempt to build font name database fails with app
	crash
In-Reply-To: <4FA6B20B.3030802@philo.de>
References: <4FA59805.6000502@philo.de> <1i4td7o2mqht9$.dlg@nililand.de>
 <4FA6B20B.3030802@philo.de>
Message-ID: <CALBOmsZr__M--PiKyE7DfEEM7GaVJuyfFe0dpYYL2Wk8Ga1c7Q@mail.gmail.com>

On Sun, May 6, 2012 at 7:16 PM, Dieter K?hler wrote:
>
> After discovering the problematic font

LuaTeX should not crash even if the font is "problematic" in some way,
but it is likely that nobody else has ever tried that font. If you
managed to find the problematic font, that helps a lot.

Which font was that? Is it a freely available (so that one could
easily reproduce the problem on other systems) or a commercial one?

Mojca


From dieter.koehler at philo.de  Mon May  7 09:50:40 2012
From: dieter.koehler at philo.de (=?UTF-8?B?RGlldGVyIEvDtmhsZXI=?=)
Date: Mon, 7 May 2012 09:50:40 +0200
Subject: [luatex] Attempt to build font name database fails with
	app	crash
In-Reply-To: <CALBOmsZr__M--PiKyE7DfEEM7GaVJuyfFe0dpYYL2Wk8Ga1c7Q@mail.gmail.com>
References: <4FA59805.6000502@philo.de> <1i4td7o2mqht9$.dlg@nililand.de>
 <4FA6B20B.3030802@philo.de>
 <CALBOmsZr__M--PiKyE7DfEEM7GaVJuyfFe0dpYYL2Wk8Ga1c7Q@mail.gmail.com>
Message-ID: <4FA77ED0.7030707@philo.de>

> LuaTeX should not crash even if the font is "problematic" in some way,
> but it is likely that nobody else has ever tried that font. If you
> managed to find the problematic font, that helps a lot.
>
> Which font was that? Is it a freely available (so that one could
> easily reproduce the problem on other systems) or a commercial one?

I already sent a more detailed bug report, including the font details, 
to the lulatex-dev mailinglist.  Anyway, the font file is named 
"orlando.ttf" and has the version timestamp "1994-09-27 15:35:31" (the 
date documented inside the font file, not the file date). I cannot 
provide you with the font itself, because I do not know, whether it is 
free or not.

Dieter K?hler

From mojca.miklavec.lists at gmail.com  Mon May  7 09:54:51 2012
From: mojca.miklavec.lists at gmail.com (Mojca Miklavec)
Date: Mon, 7 May 2012 09:54:51 +0200
Subject: [luatex] Attempt to build font name database fails with app
	crash
In-Reply-To: <4FA77ED0.7030707@philo.de>
References: <4FA59805.6000502@philo.de> <1i4td7o2mqht9$.dlg@nililand.de>
 <4FA6B20B.3030802@philo.de>
 <CALBOmsZr__M--PiKyE7DfEEM7GaVJuyfFe0dpYYL2Wk8Ga1c7Q@mail.gmail.com>
 <4FA77ED0.7030707@philo.de>
Message-ID: <CALBOmsaZ8b6uv9-iocBDsk6VX-PXexyarm+Pk5RVaUXzv5QO9A@mail.gmail.com>

On Mon, May 7, 2012 at 9:50 AM, Dieter K?hler wrote:
> I cannot provide you with the font
> itself, because I do not know, whether it is free or not.

This one?
    http://www.webpagepublicity.com/free-fonts-o2.html
    http://www.webpagepublicity.com/free-fonts/o/Orlando.ttf

Mojca


From mojca.miklavec.lists at gmail.com  Mon May  7 10:09:33 2012
From: mojca.miklavec.lists at gmail.com (Mojca Miklavec)
Date: Mon, 7 May 2012 10:09:33 +0200
Subject: [luatex] Attempt to build font name database fails with app
	crash
In-Reply-To: <CALBOmsaZ8b6uv9-iocBDsk6VX-PXexyarm+Pk5RVaUXzv5QO9A@mail.gmail.com>
References: <4FA59805.6000502@philo.de> <1i4td7o2mqht9$.dlg@nililand.de>
 <4FA6B20B.3030802@philo.de>
 <CALBOmsZr__M--PiKyE7DfEEM7GaVJuyfFe0dpYYL2Wk8Ga1c7Q@mail.gmail.com>
 <4FA77ED0.7030707@philo.de>
 <CALBOmsaZ8b6uv9-iocBDsk6VX-PXexyarm+Pk5RVaUXzv5QO9A@mail.gmail.com>
Message-ID: <CALBOmsY2YcTcXF1N2pV-wuJTaV5HnzA-xgbJkUXyPVktsV9iAg@mail.gmail.com>

On Mon, May 7, 2012 at 9:54 AM, Mojca Miklavec wrote:
>
> ? ?http://www.webpagepublicity.com/free-fonts/o/Orlando.ttf

If I try to install the font on my Mac, it cries out with
   1 minor problem was found. Proceed with caution.
   2 serious errors were found. Do not use these fonts.

The errors seem to be in 'post' and 'kern' tables, the warnings in 'sfnt'.

A simple example like

\starttext
\font\a=Orlando.ttf \a abc
\stoptext

crashes on my computer as well:

fonts           > otf loading > loading: Orlando.ttf (hash: orlando)
mtx-context     | fatal error: no return code, message: luatex:
execution interrupted

So: the font is definitely buggy, but it would be nice if luatex would
catch the problem and refuse to load the font instead of crashing.

Mojca


From pragma at wxs.nl  Mon May  7 10:21:10 2012
From: pragma at wxs.nl (Hans Hagen)
Date: Mon, 7 May 2012 10:21:10 +0200
Subject: [luatex] Attempt to build font name database fails with app
	crash
In-Reply-To: <CALBOmsaZ8b6uv9-iocBDsk6VX-PXexyarm+Pk5RVaUXzv5QO9A@mail.gmail.com>
References: <4FA59805.6000502@philo.de> <1i4td7o2mqht9$.dlg@nililand.de>
 <4FA6B20B.3030802@philo.de>
 <CALBOmsZr__M--PiKyE7DfEEM7GaVJuyfFe0dpYYL2Wk8Ga1c7Q@mail.gmail.com>
 <4FA77ED0.7030707@philo.de>
 <CALBOmsaZ8b6uv9-iocBDsk6VX-PXexyarm+Pk5RVaUXzv5QO9A@mail.gmail.com>
Message-ID: <4FA785F6.2080901@wxs.nl>

On 7-5-2012 09:54, Mojca Miklavec wrote:
> On Mon, May 7, 2012 at 9:50 AM, Dieter K?hler wrote:
>> I cannot provide you with the font
>> itself, because I do not know, whether it is free or not.
>
> This one?
>      http://www.webpagepublicity.com/free-fonts-o2.html
>      http://www.webpagepublicity.com/free-fonts/o/Orlando.ttf

One of those sites with (e.g. optima) rip-offs?

Hans


-----------------------------------------------------------------
                                           Hans Hagen | PRAGMA ADE
               Ridderstraat 27 | 8061 GH Hasselt | The Netherlands
     tel: 038 477 53 69 | voip: 087 875 68 74 | www.pragma-ade.com
                                              | www.pragma-pod.nl
-----------------------------------------------------------------

From Robin.Fairbairns at cl.cam.ac.uk  Mon May  7 10:47:00 2012
From: Robin.Fairbairns at cl.cam.ac.uk (Robin Fairbairns)
Date: Mon, 7 May 2012 09:47:00 +0100
Subject: [luatex] Attempt to build font name database fails with app
	crash
In-Reply-To: Your message of Mon, 07 May 2012 10:21:10 +0200.
 <4FA785F6.2080901@wxs.nl>
Message-ID: <5622.1336380420@cl.cam.ac.uk>

Hans Hagen <pragma at wxs.nl> wrote:

> On 7-5-2012 09:54, Mojca Miklavec wrote:
> > On Mon, May 7, 2012 at 9:50 AM, Dieter K?hler wrote:
> >> I cannot provide you with the font
> >> itself, because I do not know, whether it is free or not.
> >
> > This one?
> >      http://www.webpagepublicity.com/free-fonts-o2.html
> >      http://www.webpagepublicity.com/free-fonts/o/Orlando.ttf
> 
> One of those sites with (e.g. optima) rip-offs?

is that what optima looks like?  if so, why does anyone ever buy it?!


From khaledhosny at eglug.org  Mon May  7 11:10:55 2012
From: khaledhosny at eglug.org (Khaled Hosny)
Date: Mon, 7 May 2012 11:10:55 +0200
Subject: [luatex] Attempt to build font name database fails with app
	crash
In-Reply-To: <CALBOmsY2YcTcXF1N2pV-wuJTaV5HnzA-xgbJkUXyPVktsV9iAg@mail.gmail.com>
References: <4FA59805.6000502@philo.de> <1i4td7o2mqht9$.dlg@nililand.de>
 <4FA6B20B.3030802@philo.de>
 <CALBOmsZr__M--PiKyE7DfEEM7GaVJuyfFe0dpYYL2Wk8Ga1c7Q@mail.gmail.com>
 <4FA77ED0.7030707@philo.de>
 <CALBOmsaZ8b6uv9-iocBDsk6VX-PXexyarm+Pk5RVaUXzv5QO9A@mail.gmail.com>
 <CALBOmsY2YcTcXF1N2pV-wuJTaV5HnzA-xgbJkUXyPVktsV9iAg@mail.gmail.com>
Message-ID: <20120507091055.GB2407@khaled-laptop>

On Mon, May 07, 2012 at 10:09:33AM +0200, Mojca Miklavec wrote:
> On Mon, May 7, 2012 at 9:54 AM, Mojca Miklavec wrote:
> >
> > ? ?http://www.webpagepublicity.com/free-fonts/o/Orlando.ttf
> 
> If I try to install the font on my Mac, it cries out with
>    1 minor problem was found. Proceed with caution.
>    2 serious errors were found. Do not use these fonts.
> 
> The errors seem to be in 'post' and 'kern' tables, the warnings in 'sfnt'.
> 
> A simple example like
> 
> \starttext
> \font\a=Orlando.ttf \a abc
> \stoptext
> 
> crashes on my computer as well:
> 
> fonts           > otf loading > loading: Orlando.ttf (hash: orlando)
> mtx-context     | fatal error: no return code, message: luatex:
> execution interrupted
> 
> So: the font is definitely buggy, but it would be nice if luatex would
> catch the problem and refuse to load the font instead of crashing.

The crash is in fontforge part of the font loader, the same fonts also
crashes current FontForge in the same place (bad font encoding, it
seems).

Regards,
 Khaled

From dieter.koehler at philo.de  Mon May  7 22:13:23 2012
From: dieter.koehler at philo.de (=?ISO-8859-15?Q?Dieter_K=F6hler?=)
Date: Mon, 7 May 2012 22:13:23 +0200
Subject: [luatex] LuaTeX license?
Message-ID: <4FA82CE3.8050209@philo.de>

Hi all,

I couldn't find any information about under which license LuaTeX is 
released on the LuaTeX Web-site.  I would like to call LuaTeX from 
within a proprietary application: The application writes a latex file to 
the harddisk, runs LuaTeX to generate a PDF and sents it to Acrobat 
Reader to display it.  Would that be ok?

Dieter K?hler

From martin at oneiros.de  Mon May  7 22:21:02 2012
From: martin at oneiros.de (=?ISO-8859-1?Q?Martin_Schr=F6der?=)
Date: Mon, 7 May 2012 22:21:02 +0200
Subject: [luatex] LuaTeX license?
In-Reply-To: <4FA82CE3.8050209@philo.de>
References: <4FA82CE3.8050209@philo.de>
Message-ID: <CAP7DCDdViaBFWXrxO-u1D8gf7CqB_d0Xy+mDBRSt_asU623EGA@mail.gmail.com>

2012/5/7 Dieter K?hler <dieter.koehler at philo.de>:
> I couldn't find any information about under which license LuaTeX is released
> on the LuaTeX Web-site. ?I would like to call LuaTeX from within a

GPL2++.

> proprietary application: The application writes a latex file to the
> harddisk, runs LuaTeX to generate a PDF and sents it to Acrobat Reader to
> display it. ?Would that be ok?

Yes. :-)

Best
   Martin


From davidc at nag.co.uk  Tue May  8 21:11:45 2012
From: davidc at nag.co.uk (David Carlisle)
Date: Tue, 8 May 2012 20:11:45 +0100
Subject: [luatex] incompatible change to mathcode
Message-ID: <4FA96FF1.1040209@nag.co.uk>


Luatex has changed mathcode to allow a larger numeric range however 
changing TeX primitives without giving them new names seems suspect and 
in this particular case, since \mathcode has changed but \mathchardef 
has not the essential link between these two commands has been broken.

This has come to light (again) due to a latex bug report that the core 
tools latex package bm is broken in lualatex

http://www.latex-project.org/cgi-bin/ltxbugs2html?pr=tools/4188

Searching with google suggests that several other packages notably 
amsmath are similarly broken but workarounds have been provided on an ad 
hoc basis.

Can this change be reversed and TeX primitives _not_ be changed in 
incompatible ways.

\documentclass{article}

\mathchardef\matha\mathcode`a
\showthe\matha
\stop

produces

 > 29025.
l.4 \showthe\matha


on systems compatible with TeX

on lulatex it produces:

$ lualatex bm99
This is LuaTeX, Version beta-0.70.1-2012042619 (rev 4277)
  restricted \write18 enabled.
(./bm99.tex
LaTeX2e <2011/06/27>
LuaTeX adaptation of babel <v3.8l-luatex-1.4> and hyphenation patterns 
for engl
ish, dumylang, nohyphenation, loaded.
(/usr/share/texmf-dist/tex/latex/base/article.cls
Document Class: article 2007/10/19 v1.4h Standard LaTeX document class
(/usr/share/texmf-dist/tex/latex/base/size10.clo))
! Invalid math code.
l.3 \mathchardef\matha\mathcode`a



David

From khaledhosny at eglug.org  Tue May  8 22:38:17 2012
From: khaledhosny at eglug.org (Khaled Hosny)
Date: Tue, 8 May 2012 22:38:17 +0200
Subject: [luatex] incompatible change to mathcode
In-Reply-To: <4FA96FF1.1040209@nag.co.uk>
References: <4FA96FF1.1040209@nag.co.uk>
Message-ID: <20120508203817.GB1143@khaled-laptop>

On Tue, May 08, 2012 at 08:11:45PM +0100, David Carlisle wrote:
> 
> Luatex has changed mathcode to allow a larger numeric range however
> changing TeX primitives without giving them new names seems suspect
> and in this particular case, since \mathcode has changed but
> \mathchardef has not the essential link between these two commands
> has been broken.
> 
> This has come to light (again) due to a latex bug report that the
> core tools latex package bm is broken in lualatex
> 
> http://www.latex-project.org/cgi-bin/ltxbugs2html?pr=tools/4188
> 
> Searching with google suggests that several other packages notably
> amsmath are similarly broken but workarounds have been provided on
> an ad hoc basis.
> 
> Can this change be reversed and TeX primitives _not_ be changed in
> incompatible ways.

We extend other primitives as well, e.g. \char (XeTeX does, too).

IMO, I think we should just extend \mathchardef in a similar way, so
that \mathchardef\matha\mathcode`a works again.

Regards,
 Khaled

From davidc at nag.co.uk  Wed May  9 03:55:50 2012
From: davidc at nag.co.uk (David Carlisle)
Date: Wed, 9 May 2012 02:55:50 +0100
Subject: [luatex] incompatible change to mathcode
In-Reply-To: <4FA96FF1.1040209@nag.co.uk>
References: <4FA96FF1.1040209@nag.co.uk>
Message-ID: <4FA9CEA6.7090600@nag.co.uk>


Thanks for your reply,

> We extend other primitives as well, e.g. \char (XeTeX does, too).

\char is less problematic as it doesn't return a value unlike \mathcode.

>
> IMO, I think we should just extend \mathchardef in a similar way, so
> that \mathchardef\matha\mathcode`a works again.

That would at least make the changes consistent, so would be an 
improvement but they would still be dreadfully incompatible with TeX.

It wouldn't for example be enough to fix the latex bug report referenced 
in my previous mail. It would move the error to somewhere else.

bm uses \mathchardef\matha\mathcode`a followed by \meaning\matha to get 
the hex mathcode which it then splits up to extract the components.

even if the \mathchardef did not generate an error the code will fail 
completely, and to be honest after reading the luatex reference I 
couldn't see how to fix it. Perhaps it's just because it is late but....

with latex

\mathcode`a gives hex 7161

so that's mathalpha, letters  char 61

with lualatex I get

  1E00061

but apart from the obvious 61 at the end I have no idea where that 
number comes from?


David







From schultzk at gmx.net  Wed May  9 08:52:24 2012
From: schultzk at gmx.net (Keith J. Schultz)
Date: Wed, 9 May 2012 08:52:24 +0200
Subject: [luatex] incompatible change to mathcode
In-Reply-To: <4FA9CEA6.7090600@nag.co.uk>
References: <4FA96FF1.1040209@nag.co.uk> <4FA9CEA6.7090600@nag.co.uk>
Message-ID: <83EA1432-7DF3-4E37-B99B-59F90D0FD922@gmx.net>

Hi All,

Something must be dreadfully amiss here!!

1E 00 06 1 is not a hex code at All !!!! it is missing a digit!

It should be be at least  01 E0 00 61 !

Just an observation!

regards
	Keith.

Am 09.05.2012 um 03:55 schrieb David Carlisle:

> 
> Thanks for your reply,
> 
>> We extend other primitives as well, e.g. \char (XeTeX does, too).
> 
> \char is less problematic as it doesn't return a value unlike \mathcode.
> 
>> 
>> IMO, I think we should just extend \mathchardef in a similar way, so
>> that \mathchardef\matha\mathcode`a works again.
> 
> That would at least make the changes consistent, so would be an improvement but they would still be dreadfully incompatible with TeX.
> 
> It wouldn't for example be enough to fix the latex bug report referenced in my previous mail. It would move the error to somewhere else.
> 
> bm uses \mathchardef\matha\mathcode`a followed by \meaning\matha to get the hex mathcode which it then splits up to extract the components.
> 
> even if the \mathchardef did not generate an error the code will fail completely, and to be honest after reading the luatex reference I couldn't see how to fix it. Perhaps it's just because it is late but....
> 
> with latex
> 
> \mathcode`a gives hex 7161
> 
> so that's mathalpha, letters  char 61
> 
> with lualatex I get
> 
> 1E00061
> 
> but apart from the obvious 61 at the end I have no idea where that number comes from?
> 
> 
> David
> 
> 
> 
> 
> 
> 



From schultzk at gmx.net  Wed May  9 09:17:45 2012
From: schultzk at gmx.net (Keith J. Schultz)
Date: Wed, 9 May 2012 09:17:45 +0200
Subject: [luatex] incompatible change to mathcode
In-Reply-To: <4FA9CEA6.7090600@nag.co.uk>
References: <4FA96FF1.1040209@nag.co.uk> <4FA9CEA6.7090600@nag.co.uk>
Message-ID: <52B1C639-6456-4221-874A-C6F669235E1A@gmx.net>

Hi All,

From the bug report:
Description of bug:
LuaTeX's \mathcode is extended to allow for a 21-bit character argument.
This seems to cause errors when using bm.sty with LuaLaTeX.
A 21-bit character argument! That would mean that it is stored in  bit field!
If so, then the manipulation of the bit field could be flawed.

If it is store in 3 Byte (24-bit), then there could be encoding problems.
In others one of the highest/lowest byte might contain junk!

Also, depending on how the values are assigned this could cause problems.

My assumption is that somebody has either his/her math wrong or the
algorithm(s) used are flawed. 

regards
	Keith.





Am 09.05.2012 um 03:55 schrieb David Carlisle:

> 
> Thanks for your reply,
> 
>> We extend other primitives as well, e.g. \char (XeTeX does, too).
> 
> \char is less problematic as it doesn't return a value unlike \mathcode.
> 
>> 
>> IMO, I think we should just extend \mathchardef in a similar way, so
>> that \mathchardef\matha\mathcode`a works again.
> 
> That would at least make the changes consistent, so would be an improvement but they would still be dreadfully incompatible with TeX.
> 
> It wouldn't for example be enough to fix the latex bug report referenced in my previous mail. It would move the error to somewhere else.
> 
> bm uses \mathchardef\matha\mathcode`a followed by \meaning\matha to get the hex mathcode which it then splits up to extract the components.
> 
> even if the \mathchardef did not generate an error the code will fail completely, and to be honest after reading the luatex reference I couldn't see how to fix it. Perhaps it's just because it is late but....
> 
> with latex
> 
> \mathcode`a gives hex 7161
> 
> so that's mathalpha, letters  char 61
> 
> with lualatex I get
> 
> 1E00061
> 
> but apart from the obvious 61 at the end I have no idea where that number comes from?
> 
> 
> David
> 
> 
> 
> 
> 
> 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://tug.org/pipermail/luatex/attachments/20120509/99096625/attachment.html>

From kmaeda at users.sourceforge.jp  Wed May  9 09:42:53 2012
From: kmaeda at users.sourceforge.jp (Kazuki Maeda)
Date: Wed, 9 May 2012 16:42:53 +0900
Subject: [luatex] incompatible change to mathcode
In-Reply-To: <4FA9CEA6.7090600@nag.co.uk>
References: <4FA96FF1.1040209@nag.co.uk>
	<4FA9CEA6.7090600@nag.co.uk>
Message-ID: <20120509164253.e33e2c8c.kmaeda@users.sourceforge.jp>

Dear All

> with lualatex I get
>
>   1E00061
>
> but apart from the obvious 61 at the end I have no idea where that
> number comes from?

I have experimented.


\luatexUmathcode`a="7"1"61
\the\mathcode`a            % 31457377 = 1*2^24 + 7*2^21 + 97

\luatexUmathcode`a="7"2"61
\the\mathcode`a            % 48234593 = 2*2^24 + 7*2^21 + 97

\luatexUmathcode`a="6"1"61
\the\mathcode`a            % 29360225 = 1*2^24 + 6*2^21 + 97


I hope this helps you.


Best regards,
Kazuki Maeda

From luatex at nililand.de  Wed May  9 09:59:40 2012
From: luatex at nililand.de (Ulrike Fischer)
Date: Wed, 9 May 2012 09:59:40 +0200
Subject: [luatex] incompatible change to mathcode
References: <4FA96FF1.1040209@nag.co.uk> <20120508203817.GB1143@khaled-laptop>
Message-ID: <1qrvbafrr4rlw$.dlg@nililand.de>

Am Tue, 8 May 2012 22:38:17 +0200 schrieb Khaled Hosny:

> On Tue, May 08, 2012 at 08:11:45PM +0100, David Carlisle wrote:
>> 
>> Luatex has changed mathcode to allow a larger numeric range however
>> changing TeX primitives without giving them new names seems suspect
>> and in this particular case, since \mathcode has changed but
>> \mathchardef has not the essential link between these two commands
>> has been broken.

> We extend other primitives as well, e.g. \char (XeTeX does, too).
> 
> IMO, I think we should just extend \mathchardef in a similar way, so
> that \mathchardef\matha\mathcode`a works again.

XeTeX doesn't change \mathcode, it has new primitive commands like
\XeTeXmathcodenum, \XeTeXmathchardef etc. 



-- 
Ulrike Fischer 


From luigi.scarso at gmail.com  Wed May  9 10:00:07 2012
From: luigi.scarso at gmail.com (luigi scarso)
Date: Wed, 9 May 2012 10:00:07 +0200
Subject: [luatex] incompatible change to mathcode
In-Reply-To: <52B1C639-6456-4221-874A-C6F669235E1A@gmx.net>
References: <4FA96FF1.1040209@nag.co.uk> <4FA9CEA6.7090600@nag.co.uk>
 <52B1C639-6456-4221-874A-C6F669235E1A@gmx.net>
Message-ID: <CAG5iGsDN3XdQR=p6sKC3=Zo7Cp21j4yoFQcwoAogYqhDp8EgSw@mail.gmail.com>

On Wed, May 9, 2012 at 9:17 AM, Keith J. Schultz <schultzk at gmx.net> wrote:
> Hi All,
>
> From the bug report:
>
> Description of bug:
> LuaTeX's \mathcode is extended to allow for a 21-bit character argument.
> This seems to cause errors when using bm.sty with LuaLaTeX.
>
> A 21-bit character argument! That would mean that it is stored in ?bit
> field!
> If so, then the manipulation of the bit field could be flawed.
The Unicode Standard encodes characters in the range U+0000..U+10FFFF,
which amounts to a 21-bit code space.
I guess that how they are stored is  not the problem.

-- 
luigi


From taco at elvenkind.com  Wed May  9 10:16:50 2012
From: taco at elvenkind.com (Taco Hoekwater)
Date: Wed, 9 May 2012 10:16:50 +0200
Subject: [luatex] incompatible change to mathcode
In-Reply-To: <4FA96FF1.1040209@nag.co.uk>
References: <4FA96FF1.1040209@nag.co.uk>
Message-ID: <4FAA27F2.6000409@elvenkind.com>


Hi all,

On 05/08/2012 09:11 PM, David Carlisle wrote:
>
> Luatex has changed mathcode to allow a larger numeric range however
> changing TeX primitives without giving them new names seems suspect and
> in this particular case, since \mathcode has changed but \mathchardef
> has not the essential link between these two commands has been broken.

Not quite. You get the results below because the math code for `a
has been set using \Umathcode, not the TeX82 \mathcode. In fact,
assignment to \mathcode is not extended in LuaTeX at all.

The output of \mathcode is indeed extended, and the value you get
uses the same format as the input for \Umathcodenum (with that
somewhat unusual XeTeX-invented format explained by Kazuki Maeda).

The reason for this is that math character objects in luatex remember
how they were defined. So if you do not want incompatibilities with
TeX82, it would help if you did not use extended primitives to define stuff.

That said, probably the result of (\the)\mathcode can be reverted
back to compatibility with TeX82, and output a warning (and zero)
if the actual value is out-of-range (like XeTeX does).

Anyway, please do not panic and please all don't get your panties
in a bunch. The world is still just as safe a place to live in with
this luatex bug in it. And actually, it helps if these bugs are
reported in the tracker ;)

Best wishes,
Taco

From schultzk at gmx.net  Wed May  9 10:59:32 2012
From: schultzk at gmx.net (Keith J. Schultz)
Date: Wed, 9 May 2012 10:59:32 +0200
Subject: [luatex] incompatible change to mathcode
In-Reply-To: <20120509164253.e33e2c8c.kmaeda@users.sourceforge.jp>
References: <4FA96FF1.1040209@nag.co.uk> <4FA9CEA6.7090600@nag.co.uk>
 <20120509164253.e33e2c8c.kmaeda@users.sourceforge.jp>
Message-ID: <88995FF5-8286-4058-86AE-F041407DC6C0@gmx.net>

Hi All,

Let me get this straight:
	7161 is a hex in highst bit first
	Then we have a 16 bit value
then 
	7161(hex) =  0111 0001 0110 0001 = 2^14 +  2^13 + 2^12 + 2^8 + 2^6 + 2^5 + 1 = 29024

Now I will admit that I know nothing about the syntax of \luatexUmathcode but I find it very
dangerous to mix bit ordering!!

That is as seen below  71, 1 is the higher digit. where 61 is in standard ordering!

What furthermore irks me is that we have below a 24-bit encoding where LuaTex just has
21-bit character argument.

So it seems evident to me that somebody has goofed big time with their math.  
Yet, it is no wonder with this kind of wierd math/encoding!

regards
	Keith


Am 09.05.2012 um 09:42 schrieb Kazuki Maeda:

> Dear All
> 
>> with lualatex I get
>> 
>>  1E00061
>> 
>> but apart from the obvious 61 at the end I have no idea where that
>> number comes from?
> 
> I have experimented.
> 
> 
> \luatexUmathcode`a="7"1"61
> \the\mathcode`a            % 31457377 = 1*2^24 + 7*2^21 + 97
> 
> \luatexUmathcode`a="7"2"61
> \the\mathcode`a            % 48234593 = 2*2^24 + 7*2^21 + 97
> 
> \luatexUmathcode`a="6"1"61
> \the\mathcode`a            % 29360225 = 1*2^24 + 6*2^21 + 97
> 
> 
> I hope this helps you.
> 
> 
> Best regards,
> Kazuki Maeda



From taco at elvenkind.com  Wed May  9 11:03:43 2012
From: taco at elvenkind.com (Taco Hoekwater)
Date: Wed, 9 May 2012 11:03:43 +0200
Subject: [luatex] incompatible change to mathcode
In-Reply-To: <88995FF5-8286-4058-86AE-F041407DC6C0@gmx.net>
References: <4FA96FF1.1040209@nag.co.uk> <4FA9CEA6.7090600@nag.co.uk>
 <20120509164253.e33e2c8c.kmaeda@users.sourceforge.jp>
 <88995FF5-8286-4058-86AE-F041407DC6C0@gmx.net>
Message-ID: <4FAA32EF.4040103@elvenkind.com>



On 05/09/2012 10:59 AM, Keith J. Schultz wrote:
>
> So it seems evident to me that somebody has goofed big time with their math.

No, everything is working exactly as intended in the calculus. In fact,
this somewhat weird construct is the only possible way to fit all the
required data into a signed 32-bit integer.

Best wishes,
Taco

From taco at elvenkind.com  Wed May  9 11:15:15 2012
From: taco at elvenkind.com (Taco Hoekwater)
Date: Wed, 9 May 2012 11:15:15 +0200
Subject: [luatex] incompatible change to mathcode
In-Reply-To: <4FAA32EF.4040103@elvenkind.com>
References: <4FA96FF1.1040209@nag.co.uk> <4FA9CEA6.7090600@nag.co.uk>
 <20120509164253.e33e2c8c.kmaeda@users.sourceforge.jp>
 <88995FF5-8286-4058-86AE-F041407DC6C0@gmx.net>
 <4FAA32EF.4040103@elvenkind.com>
Message-ID: <4FAA35A3.90601@elvenkind.com>

On 05/09/2012 11:03 AM, Taco Hoekwater wrote:
>
>
> On 05/09/2012 10:59 AM, Keith J. Schultz wrote:
>>
>> So it seems evident to me that somebody has goofed big time with their
>> math.
>
> No, everything is working exactly as intended in the calculus. In fact,
> this somewhat weird construct is the only possible way to fit all the
> required data into a signed 32-bit integer.

Sorry, make that 'only sane way'. Anyway, this is how XeTeX does it, so
we are sticking to that.


From davidc at nag.co.uk  Wed May  9 12:42:17 2012
From: davidc at nag.co.uk (David Carlisle)
Date: Wed, 9 May 2012 11:42:17 +0100
Subject: [luatex] incompatible change to mathcode
In-Reply-To: <4FAA27F2.6000409@elvenkind.com>
References: <4FA96FF1.1040209@nag.co.uk> <4FAA27F2.6000409@elvenkind.com>
Message-ID: <4FAA4A09.8010809@nag.co.uk>

On 09/05/2012 09:16, Taco Hoekwater wrote:
>
> Hi all,
>
> On 05/08/2012 09:11 PM, David Carlisle wrote:
Taco thanks for CC'ing me, saves me waiting til it appears in the
archives:-)

>>
>> Luatex has changed mathcode to allow a larger numeric range however
>> changing TeX primitives without giving them new names seems suspect
>> and in this particular case, since \mathcode has changed but
>> \mathchardef has not the essential link between these two commands
>> has been broken.
>
> Not quite. You get the results below because the math code for `a
> has been set using \Umathcode, not the TeX82 \mathcode. In fact,
> assignment to \mathcode is not extended in LuaTeX at all.

Ah! that explains why the number changed, that bit I couldn't understand
at all.

>
> The output of \mathcode is indeed extended, and the value you get
> uses the same format as the input for \Umathcodenum (with that
> somewhat unusual XeTeX-invented format explained by Kazuki Maeda)
I missed some of the thread, I'll catch up on the archives and then
come back to this email.....

.
>
> The reason for this is that math character objects in luatex remember
> how they were defined.

> So if you do not want incompatibilities with TeX82, it would help if
> you did not use extended primitives to define stuff.

Yes but as you know, there isn't a single "you" involved here. If bm (or
amsmath) or any other ancient bit of code that's using \mathcode gets
used in lualatex, then the person who wrote the package and the person
using the package are typically not the person who set up the mathcode
of the letter a. So you are asking three people doing work decades apart
to cooperate:-)


>
> That said, probably the result of (\the)\mathcode can be reverted
> back to compatibility with TeX82, and output a warning (and zero) if
> the actual value is out-of-range (like XeTeX does).

I think that would be an improvement, code using \mathcode-returned
values just isn't expecting this extended format.
>
> Anyway, please do not panic and please all don't get your panties in
> a bunch.

Oh don't worry about me, I'm quite used to taking a long view of these
things so long as things get sorted out in the next decade or so that'll
be fine:-)


> The world is still just as safe a place to live in with this luatex
> bug in it. And actually, it helps if these bugs are reported in the
> tracker ;)

Well yes although it isn't really a bug (in that it was presumably
implemented as designed) rather than (I claim) a questionable design
decision when you take legacy code into account. Which is why I raised
it on this discussion list rather than as a bug.

>
> Best wishes, Taco

Kazuki Maeda wrote

>
>
> \luatexUmathcode`a="7"1"61 \the\mathcode`a            % 31457377 =
> 1*2^24 + 7*2^21 + 97

>
> I hope this helps you.

Thanks, it helps me (so I understand the number) I'll have to see if I
can put that understanding into bm. (What bm is trying to do is inspect
the mathcode of a letter, take it apart and then construct a mathcode
for a token that has the same mathclass and character code but uses the
fam number for a bold font. (actually for unicode fonts there would be
another possibility to get the bold glyph from the plane 1 math
alphabetic character range in the same font).

Given that bm has been completely stable for 20 years, it's not that big
a deal to have to update it for the unicode age, but it would be good
(for bm, and for every other math package author) if that only needs to
be done once. My main concern was that was not the case. But actually if
I understand the replies correctly I should be able to share the code
for xelatex and lualatex so long as I avoid \mathcode once I have
detected either of them?

David



________________________________________________________________________
The Numerical Algorithms Group Ltd is a company registered in England
and Wales with company number 1249803. The registered office is:
Wilkinson House, Jordan Hill Road, Oxford OX2 8DR, United Kingdom.

This e-mail has been scanned for all viruses by Star. The service is
powered by MessageLabs. 
________________________________________________________________________

From khaledhosny at eglug.org  Wed May  9 13:24:38 2012
From: khaledhosny at eglug.org (Khaled Hosny)
Date: Wed, 9 May 2012 13:24:38 +0200
Subject: [luatex] incompatible change to mathcode
In-Reply-To: <4FAA27F2.6000409@elvenkind.com>
References: <4FA96FF1.1040209@nag.co.uk>
 <4FAA27F2.6000409@elvenkind.com>
Message-ID: <20120509112438.GB4976@khaled-laptop>

On Wed, May 09, 2012 at 10:16:50AM +0200, Taco Hoekwater wrote:
> 
> Hi all,
> 
> On 05/08/2012 09:11 PM, David Carlisle wrote:
> >
> >Luatex has changed mathcode to allow a larger numeric range however
> >changing TeX primitives without giving them new names seems suspect and
> >in this particular case, since \mathcode has changed but \mathchardef
> >has not the essential link between these two commands has been broken.
> 
> Not quite. You get the results below because the math code for `a
> has been set using \Umathcode, not the TeX82 \mathcode. In fact,
> assignment to \mathcode is not extended in LuaTeX at all.

Right, TeX Live's luatex.ini loads luatex-unicode-letters.tex which
unconditionally sets the mathcode for all characters using \Umathcode.

The following example gives an error when run with luatex, but no error
if -ini is passed:

\input plain
\mathchardef\matha\mathcode`a
\bye

That is the second issue I have with this luatex-unicode-letters.tex
files, which makes me wounder if it is really a wise idea to preload it
into the format.

> The output of \mathcode is indeed extended, and the value you get
> uses the same format as the input for \Umathcodenum (with that
> somewhat unusual XeTeX-invented format explained by Kazuki Maeda).
> 
> The reason for this is that math character objects in luatex remember
> how they were defined. So if you do not want incompatibilities with
> TeX82, it would help if you did not use extended primitives to define stuff.
> 
> That said, probably the result of (\the)\mathcode can be reverted
> back to compatibility with TeX82, and output a warning (and zero)
> if the actual value is out-of-range (like XeTeX does).

Attached a patch that does this (with the added bonus of fixing the
damage of luatex-unicode-letters.tex), what do you think? if it is OK,
I'll commit it.

Regards,
 Khaled
-------------- next part --------------
A non-text attachment was scrubbed...
Name: mathchar_compat.diff
Type: text/x-diff
Size: 3808 bytes
Desc: not available
URL: <http://tug.org/pipermail/luatex/attachments/20120509/ed7d285b/attachment.bin>

From khaledhosny at eglug.org  Wed May  9 13:30:15 2012
From: khaledhosny at eglug.org (Khaled Hosny)
Date: Wed, 9 May 2012 13:30:15 +0200
Subject: [luatex] incompatible change to mathcode
In-Reply-To: <4FAA4A09.8010809@nag.co.uk>
References: <4FA96FF1.1040209@nag.co.uk> <4FAA27F2.6000409@elvenkind.com>
 <4FAA4A09.8010809@nag.co.uk>
Message-ID: <20120509113015.GC4976@khaled-laptop>

On Wed, May 09, 2012 at 11:42:17AM +0100, David Carlisle wrote:
> On 09/05/2012 09:16, Taco Hoekwater wrote:
> >So if you do not want incompatibilities with TeX82, it would help if
> >you did not use extended primitives to define stuff.
> 
> Yes but as you know, there isn't a single "you" involved here. If bm (or
> amsmath) or any other ancient bit of code that's using \mathcode gets
> used in lualatex, then the person who wrote the package and the person
> using the package are typically not the person who set up the mathcode
> of the letter a. So you are asking three people doing work decades apart
> to cooperate:-)

In this case it is even not one of the three, but whoever decided to use
\Umathcode in lua(la)latex.ini :)

Regards,
 Khaled

From taco at elvenkind.com  Wed May  9 13:46:03 2012
From: taco at elvenkind.com (Taco Hoekwater)
Date: Wed, 9 May 2012 13:46:03 +0200
Subject: [luatex] incompatible change to mathcode
In-Reply-To: <4FAA4A09.8010809@nag.co.uk>
References: <4FA96FF1.1040209@nag.co.uk> <4FAA27F2.6000409@elvenkind.com>
 <4FAA4A09.8010809@nag.co.uk>
Message-ID: <4FAA58FB.6030400@elvenkind.com>

On 05/09/2012 12:42 PM, David Carlisle wrote:
>
>> The world is still just as safe a place to live in with this luatex
>> bug in it. And actually, it helps if these bugs are reported in the
>> tracker ;)
>
> Well yes although it isn't really a bug (in that it was presumably
> implemented as designed) rather than (I claim) a questionable design
> decision when you take legacy code into account. Which is why I raised
> it on this discussion list rather than as a bug.

Well, in luatex tries to be 100% compatible with XeTeX (where
applicable) and in this case it clearly wasn't, so that qualifies
as a bug. As was the missing \Umathcharnumdef that I added this
morning btw.

> Given that bm has been completely stable for 20 years, it's not that big
> a deal to have to update it for the unicode age, but it would be good
> (for bm, and for every other math package author) if that only needs to
> be done once. My main concern was that was not the case. But actually if
> I understand the replies correctly I should be able to share the code
> for xelatex and lualatex so long as I avoid \mathcode once I have
> detected either of them?

I think so, but I have no knowledge of the internals of bm.

Best wishes,
Taco


From taco at elvenkind.com  Wed May  9 13:48:05 2012
From: taco at elvenkind.com (Taco Hoekwater)
Date: Wed, 9 May 2012 13:48:05 +0200
Subject: [luatex] incompatible change to mathcode
In-Reply-To: <20120509112438.GB4976@khaled-laptop>
References: <4FA96FF1.1040209@nag.co.uk> <4FAA27F2.6000409@elvenkind.com>
 <20120509112438.GB4976@khaled-laptop>
Message-ID: <4FAA5975.1090504@elvenkind.com>

On 05/09/2012 01:24 PM, Khaled Hosny wrote:
>>
>> That said, probably the result of (\the)\mathcode can be reverted
>> back to compatibility with TeX82, and output a warning (and zero)
>> if the actual value is out-of-range (like XeTeX does).
>
> Attached a patch that does this (with the added bonus of fixing the
> damage of luatex-unicode-letters.tex), what do you think? if it is OK,
> I'll commit it.

For this case it looks fine, but perhaps there should be a similar check
for handling \omathchardef?

Best wishes,
Taco

From davidc at nag.co.uk  Wed May  9 13:53:34 2012
From: davidc at nag.co.uk (David Carlisle)
Date: Wed, 9 May 2012 12:53:34 +0100
Subject: [luatex] incompatible change to mathcode
In-Reply-To: <4FAA58FB.6030400@elvenkind.com>
References: <4FA96FF1.1040209@nag.co.uk> <4FAA27F2.6000409@elvenkind.com>
 <4FAA4A09.8010809@nag.co.uk> <4FAA58FB.6030400@elvenkind.com>
Message-ID: <4FAA5ABE.5000105@nag.co.uk>

On 09/05/2012 12:46, Taco Hoekwater wrote:


>
> Well, in luatex tries to be 100% compatible with XeTeX (where
> applicable) and in this case it clearly wasn't, so that qualifies
> as a bug.



Oh OK, thanks that's useful information. So if I get more reports of 
packages doing different things on the two engines I'll go that route.


> As was the missing \Umathcharnumdef that I added this
> morning btw.

Yes thanks to all for that quick patch.

>
>> Given that bm has been completely stable for 20 years, it's not that big
>> a deal to have to update it for the unicode age, but it would be good
>> (for bm, and for every other math package author) if that only needs to
>> be done once. My main concern was that was not the case. But actually if
>> I understand the replies correctly I should be able to share the code
>> for xelatex and lualatex so long as I avoid \mathcode once I have
>> detected either of them?
>
> I think so,

I'll give it a try later.

> but I have no knowledge of the internals of bm.

I'd advise staying in that state:-)
>
> Best wishes,
> Taco

David



________________________________________________________________________
The Numerical Algorithms Group Ltd is a company registered in England
and Wales with company number 1249803. The registered office is:
Wilkinson House, Jordan Hill Road, Oxford OX2 8DR, United Kingdom.

This e-mail has been scanned for all viruses by Star. The service is
powered by MessageLabs. 
________________________________________________________________________

From khaledhosny at eglug.org  Wed May  9 15:16:59 2012
From: khaledhosny at eglug.org (Khaled Hosny)
Date: Wed, 9 May 2012 15:16:59 +0200
Subject: [luatex] incompatible change to mathcode
In-Reply-To: <4FAA5975.1090504@elvenkind.com>
References: <4FA96FF1.1040209@nag.co.uk> <4FAA27F2.6000409@elvenkind.com>
 <20120509112438.GB4976@khaled-laptop>
 <4FAA5975.1090504@elvenkind.com>
Message-ID: <20120509131659.GA22042@khaled-laptop>

On Wed, May 09, 2012 at 01:48:05PM +0200, Taco Hoekwater wrote:
> On 05/09/2012 01:24 PM, Khaled Hosny wrote:
> >>
> >>That said, probably the result of (\the)\mathcode can be reverted
> >>back to compatibility with TeX82, and output a warning (and zero)
> >>if the actual value is out-of-range (like XeTeX does).
> >
> >Attached a patch that does this (with the added bonus of fixing the
> >damage of luatex-unicode-letters.tex), what do you think? if it is OK,
> >I'll commit it.
> 
> For this case it looks fine, but perhaps there should be a similar check
> for handling \omathchardef?

Now that you bring it, do we really need the old aleph variants? They
don't seem to be used anywhere in my full TL installation, so there is
no case of backward compatibility and I see no practical need for them
when we have the new Unicode variants. I'd rather remove them completely
and simplify the code.

Regards,
 Khaled

From taco at elvenkind.com  Wed May  9 16:02:08 2012
From: taco at elvenkind.com (Taco Hoekwater)
Date: Wed, 9 May 2012 16:02:08 +0200
Subject: [luatex] incompatible change to mathcode
In-Reply-To: <20120509131659.GA22042@khaled-laptop>
References: <4FA96FF1.1040209@nag.co.uk> <4FAA27F2.6000409@elvenkind.com>
 <20120509112438.GB4976@khaled-laptop> <4FAA5975.1090504@elvenkind.com>
 <20120509131659.GA22042@khaled-laptop>
Message-ID: <7622A253-D86F-47CF-8A45-5FDD5AA59265@elvenkind.com>

Hi,

On May 9, 2012, at 3:16 PM, Khaled Hosny wrote:

> Now that you bring it, do we really need the old aleph variants? They
> don't seem to be used anywhere in my full TL installation, so there is
> no case of backward compatibility and I see no practical need for them
> when we have the new Unicode variants. I'd rather remove them completely
> and simplify the code.

Personally, I also see little point in the aleph versions of the math char/delimiter 
primitives. I am reluctant to remove them right away, but as far as I am concerned
they can be marked as deprecated. Objections are welcome, of course.

Best wishes,
Taco



From khaledhosny at eglug.org  Wed May  9 16:10:29 2012
From: khaledhosny at eglug.org (Khaled Hosny)
Date: Wed, 9 May 2012 16:10:29 +0200
Subject: [luatex] incompatible change to mathcode
In-Reply-To: <7622A253-D86F-47CF-8A45-5FDD5AA59265@elvenkind.com>
References: <4FA96FF1.1040209@nag.co.uk> <4FAA27F2.6000409@elvenkind.com>
 <20120509112438.GB4976@khaled-laptop>
 <4FAA5975.1090504@elvenkind.com>
 <20120509131659.GA22042@khaled-laptop>
 <7622A253-D86F-47CF-8A45-5FDD5AA59265@elvenkind.com>
Message-ID: <20120509141029.GB23656@khaled-laptop>

On Wed, May 09, 2012 at 04:02:08PM +0200, Taco Hoekwater wrote:
> Hi,
> 
> On May 9, 2012, at 3:16 PM, Khaled Hosny wrote:
> 
> > Now that you bring it, do we really need the old aleph variants? They
> > don't seem to be used anywhere in my full TL installation, so there is
> > no case of backward compatibility and I see no practical need for them
> > when we have the new Unicode variants. I'd rather remove them completely
> > and simplify the code.
> 
> Personally, I also see little point in the aleph versions of the math char/delimiter 
> primitives. I am reluctant to remove them right away, but as far as I am concerned
> they can be marked as deprecated. Objections are welcome, of course.

I think deprecating them would be OK, later we can decide to remove them
or not.

Regards,
 Khaled

From pragma at wxs.nl  Wed May  9 16:25:46 2012
From: pragma at wxs.nl (Hans Hagen)
Date: Wed, 9 May 2012 16:25:46 +0200
Subject: [luatex] incompatible change to mathcode
In-Reply-To: <20120509131659.GA22042@khaled-laptop>
References: <4FA96FF1.1040209@nag.co.uk> <4FAA27F2.6000409@elvenkind.com>
 <20120509112438.GB4976@khaled-laptop> <4FAA5975.1090504@elvenkind.com>
 <20120509131659.GA22042@khaled-laptop>
Message-ID: <4FAA7E6A.7090002@wxs.nl>

On 9-5-2012 15:16, Khaled Hosny wrote:
> On Wed, May 09, 2012 at 01:48:05PM +0200, Taco Hoekwater wrote:
>> On 05/09/2012 01:24 PM, Khaled Hosny wrote:
>>>>
>>>> That said, probably the result of (\the)\mathcode can be reverted
>>>> back to compatibility with TeX82, and output a warning (and zero)
>>>> if the actual value is out-of-range (like XeTeX does).
>>>
>>> Attached a patch that does this (with the added bonus of fixing the
>>> damage of luatex-unicode-letters.tex), what do you think? if it is OK,
>>> I'll commit it.
>>
>> For this case it looks fine, but perhaps there should be a similar check
>> for handling \omathchardef?
>
> Now that you bring it, do we really need the old aleph variants? They
> don't seem to be used anywhere in my full TL installation, so there is
> no case of backward compatibility and I see no practical need for them
> when we have the new Unicode variants. I'd rather remove them completely
> and simplify the code.

They just came with the omega/aleph code. The same is true for ofm/ovf 
support (no useful fonts in that format are available anyway) btu there 
the burden is small.

Hans


-----------------------------------------------------------------
                                           Hans Hagen | PRAGMA ADE
               Ridderstraat 27 | 8061 GH Hasselt | The Netherlands
     tel: 038 477 53 69 | voip: 087 875 68 74 | www.pragma-ade.com
                                              | www.pragma-pod.nl
-----------------------------------------------------------------

From pragma at wxs.nl  Wed May  9 16:29:05 2012
From: pragma at wxs.nl (Hans Hagen)
Date: Wed, 9 May 2012 16:29:05 +0200
Subject: [luatex] incompatible change to mathcode
In-Reply-To: <7622A253-D86F-47CF-8A45-5FDD5AA59265@elvenkind.com>
References: <4FA96FF1.1040209@nag.co.uk> <4FAA27F2.6000409@elvenkind.com>
 <20120509112438.GB4976@khaled-laptop> <4FAA5975.1090504@elvenkind.com>
 <20120509131659.GA22042@khaled-laptop>
 <7622A253-D86F-47CF-8A45-5FDD5AA59265@elvenkind.com>
Message-ID: <4FAA7F31.5030804@wxs.nl>

On 9-5-2012 16:02, Taco Hoekwater wrote:
> Hi,
>
> On May 9, 2012, at 3:16 PM, Khaled Hosny wrote:
>
>> Now that you bring it, do we really need the old aleph variants? They
>> don't seem to be used anywhere in my full TL installation, so there is
>> no case of backward compatibility and I see no practical need for them
>> when we have the new Unicode variants. I'd rather remove them completely
>> and simplify the code.
>
> Personally, I also see little point in the aleph versions of the math char/delimiter
> primitives. I am reluctant to remove them right away, but as far as I am concerned
> they can be marked as deprecated. Objections are welcome, of course.

I bet no one uses those primitives. Let's just kick 'm out. The sam eis 
true for \Aleph* and \Omega* unless we get reports that someone really 
tests for those version numbers (and why).

Hans

-----------------------------------------------------------------
                                           Hans Hagen | PRAGMA ADE
               Ridderstraat 27 | 8061 GH Hasselt | The Netherlands
     tel: 038 477 53 69 | voip: 087 875 68 74 | www.pragma-ade.com
                                              | www.pragma-pod.nl
-----------------------------------------------------------------

From kmaeda at amp.i.kyoto-u.ac.jp  Wed May  9 16:41:36 2012
From: kmaeda at amp.i.kyoto-u.ac.jp (Kazuki Maeda)
Date: Wed, 9 May 2012 23:41:36 +0900
Subject: [luatex] incompatible change to mathcode
In-Reply-To: <20120509112438.GB4976@khaled-laptop>
References: <4FA96FF1.1040209@nag.co.uk> <4FAA27F2.6000409@elvenkind.com>
 <20120509112438.GB4976@khaled-laptop>
Message-ID: <20120509234136.696d647e.kmaeda@amp.i.kyoto-u.ac.jp>

Dear all

Thanks for the commit #6176 by Khaled Hosny.
I have tried the bm.sty sample code submitted to LaTeX Project
http://www.latex-project.org/cgi-bin/ltxbugs2html?pr=tools/4188
with rev 4410.


This is LuaTeX, Version beta-0.71.0-2012050922
 \write18 enabled.
(./test.tex
LaTeX2e <2011/06/27>
LuaTeX adaptation of babel <v3.8l-luatex-1.5> and hyphenation patterns for engl
ish, dumylang, nohyphenation, loaded.
(/usr/local/texlive/2011/texmf-dist/tex/latex/base/article.cls
Document Class: article 2007/10/19 v1.4h Standard LaTeX document class
(/usr/local/texlive/2011/texmf-dist/tex/latex/base/size10.clo))
(/usr/local/texlive/2011/texmf-dist/tex/latex/tools/bm.sty) (./test.aux)
! Extended mathchar used as mathchar (0).
<to be read again>
                   \begingroup
l.4 $\bm{a}
           $
?


Why?

After processing $\bm{a}$, I got
> \bm at command=macro:
->\mathchar 30049 .


Best regards,
Kazuki Maeda

From khaledhosny at eglug.org  Wed May  9 17:04:45 2012
From: khaledhosny at eglug.org (Khaled Hosny)
Date: Wed, 9 May 2012 17:04:45 +0200
Subject: [luatex] incompatible change to mathcode
In-Reply-To: <4FAA7F31.5030804@wxs.nl>
References: <4FA96FF1.1040209@nag.co.uk> <4FAA27F2.6000409@elvenkind.com>
 <20120509112438.GB4976@khaled-laptop>
 <4FAA5975.1090504@elvenkind.com>
 <20120509131659.GA22042@khaled-laptop>
 <7622A253-D86F-47CF-8A45-5FDD5AA59265@elvenkind.com>
 <4FAA7F31.5030804@wxs.nl>
Message-ID: <20120509150445.GA24072@khaled-laptop>

On Wed, May 09, 2012 at 04:29:05PM +0200, Hans Hagen wrote:
> On 9-5-2012 16:02, Taco Hoekwater wrote:
> >Hi,
> >
> >On May 9, 2012, at 3:16 PM, Khaled Hosny wrote:
> >
> >>Now that you bring it, do we really need the old aleph variants? They
> >>don't seem to be used anywhere in my full TL installation, so there is
> >>no case of backward compatibility and I see no practical need for them
> >>when we have the new Unicode variants. I'd rather remove them completely
> >>and simplify the code.
> >
> >Personally, I also see little point in the aleph versions of the math char/delimiter
> >primitives. I am reluctant to remove them right away, but as far as I am concerned
> >they can be marked as deprecated. Objections are welcome, of course.
> 
> I bet no one uses those primitives. Let's just kick 'm out. The sam
> eis true for \Aleph* and \Omega* unless we get reports that someone
> really tests for those version numbers (and why).

I'm in favour of this.

Regards,
 Khaled

From khaledhosny at eglug.org  Wed May  9 17:44:20 2012
From: khaledhosny at eglug.org (Khaled Hosny)
Date: Wed, 9 May 2012 17:44:20 +0200
Subject: [luatex] incompatible change to mathcode
In-Reply-To: <20120509234136.696d647e.kmaeda@amp.i.kyoto-u.ac.jp>
References: <4FA96FF1.1040209@nag.co.uk> <4FAA27F2.6000409@elvenkind.com>
 <20120509112438.GB4976@khaled-laptop>
 <20120509234136.696d647e.kmaeda@amp.i.kyoto-u.ac.jp>
Message-ID: <20120509154420.GB24072@khaled-laptop>

On Wed, May 09, 2012 at 11:41:36PM +0900, Kazuki Maeda wrote:
> Dear all
> 
> Thanks for the commit #6176 by Khaled Hosny.
> I have tried the bm.sty sample code submitted to LaTeX Project
> http://www.latex-project.org/cgi-bin/ltxbugs2html?pr=tools/4188
> with rev 4410.
> 
> 
> This is LuaTeX, Version beta-0.71.0-2012050922
>  \write18 enabled.
> (./test.tex
> LaTeX2e <2011/06/27>
> LuaTeX adaptation of babel <v3.8l-luatex-1.5> and hyphenation patterns for engl
> ish, dumylang, nohyphenation, loaded.
> (/usr/local/texlive/2011/texmf-dist/tex/latex/base/article.cls
> Document Class: article 2007/10/19 v1.4h Standard LaTeX document class
> (/usr/local/texlive/2011/texmf-dist/tex/latex/base/size10.clo))
> (/usr/local/texlive/2011/texmf-dist/tex/latex/tools/bm.sty) (./test.aux)
> ! Extended mathchar used as mathchar (0).
> <to be read again>
>                    \begingroup
> l.4 $\bm{a}
>            $
> ?
> 
> 
> Why?

Active math characters, should be handled now as well.

Regards,
 Khaled

From davidc at nag.co.uk  Wed May  9 17:54:22 2012
From: davidc at nag.co.uk (David Carlisle)
Date: Wed, 9 May 2012 16:54:22 +0100
Subject: [luatex] incompatible change to mathcode
In-Reply-To: <20120509154420.GB24072@khaled-laptop>
References: <4FA96FF1.1040209@nag.co.uk> <4FAA27F2.6000409@elvenkind.com>
 <20120509112438.GB4976@khaled-laptop>
 <20120509234136.696d647e.kmaeda@amp.i.kyoto-u.ac.jp>
 <20120509154420.GB24072@khaled-laptop>
Message-ID: <4FAA932E.2050601@nag.co.uk>

On 09/05/2012 16:44, Khaled Hosny wrote:
> Active math characters, should be handled now as well.

?? Neither the document nor loaded packages made anything active?

(Sorry I can't easily test the patch myself as I'm not set up to patch
the sources today)



Probably in the next few days I'll get a version working on the
unpatched version (avoiding \mathcode as we discussed) but it would be
nice (and take the pressure off me a bit:-) if the patched version at
least processed the document without error even if (because it only uses
tex3 commands) it misses some of the finer points of the unicode math setup.

David.

________________________________________________________________________
The Numerical Algorithms Group Ltd is a company registered in England
and Wales with company number 1249803. The registered office is:
Wilkinson House, Jordan Hill Road, Oxford OX2 8DR, United Kingdom.

This e-mail has been scanned for all viruses by Star. The service is
powered by MessageLabs. 
________________________________________________________________________

From khaledhosny at eglug.org  Wed May  9 18:10:47 2012
From: khaledhosny at eglug.org (Khaled Hosny)
Date: Wed, 9 May 2012 18:10:47 +0200
Subject: [luatex] incompatible change to mathcode
In-Reply-To: <4FAA932E.2050601@nag.co.uk>
References: <4FA96FF1.1040209@nag.co.uk> <4FAA27F2.6000409@elvenkind.com>
 <20120509112438.GB4976@khaled-laptop>
 <20120509234136.696d647e.kmaeda@amp.i.kyoto-u.ac.jp>
 <20120509154420.GB24072@khaled-laptop> <4FAA932E.2050601@nag.co.uk>
Message-ID: <20120509161047.GB29208@khaled-laptop>

On Wed, May 09, 2012 at 04:54:22PM +0100, David Carlisle wrote:
> On 09/05/2012 16:44, Khaled Hosny wrote:
> >Active math characters, should be handled now as well.
> 
> ?? Neither the document nor loaded packages made anything active?

I didn't check bm code (I don't even know what it does), but the error
was raised because the code was not accepting math characters with class
8 as valid for \mathcode. Fixing that, the documents compiles fine with
no errors now.

> (Sorry I can't easily test the patch myself as I'm not set up to patch
> the sources today)
> 
> 
> 
> Probably in the next few days I'll get a version working on the
> unpatched version (avoiding \mathcode as we discussed) but it would be
> nice (and take the pressure off me a bit:-) if the patched version at
> least processed the document without error even if (because it only uses
> tex3 commands) it misses some of the finer points of the unicode math setup.

It seems to be OK now, at least it behaves like XeTeX.

Regards,
 Khaled

From davidc at nag.co.uk  Wed May  9 18:26:22 2012
From: davidc at nag.co.uk (David Carlisle)
Date: Wed, 9 May 2012 17:26:22 +0100
Subject: [luatex] incompatible change to mathcode
In-Reply-To: <20120509161047.GB29208@khaled-laptop>
References: <4FA96FF1.1040209@nag.co.uk> <4FAA27F2.6000409@elvenkind.com>
 <20120509112438.GB4976@khaled-laptop>
 <20120509234136.696d647e.kmaeda@amp.i.kyoto-u.ac.jp>
 <20120509154420.GB24072@khaled-laptop> <4FAA932E.2050601@nag.co.uk>
 <20120509161047.GB29208@khaled-laptop>
Message-ID: <4FAA9AAE.6090406@nag.co.uk>

On 09/05/2012 17:10, Khaled Hosny wrote:
> It seems to be OK now, at least it behaves like XeTeX.

Thanks!

David


________________________________________________________________________
The Numerical Algorithms Group Ltd is a company registered in England
and Wales with company number 1249803. The registered office is:
Wilkinson House, Jordan Hill Road, Oxford OX2 8DR, United Kingdom.

This e-mail has been scanned for all viruses by Star. The service is
powered by MessageLabs. 
________________________________________________________________________

From kmaeda at users.sourceforge.jp  Wed May  9 19:49:22 2012
From: kmaeda at users.sourceforge.jp (Kazuki Maeda)
Date: Thu, 10 May 2012 02:49:22 +0900
Subject: [luatex] incompatible change to mathcode
In-Reply-To: <20120509161047.GB29208@khaled-laptop>
References: <4FA96FF1.1040209@nag.co.uk> <4FAA27F2.6000409@elvenkind.com>
 <20120509112438.GB4976@khaled-laptop>
 <20120509234136.696d647e.kmaeda@amp.i.kyoto-u.ac.jp>
 <20120509154420.GB24072@khaled-laptop> <4FAA932E.2050601@nag.co.uk>
 <20120509161047.GB29208@khaled-laptop>
Message-ID: <20120510024922.0cbf2f69.kmaeda@users.sourceforge.jp>

On Wed, 9 May 2012 18:10:47 +0200
Khaled Hosny <khaledhosny at eglug.org> wrote:

> On Wed, May 09, 2012 at 04:54:22PM +0100, David Carlisle wrote:
> > On 09/05/2012 16:44, Khaled Hosny wrote:
> > >Active math characters, should be handled now as well.
> >
> > ?? Neither the document nor loaded packages made anything active?
>
> I didn't check bm code (I don't even know what it does), but the error
> was raised because the code was not accepting math characters with class
> 8 as valid for \mathcode. Fixing that, the documents compiles fine with
> no errors now.

Rev 4411 has run with no errors. Thanks!

Best regards,
Kazuki Maeda

From p.stephani2 at googlemail.com  Wed May  9 20:39:22 2012
From: p.stephani2 at googlemail.com (Philipp Stephani)
Date: Wed, 9 May 2012 20:39:22 +0200
Subject: [luatex] incompatible change to mathcode
In-Reply-To: <4FAA27F2.6000409@elvenkind.com>
References: <4FA96FF1.1040209@nag.co.uk>
	<4FAA27F2.6000409@elvenkind.com>
Message-ID: <CAArVCkT2_b_Db45dyyTjLq=xTCE3d0aTj6qcBg7Lnn3s9NAB1Q@mail.gmail.com>

2012/5/9 Taco Hoekwater <taco at elvenkind.com>:
> That said, probably the result of (\the)\mathcode can be reverted
> back to compatibility with TeX82, and output a warning (and zero)
> if the actual value is out-of-range (like XeTeX does).

I would actually prefer that (or rather, generate an error). Better
fail loudly than silently.

From khaledhosny at eglug.org  Wed May  9 21:11:46 2012
From: khaledhosny at eglug.org (Khaled Hosny)
Date: Wed, 9 May 2012 21:11:46 +0200
Subject: [luatex] incompatible change to mathcode
In-Reply-To: <CAArVCkT2_b_Db45dyyTjLq=xTCE3d0aTj6qcBg7Lnn3s9NAB1Q@mail.gmail.com>
References: <4FA96FF1.1040209@nag.co.uk> <4FAA27F2.6000409@elvenkind.com>
 <CAArVCkT2_b_Db45dyyTjLq=xTCE3d0aTj6qcBg7Lnn3s9NAB1Q@mail.gmail.com>
Message-ID: <20120509191145.GA30180@khaled-laptop>

On Wed, May 09, 2012 at 08:39:22PM +0200, Philipp Stephani wrote:
> 2012/5/9 Taco Hoekwater <taco at elvenkind.com>:
> > That said, probably the result of (\the)\mathcode can be reverted
> > back to compatibility with TeX82, and output a warning (and zero)
> > if the actual value is out-of-range (like XeTeX does).
> 
> I would actually prefer that (or rather, generate an error). Better
> fail loudly than silently.

It does now:

\showthe\mathcode`a     % OK
\Umathcode`a="7"FF"FFFFF
\showthe\Umathcodenum`a % OK
\showthe\mathcode`a     % error
\Umathcode`a="7"01`a
\showthe\mathcode`a     % OK

gives:

> 29025.
l.1 \showthe\mathcode`a
                       
? 
> -1048577.
l.3 \showthe\Umathcodenum`a
                           
? 
! Extended mathchar used as mathchar (-1048577).
l.4 \showthe\mathcode`a
                       
? 
> 0.
l.4 \showthe\mathcode`a
                       
? 
> 29025.
l.6 \showthe\mathcode`a
                       
? 

(identical to XeTeX)

Regards,
 Khaled

From p.stephani2 at googlemail.com  Wed May  9 21:29:32 2012
From: p.stephani2 at googlemail.com (Philipp Stephani)
Date: Wed, 9 May 2012 21:29:32 +0200
Subject: [luatex] incompatible change to mathcode
In-Reply-To: <20120509191145.GA30180@khaled-laptop>
References: <4FA96FF1.1040209@nag.co.uk> <4FAA27F2.6000409@elvenkind.com>
 <CAArVCkT2_b_Db45dyyTjLq=xTCE3d0aTj6qcBg7Lnn3s9NAB1Q@mail.gmail.com>
 <20120509191145.GA30180@khaled-laptop>
Message-ID: <CAArVCkSPjxJkos8JaQNZgBaBfthZex7rRWDi1L71QHTUNmjoTQ@mail.gmail.com>

2012/5/9 Khaled Hosny <khaledhosny at eglug.org>:
> On Wed, May 09, 2012 at 08:39:22PM +0200, Philipp Stephani wrote:
>> 2012/5/9 Taco Hoekwater <taco at elvenkind.com>:
>> > That said, probably the result of (\the)\mathcode can be reverted
>> > back to compatibility with TeX82, and output a warning (and zero)
>> > if the actual value is out-of-range (like XeTeX does).
>>
>> I would actually prefer that (or rather, generate an error). Better
>> fail loudly than silently.
>
> It does now:
> ! Extended mathchar used as mathchar (-1048577).
> l.4 \showthe\mathcode`a

Cool, thanks!

From patrick at gundla.ch  Thu May 10 14:34:38 2012
From: patrick at gundla.ch (Patrick Gundlach)
Date: Thu, 10 May 2012 14:34:38 +0200
Subject: [luatex] too many open files
Message-ID: <5CFA94AF-80DE-4352-8184-5FA428D99183@gundla.ch>

Hi,

when I run LuaTeX on a job, I now get

/<mypath>/12345.pdf: Too many open files

from an included image. The LuaTeX is a fairly recent one (built in march 2012). How do I have to handle images?

I use img.scan{..} to load the images. Can this make the images to stay open and then to give the error message?

I know this is a vague question, but perhaps someone can still give me a hint.

Thanks

Patrick





From martin at oneiros.de  Thu May 10 15:48:27 2012
From: martin at oneiros.de (=?ISO-8859-1?Q?Martin_Schr=F6der?=)
Date: Thu, 10 May 2012 15:48:27 +0200
Subject: [luatex] too many open files
In-Reply-To: <5CFA94AF-80DE-4352-8184-5FA428D99183@gundla.ch>
References: <5CFA94AF-80DE-4352-8184-5FA428D99183@gundla.ch>
Message-ID: <CAP7DCDc-Dc-3-v-ibSZLMLHSuXV2rHGHVeakpG3Di+UJLOzsjQ@mail.gmail.com>

2012/5/10 Patrick Gundlach <patrick at gundla.ch>:
> I use img.scan{..} to load the images. Can this make the images to stay open and then to give the error message?
>
> I know this is a vague question, but perhaps someone can still give me a hint.

I know this from pdfTeX: \pdfximage keeps the image open till the pdf
is written out;
\immediate\pdfximage solved this. Don't know how to do that in lua(tex)...

Best
   Martin

From and.delmonaco at gmail.com  Fri May 11 12:45:48 2012
From: and.delmonaco at gmail.com (Andrea del Monaco)
Date: Fri, 11 May 2012 12:45:48 +0200
Subject: [luatex] declaring new math alphabet
Message-ID: <CALuG_z-w4w0Fx2NtKLLRcVmT2XZNowuuD-hjf2HJJ0Sat6eVrA@mail.gmail.com>

Hi to you all guys!
I've this question for you.
I'm using LuaLaTeX with unicode-math and I'd like to do the following:

1) definig new math alphabet (something else then \mathbbit, maybe
something like \mathbbbf - that is bold upright blackcoard - perhaps).
I was tempted of using the primitive \DeclareMathAlphabet... but I do not
know how to use it!

2) modifying some ranges (for example I just want to use XTIS Math's latin
alphabet but with Asana Math's greek alphabet).
I can't do that using only the declaration
\setmathfont[range=greek]{Asana-Math.otf} because otherwise it will take so
much time...

Finally a silly question I couldn't solve simply reading the reference: how
to create a virtual font?

Thank you so much!

Best regards,
anddm
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://tug.org/pipermail/luatex/attachments/20120511/ee18ac5a/attachment.html>

From patrick at gundla.ch  Mon May 14 08:55:33 2012
From: patrick at gundla.ch (Patrick Gundlach)
Date: Mon, 14 May 2012 08:55:33 +0200
Subject: [luatex] stop_run callback
Message-ID: <E71D8733-5D78-40C2-899A-D880A9C09B5D@gundla.ch>

Hi,

the stop_run callback is called before the PDF file is finished (completely written to). Is this on purpose? 

Perhaps we should add a text into the documentation: ... "The output file is not complete at this point and thus you cannot use this callback to post process the output file." 

or similar.


Patrick



From taco at elvenkind.com  Mon May 14 09:08:41 2012
From: taco at elvenkind.com (Taco Hoekwater)
Date: Mon, 14 May 2012 09:08:41 +0200
Subject: [luatex] stop_run callback
In-Reply-To: <E71D8733-5D78-40C2-899A-D880A9C09B5D@gundla.ch>
References: <E71D8733-5D78-40C2-899A-D880A9C09B5D@gundla.ch>
Message-ID: <4FB0AF79.5090204@elvenkind.com>

On 05/14/2012 08:55 AM, Patrick Gundlach wrote:
> Hi,
>
> Is this on purpose?

At this point I am not sure any more but there definitely is a use case 
for a callback that runs after the pdf has been closed already. I am not
sure whether we should change stop_run or create a new callback.

Best wishes,
Taco

From taco at elvenkind.com  Mon May 14 09:31:04 2012
From: taco at elvenkind.com (Taco Hoekwater)
Date: Mon, 14 May 2012 09:31:04 +0200
Subject: [luatex] stop_run callback
In-Reply-To: <4FB0AF79.5090204@elvenkind.com>
References: <E71D8733-5D78-40C2-899A-D880A9C09B5D@gundla.ch>
 <4FB0AF79.5090204@elvenkind.com>
Message-ID: <4FB0B4B8.6080200@elvenkind.com>

On 05/14/2012 09:08 AM, Taco Hoekwater wrote:
> On 05/14/2012 08:55 AM, Patrick Gundlach wrote:
>> Hi,
>>
>> Is this on purpose?
>
> At this point I am not sure any more but there definitely is a use case
> for a callback that runs after the pdf has been closed already. I am not
> sure whether we should change stop_run or create a new callback.

perhaps a stop_process that runs just before exit() ?



From patrick at gundla.ch  Mon May 14 09:52:08 2012
From: patrick at gundla.ch (Patrick Gundlach)
Date: Mon, 14 May 2012 09:52:08 +0200
Subject: [luatex] stop_run callback
In-Reply-To: <4FB0B4B8.6080200@elvenkind.com>
References: <E71D8733-5D78-40C2-899A-D880A9C09B5D@gundla.ch>
 <4FB0AF79.5090204@elvenkind.com> <4FB0B4B8.6080200@elvenkind.com>
Message-ID: <EA5BF938-CCC7-4DA2-B41E-3B484EEB6FF5@gundla.ch>


Am 14.05.2012 um 09:31 schrieb Taco Hoekwater:

> On 05/14/2012 09:08 AM, Taco Hoekwater wrote:
>> On 05/14/2012 08:55 AM, Patrick Gundlach wrote:
>>> Hi,
>>> 
>>> Is this on purpose?
>> 
>> At this point I am not sure any more but there definitely is a use case
>> for a callback that runs after the pdf has been closed already. I am not
>> sure whether we should change stop_run or create a new callback.
> 
> perhaps a stop_process that runs just before exit() ?

First I've thought about just moving stop_run to a later point, but when someone just wants to post process the PDF file, he does not need to hide output statistics by using stop_run. 

before_exit could be another name. stop_process sounds a bit technical for me, but I think it is still a good name.

Patrick



From khaledhosny at eglug.org  Mon May 14 22:58:18 2012
From: khaledhosny at eglug.org (Khaled Hosny)
Date: Mon, 14 May 2012 22:58:18 +0200
Subject: [luatex] font problem
In-Reply-To: <20120328141258.GA2138@khaled-laptop>
References: <4F71C448.2070908@FU-Berlin.DE>
 <20120327144558.GB6783@khaled-laptop>
 <12180D88-6A05-4763-8F76-E183117B72AA@gundla.ch>
 <20120328141258.GA2138@khaled-laptop>
Message-ID: <20120514205818.GA11014@khaled-laptop>

On Wed, Mar 28, 2012 at 04:12:58PM +0200, Khaled Hosny wrote:
> On Wed, Mar 28, 2012 at 09:54:52AM +0200, Patrick Gundlach wrote:
> > Hello Khaled,
> > 
> > can you tell me what you did (postprocessing) or how the fontforge bug
> > can be circumvented?
> 
> I use FontTools Python library to open the fonts after FontForge
> generates them and set the respective fields in OS/2 table directly, see
> for example:
> http://crimsontext.svn.sourceforge.net/viewvc/crimsontext/trunk/tools/generate.py?r1=96&r2=95&pathrev=96

The issue is now fixed in FontForge's GIT master, so fonts built with it
should be OK now.

Regards,
 Khaled

From J2N-FORGET at orange.fr  Tue May 29 07:23:19 2012
From: J2N-FORGET at orange.fr (Jean)
Date: Tue, 29 May 2012 07:23:19 +0200
Subject: [luatex] Metapost capacity exceeded
Message-ID: <1338268999.2078.3.camel@Acer-8735>

I wrote a lualatex file with some Metapost figures in it and I had the
message "Metapost capacity exceeded". So I have tried an experiment. I
wanted to have Metapost figures known to be correct and of a
reasonable complexity, so they had to compile right. If there was an
error, it would be the compiler's fault, not the file's.

So I started with the mpman.mp file for John Hobby's "A Metapost
Manual". I checked that it compiles with /usr/bin/mpost installed from
TeXlive.

I split mpman.mp into separate figures and I wrapped each figure with
the following minimalistic lualatex file:

--- copy-paste begins
\documentclass[a4paper]{article}
\usepackage[utf8]{luainputenc}
\usepackage{luamplib}
\begin{document}
\begin{mplibcode}
>>>> insert here the source code for one figure
\end{mplibcode}
\end{document}
--- copy-paste ends

Then, I compiled each file with lualatex separately. Most files
compiled and gave proper PDF files, but there were a significant
number of errors. Notably, the figures #40 and #55 fail with the
same error message:

--- copy-paste begins
! MetaPost capacity exceeded, sorry [main memory size=5000].
--- copy-paste ends

Where does this "5000" value come from? Can we change it in a config
file or in a command-line parameter?

Note: I have googled (*) the error message, which gave me old posts,
applying to TeXLive-2007 or MikTeX, but not lualatex.

(*) Or rather, I have duckduckgo'ed it.

My version of lualatex is the one installed with Ubuntu 10.4 Lucid Lynx:
--- copy-paste begins
This is LuaTeX, Version beta-0.50.0-2010010505
--- copy-paste ends

------------------------------------------------------------------------
Second part of the experiment:

I have downloaded the latest version of lualatex from
http://www.luatex.org/download.html. This version is:

--- copy-paste begins
This is LuaTeX, Version beta-0.70.1-2011051918 (rev 4277)
--- copy-paste ends

When I compile figure 1 or any other with this version, I do not get
any PDF file.  Standard output contains:
--- copy-paste begins
This is LuaTeX, Version beta-0.70.1-2011051918 (rev 4277) 

(Fatal format file error; I'm stymied)
--- copy-paste ends
and standard error contains much more information, too big
to copy-paste here.

It seems that just downloading the executable file is not sufficient,
I need to initialise some other files too: texmf.cnf and lualatex.fmt
according to the standard error file. I did not find any explanations
in http://www.luatex.org/download.html nor in
http://wiki.luatex.org/index.php/Main_Page.

So my question would rather be: how can I install a lualatex version
into a sandbox, without trashing the version installed in /usr/bin?

------------------------------------------------------------------------
By the way, coming back to the first part of the experiment, when
compiling the figures from mpman.mp with the older version of
lualatex, I have some errors other than "metapost capacity
exceeded". In figures 0, 123, 18, 19, 20, 223, 22, 24, 26, 29, 30, 35,
36 and 37, the error is:

--- copy-paste begins
! LuaTeX
error ...share/texmf-texlive/tex/luatex/luamplib/luamplib.lua:74: inva
lid option '%C' to 'format'
stack traceback:
	[C]: in function 'format'
	...share/texmf-texlive/tex/luatex/luamplib/luamplib.lua:74: in function
'log'
	...share/texmf-texlive/tex/luatex/luamplib/luamplib.lua:143: in
function 'repo
rt'
	...share/texmf-texlive/tex/luatex/luamplib/luamplib.lua:173: in
function 'proc
ess'
	...share/texmf-texlive/tex/luatex/luamplib/luamplib.lua:101: in
function 'proc
esslines'
	<\directlua >:1: in main chunk.
--- copy-paste begins

And in figures 14, 42 and 45, there are various other errors.

Thank you for your explanations and advices,

Jean Forget


From mojca.miklavec.lists at gmail.com  Tue May 29 09:25:26 2012
From: mojca.miklavec.lists at gmail.com (Mojca Miklavec)
Date: Tue, 29 May 2012 09:25:26 +0200
Subject: [luatex] Metapost capacity exceeded
In-Reply-To: <1338268999.2078.3.camel@Acer-8735>
References: <1338268999.2078.3.camel@Acer-8735>
Message-ID: <CALBOmsY6ReCTDL6Z7KT9=ZWycBwYMGa-r3PPg=+VbG63Cc1dHQ@mail.gmail.com>

On Tue, May 29, 2012 at 7:23 AM, Jean wrote:
> I wrote a lualatex file with some Metapost figures in it and I had the
> message "Metapost capacity exceeded". So I have tried an experiment.
...
> --- copy-paste begins
> ! MetaPost capacity exceeded, sorry [main memory size=5000].
> --- copy-paste ends
>
> Where does this "5000" value come from?

>From texmf.cnf. Try to locate it with "kpsewhich texmf.cnf" or with
"locate texmf.cnf", but there may be more than a single file.

> ------------------------------------------------------------------------
> Second part of the experiment:
>
> I have downloaded the latest version of lualatex from
> http://www.luatex.org/download.html. This version is:
>
> --- copy-paste begins
> This is LuaTeX, Version beta-0.70.1-2011051918 (rev 4277)
> --- copy-paste ends
>
> When I compile figure 1 or any other with this version, I do not get
> any PDF file. ?Standard output contains:
> --- copy-paste begins
> This is LuaTeX, Version beta-0.70.1-2011051918 (rev 4277)
>
> (Fatal format file error; I'm stymied)
> --- copy-paste ends
> and standard error contains much more information, too big
> to copy-paste here.

You need to regenerate the format with
    sudo fmtutil-sys --byfmt lualatex
but it is not guaranteed that you would succeed with such a big
difference in luatex's version and such an old tex distribution. There
might be some important changes and improvements in other packages
that will be difficult to locate.

> So my question would rather be: how can I install a lualatex version
> into a sandbox, without trashing the version installed in /usr/bin?

There are a lot of other ways, but this one is the simplest and
spotting problems in there might be most valuable:

Fetch TeX Live 2012 from here:
    http://tug.org/texlive/pretest.html

You need to run
    ./install-tl -repository <url>
where you can pick any <url> here: http://tug.org/texlive/mirmon/
(only http/ftp), then you can try to install some scheme (not too
minimal, but I guess that basic scheme should work for you if network
speed is an issue, else you can also simply fetch the whole repository
with rsync and install full scheme).

After the end of installation, put
<path/to/tl/installation>/bin/x86_64-linux (or whatever will be the
path to binaries) in front of PATH variable.

That way you will get the latest luatex, the latest packages, ... and
something that will become part of Ubuntu one day. You can easily
install anywhere in /home directory without having to interfere with
the system.

Mojca


From preining at logic.at  Tue May 29 11:50:06 2012
From: preining at logic.at (Norbert Preining)
Date: Tue, 29 May 2012 18:50:06 +0900
Subject: [luatex] Metapost capacity exceeded
In-Reply-To: <CALBOmsY6ReCTDL6Z7KT9=ZWycBwYMGa-r3PPg=+VbG63Cc1dHQ@mail.gmail.com>
References: <1338268999.2078.3.camel@Acer-8735>
 <CALBOmsY6ReCTDL6Z7KT9=ZWycBwYMGa-r3PPg=+VbG63Cc1dHQ@mail.gmail.com>
Message-ID: <20120529095006.GD23694@gamma.logic.tuwien.ac.at>

On Di, 29 Mai 2012, Mojca Miklavec wrote:
> That way you will get the latest luatex, the latest packages, ... and
> something that will become part of Ubuntu one day. You can easily

Everything of that is already in Ubuntu, just FYI ..., as well as in 
Debian.


From J2N-FORGET at orange.fr  Tue May 29 21:22:57 2012
From: J2N-FORGET at orange.fr (Jean)
Date: Tue, 29 May 2012 21:22:57 +0200
Subject: [luatex] Metapost capacity exceeded
In-Reply-To: <CALBOmsY6ReCTDL6Z7KT9=ZWycBwYMGa-r3PPg=+VbG63Cc1dHQ@mail.gmail.com>
References: <1338268999.2078.3.camel@Acer-8735>
 <CALBOmsY6ReCTDL6Z7KT9=ZWycBwYMGa-r3PPg=+VbG63Cc1dHQ@mail.gmail.com>
Message-ID: <1338319377.2012.10.camel@Acer-8735>

Le mardi 29 mai 2012 ? 09:25 +0200, Mojca Miklavec a ?crit :

[ snip ]
> 
> There are a lot of other ways, but this one is the simplest and
> spotting problems in there might be most valuable:
> 
> Fetch TeX Live 2012 from here:
>     http://tug.org/texlive/pretest.html
> 
> You need to run
>     ./install-tl -repository <url>
> where you can pick any <url> here: http://tug.org/texlive/mirmon/
> (only http/ftp), then you can try to install some scheme (not too
> minimal, but I guess that basic scheme should work for you if network
> speed is an issue, else you can also simply fetch the whole repository
> with rsync and install full scheme).
> 
> After the end of installation, put
> <path/to/tl/installation>/bin/x86_64-linux (or whatever will be the
> path to binaries) in front of PATH variable.
> 
> That way you will get the latest luatex, the latest packages, ... and
> something that will become part of Ubuntu one day. You can easily
> install anywhere in /home directory without having to interfere with
> the system.
> 
> Mojca
> 
Thank you, I will try to install a new version of luatex in this
way.

And answering to Norbert Preining's message :
>Everything of that is already in Ubuntu, just FYI ..., as well as in 
>Debian.

Maybe it is in Ubuntu Precise Pangolin, but I have Lucid Lynx and
I am reluctant for now to switch to a new OS version. I prefer trying
new software versions in sandboxes.

Thank you,

Jean



From dirk.laurie at gmail.com  Wed May 30 14:33:14 2012
From: dirk.laurie at gmail.com (Dirk Laurie)
Date: Wed, 30 May 2012 14:33:14 +0200
Subject: [luatex] Expansion of TeX macros
Message-ID: <CABcj=t=8QMij3G4Buxn3wHXLShPDBymW3WNTWBJZTp5-vxwZ=Q@mail.gmail.com>

I've written a Lua function which combines with a LaTeX
command so I can write
   \mat{1,2,3,4;5,6,7,8}
and get the same effect as
  \begin{bmatrix} 1 & 2 & 3 & 4 \\ 5 & 6 & 7 & 8 \end{bmatrix}

The Lua is perfecrtly straightforwad: couple of gsub's translating
the commas and semicolons.

Fine, but when the matrix has some hard TeX in it, e.g.

  \mat{\mat{X,\mathbf 0;\mathbf c',1}

the \mathbf gets expanded to an unbelievable string of macros,
containing, alas, stuff that confuses the Lua code.  I've tried
\noexpand and \expandafter, neither of which I understand
fully, to no avail.

From jorssen.leraincy at free.fr  Wed May 30 16:39:06 2012
From: jorssen.leraincy at free.fr (Christophe Jorssen)
Date: Wed, 30 May 2012 16:39:06 +0200
Subject: [luatex] Expansion of TeX macros
In-Reply-To: <CABcj=t=8QMij3G4Buxn3wHXLShPDBymW3WNTWBJZTp5-vxwZ=Q@mail.gmail.com>
References: <CABcj=t=8QMij3G4Buxn3wHXLShPDBymW3WNTWBJZTp5-vxwZ=Q@mail.gmail.com>
Message-ID: <CAN1usO1zcw9sEEfckfuYmPNoB0T9NqYjVaBKTADW9VEF3XtmVg@mail.gmail.com>

2012/5/30 Dirk Laurie <dirk.laurie at gmail.com>:
> I've written a Lua function which combines with a LaTeX
> command so I can write
> ? \mat{1,2,3,4;5,6,7,8}
> and get the same effect as
> ?\begin{bmatrix} 1 & 2 & 3 & 4 \\ 5 & 6 & 7 & 8 \end{bmatrix}
>
> The Lua is perfecrtly straightforwad: couple of gsub's translating
> the commas and semicolons.
>
> Fine, but when the matrix has some hard TeX in it, e.g.
>
> ?\mat{\mat{X,\mathbf 0;\mathbf c',1}
>
> the \mathbf gets expanded to an unbelievable string of macros,
> containing, alas, stuff that confuses the Lua code. ?I've tried
> \noexpand and \expandafter, neither of which I understand
> fully, to no avail.
>

Hello,

Could you provide the lua and the tex code you wrote please?

Thanks

-- 
Christophe


From dirk.laurie at gmail.com  Wed May 30 17:55:35 2012
From: dirk.laurie at gmail.com (Dirk Laurie)
Date: Wed, 30 May 2012 17:55:35 +0200
Subject: [luatex] Expansion of TeX macros
In-Reply-To: <CAN1usO1zcw9sEEfckfuYmPNoB0T9NqYjVaBKTADW9VEF3XtmVg@mail.gmail.com>
References: <CABcj=t=8QMij3G4Buxn3wHXLShPDBymW3WNTWBJZTp5-vxwZ=Q@mail.gmail.com>
 <CAN1usO1zcw9sEEfckfuYmPNoB0T9NqYjVaBKTADW9VEF3XtmVg@mail.gmail.com>
Message-ID: <CABcj=t=h4wcknDCDt3h6ePZKYZGVb2_QTP1dbp7SuRJHzRVkcw@mail.gmail.com>

2012/5/30 Christophe Jorssen <jorssen.leraincy at free.fr>:
> Could you provide the lua and the tex code you wrote please?

`lualatex sample` works, but not if the comment symbol is removed.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: macros.lua
Type: application/octet-stream
Size: 218 bytes
Desc: not available
URL: <http://tug.org/pipermail/luatex/attachments/20120530/853bdc86/attachment.obj>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: macros.sty
Type: application/octet-stream
Size: 279 bytes
Desc: not available
URL: <http://tug.org/pipermail/luatex/attachments/20120530/853bdc86/attachment-0001.obj>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: sample.tex
Type: application/x-tex
Size: 222 bytes
Desc: not available
URL: <http://tug.org/pipermail/luatex/attachments/20120530/853bdc86/attachment.tex>

From Herbert.Voss at FU-Berlin.DE  Wed May 30 18:08:20 2012
From: Herbert.Voss at FU-Berlin.DE (Herbert Voss)
Date: Wed, 30 May 2012 18:08:20 +0200
Subject: [luatex] Expansion of TeX macros
In-Reply-To: <CABcj=t=h4wcknDCDt3h6ePZKYZGVb2_QTP1dbp7SuRJHzRVkcw@mail.gmail.com>
References: <CABcj=t=8QMij3G4Buxn3wHXLShPDBymW3WNTWBJZTp5-vxwZ=Q@mail.gmail.com>
 <CAN1usO1zcw9sEEfckfuYmPNoB0T9NqYjVaBKTADW9VEF3XtmVg@mail.gmail.com>
 <CABcj=t=h4wcknDCDt3h6ePZKYZGVb2_QTP1dbp7SuRJHzRVkcw@mail.gmail.com>
Message-ID: <4FC645F4.1090201@FU-Berlin.DE>

Am 30.05.2012 17:55, schrieb Dirk Laurie:
> 2012/5/30 Christophe Jorssen<jorssen.leraincy at free.fr>:
>> Could you provide the lua and the tex code you wrote please?
>
> `lualatex sample` works, but not if the comment symbol is removed.

use it this way:

  \[ \mat{\string\\mathbf{x},0,0;0,1,2} \]

you have to escape the backslash

Herbert

From zappathustra at free.fr  Thu May 31 07:29:54 2012
From: zappathustra at free.fr (Paul Isambert)
Date: Thu, 31 May 2012 07:29:54 +0200
Subject: [luatex] Expansion of TeX macros
In-Reply-To: <4FC645F4.1090201@FU-Berlin.DE>
References: <CABcj=t=8QMij3G4Buxn3wHXLShPDBymW3WNTWBJZTp5-vxwZ=Q@mail.gmail.com>
 <CAN1usO1zcw9sEEfckfuYmPNoB0T9NqYjVaBKTADW9VEF3XtmVg@mail.gmail.com>
 <CABcj=t=h4wcknDCDt3h6ePZKYZGVb2_QTP1dbp7SuRJHzRVkcw@mail.gmail.com>
 <4FC645F4.1090201@FU-Berlin.DE>
Message-ID: <20120531052955.7D2CCA622A@smtp3-g21.free.fr>

Herbert Voss <Herbert.Voss at fu-berlin.de> a ?crit:
> 
> Am 30.05.2012 17:55, schrieb Dirk Laurie:
> > 2012/5/30 Christophe Jorssen<jorssen.leraincy at free.fr>:
> >> Could you provide the lua and the tex code you wrote please?
> >
> > `lualatex sample` works, but not if the comment symbol is removed.
> 
> use it this way:
> 
>   \[ \mat{\string\\mathbf{x},0,0;0,1,2} \]
> 
> you have to escape the backslash

That or you can redefine \mat as:

\newcommand\mat[1]{%
  \directlua{tex.print(tomatrix("\luatexluaescapestring{\detokenize{#1}}"))}%
  }

Also, the following lines in the Lua code:

  str = str:gsub("%;",[[\\]])
  str= str:gsub("%,",[[&]])

have unnecessary "%" (meant to escape magic characters; the comma and
semi-colon aren't magic). They can be rewritten as:

  str = str:gsub ("[,;]", {[","] = "&",
                           [";"] = [[\\]]} )

Best,
Paul


From dirk.laurie at gmail.com  Thu May 31 23:36:24 2012
From: dirk.laurie at gmail.com (Dirk Laurie)
Date: Thu, 31 May 2012 23:36:24 +0200
Subject: [luatex] Expansion of TeX macros
In-Reply-To: <20120531052955.7D2CCA622A@smtp3-g21.free.fr>
References: <CABcj=t=8QMij3G4Buxn3wHXLShPDBymW3WNTWBJZTp5-vxwZ=Q@mail.gmail.com>
 <CAN1usO1zcw9sEEfckfuYmPNoB0T9NqYjVaBKTADW9VEF3XtmVg@mail.gmail.com>
 <CABcj=t=h4wcknDCDt3h6ePZKYZGVb2_QTP1dbp7SuRJHzRVkcw@mail.gmail.com>
 <4FC645F4.1090201@FU-Berlin.DE>
 <20120531052955.7D2CCA622A@smtp3-g21.free.fr>
Message-ID: <CABcj=tnas4RVNgy2BBVfWynMMDtpaNLJsSbMShmP4x14Jx1Bhg@mail.gmail.com>

2012/5/31 Paul Isambert <zappathustra at free.fr>:

>>
>> use it this way:
>>
>> ? \[ \mat{\string\\mathbf{x},0,0;0,1,2} \]
>>
>> you have to escape the backslash
>
> That or you can redefine \mat as:
>
> \newcommand\mat[1]{%
> ?\directlua{tex.print(tomatrix("\luatexluaescapestring{\detokenize{#1}}"))}%
> ?}
>
Thanks, that is what I was looking for.  Simplest possible syntax
in the user-level file.

> Also, the following lines in the Lua code:
>
> ?str = str:gsub("%;",[[\\]])
> ?str= str:gsub("%,",[[&]])
>
> have unnecessary "%" (meant to escape magic characters; the comma and
> semi-colon aren't magic).
Point taken; I was too lazy to RTFM.

> They can be rewritten as:
>
> ?str = str:gsub ("[,;]", {[","] = "&",
> ? ? ? ? ? ? ? ? ? ? ? ? ? [";"] = [[\\]]} )
>
I don't like this.  It requires a table access on every hit.
I've tested it with this standalone code:

str=string.rep(",;",1000000)
for k=1,10 do
   local t
   t=str:gsub("%,",[[&]]); t=t:gsub("%;",[[\\]])
--   t=str:gsub("[,;]", {[","] = "&",[";"] = [[\\]]})
   end

This way, `luatex test.lua` runs in 2.9s on my laptop.
Moving the comment to the other "t=" line runs in 4.3s.
Granted, for the matrix size in my TeX source it's not
going to matter.


