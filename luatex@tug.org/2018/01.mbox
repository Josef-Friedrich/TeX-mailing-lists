From vk489 at uowmail.edu.au  Thu Jan  4 13:08:08 2018
From: vk489 at uowmail.edu.au (Vafa Khalighi)
Date: Thu, 4 Jan 2018 12:08:08 +0000
Subject: [luatex] \leqno bug with \pardir TRT and \textdir TRT
Message-ID: <SY3PR01MB0795BDE46529455B2755FAC7D61F0@SY3PR01MB0795.ausprd01.prod.outlook.com>

Hi


While working on my bidiluatex package, I found yet another ugly bug. When \pardir and \textdir are set to TRT, the display math containing \leqno is shifted to the left by half of \hsize. Please see attached plain TeX document.


For now, one can fix this by setting \predisplaydirection to 0. i.e.


\everydisplay\expandafter{\the\everydisplay\predisplaydirection\z@}


Yours sincerely,

  Vafa



-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://tug.org/pipermail/luatex/attachments/20180104/40ddde2c/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: test.tex
Type: application/x-tex
Size: 137 bytes
Desc: test.tex
URL: <http://tug.org/pipermail/luatex/attachments/20180104/40ddde2c/attachment.tex>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: test.pdf
Type: application/pdf
Size: 9670 bytes
Desc: test.pdf
URL: <http://tug.org/pipermail/luatex/attachments/20180104/40ddde2c/attachment.pdf>

From joseph.wright at morningstar2.co.uk  Sun Jan  7 22:34:39 2018
From: joseph.wright at morningstar2.co.uk (Joseph Wright)
Date: Sun, 7 Jan 2018 21:34:39 +0000
Subject: [luatex] \lastnamedcs and \begincsname with empty csname
Message-ID: <c0016cbd-b38b-34d1-11dc-38936152c9d1@morningstar2.co.uk>

Hello,

Testing out how \lastnamedcs and \begincsname behave for some LaTeX 
kernel work, the following has come up:

\def\test#1{%
   \expandafter\def\csname #1\endcsname{abc}
   \message{\begincsname #1\endcsname}}
\test{x}
\test{y}
\test{}

\expandafter\let\expandafter\x\csname abc\endcsname
\show\x
\expandafter\show\lastnamedcs a

\expandafter\let\expandafter\x\csname hbox\endcsname
\show\x
\expandafter\show\lastnamedcs b


\expandafter\let\expandafter\x\csname\endcsname
\show\x
\expandafter\show\lastnamedcs c

\end

As you'll see, with an empty csname, both \lastnamedcs and \begincsname 
give (possibly) surprising results. Is this by-design?

Joseph

From d.p.carlisle at gmail.com  Sun Jan  7 23:15:23 2018
From: d.p.carlisle at gmail.com (David Carlisle)
Date: Sun, 7 Jan 2018 22:15:23 +0000
Subject: [luatex] \lastnamedcs and \begincsname with empty csname
In-Reply-To: <c0016cbd-b38b-34d1-11dc-38936152c9d1@morningstar2.co.uk>
References: <c0016cbd-b38b-34d1-11dc-38936152c9d1@morningstar2.co.uk>
Message-ID: <CAEW6iOj-bYy2LAHRz=rWmx-x-911M-WV2EtjQUDVPiMNcmbTaw@mail.gmail.com>

On 7 January 2018 at 21:34, Joseph Wright
<joseph.wright at morningstar2.co.uk> wrote:
> Hello,
>
> Testing out how \lastnamedcs and \begincsname behave for some LaTeX kernel
> work, the following has come up:
>
> \def\test#1{%
>   \expandafter\def\csname #1\endcsname{abc}
>   \message{\begincsname #1\endcsname}}
> \test{x}
> \test{y}
> \test{}
>
> \expandafter\let\expandafter\x\csname abc\endcsname
> \show\x
> \expandafter\show\lastnamedcs a
>
> \expandafter\let\expandafter\x\csname hbox\endcsname
> \show\x
> \expandafter\show\lastnamedcs b
>
>
> \expandafter\let\expandafter\x\csname\endcsname
> \show\x
> \expandafter\show\lastnamedcs c
>
> \end
>
> As you'll see, with an empty csname, both \lastnamedcs and \begincsname give
> (possibly) surprising results. Is this by-design?
>
> Joseph

Another example, the luatex manual, when introducing \lastnamedcs
indicates that the constructs \usea and \useb below are equivalent,
\useb (using \lastnamedcs) is noticeably quicker, but they are not
equivalent and the extra tests that #1 is empty and if so falling back
on a test of \csname\endcsname complicate the macro coding and use up
much of the speed differences.

Should not \lastnamedcs expand to the token with empty csname after
\csname\endcsname ?

David



\def\defn#1{\expandafter\def\csname#1\endcsname}

\def\usea#1{%
\ifcsname#1\endcsname
  \csname#1\endcsname
\fi}

\def\useb#1{%
\ifcsname#1\endcsname
  \lastnamedcs
\fi}



\defn{abc}{hello}

a:\usea{abc}

b:\useb{abc}

but

\defn{}{???}

a: \usea{}

b: \useb{}



\bye

From pragma at wxs.nl  Mon Jan  8 00:38:18 2018
From: pragma at wxs.nl (Hans Hagen)
Date: Mon, 8 Jan 2018 00:38:18 +0100
Subject: [luatex] \lastnamedcs and \begincsname with empty csname
In-Reply-To: <CAEW6iOj-bYy2LAHRz=rWmx-x-911M-WV2EtjQUDVPiMNcmbTaw@mail.gmail.com>
References: <c0016cbd-b38b-34d1-11dc-38936152c9d1@morningstar2.co.uk>
 <CAEW6iOj-bYy2LAHRz=rWmx-x-911M-WV2EtjQUDVPiMNcmbTaw@mail.gmail.com>
Message-ID: <f1a9384e-01ba-1f11-1dc2-d2ba433e6fa1@wxs.nl>

On 1/7/2018 11:15 PM, David Carlisle wrote:

> Should not \lastnamedcs expand to the token with empty csname after > \csname\endcsname ?
It's by design (an explicit test and nothing done with a null cs, so no 
cleanup side effects too) ... btw, it's already tricky enough this code 
and we're not going to change such functionality (just like we don't 
change other primitives with side effects).

btw, in practice, where expansion is not always the most extensive and 
slowest bit of texing, the speed gain is not that large, we mostly save 
on building temporary strings internally which for (only) multi byte utf 
is taking some time. Of course it can give less code (no repetition and 
a few less tokens). One should also realize that there is no stack 
involved so nesting can have side effects, not that i ran into many 
surprises but there are cases - which by now i forgot - that one can be 
bitten in the tail, as usual with tex expansion, rightfully.

Hans

-----------------------------------------------------------------
                                           Hans Hagen | PRAGMA ADE
               Ridderstraat 27 | 8061 GH Hasselt | The Netherlands
        tel: 038 477 53 69 | www.pragma-ade.nl | www.pragma-pod.nl
-----------------------------------------------------------------

From d.p.carlisle at gmail.com  Mon Jan  8 01:17:24 2018
From: d.p.carlisle at gmail.com (David Carlisle)
Date: Mon, 8 Jan 2018 00:17:24 +0000
Subject: [luatex] \lastnamedcs and \begincsname with empty csname
In-Reply-To: <f1a9384e-01ba-1f11-1dc2-d2ba433e6fa1@wxs.nl>
References: <c0016cbd-b38b-34d1-11dc-38936152c9d1@morningstar2.co.uk>
 <CAEW6iOj-bYy2LAHRz=rWmx-x-911M-WV2EtjQUDVPiMNcmbTaw@mail.gmail.com>
 <f1a9384e-01ba-1f11-1dc2-d2ba433e6fa1@wxs.nl>
Message-ID: <CAEW6iOi-Z+BKK4UD1q4vWRyuQNNSdTx2XmrqPMUtoOZXbJdx1g@mail.gmail.com>

On 7 January 2018 at 23:38, Hans Hagen <pragma at wxs.nl> wrote:
> On 1/7/2018 11:15 PM, David Carlisle wrote:
>
>> Should not \lastnamedcs expand to the token with empty csname after >
>> \csname\endcsname ?
>
> It's by design (an explicit test and nothing done with a null cs, so no
> cleanup side effects too) ... btw, it's already tricky enough this code and
> we're not going to change such functionality (just like we don't change
> other primitives with side effects).

OK, although the resulting behaviour is a bit odd, but can the manual
be fixed to describe the behaviour
as the current behaviour is not as described there.

thanks,

David

From lists at openlilylib.org  Fri Jan 19 09:37:17 2018
From: lists at openlilylib.org (Urs Liska)
Date: Fri, 19 Jan 2018 09:37:17 +0100
Subject: [luatex] First question: Retrieve *family* name of a font / the
 three main families
Message-ID: <18b98e86-cfd6-9936-3ab4-cafb394f1156@openlilylib.org>

Hi all,

this is my first post to this list, and I must say I haven't found a way 
to search the list archives. If there is any I apologize for asking 
without searching the list archives before posting. But search engines 
and the manual haven't provided any help for me, nor did I receive much 
feedback on stackexchange. So I think asking here is "the right thing".

I'm contributing to a LuaLaTeX package 
(https://github.com/jperon/lyluatex) that uses an external program 
(LilyPond) to generate images to be included in the LaTeX document. I 
need to pass the used fonts to LilyPond, and I didn't manage to retrieve 
the necessary information in Lua.

What I need is

a) which families are currently set as roman, sans and mono fonts
b) the "family" name of these.

ad a)
I have managed to retrieve the "current" font, i.e. the one that is 
currently used for typesetting. This is basically done with

 ??? local current_font = fonts.hashes.identifiers[font.current()]

although I don't know if that's the most direct way to get to that 
information.
But this is not the *family* of the font but actually the font face 
currently in use. And I have no idea how to get to the three defined 
font families.

ad b)
According to the documentation (chapter 5 of luatex.pdf) I can access 
the following vlaues from the font object:
 ??? .name
 ??? .fullname
 ??? .psname
 ??? .filename
but none of those provides me reliably with what I need to pass on to 
LilyPond, which seems to be the "family".

For Linux Libertine O it works, but this seems somewhat accidentally. 
This is what the font object gives me:

fullname: Linux Libertine O
psname: LinLibertineO
name: 
[LinLibertine_R.otf]:mode=node;script=latn;language=DFLT;+tlig;+tnum;+lnum;
filename: 
/usr/share/texlive/texmf-dist/fonts/opentype/public/libertine/LinLibertine_R.otf

Other fonts don't work. This is the result for "Adobe Garamond Pro":
fullname: AGaramondPro-Regular
psname: AGaramondPro-Regular
name: AdobeGaramondPro:mode=node;script=latn;language=DFLT;+tlig;
filename: /home/shared/fonts/Adobe Garamond Pro/AGaramondPro-Regular.otf

If I compare this to the output Fontconfig is giving me:

$ fc-list -v | grep -i libertine
 ??? family: "Linux Libertine O"(s)
 ??? fullname: "Linux Libertine O Semibold"(s)
 ??? file: 
"/usr/share/fonts/opentype/linux-libertine/LinLibertine_RZ.otf"(s)
 ??? postscriptname: "LinLibertineOZ"(s)
 ??? ... and the same sets for all font faces

$ fc-list -v | grep -i "adobe.*garamond"
 ??? family: "Adobe Garamond Pro"(s)
 ??? fullname: "AGaramondPro-SemiboldItalic"(s) "Adobe Garamond Pro Sb 
Italic"(s) "Adobe Garamond Pro Semibold Italic"(s)
 ??? file: "/home/uliska/.fonts/Adobe Garamond Pro/AGaramondPro

it seems that the "fullname" property is quite unreliable, and I 
definitely need to get the "family" name.
However, from the "Font structure" section in the LuaTeX manual I don't 
find any way to get that information.

Maybe there's a way to retrieve that information from the actual font 
file? But it would be nice to be able to get it directly from Lua - and 
of course it has to be OS independent, so I guess I can't make use of 
Fontconfig?

Any suggestions are highly welcome.

Thanks in advance and best regards
Urs


From Knut_Petersen at t-online.de  Fri Jan 19 13:38:15 2018
From: Knut_Petersen at t-online.de (Knut Petersen)
Date: Fri, 19 Jan 2018 13:38:15 +0100
Subject: [luatex] First question: Retrieve *family* name of a font / the
 three main families
In-Reply-To: <18b98e86-cfd6-9936-3ab4-cafb394f1156@openlilylib.org>
References: <18b98e86-cfd6-9936-3ab4-cafb394f1156@openlilylib.org>
Message-ID: <b76c559d-2890-adbe-310a-af3474a5ba97@t-online.de>

Am 19.01.2018 um 09:37 schrieb Urs Liska:
> I'm contributing to a LuaLaTeX package (https://github.com/jperon/lyluatex) that uses an external program (LilyPond) to generate images to be included in the LaTeX document. I need to pass the used fonts to LilyPond, and I didn't manage to retrieve the necessary information in Lua.
>
> What I need is
>
> a) which families are currently set as roman, sans and mono fonts
> b) the "family" name of these. [...]

So you want to teach lilypond to use the fonts latex uses.

In a similar project I use this code fragment to get information about the current TeX font and to pass it to lilypond:

     ? \else
     ??? {
     ????? \mdseries\@llftmp
     ????? \immediate\write18{
     ??????? LANG=c
     ??????? FONT=`echo '\fontname\font'
     ??????? | sed -e 's/"//g'
     ??????? | sed -e 's/\@esc[\@esc([[:print:]]*\@esc)\@esc][[:print:]]*/\@esc1/'`
     ??????? ;
     ??????? otfinfo --info `kpsewhich $FONT`
     ??????? | grep "Full name:"
     ??????? | sed -e 's/Full name:[[:blank:]]*\@esc([[:print:]]*\@esc)/\@esc\@esc
     ????????? def \@esc\@esc fontfullname\@cbopen\@esc 1\@cbclose/'
     ??????? > ourfont.tex}
     ????? \input "ourfont.tex"
     ????? \@imwrtof{\@ht(define lyinlaFontName "\fontfullname")}
     ????? \@imwrtof{\@ht(define lyinlaFontSize (absFontSize \f at size))}
     ??? }
     ? \fi


\@imwrtof is defined to immediately write to an output file that will be processed by lilypond,
\@esc gives a literal "\",
\@ht gives a literal "#",
\@cbopen gives a literal "{",
\@cbclose gives a? literal "}"

Obviously it does not compile, it requires --shell-escape, and it is not OS-independent. Bt it might be a starting point for you.

The idea of the code is to take \fontname\font,
to process it as shown,
to get the font filename from kpsewhich,
and to use otfinfo to get the needed information.

The output of otfinfo is filtered and written to a TeX file,
that file is read after return from the shell,
and two scheme expression (for fontname and fontsize) are
written to a file that later will be processed by lilypond.

Knut
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://tug.org/pipermail/luatex/attachments/20180119/a5a0d9f1/attachment.html>

From lists at openlilylib.org  Fri Jan 19 14:37:00 2018
From: lists at openlilylib.org (Urs Liska)
Date: Fri, 19 Jan 2018 14:37:00 +0100
Subject: [luatex] First question: Retrieve *family* name of a font / the
 three main families
In-Reply-To: <b76c559d-2890-adbe-310a-af3474a5ba97@t-online.de>
References: <18b98e86-cfd6-9936-3ab4-cafb394f1156@openlilylib.org>
 <b76c559d-2890-adbe-310a-af3474a5ba97@t-online.de>
Message-ID: <da024ada-e8ac-033a-70ef-2419bdcf684a@openlilylib.org>

Hi Knut,


Am 19.01.2018 um 13:38 schrieb Knut Petersen:
> Am 19.01.2018 um 09:37 schrieb Urs Liska:
>> I'm contributing to a LuaLaTeX package 
>> (https://github.com/jperon/lyluatex) that uses an external program 
>> (LilyPond) to generate images to be included in the LaTeX document. I 
>> need to pass the used fonts to LilyPond, and I didn't manage to 
>> retrieve the necessary information in Lua.
>>
>> What I need is
>>
>> a) which families are currently set as roman, sans and mono fonts
>> b) the "family" name of these.? [...]
>
> So you want to teach lilypond to use the fonts latex uses.

Yes, it's awesome when included scores use the same fonts as the 
surrounding text.
>
> In a similar project I use this code fragment to get information about 
> the current TeX font and to pass it to lilypond:
>
>     ? \else
>     ??? {
>     ????? \mdseries\@llftmp
>     ????? \immediate\write18{
>     ??????? LANG=c
>     ??????? FONT=`echo '\fontname\font'
>     ??????? | sed -e 's/"//g'
>     ??????? | sed -e
>     's/\@esc[\@esc([[:print:]]*\@esc)\@esc][[:print:]]*/\@esc1/'`
>     ??????? ;
>     ??????? otfinfo --info `kpsewhich $FONT`
>     ??????? | grep "Full name:"
>     ??????? | sed -e 's/Full
>     name:[[:blank:]]*\@esc([[:print:]]*\@esc)/\@esc\@esc
>     ????????? def \@esc\@esc fontfullname\@cbopen\@esc 1\@cbclose/'
>     ??????? > ourfont.tex}
>     ????? \input "ourfont.tex"
>     ????? \@imwrtof{\@ht(define lyinlaFontName "\fontfullname")}
>     ????? \@imwrtof{\@ht(define lyinlaFontSize (absFontSize \f at size))}
>     ??? }
>     ? \fi
>
>
> \@imwrtof is defined to immediately write to an output file that will 
> be processed by lilypond,
> \@esc gives a literal "\",
> \@ht gives a literal "#",
> \@cbopen gives a literal "{",
> \@cbclose gives a? literal "}"
>
> Obviously it does not compile, it requires --shell-escape, 

That's not an issue, the lyluatex package needs that anyway to start 
LilyPond.

> and it is not OS-independent. 

That's probably true.

> Bt it might be a starting point for you.
>
> The idea of the code is to take \fontname\font,
> to process it as shown,
> to get the font filename from kpsewhich,
> and to use otfinfo to get the needed information.
>
> The output of otfinfo is filtered and written to a TeX file,
> that file is read after return from the shell,
> and two scheme expression (for fontname and fontsize) are
> written to a file that later will be processed by lilypond.
>

I can do that with little effort in the Lua layer (I'm working in anyway):

  * get the absolute filename from the font object.
  * run otfinfo -a with that filename

This should be straightforward to implement but hard to make OS 
independent. While I personally don't care about that I vividly recall 
that in an earlier life I felt strongly offended by the attitude "YOU 
made the mistake of using Windows, so don't complain now" ...

otfinfo seems to be available on Windows and even included in 
http://w32tex.org/ ,? but I'm not sure if that will be an acceptable 
dependency. Of course I can start with implementing it for Linux and 
make the option be limited to that.


But still I can't really believe that Lua can tell me the 
postscriptname, "fullname", filename, but not the family.

Does anybody know if that's a deliberate limitation?

Urs


> Knut

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://tug.org/pipermail/luatex/attachments/20180119/5374ff8e/attachment.html>

From pragma at wxs.nl  Fri Jan 19 15:00:26 2018
From: pragma at wxs.nl (Hans Hagen)
Date: Fri, 19 Jan 2018 15:00:26 +0100
Subject: [luatex] First question: Retrieve *family* name of a font / the
 three main families
In-Reply-To: <da024ada-e8ac-033a-70ef-2419bdcf684a@openlilylib.org>
References: <18b98e86-cfd6-9936-3ab4-cafb394f1156@openlilylib.org>
 <b76c559d-2890-adbe-310a-af3474a5ba97@t-online.de>
 <da024ada-e8ac-033a-70ef-2419bdcf684a@openlilylib.org>
Message-ID: <58172103-3342-7b7b-d9f7-0752dd1b6be9@wxs.nl>

On 1/19/2018 2:37 PM, Urs Liska wrote:
> Hi Knut,
> 
> 
> Am 19.01.2018 um 13:38 schrieb Knut Petersen:
>> Am 19.01.2018 um 09:37 schrieb Urs Liska:
>>> I'm contributing to a LuaLaTeX package 
>>> (https://github.com/jperon/lyluatex) that uses an external program 
>>> (LilyPond) to generate images to be included in the LaTeX document. I 
>>> need to pass the used fonts to LilyPond, and I didn't manage to 
>>> retrieve the necessary information in Lua.
>>>
>>> What I need is
>>>
>>> a) which families are currently set as roman, sans and mono fonts
>>> b) the "family" name of these.? [...]
>>
>> So you want to teach lilypond to use the fonts latex uses.
> 
> Yes, it's awesome when included scores use the same fonts as the 
> surrounding text.
>>
>> In a similar project I use this code fragment to get information about 
>> the current TeX font and to pass it to lilypond:
>>
>>     ? \else
>>     ??? {
>>     ????? \mdseries\@llftmp
>>     ????? \immediate\write18{
>>     ??????? LANG=c
>>     ??????? FONT=`echo '\fontname\font'
>>     ??????? | sed -e 's/"//g'
>>     ??????? | sed -e
>>     's/\@esc[\@esc([[:print:]]*\@esc)\@esc][[:print:]]*/\@esc1/'`
>>     ??????? ;
>>     ??????? otfinfo --info `kpsewhich $FONT`
>>     ??????? | grep "Full name:"
>>     ??????? | sed -e 's/Full
>>     name:[[:blank:]]*\@esc([[:print:]]*\@esc)/\@esc\@esc
>>     ????????? def \@esc\@esc fontfullname\@cbopen\@esc 1\@cbclose/'
>>     ??????? > ourfont.tex}
>>     ????? \input "ourfont.tex"
>>     ????? \@imwrtof{\@ht(define lyinlaFontName "\fontfullname")}
>>     ????? \@imwrtof{\@ht(define lyinlaFontSize (absFontSize \f at size))}
>>     ??? }
>>     ? \fi
>>
>>
>> \@imwrtof is defined to immediately write to an output file that will 
>> be processed by lilypond,
>> \@esc gives a literal "\",
>> \@ht gives a literal "#",
>> \@cbopen gives a literal "{",
>> \@cbclose gives a? literal "}"
>>
>> Obviously it does not compile, it requires --shell-escape, 
> 
> That's not an issue, the lyluatex package needs that anyway to start 
> LilyPond.
> 
>> and it is not OS-independent. 
> 
> That's probably true.
> 
>> Bt it might be a starting point for you.
>>
>> The idea of the code is to take \fontname\font,
>> to process it as shown,
>> to get the font filename from kpsewhich,
>> and to use otfinfo to get the needed information.
>>
>> The output of otfinfo is filtered and written to a TeX file,
>> that file is read after return from the shell,
>> and two scheme expression (for fontname and fontsize) are
>> written to a file that later will be processed by lilypond.
>>
> 
> I can do that with little effort in the Lua layer (I'm working in anyway):
> 
>   * get the absolute filename from the font object.
>   * run otfinfo -a with that filename
> 
> This should be straightforward to implement but hard to make OS 
> independent. While I personally don't care about that I vividly recall 
> that in an earlier life I felt strongly offended by the attitude "YOU 
> made the mistake of using Windows, so don't complain now" ...
> 
> otfinfo seems to be available on Windows and even included in 
> http://w32tex.org/ ,? but I'm not sure if that will be an acceptable 
> dependency. Of course I can start with implementing it for Linux and 
> make the option be limited to that.
> 
> 
> But still I can't really believe that Lua can tell me the 
> postscriptname, "fullname", filename, but not the family.
> 
> Does anybody know if that's a deliberate limitation?
Something like this

\directlua {
     function FontInfoField(id,name)
         local t = fonts.hashes.identifiers[id]
         if t and t.shared and t.shared.rawdata and 
t.shared.rawdata.metadata then
             local s = t.shared.rawdata.metadata[name]
             if t then
                 tex.print(s)
             end
         end
     end
}

\def\CurrentFontName 
{\directlua{tex.sprint(FontInfoField(\fontid\font,"fontname"))}}
\def\CurrentFullName 
{\directlua{tex.sprint(FontInfoField(\fontid\font,"fullname"))}}
\def\CurrentFamily 
{\directlua{tex.sprint(FontInfoField(\fontid\font,"family"))}}
\def\CurrentFamilyName 
{\directlua{tex.sprint(FontInfoField(\fontid\font,"familyname"))}}
\def\CurrentSubFamily 
{\directlua{tex.sprint(FontInfoField(\fontid\font,"subfamily"))}}
\def\CurrentSubFamilyName 
{\directlua{tex.sprint(FontInfoField(\fontid\font,"subfamilyname"))}}
\def\CurrentCompatibleName{\directlua{tex.sprint(FontInfoField(\fontid\font,"compatiblename"))}}

\def\test{%
     \CurrentFontName      \par
     \CurrentFullName      \par
     \CurrentFamily        \par
     \CurrentFamilyName    \par
     \CurrentSubFamily     \par
     \CurrentSubFamilyName \par
     \CurrentCompatibleName\par
}

\test \bf \test

should give

LMRoman10-Regular
LMRoman10-Regular
LM Roman 10
Latin Modern Roman
Regular
10 Regular
LM Roman 10 Regular
LMRoman10-Bold
LMRoman10-Bold
LM Roman 10
Latin Modern Roman
Bold
10 Bold
LM Roman 10 Bold

but it depends on the macro package how you'd really do it (this is a 
somewhat generic approach which might work ok for latex but i didn't 
test it)

Hans

-----------------------------------------------------------------
                                           Hans Hagen | PRAGMA ADE
               Ridderstraat 27 | 8061 GH Hasselt | The Netherlands
        tel: 038 477 53 69 | www.pragma-ade.nl | www.pragma-pod.nl
-----------------------------------------------------------------

From rpspringuel at gmail.com  Fri Jan 19 17:03:09 2018
From: rpspringuel at gmail.com (Br. Samuel Springuel)
Date: Fri, 19 Jan 2018 11:03:09 -0500
Subject: [luatex] First question: Retrieve *family* name of a font / the
 three main families
In-Reply-To: <da024ada-e8ac-033a-70ef-2419bdcf684a@openlilylib.org>
References: <18b98e86-cfd6-9936-3ab4-cafb394f1156@openlilylib.org>
 <b76c559d-2890-adbe-310a-af3474a5ba97@t-online.de>
 <da024ada-e8ac-033a-70ef-2419bdcf684a@openlilylib.org>
Message-ID: <ab507ac2-c95e-5844-35f0-b4d98097563d@gmail.com>

On 2018-01-19 8:37 AM, Urs Liska wrote:
> otfinfo seems to be available on Windows and even included in 
> http://w32tex.org/ ,? but I'm not sure if that will be an acceptable 
> dependency.

IIRC, otfinfo is also made available by TeXLive.  In 2016 the Gregorio 
project started adding version information to our fonts and I modified 
our system-setup.bat (a script we provide to help diagnose installation 
problems) to make use of otfinfo in order to check that version 
information.  I only would have done that if I felt it was reasonable to 
expect otfinfo to be available on Windows, i.e. TeXLive and/or MiKTeX 
installed it.

-- 
?????????????????????????
Br. Samuel, OSB
St. Anselm?s Abbey
Washington, DC
(R. Padraic Springuel)

PAX ? ???????

From lists at openlilylib.org  Fri Jan 19 17:05:42 2018
From: lists at openlilylib.org (Urs Liska)
Date: Fri, 19 Jan 2018 17:05:42 +0100
Subject: [luatex] First question: Retrieve *family* name of a font / the
 three main families
In-Reply-To: <58172103-3342-7b7b-d9f7-0752dd1b6be9@wxs.nl>
References: <18b98e86-cfd6-9936-3ab4-cafb394f1156@openlilylib.org>
 <b76c559d-2890-adbe-310a-af3474a5ba97@t-online.de>
 <da024ada-e8ac-033a-70ef-2419bdcf684a@openlilylib.org>
 <58172103-3342-7b7b-d9f7-0752dd1b6be9@wxs.nl>
Message-ID: <780efd57-2891-94b3-152a-f42cfbad51c3@openlilylib.org>



Am 19.01.2018 um 15:00 schrieb Hans Hagen:
> On 1/19/2018 2:37 PM, Urs Liska wrote:
>> Hi Knut,
>>
>>
>> Am 19.01.2018 um 13:38 schrieb Knut Petersen:
>>> Am 19.01.2018 um 09:37 schrieb Urs Liska:
>>>> I'm contributing to a LuaLaTeX package 
>>>> (https://github.com/jperon/lyluatex) that uses an external program...
>>
>> ...
>>
>>
>> But still I can't really believe that Lua can tell me the 
>> postscriptname, "fullname", filename, but not the family.
>>
>> Does anybody know if that's a deliberate limitation?
> Something like this
>
> \directlua {
> ??? function FontInfoField(id,name)
> ??????? local t = fonts.hashes.identifiers[id]
> ??????? if t and t.shared and t.shared.rawdata and 
> t.shared.rawdata.metadata then
> ??????????? local s = t.shared.rawdata.metadata[name]
> ??????????? if t then
> ??????????????? tex.print(s)
> ??????????? end
> ??????? end
> ??? end
> }

Thank you, this seems to be the information I needed. (Just out of 
curiousity: where would I have found the reference for the font table 
that includes this information? I did realize that luatex.pdf spoke of 
"first level" table elements, but it didn't go any further.

Could you please explain to me in what case any of the conditionals 
could fail? That is, why is it necessary to do all these checks? If I 
know that the font passed into the function exists (for example because 
its font.current() ) wouldn't it be sufficient to return
 ?? fonts.hashes.identifiers[id].shared.rawdata and 
t.shared.rawdata.metadata[name]
?

Which leaves me with my second question: how can I retrieve the three 
font families specified for \rmfamily, \sffamily, and \ttfamily?

I imagine I could change to each, retrieve the "current" font, do *not* 
print anything, and reset in the end.
But is there another, more elegant way, for example some other table 
where I can directly read out the information?

Best
Urs

From luatex at nililand.de  Sat Jan 20 17:36:06 2018
From: luatex at nililand.de (Ulrike Fischer)
Date: Sat, 20 Jan 2018 17:36:06 +0100
Subject: [luatex] First question: Retrieve *family* name of a font / the
	three main families
References: <18b98e86-cfd6-9936-3ab4-cafb394f1156@openlilylib.org>
 <b76c559d-2890-adbe-310a-af3474a5ba97@t-online.de>
 <da024ada-e8ac-033a-70ef-2419bdcf684a@openlilylib.org>
 <58172103-3342-7b7b-d9f7-0752dd1b6be9@wxs.nl>
 <780efd57-2891-94b3-152a-f42cfbad51c3@openlilylib.org>
Message-ID: <rtcfyrej8jmq.dlg@nililand.de>

Am Fri, 19 Jan 2018 17:05:42 +0100 schrieb Urs Liska:

> Which leaves me with my second question: how can I retrieve the three 
> font families specified for \rmfamily, \sffamily, and \ttfamily?

Well as I already wrote on tex.SX it is rather unclear what you mean
by family and how you want to use it. 

Assuming that you use latex: \rmfamily addresses a bunch of fonts
which are normally somehow "of the same family" but this is not a
must. As an example you could do:

\setmainfont{Arial}[ItalicFont=Consolas/I,
                    BoldFont=TeX Gyre Termes/B]

And then the upright font of this "roman family" will be Arial, the
italic shape Consolas and the bold font a times clon. 

The family name of this bunch of fonts (stored in \rmdefault) will
be "Arial(0)" in fontspec, but obviously this name is not of much
use for you, it is a rather arbitrary key and not connected to the
real fonts. 

If you want to retrieve the fonts connected with the various shape
you can do something like this:

\documentclass{article}
\usepackage{fontspec}
\setmainfont{Arial}[ItalicFont=Consolas/I,BoldFont=TeX Gyre
Termes/B]
\begin{document}
abc %Arial
\textbf{abc}%TeX Gyre Termes
\textit{abc}%Consolas

\expandafter\show\csname TU/\rmdefault/m/n\endcsname
\expandafter\show\csname TU/\rmdefault/m/it\endcsname
\expandafter\show\csname TU/\rmdefault/bx/n\endcsname

\end{document}

Or you could ask Will to store the two arguments of the \setmainfont
command for later use.

-- 
Ulrike Fischer 
http://www.troubleshooting-tex.de/


From rpspringuel at gmail.com  Sat Jan 20 20:29:04 2018
From: rpspringuel at gmail.com (Br. Samuel Springuel)
Date: Sat, 20 Jan 2018 14:29:04 -0500
Subject: [luatex] First question: Retrieve *family* name of a font / the
 three main families
In-Reply-To: <rtcfyrej8jmq.dlg@nililand.de>
References: <18b98e86-cfd6-9936-3ab4-cafb394f1156@openlilylib.org>
 <b76c559d-2890-adbe-310a-af3474a5ba97@t-online.de>
 <da024ada-e8ac-033a-70ef-2419bdcf684a@openlilylib.org>
 <58172103-3342-7b7b-d9f7-0752dd1b6be9@wxs.nl>
 <780efd57-2891-94b3-152a-f42cfbad51c3@openlilylib.org>
 <rtcfyrej8jmq.dlg@nililand.de>
Message-ID: <0c471780-0b5e-911d-9a8e-37b9668cdb06@gmail.com>

On 1/20/18 11:36 AM, Ulrike Fischer wrote:
> Well as I already wrote on tex.SX it is rather unclear what you mean
> by family and how you want to use it.

The goal is to be able to pass the information to another program, 
LilyPond, and use it to set the fonts there so that there is some 
consistency in the look of documents which mix results from LuaTeX and 
LilyPond (and it happens automatically).

Unlike LuaTex (and other TeX flavors) which permit mixing fonts as 
you've indicated, LilyPond doesn't.  Instead it defines three font 
groups: roman, sans, and typewriter.  Within those groups changes in 
weight, shape, etc. are automatically done within the same font family. 
I.e. if I define the roman font to be Century Schoolbook, then the bold 
text will always be the Century Schoolbook-Bold.  If I define it to be 
Arial then bold will be Arial Bold.  So far as I know, there is no way 
to do something like what you indicate is possible in LuaTeX within 
LilyPond.  In this respect, selecting the font in LilyPond is like 
selecting a font in a "dumb" program like Word or OpenOffice.

When Urs says he wants the font family, then, he's looking for that 
primary name which would allow a "dumb" program to select the normal, 
bold, italic, etc. font varieties from that same family.
-- 
?????????????????????????
Br. Samuel, OSB
St. Anselm?s Abbey
Washington, DC
(R. Padraic Springuel)

PAX ? ???????

From lists at openlilylib.org  Sat Jan 20 22:30:40 2018
From: lists at openlilylib.org (Urs Liska)
Date: Sat, 20 Jan 2018 22:30:40 +0100
Subject: [luatex] First question: Retrieve *family* name of a font / the
	three main families
In-Reply-To: <0c471780-0b5e-911d-9a8e-37b9668cdb06@gmail.com>
References: <18b98e86-cfd6-9936-3ab4-cafb394f1156@openlilylib.org>
 <b76c559d-2890-adbe-310a-af3474a5ba97@t-online.de>
 <da024ada-e8ac-033a-70ef-2419bdcf684a@openlilylib.org>
 <58172103-3342-7b7b-d9f7-0752dd1b6be9@wxs.nl>
 <780efd57-2891-94b3-152a-f42cfbad51c3@openlilylib.org>
 <rtcfyrej8jmq.dlg@nililand.de>
 <0c471780-0b5e-911d-9a8e-37b9668cdb06@gmail.com>
Message-ID: <536EFB63-64A8-44C1-9E0B-CDFB3F66ADDD@openlilylib.org>



Am 20. Januar 2018 20:29:04 MEZ schrieb "Br. Samuel Springuel" <rpspringuel at gmail.com>:
>On 1/20/18 11:36 AM, Ulrike Fischer wrote:
>> Well as I already wrote on tex.SX it is rather unclear what you mean
>> by family and how you want to use it.
>
>The goal is to be able to pass the information to another program, 
>LilyPond, and use it to set the fonts there so that there is some 
>consistency in the look of documents which mix results from LuaTeX and 
>LilyPond (and it happens automatically).
>
>Unlike LuaTex (and other TeX flavors) which permit mixing fonts as 
>you've indicated, LilyPond doesn't.  Instead it defines three font 
>groups: roman, sans, and typewriter.  Within those groups changes in 
>weight, shape, etc. are automatically done within the same font family.
>

Indeed. LilyPond's *text* setting capabilities are frustratingly simple. 

>I.e. if I define the roman font to be Century Schoolbook, then the bold
>
>text will always be the Century Schoolbook-Bold.  If I define it to be 
>Arial then bold will be Arial Bold.  So far as I know, there is no way 
>to do something like what you indicate is possible in LuaTeX within 
>LilyPond.  In this respect, selecting the font in LilyPond is like 
>selecting a font in a "dumb" program like Word or OpenOffice.
>
>When Urs says he wants the font family, then, he's looking for that 
>primary name which would allow a "dumb" program to select the normal, 
>bold, italic, etc. font varieties from that same family.

Yes, exactly. I need basically the font specified in the mandatory argument, and from this the "family" name (but I have seen in this thread how to get that information from Lua). 

Urs


From reinhard.kotucha at web.de  Sun Jan 21 01:00:45 2018
From: reinhard.kotucha at web.de (Reinhard Kotucha)
Date: Sun, 21 Jan 2018 01:00:45 +0100
Subject: [luatex] First question: Retrieve *family* name of a font /
	the	three main families
In-Reply-To: <536EFB63-64A8-44C1-9E0B-CDFB3F66ADDD@openlilylib.org>
References: <18b98e86-cfd6-9936-3ab4-cafb394f1156@openlilylib.org>
 <b76c559d-2890-adbe-310a-af3474a5ba97@t-online.de>
 <da024ada-e8ac-033a-70ef-2419bdcf684a@openlilylib.org>
 <58172103-3342-7b7b-d9f7-0752dd1b6be9@wxs.nl>
 <780efd57-2891-94b3-152a-f42cfbad51c3@openlilylib.org>
 <rtcfyrej8jmq.dlg@nililand.de>
 <0c471780-0b5e-911d-9a8e-37b9668cdb06@gmail.com>
 <536EFB63-64A8-44C1-9E0B-CDFB3F66ADDD@openlilylib.org>
Message-ID: <23139.55341.737778.253458@gargle.gargle.HOWL>

On 2018-01-20 at 22:30:40 +0100, Urs Liska wrote:

 > Indeed. LilyPond's *text* setting capabilities are frustratingly
 > simple.

As far as I understand, LilyPond's typesetting capabilities are much
more sophisticated than necessary.  I can't imagine that anybody in
the world wants to typeset Beethoven's 9th Symphony with a sans-serif
or typewriter font.

Regards,
  Reinhard

-- 
------------------------------------------------------------------
Reinhard Kotucha                            Phone: +49-511-3373112
Marschnerstr. 25
D-30167 Hannover                    mailto:reinhard.kotucha at web.de
------------------------------------------------------------------

From rpspringuel at gmail.com  Sun Jan 21 01:26:48 2018
From: rpspringuel at gmail.com (Br. Samuel Springuel)
Date: Sat, 20 Jan 2018 19:26:48 -0500
Subject: [luatex] First question: Retrieve *family* name of a font / the
 three main families
In-Reply-To: <23139.55341.737778.253458@gargle.gargle.HOWL>
References: <18b98e86-cfd6-9936-3ab4-cafb394f1156@openlilylib.org>
 <b76c559d-2890-adbe-310a-af3474a5ba97@t-online.de>
 <da024ada-e8ac-033a-70ef-2419bdcf684a@openlilylib.org>
 <58172103-3342-7b7b-d9f7-0752dd1b6be9@wxs.nl>
 <780efd57-2891-94b3-152a-f42cfbad51c3@openlilylib.org>
 <rtcfyrej8jmq.dlg@nililand.de>
 <0c471780-0b5e-911d-9a8e-37b9668cdb06@gmail.com>
 <536EFB63-64A8-44C1-9E0B-CDFB3F66ADDD@openlilylib.org>
 <23139.55341.737778.253458@gargle.gargle.HOWL>
Message-ID: <9d52f0a2-560e-90f5-afd4-d468954c22e4@gmail.com>

On 1/20/18 7:00 PM, Reinhard Kotucha wrote:
> I can't imagine that anybody in the world wants to typeset
> Beethoven's 9th Symphony with a sans-serif or typewriter font.

Probably not, but there are people who want to typeset Jazz lead sheets
with a sans font that makes the whole thing look handwritten:

https://www.musictypefoundry.com/images/MTF-Improviso-2.0-allofme.png


And I'm sure if you poked around enough, some one would want to do
something with a typewriter font too.  There are people out there with
all kinds of needs/wants/tastes.

-- 
?????????????????????????
Br. Samuel, OSB
St. Anselm?s Abbey
Washington, DC
(R. Padraic Springuel)

PAX ? ???????

From lists at openlilylib.org  Sun Jan 21 01:44:37 2018
From: lists at openlilylib.org (Urs Liska)
Date: Sun, 21 Jan 2018 01:44:37 +0100
Subject: [luatex] First question: Retrieve *family* name of a font / the
	three main families
In-Reply-To: <9d52f0a2-560e-90f5-afd4-d468954c22e4@gmail.com>
References: <18b98e86-cfd6-9936-3ab4-cafb394f1156@openlilylib.org>
 <b76c559d-2890-adbe-310a-af3474a5ba97@t-online.de>
 <da024ada-e8ac-033a-70ef-2419bdcf684a@openlilylib.org>
 <58172103-3342-7b7b-d9f7-0752dd1b6be9@wxs.nl>
 <780efd57-2891-94b3-152a-f42cfbad51c3@openlilylib.org>
 <rtcfyrej8jmq.dlg@nililand.de>
 <0c471780-0b5e-911d-9a8e-37b9668cdb06@gmail.com>
 <536EFB63-64A8-44C1-9E0B-CDFB3F66ADDD@openlilylib.org>
 <23139.55341.737778.253458@gargle.gargle.HOWL>
 <9d52f0a2-560e-90f5-afd4-d468954c22e4@gmail.com>
Message-ID: <F109E19B-E528-4D5B-8B67-225D714A6022@openlilylib.org>



Am 21. Januar 2018 01:26:48 MEZ schrieb "Br. Samuel Springuel" <rpspringuel at gmail.com>:
>On 1/20/18 7:00 PM, Reinhard Kotucha wrote:
>> I can't imagine that anybody in the world wants to typeset
>> Beethoven's 9th Symphony with a sans-serif or typewriter font.
>
>Probably not, but there are people who want to typeset Jazz lead sheets
>with a sans font that makes the whole thing look handwritten:
>
>https://www.musictypefoundry.com/images/MTF-Improviso-2.0-allofme.png
>
>
>And I'm sure if you poked around enough, some one would want to do
>something with a typewriter font too.  There are people out there with
>all kinds of needs/wants/tastes.

Of course, but that's beside the point as of course you *can* use any font in LilyPond.  But there are no finer options such as detailed implicit selection of font weights, optical sizes (although it does so for notation font!), openType features. But even worse, there's really no useful paragraph formatting. Paragraphs are as ugly as when you disable hyphenation in LibreOffice.

Developers are of course aware of this and are not happy about it, but there simply is no capacity to do anything about it.

Urs


From dirk.laurie at gmail.com  Sun Jan 21 05:41:27 2018
From: dirk.laurie at gmail.com (Dirk Laurie)
Date: Sun, 21 Jan 2018 06:41:27 +0200
Subject: [luatex] First question: Retrieve *family* name of a font / the
 three main families
In-Reply-To: <F109E19B-E528-4D5B-8B67-225D714A6022@openlilylib.org>
References: <18b98e86-cfd6-9936-3ab4-cafb394f1156@openlilylib.org>
 <b76c559d-2890-adbe-310a-af3474a5ba97@t-online.de>
 <da024ada-e8ac-033a-70ef-2419bdcf684a@openlilylib.org>
 <58172103-3342-7b7b-d9f7-0752dd1b6be9@wxs.nl>
 <780efd57-2891-94b3-152a-f42cfbad51c3@openlilylib.org>
 <rtcfyrej8jmq.dlg@nililand.de>
 <0c471780-0b5e-911d-9a8e-37b9668cdb06@gmail.com>
 <536EFB63-64A8-44C1-9E0B-CDFB3F66ADDD@openlilylib.org>
 <23139.55341.737778.253458@gargle.gargle.HOWL>
 <9d52f0a2-560e-90f5-afd4-d468954c22e4@gmail.com>
 <F109E19B-E528-4D5B-8B67-225D714A6022@openlilylib.org>
Message-ID: <CABcj=tmsNGP5UWp7=QXj-zoiq1_jBKHybqyAxw43pDKZCFvsdg@mail.gmail.com>

2018-01-21 2:44 GMT+02:00 Urs Liska <lists at openlilylib.org>:

> Of course, but that's beside the point as of course you *can* use any font in LilyPond.  But there are no finer options such as detailed implicit selection of font weights, optical sizes (although it does so for notation font!), openType features. But even worse, there's really no useful paragraph formatting. Paragraphs are as ugly as when you disable hyphenation in LibreOffice.
>
> Developers are of course aware of this and are not happy about it, but there simply is no capacity to do anything about it.

Another option is to use MusiXTeX instead of LilyPond.


From wl at gnu.org  Sun Jan 21 07:59:23 2018
From: wl at gnu.org (Werner LEMBERG)
Date: Sun, 21 Jan 2018 07:59:23 +0100 (CET)
Subject: [luatex] First question: Retrieve *family* name of a font / the
 three main families
In-Reply-To: <F109E19B-E528-4D5B-8B67-225D714A6022@openlilylib.org>
References: <23139.55341.737778.253458@gargle.gargle.HOWL>
 <9d52f0a2-560e-90f5-afd4-d468954c22e4@gmail.com>
 <F109E19B-E528-4D5B-8B67-225D714A6022@openlilylib.org>
Message-ID: <20180121.075923.654621213281016162.wl@gnu.org>


> Of course, but that's beside the point as of course you *can* use
> any font in LilyPond.  But there are no finer options such as
> detailed implicit selection of font weights, optical sizes (although
> it does so for notation font!), openType features.

The last one is not correct.  It *can* select openType features (since
July 2017).

To summarize: LilyPond is using the pango library for selecting
fonts.  What's needed is a `converter' for font names from pango to
luatex and vice versa.

Blaming lilypond is actually barking the wrong tree.  Pango itself
uses the fontconfig library to extract font properties, and it would
be a very useful thing if luatex could understand and handle
fontconfig data in general.  There are certainly far more programs
that link to pango than programs that use luatex for text
formatting...

> But even worse, there's really no useful paragraph formatting.
> Paragraphs are as ugly as when you disable hyphenation in
> LibreOffice.

This was the reason that in the beginning of development LilyPond used
LaTeX as the typsetting backend (and it produced a DVI file, BTW).
However, this was not a working solution for various reason, thus the
change from LaTeX to pango.

I think that LilyPond should not become a `lilyTeX' program.  Let's
LilyPond do what it can best, namely typesetting music, and
typesetting of larger text blocks should be done by specialized
programs like luatex.  As a consequence, there exists the `lyluatex'
package as an interface between the two worlds, and thus is it is
important to make the font name `conversion' as smooth as possible.


    Werner

From lists at openlilylib.org  Sun Jan 21 12:37:17 2018
From: lists at openlilylib.org (lists at openlilylib.org)
Date: Sun, 21 Jan 2018 11:37:17 +0000
Subject: [luatex] First question: Retrieve *family* name of a font / the
 three main families
In-Reply-To: <CABcj=tmsNGP5UWp7=QXj-zoiq1_jBKHybqyAxw43pDKZCFvsdg@mail.gmail.com>
References: <CABcj=tmsNGP5UWp7=QXj-zoiq1_jBKHybqyAxw43pDKZCFvsdg@mail.gmail.com>
 <18b98e86-cfd6-9936-3ab4-cafb394f1156@openlilylib.org>
 <b76c559d-2890-adbe-310a-af3474a5ba97@t-online.de>
 <da024ada-e8ac-033a-70ef-2419bdcf684a@openlilylib.org>
 <58172103-3342-7b7b-d9f7-0752dd1b6be9@wxs.nl>
 <780efd57-2891-94b3-152a-f42cfbad51c3@openlilylib.org>
 <rtcfyrej8jmq.dlg@nililand.de>
 <0c471780-0b5e-911d-9a8e-37b9668cdb06@gmail.com>
 <536EFB63-64A8-44C1-9E0B-CDFB3F66ADDD@openlilylib.org>
 <23139.55341.737778.253458@gargle.gargle.HOWL>
 <9d52f0a2-560e-90f5-afd4-d468954c22e4@gmail.com>
 <F109E19B-E528-4D5B-8B67-225D714A6022@openlilylib.org>
Message-ID: <6ff5777d3dc670e13fcd9e78dc3eaa51@openlilylib.org>

21. Januar 2018 05:44, "Dirk Laurie" <dirk.laurie at gmail.com> schrieb:

> 2018-01-21 2:44 GMT+02:00 Urs Liska <lists at openlilylib.org>:
> 
>> Of course, but that's beside the point as of course you *can* use any font in LilyPond. But there
>> are no finer options such as detailed implicit selection of font weights, optical sizes (although
>> it does so for notation font!), openType features. But even worse, there's really no useful
>> paragraph formatting. Paragraphs are as ugly as when you disable hyphenation in LibreOffice.
>> 
>> Developers are of course aware of this and are not happy about it, but there simply is no capacity
>> to do anything about it.
> 
> Another option is to use MusiXTeX instead of LilyPond.

I have skimmed the MusiXTeX manual and found the impression confirmed that I had from reading the music-tex mailing list: both from the input and the output this is no option for me to replace LilyPond.


From lists at openlilylib.org  Sun Jan 21 12:53:08 2018
From: lists at openlilylib.org (lists at openlilylib.org)
Date: Sun, 21 Jan 2018 11:53:08 +0000
Subject: [luatex] First question: Retrieve *family* name of a font / the
 three main families
In-Reply-To: <20180121.075923.654621213281016162.wl@gnu.org>
References: <20180121.075923.654621213281016162.wl@gnu.org>
 <23139.55341.737778.253458@gargle.gargle.HOWL>
 <9d52f0a2-560e-90f5-afd4-d468954c22e4@gmail.com>
 <F109E19B-E528-4D5B-8B67-225D714A6022@openlilylib.org>
Message-ID: <4004beaeaecf81e9c31421f127663741@openlilylib.org>

21. Januar 2018 08:00, "Werner LEMBERG" <wl at gnu.org> schrieb:

>> Of course, but that's beside the point as of course you *can* use
>> any font in LilyPond. But there are no finer options such as
>> detailed implicit selection of font weights, optical sizes (although
>> it does so for notation font!), openType features.
> 
> The last one is not correct. It *can* select openType features (since
> July 2017).

OK, I have to apologize, this has slipped my attention.

> 
> To summarize: LilyPond is using the pango library for selecting
> fonts. What's needed is a `converter' for font names from pango to
> luatex and vice versa.
> 
> Blaming lilypond is actually barking the wrong tree. Pango itself
> uses the fontconfig library to extract font properties, and it would
> be a very useful thing if luatex could understand and handle
> fontconfig data in general. There are certainly far more programs
> that link to pango than programs that use luatex for text
> formatting...

I can't fully comment on that but it sounds reasonable.

> 
>> But even worse, there's really no useful paragraph formatting.
>> Paragraphs are as ugly as when you disable hyphenation in
>> LibreOffice.
> 
> This was the reason that in the beginning of development LilyPond used
> LaTeX as the typsetting backend (and it produced a DVI file, BTW).
> However, this was not a working solution for various reason, thus the
> change from LaTeX to pango.
> 
> I think that LilyPond should not become a `lilyTeX' program. Let's
> LilyPond do what it can best, namely typesetting music, and
> typesetting of larger text blocks should be done by specialized
> programs like luatex. As a consequence, there exists the `lyluatex'
> package as an interface between the two worlds, and thus is it is
> important to make the font name `conversion' as smooth as possible.
> 

To clarify (for others who may not have followed everything too closely), `lyluatex' is the reason we are talking here right now.

For actual text *blocks* it is true, and we could/should try to make Jan-Peter's snippet https://github.com/openlilylib/snippets/tree/master/specific-solutions/xelatex-markup-list more manageable. (Basically that would be the opposite of lyluatex: including segments of LaTeX in LilyPond documents.
However, I think for use cases like music theatre where you have lots of short texts that may not even be real blocks it seems like overkill to invoke LaTeX every time.

At least having hyphenation available would alleviate the most pressing concerns (https://sourceforge.net/p/testlilyissues/issues/5017/ without any follow-up ...)

Urs

> Werner


From luatex at nililand.de  Sun Jan 21 21:29:53 2018
From: luatex at nililand.de (Ulrike Fischer)
Date: Sun, 21 Jan 2018 21:29:53 +0100
Subject: [luatex] First question: Retrieve *family* name of a font / the
	three main families
References: <18b98e86-cfd6-9936-3ab4-cafb394f1156@openlilylib.org>
 <b76c559d-2890-adbe-310a-af3474a5ba97@t-online.de>
 <da024ada-e8ac-033a-70ef-2419bdcf684a@openlilylib.org>
 <58172103-3342-7b7b-d9f7-0752dd1b6be9@wxs.nl>
 <780efd57-2891-94b3-152a-f42cfbad51c3@openlilylib.org>
 <rtcfyrej8jmq.dlg@nililand.de>
 <0c471780-0b5e-911d-9a8e-37b9668cdb06@gmail.com>
Message-ID: <ntcdn7gmpncz$.dlg@nililand.de>

Am Sat, 20 Jan 2018 14:29:04 -0500 schrieb Br. Samuel Springuel:

> When Urs says he wants the font family, then, he's looking for that 
> primary name which would allow a "dumb" program to select the normal, 
> bold, italic, etc. font varieties from that same family.

Then he should probably inspect the definition of 
\csname TU/\rmdefault/m/n\endcsname

and extract the font name "Arial" from the output:

> \TU/Arial(0)/m/n=macro:
->\<->"Arial:mode=node;script=latn;language=DFLT;+tlig;" .


-- 
Ulrike Fischer 
http://www.troubleshooting-tex.de/


From lists at openlilylib.org  Sun Jan 21 22:33:56 2018
From: lists at openlilylib.org (Urs Liska)
Date: Sun, 21 Jan 2018 22:33:56 +0100
Subject: [luatex] First question: Retrieve *family* name of a font / the
 three main families
In-Reply-To: <ntcdn7gmpncz$.dlg@nililand.de>
References: <18b98e86-cfd6-9936-3ab4-cafb394f1156@openlilylib.org>
 <b76c559d-2890-adbe-310a-af3474a5ba97@t-online.de>
 <da024ada-e8ac-033a-70ef-2419bdcf684a@openlilylib.org>
 <58172103-3342-7b7b-d9f7-0752dd1b6be9@wxs.nl>
 <780efd57-2891-94b3-152a-f42cfbad51c3@openlilylib.org>
 <rtcfyrej8jmq.dlg@nililand.de>
 <0c471780-0b5e-911d-9a8e-37b9668cdb06@gmail.com>
 <ntcdn7gmpncz$.dlg@nililand.de>
Message-ID: <460b2d81-c662-a6a1-ec60-1b971d3a8fd7@openlilylib.org>



Am 21.01.2018 um 21:29 schrieb Ulrike Fischer:
> Am Sat, 20 Jan 2018 14:29:04 -0500 schrieb Br. Samuel Springuel:
>
>> When Urs says he wants the font family, then, he's looking for that
>> primary name which would allow a "dumb" program to select the normal,
>> bold, italic, etc. font varieties from that same family.
> Then he should probably inspect the definition of
> \csname TU/\rmdefault/m/n\endcsname
>
> and extract the font name "Arial" from the output:
>
>> \TU/Arial(0)/m/n=macro:
> ->\<->"Arial:mode=node;script=latn;language=DFLT;+tlig;" .
>

I was just about to test what you had suggested earlier (didn't have 
access to my LaTeX environment over the weekend :-( )

I have a hard time to understand your code examples. As far as I can see 
your original code "shows" the definition of \rmdefault in certain 
variants, and it puts in in the log output. If that's correct how would 
I get it not to print to the console but be stored somewhere I can 
process it further, and how would I process it in a way that LaTeX or 
Lua's objects can tell me the "family"?

Sorry if this sounds confusing, but it is because I *am* confused. I 
admit this kind of TeX is an area where I'm not as up to the tasks as 
with other languages ...

Best
Urs




From luatex at nililand.de  Mon Jan 22 10:53:05 2018
From: luatex at nililand.de (Ulrike Fischer)
Date: Mon, 22 Jan 2018 10:53:05 +0100
Subject: [luatex] First question: Retrieve *family* name of a font / the
	three main families
References: <18b98e86-cfd6-9936-3ab4-cafb394f1156@openlilylib.org>
 <b76c559d-2890-adbe-310a-af3474a5ba97@t-online.de>
 <da024ada-e8ac-033a-70ef-2419bdcf684a@openlilylib.org>
 <58172103-3342-7b7b-d9f7-0752dd1b6be9@wxs.nl>
 <780efd57-2891-94b3-152a-f42cfbad51c3@openlilylib.org>
 <rtcfyrej8jmq.dlg@nililand.de>
 <0c471780-0b5e-911d-9a8e-37b9668cdb06@gmail.com>
 <ntcdn7gmpncz$.dlg@nililand.de>
 <460b2d81-c662-a6a1-ec60-1b971d3a8fd7@openlilylib.org>
Message-ID: <1x3r2y4wut4ox$.dlg@nililand.de>

Am Sun, 21 Jan 2018 22:33:56 +0100 schrieb Urs Liska:

>> \csname TU/\rmdefault/m/n\endcsname
>>
>> and extract the font name "Arial" from the output:
>>
>>> \TU/Arial(0)/m/n=macro:
>> ->\<->"Arial:mode=node;script=latn;language=DFLT;+tlig;" .
>>
> 
> I was just about to test what you had suggested earlier (didn't have 
> access to my LaTeX environment over the weekend :-( )
> 
> I have a hard time to understand your code examples. As far as I can see 
> your original code "shows" the definition of \rmdefault in certain 
> variants, and it puts in in the log output. If that's correct how would 
> I get it not to print to the console but be stored somewhere I can 
> process it further, and how would I process it in a way that LaTeX or 
> Lua's objects can tell me the "family"?

Something like this should work:

\documentclass{article}
\usepackage{expl3}
\usepackage{fontspec}
\setmainfont{Arial}
\begin{document}

\ExplSyntaxOn
\newcommand\currentromanfamily{}
\cs_generate_variant:Nn \regex_extract_once:nnNTF {no}

\tl_set:Nx \l_tmpa_tl { \tl_to_str:c {TU/\rmdefault/m/n}}

\regex_extract_once:noNTF
 { \"(.+?)\: }
 {\l_tmpa_tl}
 \l_tmpa_seq
 {
  \tl_set:Nx\currentromanfamily {\seq_item:Nn \l_tmpa_seq {2}} 
 }
 {
  No Match
 }

\ExplSyntaxOff

\currentromanfamily

\end{document}



-- 
Ulrike Fischer 
http://www.troubleshooting-tex.de/


From lists at openlilylib.org  Tue Jan 23 17:06:57 2018
From: lists at openlilylib.org (Urs Liska)
Date: Tue, 23 Jan 2018 17:06:57 +0100
Subject: [luatex] First question: Retrieve *family* name of a font / the
 three main families
In-Reply-To: <1x3r2y4wut4ox$.dlg@nililand.de>
References: <18b98e86-cfd6-9936-3ab4-cafb394f1156@openlilylib.org>
 <b76c559d-2890-adbe-310a-af3474a5ba97@t-online.de>
 <da024ada-e8ac-033a-70ef-2419bdcf684a@openlilylib.org>
 <58172103-3342-7b7b-d9f7-0752dd1b6be9@wxs.nl>
 <780efd57-2891-94b3-152a-f42cfbad51c3@openlilylib.org>
 <rtcfyrej8jmq.dlg@nililand.de>
 <0c471780-0b5e-911d-9a8e-37b9668cdb06@gmail.com>
 <ntcdn7gmpncz$.dlg@nililand.de>
 <460b2d81-c662-a6a1-ec60-1b971d3a8fd7@openlilylib.org>
 <1x3r2y4wut4ox$.dlg@nililand.de>
Message-ID: <e006df8b-1a5c-6520-ebbc-ac45342059ee@openlilylib.org>



Am 22.01.2018 um 10:53 schrieb Ulrike Fischer:
> Am Sun, 21 Jan 2018 22:33:56 +0100 schrieb Urs Liska:
>
>>> \csname TU/\rmdefault/m/n\endcsname
>>>
>>> and extract the font name "Arial" from the output:
>>>
>>>> \TU/Arial(0)/m/n=macro:
>>> ->\<->"Arial:mode=node;script=latn;language=DFLT;+tlig;" .
>>>
>> I was just about to test what you had suggested earlier (didn't have
>> access to my LaTeX environment over the weekend :-( )
>>
>> I have a hard time to understand your code examples. As far as I can see
>> your original code "shows" the definition of \rmdefault in certain
>> variants, and it puts in in the log output. If that's correct how would
>> I get it not to print to the console but be stored somewhere I can
>> process it further, and how would I process it in a way that LaTeX or
>> Lua's objects can tell me the "family"?
> Something like this should work:
>
> \documentclass{article}
> \usepackage{expl3}
> \usepackage{fontspec}
> \setmainfont{Arial}
> \begin{document}
>
> \ExplSyntaxOn
> \newcommand\currentromanfamily{}
> \cs_generate_variant:Nn \regex_extract_once:nnNTF {no}
>
> \tl_set:Nx \l_tmpa_tl { \tl_to_str:c {TU/\rmdefault/m/n}}
>
> \regex_extract_once:noNTF
>   { \"(.+?)\: }
>   {\l_tmpa_tl}
>   \l_tmpa_seq
>   {
>    \tl_set:Nx\currentromanfamily {\seq_item:Nn \l_tmpa_seq {2}}
>   }
>   {
>    No Match
>   }
>
> \ExplSyntaxOff
>
> \currentromanfamily
>
> \end{document}
>
>
>

Indeed this prints the name of the font specified with \setmainfont, but 
I must admit I don't understand any of that code :-(

In order for this to work I would need a) either the family name (which 
it isn't) or the font id (from which I can get to the family and b) all 
three names in one invocation.

With the help of Will Robertson I came up with another approach that 
works - almost.
WIth the following code I correctly have the three family names stored 
in a Lua table:

\documentclass{article}
\usepackage{fontspec}
\setmainfont{texgyrepagella-regular.otf}
\begin{document}

\sffamily

We're in Sans
\begingroup%
   \rmfamily%
   \directlua{
   myfonts = {}
     myfonts.rm = fonts.hashes.identifiers[font.current()].shared.rawdata.metadata['familyname']
   }%
   \sffamily%
   \directlua{
     myfonts.sf = fonts.hashes.identifiers[font.current()].shared.rawdata.metadata['familyname']
   }%
   \ttfamily%
   \directlua{
     myfonts.tt = fonts.hashes.identifiers[font.current()].shared.rawdata.metadata['familyname']
     print("")
     print('Main font: '..myfonts.rm)
     print('Sans font: '..myfonts.sf)
     print('Mono font: '..myfonts.tt)
   }%
\endgroup%
and we should be back in Sans.

\end{document}

This iterates over the three fonts - without actually printing anything 
- and treats every one as the "current" one.
Although I must admit this approach is somewhat strage - like having to 
start a car's engine in order to determine its colour.

However, one problem is left which I didn't manage to solve: I need all 
this from within one Lua function. But when I wrap everything in *one* 
Lua chunk the font selection doesn't seem to work like other 
tex.print()-ing:

\begingroup%
   \rmfamily%
   \directlua{
   myfonts = {}
     tex.print('\noexpand\\rmfamily')
     myfonts.rm = fonts.hashes.identifiers[font.current()].shared.rawdata.metadata['familyname']
     tex.print('\noexpand\\sffamily')
     myfonts.sf = fonts.hashes.identifiers[font.current()].shared.rawdata.metadata['familyname']
     tex.print('\noexpand\\ttfamily')
     myfonts.tt = fonts.hashes.identifiers[font.current()].shared.rawdata.metadata['familyname']
     print("")
     print('Main font: '..myfonts.rm)
     print('Sans font: '..myfonts.sf)
     print('Mono font: '..myfonts.tt)
   }%
\endgroup%


While this compiles the three fonts always show the font that is active 
before the function starts to execute.

So is there a way to select one of the three predefined font families 
*from within Lua* so subsequent statements in the same Lua chunk see the 
results?

Urs

From pragma at wxs.nl  Tue Jan 23 17:47:07 2018
From: pragma at wxs.nl (Hans Hagen)
Date: Tue, 23 Jan 2018 17:47:07 +0100
Subject: [luatex] First question: Retrieve *family* name of a font / the
 three main families
In-Reply-To: <e006df8b-1a5c-6520-ebbc-ac45342059ee@openlilylib.org>
References: <18b98e86-cfd6-9936-3ab4-cafb394f1156@openlilylib.org>
 <b76c559d-2890-adbe-310a-af3474a5ba97@t-online.de>
 <da024ada-e8ac-033a-70ef-2419bdcf684a@openlilylib.org>
 <58172103-3342-7b7b-d9f7-0752dd1b6be9@wxs.nl>
 <780efd57-2891-94b3-152a-f42cfbad51c3@openlilylib.org>
 <rtcfyrej8jmq.dlg@nililand.de>
 <0c471780-0b5e-911d-9a8e-37b9668cdb06@gmail.com>
 <ntcdn7gmpncz$.dlg@nililand.de>
 <460b2d81-c662-a6a1-ec60-1b971d3a8fd7@openlilylib.org>
 <1x3r2y4wut4ox$.dlg@nililand.de>
 <e006df8b-1a5c-6520-ebbc-ac45342059ee@openlilylib.org>
Message-ID: <7265cdf8-8259-5a3a-f736-ab4fee51f53e@wxs.nl>

On 1/23/2018 5:06 PM, Urs Liska wrote:
> 
> 
> Am 22.01.2018 um 10:53 schrieb Ulrike Fischer:
>> Am Sun, 21 Jan 2018 22:33:56 +0100 schrieb Urs Liska:
>>
>>>> \csname TU/\rmdefault/m/n\endcsname
>>>>
>>>> and extract the font name "Arial" from the output:
>>>>
>>>>> \TU/Arial(0)/m/n=macro:
>>>> ->\<->"Arial:mode=node;script=latn;language=DFLT;+tlig;" .
>>>>
>>> I was just about to test what you had suggested earlier (didn't have
>>> access to my LaTeX environment over the weekend :-( )
>>>
>>> I have a hard time to understand your code examples. As far as I can see
>>> your original code "shows" the definition of \rmdefault in certain
>>> variants, and it puts in in the log output. If that's correct how would
>>> I get it not to print to the console but be stored somewhere I can
>>> process it further, and how would I process it in a way that LaTeX or
>>> Lua's objects can tell me the "family"?
>> Something like this should work:
>>
>> \documentclass{article}
>> \usepackage{expl3}
>> \usepackage{fontspec}
>> \setmainfont{Arial}
>> \begin{document}
>>
>> \ExplSyntaxOn
>> \newcommand\currentromanfamily{}
>> \cs_generate_variant:Nn \regex_extract_once:nnNTF {no}
>>
>> \tl_set:Nx \l_tmpa_tl { \tl_to_str:c {TU/\rmdefault/m/n}}
>>
>> \regex_extract_once:noNTF
>> ? { \"(.+?)\: }
>> ? {\l_tmpa_tl}
>> ? \l_tmpa_seq
>> ? {
>> ?? \tl_set:Nx\currentromanfamily {\seq_item:Nn \l_tmpa_seq {2}}
>> ? }
>> ? {
>> ?? No Match
>> ? }
>>
>> \ExplSyntaxOff
>>
>> \currentromanfamily
>>
>> \end{document}
>>
>>
>>
> 
> Indeed this prints the name of the font specified with \setmainfont, but 
> I must admit I don't understand any of that code :-(
> 
> In order for this to work I would need a) either the family name (which 
> it isn't) or the font id (from which I can get to the family and b) all 
> three names in one invocation.
> 
> With the help of Will Robertson I came up with another approach that 
> works - almost.
> WIth the following code I correctly have the three family names stored 
> in a Lua table:
> 
> \documentclass{article}
> \usepackage{fontspec}
> \setmainfont{texgyrepagella-regular.otf}
> \begin{document}
> 
> \sffamily
> 
> We're in Sans
> \begingroup%
>  ? \rmfamily%
>  ? \directlua{
>  ? myfonts = {}
>  ??? myfonts.rm = 
> fonts.hashes.identifiers[font.current()].shared.rawdata.metadata['familyname'] 
> 
>  ? }%
>  ? \sffamily%
>  ? \directlua{
>  ??? myfonts.sf = 
> fonts.hashes.identifiers[font.current()].shared.rawdata.metadata['familyname'] 
> 
>  ? }%
>  ? \ttfamily%
>  ? \directlua{
>  ??? myfonts.tt = 
> fonts.hashes.identifiers[font.current()].shared.rawdata.metadata['familyname'] 
> 
>  ??? print("")
>  ??? print('Main font: '..myfonts.rm)
>  ??? print('Sans font: '..myfonts.sf)
>  ??? print('Mono font: '..myfonts.tt)
>  ? }%
> \endgroup%
> and we should be back in Sans.
> 
> \end{document}
> 
> This iterates over the three fonts - without actually printing anything 
> - and treats every one as the "current" one.
> Although I must admit this approach is somewhat strage - like having to 
> start a car's engine in order to determine its colour.
> 
> However, one problem is left which I didn't manage to solve: I need all 
> this from within one Lua function. But when I wrap everything in *one* 
> Lua chunk the font selection doesn't seem to work like other 
> tex.print()-ing:
> 
> \begingroup%
>  ? \rmfamily%
>  ? \directlua{
>  ? myfonts = {}
>  ??? tex.print('\noexpand\\rmfamily')
>  ??? myfonts.rm = 
> fonts.hashes.identifiers[font.current()].shared.rawdata.metadata['familyname'] 
> 
>  ??? tex.print('\noexpand\\sffamily')
>  ??? myfonts.sf = 
> fonts.hashes.identifiers[font.current()].shared.rawdata.metadata['familyname'] 
> 
>  ??? tex.print('\noexpand\\ttfamily')
>  ??? myfonts.tt = 
> fonts.hashes.identifiers[font.current()].shared.rawdata.metadata['familyname'] 
> 
>  ??? print("")
>  ??? print('Main font: '..myfonts.rm)
>  ??? print('Sans font: '..myfonts.sf)
>  ??? print('Mono font: '..myfonts.tt)
>  ? }%
> \endgroup%
> 
> 
> While this compiles the three fonts always show the font that is active 
> before the function starts to execute.
> 
> So is there a way to select one of the three predefined font families 
> *from within Lua* so subsequent statements in the same Lua chunk see the 
> results?
I'm not sure if this thread belongs to this list as it relates more to a 
macro package than to luatex but anyhow, you can do something like this 
(untested):

\begingroup
   \rmfamily \edef\rmfamilyid{\fontid\font}%
   \ssfamily \edef\ssfamilyid{\fontid\font}%
   \ttfamily \edef\ttfamilyid{\fontid\font}%
   \directlua{
     myfonts = { }
     myfonts.rm = 
fonts.hashes.identifiers[\rmfamilyid].shared.rawdata.metadata['familyname']
     myfonts.sf = 
fonts.hashes.identifiers[\ssfamilyid].shared.rawdata.metadata['familyname']
     myfonts.tt = 
fonts.hashes.identifiers[\ttfamilyid].shared.rawdata.metadata['familyname']
     print("")
     print('Main font: '..myfonts.rm)
     print('Sans font: '..myfonts.sf)
     print('Mono font: '..myfonts.tt)
   }%
\endgroup

or just

\begingroup
   \rmfamily \edef\rmfamilyid{\fontid\font}%
   \ssfamily \edef\ssfamilyid{\fontid\font}%
   \ttfamily \edef\ttfamilyid{\fontid\font}%
   \directlua{
     print('Main font: 
'..fonts.hashes.identifiers[\rmfamilyid].shared.rawdata.metadata['familyname'])
     print('Sans font: 
'..fonts.hashes.identifiers[\ssfamilyid].shared.rawdata.metadata['familyname'])
     print('Mono font: 
'..fonts.hashes.identifiers[\ttfamilyid].shared.rawdata.metadata['familyname'])
   }%
\endgroup

Hans


-----------------------------------------------------------------
                                           Hans Hagen | PRAGMA ADE
               Ridderstraat 27 | 8061 GH Hasselt | The Netherlands
        tel: 038 477 53 69 | www.pragma-ade.nl | www.pragma-pod.nl
-----------------------------------------------------------------

From lists at openlilylib.org  Wed Jan 24 10:23:24 2018
From: lists at openlilylib.org (Urs Liska)
Date: Wed, 24 Jan 2018 10:23:24 +0100
Subject: [luatex] First question: Retrieve *family* name of a font / the
 three main families
In-Reply-To: <7265cdf8-8259-5a3a-f736-ab4fee51f53e@wxs.nl>
References: <18b98e86-cfd6-9936-3ab4-cafb394f1156@openlilylib.org>
 <b76c559d-2890-adbe-310a-af3474a5ba97@t-online.de>
 <da024ada-e8ac-033a-70ef-2419bdcf684a@openlilylib.org>
 <58172103-3342-7b7b-d9f7-0752dd1b6be9@wxs.nl>
 <780efd57-2891-94b3-152a-f42cfbad51c3@openlilylib.org>
 <rtcfyrej8jmq.dlg@nililand.de>
 <0c471780-0b5e-911d-9a8e-37b9668cdb06@gmail.com>
 <ntcdn7gmpncz$.dlg@nililand.de>
 <460b2d81-c662-a6a1-ec60-1b971d3a8fd7@openlilylib.org>
 <1x3r2y4wut4ox$.dlg@nililand.de>
 <e006df8b-1a5c-6520-ebbc-ac45342059ee@openlilylib.org>
 <7265cdf8-8259-5a3a-f736-ab4fee51f53e@wxs.nl>
Message-ID: <a87b3e2b-80e4-fd06-cb50-ae5acd52e616@openlilylib.org>



Am 23.01.2018 um 17:47 schrieb Hans Hagen:
> On 1/23/2018 5:06 PM, Urs Liska wrote:
>>
>>
>> ...
>>
>>
>> While this compiles the three fonts always show the font that is 
>> active before the function starts to execute.
>>
>> So is there a way to select one of the three predefined font families 
>> *from within Lua* so subsequent statements in the same Lua chunk see 
>> the results?
> I'm not sure if this thread belongs to this list as it relates more to 
> a macro package than to luatex

I see that - by now. Originally I thought I was looking for the right 
incantation to ask Lua for the relevant information. Actually I still 
think it would be good if it were available as some property in the font 
tables.

> but anyhow, you can do something like this (untested):
>
> \begingroup
> ? \rmfamily \edef\rmfamilyid{\fontid\font}%
> ? \ssfamily \edef\ssfamilyid{\fontid\font}%
> ? \ttfamily \edef\ttfamilyid{\fontid\font}%
> ? \directlua{
> ??? myfonts = { }
> ??? myfonts.rm = 
> fonts.hashes.identifiers[\rmfamilyid].shared.rawdata.metadata['familyname']
> ??? myfonts.sf = 
> fonts.hashes.identifiers[\ssfamilyid].shared.rawdata.metadata['familyname']
> ??? myfonts.tt = 
> fonts.hashes.identifiers[\ttfamilyid].shared.rawdata.metadata['familyname']
> ??? print("")
> ??? print('Main font: '..myfonts.rm)
> ??? print('Sans font: '..myfonts.sf)
> ??? print('Mono font: '..myfonts.tt)
> ? }%
> \endgroup
>
> or just
>
> \begingroup
> ? \rmfamily \edef\rmfamilyid{\fontid\font}%
> ? \ssfamily \edef\ssfamilyid{\fontid\font}%
> ? \ttfamily \edef\ttfamilyid{\fontid\font}%
> ? \directlua{
> ??? print('Main font: 
> '..fonts.hashes.identifiers[\rmfamilyid].shared.rawdata.metadata['familyname'])
> ??? print('Sans font: 
> '..fonts.hashes.identifiers[\ssfamilyid].shared.rawdata.metadata['familyname'])
> ??? print('Mono font: 
> '..fonts.hashes.identifiers[\ttfamilyid].shared.rawdata.metadata['familyname'])
> ? }%
> \endgroup
>

Thank you, this finally made it to a working state. Instead of the print 
statements I set these values to entries in a table which I can then 
read in the Lua part.

Thank you to all contributors to this thread.
Best
Urs

> Hans
>
>
> -----------------------------------------------------------------
> ????????????????????????????????????????? Hans Hagen | PRAGMA ADE
> ????????????? Ridderstraat 27 | 8061 GH Hasselt | The Netherlands
> ?????? tel: 038 477 53 69 | www.pragma-ade.nl | www.pragma-pod.nl
> -----------------------------------------------------------------


From eduardoochs at gmail.com  Mon Jan 29 19:26:57 2018
From: eduardoochs at gmail.com (Eduardo Ochs)
Date: Mon, 29 Jan 2018 16:26:57 -0200
Subject: [luatex] Inspecting a \def from LuaTeX
Message-ID: <CADs++6gD5i1L9h8VEp8F5=c0ZRKqPga_RahAHxksOaXDG_fwCw@mail.gmail.com>

Hi list,

Is there a way to inspect the contents of a \def from Lua in LuaTeX?
If I do, say,

  \def\hello{Hello}

I know how to see the sequence of tokens in \hello by running
"\show\hello" in a TeX prompt... is there something similar that can
be done from Lua?

  Thanks in advance!
    Eduardo Ochs
    http://angg.twu.net/luatex.html

From pragma at wxs.nl  Tue Jan 30 09:13:02 2018
From: pragma at wxs.nl (Hans Hagen)
Date: Tue, 30 Jan 2018 09:13:02 +0100
Subject: [luatex] Inspecting a \def from LuaTeX
In-Reply-To: <CADs++6gD5i1L9h8VEp8F5=c0ZRKqPga_RahAHxksOaXDG_fwCw@mail.gmail.com>
References: <CADs++6gD5i1L9h8VEp8F5=c0ZRKqPga_RahAHxksOaXDG_fwCw@mail.gmail.com>
Message-ID: <e4ade856-c6f5-5882-f13d-4a3d0235587d@wxs.nl>

On 1/29/2018 7:26 PM, Eduardo Ochs wrote:
> Hi list,
> 
> Is there a way to inspect the contents of a \def from Lua in LuaTeX?
> If I do, say,
> 
>    \def\hello{Hello}
> 
> I know how to see the sequence of tokens in \hello by running
> "\show\hello" in a TeX prompt... is there something similar that can
> be done from Lua?
You can try:

\starttext

\def\alpha#1#2{beta#1gamma#2delta}

\directlua{print(token.get_macro("alpha"))}
\directlua{print(token.get_meaning("alpha"))}

\directlua{print(token.set_macro("alpha","whatever"))}

\directlua{print(token.get_macro("alpha"))}
\directlua{print(token.get_meaning("alpha"))}

\stoptext

(these helpers still have a somewhat experimental status but they will 
stay)

Hans


-----------------------------------------------------------------
                                           Hans Hagen | PRAGMA ADE
               Ridderstraat 27 | 8061 GH Hasselt | The Netherlands
        tel: 038 477 53 69 | www.pragma-ade.nl | www.pragma-pod.nl
-----------------------------------------------------------------

From luatex at nililand.de  Tue Jan 30 22:56:35 2018
From: luatex at nililand.de (Ulrike Fischer)
Date: Tue, 30 Jan 2018 22:56:35 +0100
Subject: [luatex] =-syntax in \hyphenation no longer works
Message-ID: <1xei0igj1xngn.dlg@nililand.de>

As has been reported on tex.sx the =-syntax in \hyphenation seems to
be broken in luatex 1.07:
https://tex.stackexchange.com/questions/412894/hyphenation-problem-in-luatex-after-miktex-update

It fails for me in miktex (with luatex 1.07.0) and in texlive when I
use a development luatex. With the default luatex 1.0.4 it works as
expected.

In context it doesn't work either:

\starttext
\hyphenation{Ba-den=W?rt-tem-berg}
\hsize=1pt

Baden-W?rttemberg

\stoptext

 

-- 
Ulrike Fischer 
http://www.troubleshooting-tex.de/


From eduardoochs at gmail.com  Wed Jan 31 19:44:25 2018
From: eduardoochs at gmail.com (Eduardo Ochs)
Date: Wed, 31 Jan 2018 16:44:25 -0200
Subject: [luatex] Inspecting a \def from LuaTeX
In-Reply-To: <e4ade856-c6f5-5882-f13d-4a3d0235587d@wxs.nl>
References: <CADs++6gD5i1L9h8VEp8F5=c0ZRKqPga_RahAHxksOaXDG_fwCw@mail.gmail.com>
 <e4ade856-c6f5-5882-f13d-4a3d0235587d@wxs.nl>
Message-ID: <CADs++6j6hzivaODt4nuduzi_++yHC4HJc4OKg1thbFMn7DmxLg@mail.gmail.com>

Yaaay! Works perfectly, thanks a lot! =)

Two questions...

1) The version of the reference manual here - feb 2017, 1.0.4,

     http://www.luatex.org/svn/trunk/manual/luatex.pdf

   seems to describe a smaller token library and doesn't mention
   token.get_meaning... where do I find the updated manual?

   Btw 1: this page points to the link above:

     http://wiki.luatex.org/index.php/Documentation_and_help

   Btw 2: I updated texlive on my system a week ago and I have
   a LuaTeX reference manual here

     /usr/local/texlive/2017/texmf-dist/doc/context/documents/general/manuals/luatex.pdf

   that says "march 2017, version 1.0.5", but it still doesn't mention
   token.get_meaning...

2) How do I get the meaning of a character with catcode 13 ("active")?
   For example, here?

     \catcode`?=13 \def?{\Delta}

Cheers!
  Eduardo Ochs
  http://angg.twu.net/luatex.html

On Tue, Jan 30, 2018 at 6:13 AM, Hans Hagen <pragma at wxs.nl> wrote:
> On 1/29/2018 7:26 PM, Eduardo Ochs wrote:
>>
>> Hi list,
>>
>> Is there a way to inspect the contents of a \def from Lua in LuaTeX?
>> If I do, say,
>>
>>    \def\hello{Hello}
>>
>> I know how to see the sequence of tokens in \hello by running
>> "\show\hello" in a TeX prompt... is there something similar that can
>> be done from Lua?
>
> You can try:
>
> \starttext
>
> \def\alpha#1#2{beta#1gamma#2delta}
>
> \directlua{print(token.get_macro("alpha"))}
> \directlua{print(token.get_meaning("alpha"))}
>
> \directlua{print(token.set_macro("alpha","whatever"))}
>
> \directlua{print(token.get_macro("alpha"))}
> \directlua{print(token.get_meaning("alpha"))}
>
> \stoptext
>
> (these helpers still have a somewhat experimental status but they will stay)
>
> Hans
>
>
> -----------------------------------------------------------------
>                                           Hans Hagen | PRAGMA ADE
>               Ridderstraat 27 | 8061 GH Hasselt | The Netherlands
>        tel: 038 477 53 69 | www.pragma-ade.nl | www.pragma-pod.nl
> -----------------------------------------------------------------


