From listas at tex-tipografia.com  Wed Apr  4 18:45:05 2018
From: listas at tex-tipografia.com (Javier Bezos)
Date: Wed, 04 Apr 2018 18:45:05 +0200
Subject: [luatex] New bidi in babel
Message-ID: <5AC50111.4050206@tex-tipografia.com>

I've just published a first version of a new bidi algorithm
for babel. It works with both L and R texts, and it changes
the font if necessary, so that the features are the right
ones (mainly the Script, which is essential in Arabic).

No doubt there are still some issues, so I invite you
to try it out and report errors (and make suggestions).
It's on

https://github.com/latex3/latex2e/tree/master/required/babel

There is a sample file under samples (lua-bidibasic.tex / pdf).

Javier





From patrick at gundla.ch  Fri Apr  6 16:00:23 2018
From: patrick at gundla.ch (Patrick Gundlach)
Date: Fri, 6 Apr 2018 16:00:23 +0200
Subject: [luatex] --output-dir from Lua
Message-ID: <296FA2D6-9180-4D92-8723-5B60C38C78D5@gundla.ch>

Hi all,

can I get the value of the command-line parameter --output-dir from within Lua?

Patrick




From d.p.carlisle at gmail.com  Fri Apr  6 17:11:30 2018
From: d.p.carlisle at gmail.com (David Carlisle)
Date: Fri, 6 Apr 2018 16:11:30 +0100
Subject: [luatex] --output-dir from Lua
In-Reply-To: <296FA2D6-9180-4D92-8723-5B60C38C78D5@gundla.ch>
References: <296FA2D6-9180-4D92-8723-5B60C38C78D5@gundla.ch>
Message-ID: <CAEW6iOiO7dofaG02cc+9i=+uM6YW3ckOpzKLfR9OW0962UiMfw@mail.gmail.com>

There may be other ways but:

\directlua{
local i=0
while (arg[i] \string~= nil) do
i = i+1
if ((arg[i] == '--output-dir') or (arg[i] == '-output-dir')) then
  print('\string\n\string\nthis: ' .. arg[i+1])
end
end
}

\bye


seems to work

On 6 April 2018 at 15:00, Patrick Gundlach <patrick at gundla.ch> wrote:
> Hi all,
>
> can I get the value of the command-line parameter --output-dir from within Lua?
>
> Patrick
>
>
>

From harald.hanche-olsen at ntnu.no  Tue Apr 10 15:04:15 2018
From: harald.hanche-olsen at ntnu.no (Harald Hanche-Olsen)
Date: Tue, 10 Apr 2018 15:04:15 +0200
Subject: [luatex] Placement of subscripts with the STIX fonts v 2
Message-ID: <etPan.5accb64f.726af3aa.180fc@ntnu.no>

Consider this code:

\documentclass{article}
\RequirePackage{fontspec,unicode-math}
\setmainfont{STIX Two Text}
\setmathfont{STIX Two Math}
\begin{document}
$\gamma_{e}\ne\gamma_{\mathrm{e}}$
\showthe\textfont4
\end{document}

When I run this in the frozen TL2017 (LuaTeX version 1.0.4),
the subscript on the left gets a negative kern, tucking it in under the gamma.
This does not happen to the one on the right.

That negative kern comes from the font (character?12057).
The font STIX2Math.otf is?Version 2.00 b137 according to otfinfo.

In a recent exchange with Ulrike Fischer on the tex.SE chat,
I have learned that this also happens with LuaTeX 1.0.6 on TL2017.
On TL2018, however, she gets no kern at all on either side.

This seems wrong. Perhaps there was a change between LuaTeX 1.0.7 and 1.0.8,
or it could be related to changes in unicode-math.sty.

Replacing \mathrm by \symrm helps (on TL2017), so I don't have an immediate
problem with this.

FWIW, the example works as expected with XeTeX.
(Still on TL2017. I don't have TL2018 installed.)

? Harald
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://tug.org/pipermail/luatex/attachments/20180410/149c9e7f/attachment.html>

From patrick at gundla.ch  Mon Apr 16 17:39:42 2018
From: patrick at gundla.ch (Patrick Gundlach)
Date: Mon, 16 Apr 2018 17:39:42 +0200
Subject: [luatex] --output-dir from Lua
In-Reply-To: <CAEW6iOiO7dofaG02cc+9i=+uM6YW3ckOpzKLfR9OW0962UiMfw@mail.gmail.com>
References: <296FA2D6-9180-4D92-8723-5B60C38C78D5@gundla.ch>
 <CAEW6iOiO7dofaG02cc+9i=+uM6YW3ckOpzKLfR9OW0962UiMfw@mail.gmail.com>
Message-ID: <55B5C872-9DF1-4DA8-B136-DFEB8EA3D277@gundla.ch>



> ten days ago David Carlisle wrote:
> 
> There may be other ways but:

[...]

> seems to work

indeed, that works fine. Thank you very much. Looking at the solution I should have been able to answer myself, but I was so fixed at looking for some kind of tex.* value that could be accessed from Lua, that I did not think of the "trivial" solution. 

Thanks again, David

Patrick




From arthur.reutenauer at normalesup.org  Wed Apr 18 19:34:55 2018
From: arthur.reutenauer at normalesup.org (Arthur Reutenauer)
Date: Wed, 18 Apr 2018 19:34:55 +0200
Subject: [luatex] Indic scripts
In-Reply-To: <d3499a05-541b-3e69-b2de-ab2b6a7ba608@umiacs.umd.edu>
References: <bb2d6b0ecc9b7ca38d7c2f444ee0afa5@umiacs.umd.edu>
 <20180324111543.GA1023757@phare.normalesup.org>
 <02ddee6e-8ba6-ff92-dd71-93ae1b1710df@umiacs.umd.edu>
 <20180325152045.GB1596506@phare.normalesup.org>
 <d3499a05-541b-3e69-b2de-ab2b6a7ba608@umiacs.umd.edu>
Message-ID: <20180418173454.GB2471420@phare.normalesup.org>

On Mon, Mar 26, 2018 at 09:22:21PM -0400, Mike Maxwell wrote:
> On 3/25/2018 11:20 AM, Arthur Reutenauer wrote:
>> luaffi and similar experiments are an effort to create an interface
>> between LuaTeX and libraries such as HarfBuzz; they are not about making
>> LuaTeX use HarfBuzz (or similar).
> 
> I'm not quite sure what you mean here.  Perhaps by "making LuaTeX use
> HarfBuzz", you mean forcing it to use only HarfBuzz.  If that's what you
> mean, no worries; as long as I could turn on its use of HarfBuzz (whether by
> command line parameter or a TeX command), that would be fine.

  No, I meant that LuaTeX still won?t support complex scripts natively.
There needs to be quite a lot of support from the macro package, and of
course HarfBuzz needs to be available as a library, which I don?t see
happening any time soon in TeX Live.  Now that the article is available
publicly, you can check for yourself: https://www.guitex.org/home/images/ArsTeXnica/AT023/arstexnica23.pdf
pp. 70-76.

	Best,

		Arthur

From henrimenke at gmail.com  Thu Apr 19 13:15:38 2018
From: henrimenke at gmail.com (Henri Menke)
Date: Thu, 19 Apr 2018 23:15:38 +1200
Subject: [luatex] node.new does not accept subtype as string
Message-ID: <663987fd-8dcb-52cf-31eb-3687dd08cdab@gmail.com>

Dear list,

I was trying to dissect math lists and insert my own trash there.
According to the LuaTeX manual for node.new one can supply id and
subtype as strings.  That means that this

   node.new(18,5)

should be equivalent to

   node.new("noad","rel")

Unfortunately this does not create a noad of subtype rel but subtype
ord.  It seems as if the numbers of the subtypes correspond to their
index in node_subtypes_noad in texnodes.w.

I just wonder, is this a bug or am I doing it wrong?  A non-working
minimal example can be found below.

Cheers, Henri

---

\directlua{
  local n = node.new("noad","rel")
  assert(n.subtype == 5)
}
\bye

From luigi.scarso at gmail.com  Thu Apr 19 13:48:31 2018
From: luigi.scarso at gmail.com (luigi scarso)
Date: Thu, 19 Apr 2018 13:48:31 +0200
Subject: [luatex] Luatex 1.07.0 announcement
Message-ID: <CAG5iGsDkTt7K1rcczhY7_8D3gcDO8+eh=rm7FZ+3y5Byv4+bbg@mail.gmail.com>

==============================================================
LuaTeX 1.07 2018-01-17
==============================================================

(1) This release brings Lua 5.3 to LuaTeX. We have tested an experimental
version
for a few months and not encountered issues.

(2) If you use Lua 5.3 you should be aware of a few changes in the language
and
its implementation. Numbers are now either integers or floats but are cast
automatically.

(3) In some cases (e.g. string.format) there is a more strict check. A
float always
has a decimal appended when serialized, so 1 becomes 1.0 as string.

(4) We keep supporting the bit32 library on top of the new bit operators.
Be aware
of the fact that currently LuajitTeX does not have these operators.

(5) Performance of LuaTeX with Lua 5.3 can be slightly better than with 5.2
but this
really depends on your usage of Lua. In practice there should be no
slowdown.

(6) We are aware of possible substantial slowdown of string.format
depending on the
platform and compiler. This depends on Lua too and will be resolved in due
time.

(7) If you want to test with Lua 5.3 then have to build LuaTeX with
--lua53. Because
ConTeXt will switch to 5.3 after this release there will be binaries
available at the
ConTeXt garden.

(8) The 2018 TeXlive distribution will ship with LuaTeX using Lua 5.2 but
there will
likely be an additional binary LuaTeX53 available.

(9) From 2019 TeXlive will ship with LuaTeX and Lua 5.3 as default. We
provide --lua52
as build flag for a while. By then we might be looking at Lua 5.4 already.

(10) There are the usual patches and cleanups and a few small additions
(mentioned
in the manual) but there have been no fundamental changes in the API (apart
from
removing depricated and undocumented functionality).



The LuaTeX team
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://tug.org/pipermail/luatex/attachments/20180419/1f0592a4/attachment.html>

From j.hagen at xs4all.nl  Thu Apr 19 15:12:27 2018
From: j.hagen at xs4all.nl (Hans Hagen)
Date: Thu, 19 Apr 2018 15:12:27 +0200
Subject: [luatex] node.new does not accept subtype as string
In-Reply-To: <663987fd-8dcb-52cf-31eb-3687dd08cdab@gmail.com>
References: <663987fd-8dcb-52cf-31eb-3687dd08cdab@gmail.com>
Message-ID: <235fa802-c480-654a-b5db-5fc136ed47aa@xs4all.nl>

On 4/19/2018 1:15 PM, Henri Menke wrote:
> Dear list,
> 
> I was trying to dissect math lists and insert my own trash there.
> According to the LuaTeX manual for node.new one can supply id and
> subtype as strings.  That means that this
> 
>     node.new(18,5)
> 
> should be equivalent to
> 
>     node.new("noad","rel")
> 
> Unfortunately this does not create a noad of subtype rel but subtype
> ord.  It seems as if the numbers of the subtypes correspond to their
> index in node_subtypes_noad in texnodes.w.

node.subtypes("noad")

will give you back the subtypes and numbers

> I just wonder, is this a bug or am I doing it wrong?  A non-working
> minimal example can be found below.
not a bug .. the subtype field is only used when allocating a whatsit 
because these are different (memory wise) per subtype

so, for your noad you need

n.subtype = 5 -- rel

Hans


-----------------------------------------------------------------
                                           Hans Hagen | PRAGMA ADE
               Ridderstraat 27 | 8061 GH Hasselt | The Netherlands
        tel: 038 477 53 69 | www.pragma-ade.nl | www.pragma-pod.nl
-----------------------------------------------------------------

From listas at tex-tipografia.com  Thu Apr 19 18:44:27 2018
From: listas at tex-tipografia.com (Javier Bezos)
Date: Thu, 19 Apr 2018 18:44:27 +0200
Subject: [luatex] Misplaced letter
In-Reply-To: <de10cf81-4f6b-8a79-872b-11676cfc9e44@wxs.nl>
References: <5A32C199.5050904@tex-tipografia.com>
 <7nsv8n7gr66h$.dlg@nililand.de> <5A33F82F.4050207@tex-tipografia.com>
 <a047df53-5d18-f128-6c0f-454f97771322@wxs.nl>
 <5A36126C.3070907@tex-tipografia.com>
 <CAG5iGsDuN9WTSbrr26JaaZH+n2aXvfVzpXG7-B46b+FX6meCHw@mail.gmail.com>
 <de10cf81-4f6b-8a79-872b-11676cfc9e44@wxs.nl>
Message-ID: <5AD8C76B.7090901@tex-tipografia.com>

A few months ago:

 >>  Already done and published :
 >>  https://www.guitex.org/home/it/numero-23-aprile-2017

 > Thank you for the pointer. Unfortunately access is restricted.

At last :-). Access has been just opened.

Javier

From luigi.scarso at gmail.com  Thu Apr 19 18:48:27 2018
From: luigi.scarso at gmail.com (luigi scarso)
Date: Thu, 19 Apr 2018 18:48:27 +0200
Subject: [luatex] Misplaced letter
In-Reply-To: <5AD8C76B.7090901@tex-tipografia.com>
References: <5A32C199.5050904@tex-tipografia.com>
 <7nsv8n7gr66h$.dlg@nililand.de>
 <5A33F82F.4050207@tex-tipografia.com>
 <a047df53-5d18-f128-6c0f-454f97771322@wxs.nl>
 <5A36126C.3070907@tex-tipografia.com>
 <CAG5iGsDuN9WTSbrr26JaaZH+n2aXvfVzpXG7-B46b+FX6meCHw@mail.gmail.com>
 <de10cf81-4f6b-8a79-872b-11676cfc9e44@wxs.nl>
 <5AD8C76B.7090901@tex-tipografia.com>
Message-ID: <CAG5iGsBbLKtLxT3=S675ni3xod43r9mKWbvvzw71aMh+Q-AR3A@mail.gmail.com>

On Thu, Apr 19, 2018 at 6:44 PM, Javier Bezos <listas at tex-tipografia.com>
wrote:

> A few months ago:
>
> >>  Already done and published :
> >>  https://www.guitex.org/home/it/numero-23-aprile-2017
>
> > Thank you for the pointer. Unfortunately access is restricted.
>
> At last :-). Access has been just opened.
>
> Javier
>
There were a message , like the current one in

https://www.guitex.org/home/it/numero-24-ottobre-2017
(accessibile solo ai soci GuIT fino al 15/10/2018)


-- 
luigi
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://tug.org/pipermail/luatex/attachments/20180419/2255e1dd/attachment.html>

From henrimenke at gmail.com  Thu Apr 19 23:49:01 2018
From: henrimenke at gmail.com (Henri Menke)
Date: Fri, 20 Apr 2018 09:49:01 +1200
Subject: [luatex] Cannot register callback in \everymath
Message-ID: <1524174541.18581.108.camel@gmail.com>

Dear list,

It seems as if callbacks are not registered if I'm doing it inside \everymath.
The idea is to have a callback in "process_input_buffer", which only acts in
math mode. ?To have that semi-automatically, I wanted to register it in
\everymath and deregister after math mode using \aftergroup. ?However, the
callback is simply ignored in that constellation. ?MWE is below.

Cheers, Henri

---

\begingroup
\catcode`\%=12
\let\\=\relax
\directlua{
function smartlig ( s )
????s = s:gsub ( "%->", "\\rightarrow " )
????s = s:gsub ( "<%-", "\\leftarrow " )
? return s
end
}
\endgroup

\def\SmartligOn{\directlua{callback.register("process_input_buffer", smartlig)}}
\def\SmartligOff{\directlua{callback.register("process_input_buffer", false)}}

\everymath{\SmartligOn\aftergroup\SmartligOff}

$a->b$, $c<-d$

\SmartligOn
$a->b$, $c<-d$
\SmartligOff

$a->b$, $c<-d$
\bye


From henrimenke at gmail.com  Fri Apr 20 05:52:44 2018
From: henrimenke at gmail.com (Henri Menke)
Date: Fri, 20 Apr 2018 15:52:44 +1200
Subject: [luatex] How to access user-defined kerning
Message-ID: <1524196364.18581.112.camel@gmail.com>

Dear list,

I'm trying to determine the kerning between two letters (here A and V). ?For the
sake of this example I'm inserting negative kerning of -400/1000 em. ?However,
when I examine the kern in the kerning callback this massive enhancement of the
negative kern doesn't show up but I only see the kerning from the font itself.

How can I access the user-defined kerns? ?MWE is below.

Cheers, Henri

---

\input luaotfload.sty

\directlua{
local function show_kerns(head)
???for item in node.traverse(head) do
??????if item.id == node.id("glyph") and item.char == 65 then
?????????% Get current char and font
?????????local nut = node.direct.todirect(item)
?????????local char = node.direct.getchar(nut)
?????????local font = node.direct.getfont(nut)
?????????print(font)
?????????% Get next char and font
?????????local next = node.next(item)
?????????local nextnut = node.direct.todirect(next)
?????????local nextchar = node.direct.getchar(nextnut)
?????????local nextfont = node.direct.getfont(nextnut)
?????????% Determine the kern
?????????local data = fonts.hashes.identifiers[font]
?????????local kern = fonts.handlers.otf.getkern(data,char,nextchar)
?????????print(kern)
??????end
???end
end
%
luatexbase.add_to_callback("kerning",
???????????????????????????function(head)
??????????????????????????????show_kerns(head)
??????????????????????????????node.kerning(head)
???????????????????????????end,
???????????????????????????"show_kerns")
}

\directlua{
fonts.handlers.otf.addfeature{
???name = "ktest",
???type = "kern",
???data = { ["A"] = { ["V"] =??-400 } } % make them overlap for the example
}
}

\font\test="Latin Modern Roman:+ktest"\test
AV

\bye

From Herbert.Voss at fu-berlin.de  Fri Apr 20 07:47:39 2018
From: Herbert.Voss at fu-berlin.de (Herbert Voss)
Date: Fri, 20 Apr 2018 07:47:39 +0200
Subject: [luatex] How to access user-defined kerning
In-Reply-To: <1524196364.18581.112.camel@gmail.com>
References: <1524196364.18581.112.camel@gmail.com>
Message-ID: <90f0119a-1a75-15cb-9fc1-71ff322d6d26@fu-berlin.de>

Am 20.04.2018 um 05:52 schrieb Henri Menke:

> I'm trying to determine the kerning between two letters (here A and V). ?For the
> sake of this example I'm inserting negative kerning of -400/1000 em. ?However,
> when I examine the kern in the kerning callback this massive enhancement of the
> negative kern doesn't show up but I only see the kerning from the font itself.
>
> How can I access the user-defined kerns? ?MWE is below.

no problem with

\input luaotfload.sty

\directlua{
 ? fonts.handlers.otf.addfeature{
 ??? name = "ktest",
 ??? type = "kern",
 ??? data = {
 ????? ["A"] = { ["V"] =? -400 } } % make them overlap for the example
 ? }
}

AV

\font\test="Latin Modern Roman:+ktest" at 11pt
\test
AV

\bye


This is LuaTeX, Version 1.07.0 (TeX Live 2018)


Herbert
-------------- next part --------------
A non-text attachment was scrubbed...
Name: Bildschirmfoto vom 2018-04-20 07-46-25.png
Type: image/png
Size: 2010 bytes
Desc: not available
URL: <http://tug.org/pipermail/luatex/attachments/20180420/6fb16b9f/attachment.png>

From henrimenke at gmail.com  Fri Apr 20 08:24:09 2018
From: henrimenke at gmail.com (Henri Menke)
Date: Fri, 20 Apr 2018 18:24:09 +1200
Subject: [luatex] How to access user-defined kerning
In-Reply-To: <90f0119a-1a75-15cb-9fc1-71ff322d6d26@fu-berlin.de>
References: <1524196364.18581.112.camel@gmail.com>
 <90f0119a-1a75-15cb-9fc1-71ff322d6d26@fu-berlin.de>
Message-ID: <1524205449.18581.114.camel@gmail.com>

On Fri, 2018-04-20 at 07:47 +0200, Herbert Voss wrote:
> Am 20.04.2018 um 05:52 schrieb Henri Menke:
> 
> > 
> > I'm trying to determine the kerning between two letters (here A and V). ?For
> > the
> > sake of this example I'm inserting negative kerning of -400/1000 em.
> > ?However,
> > when I examine the kern in the kerning callback this massive enhancement of
> > the
> > negative kern doesn't show up but I only see the kerning from the font
> > itself.
> > 
> > How can I access the user-defined kerns? ?MWE is below.
> no problem with

No, that is not my problem. ?The kern is correct in the output. ?However, I
cannot inspect the kern from within the "kerning" callback. ?The user-defined
kern is not added inside the kerning callback and I want to know how to query it
(see the line annotated with <--).

\input luaotfload.sty

\directlua{
local function show_kerns(head)
???for item in node.traverse(head) do
??????if item.id == node.id("glyph") and item.char == 65 then
?????????% Get current char and font
?????????local nut = node.direct.todirect(item)
?????????local char = node.direct.getchar(nut)
?????????local font = node.direct.getfont(nut)
?????????print(font) % <-- the kern is wrong here
?????????% Get next char and font
?????????local next = node.next(item)
?????????local nextnut = node.direct.todirect(next)
?????????local nextchar = node.direct.getchar(nextnut)
?????????local nextfont = node.direct.getfont(nextnut)
?????????% Determine the kern
?????????local data = fonts.hashes.identifiers[font]
?????????local kern = fonts.handlers.otf.getkern(data,char,nextchar)
?????????print(kern)
??????end
???end
end
%
luatexbase.add_to_callback("kerning",
???????????????????????????function(head)
??????????????????????????????show_kerns(head)
??????????????????????????????node.kerning(head)
???????????????????????????end,
???????????????????????????"show_kerns")
}

\directlua{
fonts.handlers.otf.addfeature{
???name = "ktest",
???type = "kern",
???data = { ["A"] = { ["V"] =??-400 } } % make them overlap for the example
}
}

\font\test="Latin Modern Roman:+ktest"\test
AV

\bye

> 
> \input luaotfload.sty
> 
> \directlua{
> ?? fonts.handlers.otf.addfeature{
> ???? name = "ktest",
> ???? type = "kern",
> ???? data = {
> ?????? ["A"] = { ["V"] =? -400 } } % make them overlap for the example
> ?? }
> }
> 
> AV
> 
> \font\test="Latin Modern Roman:+ktest" at 11pt
> \test
> AV
> 
> \bye
> 
> 
> This is LuaTeX, Version 1.07.0 (TeX Live 2018)
> 
> 
> Herbert


From j.hagen at xs4all.nl  Fri Apr 20 08:39:30 2018
From: j.hagen at xs4all.nl (Hans Hagen)
Date: Fri, 20 Apr 2018 08:39:30 +0200
Subject: [luatex] How to access user-defined kerning
In-Reply-To: <1524205449.18581.114.camel@gmail.com>
References: <1524196364.18581.112.camel@gmail.com>
 <90f0119a-1a75-15cb-9fc1-71ff322d6d26@fu-berlin.de>
 <1524205449.18581.114.camel@gmail.com>
Message-ID: <cfa986e3-83f7-6896-7c52-f5998c396a2a@xs4all.nl>

On 4/20/2018 8:24 AM, Henri Menke wrote:
> On Fri, 2018-04-20 at 07:47 +0200, Herbert Voss wrote:
>> Am 20.04.2018 um 05:52 schrieb Henri Menke:
>>
>>>
>>> I'm trying to determine the kerning between two letters (here A and V). ?For
>>> the
>>> sake of this example I'm inserting negative kerning of -400/1000 em.
>>>  ?However,
>>> when I examine the kern in the kerning callback this massive enhancement of
>>> the
>>> negative kern doesn't show up but I only see the kerning from the font
>>> itself.
>>>
>>> How can I access the user-defined kerns? ?MWE is below.
>> no problem with
> 
> No, that is not my problem. ?The kern is correct in the output. ?However, I
> cannot inspect the kern from within the "kerning" callback. ?The user-defined
> kern is not added inside the kerning callback and I want to know how to query it
> (see the line annotated with <--).
the kerning and ligaturing callbacks are for text (an deven then only 
make sense for traditional fonts with a kern and ligature table)

rendering math is done completely different and is a two pass process; 
there are often two code paths, one for traditonal math and one for 
opentype and opentype

kerning/glueing there is done based on character classes, math 
parameters and specific font information (the initial math list is more 
complex than a textual node list)

eventualy the typoeset math becomes a sequence of regular nodes injected 
in the list that makes a paragraph

Hans

-----------------------------------------------------------------
                                           Hans Hagen | PRAGMA ADE
               Ridderstraat 27 | 8061 GH Hasselt | The Netherlands
        tel: 038 477 53 69 | www.pragma-ade.nl | www.pragma-pod.nl
-----------------------------------------------------------------

From henrimenke at gmail.com  Fri Apr 20 08:43:52 2018
From: henrimenke at gmail.com (Henri Menke)
Date: Fri, 20 Apr 2018 18:43:52 +1200
Subject: [luatex] How to access user-defined kerning
In-Reply-To: <cfa986e3-83f7-6896-7c52-f5998c396a2a@xs4all.nl>
References: <1524196364.18581.112.camel@gmail.com>
 <90f0119a-1a75-15cb-9fc1-71ff322d6d26@fu-berlin.de>
 <1524205449.18581.114.camel@gmail.com>
 <cfa986e3-83f7-6896-7c52-f5998c396a2a@xs4all.nl>
Message-ID: <1524206632.18581.115.camel@gmail.com>

On Fri, 2018-04-20 at 08:39 +0200, Hans Hagen wrote:
> On 4/20/2018 8:24 AM, Henri Menke wrote:
> > 
> > On Fri, 2018-04-20 at 07:47 +0200, Herbert Voss wrote:
> > > 
> > > Am 20.04.2018 um 05:52 schrieb Henri Menke:
> > > 
> > > > 
> > > > 
> > > > I'm trying to determine the kerning between two letters (here A and V).
> > > > ?For
> > > > the
> > > > sake of this example I'm inserting negative kerning of -400/1000 em.
> > > > ??However,
> > > > when I examine the kern in the kerning callback this massive enhancement
> > > > of
> > > > the
> > > > negative kern doesn't show up but I only see the kerning from the font
> > > > itself.
> > > > 
> > > > How can I access the user-defined kerns? ?MWE is below.
> > > no problem with
> > No, that is not my problem. ?The kern is correct in the output. ?However, I
> > cannot inspect the kern from within the "kerning" callback. ?The user-
> > defined
> > kern is not added inside the kerning callback and I want to know how to
> > query it
> > (see the line annotated with <--).
> the kerning and ligaturing callbacks are for text (an deven then only?
> make sense for traditional fonts with a kern and ligature table)
> 
> rendering math is done completely different and is a two pass process;?
> there are often two code paths, one for traditonal math and one for?
> opentype and opentype
> 

Could it be that you replied to the wrong thread? ?There is no math in this
example.

> kerning/glueing there is done based on character classes, math?
> parameters and specific font information (the initial math list is more?
> complex than a textual node list)
> 
> eventualy the typoeset math becomes a sequence of regular nodes injected?
> in the list that makes a paragraph
> 
> Hans
> 
> -----------------------------------------------------------------
> ???????????????????????????????????????????Hans Hagen | PRAGMA ADE
> ???????????????Ridderstraat 27 | 8061 GH Hasselt | The Netherlands
> ????????tel: 038 477 53 69 | www.pragma-ade.nl | www.pragma-pod.nl
> -----------------------------------------------------------------

From j.hagen at xs4all.nl  Fri Apr 20 09:11:58 2018
From: j.hagen at xs4all.nl (Hans Hagen)
Date: Fri, 20 Apr 2018 09:11:58 +0200
Subject: [luatex] How to access user-defined kerning
In-Reply-To: <1524196364.18581.112.camel@gmail.com>
References: <1524196364.18581.112.camel@gmail.com>
Message-ID: <3a7b078b-1f7a-282f-0edc-f314530553cd@xs4all.nl>

On 4/20/2018 5:52 AM, Henri Menke wrote:
> Dear list,
> 
> I'm trying to determine the kerning between two letters (here A and V). ?For the
> sake of this example I'm inserting negative kerning of -400/1000 em. ?However,
> when I examine the kern in the kerning callback this massive enhancement of the
> negative kern doesn't show up but I only see the kerning from the font itself.
> 
> How can I access the user-defined kerns? ?MWE is below.

no real answer but there is nreal need to go nuts in your code

local function show_kerns(head)
     local glyph = node.id("glyph")
     for item in node.traverse(head) do
         if item.id == glyph then
             local char = item.char
             if char == 65 then
                 local font = item.font
                 print(font,char)
                 local next     = item.next
                 if next.id == glyph then
                   local nextchar = next.char
                   local nextfont = next.font
                   local data = fonts.hashes.identifiers[font]
                   local kern = 
fonts.handlers.otf.getkern(data,char,nextchar)
                   print(kern)
                 end
             end
         end
     end
end

that said, what you could do is the loop over the to be packed list (so 
later) and then look for a left math node and then start looking at the 
characters and kerns


function foo(head)
     local glyph = node.id("glyph")
     local math  = node.id("math")
     local current = head
     while current do
         if current.id == math then
             current = current.next
             while current do
                 if current.id == math then
                     break
                 elseif current.id == glyph then
                     local char = current.char
                     if char == 0x1D434 then
                         local font = current.font
                         local next = current.next
                         if next.id == glyph then
                             local nextchar = next.char
                             if char == 0x1D449 then
                                 local nextfont = next.font
                                 local data = fonts.hashes.identifiers[font]
                                 local kern = 
fonts.handlers.otf.getkern(data,char,nextchar)
                                 print(char,nextchar,kern)
                             end
                         end
                         current = next
                     else
                         current = current.next
                     end
                 else
                     current = current.next
                 end
             end
         end
         current = current.next
     end
end

depending on the macro package that you need to look at math unicodes 
and even then you might not see a print because there is already a kern

keep in mind that this kind of hackery is macro package dependent so 
your plain test might work out different elsewhere (i haven't tested it 
as i operate in a different environment)


> Cheers, Henri
> 
> ---
> 
> \input luaotfload.sty
> 
> \directlua{
> local function show_kerns(head)
>  ???for item in node.traverse(head) do
>  ??????if item.id == node.id("glyph") and item.char == 65 then
>  ?????????% Get current char and font
>  ?????????local nut = node.direct.todirect(item)
>  ?????????local char = node.direct.getchar(nut)
>  ?????????local font = node.direct.getfont(nut)
>  ?????????print(font)
>  ?????????% Get next char and font
>  ?????????local next = node.next(item)
>  ?????????local nextnut = node.direct.todirect(next)
>  ?????????local nextchar = node.direct.getchar(nextnut)
>  ?????????local nextfont = node.direct.getfont(nextnut)
>  ?????????% Determine the kern
>  ?????????local data = fonts.hashes.identifiers[font]
>  ?????????local kern = fonts.handlers.otf.getkern(data,char,nextchar)
>  ?????????print(kern)
>  ??????end
>  ???end
> end
> %
> luatexbase.add_to_callback("kerning",
>  ???????????????????????????function(head)
>  ??????????????????????????????show_kerns(head)
>  ??????????????????????????????node.kerning(head)
>  ???????????????????????????end,
>  ???????????????????????????"show_kerns")
> }
> 
> \directlua{
> fonts.handlers.otf.addfeature{
>  ???name = "ktest",
>  ???type = "kern",
>  ???data = { ["A"] = { ["V"] =??-400 } } % make them overlap for the example
> }
> }
> 
> \font\test="Latin Modern Roman:+ktest"\test
> AV
> 
> \bye
> 


-- 

-----------------------------------------------------------------
                                           Hans Hagen | PRAGMA ADE
               Ridderstraat 27 | 8061 GH Hasselt | The Netherlands
        tel: 038 477 53 69 | www.pragma-ade.nl | www.pragma-pod.nl
-----------------------------------------------------------------

From j.hagen at xs4all.nl  Fri Apr 20 09:13:38 2018
From: j.hagen at xs4all.nl (Hans Hagen)
Date: Fri, 20 Apr 2018 09:13:38 +0200
Subject: [luatex] Cannot register callback in \everymath
In-Reply-To: <1524174541.18581.108.camel@gmail.com>
References: <1524174541.18581.108.camel@gmail.com>
Message-ID: <bfbf3346-38bf-387b-bd46-d2ddde63733c@xs4all.nl>

On 4/19/2018 11:49 PM, Henri Menke wrote:
> Dear list,
> 
> It seems as if callbacks are not registered if I'm doing it inside \everymath.
> The idea is to have a callback in "process_input_buffer", which only acts in
> math mode. ?To have that semi-automatically, I wanted to register it in
> \everymath and deregister after math mode using \aftergroup. ?However, the
> callback is simply ignored in that constellation. ?MWE is below.
that callback grabs lines so you need parse lines

Hans

-----------------------------------------------------------------
                                           Hans Hagen | PRAGMA ADE
               Ridderstraat 27 | 8061 GH Hasselt | The Netherlands
        tel: 038 477 53 69 | www.pragma-ade.nl | www.pragma-pod.nl
-----------------------------------------------------------------

From j.hagen at xs4all.nl  Fri Apr 20 09:15:27 2018
From: j.hagen at xs4all.nl (Hans Hagen)
Date: Fri, 20 Apr 2018 09:15:27 +0200
Subject: [luatex] How to access user-defined kerning
In-Reply-To: <1524206632.18581.115.camel@gmail.com>
References: <1524196364.18581.112.camel@gmail.com>
 <90f0119a-1a75-15cb-9fc1-71ff322d6d26@fu-berlin.de>
 <1524205449.18581.114.camel@gmail.com>
 <cfa986e3-83f7-6896-7c52-f5998c396a2a@xs4all.nl>
 <1524206632.18581.115.camel@gmail.com>
Message-ID: <b6de895e-a07f-fde8-4603-f56d2c8d9749@xs4all.nl>

On 4/20/2018 8:43 AM, Henri Menke wrote:

> Could it be that you replied to the wrong thread? ?There is no math in this
> example.
whatever ... too many in a row so pick from the answers what you like

(not my habbit to go into such detail on this list but i saw you name -)

(feel free to ask more on the context list)

Hans

-----------------------------------------------------------------
                                           Hans Hagen | PRAGMA ADE
               Ridderstraat 27 | 8061 GH Hasselt | The Netherlands
        tel: 038 477 53 69 | www.pragma-ade.nl | www.pragma-pod.nl
-----------------------------------------------------------------

From listas at tex-tipografia.com  Sun Apr 29 14:45:34 2018
From: listas at tex-tipografia.com (Javier Bezos)
Date: Sun, 29 Apr 2018 14:45:34 +0200
Subject: [luatex] Hyphen char vs discretionary (bug?)
Message-ID: <5AE5BE6E.30207@tex-tipografia.com>

With the following document:

-------------------------
\directlua{

function test (head)
   texio.write_nl('====')
   texio.write_nl('')
   for item in node.traverse(head) do
     if item.id == node.id'glyph' then
       texio.write(unicode.utf8.char(item.char))
     else
       texio.write('[' .. item.id  .. ']')
     end
   end
   return head
end

callback.register("pre_linebreak_filter", test)
}

12-34

\bye
-------------------------

TexLive 2017 (1.0.4) showed:

[9][0]12-34[14]

But with 2018 (1.07) I get:

[9][0]12[7]34[14][12]

In other words, the hyphen char has been replaced
by a dicretrionary.

Cheers
Javier

From listas at tex-tipografia.com  Sun Apr 29 15:04:28 2018
From: listas at tex-tipografia.com (Javier Bezos)
Date: Sun, 29 Apr 2018 15:04:28 +0200
Subject: [luatex] Hyphen char vs discretionary (bug?)
In-Reply-To: <5AE5BE6E.30207@tex-tipografia.com>
References: <5AE5BE6E.30207@tex-tipografia.com>
Message-ID: <5AE5C2DC.4050108@tex-tipografia.com>

I answer myself -- a new feature, of course:

\automatichyphenmode

Sorry for the noise.

Javier


> With the following document:
>
> -------------------------
> \directlua{
>
> function test (head)
>    texio.write_nl('====')
>    texio.write_nl('')
>    for item in node.traverse(head) do
>      if item.id == node.id'glyph' then
>        texio.write(unicode.utf8.char(item.char))
>      else
>        texio.write('[' .. item.id  .. ']')
>      end
>    end
>    return head
> end
>
> callback.register("pre_linebreak_filter", test)
> }
>
> 12-34
>
> \bye
> -------------------------
>
> TexLive 2017 (1.0.4) showed:
>
> [9][0]12-34[14]
>
> But with 2018 (1.07) I get:
>
> [9][0]12[7]34[14][12]
>
> In other words, the hyphen char has been replaced
> by a dicretrionary.
>
> Cheers
> Javier


From listas at tex-tipografia.com  Mon Apr 30 15:24:16 2018
From: listas at tex-tipografia.com (Javier Bezos)
Date: Mon, 30 Apr 2018 15:24:16 +0200
Subject: [luatex] Hyphen char vs discretionary (bug?)
In-Reply-To: <5AE5C2DC.4050108@tex-tipografia.com>
References: <5AE5BE6E.30207@tex-tipografia.com>
 <5AE5C2DC.4050108@tex-tipografia.com>
Message-ID: <5AE71900.8040904@tex-tipografia.com>

 >    \automatichyphenmode


Well, I'm optimistc by nature and I thought this would fix my
problem. But it doesn't.

The change in the behaviour of luatex wrt hyphens breaks bidi in
babel.  So, I have a couple of more or less urgent questions
(I'm investigating, of course, but I'd like to fix it asap).

1) How can I see if there is a real char - in  pre_linebreak_filter,
to apply the Unicode rule for number-hyphen-number (so that 19-29
doesn't become 29-19 in R contexts).

2) If not possible, which is the best alternative? A possibility
is to read the 'replace' list in the disc node, but I wonder if
there is a simpler approach.

Javier

----------------------------
----------------------------



         With the following document:

         -------------------------
         \directlua{

         function test (head)
            texio.write_nl('====')
            texio.write_nl('')
            for item in node.traverse(head) do
              if item.id == node.id'glyph' then
                texio.write(unicode.utf8.char(item.char))
              else
                texio.write('[' .. item.id  .. ']')
              end
            end
            return head
         end

         callback.register("pre_linebreak_filter", test)
         }

         12-34

         \bye
         -------------------------

         TexLive 2017 (1.0.4) showed:

         [9][0]12-34[14]

         But with 2018 (1.07) I get:

         [9][0]12[7]34[14][12]

         In other words, the hyphen char has been replaced
         by a dicretrionary.

         Cheers
         Javier





From j.hagen at xs4all.nl  Mon Apr 30 16:12:06 2018
From: j.hagen at xs4all.nl (Hans Hagen)
Date: Mon, 30 Apr 2018 16:12:06 +0200
Subject: [luatex] Hyphen char vs discretionary (bug?)
In-Reply-To: <5AE71900.8040904@tex-tipografia.com>
References: <5AE5BE6E.30207@tex-tipografia.com>
 <5AE5C2DC.4050108@tex-tipografia.com> <5AE71900.8040904@tex-tipografia.com>
Message-ID: <b272899f-daef-3b5b-33d1-e33b090478a6@xs4all.nl>

On 4/30/2018 3:24 PM, Javier Bezos wrote:
>  >??? \automatichyphenmode
> 
> 
> Well, I'm optimistc by nature and I thought this would fix my
> problem. But it doesn't.
> 
> The change in the behaviour of luatex wrt hyphens breaks bidi in
> babel.? So, I have a couple of more or less urgent questions
> (I'm investigating, of course, but I'd like to fix it asap).
> 
> 1) How can I see if there is a real char - in? pre_linebreak_filter,
> to apply the Unicode rule for number-hyphen-number (so that 19-29
> doesn't become 29-19 in R contexts).
> 
> 2) If not possible, which is the best alternative? A possibility
> is to read the 'replace' list in the disc node, but I wonder if
> there is a simpler approach.
in case of a disc node you can look at the subtype


-----------------------------------------------------------------
                                           Hans Hagen | PRAGMA ADE
               Ridderstraat 27 | 8061 GH Hasselt | The Netherlands
        tel: 038 477 53 69 | www.pragma-ade.nl | www.pragma-pod.nl
-----------------------------------------------------------------

From listas at tex-tipografia.com  Mon Apr 30 17:02:16 2018
From: listas at tex-tipografia.com (Javier Bezos)
Date: Mon, 30 Apr 2018 17:02:16 +0200
Subject: [luatex] Hyphen char vs discretionary (bug?)
In-Reply-To: <b272899f-daef-3b5b-33d1-e33b090478a6@xs4all.nl>
References: <5AE5BE6E.30207@tex-tipografia.com>
 <5AE5C2DC.4050108@tex-tipografia.com> <5AE71900.8040904@tex-tipografia.com>
 <b272899f-daef-3b5b-33d1-e33b090478a6@xs4all.nl>
Message-ID: <5AE72FF8.7070006@tex-tipografia.com>

Hans,

>> 2) If not possible, which is the best alternative? A possibility
>> is to read the 'replace' list in the disc node, but I wonder if
>> there is a simpler approach.

> in case of a disc node you can look at the subtype

Sure, but the subtype only tells us there is an automatic
disc (=2), not the glyph (which may be changed with
\exhyphenchar). May I assume there is only a single glyph
in the 'replace' node list (namely, the char = \exhyphenchar
when the node list was built)?

Javier

